// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mm.proto

#ifndef PROTOBUF_mm_2eproto__INCLUDED
#define PROTOBUF_mm_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class CheckLoginQRCodeRequest;
class CheckLoginQRCodeRequestDefaultTypeInternal;
extern CheckLoginQRCodeRequestDefaultTypeInternal _CheckLoginQRCodeRequest_default_instance_;
class CheckLoginQRCodeResponse;
class CheckLoginQRCodeResponseDefaultTypeInternal;
extern CheckLoginQRCodeResponseDefaultTypeInternal _CheckLoginQRCodeResponse_default_instance_;
class CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg;
class CheckLoginQRCodeResponse_LoginQRCodeNotifyPkgDefaultTypeInternal;
extern CheckLoginQRCodeResponse_LoginQRCodeNotifyPkgDefaultTypeInternal _CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg_default_instance_;
class GetLoginQRCodeRequest;
class GetLoginQRCodeRequestDefaultTypeInternal;
extern GetLoginQRCodeRequestDefaultTypeInternal _GetLoginQRCodeRequest_default_instance_;
class GetLoginQRCodeResponse;
class GetLoginQRCodeResponseDefaultTypeInternal;
extern GetLoginQRCodeResponseDefaultTypeInternal _GetLoginQRCodeResponse_default_instance_;
class LoginInfo;
class LoginInfoDefaultTypeInternal;
extern LoginInfoDefaultTypeInternal _LoginInfo_default_instance_;
class ManualAuthAccountRequest;
class ManualAuthAccountRequestDefaultTypeInternal;
extern ManualAuthAccountRequestDefaultTypeInternal _ManualAuthAccountRequest_default_instance_;
class ManualAuthAccountRequest_AesKey;
class ManualAuthAccountRequest_AesKeyDefaultTypeInternal;
extern ManualAuthAccountRequest_AesKeyDefaultTypeInternal _ManualAuthAccountRequest_AesKey_default_instance_;
class ManualAuthAccountRequest_Ecdh;
class ManualAuthAccountRequest_EcdhDefaultTypeInternal;
extern ManualAuthAccountRequest_EcdhDefaultTypeInternal _ManualAuthAccountRequest_Ecdh_default_instance_;
class ManualAuthAccountRequest_Ecdh_EcdhKey;
class ManualAuthAccountRequest_Ecdh_EcdhKeyDefaultTypeInternal;
extern ManualAuthAccountRequest_Ecdh_EcdhKeyDefaultTypeInternal _ManualAuthAccountRequest_Ecdh_EcdhKey_default_instance_;
class ManualAuthDeviceRequest;
class ManualAuthDeviceRequestDefaultTypeInternal;
extern ManualAuthDeviceRequestDefaultTypeInternal _ManualAuthDeviceRequest_default_instance_;
class ManualAuthDeviceRequest__Tag2;
class ManualAuthDeviceRequest__Tag2DefaultTypeInternal;
extern ManualAuthDeviceRequest__Tag2DefaultTypeInternal _ManualAuthDeviceRequest__Tag2_default_instance_;
class ManualAuthDeviceRequest__Tag2_TAG3;
class ManualAuthDeviceRequest__Tag2_TAG3DefaultTypeInternal;
extern ManualAuthDeviceRequest__Tag2_TAG3DefaultTypeInternal _ManualAuthDeviceRequest__Tag2_TAG3_default_instance_;
class ManualAuthDeviceRequest__Tag2___Tag2;
class ManualAuthDeviceRequest__Tag2___Tag2DefaultTypeInternal;
extern ManualAuthDeviceRequest__Tag2___Tag2DefaultTypeInternal _ManualAuthDeviceRequest__Tag2___Tag2_default_instance_;
class ManualAuthResponse;
class ManualAuthResponseDefaultTypeInternal;
extern ManualAuthResponseDefaultTypeInternal _ManualAuthResponse_default_instance_;
class ManualAuthResponse_AccountInfo;
class ManualAuthResponse_AccountInfoDefaultTypeInternal;
extern ManualAuthResponse_AccountInfoDefaultTypeInternal _ManualAuthResponse_AccountInfo_default_instance_;
class ManualAuthResponse_AuthParam;
class ManualAuthResponse_AuthParamDefaultTypeInternal;
extern ManualAuthResponse_AuthParamDefaultTypeInternal _ManualAuthResponse_AuthParam_default_instance_;
class ManualAuthResponse_AuthParam_Ecdh;
class ManualAuthResponse_AuthParam_EcdhDefaultTypeInternal;
extern ManualAuthResponse_AuthParam_EcdhDefaultTypeInternal _ManualAuthResponse_AuthParam_Ecdh_default_instance_;
class ManualAuthResponse_AuthParam_Ecdh_EcdhKey;
class ManualAuthResponse_AuthParam_Ecdh_EcdhKeyDefaultTypeInternal;
extern ManualAuthResponse_AuthParam_Ecdh_EcdhKeyDefaultTypeInternal _ManualAuthResponse_AuthParam_Ecdh_EcdhKey_default_instance_;
class ManualAuthResponse_AuthParam_SessionKey;
class ManualAuthResponse_AuthParam_SessionKeyDefaultTypeInternal;
extern ManualAuthResponse_AuthParam_SessionKeyDefaultTypeInternal _ManualAuthResponse_AuthParam_SessionKey_default_instance_;
class ManualAuthResponse_AuthResult;
class ManualAuthResponse_AuthResultDefaultTypeInternal;
extern ManualAuthResponse_AuthResultDefaultTypeInternal _ManualAuthResponse_AuthResult_default_instance_;
class ManualAuthResponse_AuthResult_ErrMsg;
class ManualAuthResponse_AuthResult_ErrMsgDefaultTypeInternal;
extern ManualAuthResponse_AuthResult_ErrMsgDefaultTypeInternal _ManualAuthResponse_AuthResult_ErrMsg_default_instance_;
class ManualAuthResponse_dns_info;
class ManualAuthResponse_dns_infoDefaultTypeInternal;
extern ManualAuthResponse_dns_infoDefaultTypeInternal _ManualAuthResponse_dns_info_default_instance_;
class ManualAuthResponse_dns_info_ip_info;
class ManualAuthResponse_dns_info_ip_infoDefaultTypeInternal;
extern ManualAuthResponse_dns_info_ip_infoDefaultTypeInternal _ManualAuthResponse_dns_info_ip_info_default_instance_;
class ManualAuthResponse_dns_info_ip_info_longlink_ip_info;
class ManualAuthResponse_dns_info_ip_info_longlink_ip_infoDefaultTypeInternal;
extern ManualAuthResponse_dns_info_ip_info_longlink_ip_infoDefaultTypeInternal _ManualAuthResponse_dns_info_ip_info_longlink_ip_info_default_instance_;
class ManualAuthResponse_dns_info_ip_info_shortlink_ip_info;
class ManualAuthResponse_dns_info_ip_info_shortlink_ip_infoDefaultTypeInternal;
extern ManualAuthResponse_dns_info_ip_info_shortlink_ip_infoDefaultTypeInternal _ManualAuthResponse_dns_info_ip_info_shortlink_ip_info_default_instance_;
class ManualAuthResponse_dns_info_redirect_info;
class ManualAuthResponse_dns_info_redirect_infoDefaultTypeInternal;
extern ManualAuthResponse_dns_info_redirect_infoDefaultTypeInternal _ManualAuthResponse_dns_info_redirect_info_default_instance_;
class ManualAuthResponse_dns_info_redirect_info_real_host_info;
class ManualAuthResponse_dns_info_redirect_info_real_host_infoDefaultTypeInternal;
extern ManualAuthResponse_dns_info_redirect_info_real_host_infoDefaultTypeInternal _ManualAuthResponse_dns_info_redirect_info_real_host_info_default_instance_;
class Msg;
class MsgDefaultTypeInternal;
extern MsgDefaultTypeInternal _Msg_default_instance_;
class Msg_RawContent;
class Msg_RawContentDefaultTypeInternal;
extern Msg_RawContentDefaultTypeInternal _Msg_RawContent_default_instance_;
class NewInitRequest;
class NewInitRequestDefaultTypeInternal;
extern NewInitRequestDefaultTypeInternal _NewInitRequest_default_instance_;
class NewInitResponse;
class NewInitResponseDefaultTypeInternal;
extern NewInitResponseDefaultTypeInternal _NewInitResponse_default_instance_;
class NotifyMsg;
class NotifyMsgDefaultTypeInternal;
extern NotifyMsgDefaultTypeInternal _NotifyMsg_default_instance_;
class SKBuiltinBuffer_t;
class SKBuiltinBuffer_tDefaultTypeInternal;
extern SKBuiltinBuffer_tDefaultTypeInternal _SKBuiltinBuffer_t_default_instance_;
class SyncKey;
class SyncKeyDefaultTypeInternal;
extern SyncKeyDefaultTypeInternal _SyncKey_default_instance_;
class SyncKey_MsgKey;
class SyncKey_MsgKeyDefaultTypeInternal;
extern SyncKey_MsgKeyDefaultTypeInternal _SyncKey_MsgKey_default_instance_;
class SyncKey_MsgKey_Key;
class SyncKey_MsgKey_KeyDefaultTypeInternal;
extern SyncKey_MsgKey_KeyDefaultTypeInternal _SyncKey_MsgKey_Key_default_instance_;
class Wxid;
class WxidDefaultTypeInternal;
extern WxidDefaultTypeInternal _Wxid_default_instance_;
class add_chatroom_member_req;
class add_chatroom_member_reqDefaultTypeInternal;
extern add_chatroom_member_reqDefaultTypeInternal _add_chatroom_member_req_default_instance_;
class add_chatroom_member_req_chatroom_info;
class add_chatroom_member_req_chatroom_infoDefaultTypeInternal;
extern add_chatroom_member_req_chatroom_infoDefaultTypeInternal _add_chatroom_member_req_chatroom_info_default_instance_;
class add_chatroom_member_req_member_info;
class add_chatroom_member_req_member_infoDefaultTypeInternal;
extern add_chatroom_member_req_member_infoDefaultTypeInternal _add_chatroom_member_req_member_info_default_instance_;
class add_chatroom_member_resp;
class add_chatroom_member_respDefaultTypeInternal;
extern add_chatroom_member_respDefaultTypeInternal _add_chatroom_member_resp_default_instance_;
class add_chatroom_member_resp_result;
class add_chatroom_member_resp_resultDefaultTypeInternal;
extern add_chatroom_member_resp_resultDefaultTypeInternal _add_chatroom_member_resp_result_default_instance_;
class add_chatroom_member_resp_result_err_msg;
class add_chatroom_member_resp_result_err_msgDefaultTypeInternal;
extern add_chatroom_member_resp_result_err_msgDefaultTypeInternal _add_chatroom_member_resp_result_err_msg_default_instance_;
class common_msg;
class common_msgDefaultTypeInternal;
extern common_msgDefaultTypeInternal _common_msg_default_instance_;
class common_msg_Data;
class common_msg_DataDefaultTypeInternal;
extern common_msg_DataDefaultTypeInternal _common_msg_Data_default_instance_;
class contact_info;
class contact_infoDefaultTypeInternal;
extern contact_infoDefaultTypeInternal _contact_info_default_instance_;
class contact_info_BeiZhu;
class contact_info_BeiZhuDefaultTypeInternal;
extern contact_info_BeiZhuDefaultTypeInternal _contact_info_BeiZhu_default_instance_;
class contact_info_GroupMemberList;
class contact_info_GroupMemberListDefaultTypeInternal;
extern contact_info_GroupMemberListDefaultTypeInternal _contact_info_GroupMemberList_default_instance_;
class contact_info_GroupMemberList_MemberInfo;
class contact_info_GroupMemberList_MemberInfoDefaultTypeInternal;
extern contact_info_GroupMemberList_MemberInfoDefaultTypeInternal _contact_info_GroupMemberList_MemberInfo_default_instance_;
class contact_info_NickName;
class contact_info_NickNameDefaultTypeInternal;
extern contact_info_NickNameDefaultTypeInternal _contact_info_NickName_default_instance_;
class contact_info_PY_SHORT;
class contact_info_PY_SHORTDefaultTypeInternal;
extern contact_info_PY_SHORTDefaultTypeInternal _contact_info_PY_SHORT_default_instance_;
class contact_info_QuanPin;
class contact_info_QuanPinDefaultTypeInternal;
extern contact_info_QuanPinDefaultTypeInternal _contact_info_QuanPin_default_instance_;
class contact_info_REAL_PY_SHORT;
class contact_info_REAL_PY_SHORTDefaultTypeInternal;
extern contact_info_REAL_PY_SHORTDefaultTypeInternal _contact_info_REAL_PY_SHORT_default_instance_;
class contact_info_REAL_QuanPin;
class contact_info_REAL_QuanPinDefaultTypeInternal;
extern contact_info_REAL_QuanPinDefaultTypeInternal _contact_info_REAL_QuanPin_default_instance_;
class create_chatroom_req;
class create_chatroom_reqDefaultTypeInternal;
extern create_chatroom_reqDefaultTypeInternal _create_chatroom_req_default_instance_;
class create_chatroom_req_TAG2;
class create_chatroom_req_TAG2DefaultTypeInternal;
extern create_chatroom_req_TAG2DefaultTypeInternal _create_chatroom_req_TAG2_default_instance_;
class create_chatroom_req_member_info;
class create_chatroom_req_member_infoDefaultTypeInternal;
extern create_chatroom_req_member_infoDefaultTypeInternal _create_chatroom_req_member_info_default_instance_;
class create_chatroom_resp;
class create_chatroom_respDefaultTypeInternal;
extern create_chatroom_respDefaultTypeInternal _create_chatroom_resp_default_instance_;
class create_chatroom_resp_chatroom_avatar;
class create_chatroom_resp_chatroom_avatarDefaultTypeInternal;
extern create_chatroom_resp_chatroom_avatarDefaultTypeInternal _create_chatroom_resp_chatroom_avatar_default_instance_;
class create_chatroom_resp_member_info;
class create_chatroom_resp_member_infoDefaultTypeInternal;
extern create_chatroom_resp_member_infoDefaultTypeInternal _create_chatroom_resp_member_info_default_instance_;
class create_chatroom_resp_member_info_nick_name_info;
class create_chatroom_resp_member_info_nick_name_infoDefaultTypeInternal;
extern create_chatroom_resp_member_info_nick_name_infoDefaultTypeInternal _create_chatroom_resp_member_info_nick_name_info_default_instance_;
class create_chatroom_resp_result;
class create_chatroom_resp_resultDefaultTypeInternal;
extern create_chatroom_resp_resultDefaultTypeInternal _create_chatroom_resp_result_default_instance_;
class create_chatroom_resp_result_err_msg;
class create_chatroom_resp_result_err_msgDefaultTypeInternal;
extern create_chatroom_resp_result_err_msgDefaultTypeInternal _create_chatroom_resp_result_err_msg_default_instance_;
class get_contact_req;
class get_contact_reqDefaultTypeInternal;
extern get_contact_reqDefaultTypeInternal _get_contact_req_default_instance_;
class get_contact_req_TAG7;
class get_contact_req_TAG7DefaultTypeInternal;
extern get_contact_req_TAG7DefaultTypeInternal _get_contact_req_TAG7_default_instance_;
class get_contact_resp;
class get_contact_respDefaultTypeInternal;
extern get_contact_respDefaultTypeInternal _get_contact_resp_default_instance_;
class get_contact_resp_ticket_info;
class get_contact_resp_ticket_infoDefaultTypeInternal;
extern get_contact_resp_ticket_infoDefaultTypeInternal _get_contact_resp_ticket_info_default_instance_;
class mmRes;
class mmResDefaultTypeInternal;
extern mmResDefaultTypeInternal _mmRes_default_instance_;
class mmStr;
class mmStrDefaultTypeInternal;
extern mmStrDefaultTypeInternal _mmStr_default_instance_;
class mm_facing_create_chatroom_req;
class mm_facing_create_chatroom_reqDefaultTypeInternal;
extern mm_facing_create_chatroom_reqDefaultTypeInternal _mm_facing_create_chatroom_req_default_instance_;
class mm_facing_create_chatroom_resp;
class mm_facing_create_chatroom_respDefaultTypeInternal;
extern mm_facing_create_chatroom_respDefaultTypeInternal _mm_facing_create_chatroom_resp_default_instance_;
class mm_facing_create_chatroom_resp_member_info;
class mm_facing_create_chatroom_resp_member_infoDefaultTypeInternal;
extern mm_facing_create_chatroom_resp_member_infoDefaultTypeInternal _mm_facing_create_chatroom_resp_member_info_default_instance_;
class mm_facing_create_chatroom_resp_result;
class mm_facing_create_chatroom_resp_resultDefaultTypeInternal;
extern mm_facing_create_chatroom_resp_resultDefaultTypeInternal _mm_facing_create_chatroom_resp_result_default_instance_;
class mm_facing_create_chatroom_resp_result_err_msg;
class mm_facing_create_chatroom_resp_result_err_msgDefaultTypeInternal;
extern mm_facing_create_chatroom_resp_result_err_msgDefaultTypeInternal _mm_facing_create_chatroom_resp_result_err_msg_default_instance_;
class new_send_app_msg_req;
class new_send_app_msg_reqDefaultTypeInternal;
extern new_send_app_msg_reqDefaultTypeInternal _new_send_app_msg_req_default_instance_;
class new_send_app_msg_req_appmsg_info;
class new_send_app_msg_req_appmsg_infoDefaultTypeInternal;
extern new_send_app_msg_req_appmsg_infoDefaultTypeInternal _new_send_app_msg_req_appmsg_info_default_instance_;
class new_send_app_msg_resp;
class new_send_app_msg_respDefaultTypeInternal;
extern new_send_app_msg_respDefaultTypeInternal _new_send_app_msg_resp_default_instance_;
class new_send_msg_req;
class new_send_msg_reqDefaultTypeInternal;
extern new_send_msg_reqDefaultTypeInternal _new_send_msg_req_default_instance_;
class new_send_msg_req_msg_info;
class new_send_msg_req_msg_infoDefaultTypeInternal;
extern new_send_msg_req_msg_infoDefaultTypeInternal _new_send_msg_req_msg_info_default_instance_;
class new_send_msg_resp;
class new_send_msg_respDefaultTypeInternal;
extern new_send_msg_respDefaultTypeInternal _new_send_msg_resp_default_instance_;
class new_send_msg_resp_result;
class new_send_msg_resp_resultDefaultTypeInternal;
extern new_send_msg_resp_resultDefaultTypeInternal _new_send_msg_resp_result_default_instance_;
class new_sync_req;
class new_sync_reqDefaultTypeInternal;
extern new_sync_reqDefaultTypeInternal _new_sync_req_default_instance_;
class new_sync_req_continue_flag;
class new_sync_req_continue_flagDefaultTypeInternal;
extern new_sync_req_continue_flagDefaultTypeInternal _new_sync_req_continue_flag_default_instance_;
class new_sync_resp;
class new_sync_respDefaultTypeInternal;
extern new_sync_respDefaultTypeInternal _new_sync_resp_default_instance_;
class new_sync_resp_new_msg;
class new_sync_resp_new_msgDefaultTypeInternal;
extern new_sync_resp_new_msgDefaultTypeInternal _new_sync_resp_new_msg_default_instance_;
class op_set_group_nick_name;
class op_set_group_nick_nameDefaultTypeInternal;
extern op_set_group_nick_nameDefaultTypeInternal _op_set_group_nick_name_default_instance_;
class open_wxhb_req;
class open_wxhb_reqDefaultTypeInternal;
extern open_wxhb_reqDefaultTypeInternal _open_wxhb_req_default_instance_;
class open_wxhb_resp;
class open_wxhb_respDefaultTypeInternal;
extern open_wxhb_respDefaultTypeInternal _open_wxhb_resp_default_instance_;
class open_wxhb_resp_TAG1;
class open_wxhb_resp_TAG1DefaultTypeInternal;
extern open_wxhb_resp_TAG1DefaultTypeInternal _open_wxhb_resp_TAG1_default_instance_;
class open_wxhb_resp_TAG1_TAG1;
class open_wxhb_resp_TAG1_TAG1DefaultTypeInternal;
extern open_wxhb_resp_TAG1_TAG1DefaultTypeInternal _open_wxhb_resp_TAG1_TAG1_default_instance_;
class oplog_req;
class oplog_reqDefaultTypeInternal;
extern oplog_reqDefaultTypeInternal _oplog_req_default_instance_;
class oplog_req_TAG1;
class oplog_req_TAG1DefaultTypeInternal;
extern oplog_req_TAG1DefaultTypeInternal _oplog_req_TAG1_default_instance_;
class oplog_req_TAG1_CMD;
class oplog_req_TAG1_CMDDefaultTypeInternal;
extern oplog_req_TAG1_CMDDefaultTypeInternal _oplog_req_TAG1_CMD_default_instance_;
class oplog_req_TAG1_CMD_OPTION;
class oplog_req_TAG1_CMD_OPTIONDefaultTypeInternal;
extern oplog_req_TAG1_CMD_OPTIONDefaultTypeInternal _oplog_req_TAG1_CMD_OPTION_default_instance_;
class oplog_resp;
class oplog_respDefaultTypeInternal;
extern oplog_respDefaultTypeInternal _oplog_resp_default_instance_;
class oplog_resp_result;
class oplog_resp_resultDefaultTypeInternal;
extern oplog_resp_resultDefaultTypeInternal _oplog_resp_result_default_instance_;
class qry_detail_wxhb_req;
class qry_detail_wxhb_reqDefaultTypeInternal;
extern qry_detail_wxhb_reqDefaultTypeInternal _qry_detail_wxhb_req_default_instance_;
class qry_detail_wxhb_resp;
class qry_detail_wxhb_respDefaultTypeInternal;
extern qry_detail_wxhb_respDefaultTypeInternal _qry_detail_wxhb_resp_default_instance_;
class qry_detail_wxhb_resp_TAG1;
class qry_detail_wxhb_resp_TAG1DefaultTypeInternal;
extern qry_detail_wxhb_resp_TAG1DefaultTypeInternal _qry_detail_wxhb_resp_TAG1_default_instance_;
class qry_detail_wxhb_resp_TAG1_TAG1;
class qry_detail_wxhb_resp_TAG1_TAG1DefaultTypeInternal;
extern qry_detail_wxhb_resp_TAG1_TAG1DefaultTypeInternal _qry_detail_wxhb_resp_TAG1_TAG1_default_instance_;
class receive_wxhb_req;
class receive_wxhb_reqDefaultTypeInternal;
extern receive_wxhb_reqDefaultTypeInternal _receive_wxhb_req_default_instance_;
class receive_wxhb_resp;
class receive_wxhb_respDefaultTypeInternal;
extern receive_wxhb_respDefaultTypeInternal _receive_wxhb_resp_default_instance_;
class receive_wxhb_resp_TAG1;
class receive_wxhb_resp_TAG1DefaultTypeInternal;
extern receive_wxhb_resp_TAG1DefaultTypeInternal _receive_wxhb_resp_TAG1_default_instance_;
class receive_wxhb_resp_TAG1_TAG1;
class receive_wxhb_resp_TAG1_TAG1DefaultTypeInternal;
extern receive_wxhb_resp_TAG1_TAG1DefaultTypeInternal _receive_wxhb_resp_TAG1_TAG1_default_instance_;
class revoke_msg_req;
class revoke_msg_reqDefaultTypeInternal;
extern revoke_msg_reqDefaultTypeInternal _revoke_msg_req_default_instance_;
class revoke_msg_resp;
class revoke_msg_respDefaultTypeInternal;
extern revoke_msg_respDefaultTypeInternal _revoke_msg_resp_default_instance_;
class sKBuiltinBufferT;
class sKBuiltinBufferTDefaultTypeInternal;
extern sKBuiltinBufferTDefaultTypeInternal _sKBuiltinBufferT_default_instance_;
class send_emoji_req;
class send_emoji_reqDefaultTypeInternal;
extern send_emoji_reqDefaultTypeInternal _send_emoji_req_default_instance_;
class send_emoji_req_emoji_info;
class send_emoji_req_emoji_infoDefaultTypeInternal;
extern send_emoji_req_emoji_infoDefaultTypeInternal _send_emoji_req_emoji_info_default_instance_;
class send_emoji_req_emoji_info_TAG4;
class send_emoji_req_emoji_info_TAG4DefaultTypeInternal;
extern send_emoji_req_emoji_info_TAG4DefaultTypeInternal _send_emoji_req_emoji_info_TAG4_default_instance_;
class send_emoji_resp;
class send_emoji_respDefaultTypeInternal;
extern send_emoji_respDefaultTypeInternal _send_emoji_resp_default_instance_;
class send_emoji_resp_result;
class send_emoji_resp_resultDefaultTypeInternal;
extern send_emoji_resp_resultDefaultTypeInternal _send_emoji_resp_result_default_instance_;
class set_chatroom_announcement_req;
class set_chatroom_announcement_reqDefaultTypeInternal;
extern set_chatroom_announcement_reqDefaultTypeInternal _set_chatroom_announcement_req_default_instance_;
class set_chatroom_announcement_resp;
class set_chatroom_announcement_respDefaultTypeInternal;
extern set_chatroom_announcement_respDefaultTypeInternal _set_chatroom_announcement_resp_default_instance_;
class transfer_operation_req;
class transfer_operation_reqDefaultTypeInternal;
extern transfer_operation_reqDefaultTypeInternal _transfer_operation_req_default_instance_;
class transfer_operation_resp;
class transfer_operation_respDefaultTypeInternal;
extern transfer_operation_respDefaultTypeInternal _transfer_operation_resp_default_instance_;
class transfer_query_req;
class transfer_query_reqDefaultTypeInternal;
extern transfer_query_reqDefaultTypeInternal _transfer_query_req_default_instance_;
class transfer_query_resp;
class transfer_query_respDefaultTypeInternal;
extern transfer_query_respDefaultTypeInternal _transfer_query_resp_default_instance_;
class verify_user_req;
class verify_user_reqDefaultTypeInternal;
extern verify_user_reqDefaultTypeInternal _verify_user_req_default_instance_;
class verify_user_req_user_info;
class verify_user_req_user_infoDefaultTypeInternal;
extern verify_user_req_user_infoDefaultTypeInternal _verify_user_req_user_info_default_instance_;
class verify_user_resp;
class verify_user_respDefaultTypeInternal;
extern verify_user_respDefaultTypeInternal _verify_user_resp_default_instance_;

namespace protobuf_mm_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_mm_2eproto

// ===================================================================

class SKBuiltinBuffer_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SKBuiltinBuffer_t) */ {
 public:
  SKBuiltinBuffer_t();
  virtual ~SKBuiltinBuffer_t();

  SKBuiltinBuffer_t(const SKBuiltinBuffer_t& from);

  inline SKBuiltinBuffer_t& operator=(const SKBuiltinBuffer_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SKBuiltinBuffer_t& default_instance();

  static inline const SKBuiltinBuffer_t* internal_default_instance() {
    return reinterpret_cast<const SKBuiltinBuffer_t*>(
               &_SKBuiltinBuffer_t_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SKBuiltinBuffer_t* other);

  // implements Message ----------------------------------------------

  inline SKBuiltinBuffer_t* New() const PROTOBUF_FINAL { return New(NULL); }

  SKBuiltinBuffer_t* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SKBuiltinBuffer_t& from);
  void MergeFrom(const SKBuiltinBuffer_t& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SKBuiltinBuffer_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes Buffer = 2;
  bool has_buffer() const;
  void clear_buffer();
  static const int kBufferFieldNumber = 2;
  const ::std::string& buffer() const;
  void set_buffer(const ::std::string& value);
  #if LANG_CXX11
  void set_buffer(::std::string&& value);
  #endif
  void set_buffer(const char* value);
  void set_buffer(const void* value, size_t size);
  ::std::string* mutable_buffer();
  ::std::string* release_buffer();
  void set_allocated_buffer(::std::string* buffer);

  // required uint32 iLen = 1;
  bool has_ilen() const;
  void clear_ilen();
  static const int kILenFieldNumber = 1;
  ::google::protobuf::uint32 ilen() const;
  void set_ilen(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SKBuiltinBuffer_t)
 private:
  void set_has_ilen();
  void clear_has_ilen();
  void set_has_buffer();
  void clear_has_buffer();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr buffer_;
  ::google::protobuf::uint32 ilen_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class mmStr : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mmStr) */ {
 public:
  mmStr();
  virtual ~mmStr();

  mmStr(const mmStr& from);

  inline mmStr& operator=(const mmStr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mmStr& default_instance();

  static inline const mmStr* internal_default_instance() {
    return reinterpret_cast<const mmStr*>(
               &_mmStr_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(mmStr* other);

  // implements Message ----------------------------------------------

  inline mmStr* New() const PROTOBUF_FINAL { return New(NULL); }

  mmStr* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const mmStr& from);
  void MergeFrom(const mmStr& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(mmStr* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string str = 2;
  bool has_str() const;
  void clear_str();
  static const int kStrFieldNumber = 2;
  const ::std::string& str() const;
  void set_str(const ::std::string& value);
  #if LANG_CXX11
  void set_str(::std::string&& value);
  #endif
  void set_str(const char* value);
  void set_str(const char* value, size_t size);
  ::std::string* mutable_str();
  ::std::string* release_str();
  void set_allocated_str(::std::string* str);

  // optional int32 len = 1;
  bool has_len() const;
  void clear_len();
  static const int kLenFieldNumber = 1;
  ::google::protobuf::int32 len() const;
  void set_len(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mmStr)
 private:
  void set_has_len();
  void clear_has_len();
  void set_has_str();
  void clear_has_str();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr str_;
  ::google::protobuf::int32 len_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class mmRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mmRes) */ {
 public:
  mmRes();
  virtual ~mmRes();

  mmRes(const mmRes& from);

  inline mmRes& operator=(const mmRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mmRes& default_instance();

  static inline const mmRes* internal_default_instance() {
    return reinterpret_cast<const mmRes*>(
               &_mmRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(mmRes* other);

  // implements Message ----------------------------------------------

  inline mmRes* New() const PROTOBUF_FINAL { return New(NULL); }

  mmRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const mmRes& from);
  void MergeFrom(const mmRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(mmRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message = 2;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional int32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mmRes)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_message();
  void clear_has_message();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int32 code_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LoginInfo) */ {
 public:
  LoginInfo();
  virtual ~LoginInfo();

  LoginInfo(const LoginInfo& from);

  inline LoginInfo& operator=(const LoginInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginInfo& default_instance();

  static inline const LoginInfo* internal_default_instance() {
    return reinterpret_cast<const LoginInfo*>(
               &_LoginInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(LoginInfo* other);

  // implements Message ----------------------------------------------

  inline LoginInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginInfo& from);
  void MergeFrom(const LoginInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes aesKey = 1;
  bool has_aeskey() const;
  void clear_aeskey();
  static const int kAesKeyFieldNumber = 1;
  const ::std::string& aeskey() const;
  void set_aeskey(const ::std::string& value);
  #if LANG_CXX11
  void set_aeskey(::std::string&& value);
  #endif
  void set_aeskey(const char* value);
  void set_aeskey(const void* value, size_t size);
  ::std::string* mutable_aeskey();
  ::std::string* release_aeskey();
  void set_allocated_aeskey(::std::string* aeskey);

  // optional string guid = 3;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 3;
  const ::std::string& guid() const;
  void set_guid(const ::std::string& value);
  #if LANG_CXX11
  void set_guid(::std::string&& value);
  #endif
  void set_guid(const char* value);
  void set_guid(const char* value, size_t size);
  ::std::string* mutable_guid();
  ::std::string* release_guid();
  void set_allocated_guid(::std::string* guid);

  // optional string androidVer = 5;
  bool has_androidver() const;
  void clear_androidver();
  static const int kAndroidVerFieldNumber = 5;
  const ::std::string& androidver() const;
  void set_androidver(const ::std::string& value);
  #if LANG_CXX11
  void set_androidver(::std::string&& value);
  #endif
  void set_androidver(const char* value);
  void set_androidver(const char* value, size_t size);
  ::std::string* mutable_androidver();
  ::std::string* release_androidver();
  void set_allocated_androidver(::std::string* androidver);

  // optional int32 uin = 2;
  bool has_uin() const;
  void clear_uin();
  static const int kUinFieldNumber = 2;
  ::google::protobuf::int32 uin() const;
  void set_uin(::google::protobuf::int32 value);

  // optional int32 clientVer = 4;
  bool has_clientver() const;
  void clear_clientver();
  static const int kClientVerFieldNumber = 4;
  ::google::protobuf::int32 clientver() const;
  void set_clientver(::google::protobuf::int32 value);

  // optional int32 unknown = 6;
  bool has_unknown() const;
  void clear_unknown();
  static const int kUnknownFieldNumber = 6;
  ::google::protobuf::int32 unknown() const;
  void set_unknown(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LoginInfo)
 private:
  void set_has_aeskey();
  void clear_has_aeskey();
  void set_has_uin();
  void clear_has_uin();
  void set_has_guid();
  void clear_has_guid();
  void set_has_clientver();
  void clear_has_clientver();
  void set_has_androidver();
  void clear_has_androidver();
  void set_has_unknown();
  void clear_has_unknown();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr aeskey_;
  ::google::protobuf::internal::ArenaStringPtr guid_;
  ::google::protobuf::internal::ArenaStringPtr androidver_;
  ::google::protobuf::int32 uin_;
  ::google::protobuf::int32 clientver_;
  ::google::protobuf::int32 unknown_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SyncKey_MsgKey_Key : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SyncKey.MsgKey.Key) */ {
 public:
  SyncKey_MsgKey_Key();
  virtual ~SyncKey_MsgKey_Key();

  SyncKey_MsgKey_Key(const SyncKey_MsgKey_Key& from);

  inline SyncKey_MsgKey_Key& operator=(const SyncKey_MsgKey_Key& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncKey_MsgKey_Key& default_instance();

  static inline const SyncKey_MsgKey_Key* internal_default_instance() {
    return reinterpret_cast<const SyncKey_MsgKey_Key*>(
               &_SyncKey_MsgKey_Key_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(SyncKey_MsgKey_Key* other);

  // implements Message ----------------------------------------------

  inline SyncKey_MsgKey_Key* New() const PROTOBUF_FINAL { return New(NULL); }

  SyncKey_MsgKey_Key* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SyncKey_MsgKey_Key& from);
  void MergeFrom(const SyncKey_MsgKey_Key& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SyncKey_MsgKey_Key* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 key = 2;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  ::google::protobuf::int64 key() const;
  void set_key(::google::protobuf::int64 value);

  // optional int32 type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SyncKey.MsgKey.Key)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_key();
  void clear_has_key();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 key_;
  ::google::protobuf::int32 type_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SyncKey_MsgKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SyncKey.MsgKey) */ {
 public:
  SyncKey_MsgKey();
  virtual ~SyncKey_MsgKey();

  SyncKey_MsgKey(const SyncKey_MsgKey& from);

  inline SyncKey_MsgKey& operator=(const SyncKey_MsgKey& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncKey_MsgKey& default_instance();

  static inline const SyncKey_MsgKey* internal_default_instance() {
    return reinterpret_cast<const SyncKey_MsgKey*>(
               &_SyncKey_MsgKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(SyncKey_MsgKey* other);

  // implements Message ----------------------------------------------

  inline SyncKey_MsgKey* New() const PROTOBUF_FINAL { return New(NULL); }

  SyncKey_MsgKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SyncKey_MsgKey& from);
  void MergeFrom(const SyncKey_MsgKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SyncKey_MsgKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SyncKey_MsgKey_Key Key;

  // accessors -------------------------------------------------------

  // repeated .SyncKey.MsgKey.Key key = 2;
  int key_size() const;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::SyncKey_MsgKey_Key& key(int index) const;
  ::SyncKey_MsgKey_Key* mutable_key(int index);
  ::SyncKey_MsgKey_Key* add_key();
  ::google::protobuf::RepeatedPtrField< ::SyncKey_MsgKey_Key >*
      mutable_key();
  const ::google::protobuf::RepeatedPtrField< ::SyncKey_MsgKey_Key >&
      key() const;

  // optional int32 cnt = 1;
  bool has_cnt() const;
  void clear_cnt();
  static const int kCntFieldNumber = 1;
  ::google::protobuf::int32 cnt() const;
  void set_cnt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SyncKey.MsgKey)
 private:
  void set_has_cnt();
  void clear_has_cnt();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::SyncKey_MsgKey_Key > key_;
  ::google::protobuf::int32 cnt_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SyncKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SyncKey) */ {
 public:
  SyncKey();
  virtual ~SyncKey();

  SyncKey(const SyncKey& from);

  inline SyncKey& operator=(const SyncKey& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncKey& default_instance();

  static inline const SyncKey* internal_default_instance() {
    return reinterpret_cast<const SyncKey*>(
               &_SyncKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(SyncKey* other);

  // implements Message ----------------------------------------------

  inline SyncKey* New() const PROTOBUF_FINAL { return New(NULL); }

  SyncKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SyncKey& from);
  void MergeFrom(const SyncKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SyncKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SyncKey_MsgKey MsgKey;

  // accessors -------------------------------------------------------

  // optional .SyncKey.MsgKey msgkey = 2;
  bool has_msgkey() const;
  void clear_msgkey();
  static const int kMsgkeyFieldNumber = 2;
  const ::SyncKey_MsgKey& msgkey() const;
  ::SyncKey_MsgKey* mutable_msgkey();
  ::SyncKey_MsgKey* release_msgkey();
  void set_allocated_msgkey(::SyncKey_MsgKey* msgkey);

  // optional int32 len = 1;
  bool has_len() const;
  void clear_len();
  static const int kLenFieldNumber = 1;
  ::google::protobuf::int32 len() const;
  void set_len(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SyncKey)
 private:
  void set_has_len();
  void clear_has_len();
  void set_has_msgkey();
  void clear_has_msgkey();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::SyncKey_MsgKey* msgkey_;
  ::google::protobuf::int32 len_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class common_msg_Data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common_msg.Data) */ {
 public:
  common_msg_Data();
  virtual ~common_msg_Data();

  common_msg_Data(const common_msg_Data& from);

  inline common_msg_Data& operator=(const common_msg_Data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const common_msg_Data& default_instance();

  static inline const common_msg_Data* internal_default_instance() {
    return reinterpret_cast<const common_msg_Data*>(
               &_common_msg_Data_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(common_msg_Data* other);

  // implements Message ----------------------------------------------

  inline common_msg_Data* New() const PROTOBUF_FINAL { return New(NULL); }

  common_msg_Data* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const common_msg_Data& from);
  void MergeFrom(const common_msg_Data& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(common_msg_Data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // optional int32 len = 1;
  bool has_len() const;
  void clear_len();
  static const int kLenFieldNumber = 1;
  ::google::protobuf::int32 len() const;
  void set_len(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:common_msg.Data)
 private:
  void set_has_len();
  void clear_has_len();
  void set_has_data();
  void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::int32 len_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class common_msg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:common_msg) */ {
 public:
  common_msg();
  virtual ~common_msg();

  common_msg(const common_msg& from);

  inline common_msg& operator=(const common_msg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const common_msg& default_instance();

  static inline const common_msg* internal_default_instance() {
    return reinterpret_cast<const common_msg*>(
               &_common_msg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(common_msg* other);

  // implements Message ----------------------------------------------

  inline common_msg* New() const PROTOBUF_FINAL { return New(NULL); }

  common_msg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const common_msg& from);
  void MergeFrom(const common_msg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(common_msg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef common_msg_Data Data;

  // accessors -------------------------------------------------------

  // optional .common_msg.Data data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::common_msg_Data& data() const;
  ::common_msg_Data* mutable_data();
  ::common_msg_Data* release_data();
  void set_allocated_data(::common_msg_Data* data);

  // optional int32 type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:common_msg)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_data();
  void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::common_msg_Data* data_;
  ::google::protobuf::int32 type_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Wxid : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Wxid) */ {
 public:
  Wxid();
  virtual ~Wxid();

  Wxid(const Wxid& from);

  inline Wxid& operator=(const Wxid& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Wxid& default_instance();

  static inline const Wxid* internal_default_instance() {
    return reinterpret_cast<const Wxid*>(
               &_Wxid_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(Wxid* other);

  // implements Message ----------------------------------------------

  inline Wxid* New() const PROTOBUF_FINAL { return New(NULL); }

  Wxid* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Wxid& from);
  void MergeFrom(const Wxid& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Wxid* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:Wxid)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Msg_RawContent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Msg.RawContent) */ {
 public:
  Msg_RawContent();
  virtual ~Msg_RawContent();

  Msg_RawContent(const Msg_RawContent& from);

  inline Msg_RawContent& operator=(const Msg_RawContent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg_RawContent& default_instance();

  static inline const Msg_RawContent* internal_default_instance() {
    return reinterpret_cast<const Msg_RawContent*>(
               &_Msg_RawContent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(Msg_RawContent* other);

  // implements Message ----------------------------------------------

  inline Msg_RawContent* New() const PROTOBUF_FINAL { return New(NULL); }

  Msg_RawContent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Msg_RawContent& from);
  void MergeFrom(const Msg_RawContent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Msg_RawContent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string content = 1;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 1;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:Msg.RawContent)
 private:
  void set_has_content();
  void clear_has_content();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Msg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Msg) */ {
 public:
  Msg();
  virtual ~Msg();

  Msg(const Msg& from);

  inline Msg& operator=(const Msg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg& default_instance();

  static inline const Msg* internal_default_instance() {
    return reinterpret_cast<const Msg*>(
               &_Msg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(Msg* other);

  // implements Message ----------------------------------------------

  inline Msg* New() const PROTOBUF_FINAL { return New(NULL); }

  Msg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Msg& from);
  void MergeFrom(const Msg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Msg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Msg_RawContent RawContent;

  // accessors -------------------------------------------------------

  // optional bytes tag8 = 8;
  bool has_tag8() const;
  void clear_tag8();
  static const int kTag8FieldNumber = 8;
  const ::std::string& tag8() const;
  void set_tag8(const ::std::string& value);
  #if LANG_CXX11
  void set_tag8(::std::string&& value);
  #endif
  void set_tag8(const char* value);
  void set_tag8(const void* value, size_t size);
  ::std::string* mutable_tag8();
  ::std::string* release_tag8();
  void set_allocated_tag8(::std::string* tag8);

  // optional string ex_info = 10;
  bool has_ex_info() const;
  void clear_ex_info();
  static const int kExInfoFieldNumber = 10;
  const ::std::string& ex_info() const;
  void set_ex_info(const ::std::string& value);
  #if LANG_CXX11
  void set_ex_info(::std::string&& value);
  #endif
  void set_ex_info(const char* value);
  void set_ex_info(const char* value, size_t size);
  ::std::string* mutable_ex_info();
  ::std::string* release_ex_info();
  void set_allocated_ex_info(::std::string* ex_info);

  // optional string xmlContent = 11;
  bool has_xmlcontent() const;
  void clear_xmlcontent();
  static const int kXmlContentFieldNumber = 11;
  const ::std::string& xmlcontent() const;
  void set_xmlcontent(const ::std::string& value);
  #if LANG_CXX11
  void set_xmlcontent(::std::string&& value);
  #endif
  void set_xmlcontent(const char* value);
  void set_xmlcontent(const char* value, size_t size);
  ::std::string* mutable_xmlcontent();
  ::std::string* release_xmlcontent();
  void set_allocated_xmlcontent(::std::string* xmlcontent);

  // optional .Wxid from_id = 2;
  bool has_from_id() const;
  void clear_from_id();
  static const int kFromIdFieldNumber = 2;
  const ::Wxid& from_id() const;
  ::Wxid* mutable_from_id();
  ::Wxid* release_from_id();
  void set_allocated_from_id(::Wxid* from_id);

  // optional .Wxid to_id = 3;
  bool has_to_id() const;
  void clear_to_id();
  static const int kToIdFieldNumber = 3;
  const ::Wxid& to_id() const;
  ::Wxid* mutable_to_id();
  ::Wxid* release_to_id();
  void set_allocated_to_id(::Wxid* to_id);

  // optional .Msg.RawContent raw = 5;
  bool has_raw() const;
  void clear_raw();
  static const int kRawFieldNumber = 5;
  const ::Msg_RawContent& raw() const;
  ::Msg_RawContent* mutable_raw();
  ::Msg_RawContent* release_raw();
  void set_allocated_raw(::Msg_RawContent* raw);

  // optional int64 serverid = 1;
  bool has_serverid() const;
  void clear_serverid();
  static const int kServeridFieldNumber = 1;
  ::google::protobuf::int64 serverid() const;
  void set_serverid(::google::protobuf::int64 value);

  // optional int32 type = 4;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int32 status = 6;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 6;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional int32 tag7 = 7;
  bool has_tag7() const;
  void clear_tag7();
  static const int kTag7FieldNumber = 7;
  ::google::protobuf::int32 tag7() const;
  void set_tag7(::google::protobuf::int32 value);

  // optional int32 createTime = 9;
  bool has_createtime() const;
  void clear_createtime();
  static const int kCreateTimeFieldNumber = 9;
  ::google::protobuf::int32 createtime() const;
  void set_createtime(::google::protobuf::int32 value);

  // optional int64 svrId = 12;
  bool has_svrid() const;
  void clear_svrid();
  static const int kSvrIdFieldNumber = 12;
  ::google::protobuf::int64 svrid() const;
  void set_svrid(::google::protobuf::int64 value);

  // optional int32 msgKey = 13;
  bool has_msgkey() const;
  void clear_msgkey();
  static const int kMsgKeyFieldNumber = 13;
  ::google::protobuf::int32 msgkey() const;
  void set_msgkey(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Msg)
 private:
  void set_has_serverid();
  void clear_has_serverid();
  void set_has_from_id();
  void clear_has_from_id();
  void set_has_to_id();
  void clear_has_to_id();
  void set_has_type();
  void clear_has_type();
  void set_has_raw();
  void clear_has_raw();
  void set_has_status();
  void clear_has_status();
  void set_has_tag7();
  void clear_has_tag7();
  void set_has_tag8();
  void clear_has_tag8();
  void set_has_createtime();
  void clear_has_createtime();
  void set_has_ex_info();
  void clear_has_ex_info();
  void set_has_xmlcontent();
  void clear_has_xmlcontent();
  void set_has_svrid();
  void clear_has_svrid();
  void set_has_msgkey();
  void clear_has_msgkey();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr tag8_;
  ::google::protobuf::internal::ArenaStringPtr ex_info_;
  ::google::protobuf::internal::ArenaStringPtr xmlcontent_;
  ::Wxid* from_id_;
  ::Wxid* to_id_;
  ::Msg_RawContent* raw_;
  ::google::protobuf::int64 serverid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 tag7_;
  ::google::protobuf::int32 createtime_;
  ::google::protobuf::int64 svrid_;
  ::google::protobuf::int32 msgkey_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class contact_info_NickName : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:contact_info.NickName) */ {
 public:
  contact_info_NickName();
  virtual ~contact_info_NickName();

  contact_info_NickName(const contact_info_NickName& from);

  inline contact_info_NickName& operator=(const contact_info_NickName& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const contact_info_NickName& default_instance();

  static inline const contact_info_NickName* internal_default_instance() {
    return reinterpret_cast<const contact_info_NickName*>(
               &_contact_info_NickName_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(contact_info_NickName* other);

  // implements Message ----------------------------------------------

  inline contact_info_NickName* New() const PROTOBUF_FINAL { return New(NULL); }

  contact_info_NickName* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const contact_info_NickName& from);
  void MergeFrom(const contact_info_NickName& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(contact_info_NickName* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:contact_info.NickName)
 private:
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class contact_info_PY_SHORT : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:contact_info.PY_SHORT) */ {
 public:
  contact_info_PY_SHORT();
  virtual ~contact_info_PY_SHORT();

  contact_info_PY_SHORT(const contact_info_PY_SHORT& from);

  inline contact_info_PY_SHORT& operator=(const contact_info_PY_SHORT& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const contact_info_PY_SHORT& default_instance();

  static inline const contact_info_PY_SHORT* internal_default_instance() {
    return reinterpret_cast<const contact_info_PY_SHORT*>(
               &_contact_info_PY_SHORT_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(contact_info_PY_SHORT* other);

  // implements Message ----------------------------------------------

  inline contact_info_PY_SHORT* New() const PROTOBUF_FINAL { return New(NULL); }

  contact_info_PY_SHORT* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const contact_info_PY_SHORT& from);
  void MergeFrom(const contact_info_PY_SHORT& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(contact_info_PY_SHORT* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:contact_info.PY_SHORT)
 private:
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class contact_info_QuanPin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:contact_info.QuanPin) */ {
 public:
  contact_info_QuanPin();
  virtual ~contact_info_QuanPin();

  contact_info_QuanPin(const contact_info_QuanPin& from);

  inline contact_info_QuanPin& operator=(const contact_info_QuanPin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const contact_info_QuanPin& default_instance();

  static inline const contact_info_QuanPin* internal_default_instance() {
    return reinterpret_cast<const contact_info_QuanPin*>(
               &_contact_info_QuanPin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(contact_info_QuanPin* other);

  // implements Message ----------------------------------------------

  inline contact_info_QuanPin* New() const PROTOBUF_FINAL { return New(NULL); }

  contact_info_QuanPin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const contact_info_QuanPin& from);
  void MergeFrom(const contact_info_QuanPin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(contact_info_QuanPin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:contact_info.QuanPin)
 private:
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class contact_info_BeiZhu : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:contact_info.BeiZhu) */ {
 public:
  contact_info_BeiZhu();
  virtual ~contact_info_BeiZhu();

  contact_info_BeiZhu(const contact_info_BeiZhu& from);

  inline contact_info_BeiZhu& operator=(const contact_info_BeiZhu& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const contact_info_BeiZhu& default_instance();

  static inline const contact_info_BeiZhu* internal_default_instance() {
    return reinterpret_cast<const contact_info_BeiZhu*>(
               &_contact_info_BeiZhu_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(contact_info_BeiZhu* other);

  // implements Message ----------------------------------------------

  inline contact_info_BeiZhu* New() const PROTOBUF_FINAL { return New(NULL); }

  contact_info_BeiZhu* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const contact_info_BeiZhu& from);
  void MergeFrom(const contact_info_BeiZhu& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(contact_info_BeiZhu* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:contact_info.BeiZhu)
 private:
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class contact_info_REAL_PY_SHORT : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:contact_info.REAL_PY_SHORT) */ {
 public:
  contact_info_REAL_PY_SHORT();
  virtual ~contact_info_REAL_PY_SHORT();

  contact_info_REAL_PY_SHORT(const contact_info_REAL_PY_SHORT& from);

  inline contact_info_REAL_PY_SHORT& operator=(const contact_info_REAL_PY_SHORT& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const contact_info_REAL_PY_SHORT& default_instance();

  static inline const contact_info_REAL_PY_SHORT* internal_default_instance() {
    return reinterpret_cast<const contact_info_REAL_PY_SHORT*>(
               &_contact_info_REAL_PY_SHORT_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(contact_info_REAL_PY_SHORT* other);

  // implements Message ----------------------------------------------

  inline contact_info_REAL_PY_SHORT* New() const PROTOBUF_FINAL { return New(NULL); }

  contact_info_REAL_PY_SHORT* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const contact_info_REAL_PY_SHORT& from);
  void MergeFrom(const contact_info_REAL_PY_SHORT& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(contact_info_REAL_PY_SHORT* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:contact_info.REAL_PY_SHORT)
 private:
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class contact_info_REAL_QuanPin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:contact_info.REAL_QuanPin) */ {
 public:
  contact_info_REAL_QuanPin();
  virtual ~contact_info_REAL_QuanPin();

  contact_info_REAL_QuanPin(const contact_info_REAL_QuanPin& from);

  inline contact_info_REAL_QuanPin& operator=(const contact_info_REAL_QuanPin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const contact_info_REAL_QuanPin& default_instance();

  static inline const contact_info_REAL_QuanPin* internal_default_instance() {
    return reinterpret_cast<const contact_info_REAL_QuanPin*>(
               &_contact_info_REAL_QuanPin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(contact_info_REAL_QuanPin* other);

  // implements Message ----------------------------------------------

  inline contact_info_REAL_QuanPin* New() const PROTOBUF_FINAL { return New(NULL); }

  contact_info_REAL_QuanPin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const contact_info_REAL_QuanPin& from);
  void MergeFrom(const contact_info_REAL_QuanPin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(contact_info_REAL_QuanPin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:contact_info.REAL_QuanPin)
 private:
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class contact_info_GroupMemberList_MemberInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:contact_info.GroupMemberList.MemberInfo) */ {
 public:
  contact_info_GroupMemberList_MemberInfo();
  virtual ~contact_info_GroupMemberList_MemberInfo();

  contact_info_GroupMemberList_MemberInfo(const contact_info_GroupMemberList_MemberInfo& from);

  inline contact_info_GroupMemberList_MemberInfo& operator=(const contact_info_GroupMemberList_MemberInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const contact_info_GroupMemberList_MemberInfo& default_instance();

  static inline const contact_info_GroupMemberList_MemberInfo* internal_default_instance() {
    return reinterpret_cast<const contact_info_GroupMemberList_MemberInfo*>(
               &_contact_info_GroupMemberList_MemberInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(contact_info_GroupMemberList_MemberInfo* other);

  // implements Message ----------------------------------------------

  inline contact_info_GroupMemberList_MemberInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  contact_info_GroupMemberList_MemberInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const contact_info_GroupMemberList_MemberInfo& from);
  void MergeFrom(const contact_info_GroupMemberList_MemberInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(contact_info_GroupMemberList_MemberInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string wxid = 1;
  bool has_wxid() const;
  void clear_wxid();
  static const int kWxidFieldNumber = 1;
  const ::std::string& wxid() const;
  void set_wxid(const ::std::string& value);
  #if LANG_CXX11
  void set_wxid(::std::string&& value);
  #endif
  void set_wxid(const char* value);
  void set_wxid(const char* value, size_t size);
  ::std::string* mutable_wxid();
  ::std::string* release_wxid();
  void set_allocated_wxid(::std::string* wxid);

  // optional string nick_name = 2;
  bool has_nick_name() const;
  void clear_nick_name();
  static const int kNickNameFieldNumber = 2;
  const ::std::string& nick_name() const;
  void set_nick_name(const ::std::string& value);
  #if LANG_CXX11
  void set_nick_name(::std::string&& value);
  #endif
  void set_nick_name(const char* value);
  void set_nick_name(const char* value, size_t size);
  ::std::string* mutable_nick_name();
  ::std::string* release_nick_name();
  void set_allocated_nick_name(::std::string* nick_name);

  // optional string inviteer_wxid = 7;
  bool has_inviteer_wxid() const;
  void clear_inviteer_wxid();
  static const int kInviteerWxidFieldNumber = 7;
  const ::std::string& inviteer_wxid() const;
  void set_inviteer_wxid(const ::std::string& value);
  #if LANG_CXX11
  void set_inviteer_wxid(::std::string&& value);
  #endif
  void set_inviteer_wxid(const char* value);
  void set_inviteer_wxid(const char* value, size_t size);
  ::std::string* mutable_inviteer_wxid();
  ::std::string* release_inviteer_wxid();
  void set_allocated_inviteer_wxid(::std::string* inviteer_wxid);

  // optional int32 tag6 = 6;
  bool has_tag6() const;
  void clear_tag6();
  static const int kTag6FieldNumber = 6;
  ::google::protobuf::int32 tag6() const;
  void set_tag6(::google::protobuf::int32 value);

  // optional int32 tag8 = 8;
  bool has_tag8() const;
  void clear_tag8();
  static const int kTag8FieldNumber = 8;
  ::google::protobuf::int32 tag8() const;
  void set_tag8(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:contact_info.GroupMemberList.MemberInfo)
 private:
  void set_has_wxid();
  void clear_has_wxid();
  void set_has_nick_name();
  void clear_has_nick_name();
  void set_has_tag6();
  void clear_has_tag6();
  void set_has_inviteer_wxid();
  void clear_has_inviteer_wxid();
  void set_has_tag8();
  void clear_has_tag8();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr wxid_;
  ::google::protobuf::internal::ArenaStringPtr nick_name_;
  ::google::protobuf::internal::ArenaStringPtr inviteer_wxid_;
  ::google::protobuf::int32 tag6_;
  ::google::protobuf::int32 tag8_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class contact_info_GroupMemberList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:contact_info.GroupMemberList) */ {
 public:
  contact_info_GroupMemberList();
  virtual ~contact_info_GroupMemberList();

  contact_info_GroupMemberList(const contact_info_GroupMemberList& from);

  inline contact_info_GroupMemberList& operator=(const contact_info_GroupMemberList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const contact_info_GroupMemberList& default_instance();

  static inline const contact_info_GroupMemberList* internal_default_instance() {
    return reinterpret_cast<const contact_info_GroupMemberList*>(
               &_contact_info_GroupMemberList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(contact_info_GroupMemberList* other);

  // implements Message ----------------------------------------------

  inline contact_info_GroupMemberList* New() const PROTOBUF_FINAL { return New(NULL); }

  contact_info_GroupMemberList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const contact_info_GroupMemberList& from);
  void MergeFrom(const contact_info_GroupMemberList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(contact_info_GroupMemberList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef contact_info_GroupMemberList_MemberInfo MemberInfo;

  // accessors -------------------------------------------------------

  // repeated .contact_info.GroupMemberList.MemberInfo member = 2;
  int member_size() const;
  void clear_member();
  static const int kMemberFieldNumber = 2;
  const ::contact_info_GroupMemberList_MemberInfo& member(int index) const;
  ::contact_info_GroupMemberList_MemberInfo* mutable_member(int index);
  ::contact_info_GroupMemberList_MemberInfo* add_member();
  ::google::protobuf::RepeatedPtrField< ::contact_info_GroupMemberList_MemberInfo >*
      mutable_member();
  const ::google::protobuf::RepeatedPtrField< ::contact_info_GroupMemberList_MemberInfo >&
      member() const;

  // optional string tag4 = 4;
  bool has_tag4() const;
  void clear_tag4();
  static const int kTag4FieldNumber = 4;
  const ::std::string& tag4() const;
  void set_tag4(const ::std::string& value);
  #if LANG_CXX11
  void set_tag4(::std::string&& value);
  #endif
  void set_tag4(const char* value);
  void set_tag4(const char* value, size_t size);
  ::std::string* mutable_tag4();
  ::std::string* release_tag4();
  void set_allocated_tag4(::std::string* tag4);

  // optional int32 cnt = 1;
  bool has_cnt() const;
  void clear_cnt();
  static const int kCntFieldNumber = 1;
  ::google::protobuf::int32 cnt() const;
  void set_cnt(::google::protobuf::int32 value);

  // optional int32 tag3 = 3;
  bool has_tag3() const;
  void clear_tag3();
  static const int kTag3FieldNumber = 3;
  ::google::protobuf::int32 tag3() const;
  void set_tag3(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:contact_info.GroupMemberList)
 private:
  void set_has_cnt();
  void clear_has_cnt();
  void set_has_tag3();
  void clear_has_tag3();
  void set_has_tag4();
  void clear_has_tag4();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::contact_info_GroupMemberList_MemberInfo > member_;
  ::google::protobuf::internal::ArenaStringPtr tag4_;
  ::google::protobuf::int32 cnt_;
  ::google::protobuf::int32 tag3_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class contact_info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:contact_info) */ {
 public:
  contact_info();
  virtual ~contact_info();

  contact_info(const contact_info& from);

  inline contact_info& operator=(const contact_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const contact_info& default_instance();

  static inline const contact_info* internal_default_instance() {
    return reinterpret_cast<const contact_info*>(
               &_contact_info_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(contact_info* other);

  // implements Message ----------------------------------------------

  inline contact_info* New() const PROTOBUF_FINAL { return New(NULL); }

  contact_info* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const contact_info& from);
  void MergeFrom(const contact_info& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(contact_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef contact_info_NickName NickName;
  typedef contact_info_PY_SHORT PY_SHORT;
  typedef contact_info_QuanPin QuanPin;
  typedef contact_info_BeiZhu BeiZhu;
  typedef contact_info_REAL_PY_SHORT REAL_PY_SHORT;
  typedef contact_info_REAL_QuanPin REAL_QuanPin;
  typedef contact_info_GroupMemberList GroupMemberList;

  // accessors -------------------------------------------------------

  // optional string tag6 = 6;
  bool has_tag6() const;
  void clear_tag6();
  static const int kTag6FieldNumber = 6;
  const ::std::string& tag6() const;
  void set_tag6(const ::std::string& value);
  #if LANG_CXX11
  void set_tag6(::std::string&& value);
  #endif
  void set_tag6(const char* value);
  void set_tag6(const char* value, size_t size);
  ::std::string* mutable_tag6();
  ::std::string* release_tag6();
  void set_allocated_tag6(::std::string* tag6);

  // optional string tag16 = 16;
  bool has_tag16() const;
  void clear_tag16();
  static const int kTag16FieldNumber = 16;
  const ::std::string& tag16() const;
  void set_tag16(const ::std::string& value);
  #if LANG_CXX11
  void set_tag16(::std::string&& value);
  #endif
  void set_tag16(const char* value);
  void set_tag16(const char* value, size_t size);
  ::std::string* mutable_tag16();
  ::std::string* release_tag16();
  void set_allocated_tag16(::std::string* tag16);

  // optional string sheng = 19;
  bool has_sheng() const;
  void clear_sheng();
  static const int kShengFieldNumber = 19;
  const ::std::string& sheng() const;
  void set_sheng(const ::std::string& value);
  #if LANG_CXX11
  void set_sheng(::std::string&& value);
  #endif
  void set_sheng(const char* value);
  void set_sheng(const char* value, size_t size);
  ::std::string* mutable_sheng();
  ::std::string* release_sheng();
  void set_allocated_sheng(::std::string* sheng);

  // optional string shi = 20;
  bool has_shi() const;
  void clear_shi();
  static const int kShiFieldNumber = 20;
  const ::std::string& shi() const;
  void set_shi(const ::std::string& value);
  #if LANG_CXX11
  void set_shi(::std::string&& value);
  #endif
  void set_shi(const char* value);
  void set_shi(const char* value, size_t size);
  ::std::string* mutable_shi();
  ::std::string* release_shi();
  void set_allocated_shi(::std::string* shi);

  // optional string qianming = 21;
  bool has_qianming() const;
  void clear_qianming();
  static const int kQianmingFieldNumber = 21;
  const ::std::string& qianming() const;
  void set_qianming(const ::std::string& value);
  #if LANG_CXX11
  void set_qianming(::std::string&& value);
  #endif
  void set_qianming(const char* value);
  void set_qianming(const char* value, size_t size);
  ::std::string* mutable_qianming();
  ::std::string* release_qianming();
  void set_allocated_qianming(::std::string* qianming);

  // optional string register_body = 25;
  bool has_register_body() const;
  void clear_register_body();
  static const int kRegisterBodyFieldNumber = 25;
  const ::std::string& register_body() const;
  void set_register_body(const ::std::string& value);
  #if LANG_CXX11
  void set_register_body(::std::string&& value);
  #endif
  void set_register_body(const char* value);
  void set_register_body(const char* value, size_t size);
  ::std::string* mutable_register_body();
  ::std::string* release_register_body();
  void set_allocated_register_body(::std::string* register_body);

  // optional string lastMsgTime = 29;
  bool has_lastmsgtime() const;
  void clear_lastmsgtime();
  static const int kLastMsgTimeFieldNumber = 29;
  const ::std::string& lastmsgtime() const;
  void set_lastmsgtime(const ::std::string& value);
  #if LANG_CXX11
  void set_lastmsgtime(::std::string&& value);
  #endif
  void set_lastmsgtime(const char* value);
  void set_lastmsgtime(const char* value, size_t size);
  ::std::string* mutable_lastmsgtime();
  ::std::string* release_lastmsgtime();
  void set_allocated_lastmsgtime(::std::string* lastmsgtime);

  // optional string alias = 30;
  bool has_alias() const;
  void clear_alias();
  static const int kAliasFieldNumber = 30;
  const ::std::string& alias() const;
  void set_alias(const ::std::string& value);
  #if LANG_CXX11
  void set_alias(::std::string&& value);
  #endif
  void set_alias(const char* value);
  void set_alias(const char* value, size_t size);
  ::std::string* mutable_alias();
  ::std::string* release_alias();
  void set_allocated_alias(::std::string* alias);

  // optional string chatroomOwnerWxid = 31;
  bool has_chatroomownerwxid() const;
  void clear_chatroomownerwxid();
  static const int kChatroomOwnerWxidFieldNumber = 31;
  const ::std::string& chatroomownerwxid() const;
  void set_chatroomownerwxid(const ::std::string& value);
  #if LANG_CXX11
  void set_chatroomownerwxid(::std::string&& value);
  #endif
  void set_chatroomownerwxid(const char* value);
  void set_chatroomownerwxid(const char* value, size_t size);
  ::std::string* mutable_chatroomownerwxid();
  ::std::string* release_chatroomownerwxid();
  void set_allocated_chatroomownerwxid(::std::string* chatroomownerwxid);

  // optional bytes tag37 = 37;
  bool has_tag37() const;
  void clear_tag37();
  static const int kTag37FieldNumber = 37;
  const ::std::string& tag37() const;
  void set_tag37(const ::std::string& value);
  #if LANG_CXX11
  void set_tag37(::std::string&& value);
  #endif
  void set_tag37(const char* value);
  void set_tag37(const void* value, size_t size);
  ::std::string* mutable_tag37();
  ::std::string* release_tag37();
  void set_allocated_tag37(::std::string* tag37);

  // optional string country = 38;
  bool has_country() const;
  void clear_country();
  static const int kCountryFieldNumber = 38;
  const ::std::string& country() const;
  void set_country(const ::std::string& value);
  #if LANG_CXX11
  void set_country(::std::string&& value);
  #endif
  void set_country(const char* value);
  void set_country(const char* value, size_t size);
  ::std::string* mutable_country();
  ::std::string* release_country();
  void set_allocated_country(::std::string* country);

  // optional string avatar_big = 39;
  bool has_avatar_big() const;
  void clear_avatar_big();
  static const int kAvatarBigFieldNumber = 39;
  const ::std::string& avatar_big() const;
  void set_avatar_big(const ::std::string& value);
  #if LANG_CXX11
  void set_avatar_big(::std::string&& value);
  #endif
  void set_avatar_big(const char* value);
  void set_avatar_big(const char* value, size_t size);
  ::std::string* mutable_avatar_big();
  ::std::string* release_avatar_big();
  void set_allocated_avatar_big(::std::string* avatar_big);

  // optional string avatar_small = 40;
  bool has_avatar_small() const;
  void clear_avatar_small();
  static const int kAvatarSmallFieldNumber = 40;
  const ::std::string& avatar_small() const;
  void set_avatar_small(const ::std::string& value);
  #if LANG_CXX11
  void set_avatar_small(::std::string&& value);
  #endif
  void set_avatar_small(const char* value);
  void set_avatar_small(const char* value, size_t size);
  ::std::string* mutable_avatar_small();
  ::std::string* release_avatar_small();
  void set_allocated_avatar_small(::std::string* avatar_small);

  // optional bytes tag42 = 42;
  bool has_tag42() const;
  void clear_tag42();
  static const int kTag42FieldNumber = 42;
  const ::std::string& tag42() const;
  void set_tag42(const ::std::string& value);
  #if LANG_CXX11
  void set_tag42(::std::string&& value);
  #endif
  void set_tag42(const char* value);
  void set_tag42(const void* value, size_t size);
  ::std::string* mutable_tag42();
  ::std::string* release_tag42();
  void set_allocated_tag42(::std::string* tag42);

  // optional string v1_name = 45;
  bool has_v1_name() const;
  void clear_v1_name();
  static const int kV1NameFieldNumber = 45;
  const ::std::string& v1_name() const;
  void set_v1_name(const ::std::string& value);
  #if LANG_CXX11
  void set_v1_name(::std::string&& value);
  #endif
  void set_v1_name(const char* value);
  void set_v1_name(const char* value, size_t size);
  ::std::string* mutable_v1_name();
  ::std::string* release_v1_name();
  void set_allocated_v1_name(::std::string* v1_name);

  // optional bytes tag50 = 50;
  bool has_tag50() const;
  void clear_tag50();
  static const int kTag50FieldNumber = 50;
  const ::std::string& tag50() const;
  void set_tag50(const ::std::string& value);
  #if LANG_CXX11
  void set_tag50(::std::string&& value);
  #endif
  void set_tag50(const char* value);
  void set_tag50(const void* value, size_t size);
  ::std::string* mutable_tag50();
  ::std::string* release_tag50();
  void set_allocated_tag50(::std::string* tag50);

  // optional bytes tag62 = 62;
  bool has_tag62() const;
  void clear_tag62();
  static const int kTag62FieldNumber = 62;
  const ::std::string& tag62() const;
  void set_tag62(const ::std::string& value);
  #if LANG_CXX11
  void set_tag62(::std::string&& value);
  #endif
  void set_tag62(const char* value);
  void set_tag62(const void* value, size_t size);
  ::std::string* mutable_tag62();
  ::std::string* release_tag62();
  void set_allocated_tag62(::std::string* tag62);

  // optional .Wxid wxid = 1;
  bool has_wxid() const;
  void clear_wxid();
  static const int kWxidFieldNumber = 1;
  const ::Wxid& wxid() const;
  ::Wxid* mutable_wxid();
  ::Wxid* release_wxid();
  void set_allocated_wxid(::Wxid* wxid);

  // optional .contact_info.NickName nickname = 2;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  const ::contact_info_NickName& nickname() const;
  ::contact_info_NickName* mutable_nickname();
  ::contact_info_NickName* release_nickname();
  void set_allocated_nickname(::contact_info_NickName* nickname);

  // optional .contact_info.PY_SHORT shortPy = 3;
  bool has_shortpy() const;
  void clear_shortpy();
  static const int kShortPyFieldNumber = 3;
  const ::contact_info_PY_SHORT& shortpy() const;
  ::contact_info_PY_SHORT* mutable_shortpy();
  ::contact_info_PY_SHORT* release_shortpy();
  void set_allocated_shortpy(::contact_info_PY_SHORT* shortpy);

  // optional .contact_info.QuanPin quanpin = 4;
  bool has_quanpin() const;
  void clear_quanpin();
  static const int kQuanpinFieldNumber = 4;
  const ::contact_info_QuanPin& quanpin() const;
  ::contact_info_QuanPin* mutable_quanpin();
  ::contact_info_QuanPin* release_quanpin();
  void set_allocated_quanpin(::contact_info_QuanPin* quanpin);

  // optional .contact_info.BeiZhu remark_name = 10;
  bool has_remark_name() const;
  void clear_remark_name();
  static const int kRemarkNameFieldNumber = 10;
  const ::contact_info_BeiZhu& remark_name() const;
  ::contact_info_BeiZhu* mutable_remark_name();
  ::contact_info_BeiZhu* release_remark_name();
  void set_allocated_remark_name(::contact_info_BeiZhu* remark_name);

  // optional .contact_info.REAL_PY_SHORT real_shortPy = 11;
  bool has_real_shortpy() const;
  void clear_real_shortpy();
  static const int kRealShortPyFieldNumber = 11;
  const ::contact_info_REAL_PY_SHORT& real_shortpy() const;
  ::contact_info_REAL_PY_SHORT* mutable_real_shortpy();
  ::contact_info_REAL_PY_SHORT* release_real_shortpy();
  void set_allocated_real_shortpy(::contact_info_REAL_PY_SHORT* real_shortpy);

  // optional .contact_info.REAL_QuanPin real_quanpin = 12;
  bool has_real_quanpin() const;
  void clear_real_quanpin();
  static const int kRealQuanpinFieldNumber = 12;
  const ::contact_info_REAL_QuanPin& real_quanpin() const;
  ::contact_info_REAL_QuanPin* mutable_real_quanpin();
  ::contact_info_REAL_QuanPin* release_real_quanpin();
  void set_allocated_real_quanpin(::contact_info_REAL_QuanPin* real_quanpin);

  // optional .contact_info.GroupMemberList group_member_list = 57;
  bool has_group_member_list() const;
  void clear_group_member_list();
  static const int kGroupMemberListFieldNumber = 57;
  const ::contact_info_GroupMemberList& group_member_list() const;
  ::contact_info_GroupMemberList* mutable_group_member_list();
  ::contact_info_GroupMemberList* release_group_member_list();
  void set_allocated_group_member_list(::contact_info_GroupMemberList* group_member_list);

  // optional int32 sex = 5;
  bool has_sex() const;
  void clear_sex();
  static const int kSexFieldNumber = 5;
  ::google::protobuf::int32 sex() const;
  void set_sex(::google::protobuf::int32 value);

  // optional int32 tag7 = 7;
  bool has_tag7() const;
  void clear_tag7();
  static const int kTag7FieldNumber = 7;
  ::google::protobuf::int32 tag7() const;
  void set_tag7(::google::protobuf::int32 value);

  // optional int32 type = 8;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 8;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int32 tag9 = 9;
  bool has_tag9() const;
  void clear_tag9();
  static const int kTag9FieldNumber = 9;
  ::google::protobuf::int32 tag9() const;
  void set_tag9(::google::protobuf::int32 value);

  // optional int32 tag13 = 13;
  bool has_tag13() const;
  void clear_tag13();
  static const int kTag13FieldNumber = 13;
  ::google::protobuf::int32 tag13() const;
  void set_tag13(::google::protobuf::int32 value);

  // optional int32 tag14 = 14;
  bool has_tag14() const;
  void clear_tag14();
  static const int kTag14FieldNumber = 14;
  ::google::protobuf::int32 tag14() const;
  void set_tag14(::google::protobuf::int32 value);

  // optional int32 bChatRoom = 17;
  bool has_bchatroom() const;
  void clear_bchatroom();
  static const int kBChatRoomFieldNumber = 17;
  ::google::protobuf::int32 bchatroom() const;
  void set_bchatroom(::google::protobuf::int32 value);

  // optional int32 tag18 = 18;
  bool has_tag18() const;
  void clear_tag18();
  static const int kTag18FieldNumber = 18;
  ::google::protobuf::int32 tag18() const;
  void set_tag18(::google::protobuf::int32 value);

  // optional int32 tag22 = 22;
  bool has_tag22() const;
  void clear_tag22();
  static const int kTag22FieldNumber = 22;
  ::google::protobuf::int32 tag22() const;
  void set_tag22(::google::protobuf::int32 value);

  // optional int32 tag23 = 23;
  bool has_tag23() const;
  void clear_tag23();
  static const int kTag23FieldNumber = 23;
  ::google::protobuf::int32 tag23() const;
  void set_tag23(::google::protobuf::int32 value);

  // optional int32 register_body_type = 24;
  bool has_register_body_type() const;
  void clear_register_body_type();
  static const int kRegisterBodyTypeFieldNumber = 24;
  ::google::protobuf::int32 register_body_type() const;
  void set_register_body_type(::google::protobuf::int32 value);

  // optional int32 tag26 = 26;
  bool has_tag26() const;
  void clear_tag26();
  static const int kTag26FieldNumber = 26;
  ::google::protobuf::int32 tag26() const;
  void set_tag26(::google::protobuf::int32 value);

  // optional int32 src = 27;
  bool has_src() const;
  void clear_src();
  static const int kSrcFieldNumber = 27;
  ::google::protobuf::int32 src() const;
  void set_src(::google::protobuf::int32 value);

  // optional int32 tag33 = 33;
  bool has_tag33() const;
  void clear_tag33();
  static const int kTag33FieldNumber = 33;
  ::google::protobuf::int32 tag33() const;
  void set_tag33(::google::protobuf::int32 value);

  // optional int32 tag34 = 34;
  bool has_tag34() const;
  void clear_tag34();
  static const int kTag34FieldNumber = 34;
  ::google::protobuf::int32 tag34() const;
  void set_tag34(::google::protobuf::int32 value);

  // optional int32 tag35 = 35;
  bool has_tag35() const;
  void clear_tag35();
  static const int kTag35FieldNumber = 35;
  ::google::protobuf::int32 tag35() const;
  void set_tag35(::google::protobuf::int32 value);

  // optional int32 chatroom_serverVer = 53;
  bool has_chatroom_serverver() const;
  void clear_chatroom_serverver();
  static const int kChatroomServerVerFieldNumber = 53;
  ::google::protobuf::int32 chatroom_serverver() const;
  void set_chatroom_serverver(::google::protobuf::int32 value);

  // optional int32 chatroom_max_member = 55;
  bool has_chatroom_max_member() const;
  void clear_chatroom_max_member();
  static const int kChatroomMaxMemberFieldNumber = 55;
  ::google::protobuf::int32 chatroom_max_member() const;
  void set_chatroom_max_member(::google::protobuf::int32 value);

  // optional int32 tag56 = 56;
  bool has_tag56() const;
  void clear_tag56();
  static const int kTag56FieldNumber = 56;
  ::google::protobuf::int32 tag56() const;
  void set_tag56(::google::protobuf::int32 value);

  // optional int32 tag58 = 58;
  bool has_tag58() const;
  void clear_tag58();
  static const int kTag58FieldNumber = 58;
  ::google::protobuf::int32 tag58() const;
  void set_tag58(::google::protobuf::int32 value);

  // optional int32 tag64 = 64;
  bool has_tag64() const;
  void clear_tag64();
  static const int kTag64FieldNumber = 64;
  ::google::protobuf::int32 tag64() const;
  void set_tag64(::google::protobuf::int32 value);

  // optional int32 tag65 = 65;
  bool has_tag65() const;
  void clear_tag65();
  static const int kTag65FieldNumber = 65;
  ::google::protobuf::int32 tag65() const;
  void set_tag65(::google::protobuf::int32 value);

  // optional int32 tag66 = 66;
  bool has_tag66() const;
  void clear_tag66();
  static const int kTag66FieldNumber = 66;
  ::google::protobuf::int32 tag66() const;
  void set_tag66(::google::protobuf::int32 value);

  // optional int32 tag67 = 67;
  bool has_tag67() const;
  void clear_tag67();
  static const int kTag67FieldNumber = 67;
  ::google::protobuf::int32 tag67() const;
  void set_tag67(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:contact_info)
 private:
  void set_has_wxid();
  void clear_has_wxid();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_shortpy();
  void clear_has_shortpy();
  void set_has_quanpin();
  void clear_has_quanpin();
  void set_has_sex();
  void clear_has_sex();
  void set_has_tag6();
  void clear_has_tag6();
  void set_has_tag7();
  void clear_has_tag7();
  void set_has_type();
  void clear_has_type();
  void set_has_tag9();
  void clear_has_tag9();
  void set_has_remark_name();
  void clear_has_remark_name();
  void set_has_real_shortpy();
  void clear_has_real_shortpy();
  void set_has_real_quanpin();
  void clear_has_real_quanpin();
  void set_has_tag13();
  void clear_has_tag13();
  void set_has_tag14();
  void clear_has_tag14();
  void set_has_tag16();
  void clear_has_tag16();
  void set_has_bchatroom();
  void clear_has_bchatroom();
  void set_has_tag18();
  void clear_has_tag18();
  void set_has_sheng();
  void clear_has_sheng();
  void set_has_shi();
  void clear_has_shi();
  void set_has_qianming();
  void clear_has_qianming();
  void set_has_tag22();
  void clear_has_tag22();
  void set_has_tag23();
  void clear_has_tag23();
  void set_has_register_body_type();
  void clear_has_register_body_type();
  void set_has_register_body();
  void clear_has_register_body();
  void set_has_tag26();
  void clear_has_tag26();
  void set_has_src();
  void clear_has_src();
  void set_has_lastmsgtime();
  void clear_has_lastmsgtime();
  void set_has_alias();
  void clear_has_alias();
  void set_has_chatroomownerwxid();
  void clear_has_chatroomownerwxid();
  void set_has_tag33();
  void clear_has_tag33();
  void set_has_tag34();
  void clear_has_tag34();
  void set_has_tag35();
  void clear_has_tag35();
  void set_has_tag37();
  void clear_has_tag37();
  void set_has_country();
  void clear_has_country();
  void set_has_avatar_big();
  void clear_has_avatar_big();
  void set_has_avatar_small();
  void clear_has_avatar_small();
  void set_has_tag42();
  void clear_has_tag42();
  void set_has_v1_name();
  void clear_has_v1_name();
  void set_has_tag50();
  void clear_has_tag50();
  void set_has_chatroom_serverver();
  void clear_has_chatroom_serverver();
  void set_has_chatroom_max_member();
  void clear_has_chatroom_max_member();
  void set_has_tag56();
  void clear_has_tag56();
  void set_has_group_member_list();
  void clear_has_group_member_list();
  void set_has_tag58();
  void clear_has_tag58();
  void set_has_tag62();
  void clear_has_tag62();
  void set_has_tag64();
  void clear_has_tag64();
  void set_has_tag65();
  void clear_has_tag65();
  void set_has_tag66();
  void clear_has_tag66();
  void set_has_tag67();
  void clear_has_tag67();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<2> _has_bits_;
  ::google::protobuf::internal::ArenaStringPtr tag6_;
  ::google::protobuf::internal::ArenaStringPtr tag16_;
  ::google::protobuf::internal::ArenaStringPtr sheng_;
  ::google::protobuf::internal::ArenaStringPtr shi_;
  ::google::protobuf::internal::ArenaStringPtr qianming_;
  ::google::protobuf::internal::ArenaStringPtr register_body_;
  ::google::protobuf::internal::ArenaStringPtr lastmsgtime_;
  ::google::protobuf::internal::ArenaStringPtr alias_;
  ::google::protobuf::internal::ArenaStringPtr chatroomownerwxid_;
  ::google::protobuf::internal::ArenaStringPtr tag37_;
  ::google::protobuf::internal::ArenaStringPtr country_;
  ::google::protobuf::internal::ArenaStringPtr avatar_big_;
  ::google::protobuf::internal::ArenaStringPtr avatar_small_;
  ::google::protobuf::internal::ArenaStringPtr tag42_;
  ::google::protobuf::internal::ArenaStringPtr v1_name_;
  ::google::protobuf::internal::ArenaStringPtr tag50_;
  ::google::protobuf::internal::ArenaStringPtr tag62_;
  ::Wxid* wxid_;
  ::contact_info_NickName* nickname_;
  ::contact_info_PY_SHORT* shortpy_;
  ::contact_info_QuanPin* quanpin_;
  ::contact_info_BeiZhu* remark_name_;
  ::contact_info_REAL_PY_SHORT* real_shortpy_;
  ::contact_info_REAL_QuanPin* real_quanpin_;
  ::contact_info_GroupMemberList* group_member_list_;
  ::google::protobuf::int32 sex_;
  ::google::protobuf::int32 tag7_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 tag9_;
  ::google::protobuf::int32 tag13_;
  ::google::protobuf::int32 tag14_;
  ::google::protobuf::int32 bchatroom_;
  ::google::protobuf::int32 tag18_;
  ::google::protobuf::int32 tag22_;
  ::google::protobuf::int32 tag23_;
  ::google::protobuf::int32 register_body_type_;
  ::google::protobuf::int32 tag26_;
  ::google::protobuf::int32 src_;
  ::google::protobuf::int32 tag33_;
  ::google::protobuf::int32 tag34_;
  ::google::protobuf::int32 tag35_;
  ::google::protobuf::int32 chatroom_serverver_;
  ::google::protobuf::int32 chatroom_max_member_;
  ::google::protobuf::int32 tag56_;
  ::google::protobuf::int32 tag58_;
  ::google::protobuf::int32 tag64_;
  ::google::protobuf::int32 tag65_;
  ::google::protobuf::int32 tag66_;
  ::google::protobuf::int32 tag67_;
  mutable int _cached_size_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ManualAuthAccountRequest_AesKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManualAuthAccountRequest.AesKey) */ {
 public:
  ManualAuthAccountRequest_AesKey();
  virtual ~ManualAuthAccountRequest_AesKey();

  ManualAuthAccountRequest_AesKey(const ManualAuthAccountRequest_AesKey& from);

  inline ManualAuthAccountRequest_AesKey& operator=(const ManualAuthAccountRequest_AesKey& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManualAuthAccountRequest_AesKey& default_instance();

  static inline const ManualAuthAccountRequest_AesKey* internal_default_instance() {
    return reinterpret_cast<const ManualAuthAccountRequest_AesKey*>(
               &_ManualAuthAccountRequest_AesKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(ManualAuthAccountRequest_AesKey* other);

  // implements Message ----------------------------------------------

  inline ManualAuthAccountRequest_AesKey* New() const PROTOBUF_FINAL { return New(NULL); }

  ManualAuthAccountRequest_AesKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ManualAuthAccountRequest_AesKey& from);
  void MergeFrom(const ManualAuthAccountRequest_AesKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ManualAuthAccountRequest_AesKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes key = 2;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // required int32 len = 1;
  bool has_len() const;
  void clear_len();
  static const int kLenFieldNumber = 1;
  ::google::protobuf::int32 len() const;
  void set_len(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ManualAuthAccountRequest.AesKey)
 private:
  void set_has_len();
  void clear_has_len();
  void set_has_key();
  void clear_has_key();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::int32 len_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ManualAuthAccountRequest_Ecdh_EcdhKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManualAuthAccountRequest.Ecdh.EcdhKey) */ {
 public:
  ManualAuthAccountRequest_Ecdh_EcdhKey();
  virtual ~ManualAuthAccountRequest_Ecdh_EcdhKey();

  ManualAuthAccountRequest_Ecdh_EcdhKey(const ManualAuthAccountRequest_Ecdh_EcdhKey& from);

  inline ManualAuthAccountRequest_Ecdh_EcdhKey& operator=(const ManualAuthAccountRequest_Ecdh_EcdhKey& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManualAuthAccountRequest_Ecdh_EcdhKey& default_instance();

  static inline const ManualAuthAccountRequest_Ecdh_EcdhKey* internal_default_instance() {
    return reinterpret_cast<const ManualAuthAccountRequest_Ecdh_EcdhKey*>(
               &_ManualAuthAccountRequest_Ecdh_EcdhKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(ManualAuthAccountRequest_Ecdh_EcdhKey* other);

  // implements Message ----------------------------------------------

  inline ManualAuthAccountRequest_Ecdh_EcdhKey* New() const PROTOBUF_FINAL { return New(NULL); }

  ManualAuthAccountRequest_Ecdh_EcdhKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ManualAuthAccountRequest_Ecdh_EcdhKey& from);
  void MergeFrom(const ManualAuthAccountRequest_Ecdh_EcdhKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ManualAuthAccountRequest_Ecdh_EcdhKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes key = 2;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // required int32 len = 1;
  bool has_len() const;
  void clear_len();
  static const int kLenFieldNumber = 1;
  ::google::protobuf::int32 len() const;
  void set_len(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ManualAuthAccountRequest.Ecdh.EcdhKey)
 private:
  void set_has_len();
  void clear_has_len();
  void set_has_key();
  void clear_has_key();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::int32 len_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ManualAuthAccountRequest_Ecdh : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManualAuthAccountRequest.Ecdh) */ {
 public:
  ManualAuthAccountRequest_Ecdh();
  virtual ~ManualAuthAccountRequest_Ecdh();

  ManualAuthAccountRequest_Ecdh(const ManualAuthAccountRequest_Ecdh& from);

  inline ManualAuthAccountRequest_Ecdh& operator=(const ManualAuthAccountRequest_Ecdh& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManualAuthAccountRequest_Ecdh& default_instance();

  static inline const ManualAuthAccountRequest_Ecdh* internal_default_instance() {
    return reinterpret_cast<const ManualAuthAccountRequest_Ecdh*>(
               &_ManualAuthAccountRequest_Ecdh_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(ManualAuthAccountRequest_Ecdh* other);

  // implements Message ----------------------------------------------

  inline ManualAuthAccountRequest_Ecdh* New() const PROTOBUF_FINAL { return New(NULL); }

  ManualAuthAccountRequest_Ecdh* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ManualAuthAccountRequest_Ecdh& from);
  void MergeFrom(const ManualAuthAccountRequest_Ecdh& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ManualAuthAccountRequest_Ecdh* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ManualAuthAccountRequest_Ecdh_EcdhKey EcdhKey;

  // accessors -------------------------------------------------------

  // required .ManualAuthAccountRequest.Ecdh.EcdhKey ecdhKey = 2;
  bool has_ecdhkey() const;
  void clear_ecdhkey();
  static const int kEcdhKeyFieldNumber = 2;
  const ::ManualAuthAccountRequest_Ecdh_EcdhKey& ecdhkey() const;
  ::ManualAuthAccountRequest_Ecdh_EcdhKey* mutable_ecdhkey();
  ::ManualAuthAccountRequest_Ecdh_EcdhKey* release_ecdhkey();
  void set_allocated_ecdhkey(::ManualAuthAccountRequest_Ecdh_EcdhKey* ecdhkey);

  // required int32 nid = 1;
  bool has_nid() const;
  void clear_nid();
  static const int kNidFieldNumber = 1;
  ::google::protobuf::int32 nid() const;
  void set_nid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ManualAuthAccountRequest.Ecdh)
 private:
  void set_has_nid();
  void clear_has_nid();
  void set_has_ecdhkey();
  void clear_has_ecdhkey();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::ManualAuthAccountRequest_Ecdh_EcdhKey* ecdhkey_;
  ::google::protobuf::int32 nid_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ManualAuthAccountRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManualAuthAccountRequest) */ {
 public:
  ManualAuthAccountRequest();
  virtual ~ManualAuthAccountRequest();

  ManualAuthAccountRequest(const ManualAuthAccountRequest& from);

  inline ManualAuthAccountRequest& operator=(const ManualAuthAccountRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManualAuthAccountRequest& default_instance();

  static inline const ManualAuthAccountRequest* internal_default_instance() {
    return reinterpret_cast<const ManualAuthAccountRequest*>(
               &_ManualAuthAccountRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(ManualAuthAccountRequest* other);

  // implements Message ----------------------------------------------

  inline ManualAuthAccountRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ManualAuthAccountRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ManualAuthAccountRequest& from);
  void MergeFrom(const ManualAuthAccountRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ManualAuthAccountRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ManualAuthAccountRequest_AesKey AesKey;
  typedef ManualAuthAccountRequest_Ecdh Ecdh;

  // accessors -------------------------------------------------------

  // required string userName = 3;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 3;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // required string password1 = 4;
  bool has_password1() const;
  void clear_password1();
  static const int kPassword1FieldNumber = 4;
  const ::std::string& password1() const;
  void set_password1(const ::std::string& value);
  #if LANG_CXX11
  void set_password1(::std::string&& value);
  #endif
  void set_password1(const char* value);
  void set_password1(const char* value, size_t size);
  ::std::string* mutable_password1();
  ::std::string* release_password1();
  void set_allocated_password1(::std::string* password1);

  // required string password2 = 5;
  bool has_password2() const;
  void clear_password2();
  static const int kPassword2FieldNumber = 5;
  const ::std::string& password2() const;
  void set_password2(const ::std::string& value);
  #if LANG_CXX11
  void set_password2(::std::string&& value);
  #endif
  void set_password2(const char* value);
  void set_password2(const char* value, size_t size);
  ::std::string* mutable_password2();
  ::std::string* release_password2();
  void set_allocated_password2(::std::string* password2);

  // required .ManualAuthAccountRequest.AesKey aes = 1;
  bool has_aes() const;
  void clear_aes();
  static const int kAesFieldNumber = 1;
  const ::ManualAuthAccountRequest_AesKey& aes() const;
  ::ManualAuthAccountRequest_AesKey* mutable_aes();
  ::ManualAuthAccountRequest_AesKey* release_aes();
  void set_allocated_aes(::ManualAuthAccountRequest_AesKey* aes);

  // required .ManualAuthAccountRequest.Ecdh ecdh = 2;
  bool has_ecdh() const;
  void clear_ecdh();
  static const int kEcdhFieldNumber = 2;
  const ::ManualAuthAccountRequest_Ecdh& ecdh() const;
  ::ManualAuthAccountRequest_Ecdh* mutable_ecdh();
  ::ManualAuthAccountRequest_Ecdh* release_ecdh();
  void set_allocated_ecdh(::ManualAuthAccountRequest_Ecdh* ecdh);

  // @@protoc_insertion_point(class_scope:ManualAuthAccountRequest)
 private:
  void set_has_aes();
  void clear_has_aes();
  void set_has_ecdh();
  void clear_has_ecdh();
  void set_has_username();
  void clear_has_username();
  void set_has_password1();
  void clear_has_password1();
  void set_has_password2();
  void clear_has_password2();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr password1_;
  ::google::protobuf::internal::ArenaStringPtr password2_;
  ::ManualAuthAccountRequest_AesKey* aes_;
  ::ManualAuthAccountRequest_Ecdh* ecdh_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ManualAuthDeviceRequest__Tag2___Tag2 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManualAuthDeviceRequest._Tag2.__Tag2) */ {
 public:
  ManualAuthDeviceRequest__Tag2___Tag2();
  virtual ~ManualAuthDeviceRequest__Tag2___Tag2();

  ManualAuthDeviceRequest__Tag2___Tag2(const ManualAuthDeviceRequest__Tag2___Tag2& from);

  inline ManualAuthDeviceRequest__Tag2___Tag2& operator=(const ManualAuthDeviceRequest__Tag2___Tag2& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManualAuthDeviceRequest__Tag2___Tag2& default_instance();

  static inline const ManualAuthDeviceRequest__Tag2___Tag2* internal_default_instance() {
    return reinterpret_cast<const ManualAuthDeviceRequest__Tag2___Tag2*>(
               &_ManualAuthDeviceRequest__Tag2___Tag2_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(ManualAuthDeviceRequest__Tag2___Tag2* other);

  // implements Message ----------------------------------------------

  inline ManualAuthDeviceRequest__Tag2___Tag2* New() const PROTOBUF_FINAL { return New(NULL); }

  ManualAuthDeviceRequest__Tag2___Tag2* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ManualAuthDeviceRequest__Tag2___Tag2& from);
  void MergeFrom(const ManualAuthDeviceRequest__Tag2___Tag2& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ManualAuthDeviceRequest__Tag2___Tag2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string tag1 = 1;
  bool has_tag1() const;
  void clear_tag1();
  static const int kTag1FieldNumber = 1;
  const ::std::string& tag1() const;
  void set_tag1(const ::std::string& value);
  #if LANG_CXX11
  void set_tag1(::std::string&& value);
  #endif
  void set_tag1(const char* value);
  void set_tag1(const char* value, size_t size);
  ::std::string* mutable_tag1();
  ::std::string* release_tag1();
  void set_allocated_tag1(::std::string* tag1);

  // optional string tag2 = 2;
  bool has_tag2() const;
  void clear_tag2();
  static const int kTag2FieldNumber = 2;
  const ::std::string& tag2() const;
  void set_tag2(const ::std::string& value);
  #if LANG_CXX11
  void set_tag2(::std::string&& value);
  #endif
  void set_tag2(const char* value);
  void set_tag2(const char* value, size_t size);
  ::std::string* mutable_tag2();
  ::std::string* release_tag2();
  void set_allocated_tag2(::std::string* tag2);

  // optional string tag3 = 3;
  bool has_tag3() const;
  void clear_tag3();
  static const int kTag3FieldNumber = 3;
  const ::std::string& tag3() const;
  void set_tag3(const ::std::string& value);
  #if LANG_CXX11
  void set_tag3(::std::string&& value);
  #endif
  void set_tag3(const char* value);
  void set_tag3(const char* value, size_t size);
  ::std::string* mutable_tag3();
  ::std::string* release_tag3();
  void set_allocated_tag3(::std::string* tag3);

  // optional .mmStr tag4 = 4;
  bool has_tag4() const;
  void clear_tag4();
  static const int kTag4FieldNumber = 4;
  const ::mmStr& tag4() const;
  ::mmStr* mutable_tag4();
  ::mmStr* release_tag4();
  void set_allocated_tag4(::mmStr* tag4);

  // @@protoc_insertion_point(class_scope:ManualAuthDeviceRequest._Tag2.__Tag2)
 private:
  void set_has_tag1();
  void clear_has_tag1();
  void set_has_tag2();
  void clear_has_tag2();
  void set_has_tag3();
  void clear_has_tag3();
  void set_has_tag4();
  void clear_has_tag4();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr tag1_;
  ::google::protobuf::internal::ArenaStringPtr tag2_;
  ::google::protobuf::internal::ArenaStringPtr tag3_;
  ::mmStr* tag4_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ManualAuthDeviceRequest__Tag2_TAG3 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManualAuthDeviceRequest._Tag2.TAG3) */ {
 public:
  ManualAuthDeviceRequest__Tag2_TAG3();
  virtual ~ManualAuthDeviceRequest__Tag2_TAG3();

  ManualAuthDeviceRequest__Tag2_TAG3(const ManualAuthDeviceRequest__Tag2_TAG3& from);

  inline ManualAuthDeviceRequest__Tag2_TAG3& operator=(const ManualAuthDeviceRequest__Tag2_TAG3& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManualAuthDeviceRequest__Tag2_TAG3& default_instance();

  static inline const ManualAuthDeviceRequest__Tag2_TAG3* internal_default_instance() {
    return reinterpret_cast<const ManualAuthDeviceRequest__Tag2_TAG3*>(
               &_ManualAuthDeviceRequest__Tag2_TAG3_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(ManualAuthDeviceRequest__Tag2_TAG3* other);

  // implements Message ----------------------------------------------

  inline ManualAuthDeviceRequest__Tag2_TAG3* New() const PROTOBUF_FINAL { return New(NULL); }

  ManualAuthDeviceRequest__Tag2_TAG3* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ManualAuthDeviceRequest__Tag2_TAG3& from);
  void MergeFrom(const ManualAuthDeviceRequest__Tag2_TAG3& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ManualAuthDeviceRequest__Tag2_TAG3* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string tag1 = 1;
  bool has_tag1() const;
  void clear_tag1();
  static const int kTag1FieldNumber = 1;
  const ::std::string& tag1() const;
  void set_tag1(const ::std::string& value);
  #if LANG_CXX11
  void set_tag1(::std::string&& value);
  #endif
  void set_tag1(const char* value);
  void set_tag1(const char* value, size_t size);
  ::std::string* mutable_tag1();
  ::std::string* release_tag1();
  void set_allocated_tag1(::std::string* tag1);

  // optional string tag2 = 2;
  bool has_tag2() const;
  void clear_tag2();
  static const int kTag2FieldNumber = 2;
  const ::std::string& tag2() const;
  void set_tag2(const ::std::string& value);
  #if LANG_CXX11
  void set_tag2(::std::string&& value);
  #endif
  void set_tag2(const char* value);
  void set_tag2(const char* value, size_t size);
  ::std::string* mutable_tag2();
  ::std::string* release_tag2();
  void set_allocated_tag2(::std::string* tag2);

  // @@protoc_insertion_point(class_scope:ManualAuthDeviceRequest._Tag2.TAG3)
 private:
  void set_has_tag1();
  void clear_has_tag1();
  void set_has_tag2();
  void clear_has_tag2();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr tag1_;
  ::google::protobuf::internal::ArenaStringPtr tag2_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ManualAuthDeviceRequest__Tag2 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManualAuthDeviceRequest._Tag2) */ {
 public:
  ManualAuthDeviceRequest__Tag2();
  virtual ~ManualAuthDeviceRequest__Tag2();

  ManualAuthDeviceRequest__Tag2(const ManualAuthDeviceRequest__Tag2& from);

  inline ManualAuthDeviceRequest__Tag2& operator=(const ManualAuthDeviceRequest__Tag2& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManualAuthDeviceRequest__Tag2& default_instance();

  static inline const ManualAuthDeviceRequest__Tag2* internal_default_instance() {
    return reinterpret_cast<const ManualAuthDeviceRequest__Tag2*>(
               &_ManualAuthDeviceRequest__Tag2_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(ManualAuthDeviceRequest__Tag2* other);

  // implements Message ----------------------------------------------

  inline ManualAuthDeviceRequest__Tag2* New() const PROTOBUF_FINAL { return New(NULL); }

  ManualAuthDeviceRequest__Tag2* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ManualAuthDeviceRequest__Tag2& from);
  void MergeFrom(const ManualAuthDeviceRequest__Tag2& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ManualAuthDeviceRequest__Tag2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ManualAuthDeviceRequest__Tag2___Tag2 __Tag2;
  typedef ManualAuthDeviceRequest__Tag2_TAG3 TAG3;

  // accessors -------------------------------------------------------

  // optional .mmStr tag1 = 1;
  bool has_tag1() const;
  void clear_tag1();
  static const int kTag1FieldNumber = 1;
  const ::mmStr& tag1() const;
  ::mmStr* mutable_tag1();
  ::mmStr* release_tag1();
  void set_allocated_tag1(::mmStr* tag1);

  // optional .ManualAuthDeviceRequest._Tag2.__Tag2 tag2 = 2;
  bool has_tag2() const;
  void clear_tag2();
  static const int kTag2FieldNumber = 2;
  const ::ManualAuthDeviceRequest__Tag2___Tag2& tag2() const;
  ::ManualAuthDeviceRequest__Tag2___Tag2* mutable_tag2();
  ::ManualAuthDeviceRequest__Tag2___Tag2* release_tag2();
  void set_allocated_tag2(::ManualAuthDeviceRequest__Tag2___Tag2* tag2);

  // optional .ManualAuthDeviceRequest._Tag2.TAG3 tag3 = 3;
  bool has_tag3() const;
  void clear_tag3();
  static const int kTag3FieldNumber = 3;
  const ::ManualAuthDeviceRequest__Tag2_TAG3& tag3() const;
  ::ManualAuthDeviceRequest__Tag2_TAG3* mutable_tag3();
  ::ManualAuthDeviceRequest__Tag2_TAG3* release_tag3();
  void set_allocated_tag3(::ManualAuthDeviceRequest__Tag2_TAG3* tag3);

  // optional .mmStr tag4 = 4;
  bool has_tag4() const;
  void clear_tag4();
  static const int kTag4FieldNumber = 4;
  const ::mmStr& tag4() const;
  ::mmStr* mutable_tag4();
  ::mmStr* release_tag4();
  void set_allocated_tag4(::mmStr* tag4);

  // optional .mmStr tag5 = 5;
  bool has_tag5() const;
  void clear_tag5();
  static const int kTag5FieldNumber = 5;
  const ::mmStr& tag5() const;
  ::mmStr* mutable_tag5();
  ::mmStr* release_tag5();
  void set_allocated_tag5(::mmStr* tag5);

  // optional int32 tag6 = 6;
  bool has_tag6() const;
  void clear_tag6();
  static const int kTag6FieldNumber = 6;
  ::google::protobuf::int32 tag6() const;
  void set_tag6(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ManualAuthDeviceRequest._Tag2)
 private:
  void set_has_tag1();
  void clear_has_tag1();
  void set_has_tag2();
  void clear_has_tag2();
  void set_has_tag3();
  void clear_has_tag3();
  void set_has_tag4();
  void clear_has_tag4();
  void set_has_tag5();
  void clear_has_tag5();
  void set_has_tag6();
  void clear_has_tag6();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::mmStr* tag1_;
  ::ManualAuthDeviceRequest__Tag2___Tag2* tag2_;
  ::ManualAuthDeviceRequest__Tag2_TAG3* tag3_;
  ::mmStr* tag4_;
  ::mmStr* tag5_;
  ::google::protobuf::int32 tag6_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ManualAuthDeviceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManualAuthDeviceRequest) */ {
 public:
  ManualAuthDeviceRequest();
  virtual ~ManualAuthDeviceRequest();

  ManualAuthDeviceRequest(const ManualAuthDeviceRequest& from);

  inline ManualAuthDeviceRequest& operator=(const ManualAuthDeviceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManualAuthDeviceRequest& default_instance();

  static inline const ManualAuthDeviceRequest* internal_default_instance() {
    return reinterpret_cast<const ManualAuthDeviceRequest*>(
               &_ManualAuthDeviceRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(ManualAuthDeviceRequest* other);

  // implements Message ----------------------------------------------

  inline ManualAuthDeviceRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ManualAuthDeviceRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ManualAuthDeviceRequest& from);
  void MergeFrom(const ManualAuthDeviceRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ManualAuthDeviceRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ManualAuthDeviceRequest__Tag2 _Tag2;

  // accessors -------------------------------------------------------

  // optional string imei = 3;
  bool has_imei() const;
  void clear_imei();
  static const int kImeiFieldNumber = 3;
  const ::std::string& imei() const;
  void set_imei(const ::std::string& value);
  #if LANG_CXX11
  void set_imei(::std::string&& value);
  #endif
  void set_imei(const char* value);
  void set_imei(const char* value, size_t size);
  ::std::string* mutable_imei();
  ::std::string* release_imei();
  void set_allocated_imei(::std::string* imei);

  // optional string softInfoXml = 4;
  bool has_softinfoxml() const;
  void clear_softinfoxml();
  static const int kSoftInfoXmlFieldNumber = 4;
  const ::std::string& softinfoxml() const;
  void set_softinfoxml(const ::std::string& value);
  #if LANG_CXX11
  void set_softinfoxml(::std::string&& value);
  #endif
  void set_softinfoxml(const char* value);
  void set_softinfoxml(const char* value, size_t size);
  ::std::string* mutable_softinfoxml();
  ::std::string* release_softinfoxml();
  void set_allocated_softinfoxml(::std::string* softinfoxml);

  // optional string clientSeqID = 6;
  bool has_clientseqid() const;
  void clear_clientseqid();
  static const int kClientSeqIDFieldNumber = 6;
  const ::std::string& clientseqid() const;
  void set_clientseqid(const ::std::string& value);
  #if LANG_CXX11
  void set_clientseqid(::std::string&& value);
  #endif
  void set_clientseqid(const char* value);
  void set_clientseqid(const char* value, size_t size);
  ::std::string* mutable_clientseqid();
  ::std::string* release_clientseqid();
  void set_allocated_clientseqid(::std::string* clientseqid);

  // optional string clientSeqID_sign = 7;
  bool has_clientseqid_sign() const;
  void clear_clientseqid_sign();
  static const int kClientSeqIDSignFieldNumber = 7;
  const ::std::string& clientseqid_sign() const;
  void set_clientseqid_sign(const ::std::string& value);
  #if LANG_CXX11
  void set_clientseqid_sign(::std::string&& value);
  #endif
  void set_clientseqid_sign(const char* value);
  void set_clientseqid_sign(const char* value, size_t size);
  ::std::string* mutable_clientseqid_sign();
  ::std::string* release_clientseqid_sign();
  void set_allocated_clientseqid_sign(::std::string* clientseqid_sign);

  // optional string loginDeviceName = 8;
  bool has_logindevicename() const;
  void clear_logindevicename();
  static const int kLoginDeviceNameFieldNumber = 8;
  const ::std::string& logindevicename() const;
  void set_logindevicename(const ::std::string& value);
  #if LANG_CXX11
  void set_logindevicename(::std::string&& value);
  #endif
  void set_logindevicename(const char* value);
  void set_logindevicename(const char* value, size_t size);
  ::std::string* mutable_logindevicename();
  ::std::string* release_logindevicename();
  void set_allocated_logindevicename(::std::string* logindevicename);

  // optional string deviceInfoXml = 9;
  bool has_deviceinfoxml() const;
  void clear_deviceinfoxml();
  static const int kDeviceInfoXmlFieldNumber = 9;
  const ::std::string& deviceinfoxml() const;
  void set_deviceinfoxml(const ::std::string& value);
  #if LANG_CXX11
  void set_deviceinfoxml(::std::string&& value);
  #endif
  void set_deviceinfoxml(const char* value);
  void set_deviceinfoxml(const char* value, size_t size);
  ::std::string* mutable_deviceinfoxml();
  ::std::string* release_deviceinfoxml();
  void set_allocated_deviceinfoxml(::std::string* deviceinfoxml);

  // optional string language = 10;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 10;
  const ::std::string& language() const;
  void set_language(const ::std::string& value);
  #if LANG_CXX11
  void set_language(::std::string&& value);
  #endif
  void set_language(const char* value);
  void set_language(const char* value, size_t size);
  ::std::string* mutable_language();
  ::std::string* release_language();
  void set_allocated_language(::std::string* language);

  // optional string timeZone = 11;
  bool has_timezone() const;
  void clear_timezone();
  static const int kTimeZoneFieldNumber = 11;
  const ::std::string& timezone() const;
  void set_timezone(const ::std::string& value);
  #if LANG_CXX11
  void set_timezone(::std::string&& value);
  #endif
  void set_timezone(const char* value);
  void set_timezone(const char* value, size_t size);
  ::std::string* mutable_timezone();
  ::std::string* release_timezone();
  void set_allocated_timezone(::std::string* timezone);

  // optional string deviceBrand = 15;
  bool has_devicebrand() const;
  void clear_devicebrand();
  static const int kDeviceBrandFieldNumber = 15;
  const ::std::string& devicebrand() const;
  void set_devicebrand(const ::std::string& value);
  #if LANG_CXX11
  void set_devicebrand(::std::string&& value);
  #endif
  void set_devicebrand(const char* value);
  void set_devicebrand(const char* value, size_t size);
  ::std::string* mutable_devicebrand();
  ::std::string* release_devicebrand();
  void set_allocated_devicebrand(::std::string* devicebrand);

  // optional string deviceModel = 16;
  bool has_devicemodel() const;
  void clear_devicemodel();
  static const int kDeviceModelFieldNumber = 16;
  const ::std::string& devicemodel() const;
  void set_devicemodel(const ::std::string& value);
  #if LANG_CXX11
  void set_devicemodel(::std::string&& value);
  #endif
  void set_devicemodel(const char* value);
  void set_devicemodel(const char* value, size_t size);
  ::std::string* mutable_devicemodel();
  ::std::string* release_devicemodel();
  void set_allocated_devicemodel(::std::string* devicemodel);

  // optional string osType = 17;
  bool has_ostype() const;
  void clear_ostype();
  static const int kOsTypeFieldNumber = 17;
  const ::std::string& ostype() const;
  void set_ostype(const ::std::string& value);
  #if LANG_CXX11
  void set_ostype(::std::string&& value);
  #endif
  void set_ostype(const char* value);
  void set_ostype(const char* value, size_t size);
  ::std::string* mutable_ostype();
  ::std::string* release_ostype();
  void set_allocated_ostype(::std::string* ostype);

  // optional string realCountry = 18;
  bool has_realcountry() const;
  void clear_realcountry();
  static const int kRealCountryFieldNumber = 18;
  const ::std::string& realcountry() const;
  void set_realcountry(const ::std::string& value);
  #if LANG_CXX11
  void set_realcountry(::std::string&& value);
  #endif
  void set_realcountry(const char* value);
  void set_realcountry(const char* value, size_t size);
  ::std::string* mutable_realcountry();
  ::std::string* release_realcountry();
  void set_allocated_realcountry(::std::string* realcountry);

  // optional .LoginInfo login = 1;
  bool has_login() const;
  void clear_login();
  static const int kLoginFieldNumber = 1;
  const ::LoginInfo& login() const;
  ::LoginInfo* mutable_login();
  ::LoginInfo* release_login();
  void set_allocated_login(::LoginInfo* login);

  // optional .ManualAuthDeviceRequest._Tag2 tag2 = 2;
  bool has_tag2() const;
  void clear_tag2();
  static const int kTag2FieldNumber = 2;
  const ::ManualAuthDeviceRequest__Tag2& tag2() const;
  ::ManualAuthDeviceRequest__Tag2* mutable_tag2();
  ::ManualAuthDeviceRequest__Tag2* release_tag2();
  void set_allocated_tag2(::ManualAuthDeviceRequest__Tag2* tag2);

  // optional int32 unknown5 = 5;
  bool has_unknown5() const;
  void clear_unknown5();
  static const int kUnknown5FieldNumber = 5;
  ::google::protobuf::int32 unknown5() const;
  void set_unknown5(::google::protobuf::int32 value);

  // optional int32 unknown13 = 13;
  bool has_unknown13() const;
  void clear_unknown13();
  static const int kUnknown13FieldNumber = 13;
  ::google::protobuf::int32 unknown13() const;
  void set_unknown13(::google::protobuf::int32 value);

  // optional int32 unknown14 = 14;
  bool has_unknown14() const;
  void clear_unknown14();
  static const int kUnknown14FieldNumber = 14;
  ::google::protobuf::int32 unknown14() const;
  void set_unknown14(::google::protobuf::int32 value);

  // optional int32 unknown22 = 22;
  bool has_unknown22() const;
  void clear_unknown22();
  static const int kUnknown22FieldNumber = 22;
  ::google::protobuf::int32 unknown22() const;
  void set_unknown22(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ManualAuthDeviceRequest)
 private:
  void set_has_login();
  void clear_has_login();
  void set_has_tag2();
  void clear_has_tag2();
  void set_has_imei();
  void clear_has_imei();
  void set_has_softinfoxml();
  void clear_has_softinfoxml();
  void set_has_unknown5();
  void clear_has_unknown5();
  void set_has_clientseqid();
  void clear_has_clientseqid();
  void set_has_clientseqid_sign();
  void clear_has_clientseqid_sign();
  void set_has_logindevicename();
  void clear_has_logindevicename();
  void set_has_deviceinfoxml();
  void clear_has_deviceinfoxml();
  void set_has_language();
  void clear_has_language();
  void set_has_timezone();
  void clear_has_timezone();
  void set_has_unknown13();
  void clear_has_unknown13();
  void set_has_unknown14();
  void clear_has_unknown14();
  void set_has_devicebrand();
  void clear_has_devicebrand();
  void set_has_devicemodel();
  void clear_has_devicemodel();
  void set_has_ostype();
  void clear_has_ostype();
  void set_has_realcountry();
  void clear_has_realcountry();
  void set_has_unknown22();
  void clear_has_unknown22();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr imei_;
  ::google::protobuf::internal::ArenaStringPtr softinfoxml_;
  ::google::protobuf::internal::ArenaStringPtr clientseqid_;
  ::google::protobuf::internal::ArenaStringPtr clientseqid_sign_;
  ::google::protobuf::internal::ArenaStringPtr logindevicename_;
  ::google::protobuf::internal::ArenaStringPtr deviceinfoxml_;
  ::google::protobuf::internal::ArenaStringPtr language_;
  ::google::protobuf::internal::ArenaStringPtr timezone_;
  ::google::protobuf::internal::ArenaStringPtr devicebrand_;
  ::google::protobuf::internal::ArenaStringPtr devicemodel_;
  ::google::protobuf::internal::ArenaStringPtr ostype_;
  ::google::protobuf::internal::ArenaStringPtr realcountry_;
  ::LoginInfo* login_;
  ::ManualAuthDeviceRequest__Tag2* tag2_;
  ::google::protobuf::int32 unknown5_;
  ::google::protobuf::int32 unknown13_;
  ::google::protobuf::int32 unknown14_;
  ::google::protobuf::int32 unknown22_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ManualAuthResponse_AuthResult_ErrMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManualAuthResponse.AuthResult.ErrMsg) */ {
 public:
  ManualAuthResponse_AuthResult_ErrMsg();
  virtual ~ManualAuthResponse_AuthResult_ErrMsg();

  ManualAuthResponse_AuthResult_ErrMsg(const ManualAuthResponse_AuthResult_ErrMsg& from);

  inline ManualAuthResponse_AuthResult_ErrMsg& operator=(const ManualAuthResponse_AuthResult_ErrMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManualAuthResponse_AuthResult_ErrMsg& default_instance();

  static inline const ManualAuthResponse_AuthResult_ErrMsg* internal_default_instance() {
    return reinterpret_cast<const ManualAuthResponse_AuthResult_ErrMsg*>(
               &_ManualAuthResponse_AuthResult_ErrMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(ManualAuthResponse_AuthResult_ErrMsg* other);

  // implements Message ----------------------------------------------

  inline ManualAuthResponse_AuthResult_ErrMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  ManualAuthResponse_AuthResult_ErrMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ManualAuthResponse_AuthResult_ErrMsg& from);
  void MergeFrom(const ManualAuthResponse_AuthResult_ErrMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ManualAuthResponse_AuthResult_ErrMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 1;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:ManualAuthResponse.AuthResult.ErrMsg)
 private:
  void set_has_msg();
  void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ManualAuthResponse_AuthResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManualAuthResponse.AuthResult) */ {
 public:
  ManualAuthResponse_AuthResult();
  virtual ~ManualAuthResponse_AuthResult();

  ManualAuthResponse_AuthResult(const ManualAuthResponse_AuthResult& from);

  inline ManualAuthResponse_AuthResult& operator=(const ManualAuthResponse_AuthResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManualAuthResponse_AuthResult& default_instance();

  static inline const ManualAuthResponse_AuthResult* internal_default_instance() {
    return reinterpret_cast<const ManualAuthResponse_AuthResult*>(
               &_ManualAuthResponse_AuthResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(ManualAuthResponse_AuthResult* other);

  // implements Message ----------------------------------------------

  inline ManualAuthResponse_AuthResult* New() const PROTOBUF_FINAL { return New(NULL); }

  ManualAuthResponse_AuthResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ManualAuthResponse_AuthResult& from);
  void MergeFrom(const ManualAuthResponse_AuthResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ManualAuthResponse_AuthResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ManualAuthResponse_AuthResult_ErrMsg ErrMsg;

  // accessors -------------------------------------------------------

  // required .ManualAuthResponse.AuthResult.ErrMsg err_msg = 2;
  bool has_err_msg() const;
  void clear_err_msg();
  static const int kErrMsgFieldNumber = 2;
  const ::ManualAuthResponse_AuthResult_ErrMsg& err_msg() const;
  ::ManualAuthResponse_AuthResult_ErrMsg* mutable_err_msg();
  ::ManualAuthResponse_AuthResult_ErrMsg* release_err_msg();
  void set_allocated_err_msg(::ManualAuthResponse_AuthResult_ErrMsg* err_msg);

  // required int32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ManualAuthResponse.AuthResult)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_err_msg();
  void clear_has_err_msg();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::ManualAuthResponse_AuthResult_ErrMsg* err_msg_;
  ::google::protobuf::int32 code_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ManualAuthResponse_AuthParam_Ecdh_EcdhKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManualAuthResponse.AuthParam.Ecdh.EcdhKey) */ {
 public:
  ManualAuthResponse_AuthParam_Ecdh_EcdhKey();
  virtual ~ManualAuthResponse_AuthParam_Ecdh_EcdhKey();

  ManualAuthResponse_AuthParam_Ecdh_EcdhKey(const ManualAuthResponse_AuthParam_Ecdh_EcdhKey& from);

  inline ManualAuthResponse_AuthParam_Ecdh_EcdhKey& operator=(const ManualAuthResponse_AuthParam_Ecdh_EcdhKey& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManualAuthResponse_AuthParam_Ecdh_EcdhKey& default_instance();

  static inline const ManualAuthResponse_AuthParam_Ecdh_EcdhKey* internal_default_instance() {
    return reinterpret_cast<const ManualAuthResponse_AuthParam_Ecdh_EcdhKey*>(
               &_ManualAuthResponse_AuthParam_Ecdh_EcdhKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(ManualAuthResponse_AuthParam_Ecdh_EcdhKey* other);

  // implements Message ----------------------------------------------

  inline ManualAuthResponse_AuthParam_Ecdh_EcdhKey* New() const PROTOBUF_FINAL { return New(NULL); }

  ManualAuthResponse_AuthParam_Ecdh_EcdhKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ManualAuthResponse_AuthParam_Ecdh_EcdhKey& from);
  void MergeFrom(const ManualAuthResponse_AuthParam_Ecdh_EcdhKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ManualAuthResponse_AuthParam_Ecdh_EcdhKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes key = 2;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // required int32 len = 1;
  bool has_len() const;
  void clear_len();
  static const int kLenFieldNumber = 1;
  ::google::protobuf::int32 len() const;
  void set_len(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ManualAuthResponse.AuthParam.Ecdh.EcdhKey)
 private:
  void set_has_len();
  void clear_has_len();
  void set_has_key();
  void clear_has_key();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::int32 len_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ManualAuthResponse_AuthParam_Ecdh : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManualAuthResponse.AuthParam.Ecdh) */ {
 public:
  ManualAuthResponse_AuthParam_Ecdh();
  virtual ~ManualAuthResponse_AuthParam_Ecdh();

  ManualAuthResponse_AuthParam_Ecdh(const ManualAuthResponse_AuthParam_Ecdh& from);

  inline ManualAuthResponse_AuthParam_Ecdh& operator=(const ManualAuthResponse_AuthParam_Ecdh& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManualAuthResponse_AuthParam_Ecdh& default_instance();

  static inline const ManualAuthResponse_AuthParam_Ecdh* internal_default_instance() {
    return reinterpret_cast<const ManualAuthResponse_AuthParam_Ecdh*>(
               &_ManualAuthResponse_AuthParam_Ecdh_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(ManualAuthResponse_AuthParam_Ecdh* other);

  // implements Message ----------------------------------------------

  inline ManualAuthResponse_AuthParam_Ecdh* New() const PROTOBUF_FINAL { return New(NULL); }

  ManualAuthResponse_AuthParam_Ecdh* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ManualAuthResponse_AuthParam_Ecdh& from);
  void MergeFrom(const ManualAuthResponse_AuthParam_Ecdh& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ManualAuthResponse_AuthParam_Ecdh* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ManualAuthResponse_AuthParam_Ecdh_EcdhKey EcdhKey;

  // accessors -------------------------------------------------------

  // optional .ManualAuthResponse.AuthParam.Ecdh.EcdhKey ecdhKey = 2;
  bool has_ecdhkey() const;
  void clear_ecdhkey();
  static const int kEcdhKeyFieldNumber = 2;
  const ::ManualAuthResponse_AuthParam_Ecdh_EcdhKey& ecdhkey() const;
  ::ManualAuthResponse_AuthParam_Ecdh_EcdhKey* mutable_ecdhkey();
  ::ManualAuthResponse_AuthParam_Ecdh_EcdhKey* release_ecdhkey();
  void set_allocated_ecdhkey(::ManualAuthResponse_AuthParam_Ecdh_EcdhKey* ecdhkey);

  // required int32 nid = 1;
  bool has_nid() const;
  void clear_nid();
  static const int kNidFieldNumber = 1;
  ::google::protobuf::int32 nid() const;
  void set_nid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ManualAuthResponse.AuthParam.Ecdh)
 private:
  void set_has_nid();
  void clear_has_nid();
  void set_has_ecdhkey();
  void clear_has_ecdhkey();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::ManualAuthResponse_AuthParam_Ecdh_EcdhKey* ecdhkey_;
  ::google::protobuf::int32 nid_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ManualAuthResponse_AuthParam_SessionKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManualAuthResponse.AuthParam.SessionKey) */ {
 public:
  ManualAuthResponse_AuthParam_SessionKey();
  virtual ~ManualAuthResponse_AuthParam_SessionKey();

  ManualAuthResponse_AuthParam_SessionKey(const ManualAuthResponse_AuthParam_SessionKey& from);

  inline ManualAuthResponse_AuthParam_SessionKey& operator=(const ManualAuthResponse_AuthParam_SessionKey& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManualAuthResponse_AuthParam_SessionKey& default_instance();

  static inline const ManualAuthResponse_AuthParam_SessionKey* internal_default_instance() {
    return reinterpret_cast<const ManualAuthResponse_AuthParam_SessionKey*>(
               &_ManualAuthResponse_AuthParam_SessionKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(ManualAuthResponse_AuthParam_SessionKey* other);

  // implements Message ----------------------------------------------

  inline ManualAuthResponse_AuthParam_SessionKey* New() const PROTOBUF_FINAL { return New(NULL); }

  ManualAuthResponse_AuthParam_SessionKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ManualAuthResponse_AuthParam_SessionKey& from);
  void MergeFrom(const ManualAuthResponse_AuthParam_SessionKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ManualAuthResponse_AuthParam_SessionKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes key = 2;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const void* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // required int32 len = 1;
  bool has_len() const;
  void clear_len();
  static const int kLenFieldNumber = 1;
  ::google::protobuf::int32 len() const;
  void set_len(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ManualAuthResponse.AuthParam.SessionKey)
 private:
  void set_has_len();
  void clear_has_len();
  void set_has_key();
  void clear_has_key();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::int32 len_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ManualAuthResponse_AuthParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManualAuthResponse.AuthParam) */ {
 public:
  ManualAuthResponse_AuthParam();
  virtual ~ManualAuthResponse_AuthParam();

  ManualAuthResponse_AuthParam(const ManualAuthResponse_AuthParam& from);

  inline ManualAuthResponse_AuthParam& operator=(const ManualAuthResponse_AuthParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManualAuthResponse_AuthParam& default_instance();

  static inline const ManualAuthResponse_AuthParam* internal_default_instance() {
    return reinterpret_cast<const ManualAuthResponse_AuthParam*>(
               &_ManualAuthResponse_AuthParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(ManualAuthResponse_AuthParam* other);

  // implements Message ----------------------------------------------

  inline ManualAuthResponse_AuthParam* New() const PROTOBUF_FINAL { return New(NULL); }

  ManualAuthResponse_AuthParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ManualAuthResponse_AuthParam& from);
  void MergeFrom(const ManualAuthResponse_AuthParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ManualAuthResponse_AuthParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ManualAuthResponse_AuthParam_Ecdh Ecdh;
  typedef ManualAuthResponse_AuthParam_SessionKey SessionKey;

  // accessors -------------------------------------------------------

  // optional bytes SmsTicket = 16;
  bool has_smsticket() const;
  void clear_smsticket();
  static const int kSmsTicketFieldNumber = 16;
  const ::std::string& smsticket() const;
  void set_smsticket(const ::std::string& value);
  #if LANG_CXX11
  void set_smsticket(::std::string&& value);
  #endif
  void set_smsticket(const char* value);
  void set_smsticket(const void* value, size_t size);
  ::std::string* mutable_smsticket();
  ::std::string* release_smsticket();
  void set_allocated_smsticket(::std::string* smsticket);

  // optional string bindMailLoginUrl = 20;
  bool has_bindmailloginurl() const;
  void clear_bindmailloginurl();
  static const int kBindMailLoginUrlFieldNumber = 20;
  const ::std::string& bindmailloginurl() const;
  void set_bindmailloginurl(const ::std::string& value);
  #if LANG_CXX11
  void set_bindmailloginurl(::std::string&& value);
  #endif
  void set_bindmailloginurl(const char* value);
  void set_bindmailloginurl(const char* value, size_t size);
  ::std::string* mutable_bindmailloginurl();
  ::std::string* release_bindmailloginurl();
  void set_allocated_bindmailloginurl(::std::string* bindmailloginurl);

  // required .ManualAuthResponse.AuthParam.Ecdh ecdh = 2;
  bool has_ecdh() const;
  void clear_ecdh();
  static const int kEcdhFieldNumber = 2;
  const ::ManualAuthResponse_AuthParam_Ecdh& ecdh() const;
  ::ManualAuthResponse_AuthParam_Ecdh* mutable_ecdh();
  ::ManualAuthResponse_AuthParam_Ecdh* release_ecdh();
  void set_allocated_ecdh(::ManualAuthResponse_AuthParam_Ecdh* ecdh);

  // required .ManualAuthResponse.AuthParam.SessionKey session = 3;
  bool has_session() const;
  void clear_session();
  static const int kSessionFieldNumber = 3;
  const ::ManualAuthResponse_AuthParam_SessionKey& session() const;
  ::ManualAuthResponse_AuthParam_SessionKey* mutable_session();
  ::ManualAuthResponse_AuthParam_SessionKey* release_session();
  void set_allocated_session(::ManualAuthResponse_AuthParam_SessionKey* session);

  // required int32 uin = 1;
  bool has_uin() const;
  void clear_uin();
  static const int kUinFieldNumber = 1;
  ::google::protobuf::int32 uin() const;
  void set_uin(::google::protobuf::int32 value);

  // optional int32 serverTime = 22;
  bool has_servertime() const;
  void clear_servertime();
  static const int kServerTimeFieldNumber = 22;
  ::google::protobuf::int32 servertime() const;
  void set_servertime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ManualAuthResponse.AuthParam)
 private:
  void set_has_uin();
  void clear_has_uin();
  void set_has_ecdh();
  void clear_has_ecdh();
  void set_has_session();
  void clear_has_session();
  void set_has_smsticket();
  void clear_has_smsticket();
  void set_has_bindmailloginurl();
  void clear_has_bindmailloginurl();
  void set_has_servertime();
  void clear_has_servertime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr smsticket_;
  ::google::protobuf::internal::ArenaStringPtr bindmailloginurl_;
  ::ManualAuthResponse_AuthParam_Ecdh* ecdh_;
  ::ManualAuthResponse_AuthParam_SessionKey* session_;
  ::google::protobuf::int32 uin_;
  ::google::protobuf::int32 servertime_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ManualAuthResponse_AccountInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManualAuthResponse.AccountInfo) */ {
 public:
  ManualAuthResponse_AccountInfo();
  virtual ~ManualAuthResponse_AccountInfo();

  ManualAuthResponse_AccountInfo(const ManualAuthResponse_AccountInfo& from);

  inline ManualAuthResponse_AccountInfo& operator=(const ManualAuthResponse_AccountInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManualAuthResponse_AccountInfo& default_instance();

  static inline const ManualAuthResponse_AccountInfo* internal_default_instance() {
    return reinterpret_cast<const ManualAuthResponse_AccountInfo*>(
               &_ManualAuthResponse_AccountInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(ManualAuthResponse_AccountInfo* other);

  // implements Message ----------------------------------------------

  inline ManualAuthResponse_AccountInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ManualAuthResponse_AccountInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ManualAuthResponse_AccountInfo& from);
  void MergeFrom(const ManualAuthResponse_AccountInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ManualAuthResponse_AccountInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string wxId = 1;
  bool has_wxid() const;
  void clear_wxid();
  static const int kWxIdFieldNumber = 1;
  const ::std::string& wxid() const;
  void set_wxid(const ::std::string& value);
  #if LANG_CXX11
  void set_wxid(::std::string&& value);
  #endif
  void set_wxid(const char* value);
  void set_wxid(const char* value, size_t size);
  ::std::string* mutable_wxid();
  ::std::string* release_wxid();
  void set_allocated_wxid(::std::string* wxid);

  // optional string nickName = 2;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNickNameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional string bindMail = 4;
  bool has_bindmail() const;
  void clear_bindmail();
  static const int kBindMailFieldNumber = 4;
  const ::std::string& bindmail() const;
  void set_bindmail(const ::std::string& value);
  #if LANG_CXX11
  void set_bindmail(::std::string&& value);
  #endif
  void set_bindmail(const char* value);
  void set_bindmail(const char* value, size_t size);
  ::std::string* mutable_bindmail();
  ::std::string* release_bindmail();
  void set_allocated_bindmail(::std::string* bindmail);

  // optional string bindMobile = 5;
  bool has_bindmobile() const;
  void clear_bindmobile();
  static const int kBindMobileFieldNumber = 5;
  const ::std::string& bindmobile() const;
  void set_bindmobile(const ::std::string& value);
  #if LANG_CXX11
  void set_bindmobile(::std::string&& value);
  #endif
  void set_bindmobile(const char* value);
  void set_bindmobile(const char* value, size_t size);
  ::std::string* mutable_bindmobile();
  ::std::string* release_bindmobile();
  void set_allocated_bindmobile(::std::string* bindmobile);

  // optional string Alias = 6;
  bool has_alias() const;
  void clear_alias();
  static const int kAliasFieldNumber = 6;
  const ::std::string& alias() const;
  void set_alias(const ::std::string& value);
  #if LANG_CXX11
  void set_alias(::std::string&& value);
  #endif
  void set_alias(const char* value);
  void set_alias(const char* value, size_t size);
  ::std::string* mutable_alias();
  ::std::string* release_alias();
  void set_allocated_alias(::std::string* alias);

  // optional string tag7 = 7;
  bool has_tag7() const;
  void clear_tag7();
  static const int kTag7FieldNumber = 7;
  const ::std::string& tag7() const;
  void set_tag7(const ::std::string& value);
  #if LANG_CXX11
  void set_tag7(::std::string&& value);
  #endif
  void set_tag7(const char* value);
  void set_tag7(const char* value, size_t size);
  ::std::string* mutable_tag7();
  ::std::string* release_tag7();
  void set_allocated_tag7(::std::string* tag7);

  // optional string tag11 = 11;
  bool has_tag11() const;
  void clear_tag11();
  static const int kTag11FieldNumber = 11;
  const ::std::string& tag11() const;
  void set_tag11(const ::std::string& value);
  #if LANG_CXX11
  void set_tag11(::std::string&& value);
  #endif
  void set_tag11(const char* value);
  void set_tag11(const char* value, size_t size);
  ::std::string* mutable_tag11();
  ::std::string* release_tag11();
  void set_allocated_tag11(::std::string* tag11);

  // optional string officialNamePinyin = 13;
  bool has_officialnamepinyin() const;
  void clear_officialnamepinyin();
  static const int kOfficialNamePinyinFieldNumber = 13;
  const ::std::string& officialnamepinyin() const;
  void set_officialnamepinyin(const ::std::string& value);
  #if LANG_CXX11
  void set_officialnamepinyin(::std::string&& value);
  #endif
  void set_officialnamepinyin(const char* value);
  void set_officialnamepinyin(const char* value, size_t size);
  ::std::string* mutable_officialnamepinyin();
  ::std::string* release_officialnamepinyin();
  void set_allocated_officialnamepinyin(::std::string* officialnamepinyin);

  // optional string officialNameZh = 14;
  bool has_officialnamezh() const;
  void clear_officialnamezh();
  static const int kOfficialNameZhFieldNumber = 14;
  const ::std::string& officialnamezh() const;
  void set_officialnamezh(const ::std::string& value);
  #if LANG_CXX11
  void set_officialnamezh(::std::string&& value);
  #endif
  void set_officialnamezh(const char* value);
  void set_officialnamezh(const char* value, size_t size);
  ::std::string* mutable_officialnamezh();
  ::std::string* release_officialnamezh();
  void set_allocated_officialnamezh(::std::string* officialnamezh);

  // optional string tag15 = 15;
  bool has_tag15() const;
  void clear_tag15();
  static const int kTag15FieldNumber = 15;
  const ::std::string& tag15() const;
  void set_tag15(const ::std::string& value);
  #if LANG_CXX11
  void set_tag15(::std::string&& value);
  #endif
  void set_tag15(const char* value);
  void set_tag15(const char* value, size_t size);
  ::std::string* mutable_tag15();
  ::std::string* release_tag15();
  void set_allocated_tag15(::std::string* tag15);

  // optional string fsUrl = 16;
  bool has_fsurl() const;
  void clear_fsurl();
  static const int kFsUrlFieldNumber = 16;
  const ::std::string& fsurl() const;
  void set_fsurl(const ::std::string& value);
  #if LANG_CXX11
  void set_fsurl(::std::string&& value);
  #endif
  void set_fsurl(const char* value);
  void set_fsurl(const char* value, size_t size);
  ::std::string* mutable_fsurl();
  ::std::string* release_fsurl();
  void set_allocated_fsurl(::std::string* fsurl);

  // optional int32 tag3 = 3;
  bool has_tag3() const;
  void clear_tag3();
  static const int kTag3FieldNumber = 3;
  ::google::protobuf::int32 tag3() const;
  void set_tag3(::google::protobuf::int32 value);

  // optional int32 status = 8;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 8;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional int32 pluginFlag = 9;
  bool has_pluginflag() const;
  void clear_pluginflag();
  static const int kPluginFlagFieldNumber = 9;
  ::google::protobuf::int32 pluginflag() const;
  void set_pluginflag(::google::protobuf::int32 value);

  // optional int32 registerType = 10;
  bool has_registertype() const;
  void clear_registertype();
  static const int kRegisterTypeFieldNumber = 10;
  ::google::protobuf::int32 registertype() const;
  void set_registertype(::google::protobuf::int32 value);

  // optional int32 safeDevice = 12;
  bool has_safedevice() const;
  void clear_safedevice();
  static const int kSafeDeviceFieldNumber = 12;
  ::google::protobuf::int32 safedevice() const;
  void set_safedevice(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ManualAuthResponse.AccountInfo)
 private:
  void set_has_wxid();
  void clear_has_wxid();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_tag3();
  void clear_has_tag3();
  void set_has_bindmail();
  void clear_has_bindmail();
  void set_has_bindmobile();
  void clear_has_bindmobile();
  void set_has_alias();
  void clear_has_alias();
  void set_has_tag7();
  void clear_has_tag7();
  void set_has_status();
  void clear_has_status();
  void set_has_pluginflag();
  void clear_has_pluginflag();
  void set_has_registertype();
  void clear_has_registertype();
  void set_has_tag11();
  void clear_has_tag11();
  void set_has_safedevice();
  void clear_has_safedevice();
  void set_has_officialnamepinyin();
  void clear_has_officialnamepinyin();
  void set_has_officialnamezh();
  void clear_has_officialnamezh();
  void set_has_tag15();
  void clear_has_tag15();
  void set_has_fsurl();
  void clear_has_fsurl();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr wxid_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr bindmail_;
  ::google::protobuf::internal::ArenaStringPtr bindmobile_;
  ::google::protobuf::internal::ArenaStringPtr alias_;
  ::google::protobuf::internal::ArenaStringPtr tag7_;
  ::google::protobuf::internal::ArenaStringPtr tag11_;
  ::google::protobuf::internal::ArenaStringPtr officialnamepinyin_;
  ::google::protobuf::internal::ArenaStringPtr officialnamezh_;
  ::google::protobuf::internal::ArenaStringPtr tag15_;
  ::google::protobuf::internal::ArenaStringPtr fsurl_;
  ::google::protobuf::int32 tag3_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 pluginflag_;
  ::google::protobuf::int32 registertype_;
  ::google::protobuf::int32 safedevice_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ManualAuthResponse_dns_info_redirect_info_real_host_info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManualAuthResponse.dns_info.redirect_info.real_host_info) */ {
 public:
  ManualAuthResponse_dns_info_redirect_info_real_host_info();
  virtual ~ManualAuthResponse_dns_info_redirect_info_real_host_info();

  ManualAuthResponse_dns_info_redirect_info_real_host_info(const ManualAuthResponse_dns_info_redirect_info_real_host_info& from);

  inline ManualAuthResponse_dns_info_redirect_info_real_host_info& operator=(const ManualAuthResponse_dns_info_redirect_info_real_host_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManualAuthResponse_dns_info_redirect_info_real_host_info& default_instance();

  static inline const ManualAuthResponse_dns_info_redirect_info_real_host_info* internal_default_instance() {
    return reinterpret_cast<const ManualAuthResponse_dns_info_redirect_info_real_host_info*>(
               &_ManualAuthResponse_dns_info_redirect_info_real_host_info_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(ManualAuthResponse_dns_info_redirect_info_real_host_info* other);

  // implements Message ----------------------------------------------

  inline ManualAuthResponse_dns_info_redirect_info_real_host_info* New() const PROTOBUF_FINAL { return New(NULL); }

  ManualAuthResponse_dns_info_redirect_info_real_host_info* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ManualAuthResponse_dns_info_redirect_info_real_host_info& from);
  void MergeFrom(const ManualAuthResponse_dns_info_redirect_info_real_host_info& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ManualAuthResponse_dns_info_redirect_info_real_host_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string host = 1;
  bool has_host() const;
  void clear_host();
  static const int kHostFieldNumber = 1;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  #if LANG_CXX11
  void set_host(::std::string&& value);
  #endif
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);

  // optional string redirect = 2;
  bool has_redirect() const;
  void clear_redirect();
  static const int kRedirectFieldNumber = 2;
  const ::std::string& redirect() const;
  void set_redirect(const ::std::string& value);
  #if LANG_CXX11
  void set_redirect(::std::string&& value);
  #endif
  void set_redirect(const char* value);
  void set_redirect(const char* value, size_t size);
  ::std::string* mutable_redirect();
  ::std::string* release_redirect();
  void set_allocated_redirect(::std::string* redirect);

  // @@protoc_insertion_point(class_scope:ManualAuthResponse.dns_info.redirect_info.real_host_info)
 private:
  void set_has_host();
  void clear_has_host();
  void set_has_redirect();
  void clear_has_redirect();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  ::google::protobuf::internal::ArenaStringPtr redirect_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ManualAuthResponse_dns_info_redirect_info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManualAuthResponse.dns_info.redirect_info) */ {
 public:
  ManualAuthResponse_dns_info_redirect_info();
  virtual ~ManualAuthResponse_dns_info_redirect_info();

  ManualAuthResponse_dns_info_redirect_info(const ManualAuthResponse_dns_info_redirect_info& from);

  inline ManualAuthResponse_dns_info_redirect_info& operator=(const ManualAuthResponse_dns_info_redirect_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManualAuthResponse_dns_info_redirect_info& default_instance();

  static inline const ManualAuthResponse_dns_info_redirect_info* internal_default_instance() {
    return reinterpret_cast<const ManualAuthResponse_dns_info_redirect_info*>(
               &_ManualAuthResponse_dns_info_redirect_info_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(ManualAuthResponse_dns_info_redirect_info* other);

  // implements Message ----------------------------------------------

  inline ManualAuthResponse_dns_info_redirect_info* New() const PROTOBUF_FINAL { return New(NULL); }

  ManualAuthResponse_dns_info_redirect_info* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ManualAuthResponse_dns_info_redirect_info& from);
  void MergeFrom(const ManualAuthResponse_dns_info_redirect_info& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ManualAuthResponse_dns_info_redirect_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ManualAuthResponse_dns_info_redirect_info_real_host_info real_host_info;

  // accessors -------------------------------------------------------

  // repeated .ManualAuthResponse.dns_info.redirect_info.real_host_info real_host = 2;
  int real_host_size() const;
  void clear_real_host();
  static const int kRealHostFieldNumber = 2;
  const ::ManualAuthResponse_dns_info_redirect_info_real_host_info& real_host(int index) const;
  ::ManualAuthResponse_dns_info_redirect_info_real_host_info* mutable_real_host(int index);
  ::ManualAuthResponse_dns_info_redirect_info_real_host_info* add_real_host();
  ::google::protobuf::RepeatedPtrField< ::ManualAuthResponse_dns_info_redirect_info_real_host_info >*
      mutable_real_host();
  const ::google::protobuf::RepeatedPtrField< ::ManualAuthResponse_dns_info_redirect_info_real_host_info >&
      real_host() const;

  // optional int32 cnt = 1;
  bool has_cnt() const;
  void clear_cnt();
  static const int kCntFieldNumber = 1;
  ::google::protobuf::int32 cnt() const;
  void set_cnt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ManualAuthResponse.dns_info.redirect_info)
 private:
  void set_has_cnt();
  void clear_has_cnt();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ManualAuthResponse_dns_info_redirect_info_real_host_info > real_host_;
  ::google::protobuf::int32 cnt_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ManualAuthResponse_dns_info_ip_info_longlink_ip_info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManualAuthResponse.dns_info.ip_info.longlink_ip_info) */ {
 public:
  ManualAuthResponse_dns_info_ip_info_longlink_ip_info();
  virtual ~ManualAuthResponse_dns_info_ip_info_longlink_ip_info();

  ManualAuthResponse_dns_info_ip_info_longlink_ip_info(const ManualAuthResponse_dns_info_ip_info_longlink_ip_info& from);

  inline ManualAuthResponse_dns_info_ip_info_longlink_ip_info& operator=(const ManualAuthResponse_dns_info_ip_info_longlink_ip_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManualAuthResponse_dns_info_ip_info_longlink_ip_info& default_instance();

  static inline const ManualAuthResponse_dns_info_ip_info_longlink_ip_info* internal_default_instance() {
    return reinterpret_cast<const ManualAuthResponse_dns_info_ip_info_longlink_ip_info*>(
               &_ManualAuthResponse_dns_info_ip_info_longlink_ip_info_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(ManualAuthResponse_dns_info_ip_info_longlink_ip_info* other);

  // implements Message ----------------------------------------------

  inline ManualAuthResponse_dns_info_ip_info_longlink_ip_info* New() const PROTOBUF_FINAL { return New(NULL); }

  ManualAuthResponse_dns_info_ip_info_longlink_ip_info* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ManualAuthResponse_dns_info_ip_info_longlink_ip_info& from);
  void MergeFrom(const ManualAuthResponse_dns_info_ip_info_longlink_ip_info& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ManualAuthResponse_dns_info_ip_info_longlink_ip_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ip = 3;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 3;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional string host = 4;
  bool has_host() const;
  void clear_host();
  static const int kHostFieldNumber = 4;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  #if LANG_CXX11
  void set_host(::std::string&& value);
  #endif
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);

  // @@protoc_insertion_point(class_scope:ManualAuthResponse.dns_info.ip_info.longlink_ip_info)
 private:
  void set_has_ip();
  void clear_has_ip();
  void set_has_host();
  void clear_has_host();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ManualAuthResponse_dns_info_ip_info_shortlink_ip_info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManualAuthResponse.dns_info.ip_info.shortlink_ip_info) */ {
 public:
  ManualAuthResponse_dns_info_ip_info_shortlink_ip_info();
  virtual ~ManualAuthResponse_dns_info_ip_info_shortlink_ip_info();

  ManualAuthResponse_dns_info_ip_info_shortlink_ip_info(const ManualAuthResponse_dns_info_ip_info_shortlink_ip_info& from);

  inline ManualAuthResponse_dns_info_ip_info_shortlink_ip_info& operator=(const ManualAuthResponse_dns_info_ip_info_shortlink_ip_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManualAuthResponse_dns_info_ip_info_shortlink_ip_info& default_instance();

  static inline const ManualAuthResponse_dns_info_ip_info_shortlink_ip_info* internal_default_instance() {
    return reinterpret_cast<const ManualAuthResponse_dns_info_ip_info_shortlink_ip_info*>(
               &_ManualAuthResponse_dns_info_ip_info_shortlink_ip_info_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(ManualAuthResponse_dns_info_ip_info_shortlink_ip_info* other);

  // implements Message ----------------------------------------------

  inline ManualAuthResponse_dns_info_ip_info_shortlink_ip_info* New() const PROTOBUF_FINAL { return New(NULL); }

  ManualAuthResponse_dns_info_ip_info_shortlink_ip_info* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ManualAuthResponse_dns_info_ip_info_shortlink_ip_info& from);
  void MergeFrom(const ManualAuthResponse_dns_info_ip_info_shortlink_ip_info& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ManualAuthResponse_dns_info_ip_info_shortlink_ip_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ip = 3;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 3;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional string host = 4;
  bool has_host() const;
  void clear_host();
  static const int kHostFieldNumber = 4;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  #if LANG_CXX11
  void set_host(::std::string&& value);
  #endif
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);

  // @@protoc_insertion_point(class_scope:ManualAuthResponse.dns_info.ip_info.shortlink_ip_info)
 private:
  void set_has_ip();
  void clear_has_ip();
  void set_has_host();
  void clear_has_host();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ManualAuthResponse_dns_info_ip_info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManualAuthResponse.dns_info.ip_info) */ {
 public:
  ManualAuthResponse_dns_info_ip_info();
  virtual ~ManualAuthResponse_dns_info_ip_info();

  ManualAuthResponse_dns_info_ip_info(const ManualAuthResponse_dns_info_ip_info& from);

  inline ManualAuthResponse_dns_info_ip_info& operator=(const ManualAuthResponse_dns_info_ip_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManualAuthResponse_dns_info_ip_info& default_instance();

  static inline const ManualAuthResponse_dns_info_ip_info* internal_default_instance() {
    return reinterpret_cast<const ManualAuthResponse_dns_info_ip_info*>(
               &_ManualAuthResponse_dns_info_ip_info_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(ManualAuthResponse_dns_info_ip_info* other);

  // implements Message ----------------------------------------------

  inline ManualAuthResponse_dns_info_ip_info* New() const PROTOBUF_FINAL { return New(NULL); }

  ManualAuthResponse_dns_info_ip_info* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ManualAuthResponse_dns_info_ip_info& from);
  void MergeFrom(const ManualAuthResponse_dns_info_ip_info& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ManualAuthResponse_dns_info_ip_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ManualAuthResponse_dns_info_ip_info_longlink_ip_info longlink_ip_info;
  typedef ManualAuthResponse_dns_info_ip_info_shortlink_ip_info shortlink_ip_info;

  // accessors -------------------------------------------------------

  // repeated .ManualAuthResponse.dns_info.ip_info.longlink_ip_info longlink = 3;
  int longlink_size() const;
  void clear_longlink();
  static const int kLonglinkFieldNumber = 3;
  const ::ManualAuthResponse_dns_info_ip_info_longlink_ip_info& longlink(int index) const;
  ::ManualAuthResponse_dns_info_ip_info_longlink_ip_info* mutable_longlink(int index);
  ::ManualAuthResponse_dns_info_ip_info_longlink_ip_info* add_longlink();
  ::google::protobuf::RepeatedPtrField< ::ManualAuthResponse_dns_info_ip_info_longlink_ip_info >*
      mutable_longlink();
  const ::google::protobuf::RepeatedPtrField< ::ManualAuthResponse_dns_info_ip_info_longlink_ip_info >&
      longlink() const;

  // repeated .ManualAuthResponse.dns_info.ip_info.shortlink_ip_info shortlink = 4;
  int shortlink_size() const;
  void clear_shortlink();
  static const int kShortlinkFieldNumber = 4;
  const ::ManualAuthResponse_dns_info_ip_info_shortlink_ip_info& shortlink(int index) const;
  ::ManualAuthResponse_dns_info_ip_info_shortlink_ip_info* mutable_shortlink(int index);
  ::ManualAuthResponse_dns_info_ip_info_shortlink_ip_info* add_shortlink();
  ::google::protobuf::RepeatedPtrField< ::ManualAuthResponse_dns_info_ip_info_shortlink_ip_info >*
      mutable_shortlink();
  const ::google::protobuf::RepeatedPtrField< ::ManualAuthResponse_dns_info_ip_info_shortlink_ip_info >&
      shortlink() const;

  // optional int32 longlink_ip_cnt = 1;
  bool has_longlink_ip_cnt() const;
  void clear_longlink_ip_cnt();
  static const int kLonglinkIpCntFieldNumber = 1;
  ::google::protobuf::int32 longlink_ip_cnt() const;
  void set_longlink_ip_cnt(::google::protobuf::int32 value);

  // optional int32 shortlink_ip_cnt = 2;
  bool has_shortlink_ip_cnt() const;
  void clear_shortlink_ip_cnt();
  static const int kShortlinkIpCntFieldNumber = 2;
  ::google::protobuf::int32 shortlink_ip_cnt() const;
  void set_shortlink_ip_cnt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ManualAuthResponse.dns_info.ip_info)
 private:
  void set_has_longlink_ip_cnt();
  void clear_has_longlink_ip_cnt();
  void set_has_shortlink_ip_cnt();
  void clear_has_shortlink_ip_cnt();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ManualAuthResponse_dns_info_ip_info_longlink_ip_info > longlink_;
  ::google::protobuf::RepeatedPtrField< ::ManualAuthResponse_dns_info_ip_info_shortlink_ip_info > shortlink_;
  ::google::protobuf::int32 longlink_ip_cnt_;
  ::google::protobuf::int32 shortlink_ip_cnt_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ManualAuthResponse_dns_info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManualAuthResponse.dns_info) */ {
 public:
  ManualAuthResponse_dns_info();
  virtual ~ManualAuthResponse_dns_info();

  ManualAuthResponse_dns_info(const ManualAuthResponse_dns_info& from);

  inline ManualAuthResponse_dns_info& operator=(const ManualAuthResponse_dns_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManualAuthResponse_dns_info& default_instance();

  static inline const ManualAuthResponse_dns_info* internal_default_instance() {
    return reinterpret_cast<const ManualAuthResponse_dns_info*>(
               &_ManualAuthResponse_dns_info_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(ManualAuthResponse_dns_info* other);

  // implements Message ----------------------------------------------

  inline ManualAuthResponse_dns_info* New() const PROTOBUF_FINAL { return New(NULL); }

  ManualAuthResponse_dns_info* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ManualAuthResponse_dns_info& from);
  void MergeFrom(const ManualAuthResponse_dns_info& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ManualAuthResponse_dns_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ManualAuthResponse_dns_info_redirect_info redirect_info;
  typedef ManualAuthResponse_dns_info_ip_info ip_info;

  // accessors -------------------------------------------------------

  // optional .ManualAuthResponse.dns_info.redirect_info redirect = 1;
  bool has_redirect() const;
  void clear_redirect();
  static const int kRedirectFieldNumber = 1;
  const ::ManualAuthResponse_dns_info_redirect_info& redirect() const;
  ::ManualAuthResponse_dns_info_redirect_info* mutable_redirect();
  ::ManualAuthResponse_dns_info_redirect_info* release_redirect();
  void set_allocated_redirect(::ManualAuthResponse_dns_info_redirect_info* redirect);

  // optional .ManualAuthResponse.dns_info.ip_info ip = 3;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 3;
  const ::ManualAuthResponse_dns_info_ip_info& ip() const;
  ::ManualAuthResponse_dns_info_ip_info* mutable_ip();
  ::ManualAuthResponse_dns_info_ip_info* release_ip();
  void set_allocated_ip(::ManualAuthResponse_dns_info_ip_info* ip);

  // @@protoc_insertion_point(class_scope:ManualAuthResponse.dns_info)
 private:
  void set_has_redirect();
  void clear_has_redirect();
  void set_has_ip();
  void clear_has_ip();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::ManualAuthResponse_dns_info_redirect_info* redirect_;
  ::ManualAuthResponse_dns_info_ip_info* ip_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ManualAuthResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ManualAuthResponse) */ {
 public:
  ManualAuthResponse();
  virtual ~ManualAuthResponse();

  ManualAuthResponse(const ManualAuthResponse& from);

  inline ManualAuthResponse& operator=(const ManualAuthResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ManualAuthResponse& default_instance();

  static inline const ManualAuthResponse* internal_default_instance() {
    return reinterpret_cast<const ManualAuthResponse*>(
               &_ManualAuthResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(ManualAuthResponse* other);

  // implements Message ----------------------------------------------

  inline ManualAuthResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ManualAuthResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ManualAuthResponse& from);
  void MergeFrom(const ManualAuthResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ManualAuthResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ManualAuthResponse_AuthResult AuthResult;
  typedef ManualAuthResponse_AuthParam AuthParam;
  typedef ManualAuthResponse_AccountInfo AccountInfo;
  typedef ManualAuthResponse_dns_info dns_info;

  // accessors -------------------------------------------------------

  // required .ManualAuthResponse.AuthResult result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  const ::ManualAuthResponse_AuthResult& result() const;
  ::ManualAuthResponse_AuthResult* mutable_result();
  ::ManualAuthResponse_AuthResult* release_result();
  void set_allocated_result(::ManualAuthResponse_AuthResult* result);

  // required .ManualAuthResponse.AuthParam authParam = 3;
  bool has_authparam() const;
  void clear_authparam();
  static const int kAuthParamFieldNumber = 3;
  const ::ManualAuthResponse_AuthParam& authparam() const;
  ::ManualAuthResponse_AuthParam* mutable_authparam();
  ::ManualAuthResponse_AuthParam* release_authparam();
  void set_allocated_authparam(::ManualAuthResponse_AuthParam* authparam);

  // optional .ManualAuthResponse.AccountInfo accountInfo = 4;
  bool has_accountinfo() const;
  void clear_accountinfo();
  static const int kAccountInfoFieldNumber = 4;
  const ::ManualAuthResponse_AccountInfo& accountinfo() const;
  ::ManualAuthResponse_AccountInfo* mutable_accountinfo();
  ::ManualAuthResponse_AccountInfo* release_accountinfo();
  void set_allocated_accountinfo(::ManualAuthResponse_AccountInfo* accountinfo);

  // optional .ManualAuthResponse.dns_info dns = 5;
  bool has_dns() const;
  void clear_dns();
  static const int kDnsFieldNumber = 5;
  const ::ManualAuthResponse_dns_info& dns() const;
  ::ManualAuthResponse_dns_info* mutable_dns();
  ::ManualAuthResponse_dns_info* release_dns();
  void set_allocated_dns(::ManualAuthResponse_dns_info* dns);

  // required int32 unifyFlag = 2;
  bool has_unifyflag() const;
  void clear_unifyflag();
  static const int kUnifyFlagFieldNumber = 2;
  ::google::protobuf::int32 unifyflag() const;
  void set_unifyflag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ManualAuthResponse)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_unifyflag();
  void clear_has_unifyflag();
  void set_has_authparam();
  void clear_has_authparam();
  void set_has_accountinfo();
  void clear_has_accountinfo();
  void set_has_dns();
  void clear_has_dns();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::ManualAuthResponse_AuthResult* result_;
  ::ManualAuthResponse_AuthParam* authparam_;
  ::ManualAuthResponse_AccountInfo* accountinfo_;
  ::ManualAuthResponse_dns_info* dns_;
  ::google::protobuf::int32 unifyflag_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NewInitRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NewInitRequest) */ {
 public:
  NewInitRequest();
  virtual ~NewInitRequest();

  NewInitRequest(const NewInitRequest& from);

  inline NewInitRequest& operator=(const NewInitRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewInitRequest& default_instance();

  static inline const NewInitRequest* internal_default_instance() {
    return reinterpret_cast<const NewInitRequest*>(
               &_NewInitRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(NewInitRequest* other);

  // implements Message ----------------------------------------------

  inline NewInitRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  NewInitRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NewInitRequest& from);
  void MergeFrom(const NewInitRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NewInitRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string wxid = 2;
  bool has_wxid() const;
  void clear_wxid();
  static const int kWxidFieldNumber = 2;
  const ::std::string& wxid() const;
  void set_wxid(const ::std::string& value);
  #if LANG_CXX11
  void set_wxid(::std::string&& value);
  #endif
  void set_wxid(const char* value);
  void set_wxid(const char* value, size_t size);
  ::std::string* mutable_wxid();
  ::std::string* release_wxid();
  void set_allocated_wxid(::std::string* wxid);

  // optional string language = 5;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 5;
  const ::std::string& language() const;
  void set_language(const ::std::string& value);
  #if LANG_CXX11
  void set_language(::std::string&& value);
  #endif
  void set_language(const char* value);
  void set_language(const char* value, size_t size);
  ::std::string* mutable_language();
  ::std::string* release_language();
  void set_allocated_language(::std::string* language);

  // optional .LoginInfo login = 1;
  bool has_login() const;
  void clear_login();
  static const int kLoginFieldNumber = 1;
  const ::LoginInfo& login() const;
  ::LoginInfo* mutable_login();
  ::LoginInfo* release_login();
  void set_allocated_login(::LoginInfo* login);

  // optional .SKBuiltinBuffer_t sync_key_cur = 3;
  bool has_sync_key_cur() const;
  void clear_sync_key_cur();
  static const int kSyncKeyCurFieldNumber = 3;
  const ::SKBuiltinBuffer_t& sync_key_cur() const;
  ::SKBuiltinBuffer_t* mutable_sync_key_cur();
  ::SKBuiltinBuffer_t* release_sync_key_cur();
  void set_allocated_sync_key_cur(::SKBuiltinBuffer_t* sync_key_cur);

  // optional .SKBuiltinBuffer_t sync_key_max = 4;
  bool has_sync_key_max() const;
  void clear_sync_key_max();
  static const int kSyncKeyMaxFieldNumber = 4;
  const ::SKBuiltinBuffer_t& sync_key_max() const;
  ::SKBuiltinBuffer_t* mutable_sync_key_max();
  ::SKBuiltinBuffer_t* release_sync_key_max();
  void set_allocated_sync_key_max(::SKBuiltinBuffer_t* sync_key_max);

  // @@protoc_insertion_point(class_scope:NewInitRequest)
 private:
  void set_has_login();
  void clear_has_login();
  void set_has_wxid();
  void clear_has_wxid();
  void set_has_sync_key_cur();
  void clear_has_sync_key_cur();
  void set_has_sync_key_max();
  void clear_has_sync_key_max();
  void set_has_language();
  void clear_has_language();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr wxid_;
  ::google::protobuf::internal::ArenaStringPtr language_;
  ::LoginInfo* login_;
  ::SKBuiltinBuffer_t* sync_key_cur_;
  ::SKBuiltinBuffer_t* sync_key_max_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NewInitResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NewInitResponse) */ {
 public:
  NewInitResponse();
  virtual ~NewInitResponse();

  NewInitResponse(const NewInitResponse& from);

  inline NewInitResponse& operator=(const NewInitResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewInitResponse& default_instance();

  static inline const NewInitResponse* internal_default_instance() {
    return reinterpret_cast<const NewInitResponse*>(
               &_NewInitResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(NewInitResponse* other);

  // implements Message ----------------------------------------------

  inline NewInitResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  NewInitResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NewInitResponse& from);
  void MergeFrom(const NewInitResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NewInitResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .common_msg tag7 = 7;
  int tag7_size() const;
  void clear_tag7();
  static const int kTag7FieldNumber = 7;
  const ::common_msg& tag7(int index) const;
  ::common_msg* mutable_tag7(int index);
  ::common_msg* add_tag7();
  ::google::protobuf::RepeatedPtrField< ::common_msg >*
      mutable_tag7();
  const ::google::protobuf::RepeatedPtrField< ::common_msg >&
      tag7() const;

  // optional bytes tag1 = 1;
  bool has_tag1() const;
  void clear_tag1();
  static const int kTag1FieldNumber = 1;
  const ::std::string& tag1() const;
  void set_tag1(const ::std::string& value);
  #if LANG_CXX11
  void set_tag1(::std::string&& value);
  #endif
  void set_tag1(const char* value);
  void set_tag1(const void* value, size_t size);
  ::std::string* mutable_tag1();
  ::std::string* release_tag1();
  void set_allocated_tag1(::std::string* tag1);

  // optional bytes sync_key_cur = 2;
  bool has_sync_key_cur() const;
  void clear_sync_key_cur();
  static const int kSyncKeyCurFieldNumber = 2;
  const ::std::string& sync_key_cur() const;
  void set_sync_key_cur(const ::std::string& value);
  #if LANG_CXX11
  void set_sync_key_cur(::std::string&& value);
  #endif
  void set_sync_key_cur(const char* value);
  void set_sync_key_cur(const void* value, size_t size);
  ::std::string* mutable_sync_key_cur();
  ::std::string* release_sync_key_cur();
  void set_allocated_sync_key_cur(::std::string* sync_key_cur);

  // optional bytes sync_key_max = 3;
  bool has_sync_key_max() const;
  void clear_sync_key_max();
  static const int kSyncKeyMaxFieldNumber = 3;
  const ::std::string& sync_key_max() const;
  void set_sync_key_max(const ::std::string& value);
  #if LANG_CXX11
  void set_sync_key_max(::std::string&& value);
  #endif
  void set_sync_key_max(const char* value);
  void set_sync_key_max(const void* value, size_t size);
  ::std::string* mutable_sync_key_max();
  ::std::string* release_sync_key_max();
  void set_allocated_sync_key_max(::std::string* sync_key_max);

  // optional int32 continue_flag = 4;
  bool has_continue_flag() const;
  void clear_continue_flag();
  static const int kContinueFlagFieldNumber = 4;
  ::google::protobuf::int32 continue_flag() const;
  void set_continue_flag(::google::protobuf::int32 value);

  // optional int32 cntList = 6;
  bool has_cntlist() const;
  void clear_cntlist();
  static const int kCntListFieldNumber = 6;
  ::google::protobuf::int32 cntlist() const;
  void set_cntlist(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NewInitResponse)
 private:
  void set_has_tag1();
  void clear_has_tag1();
  void set_has_sync_key_cur();
  void clear_has_sync_key_cur();
  void set_has_sync_key_max();
  void clear_has_sync_key_max();
  void set_has_continue_flag();
  void clear_has_continue_flag();
  void set_has_cntlist();
  void clear_has_cntlist();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::common_msg > tag7_;
  ::google::protobuf::internal::ArenaStringPtr tag1_;
  ::google::protobuf::internal::ArenaStringPtr sync_key_cur_;
  ::google::protobuf::internal::ArenaStringPtr sync_key_max_;
  ::google::protobuf::int32 continue_flag_;
  ::google::protobuf::int32 cntlist_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class new_sync_req_continue_flag : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:new_sync_req.continue_flag) */ {
 public:
  new_sync_req_continue_flag();
  virtual ~new_sync_req_continue_flag();

  new_sync_req_continue_flag(const new_sync_req_continue_flag& from);

  inline new_sync_req_continue_flag& operator=(const new_sync_req_continue_flag& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const new_sync_req_continue_flag& default_instance();

  static inline const new_sync_req_continue_flag* internal_default_instance() {
    return reinterpret_cast<const new_sync_req_continue_flag*>(
               &_new_sync_req_continue_flag_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(new_sync_req_continue_flag* other);

  // implements Message ----------------------------------------------

  inline new_sync_req_continue_flag* New() const PROTOBUF_FINAL { return New(NULL); }

  new_sync_req_continue_flag* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const new_sync_req_continue_flag& from);
  void MergeFrom(const new_sync_req_continue_flag& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(new_sync_req_continue_flag* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 flag = 1;
  bool has_flag() const;
  void clear_flag();
  static const int kFlagFieldNumber = 1;
  ::google::protobuf::int32 flag() const;
  void set_flag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:new_sync_req.continue_flag)
 private:
  void set_has_flag();
  void clear_has_flag();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 flag_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class new_sync_req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:new_sync_req) */ {
 public:
  new_sync_req();
  virtual ~new_sync_req();

  new_sync_req(const new_sync_req& from);

  inline new_sync_req& operator=(const new_sync_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const new_sync_req& default_instance();

  static inline const new_sync_req* internal_default_instance() {
    return reinterpret_cast<const new_sync_req*>(
               &_new_sync_req_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(new_sync_req* other);

  // implements Message ----------------------------------------------

  inline new_sync_req* New() const PROTOBUF_FINAL { return New(NULL); }

  new_sync_req* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const new_sync_req& from);
  void MergeFrom(const new_sync_req& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(new_sync_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef new_sync_req_continue_flag continue_flag;

  // accessors -------------------------------------------------------

  // optional bytes sync_Key = 3;
  bool has_sync_key() const;
  void clear_sync_key();
  static const int kSyncKeyFieldNumber = 3;
  const ::std::string& sync_key() const;
  void set_sync_key(const ::std::string& value);
  #if LANG_CXX11
  void set_sync_key(::std::string&& value);
  #endif
  void set_sync_key(const char* value);
  void set_sync_key(const void* value, size_t size);
  ::std::string* mutable_sync_key();
  ::std::string* release_sync_key();
  void set_allocated_sync_key(::std::string* sync_key);

  // optional string device = 5;
  bool has_device() const;
  void clear_device();
  static const int kDeviceFieldNumber = 5;
  const ::std::string& device() const;
  void set_device(const ::std::string& value);
  #if LANG_CXX11
  void set_device(::std::string&& value);
  #endif
  void set_device(const char* value);
  void set_device(const char* value, size_t size);
  ::std::string* mutable_device();
  ::std::string* release_device();
  void set_allocated_device(::std::string* device);

  // optional .new_sync_req.continue_flag flag = 1;
  bool has_flag() const;
  void clear_flag();
  static const int kFlagFieldNumber = 1;
  const ::new_sync_req_continue_flag& flag() const;
  ::new_sync_req_continue_flag* mutable_flag();
  ::new_sync_req_continue_flag* release_flag();
  void set_allocated_flag(::new_sync_req_continue_flag* flag);

  // optional int32 selector = 2;
  bool has_selector() const;
  void clear_selector();
  static const int kSelectorFieldNumber = 2;
  ::google::protobuf::int32 selector() const;
  void set_selector(::google::protobuf::int32 value);

  // optional int32 scene = 4;
  bool has_scene() const;
  void clear_scene();
  static const int kSceneFieldNumber = 4;
  ::google::protobuf::int32 scene() const;
  void set_scene(::google::protobuf::int32 value);

  // optional int32 sync_msg_digest = 6;
  bool has_sync_msg_digest() const;
  void clear_sync_msg_digest();
  static const int kSyncMsgDigestFieldNumber = 6;
  ::google::protobuf::int32 sync_msg_digest() const;
  void set_sync_msg_digest(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:new_sync_req)
 private:
  void set_has_flag();
  void clear_has_flag();
  void set_has_selector();
  void clear_has_selector();
  void set_has_sync_key();
  void clear_has_sync_key();
  void set_has_scene();
  void clear_has_scene();
  void set_has_device();
  void clear_has_device();
  void set_has_sync_msg_digest();
  void clear_has_sync_msg_digest();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr sync_key_;
  ::google::protobuf::internal::ArenaStringPtr device_;
  ::new_sync_req_continue_flag* flag_;
  ::google::protobuf::int32 selector_;
  ::google::protobuf::int32 scene_;
  ::google::protobuf::int32 sync_msg_digest_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class new_sync_resp_new_msg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:new_sync_resp.new_msg) */ {
 public:
  new_sync_resp_new_msg();
  virtual ~new_sync_resp_new_msg();

  new_sync_resp_new_msg(const new_sync_resp_new_msg& from);

  inline new_sync_resp_new_msg& operator=(const new_sync_resp_new_msg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const new_sync_resp_new_msg& default_instance();

  static inline const new_sync_resp_new_msg* internal_default_instance() {
    return reinterpret_cast<const new_sync_resp_new_msg*>(
               &_new_sync_resp_new_msg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(new_sync_resp_new_msg* other);

  // implements Message ----------------------------------------------

  inline new_sync_resp_new_msg* New() const PROTOBUF_FINAL { return New(NULL); }

  new_sync_resp_new_msg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const new_sync_resp_new_msg& from);
  void MergeFrom(const new_sync_resp_new_msg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(new_sync_resp_new_msg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .common_msg tag2 = 2;
  int tag2_size() const;
  void clear_tag2();
  static const int kTag2FieldNumber = 2;
  const ::common_msg& tag2(int index) const;
  ::common_msg* mutable_tag2(int index);
  ::common_msg* add_tag2();
  ::google::protobuf::RepeatedPtrField< ::common_msg >*
      mutable_tag2();
  const ::google::protobuf::RepeatedPtrField< ::common_msg >&
      tag2() const;

  // optional int32 cntList = 1;
  bool has_cntlist() const;
  void clear_cntlist();
  static const int kCntListFieldNumber = 1;
  ::google::protobuf::int32 cntlist() const;
  void set_cntlist(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:new_sync_resp.new_msg)
 private:
  void set_has_cntlist();
  void clear_has_cntlist();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::common_msg > tag2_;
  ::google::protobuf::int32 cntlist_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class new_sync_resp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:new_sync_resp) */ {
 public:
  new_sync_resp();
  virtual ~new_sync_resp();

  new_sync_resp(const new_sync_resp& from);

  inline new_sync_resp& operator=(const new_sync_resp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const new_sync_resp& default_instance();

  static inline const new_sync_resp* internal_default_instance() {
    return reinterpret_cast<const new_sync_resp*>(
               &_new_sync_resp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(new_sync_resp* other);

  // implements Message ----------------------------------------------

  inline new_sync_resp* New() const PROTOBUF_FINAL { return New(NULL); }

  new_sync_resp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const new_sync_resp& from);
  void MergeFrom(const new_sync_resp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(new_sync_resp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef new_sync_resp_new_msg new_msg;

  // accessors -------------------------------------------------------

  // optional bytes sync_key = 4;
  bool has_sync_key() const;
  void clear_sync_key();
  static const int kSyncKeyFieldNumber = 4;
  const ::std::string& sync_key() const;
  void set_sync_key(const ::std::string& value);
  #if LANG_CXX11
  void set_sync_key(::std::string&& value);
  #endif
  void set_sync_key(const char* value);
  void set_sync_key(const void* value, size_t size);
  ::std::string* mutable_sync_key();
  ::std::string* release_sync_key();
  void set_allocated_sync_key(::std::string* sync_key);

  // optional .new_sync_resp.new_msg msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::new_sync_resp_new_msg& msg() const;
  ::new_sync_resp_new_msg* mutable_msg();
  ::new_sync_resp_new_msg* release_msg();
  void set_allocated_msg(::new_sync_resp_new_msg* msg);

  // optional int32 tag1 = 1;
  bool has_tag1() const;
  void clear_tag1();
  static const int kTag1FieldNumber = 1;
  ::google::protobuf::int32 tag1() const;
  void set_tag1(::google::protobuf::int32 value);

  // optional int32 tag3 = 3;
  bool has_tag3() const;
  void clear_tag3();
  static const int kTag3FieldNumber = 3;
  ::google::protobuf::int32 tag3() const;
  void set_tag3(::google::protobuf::int32 value);

  // optional int32 tag5 = 5;
  bool has_tag5() const;
  void clear_tag5();
  static const int kTag5FieldNumber = 5;
  ::google::protobuf::int32 tag5() const;
  void set_tag5(::google::protobuf::int32 value);

  // optional int32 tag6 = 6;
  bool has_tag6() const;
  void clear_tag6();
  static const int kTag6FieldNumber = 6;
  ::google::protobuf::int32 tag6() const;
  void set_tag6(::google::protobuf::int32 value);

  // optional int32 utc = 7;
  bool has_utc() const;
  void clear_utc();
  static const int kUtcFieldNumber = 7;
  ::google::protobuf::int32 utc() const;
  void set_utc(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:new_sync_resp)
 private:
  void set_has_tag1();
  void clear_has_tag1();
  void set_has_msg();
  void clear_has_msg();
  void set_has_tag3();
  void clear_has_tag3();
  void set_has_sync_key();
  void clear_has_sync_key();
  void set_has_tag5();
  void clear_has_tag5();
  void set_has_tag6();
  void clear_has_tag6();
  void set_has_utc();
  void clear_has_utc();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr sync_key_;
  ::new_sync_resp_new_msg* msg_;
  ::google::protobuf::int32 tag1_;
  ::google::protobuf::int32 tag3_;
  ::google::protobuf::int32 tag5_;
  ::google::protobuf::int32 tag6_;
  ::google::protobuf::int32 utc_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class new_send_msg_req_msg_info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:new_send_msg_req.msg_info) */ {
 public:
  new_send_msg_req_msg_info();
  virtual ~new_send_msg_req_msg_info();

  new_send_msg_req_msg_info(const new_send_msg_req_msg_info& from);

  inline new_send_msg_req_msg_info& operator=(const new_send_msg_req_msg_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const new_send_msg_req_msg_info& default_instance();

  static inline const new_send_msg_req_msg_info* internal_default_instance() {
    return reinterpret_cast<const new_send_msg_req_msg_info*>(
               &_new_send_msg_req_msg_info_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(new_send_msg_req_msg_info* other);

  // implements Message ----------------------------------------------

  inline new_send_msg_req_msg_info* New() const PROTOBUF_FINAL { return New(NULL); }

  new_send_msg_req_msg_info* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const new_send_msg_req_msg_info& from);
  void MergeFrom(const new_send_msg_req_msg_info& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(new_send_msg_req_msg_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes content = 2;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 2;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // optional string at_list = 6;
  bool has_at_list() const;
  void clear_at_list();
  static const int kAtListFieldNumber = 6;
  const ::std::string& at_list() const;
  void set_at_list(const ::std::string& value);
  #if LANG_CXX11
  void set_at_list(::std::string&& value);
  #endif
  void set_at_list(const char* value);
  void set_at_list(const char* value, size_t size);
  ::std::string* mutable_at_list();
  ::std::string* release_at_list();
  void set_allocated_at_list(::std::string* at_list);

  // optional .Wxid to = 1;
  bool has_to() const;
  void clear_to();
  static const int kToFieldNumber = 1;
  const ::Wxid& to() const;
  ::Wxid* mutable_to();
  ::Wxid* release_to();
  void set_allocated_to(::Wxid* to);

  // optional int32 type = 3;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int32 utc = 4;
  bool has_utc() const;
  void clear_utc();
  static const int kUtcFieldNumber = 4;
  ::google::protobuf::int32 utc() const;
  void set_utc(::google::protobuf::int32 value);

  // optional int32 client_id = 5;
  bool has_client_id() const;
  void clear_client_id();
  static const int kClientIdFieldNumber = 5;
  ::google::protobuf::int32 client_id() const;
  void set_client_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:new_send_msg_req.msg_info)
 private:
  void set_has_to();
  void clear_has_to();
  void set_has_content();
  void clear_has_content();
  void set_has_type();
  void clear_has_type();
  void set_has_utc();
  void clear_has_utc();
  void set_has_client_id();
  void clear_has_client_id();
  void set_has_at_list();
  void clear_has_at_list();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::internal::ArenaStringPtr at_list_;
  ::Wxid* to_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 utc_;
  ::google::protobuf::int32 client_id_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class new_send_msg_req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:new_send_msg_req) */ {
 public:
  new_send_msg_req();
  virtual ~new_send_msg_req();

  new_send_msg_req(const new_send_msg_req& from);

  inline new_send_msg_req& operator=(const new_send_msg_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const new_send_msg_req& default_instance();

  static inline const new_send_msg_req* internal_default_instance() {
    return reinterpret_cast<const new_send_msg_req*>(
               &_new_send_msg_req_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(new_send_msg_req* other);

  // implements Message ----------------------------------------------

  inline new_send_msg_req* New() const PROTOBUF_FINAL { return New(NULL); }

  new_send_msg_req* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const new_send_msg_req& from);
  void MergeFrom(const new_send_msg_req& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(new_send_msg_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef new_send_msg_req_msg_info msg_info;

  // accessors -------------------------------------------------------

  // optional .new_send_msg_req.msg_info msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::new_send_msg_req_msg_info& msg() const;
  ::new_send_msg_req_msg_info* mutable_msg();
  ::new_send_msg_req_msg_info* release_msg();
  void set_allocated_msg(::new_send_msg_req_msg_info* msg);

  // optional int32 cnt = 1;
  bool has_cnt() const;
  void clear_cnt();
  static const int kCntFieldNumber = 1;
  ::google::protobuf::int32 cnt() const;
  void set_cnt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:new_send_msg_req)
 private:
  void set_has_cnt();
  void clear_has_cnt();
  void set_has_msg();
  void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::new_send_msg_req_msg_info* msg_;
  ::google::protobuf::int32 cnt_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class new_send_msg_resp_result : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:new_send_msg_resp.result) */ {
 public:
  new_send_msg_resp_result();
  virtual ~new_send_msg_resp_result();

  new_send_msg_resp_result(const new_send_msg_resp_result& from);

  inline new_send_msg_resp_result& operator=(const new_send_msg_resp_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const new_send_msg_resp_result& default_instance();

  static inline const new_send_msg_resp_result* internal_default_instance() {
    return reinterpret_cast<const new_send_msg_resp_result*>(
               &_new_send_msg_resp_result_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    51;

  void Swap(new_send_msg_resp_result* other);

  // implements Message ----------------------------------------------

  inline new_send_msg_resp_result* New() const PROTOBUF_FINAL { return New(NULL); }

  new_send_msg_resp_result* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const new_send_msg_resp_result& from);
  void MergeFrom(const new_send_msg_resp_result& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(new_send_msg_resp_result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Wxid to = 2;
  bool has_to() const;
  void clear_to();
  static const int kToFieldNumber = 2;
  const ::Wxid& to() const;
  ::Wxid* mutable_to();
  ::Wxid* release_to();
  void set_allocated_to(::Wxid* to);

  // optional int32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // optional int32 type = 7;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 7;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int64 svrid = 8;
  bool has_svrid() const;
  void clear_svrid();
  static const int kSvridFieldNumber = 8;
  ::google::protobuf::int64 svrid() const;
  void set_svrid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:new_send_msg_resp.result)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_to();
  void clear_has_to();
  void set_has_type();
  void clear_has_type();
  void set_has_svrid();
  void clear_has_svrid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::Wxid* to_;
  ::google::protobuf::int32 code_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int64 svrid_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class new_send_msg_resp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:new_send_msg_resp) */ {
 public:
  new_send_msg_resp();
  virtual ~new_send_msg_resp();

  new_send_msg_resp(const new_send_msg_resp& from);

  inline new_send_msg_resp& operator=(const new_send_msg_resp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const new_send_msg_resp& default_instance();

  static inline const new_send_msg_resp* internal_default_instance() {
    return reinterpret_cast<const new_send_msg_resp*>(
               &_new_send_msg_resp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    52;

  void Swap(new_send_msg_resp* other);

  // implements Message ----------------------------------------------

  inline new_send_msg_resp* New() const PROTOBUF_FINAL { return New(NULL); }

  new_send_msg_resp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const new_send_msg_resp& from);
  void MergeFrom(const new_send_msg_resp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(new_send_msg_resp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef new_send_msg_resp_result result;

  // accessors -------------------------------------------------------

  // optional .mmStr tag1 = 1;
  bool has_tag1() const;
  void clear_tag1();
  static const int kTag1FieldNumber = 1;
  const ::mmStr& tag1() const;
  ::mmStr* mutable_tag1();
  ::mmStr* release_tag1();
  void set_allocated_tag1(::mmStr* tag1);

  // optional .new_send_msg_resp.result res = 3;
  bool has_res() const;
  void clear_res();
  static const int kResFieldNumber = 3;
  const ::new_send_msg_resp_result& res() const;
  ::new_send_msg_resp_result* mutable_res();
  ::new_send_msg_resp_result* release_res();
  void set_allocated_res(::new_send_msg_resp_result* res);

  // optional int32 cnt = 2;
  bool has_cnt() const;
  void clear_cnt();
  static const int kCntFieldNumber = 2;
  ::google::protobuf::int32 cnt() const;
  void set_cnt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:new_send_msg_resp)
 private:
  void set_has_tag1();
  void clear_has_tag1();
  void set_has_cnt();
  void clear_has_cnt();
  void set_has_res();
  void clear_has_res();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::mmStr* tag1_;
  ::new_send_msg_resp_result* res_;
  ::google::protobuf::int32 cnt_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class new_send_app_msg_req_appmsg_info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:new_send_app_msg_req.appmsg_info) */ {
 public:
  new_send_app_msg_req_appmsg_info();
  virtual ~new_send_app_msg_req_appmsg_info();

  new_send_app_msg_req_appmsg_info(const new_send_app_msg_req_appmsg_info& from);

  inline new_send_app_msg_req_appmsg_info& operator=(const new_send_app_msg_req_appmsg_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const new_send_app_msg_req_appmsg_info& default_instance();

  static inline const new_send_app_msg_req_appmsg_info* internal_default_instance() {
    return reinterpret_cast<const new_send_app_msg_req_appmsg_info*>(
               &_new_send_app_msg_req_appmsg_info_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    53;

  void Swap(new_send_app_msg_req_appmsg_info* other);

  // implements Message ----------------------------------------------

  inline new_send_app_msg_req_appmsg_info* New() const PROTOBUF_FINAL { return New(NULL); }

  new_send_app_msg_req_appmsg_info* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const new_send_app_msg_req_appmsg_info& from);
  void MergeFrom(const new_send_app_msg_req_appmsg_info& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(new_send_app_msg_req_appmsg_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string from_wxid = 1;
  bool has_from_wxid() const;
  void clear_from_wxid();
  static const int kFromWxidFieldNumber = 1;
  const ::std::string& from_wxid() const;
  void set_from_wxid(const ::std::string& value);
  #if LANG_CXX11
  void set_from_wxid(::std::string&& value);
  #endif
  void set_from_wxid(const char* value);
  void set_from_wxid(const char* value, size_t size);
  ::std::string* mutable_from_wxid();
  ::std::string* release_from_wxid();
  void set_allocated_from_wxid(::std::string* from_wxid);

  // optional string app_wxid = 2;
  bool has_app_wxid() const;
  void clear_app_wxid();
  static const int kAppWxidFieldNumber = 2;
  const ::std::string& app_wxid() const;
  void set_app_wxid(const ::std::string& value);
  #if LANG_CXX11
  void set_app_wxid(::std::string&& value);
  #endif
  void set_app_wxid(const char* value);
  void set_app_wxid(const char* value, size_t size);
  ::std::string* mutable_app_wxid();
  ::std::string* release_app_wxid();
  void set_allocated_app_wxid(::std::string* app_wxid);

  // optional string to_wxid = 4;
  bool has_to_wxid() const;
  void clear_to_wxid();
  static const int kToWxidFieldNumber = 4;
  const ::std::string& to_wxid() const;
  void set_to_wxid(const ::std::string& value);
  #if LANG_CXX11
  void set_to_wxid(::std::string&& value);
  #endif
  void set_to_wxid(const char* value);
  void set_to_wxid(const char* value, size_t size);
  ::std::string* mutable_to_wxid();
  ::std::string* release_to_wxid();
  void set_allocated_to_wxid(::std::string* to_wxid);

  // optional string content = 6;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 6;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // optional string client_id = 8;
  bool has_client_id() const;
  void clear_client_id();
  static const int kClientIdFieldNumber = 8;
  const ::std::string& client_id() const;
  void set_client_id(const ::std::string& value);
  #if LANG_CXX11
  void set_client_id(::std::string&& value);
  #endif
  void set_client_id(const char* value);
  void set_client_id(const char* value, size_t size);
  ::std::string* mutable_client_id();
  ::std::string* release_client_id();
  void set_allocated_client_id(::std::string* client_id);

  // optional int32 tag3 = 3;
  bool has_tag3() const;
  void clear_tag3();
  static const int kTag3FieldNumber = 3;
  ::google::protobuf::int32 tag3() const;
  void set_tag3(::google::protobuf::int32 value);

  // optional int32 type = 5;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 5;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int32 utc = 7;
  bool has_utc() const;
  void clear_utc();
  static const int kUtcFieldNumber = 7;
  ::google::protobuf::int32 utc() const;
  void set_utc(::google::protobuf::int32 value);

  // optional int32 tag10 = 10;
  bool has_tag10() const;
  void clear_tag10();
  static const int kTag10FieldNumber = 10;
  ::google::protobuf::int32 tag10() const;
  void set_tag10(::google::protobuf::int32 value);

  // optional int32 tag11 = 11;
  bool has_tag11() const;
  void clear_tag11();
  static const int kTag11FieldNumber = 11;
  ::google::protobuf::int32 tag11() const;
  void set_tag11(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:new_send_app_msg_req.appmsg_info)
 private:
  void set_has_from_wxid();
  void clear_has_from_wxid();
  void set_has_app_wxid();
  void clear_has_app_wxid();
  void set_has_tag3();
  void clear_has_tag3();
  void set_has_to_wxid();
  void clear_has_to_wxid();
  void set_has_type();
  void clear_has_type();
  void set_has_content();
  void clear_has_content();
  void set_has_utc();
  void clear_has_utc();
  void set_has_client_id();
  void clear_has_client_id();
  void set_has_tag10();
  void clear_has_tag10();
  void set_has_tag11();
  void clear_has_tag11();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr from_wxid_;
  ::google::protobuf::internal::ArenaStringPtr app_wxid_;
  ::google::protobuf::internal::ArenaStringPtr to_wxid_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::internal::ArenaStringPtr client_id_;
  ::google::protobuf::int32 tag3_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 utc_;
  ::google::protobuf::int32 tag10_;
  ::google::protobuf::int32 tag11_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class new_send_app_msg_req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:new_send_app_msg_req) */ {
 public:
  new_send_app_msg_req();
  virtual ~new_send_app_msg_req();

  new_send_app_msg_req(const new_send_app_msg_req& from);

  inline new_send_app_msg_req& operator=(const new_send_app_msg_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const new_send_app_msg_req& default_instance();

  static inline const new_send_app_msg_req* internal_default_instance() {
    return reinterpret_cast<const new_send_app_msg_req*>(
               &_new_send_app_msg_req_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    54;

  void Swap(new_send_app_msg_req* other);

  // implements Message ----------------------------------------------

  inline new_send_app_msg_req* New() const PROTOBUF_FINAL { return New(NULL); }

  new_send_app_msg_req* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const new_send_app_msg_req& from);
  void MergeFrom(const new_send_app_msg_req& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(new_send_app_msg_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef new_send_app_msg_req_appmsg_info appmsg_info;

  // accessors -------------------------------------------------------

  // optional string tag7 = 7;
  bool has_tag7() const;
  void clear_tag7();
  static const int kTag7FieldNumber = 7;
  const ::std::string& tag7() const;
  void set_tag7(const ::std::string& value);
  #if LANG_CXX11
  void set_tag7(::std::string&& value);
  #endif
  void set_tag7(const char* value);
  void set_tag7(const char* value, size_t size);
  ::std::string* mutable_tag7();
  ::std::string* release_tag7();
  void set_allocated_tag7(::std::string* tag7);

  // optional string fromScene = 8;
  bool has_fromscene() const;
  void clear_fromscene();
  static const int kFromSceneFieldNumber = 8;
  const ::std::string& fromscene() const;
  void set_fromscene(const ::std::string& value);
  #if LANG_CXX11
  void set_fromscene(::std::string&& value);
  #endif
  void set_fromscene(const char* value);
  void set_fromscene(const char* value, size_t size);
  ::std::string* mutable_fromscene();
  ::std::string* release_fromscene();
  void set_allocated_fromscene(::std::string* fromscene);

  // optional .LoginInfo login = 1;
  bool has_login() const;
  void clear_login();
  static const int kLoginFieldNumber = 1;
  const ::LoginInfo& login() const;
  ::LoginInfo* mutable_login();
  ::LoginInfo* release_login();
  void set_allocated_login(::LoginInfo* login);

  // optional .new_send_app_msg_req.appmsg_info info = 2;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::new_send_app_msg_req_appmsg_info& info() const;
  ::new_send_app_msg_req_appmsg_info* mutable_info();
  ::new_send_app_msg_req_appmsg_info* release_info();
  void set_allocated_info(::new_send_app_msg_req_appmsg_info* info);

  // optional int32 tag4 = 4;
  bool has_tag4() const;
  void clear_tag4();
  static const int kTag4FieldNumber = 4;
  ::google::protobuf::int32 tag4() const;
  void set_tag4(::google::protobuf::int32 value);

  // optional int32 tag6 = 6;
  bool has_tag6() const;
  void clear_tag6();
  static const int kTag6FieldNumber = 6;
  ::google::protobuf::int32 tag6() const;
  void set_tag6(::google::protobuf::int32 value);

  // optional int32 tag9 = 9;
  bool has_tag9() const;
  void clear_tag9();
  static const int kTag9FieldNumber = 9;
  ::google::protobuf::int32 tag9() const;
  void set_tag9(::google::protobuf::int32 value);

  // optional int32 tag10 = 10;
  bool has_tag10() const;
  void clear_tag10();
  static const int kTag10FieldNumber = 10;
  ::google::protobuf::int32 tag10() const;
  void set_tag10(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:new_send_app_msg_req)
 private:
  void set_has_login();
  void clear_has_login();
  void set_has_info();
  void clear_has_info();
  void set_has_tag4();
  void clear_has_tag4();
  void set_has_tag6();
  void clear_has_tag6();
  void set_has_tag7();
  void clear_has_tag7();
  void set_has_fromscene();
  void clear_has_fromscene();
  void set_has_tag9();
  void clear_has_tag9();
  void set_has_tag10();
  void clear_has_tag10();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr tag7_;
  ::google::protobuf::internal::ArenaStringPtr fromscene_;
  ::LoginInfo* login_;
  ::new_send_app_msg_req_appmsg_info* info_;
  ::google::protobuf::int32 tag4_;
  ::google::protobuf::int32 tag6_;
  ::google::protobuf::int32 tag9_;
  ::google::protobuf::int32 tag10_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class new_send_app_msg_resp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:new_send_app_msg_resp) */ {
 public:
  new_send_app_msg_resp();
  virtual ~new_send_app_msg_resp();

  new_send_app_msg_resp(const new_send_app_msg_resp& from);

  inline new_send_app_msg_resp& operator=(const new_send_app_msg_resp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const new_send_app_msg_resp& default_instance();

  static inline const new_send_app_msg_resp* internal_default_instance() {
    return reinterpret_cast<const new_send_app_msg_resp*>(
               &_new_send_app_msg_resp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    55;

  void Swap(new_send_app_msg_resp* other);

  // implements Message ----------------------------------------------

  inline new_send_app_msg_resp* New() const PROTOBUF_FINAL { return New(NULL); }

  new_send_app_msg_resp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const new_send_app_msg_resp& from);
  void MergeFrom(const new_send_app_msg_resp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(new_send_app_msg_resp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string from_wxid = 3;
  bool has_from_wxid() const;
  void clear_from_wxid();
  static const int kFromWxidFieldNumber = 3;
  const ::std::string& from_wxid() const;
  void set_from_wxid(const ::std::string& value);
  #if LANG_CXX11
  void set_from_wxid(::std::string&& value);
  #endif
  void set_from_wxid(const char* value);
  void set_from_wxid(const char* value, size_t size);
  ::std::string* mutable_from_wxid();
  ::std::string* release_from_wxid();
  void set_allocated_from_wxid(::std::string* from_wxid);

  // optional string to_wxid = 4;
  bool has_to_wxid() const;
  void clear_to_wxid();
  static const int kToWxidFieldNumber = 4;
  const ::std::string& to_wxid() const;
  void set_to_wxid(const ::std::string& value);
  #if LANG_CXX11
  void set_to_wxid(::std::string&& value);
  #endif
  void set_to_wxid(const char* value);
  void set_to_wxid(const char* value, size_t size);
  ::std::string* mutable_to_wxid();
  ::std::string* release_to_wxid();
  void set_allocated_to_wxid(::std::string* to_wxid);

  // optional string client_id = 6;
  bool has_client_id() const;
  void clear_client_id();
  static const int kClientIdFieldNumber = 6;
  const ::std::string& client_id() const;
  void set_client_id(const ::std::string& value);
  #if LANG_CXX11
  void set_client_id(::std::string&& value);
  #endif
  void set_client_id(const char* value);
  void set_client_id(const char* value, size_t size);
  ::std::string* mutable_client_id();
  ::std::string* release_client_id();
  void set_allocated_client_id(::std::string* client_id);

  // optional .mmStr tag1 = 1;
  bool has_tag1() const;
  void clear_tag1();
  static const int kTag1FieldNumber = 1;
  const ::mmStr& tag1() const;
  ::mmStr* mutable_tag1();
  ::mmStr* release_tag1();
  void set_allocated_tag1(::mmStr* tag1);

  // optional int32 sync_key_id = 5;
  bool has_sync_key_id() const;
  void clear_sync_key_id();
  static const int kSyncKeyIdFieldNumber = 5;
  ::google::protobuf::int32 sync_key_id() const;
  void set_sync_key_id(::google::protobuf::int32 value);

  // optional int32 utc = 7;
  bool has_utc() const;
  void clear_utc();
  static const int kUtcFieldNumber = 7;
  ::google::protobuf::int32 utc() const;
  void set_utc(::google::protobuf::int32 value);

  // optional int64 svrid = 9;
  bool has_svrid() const;
  void clear_svrid();
  static const int kSvridFieldNumber = 9;
  ::google::protobuf::int64 svrid() const;
  void set_svrid(::google::protobuf::int64 value);

  // optional int32 type = 8;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 8;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:new_send_app_msg_resp)
 private:
  void set_has_tag1();
  void clear_has_tag1();
  void set_has_from_wxid();
  void clear_has_from_wxid();
  void set_has_to_wxid();
  void clear_has_to_wxid();
  void set_has_sync_key_id();
  void clear_has_sync_key_id();
  void set_has_client_id();
  void clear_has_client_id();
  void set_has_utc();
  void clear_has_utc();
  void set_has_type();
  void clear_has_type();
  void set_has_svrid();
  void clear_has_svrid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr from_wxid_;
  ::google::protobuf::internal::ArenaStringPtr to_wxid_;
  ::google::protobuf::internal::ArenaStringPtr client_id_;
  ::mmStr* tag1_;
  ::google::protobuf::int32 sync_key_id_;
  ::google::protobuf::int32 utc_;
  ::google::protobuf::int64 svrid_;
  ::google::protobuf::int32 type_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class verify_user_req_user_info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:verify_user_req.user_info) */ {
 public:
  verify_user_req_user_info();
  virtual ~verify_user_req_user_info();

  verify_user_req_user_info(const verify_user_req_user_info& from);

  inline verify_user_req_user_info& operator=(const verify_user_req_user_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const verify_user_req_user_info& default_instance();

  static inline const verify_user_req_user_info* internal_default_instance() {
    return reinterpret_cast<const verify_user_req_user_info*>(
               &_verify_user_req_user_info_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    56;

  void Swap(verify_user_req_user_info* other);

  // implements Message ----------------------------------------------

  inline verify_user_req_user_info* New() const PROTOBUF_FINAL { return New(NULL); }

  verify_user_req_user_info* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const verify_user_req_user_info& from);
  void MergeFrom(const verify_user_req_user_info& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(verify_user_req_user_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string wxid = 1;
  bool has_wxid() const;
  void clear_wxid();
  static const int kWxidFieldNumber = 1;
  const ::std::string& wxid() const;
  void set_wxid(const ::std::string& value);
  #if LANG_CXX11
  void set_wxid(::std::string&& value);
  #endif
  void set_wxid(const char* value);
  void set_wxid(const char* value, size_t size);
  ::std::string* mutable_wxid();
  ::std::string* release_wxid();
  void set_allocated_wxid(::std::string* wxid);

  // optional string ticket = 2;
  bool has_ticket() const;
  void clear_ticket();
  static const int kTicketFieldNumber = 2;
  const ::std::string& ticket() const;
  void set_ticket(const ::std::string& value);
  #if LANG_CXX11
  void set_ticket(::std::string&& value);
  #endif
  void set_ticket(const char* value);
  void set_ticket(const char* value, size_t size);
  ::std::string* mutable_ticket();
  ::std::string* release_ticket();
  void set_allocated_ticket(::std::string* ticket);

  // optional string anti_ticket = 3;
  bool has_anti_ticket() const;
  void clear_anti_ticket();
  static const int kAntiTicketFieldNumber = 3;
  const ::std::string& anti_ticket() const;
  void set_anti_ticket(const ::std::string& value);
  #if LANG_CXX11
  void set_anti_ticket(::std::string&& value);
  #endif
  void set_anti_ticket(const char* value);
  void set_anti_ticket(const char* value, size_t size);
  ::std::string* mutable_anti_ticket();
  ::std::string* release_anti_ticket();
  void set_allocated_anti_ticket(::std::string* anti_ticket);

  // optional int32 tag4 = 4;
  bool has_tag4() const;
  void clear_tag4();
  static const int kTag4FieldNumber = 4;
  ::google::protobuf::int32 tag4() const;
  void set_tag4(::google::protobuf::int32 value);

  // optional int32 tag8 = 8;
  bool has_tag8() const;
  void clear_tag8();
  static const int kTag8FieldNumber = 8;
  ::google::protobuf::int32 tag8() const;
  void set_tag8(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:verify_user_req.user_info)
 private:
  void set_has_wxid();
  void clear_has_wxid();
  void set_has_ticket();
  void clear_has_ticket();
  void set_has_anti_ticket();
  void clear_has_anti_ticket();
  void set_has_tag4();
  void clear_has_tag4();
  void set_has_tag8();
  void clear_has_tag8();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr wxid_;
  ::google::protobuf::internal::ArenaStringPtr ticket_;
  ::google::protobuf::internal::ArenaStringPtr anti_ticket_;
  ::google::protobuf::int32 tag4_;
  ::google::protobuf::int32 tag8_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class verify_user_req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:verify_user_req) */ {
 public:
  verify_user_req();
  virtual ~verify_user_req();

  verify_user_req(const verify_user_req& from);

  inline verify_user_req& operator=(const verify_user_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const verify_user_req& default_instance();

  static inline const verify_user_req* internal_default_instance() {
    return reinterpret_cast<const verify_user_req*>(
               &_verify_user_req_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    57;

  void Swap(verify_user_req* other);

  // implements Message ----------------------------------------------

  inline verify_user_req* New() const PROTOBUF_FINAL { return New(NULL); }

  verify_user_req* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const verify_user_req& from);
  void MergeFrom(const verify_user_req& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(verify_user_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef verify_user_req_user_info user_info;

  // accessors -------------------------------------------------------

  // optional string content = 5;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 5;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // optional string scene = 7;
  bool has_scene() const;
  void clear_scene();
  static const int kSceneFieldNumber = 7;
  const ::std::string& scene() const;
  void set_scene(const ::std::string& value);
  #if LANG_CXX11
  void set_scene(::std::string&& value);
  #endif
  void set_scene(const char* value);
  void set_scene(const char* value, size_t size);
  ::std::string* mutable_scene();
  ::std::string* release_scene();
  void set_allocated_scene(::std::string* scene);

  // optional .LoginInfo login = 1;
  bool has_login() const;
  void clear_login();
  static const int kLoginFieldNumber = 1;
  const ::LoginInfo& login() const;
  ::LoginInfo* mutable_login();
  ::LoginInfo* release_login();
  void set_allocated_login(::LoginInfo* login);

  // optional .verify_user_req.user_info user = 4;
  bool has_user() const;
  void clear_user();
  static const int kUserFieldNumber = 4;
  const ::verify_user_req_user_info& user() const;
  ::verify_user_req_user_info* mutable_user();
  ::verify_user_req_user_info* release_user();
  void set_allocated_user(::verify_user_req_user_info* user);

  // optional .mmStr device_info = 8;
  bool has_device_info() const;
  void clear_device_info();
  static const int kDeviceInfoFieldNumber = 8;
  const ::mmStr& device_info() const;
  ::mmStr* mutable_device_info();
  ::mmStr* release_device_info();
  void set_allocated_device_info(::mmStr* device_info);

  // optional int32 op_code = 2;
  bool has_op_code() const;
  void clear_op_code();
  static const int kOpCodeFieldNumber = 2;
  ::google::protobuf::int32 op_code() const;
  void set_op_code(::google::protobuf::int32 value);

  // optional int32 tag3 = 3;
  bool has_tag3() const;
  void clear_tag3();
  static const int kTag3FieldNumber = 3;
  ::google::protobuf::int32 tag3() const;
  void set_tag3(::google::protobuf::int32 value);

  // optional int32 tag6 = 6;
  bool has_tag6() const;
  void clear_tag6();
  static const int kTag6FieldNumber = 6;
  ::google::protobuf::int32 tag6() const;
  void set_tag6(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:verify_user_req)
 private:
  void set_has_login();
  void clear_has_login();
  void set_has_op_code();
  void clear_has_op_code();
  void set_has_tag3();
  void clear_has_tag3();
  void set_has_user();
  void clear_has_user();
  void set_has_content();
  void clear_has_content();
  void set_has_tag6();
  void clear_has_tag6();
  void set_has_scene();
  void clear_has_scene();
  void set_has_device_info();
  void clear_has_device_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::internal::ArenaStringPtr scene_;
  ::LoginInfo* login_;
  ::verify_user_req_user_info* user_;
  ::mmStr* device_info_;
  ::google::protobuf::int32 op_code_;
  ::google::protobuf::int32 tag3_;
  ::google::protobuf::int32 tag6_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class verify_user_resp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:verify_user_resp) */ {
 public:
  verify_user_resp();
  virtual ~verify_user_resp();

  verify_user_resp(const verify_user_resp& from);

  inline verify_user_resp& operator=(const verify_user_resp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const verify_user_resp& default_instance();

  static inline const verify_user_resp* internal_default_instance() {
    return reinterpret_cast<const verify_user_resp*>(
               &_verify_user_resp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    58;

  void Swap(verify_user_resp* other);

  // implements Message ----------------------------------------------

  inline verify_user_resp* New() const PROTOBUF_FINAL { return New(NULL); }

  verify_user_resp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const verify_user_resp& from);
  void MergeFrom(const verify_user_resp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(verify_user_resp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string wxid = 2;
  bool has_wxid() const;
  void clear_wxid();
  static const int kWxidFieldNumber = 2;
  const ::std::string& wxid() const;
  void set_wxid(const ::std::string& value);
  #if LANG_CXX11
  void set_wxid(::std::string&& value);
  #endif
  void set_wxid(const char* value);
  void set_wxid(const char* value, size_t size);
  ::std::string* mutable_wxid();
  ::std::string* release_wxid();
  void set_allocated_wxid(::std::string* wxid);

  // optional .mmRes res = 1;
  bool has_res() const;
  void clear_res();
  static const int kResFieldNumber = 1;
  const ::mmRes& res() const;
  ::mmRes* mutable_res();
  ::mmRes* release_res();
  void set_allocated_res(::mmRes* res);

  // @@protoc_insertion_point(class_scope:verify_user_resp)
 private:
  void set_has_res();
  void clear_has_res();
  void set_has_wxid();
  void clear_has_wxid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr wxid_;
  ::mmRes* res_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class receive_wxhb_req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:receive_wxhb_req) */ {
 public:
  receive_wxhb_req();
  virtual ~receive_wxhb_req();

  receive_wxhb_req(const receive_wxhb_req& from);

  inline receive_wxhb_req& operator=(const receive_wxhb_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const receive_wxhb_req& default_instance();

  static inline const receive_wxhb_req* internal_default_instance() {
    return reinterpret_cast<const receive_wxhb_req*>(
               &_receive_wxhb_req_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    59;

  void Swap(receive_wxhb_req* other);

  // implements Message ----------------------------------------------

  inline receive_wxhb_req* New() const PROTOBUF_FINAL { return New(NULL); }

  receive_wxhb_req* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const receive_wxhb_req& from);
  void MergeFrom(const receive_wxhb_req& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(receive_wxhb_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .LoginInfo login = 1;
  bool has_login() const;
  void clear_login();
  static const int kLoginFieldNumber = 1;
  const ::LoginInfo& login() const;
  ::LoginInfo* mutable_login();
  ::LoginInfo* release_login();
  void set_allocated_login(::LoginInfo* login);

  // optional .mmStr info = 4;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 4;
  const ::mmStr& info() const;
  ::mmStr* mutable_info();
  ::mmStr* release_info();
  void set_allocated_info(::mmStr* info);

  // optional int32 cmd = 2;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 2;
  ::google::protobuf::int32 cmd() const;
  void set_cmd(::google::protobuf::int32 value);

  // optional int32 tag3 = 3;
  bool has_tag3() const;
  void clear_tag3();
  static const int kTag3FieldNumber = 3;
  ::google::protobuf::int32 tag3() const;
  void set_tag3(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:receive_wxhb_req)
 private:
  void set_has_login();
  void clear_has_login();
  void set_has_cmd();
  void clear_has_cmd();
  void set_has_tag3();
  void clear_has_tag3();
  void set_has_info();
  void clear_has_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::LoginInfo* login_;
  ::mmStr* info_;
  ::google::protobuf::int32 cmd_;
  ::google::protobuf::int32 tag3_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class receive_wxhb_resp_TAG1_TAG1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:receive_wxhb_resp.TAG1.TAG1) */ {
 public:
  receive_wxhb_resp_TAG1_TAG1();
  virtual ~receive_wxhb_resp_TAG1_TAG1();

  receive_wxhb_resp_TAG1_TAG1(const receive_wxhb_resp_TAG1_TAG1& from);

  inline receive_wxhb_resp_TAG1_TAG1& operator=(const receive_wxhb_resp_TAG1_TAG1& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const receive_wxhb_resp_TAG1_TAG1& default_instance();

  static inline const receive_wxhb_resp_TAG1_TAG1* internal_default_instance() {
    return reinterpret_cast<const receive_wxhb_resp_TAG1_TAG1*>(
               &_receive_wxhb_resp_TAG1_TAG1_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    60;

  void Swap(receive_wxhb_resp_TAG1_TAG1* other);

  // implements Message ----------------------------------------------

  inline receive_wxhb_resp_TAG1_TAG1* New() const PROTOBUF_FINAL { return New(NULL); }

  receive_wxhb_resp_TAG1_TAG1* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const receive_wxhb_resp_TAG1_TAG1& from);
  void MergeFrom(const receive_wxhb_resp_TAG1_TAG1& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(receive_wxhb_resp_TAG1_TAG1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string tag1 = 1;
  bool has_tag1() const;
  void clear_tag1();
  static const int kTag1FieldNumber = 1;
  const ::std::string& tag1() const;
  void set_tag1(const ::std::string& value);
  #if LANG_CXX11
  void set_tag1(::std::string&& value);
  #endif
  void set_tag1(const char* value);
  void set_tag1(const char* value, size_t size);
  ::std::string* mutable_tag1();
  ::std::string* release_tag1();
  void set_allocated_tag1(::std::string* tag1);

  // @@protoc_insertion_point(class_scope:receive_wxhb_resp.TAG1.TAG1)
 private:
  void set_has_tag1();
  void clear_has_tag1();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr tag1_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class receive_wxhb_resp_TAG1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:receive_wxhb_resp.TAG1) */ {
 public:
  receive_wxhb_resp_TAG1();
  virtual ~receive_wxhb_resp_TAG1();

  receive_wxhb_resp_TAG1(const receive_wxhb_resp_TAG1& from);

  inline receive_wxhb_resp_TAG1& operator=(const receive_wxhb_resp_TAG1& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const receive_wxhb_resp_TAG1& default_instance();

  static inline const receive_wxhb_resp_TAG1* internal_default_instance() {
    return reinterpret_cast<const receive_wxhb_resp_TAG1*>(
               &_receive_wxhb_resp_TAG1_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    61;

  void Swap(receive_wxhb_resp_TAG1* other);

  // implements Message ----------------------------------------------

  inline receive_wxhb_resp_TAG1* New() const PROTOBUF_FINAL { return New(NULL); }

  receive_wxhb_resp_TAG1* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const receive_wxhb_resp_TAG1& from);
  void MergeFrom(const receive_wxhb_resp_TAG1& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(receive_wxhb_resp_TAG1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef receive_wxhb_resp_TAG1_TAG1 TAG1;

  // accessors -------------------------------------------------------

  // optional int32 tag1 = 1;
  bool has_tag1() const;
  void clear_tag1();
  static const int kTag1FieldNumber = 1;
  ::google::protobuf::int32 tag1() const;
  void set_tag1(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:receive_wxhb_resp.TAG1)
 private:
  void set_has_tag1();
  void clear_has_tag1();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 tag1_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class receive_wxhb_resp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:receive_wxhb_resp) */ {
 public:
  receive_wxhb_resp();
  virtual ~receive_wxhb_resp();

  receive_wxhb_resp(const receive_wxhb_resp& from);

  inline receive_wxhb_resp& operator=(const receive_wxhb_resp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const receive_wxhb_resp& default_instance();

  static inline const receive_wxhb_resp* internal_default_instance() {
    return reinterpret_cast<const receive_wxhb_resp*>(
               &_receive_wxhb_resp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    62;

  void Swap(receive_wxhb_resp* other);

  // implements Message ----------------------------------------------

  inline receive_wxhb_resp* New() const PROTOBUF_FINAL { return New(NULL); }

  receive_wxhb_resp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const receive_wxhb_resp& from);
  void MergeFrom(const receive_wxhb_resp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(receive_wxhb_resp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef receive_wxhb_resp_TAG1 TAG1;

  // accessors -------------------------------------------------------

  // optional string ret_msg = 7;
  bool has_ret_msg() const;
  void clear_ret_msg();
  static const int kRetMsgFieldNumber = 7;
  const ::std::string& ret_msg() const;
  void set_ret_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_ret_msg(::std::string&& value);
  #endif
  void set_ret_msg(const char* value);
  void set_ret_msg(const char* value, size_t size);
  ::std::string* mutable_ret_msg();
  ::std::string* release_ret_msg();
  void set_allocated_ret_msg(::std::string* ret_msg);

  // optional .receive_wxhb_resp.TAG1 tag1 = 1;
  bool has_tag1() const;
  void clear_tag1();
  static const int kTag1FieldNumber = 1;
  const ::receive_wxhb_resp_TAG1& tag1() const;
  ::receive_wxhb_resp_TAG1* mutable_tag1();
  ::receive_wxhb_resp_TAG1* release_tag1();
  void set_allocated_tag1(::receive_wxhb_resp_TAG1* tag1);

  // optional .mmStr hb_info = 2;
  bool has_hb_info() const;
  void clear_hb_info();
  static const int kHbInfoFieldNumber = 2;
  const ::mmStr& hb_info() const;
  ::mmStr* mutable_hb_info();
  ::mmStr* release_hb_info();
  void set_allocated_hb_info(::mmStr* hb_info);

  // optional int32 cmd = 5;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 5;
  ::google::protobuf::int32 cmd() const;
  void set_cmd(::google::protobuf::int32 value);

  // optional int32 ret_code = 6;
  bool has_ret_code() const;
  void clear_ret_code();
  static const int kRetCodeFieldNumber = 6;
  ::google::protobuf::int32 ret_code() const;
  void set_ret_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:receive_wxhb_resp)
 private:
  void set_has_tag1();
  void clear_has_tag1();
  void set_has_hb_info();
  void clear_has_hb_info();
  void set_has_cmd();
  void clear_has_cmd();
  void set_has_ret_code();
  void clear_has_ret_code();
  void set_has_ret_msg();
  void clear_has_ret_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ret_msg_;
  ::receive_wxhb_resp_TAG1* tag1_;
  ::mmStr* hb_info_;
  ::google::protobuf::int32 cmd_;
  ::google::protobuf::int32 ret_code_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class open_wxhb_req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:open_wxhb_req) */ {
 public:
  open_wxhb_req();
  virtual ~open_wxhb_req();

  open_wxhb_req(const open_wxhb_req& from);

  inline open_wxhb_req& operator=(const open_wxhb_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const open_wxhb_req& default_instance();

  static inline const open_wxhb_req* internal_default_instance() {
    return reinterpret_cast<const open_wxhb_req*>(
               &_open_wxhb_req_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    63;

  void Swap(open_wxhb_req* other);

  // implements Message ----------------------------------------------

  inline open_wxhb_req* New() const PROTOBUF_FINAL { return New(NULL); }

  open_wxhb_req* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const open_wxhb_req& from);
  void MergeFrom(const open_wxhb_req& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(open_wxhb_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .LoginInfo login = 1;
  bool has_login() const;
  void clear_login();
  static const int kLoginFieldNumber = 1;
  const ::LoginInfo& login() const;
  ::LoginInfo* mutable_login();
  ::LoginInfo* release_login();
  void set_allocated_login(::LoginInfo* login);

  // optional .mmStr info = 4;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 4;
  const ::mmStr& info() const;
  ::mmStr* mutable_info();
  ::mmStr* release_info();
  void set_allocated_info(::mmStr* info);

  // optional int32 cmd = 2;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 2;
  ::google::protobuf::int32 cmd() const;
  void set_cmd(::google::protobuf::int32 value);

  // optional int32 tag3 = 3;
  bool has_tag3() const;
  void clear_tag3();
  static const int kTag3FieldNumber = 3;
  ::google::protobuf::int32 tag3() const;
  void set_tag3(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:open_wxhb_req)
 private:
  void set_has_login();
  void clear_has_login();
  void set_has_cmd();
  void clear_has_cmd();
  void set_has_tag3();
  void clear_has_tag3();
  void set_has_info();
  void clear_has_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::LoginInfo* login_;
  ::mmStr* info_;
  ::google::protobuf::int32 cmd_;
  ::google::protobuf::int32 tag3_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class open_wxhb_resp_TAG1_TAG1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:open_wxhb_resp.TAG1.TAG1) */ {
 public:
  open_wxhb_resp_TAG1_TAG1();
  virtual ~open_wxhb_resp_TAG1_TAG1();

  open_wxhb_resp_TAG1_TAG1(const open_wxhb_resp_TAG1_TAG1& from);

  inline open_wxhb_resp_TAG1_TAG1& operator=(const open_wxhb_resp_TAG1_TAG1& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const open_wxhb_resp_TAG1_TAG1& default_instance();

  static inline const open_wxhb_resp_TAG1_TAG1* internal_default_instance() {
    return reinterpret_cast<const open_wxhb_resp_TAG1_TAG1*>(
               &_open_wxhb_resp_TAG1_TAG1_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    64;

  void Swap(open_wxhb_resp_TAG1_TAG1* other);

  // implements Message ----------------------------------------------

  inline open_wxhb_resp_TAG1_TAG1* New() const PROTOBUF_FINAL { return New(NULL); }

  open_wxhb_resp_TAG1_TAG1* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const open_wxhb_resp_TAG1_TAG1& from);
  void MergeFrom(const open_wxhb_resp_TAG1_TAG1& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(open_wxhb_resp_TAG1_TAG1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string tag1 = 1;
  bool has_tag1() const;
  void clear_tag1();
  static const int kTag1FieldNumber = 1;
  const ::std::string& tag1() const;
  void set_tag1(const ::std::string& value);
  #if LANG_CXX11
  void set_tag1(::std::string&& value);
  #endif
  void set_tag1(const char* value);
  void set_tag1(const char* value, size_t size);
  ::std::string* mutable_tag1();
  ::std::string* release_tag1();
  void set_allocated_tag1(::std::string* tag1);

  // @@protoc_insertion_point(class_scope:open_wxhb_resp.TAG1.TAG1)
 private:
  void set_has_tag1();
  void clear_has_tag1();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr tag1_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class open_wxhb_resp_TAG1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:open_wxhb_resp.TAG1) */ {
 public:
  open_wxhb_resp_TAG1();
  virtual ~open_wxhb_resp_TAG1();

  open_wxhb_resp_TAG1(const open_wxhb_resp_TAG1& from);

  inline open_wxhb_resp_TAG1& operator=(const open_wxhb_resp_TAG1& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const open_wxhb_resp_TAG1& default_instance();

  static inline const open_wxhb_resp_TAG1* internal_default_instance() {
    return reinterpret_cast<const open_wxhb_resp_TAG1*>(
               &_open_wxhb_resp_TAG1_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    65;

  void Swap(open_wxhb_resp_TAG1* other);

  // implements Message ----------------------------------------------

  inline open_wxhb_resp_TAG1* New() const PROTOBUF_FINAL { return New(NULL); }

  open_wxhb_resp_TAG1* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const open_wxhb_resp_TAG1& from);
  void MergeFrom(const open_wxhb_resp_TAG1& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(open_wxhb_resp_TAG1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef open_wxhb_resp_TAG1_TAG1 TAG1;

  // accessors -------------------------------------------------------

  // optional int32 tag1 = 1;
  bool has_tag1() const;
  void clear_tag1();
  static const int kTag1FieldNumber = 1;
  ::google::protobuf::int32 tag1() const;
  void set_tag1(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:open_wxhb_resp.TAG1)
 private:
  void set_has_tag1();
  void clear_has_tag1();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 tag1_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class open_wxhb_resp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:open_wxhb_resp) */ {
 public:
  open_wxhb_resp();
  virtual ~open_wxhb_resp();

  open_wxhb_resp(const open_wxhb_resp& from);

  inline open_wxhb_resp& operator=(const open_wxhb_resp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const open_wxhb_resp& default_instance();

  static inline const open_wxhb_resp* internal_default_instance() {
    return reinterpret_cast<const open_wxhb_resp*>(
               &_open_wxhb_resp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    66;

  void Swap(open_wxhb_resp* other);

  // implements Message ----------------------------------------------

  inline open_wxhb_resp* New() const PROTOBUF_FINAL { return New(NULL); }

  open_wxhb_resp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const open_wxhb_resp& from);
  void MergeFrom(const open_wxhb_resp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(open_wxhb_resp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef open_wxhb_resp_TAG1 TAG1;

  // accessors -------------------------------------------------------

  // optional string ret_msg = 7;
  bool has_ret_msg() const;
  void clear_ret_msg();
  static const int kRetMsgFieldNumber = 7;
  const ::std::string& ret_msg() const;
  void set_ret_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_ret_msg(::std::string&& value);
  #endif
  void set_ret_msg(const char* value);
  void set_ret_msg(const char* value, size_t size);
  ::std::string* mutable_ret_msg();
  ::std::string* release_ret_msg();
  void set_allocated_ret_msg(::std::string* ret_msg);

  // optional .open_wxhb_resp.TAG1 tag1 = 1;
  bool has_tag1() const;
  void clear_tag1();
  static const int kTag1FieldNumber = 1;
  const ::open_wxhb_resp_TAG1& tag1() const;
  ::open_wxhb_resp_TAG1* mutable_tag1();
  ::open_wxhb_resp_TAG1* release_tag1();
  void set_allocated_tag1(::open_wxhb_resp_TAG1* tag1);

  // optional .mmStr res = 2;
  bool has_res() const;
  void clear_res();
  static const int kResFieldNumber = 2;
  const ::mmStr& res() const;
  ::mmStr* mutable_res();
  ::mmStr* release_res();
  void set_allocated_res(::mmStr* res);

  // optional int32 cmd = 5;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 5;
  ::google::protobuf::int32 cmd() const;
  void set_cmd(::google::protobuf::int32 value);

  // optional int32 ret_code = 6;
  bool has_ret_code() const;
  void clear_ret_code();
  static const int kRetCodeFieldNumber = 6;
  ::google::protobuf::int32 ret_code() const;
  void set_ret_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:open_wxhb_resp)
 private:
  void set_has_tag1();
  void clear_has_tag1();
  void set_has_res();
  void clear_has_res();
  void set_has_cmd();
  void clear_has_cmd();
  void set_has_ret_code();
  void clear_has_ret_code();
  void set_has_ret_msg();
  void clear_has_ret_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ret_msg_;
  ::open_wxhb_resp_TAG1* tag1_;
  ::mmStr* res_;
  ::google::protobuf::int32 cmd_;
  ::google::protobuf::int32 ret_code_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class qry_detail_wxhb_req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qry_detail_wxhb_req) */ {
 public:
  qry_detail_wxhb_req();
  virtual ~qry_detail_wxhb_req();

  qry_detail_wxhb_req(const qry_detail_wxhb_req& from);

  inline qry_detail_wxhb_req& operator=(const qry_detail_wxhb_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const qry_detail_wxhb_req& default_instance();

  static inline const qry_detail_wxhb_req* internal_default_instance() {
    return reinterpret_cast<const qry_detail_wxhb_req*>(
               &_qry_detail_wxhb_req_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    67;

  void Swap(qry_detail_wxhb_req* other);

  // implements Message ----------------------------------------------

  inline qry_detail_wxhb_req* New() const PROTOBUF_FINAL { return New(NULL); }

  qry_detail_wxhb_req* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const qry_detail_wxhb_req& from);
  void MergeFrom(const qry_detail_wxhb_req& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(qry_detail_wxhb_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .LoginInfo login = 1;
  bool has_login() const;
  void clear_login();
  static const int kLoginFieldNumber = 1;
  const ::LoginInfo& login() const;
  ::LoginInfo* mutable_login();
  ::LoginInfo* release_login();
  void set_allocated_login(::LoginInfo* login);

  // optional .mmStr info = 4;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 4;
  const ::mmStr& info() const;
  ::mmStr* mutable_info();
  ::mmStr* release_info();
  void set_allocated_info(::mmStr* info);

  // optional int32 cmd = 2;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 2;
  ::google::protobuf::int32 cmd() const;
  void set_cmd(::google::protobuf::int32 value);

  // optional int32 tag3 = 3;
  bool has_tag3() const;
  void clear_tag3();
  static const int kTag3FieldNumber = 3;
  ::google::protobuf::int32 tag3() const;
  void set_tag3(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:qry_detail_wxhb_req)
 private:
  void set_has_login();
  void clear_has_login();
  void set_has_cmd();
  void clear_has_cmd();
  void set_has_tag3();
  void clear_has_tag3();
  void set_has_info();
  void clear_has_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::LoginInfo* login_;
  ::mmStr* info_;
  ::google::protobuf::int32 cmd_;
  ::google::protobuf::int32 tag3_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class qry_detail_wxhb_resp_TAG1_TAG1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qry_detail_wxhb_resp.TAG1.TAG1) */ {
 public:
  qry_detail_wxhb_resp_TAG1_TAG1();
  virtual ~qry_detail_wxhb_resp_TAG1_TAG1();

  qry_detail_wxhb_resp_TAG1_TAG1(const qry_detail_wxhb_resp_TAG1_TAG1& from);

  inline qry_detail_wxhb_resp_TAG1_TAG1& operator=(const qry_detail_wxhb_resp_TAG1_TAG1& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const qry_detail_wxhb_resp_TAG1_TAG1& default_instance();

  static inline const qry_detail_wxhb_resp_TAG1_TAG1* internal_default_instance() {
    return reinterpret_cast<const qry_detail_wxhb_resp_TAG1_TAG1*>(
               &_qry_detail_wxhb_resp_TAG1_TAG1_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    68;

  void Swap(qry_detail_wxhb_resp_TAG1_TAG1* other);

  // implements Message ----------------------------------------------

  inline qry_detail_wxhb_resp_TAG1_TAG1* New() const PROTOBUF_FINAL { return New(NULL); }

  qry_detail_wxhb_resp_TAG1_TAG1* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const qry_detail_wxhb_resp_TAG1_TAG1& from);
  void MergeFrom(const qry_detail_wxhb_resp_TAG1_TAG1& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(qry_detail_wxhb_resp_TAG1_TAG1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string tag1 = 1;
  bool has_tag1() const;
  void clear_tag1();
  static const int kTag1FieldNumber = 1;
  const ::std::string& tag1() const;
  void set_tag1(const ::std::string& value);
  #if LANG_CXX11
  void set_tag1(::std::string&& value);
  #endif
  void set_tag1(const char* value);
  void set_tag1(const char* value, size_t size);
  ::std::string* mutable_tag1();
  ::std::string* release_tag1();
  void set_allocated_tag1(::std::string* tag1);

  // @@protoc_insertion_point(class_scope:qry_detail_wxhb_resp.TAG1.TAG1)
 private:
  void set_has_tag1();
  void clear_has_tag1();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr tag1_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class qry_detail_wxhb_resp_TAG1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qry_detail_wxhb_resp.TAG1) */ {
 public:
  qry_detail_wxhb_resp_TAG1();
  virtual ~qry_detail_wxhb_resp_TAG1();

  qry_detail_wxhb_resp_TAG1(const qry_detail_wxhb_resp_TAG1& from);

  inline qry_detail_wxhb_resp_TAG1& operator=(const qry_detail_wxhb_resp_TAG1& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const qry_detail_wxhb_resp_TAG1& default_instance();

  static inline const qry_detail_wxhb_resp_TAG1* internal_default_instance() {
    return reinterpret_cast<const qry_detail_wxhb_resp_TAG1*>(
               &_qry_detail_wxhb_resp_TAG1_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    69;

  void Swap(qry_detail_wxhb_resp_TAG1* other);

  // implements Message ----------------------------------------------

  inline qry_detail_wxhb_resp_TAG1* New() const PROTOBUF_FINAL { return New(NULL); }

  qry_detail_wxhb_resp_TAG1* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const qry_detail_wxhb_resp_TAG1& from);
  void MergeFrom(const qry_detail_wxhb_resp_TAG1& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(qry_detail_wxhb_resp_TAG1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef qry_detail_wxhb_resp_TAG1_TAG1 TAG1;

  // accessors -------------------------------------------------------

  // optional int32 tag1 = 1;
  bool has_tag1() const;
  void clear_tag1();
  static const int kTag1FieldNumber = 1;
  ::google::protobuf::int32 tag1() const;
  void set_tag1(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:qry_detail_wxhb_resp.TAG1)
 private:
  void set_has_tag1();
  void clear_has_tag1();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 tag1_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class qry_detail_wxhb_resp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qry_detail_wxhb_resp) */ {
 public:
  qry_detail_wxhb_resp();
  virtual ~qry_detail_wxhb_resp();

  qry_detail_wxhb_resp(const qry_detail_wxhb_resp& from);

  inline qry_detail_wxhb_resp& operator=(const qry_detail_wxhb_resp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const qry_detail_wxhb_resp& default_instance();

  static inline const qry_detail_wxhb_resp* internal_default_instance() {
    return reinterpret_cast<const qry_detail_wxhb_resp*>(
               &_qry_detail_wxhb_resp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    70;

  void Swap(qry_detail_wxhb_resp* other);

  // implements Message ----------------------------------------------

  inline qry_detail_wxhb_resp* New() const PROTOBUF_FINAL { return New(NULL); }

  qry_detail_wxhb_resp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const qry_detail_wxhb_resp& from);
  void MergeFrom(const qry_detail_wxhb_resp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(qry_detail_wxhb_resp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef qry_detail_wxhb_resp_TAG1 TAG1;

  // accessors -------------------------------------------------------

  // optional string ret_msg = 7;
  bool has_ret_msg() const;
  void clear_ret_msg();
  static const int kRetMsgFieldNumber = 7;
  const ::std::string& ret_msg() const;
  void set_ret_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_ret_msg(::std::string&& value);
  #endif
  void set_ret_msg(const char* value);
  void set_ret_msg(const char* value, size_t size);
  ::std::string* mutable_ret_msg();
  ::std::string* release_ret_msg();
  void set_allocated_ret_msg(::std::string* ret_msg);

  // optional .qry_detail_wxhb_resp.TAG1 tag1 = 1;
  bool has_tag1() const;
  void clear_tag1();
  static const int kTag1FieldNumber = 1;
  const ::qry_detail_wxhb_resp_TAG1& tag1() const;
  ::qry_detail_wxhb_resp_TAG1* mutable_tag1();
  ::qry_detail_wxhb_resp_TAG1* release_tag1();
  void set_allocated_tag1(::qry_detail_wxhb_resp_TAG1* tag1);

  // optional .mmStr res = 2;
  bool has_res() const;
  void clear_res();
  static const int kResFieldNumber = 2;
  const ::mmStr& res() const;
  ::mmStr* mutable_res();
  ::mmStr* release_res();
  void set_allocated_res(::mmStr* res);

  // optional int32 cmd = 5;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 5;
  ::google::protobuf::int32 cmd() const;
  void set_cmd(::google::protobuf::int32 value);

  // optional int32 ret_code = 6;
  bool has_ret_code() const;
  void clear_ret_code();
  static const int kRetCodeFieldNumber = 6;
  ::google::protobuf::int32 ret_code() const;
  void set_ret_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:qry_detail_wxhb_resp)
 private:
  void set_has_tag1();
  void clear_has_tag1();
  void set_has_res();
  void clear_has_res();
  void set_has_cmd();
  void clear_has_cmd();
  void set_has_ret_code();
  void clear_has_ret_code();
  void set_has_ret_msg();
  void clear_has_ret_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ret_msg_;
  ::qry_detail_wxhb_resp_TAG1* tag1_;
  ::mmStr* res_;
  ::google::protobuf::int32 cmd_;
  ::google::protobuf::int32 ret_code_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class send_emoji_req_emoji_info_TAG4 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:send_emoji_req.emoji_info.TAG4) */ {
 public:
  send_emoji_req_emoji_info_TAG4();
  virtual ~send_emoji_req_emoji_info_TAG4();

  send_emoji_req_emoji_info_TAG4(const send_emoji_req_emoji_info_TAG4& from);

  inline send_emoji_req_emoji_info_TAG4& operator=(const send_emoji_req_emoji_info_TAG4& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const send_emoji_req_emoji_info_TAG4& default_instance();

  static inline const send_emoji_req_emoji_info_TAG4* internal_default_instance() {
    return reinterpret_cast<const send_emoji_req_emoji_info_TAG4*>(
               &_send_emoji_req_emoji_info_TAG4_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    71;

  void Swap(send_emoji_req_emoji_info_TAG4* other);

  // implements Message ----------------------------------------------

  inline send_emoji_req_emoji_info_TAG4* New() const PROTOBUF_FINAL { return New(NULL); }

  send_emoji_req_emoji_info_TAG4* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const send_emoji_req_emoji_info_TAG4& from);
  void MergeFrom(const send_emoji_req_emoji_info_TAG4& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(send_emoji_req_emoji_info_TAG4* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 tag1 = 1;
  bool has_tag1() const;
  void clear_tag1();
  static const int kTag1FieldNumber = 1;
  ::google::protobuf::int32 tag1() const;
  void set_tag1(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:send_emoji_req.emoji_info.TAG4)
 private:
  void set_has_tag1();
  void clear_has_tag1();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 tag1_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class send_emoji_req_emoji_info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:send_emoji_req.emoji_info) */ {
 public:
  send_emoji_req_emoji_info();
  virtual ~send_emoji_req_emoji_info();

  send_emoji_req_emoji_info(const send_emoji_req_emoji_info& from);

  inline send_emoji_req_emoji_info& operator=(const send_emoji_req_emoji_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const send_emoji_req_emoji_info& default_instance();

  static inline const send_emoji_req_emoji_info* internal_default_instance() {
    return reinterpret_cast<const send_emoji_req_emoji_info*>(
               &_send_emoji_req_emoji_info_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    72;

  void Swap(send_emoji_req_emoji_info* other);

  // implements Message ----------------------------------------------

  inline send_emoji_req_emoji_info* New() const PROTOBUF_FINAL { return New(NULL); }

  send_emoji_req_emoji_info* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const send_emoji_req_emoji_info& from);
  void MergeFrom(const send_emoji_req_emoji_info& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(send_emoji_req_emoji_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef send_emoji_req_emoji_info_TAG4 TAG4;

  // accessors -------------------------------------------------------

  // optional string animation_id = 1;
  bool has_animation_id() const;
  void clear_animation_id();
  static const int kAnimationIdFieldNumber = 1;
  const ::std::string& animation_id() const;
  void set_animation_id(const ::std::string& value);
  #if LANG_CXX11
  void set_animation_id(::std::string&& value);
  #endif
  void set_animation_id(const char* value);
  void set_animation_id(const char* value, size_t size);
  ::std::string* mutable_animation_id();
  ::std::string* release_animation_id();
  void set_allocated_animation_id(::std::string* animation_id);

  // optional string to_wxid = 6;
  bool has_to_wxid() const;
  void clear_to_wxid();
  static const int kToWxidFieldNumber = 6;
  const ::std::string& to_wxid() const;
  void set_to_wxid(const ::std::string& value);
  #if LANG_CXX11
  void set_to_wxid(::std::string&& value);
  #endif
  void set_to_wxid(const char* value);
  void set_to_wxid(const char* value, size_t size);
  ::std::string* mutable_to_wxid();
  ::std::string* release_to_wxid();
  void set_allocated_to_wxid(::std::string* to_wxid);

  // optional string game_ext = 7;
  bool has_game_ext() const;
  void clear_game_ext();
  static const int kGameExtFieldNumber = 7;
  const ::std::string& game_ext() const;
  void set_game_ext(const ::std::string& value);
  #if LANG_CXX11
  void set_game_ext(::std::string&& value);
  #endif
  void set_game_ext(const char* value);
  void set_game_ext(const char* value, size_t size);
  ::std::string* mutable_game_ext();
  ::std::string* release_game_ext();
  void set_allocated_game_ext(::std::string* game_ext);

  // optional string tag8 = 8;
  bool has_tag8() const;
  void clear_tag8();
  static const int kTag8FieldNumber = 8;
  const ::std::string& tag8() const;
  void set_tag8(const ::std::string& value);
  #if LANG_CXX11
  void set_tag8(::std::string&& value);
  #endif
  void set_tag8(const char* value);
  void set_tag8(const char* value, size_t size);
  ::std::string* mutable_tag8();
  ::std::string* release_tag8();
  void set_allocated_tag8(::std::string* tag8);

  // optional string utc = 9;
  bool has_utc() const;
  void clear_utc();
  static const int kUtcFieldNumber = 9;
  const ::std::string& utc() const;
  void set_utc(const ::std::string& value);
  #if LANG_CXX11
  void set_utc(::std::string&& value);
  #endif
  void set_utc(const char* value);
  void set_utc(const char* value, size_t size);
  ::std::string* mutable_utc();
  ::std::string* release_utc();
  void set_allocated_utc(::std::string* utc);

  // optional .send_emoji_req.emoji_info.TAG4 tag4 = 4;
  bool has_tag4() const;
  void clear_tag4();
  static const int kTag4FieldNumber = 4;
  const ::send_emoji_req_emoji_info_TAG4& tag4() const;
  ::send_emoji_req_emoji_info_TAG4* mutable_tag4();
  ::send_emoji_req_emoji_info_TAG4* release_tag4();
  void set_allocated_tag4(::send_emoji_req_emoji_info_TAG4* tag4);

  // optional int32 tag2 = 2;
  bool has_tag2() const;
  void clear_tag2();
  static const int kTag2FieldNumber = 2;
  ::google::protobuf::int32 tag2() const;
  void set_tag2(::google::protobuf::int32 value);

  // optional int32 tag3 = 3;
  bool has_tag3() const;
  void clear_tag3();
  static const int kTag3FieldNumber = 3;
  ::google::protobuf::int32 tag3() const;
  void set_tag3(::google::protobuf::int32 value);

  // optional int32 tag5 = 5;
  bool has_tag5() const;
  void clear_tag5();
  static const int kTag5FieldNumber = 5;
  ::google::protobuf::int32 tag5() const;
  void set_tag5(::google::protobuf::int32 value);

  // optional int32 tag11 = 11;
  bool has_tag11() const;
  void clear_tag11();
  static const int kTag11FieldNumber = 11;
  ::google::protobuf::int32 tag11() const;
  void set_tag11(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:send_emoji_req.emoji_info)
 private:
  void set_has_animation_id();
  void clear_has_animation_id();
  void set_has_tag2();
  void clear_has_tag2();
  void set_has_tag3();
  void clear_has_tag3();
  void set_has_tag4();
  void clear_has_tag4();
  void set_has_tag5();
  void clear_has_tag5();
  void set_has_to_wxid();
  void clear_has_to_wxid();
  void set_has_game_ext();
  void clear_has_game_ext();
  void set_has_tag8();
  void clear_has_tag8();
  void set_has_utc();
  void clear_has_utc();
  void set_has_tag11();
  void clear_has_tag11();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr animation_id_;
  ::google::protobuf::internal::ArenaStringPtr to_wxid_;
  ::google::protobuf::internal::ArenaStringPtr game_ext_;
  ::google::protobuf::internal::ArenaStringPtr tag8_;
  ::google::protobuf::internal::ArenaStringPtr utc_;
  ::send_emoji_req_emoji_info_TAG4* tag4_;
  ::google::protobuf::int32 tag2_;
  ::google::protobuf::int32 tag3_;
  ::google::protobuf::int32 tag5_;
  ::google::protobuf::int32 tag11_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class send_emoji_req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:send_emoji_req) */ {
 public:
  send_emoji_req();
  virtual ~send_emoji_req();

  send_emoji_req(const send_emoji_req& from);

  inline send_emoji_req& operator=(const send_emoji_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const send_emoji_req& default_instance();

  static inline const send_emoji_req* internal_default_instance() {
    return reinterpret_cast<const send_emoji_req*>(
               &_send_emoji_req_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    73;

  void Swap(send_emoji_req* other);

  // implements Message ----------------------------------------------

  inline send_emoji_req* New() const PROTOBUF_FINAL { return New(NULL); }

  send_emoji_req* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const send_emoji_req& from);
  void MergeFrom(const send_emoji_req& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(send_emoji_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef send_emoji_req_emoji_info emoji_info;

  // accessors -------------------------------------------------------

  // optional .LoginInfo login = 1;
  bool has_login() const;
  void clear_login();
  static const int kLoginFieldNumber = 1;
  const ::LoginInfo& login() const;
  ::LoginInfo* mutable_login();
  ::LoginInfo* release_login();
  void set_allocated_login(::LoginInfo* login);

  // optional .send_emoji_req.emoji_info emoji = 3;
  bool has_emoji() const;
  void clear_emoji();
  static const int kEmojiFieldNumber = 3;
  const ::send_emoji_req_emoji_info& emoji() const;
  ::send_emoji_req_emoji_info* mutable_emoji();
  ::send_emoji_req_emoji_info* release_emoji();
  void set_allocated_emoji(::send_emoji_req_emoji_info* emoji);

  // optional int32 tag2 = 2;
  bool has_tag2() const;
  void clear_tag2();
  static const int kTag2FieldNumber = 2;
  ::google::protobuf::int32 tag2() const;
  void set_tag2(::google::protobuf::int32 value);

  // optional int32 tag4 = 4;
  bool has_tag4() const;
  void clear_tag4();
  static const int kTag4FieldNumber = 4;
  ::google::protobuf::int32 tag4() const;
  void set_tag4(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:send_emoji_req)
 private:
  void set_has_login();
  void clear_has_login();
  void set_has_tag2();
  void clear_has_tag2();
  void set_has_emoji();
  void clear_has_emoji();
  void set_has_tag4();
  void clear_has_tag4();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::LoginInfo* login_;
  ::send_emoji_req_emoji_info* emoji_;
  ::google::protobuf::int32 tag2_;
  ::google::protobuf::int32 tag4_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class send_emoji_resp_result : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:send_emoji_resp.result) */ {
 public:
  send_emoji_resp_result();
  virtual ~send_emoji_resp_result();

  send_emoji_resp_result(const send_emoji_resp_result& from);

  inline send_emoji_resp_result& operator=(const send_emoji_resp_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const send_emoji_resp_result& default_instance();

  static inline const send_emoji_resp_result* internal_default_instance() {
    return reinterpret_cast<const send_emoji_resp_result*>(
               &_send_emoji_resp_result_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    74;

  void Swap(send_emoji_resp_result* other);

  // implements Message ----------------------------------------------

  inline send_emoji_resp_result* New() const PROTOBUF_FINAL { return New(NULL); }

  send_emoji_resp_result* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const send_emoji_resp_result& from);
  void MergeFrom(const send_emoji_resp_result& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(send_emoji_resp_result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string file_name = 4;
  bool has_file_name() const;
  void clear_file_name();
  static const int kFileNameFieldNumber = 4;
  const ::std::string& file_name() const;
  void set_file_name(const ::std::string& value);
  #if LANG_CXX11
  void set_file_name(::std::string&& value);
  #endif
  void set_file_name(const char* value);
  void set_file_name(const char* value, size_t size);
  ::std::string* mutable_file_name();
  ::std::string* release_file_name();
  void set_allocated_file_name(::std::string* file_name);

  // optional int32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // optional int32 tag2 = 2;
  bool has_tag2() const;
  void clear_tag2();
  static const int kTag2FieldNumber = 2;
  ::google::protobuf::int32 tag2() const;
  void set_tag2(::google::protobuf::int32 value);

  // optional int32 tag3 = 3;
  bool has_tag3() const;
  void clear_tag3();
  static const int kTag3FieldNumber = 3;
  ::google::protobuf::int32 tag3() const;
  void set_tag3(::google::protobuf::int32 value);

  // optional int32 svrid = 5;
  bool has_svrid() const;
  void clear_svrid();
  static const int kSvridFieldNumber = 5;
  ::google::protobuf::int32 svrid() const;
  void set_svrid(::google::protobuf::int32 value);

  // optional int32 tag6 = 6;
  bool has_tag6() const;
  void clear_tag6();
  static const int kTag6FieldNumber = 6;
  ::google::protobuf::int32 tag6() const;
  void set_tag6(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:send_emoji_resp.result)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_tag2();
  void clear_has_tag2();
  void set_has_tag3();
  void clear_has_tag3();
  void set_has_file_name();
  void clear_has_file_name();
  void set_has_svrid();
  void clear_has_svrid();
  void set_has_tag6();
  void clear_has_tag6();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr file_name_;
  ::google::protobuf::int32 code_;
  ::google::protobuf::int32 tag2_;
  ::google::protobuf::int32 tag3_;
  ::google::protobuf::int32 svrid_;
  ::google::protobuf::int32 tag6_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class send_emoji_resp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:send_emoji_resp) */ {
 public:
  send_emoji_resp();
  virtual ~send_emoji_resp();

  send_emoji_resp(const send_emoji_resp& from);

  inline send_emoji_resp& operator=(const send_emoji_resp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const send_emoji_resp& default_instance();

  static inline const send_emoji_resp* internal_default_instance() {
    return reinterpret_cast<const send_emoji_resp*>(
               &_send_emoji_resp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    75;

  void Swap(send_emoji_resp* other);

  // implements Message ----------------------------------------------

  inline send_emoji_resp* New() const PROTOBUF_FINAL { return New(NULL); }

  send_emoji_resp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const send_emoji_resp& from);
  void MergeFrom(const send_emoji_resp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(send_emoji_resp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef send_emoji_resp_result result;

  // accessors -------------------------------------------------------

  // optional .send_emoji_resp.result res = 3;
  bool has_res() const;
  void clear_res();
  static const int kResFieldNumber = 3;
  const ::send_emoji_resp_result& res() const;
  ::send_emoji_resp_result* mutable_res();
  ::send_emoji_resp_result* release_res();
  void set_allocated_res(::send_emoji_resp_result* res);

  // @@protoc_insertion_point(class_scope:send_emoji_resp)
 private:
  void set_has_res();
  void clear_has_res();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::send_emoji_resp_result* res_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class transfer_operation_req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:transfer_operation_req) */ {
 public:
  transfer_operation_req();
  virtual ~transfer_operation_req();

  transfer_operation_req(const transfer_operation_req& from);

  inline transfer_operation_req& operator=(const transfer_operation_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const transfer_operation_req& default_instance();

  static inline const transfer_operation_req* internal_default_instance() {
    return reinterpret_cast<const transfer_operation_req*>(
               &_transfer_operation_req_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    76;

  void Swap(transfer_operation_req* other);

  // implements Message ----------------------------------------------

  inline transfer_operation_req* New() const PROTOBUF_FINAL { return New(NULL); }

  transfer_operation_req* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const transfer_operation_req& from);
  void MergeFrom(const transfer_operation_req& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(transfer_operation_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .LoginInfo login = 1;
  bool has_login() const;
  void clear_login();
  static const int kLoginFieldNumber = 1;
  const ::LoginInfo& login() const;
  ::LoginInfo* mutable_login();
  ::LoginInfo* release_login();
  void set_allocated_login(::LoginInfo* login);

  // optional .mmStr info = 4;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 4;
  const ::mmStr& info() const;
  ::mmStr* mutable_info();
  ::mmStr* release_info();
  void set_allocated_info(::mmStr* info);

  // optional int32 tag2 = 2;
  bool has_tag2() const;
  void clear_tag2();
  static const int kTag2FieldNumber = 2;
  ::google::protobuf::int32 tag2() const;
  void set_tag2(::google::protobuf::int32 value);

  // optional int32 tag3 = 3;
  bool has_tag3() const;
  void clear_tag3();
  static const int kTag3FieldNumber = 3;
  ::google::protobuf::int32 tag3() const;
  void set_tag3(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:transfer_operation_req)
 private:
  void set_has_login();
  void clear_has_login();
  void set_has_tag2();
  void clear_has_tag2();
  void set_has_tag3();
  void clear_has_tag3();
  void set_has_info();
  void clear_has_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::LoginInfo* login_;
  ::mmStr* info_;
  ::google::protobuf::int32 tag2_;
  ::google::protobuf::int32 tag3_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class transfer_operation_resp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:transfer_operation_resp) */ {
 public:
  transfer_operation_resp();
  virtual ~transfer_operation_resp();

  transfer_operation_resp(const transfer_operation_resp& from);

  inline transfer_operation_resp& operator=(const transfer_operation_resp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const transfer_operation_resp& default_instance();

  static inline const transfer_operation_resp* internal_default_instance() {
    return reinterpret_cast<const transfer_operation_resp*>(
               &_transfer_operation_resp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    77;

  void Swap(transfer_operation_resp* other);

  // implements Message ----------------------------------------------

  inline transfer_operation_resp* New() const PROTOBUF_FINAL { return New(NULL); }

  transfer_operation_resp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const transfer_operation_resp& from);
  void MergeFrom(const transfer_operation_resp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(transfer_operation_resp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ret_msg = 7;
  bool has_ret_msg() const;
  void clear_ret_msg();
  static const int kRetMsgFieldNumber = 7;
  const ::std::string& ret_msg() const;
  void set_ret_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_ret_msg(::std::string&& value);
  #endif
  void set_ret_msg(const char* value);
  void set_ret_msg(const char* value, size_t size);
  ::std::string* mutable_ret_msg();
  ::std::string* release_ret_msg();
  void set_allocated_ret_msg(::std::string* ret_msg);

  // optional .mmStr res = 2;
  bool has_res() const;
  void clear_res();
  static const int kResFieldNumber = 2;
  const ::mmStr& res() const;
  ::mmStr* mutable_res();
  ::mmStr* release_res();
  void set_allocated_res(::mmStr* res);

  // optional int32 ret_code = 6;
  bool has_ret_code() const;
  void clear_ret_code();
  static const int kRetCodeFieldNumber = 6;
  ::google::protobuf::int32 ret_code() const;
  void set_ret_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:transfer_operation_resp)
 private:
  void set_has_res();
  void clear_has_res();
  void set_has_ret_code();
  void clear_has_ret_code();
  void set_has_ret_msg();
  void clear_has_ret_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ret_msg_;
  ::mmStr* res_;
  ::google::protobuf::int32 ret_code_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class transfer_query_req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:transfer_query_req) */ {
 public:
  transfer_query_req();
  virtual ~transfer_query_req();

  transfer_query_req(const transfer_query_req& from);

  inline transfer_query_req& operator=(const transfer_query_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const transfer_query_req& default_instance();

  static inline const transfer_query_req* internal_default_instance() {
    return reinterpret_cast<const transfer_query_req*>(
               &_transfer_query_req_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    78;

  void Swap(transfer_query_req* other);

  // implements Message ----------------------------------------------

  inline transfer_query_req* New() const PROTOBUF_FINAL { return New(NULL); }

  transfer_query_req* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const transfer_query_req& from);
  void MergeFrom(const transfer_query_req& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(transfer_query_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .LoginInfo login = 1;
  bool has_login() const;
  void clear_login();
  static const int kLoginFieldNumber = 1;
  const ::LoginInfo& login() const;
  ::LoginInfo* mutable_login();
  ::LoginInfo* release_login();
  void set_allocated_login(::LoginInfo* login);

  // optional .mmStr info = 4;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 4;
  const ::mmStr& info() const;
  ::mmStr* mutable_info();
  ::mmStr* release_info();
  void set_allocated_info(::mmStr* info);

  // optional int32 tag2 = 2;
  bool has_tag2() const;
  void clear_tag2();
  static const int kTag2FieldNumber = 2;
  ::google::protobuf::int32 tag2() const;
  void set_tag2(::google::protobuf::int32 value);

  // optional int32 tag3 = 3;
  bool has_tag3() const;
  void clear_tag3();
  static const int kTag3FieldNumber = 3;
  ::google::protobuf::int32 tag3() const;
  void set_tag3(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:transfer_query_req)
 private:
  void set_has_login();
  void clear_has_login();
  void set_has_tag2();
  void clear_has_tag2();
  void set_has_tag3();
  void clear_has_tag3();
  void set_has_info();
  void clear_has_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::LoginInfo* login_;
  ::mmStr* info_;
  ::google::protobuf::int32 tag2_;
  ::google::protobuf::int32 tag3_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class transfer_query_resp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:transfer_query_resp) */ {
 public:
  transfer_query_resp();
  virtual ~transfer_query_resp();

  transfer_query_resp(const transfer_query_resp& from);

  inline transfer_query_resp& operator=(const transfer_query_resp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const transfer_query_resp& default_instance();

  static inline const transfer_query_resp* internal_default_instance() {
    return reinterpret_cast<const transfer_query_resp*>(
               &_transfer_query_resp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    79;

  void Swap(transfer_query_resp* other);

  // implements Message ----------------------------------------------

  inline transfer_query_resp* New() const PROTOBUF_FINAL { return New(NULL); }

  transfer_query_resp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const transfer_query_resp& from);
  void MergeFrom(const transfer_query_resp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(transfer_query_resp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ret_msg = 7;
  bool has_ret_msg() const;
  void clear_ret_msg();
  static const int kRetMsgFieldNumber = 7;
  const ::std::string& ret_msg() const;
  void set_ret_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_ret_msg(::std::string&& value);
  #endif
  void set_ret_msg(const char* value);
  void set_ret_msg(const char* value, size_t size);
  ::std::string* mutable_ret_msg();
  ::std::string* release_ret_msg();
  void set_allocated_ret_msg(::std::string* ret_msg);

  // optional .mmStr res = 2;
  bool has_res() const;
  void clear_res();
  static const int kResFieldNumber = 2;
  const ::mmStr& res() const;
  ::mmStr* mutable_res();
  ::mmStr* release_res();
  void set_allocated_res(::mmStr* res);

  // optional int32 ret_code = 6;
  bool has_ret_code() const;
  void clear_ret_code();
  static const int kRetCodeFieldNumber = 6;
  ::google::protobuf::int32 ret_code() const;
  void set_ret_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:transfer_query_resp)
 private:
  void set_has_res();
  void clear_has_res();
  void set_has_ret_code();
  void clear_has_ret_code();
  void set_has_ret_msg();
  void clear_has_ret_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ret_msg_;
  ::mmStr* res_;
  ::google::protobuf::int32 ret_code_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class get_contact_req_TAG7 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:get_contact_req.TAG7) */ {
 public:
  get_contact_req_TAG7();
  virtual ~get_contact_req_TAG7();

  get_contact_req_TAG7(const get_contact_req_TAG7& from);

  inline get_contact_req_TAG7& operator=(const get_contact_req_TAG7& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const get_contact_req_TAG7& default_instance();

  static inline const get_contact_req_TAG7* internal_default_instance() {
    return reinterpret_cast<const get_contact_req_TAG7*>(
               &_get_contact_req_TAG7_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    80;

  void Swap(get_contact_req_TAG7* other);

  // implements Message ----------------------------------------------

  inline get_contact_req_TAG7* New() const PROTOBUF_FINAL { return New(NULL); }

  get_contact_req_TAG7* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const get_contact_req_TAG7& from);
  void MergeFrom(const get_contact_req_TAG7& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(get_contact_req_TAG7* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string tag1 = 1;
  bool has_tag1() const;
  void clear_tag1();
  static const int kTag1FieldNumber = 1;
  const ::std::string& tag1() const;
  void set_tag1(const ::std::string& value);
  #if LANG_CXX11
  void set_tag1(::std::string&& value);
  #endif
  void set_tag1(const char* value);
  void set_tag1(const char* value, size_t size);
  ::std::string* mutable_tag1();
  ::std::string* release_tag1();
  void set_allocated_tag1(::std::string* tag1);

  // @@protoc_insertion_point(class_scope:get_contact_req.TAG7)
 private:
  void set_has_tag1();
  void clear_has_tag1();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr tag1_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class get_contact_req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:get_contact_req) */ {
 public:
  get_contact_req();
  virtual ~get_contact_req();

  get_contact_req(const get_contact_req& from);

  inline get_contact_req& operator=(const get_contact_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const get_contact_req& default_instance();

  static inline const get_contact_req* internal_default_instance() {
    return reinterpret_cast<const get_contact_req*>(
               &_get_contact_req_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    81;

  void Swap(get_contact_req* other);

  // implements Message ----------------------------------------------

  inline get_contact_req* New() const PROTOBUF_FINAL { return New(NULL); }

  get_contact_req* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const get_contact_req& from);
  void MergeFrom(const get_contact_req& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(get_contact_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef get_contact_req_TAG7 TAG7;

  // accessors -------------------------------------------------------

  // optional .LoginInfo login = 1;
  bool has_login() const;
  void clear_login();
  static const int kLoginFieldNumber = 1;
  const ::LoginInfo& login() const;
  ::LoginInfo* mutable_login();
  ::LoginInfo* release_login();
  void set_allocated_login(::LoginInfo* login);

  // optional .Wxid wxid = 3;
  bool has_wxid() const;
  void clear_wxid();
  static const int kWxidFieldNumber = 3;
  const ::Wxid& wxid() const;
  ::Wxid* mutable_wxid();
  ::Wxid* release_wxid();
  void set_allocated_wxid(::Wxid* wxid);

  // optional .get_contact_req.TAG7 tag7 = 7;
  bool has_tag7() const;
  void clear_tag7();
  static const int kTag7FieldNumber = 7;
  const ::get_contact_req_TAG7& tag7() const;
  ::get_contact_req_TAG7* mutable_tag7();
  ::get_contact_req_TAG7* release_tag7();
  void set_allocated_tag7(::get_contact_req_TAG7* tag7);

  // optional int32 tag2 = 2;
  bool has_tag2() const;
  void clear_tag2();
  static const int kTag2FieldNumber = 2;
  ::google::protobuf::int32 tag2() const;
  void set_tag2(::google::protobuf::int32 value);

  // optional int32 tag4 = 4;
  bool has_tag4() const;
  void clear_tag4();
  static const int kTag4FieldNumber = 4;
  ::google::protobuf::int32 tag4() const;
  void set_tag4(::google::protobuf::int32 value);

  // optional int32 tag6 = 6;
  bool has_tag6() const;
  void clear_tag6();
  static const int kTag6FieldNumber = 6;
  ::google::protobuf::int32 tag6() const;
  void set_tag6(::google::protobuf::int32 value);

  // optional int32 tag8 = 8;
  bool has_tag8() const;
  void clear_tag8();
  static const int kTag8FieldNumber = 8;
  ::google::protobuf::int32 tag8() const;
  void set_tag8(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:get_contact_req)
 private:
  void set_has_login();
  void clear_has_login();
  void set_has_tag2();
  void clear_has_tag2();
  void set_has_wxid();
  void clear_has_wxid();
  void set_has_tag4();
  void clear_has_tag4();
  void set_has_tag6();
  void clear_has_tag6();
  void set_has_tag7();
  void clear_has_tag7();
  void set_has_tag8();
  void clear_has_tag8();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::LoginInfo* login_;
  ::Wxid* wxid_;
  ::get_contact_req_TAG7* tag7_;
  ::google::protobuf::int32 tag2_;
  ::google::protobuf::int32 tag4_;
  ::google::protobuf::int32 tag6_;
  ::google::protobuf::int32 tag8_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class get_contact_resp_ticket_info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:get_contact_resp.ticket_info) */ {
 public:
  get_contact_resp_ticket_info();
  virtual ~get_contact_resp_ticket_info();

  get_contact_resp_ticket_info(const get_contact_resp_ticket_info& from);

  inline get_contact_resp_ticket_info& operator=(const get_contact_resp_ticket_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const get_contact_resp_ticket_info& default_instance();

  static inline const get_contact_resp_ticket_info* internal_default_instance() {
    return reinterpret_cast<const get_contact_resp_ticket_info*>(
               &_get_contact_resp_ticket_info_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    82;

  void Swap(get_contact_resp_ticket_info* other);

  // implements Message ----------------------------------------------

  inline get_contact_resp_ticket_info* New() const PROTOBUF_FINAL { return New(NULL); }

  get_contact_resp_ticket_info* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const get_contact_resp_ticket_info& from);
  void MergeFrom(const get_contact_resp_ticket_info& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(get_contact_resp_ticket_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string wxid = 1;
  bool has_wxid() const;
  void clear_wxid();
  static const int kWxidFieldNumber = 1;
  const ::std::string& wxid() const;
  void set_wxid(const ::std::string& value);
  #if LANG_CXX11
  void set_wxid(::std::string&& value);
  #endif
  void set_wxid(const char* value);
  void set_wxid(const char* value, size_t size);
  ::std::string* mutable_wxid();
  ::std::string* release_wxid();
  void set_allocated_wxid(::std::string* wxid);

  // optional string ticket = 2;
  bool has_ticket() const;
  void clear_ticket();
  static const int kTicketFieldNumber = 2;
  const ::std::string& ticket() const;
  void set_ticket(const ::std::string& value);
  #if LANG_CXX11
  void set_ticket(::std::string&& value);
  #endif
  void set_ticket(const char* value);
  void set_ticket(const char* value, size_t size);
  ::std::string* mutable_ticket();
  ::std::string* release_ticket();
  void set_allocated_ticket(::std::string* ticket);

  // @@protoc_insertion_point(class_scope:get_contact_resp.ticket_info)
 private:
  void set_has_wxid();
  void clear_has_wxid();
  void set_has_ticket();
  void clear_has_ticket();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr wxid_;
  ::google::protobuf::internal::ArenaStringPtr ticket_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class get_contact_resp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:get_contact_resp) */ {
 public:
  get_contact_resp();
  virtual ~get_contact_resp();

  get_contact_resp(const get_contact_resp& from);

  inline get_contact_resp& operator=(const get_contact_resp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const get_contact_resp& default_instance();

  static inline const get_contact_resp* internal_default_instance() {
    return reinterpret_cast<const get_contact_resp*>(
               &_get_contact_resp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    83;

  void Swap(get_contact_resp* other);

  // implements Message ----------------------------------------------

  inline get_contact_resp* New() const PROTOBUF_FINAL { return New(NULL); }

  get_contact_resp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const get_contact_resp& from);
  void MergeFrom(const get_contact_resp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(get_contact_resp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef get_contact_resp_ticket_info ticket_info;

  // accessors -------------------------------------------------------

  // optional .contact_info info = 3;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 3;
  const ::contact_info& info() const;
  ::contact_info* mutable_info();
  ::contact_info* release_info();
  void set_allocated_info(::contact_info* info);

  // optional .get_contact_resp.ticket_info ticket = 5;
  bool has_ticket() const;
  void clear_ticket();
  static const int kTicketFieldNumber = 5;
  const ::get_contact_resp_ticket_info& ticket() const;
  ::get_contact_resp_ticket_info* mutable_ticket();
  ::get_contact_resp_ticket_info* release_ticket();
  void set_allocated_ticket(::get_contact_resp_ticket_info* ticket);

  // @@protoc_insertion_point(class_scope:get_contact_resp)
 private:
  void set_has_info();
  void clear_has_info();
  void set_has_ticket();
  void clear_has_ticket();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::contact_info* info_;
  ::get_contact_resp_ticket_info* ticket_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class create_chatroom_req_TAG2 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:create_chatroom_req.TAG2) */ {
 public:
  create_chatroom_req_TAG2();
  virtual ~create_chatroom_req_TAG2();

  create_chatroom_req_TAG2(const create_chatroom_req_TAG2& from);

  inline create_chatroom_req_TAG2& operator=(const create_chatroom_req_TAG2& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const create_chatroom_req_TAG2& default_instance();

  static inline const create_chatroom_req_TAG2* internal_default_instance() {
    return reinterpret_cast<const create_chatroom_req_TAG2*>(
               &_create_chatroom_req_TAG2_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    84;

  void Swap(create_chatroom_req_TAG2* other);

  // implements Message ----------------------------------------------

  inline create_chatroom_req_TAG2* New() const PROTOBUF_FINAL { return New(NULL); }

  create_chatroom_req_TAG2* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const create_chatroom_req_TAG2& from);
  void MergeFrom(const create_chatroom_req_TAG2& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(create_chatroom_req_TAG2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string tag1 = 1;
  bool has_tag1() const;
  void clear_tag1();
  static const int kTag1FieldNumber = 1;
  const ::std::string& tag1() const;
  void set_tag1(const ::std::string& value);
  #if LANG_CXX11
  void set_tag1(::std::string&& value);
  #endif
  void set_tag1(const char* value);
  void set_tag1(const char* value, size_t size);
  ::std::string* mutable_tag1();
  ::std::string* release_tag1();
  void set_allocated_tag1(::std::string* tag1);

  // @@protoc_insertion_point(class_scope:create_chatroom_req.TAG2)
 private:
  void set_has_tag1();
  void clear_has_tag1();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr tag1_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class create_chatroom_req_member_info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:create_chatroom_req.member_info) */ {
 public:
  create_chatroom_req_member_info();
  virtual ~create_chatroom_req_member_info();

  create_chatroom_req_member_info(const create_chatroom_req_member_info& from);

  inline create_chatroom_req_member_info& operator=(const create_chatroom_req_member_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const create_chatroom_req_member_info& default_instance();

  static inline const create_chatroom_req_member_info* internal_default_instance() {
    return reinterpret_cast<const create_chatroom_req_member_info*>(
               &_create_chatroom_req_member_info_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    85;

  void Swap(create_chatroom_req_member_info* other);

  // implements Message ----------------------------------------------

  inline create_chatroom_req_member_info* New() const PROTOBUF_FINAL { return New(NULL); }

  create_chatroom_req_member_info* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const create_chatroom_req_member_info& from);
  void MergeFrom(const create_chatroom_req_member_info& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(create_chatroom_req_member_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Wxid wxid = 1;
  bool has_wxid() const;
  void clear_wxid();
  static const int kWxidFieldNumber = 1;
  const ::Wxid& wxid() const;
  ::Wxid* mutable_wxid();
  ::Wxid* release_wxid();
  void set_allocated_wxid(::Wxid* wxid);

  // @@protoc_insertion_point(class_scope:create_chatroom_req.member_info)
 private:
  void set_has_wxid();
  void clear_has_wxid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::Wxid* wxid_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class create_chatroom_req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:create_chatroom_req) */ {
 public:
  create_chatroom_req();
  virtual ~create_chatroom_req();

  create_chatroom_req(const create_chatroom_req& from);

  inline create_chatroom_req& operator=(const create_chatroom_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const create_chatroom_req& default_instance();

  static inline const create_chatroom_req* internal_default_instance() {
    return reinterpret_cast<const create_chatroom_req*>(
               &_create_chatroom_req_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    86;

  void Swap(create_chatroom_req* other);

  // implements Message ----------------------------------------------

  inline create_chatroom_req* New() const PROTOBUF_FINAL { return New(NULL); }

  create_chatroom_req* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const create_chatroom_req& from);
  void MergeFrom(const create_chatroom_req& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(create_chatroom_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef create_chatroom_req_TAG2 TAG2;
  typedef create_chatroom_req_member_info member_info;

  // accessors -------------------------------------------------------

  // repeated .create_chatroom_req.member_info member = 4;
  int member_size() const;
  void clear_member();
  static const int kMemberFieldNumber = 4;
  const ::create_chatroom_req_member_info& member(int index) const;
  ::create_chatroom_req_member_info* mutable_member(int index);
  ::create_chatroom_req_member_info* add_member();
  ::google::protobuf::RepeatedPtrField< ::create_chatroom_req_member_info >*
      mutable_member();
  const ::google::protobuf::RepeatedPtrField< ::create_chatroom_req_member_info >&
      member() const;

  // optional .LoginInfo login = 1;
  bool has_login() const;
  void clear_login();
  static const int kLoginFieldNumber = 1;
  const ::LoginInfo& login() const;
  ::LoginInfo* mutable_login();
  ::LoginInfo* release_login();
  void set_allocated_login(::LoginInfo* login);

  // optional .create_chatroom_req.TAG2 tag2 = 2;
  bool has_tag2() const;
  void clear_tag2();
  static const int kTag2FieldNumber = 2;
  const ::create_chatroom_req_TAG2& tag2() const;
  ::create_chatroom_req_TAG2* mutable_tag2();
  ::create_chatroom_req_TAG2* release_tag2();
  void set_allocated_tag2(::create_chatroom_req_TAG2* tag2);

  // optional int32 member_cnt = 3;
  bool has_member_cnt() const;
  void clear_member_cnt();
  static const int kMemberCntFieldNumber = 3;
  ::google::protobuf::int32 member_cnt() const;
  void set_member_cnt(::google::protobuf::int32 value);

  // optional int32 tag5 = 5;
  bool has_tag5() const;
  void clear_tag5();
  static const int kTag5FieldNumber = 5;
  ::google::protobuf::int32 tag5() const;
  void set_tag5(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:create_chatroom_req)
 private:
  void set_has_login();
  void clear_has_login();
  void set_has_tag2();
  void clear_has_tag2();
  void set_has_member_cnt();
  void clear_has_member_cnt();
  void set_has_tag5();
  void clear_has_tag5();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::create_chatroom_req_member_info > member_;
  ::LoginInfo* login_;
  ::create_chatroom_req_TAG2* tag2_;
  ::google::protobuf::int32 member_cnt_;
  ::google::protobuf::int32 tag5_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class create_chatroom_resp_result_err_msg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:create_chatroom_resp.result.err_msg) */ {
 public:
  create_chatroom_resp_result_err_msg();
  virtual ~create_chatroom_resp_result_err_msg();

  create_chatroom_resp_result_err_msg(const create_chatroom_resp_result_err_msg& from);

  inline create_chatroom_resp_result_err_msg& operator=(const create_chatroom_resp_result_err_msg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const create_chatroom_resp_result_err_msg& default_instance();

  static inline const create_chatroom_resp_result_err_msg* internal_default_instance() {
    return reinterpret_cast<const create_chatroom_resp_result_err_msg*>(
               &_create_chatroom_resp_result_err_msg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    87;

  void Swap(create_chatroom_resp_result_err_msg* other);

  // implements Message ----------------------------------------------

  inline create_chatroom_resp_result_err_msg* New() const PROTOBUF_FINAL { return New(NULL); }

  create_chatroom_resp_result_err_msg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const create_chatroom_resp_result_err_msg& from);
  void MergeFrom(const create_chatroom_resp_result_err_msg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(create_chatroom_resp_result_err_msg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 1;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:create_chatroom_resp.result.err_msg)
 private:
  void set_has_msg();
  void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class create_chatroom_resp_result : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:create_chatroom_resp.result) */ {
 public:
  create_chatroom_resp_result();
  virtual ~create_chatroom_resp_result();

  create_chatroom_resp_result(const create_chatroom_resp_result& from);

  inline create_chatroom_resp_result& operator=(const create_chatroom_resp_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const create_chatroom_resp_result& default_instance();

  static inline const create_chatroom_resp_result* internal_default_instance() {
    return reinterpret_cast<const create_chatroom_resp_result*>(
               &_create_chatroom_resp_result_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    88;

  void Swap(create_chatroom_resp_result* other);

  // implements Message ----------------------------------------------

  inline create_chatroom_resp_result* New() const PROTOBUF_FINAL { return New(NULL); }

  create_chatroom_resp_result* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const create_chatroom_resp_result& from);
  void MergeFrom(const create_chatroom_resp_result& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(create_chatroom_resp_result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef create_chatroom_resp_result_err_msg err_msg;

  // accessors -------------------------------------------------------

  // optional .create_chatroom_resp.result.err_msg msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::create_chatroom_resp_result_err_msg& msg() const;
  ::create_chatroom_resp_result_err_msg* mutable_msg();
  ::create_chatroom_resp_result_err_msg* release_msg();
  void set_allocated_msg(::create_chatroom_resp_result_err_msg* msg);

  // optional int32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:create_chatroom_resp.result)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_msg();
  void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::create_chatroom_resp_result_err_msg* msg_;
  ::google::protobuf::int32 code_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class create_chatroom_resp_member_info_nick_name_info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:create_chatroom_resp.member_info.nick_name_info) */ {
 public:
  create_chatroom_resp_member_info_nick_name_info();
  virtual ~create_chatroom_resp_member_info_nick_name_info();

  create_chatroom_resp_member_info_nick_name_info(const create_chatroom_resp_member_info_nick_name_info& from);

  inline create_chatroom_resp_member_info_nick_name_info& operator=(const create_chatroom_resp_member_info_nick_name_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const create_chatroom_resp_member_info_nick_name_info& default_instance();

  static inline const create_chatroom_resp_member_info_nick_name_info* internal_default_instance() {
    return reinterpret_cast<const create_chatroom_resp_member_info_nick_name_info*>(
               &_create_chatroom_resp_member_info_nick_name_info_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    89;

  void Swap(create_chatroom_resp_member_info_nick_name_info* other);

  // implements Message ----------------------------------------------

  inline create_chatroom_resp_member_info_nick_name_info* New() const PROTOBUF_FINAL { return New(NULL); }

  create_chatroom_resp_member_info_nick_name_info* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const create_chatroom_resp_member_info_nick_name_info& from);
  void MergeFrom(const create_chatroom_resp_member_info_nick_name_info& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(create_chatroom_resp_member_info_nick_name_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:create_chatroom_resp.member_info.nick_name_info)
 private:
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class create_chatroom_resp_member_info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:create_chatroom_resp.member_info) */ {
 public:
  create_chatroom_resp_member_info();
  virtual ~create_chatroom_resp_member_info();

  create_chatroom_resp_member_info(const create_chatroom_resp_member_info& from);

  inline create_chatroom_resp_member_info& operator=(const create_chatroom_resp_member_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const create_chatroom_resp_member_info& default_instance();

  static inline const create_chatroom_resp_member_info* internal_default_instance() {
    return reinterpret_cast<const create_chatroom_resp_member_info*>(
               &_create_chatroom_resp_member_info_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    90;

  void Swap(create_chatroom_resp_member_info* other);

  // implements Message ----------------------------------------------

  inline create_chatroom_resp_member_info* New() const PROTOBUF_FINAL { return New(NULL); }

  create_chatroom_resp_member_info* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const create_chatroom_resp_member_info& from);
  void MergeFrom(const create_chatroom_resp_member_info& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(create_chatroom_resp_member_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef create_chatroom_resp_member_info_nick_name_info nick_name_info;

  // accessors -------------------------------------------------------

  // optional string qianming = 15;
  bool has_qianming() const;
  void clear_qianming();
  static const int kQianmingFieldNumber = 15;
  const ::std::string& qianming() const;
  void set_qianming(const ::std::string& value);
  #if LANG_CXX11
  void set_qianming(::std::string&& value);
  #endif
  void set_qianming(const char* value);
  void set_qianming(const char* value, size_t size);
  ::std::string* mutable_qianming();
  ::std::string* release_qianming();
  void set_allocated_qianming(::std::string* qianming);

  // optional .Wxid wxid = 1;
  bool has_wxid() const;
  void clear_wxid();
  static const int kWxidFieldNumber = 1;
  const ::Wxid& wxid() const;
  ::Wxid* mutable_wxid();
  ::Wxid* release_wxid();
  void set_allocated_wxid(::Wxid* wxid);

  // optional .create_chatroom_resp.member_info.nick_name_info nick_name = 3;
  bool has_nick_name() const;
  void clear_nick_name();
  static const int kNickNameFieldNumber = 3;
  const ::create_chatroom_resp_member_info_nick_name_info& nick_name() const;
  ::create_chatroom_resp_member_info_nick_name_info* mutable_nick_name();
  ::create_chatroom_resp_member_info_nick_name_info* release_nick_name();
  void set_allocated_nick_name(::create_chatroom_resp_member_info_nick_name_info* nick_name);

  // @@protoc_insertion_point(class_scope:create_chatroom_resp.member_info)
 private:
  void set_has_wxid();
  void clear_has_wxid();
  void set_has_nick_name();
  void clear_has_nick_name();
  void set_has_qianming();
  void clear_has_qianming();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr qianming_;
  ::Wxid* wxid_;
  ::create_chatroom_resp_member_info_nick_name_info* nick_name_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class create_chatroom_resp_chatroom_avatar : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:create_chatroom_resp.chatroom_avatar) */ {
 public:
  create_chatroom_resp_chatroom_avatar();
  virtual ~create_chatroom_resp_chatroom_avatar();

  create_chatroom_resp_chatroom_avatar(const create_chatroom_resp_chatroom_avatar& from);

  inline create_chatroom_resp_chatroom_avatar& operator=(const create_chatroom_resp_chatroom_avatar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const create_chatroom_resp_chatroom_avatar& default_instance();

  static inline const create_chatroom_resp_chatroom_avatar* internal_default_instance() {
    return reinterpret_cast<const create_chatroom_resp_chatroom_avatar*>(
               &_create_chatroom_resp_chatroom_avatar_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    91;

  void Swap(create_chatroom_resp_chatroom_avatar* other);

  // implements Message ----------------------------------------------

  inline create_chatroom_resp_chatroom_avatar* New() const PROTOBUF_FINAL { return New(NULL); }

  create_chatroom_resp_chatroom_avatar* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const create_chatroom_resp_chatroom_avatar& from);
  void MergeFrom(const create_chatroom_resp_chatroom_avatar& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(create_chatroom_resp_chatroom_avatar* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // optional int32 len = 1;
  bool has_len() const;
  void clear_len();
  static const int kLenFieldNumber = 1;
  ::google::protobuf::int32 len() const;
  void set_len(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:create_chatroom_resp.chatroom_avatar)
 private:
  void set_has_len();
  void clear_has_len();
  void set_has_data();
  void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::int32 len_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class create_chatroom_resp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:create_chatroom_resp) */ {
 public:
  create_chatroom_resp();
  virtual ~create_chatroom_resp();

  create_chatroom_resp(const create_chatroom_resp& from);

  inline create_chatroom_resp& operator=(const create_chatroom_resp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const create_chatroom_resp& default_instance();

  static inline const create_chatroom_resp* internal_default_instance() {
    return reinterpret_cast<const create_chatroom_resp*>(
               &_create_chatroom_resp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    92;

  void Swap(create_chatroom_resp* other);

  // implements Message ----------------------------------------------

  inline create_chatroom_resp* New() const PROTOBUF_FINAL { return New(NULL); }

  create_chatroom_resp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const create_chatroom_resp& from);
  void MergeFrom(const create_chatroom_resp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(create_chatroom_resp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef create_chatroom_resp_result result;
  typedef create_chatroom_resp_member_info member_info;
  typedef create_chatroom_resp_chatroom_avatar chatroom_avatar;

  // accessors -------------------------------------------------------

  // repeated .create_chatroom_resp.member_info member = 6;
  int member_size() const;
  void clear_member();
  static const int kMemberFieldNumber = 6;
  const ::create_chatroom_resp_member_info& member(int index) const;
  ::create_chatroom_resp_member_info* mutable_member(int index);
  ::create_chatroom_resp_member_info* add_member();
  ::google::protobuf::RepeatedPtrField< ::create_chatroom_resp_member_info >*
      mutable_member();
  const ::google::protobuf::RepeatedPtrField< ::create_chatroom_resp_member_info >&
      member() const;

  // optional .create_chatroom_resp.result res = 1;
  bool has_res() const;
  void clear_res();
  static const int kResFieldNumber = 1;
  const ::create_chatroom_resp_result& res() const;
  ::create_chatroom_resp_result* mutable_res();
  ::create_chatroom_resp_result* release_res();
  void set_allocated_res(::create_chatroom_resp_result* res);

  // optional .Wxid chatroom_wxid = 7;
  bool has_chatroom_wxid() const;
  void clear_chatroom_wxid();
  static const int kChatroomWxidFieldNumber = 7;
  const ::Wxid& chatroom_wxid() const;
  ::Wxid* mutable_chatroom_wxid();
  ::Wxid* release_chatroom_wxid();
  void set_allocated_chatroom_wxid(::Wxid* chatroom_wxid);

  // optional .create_chatroom_resp.chatroom_avatar avatar = 8;
  bool has_avatar() const;
  void clear_avatar();
  static const int kAvatarFieldNumber = 8;
  const ::create_chatroom_resp_chatroom_avatar& avatar() const;
  ::create_chatroom_resp_chatroom_avatar* mutable_avatar();
  ::create_chatroom_resp_chatroom_avatar* release_avatar();
  void set_allocated_avatar(::create_chatroom_resp_chatroom_avatar* avatar);

  // optional int32 member_cnt = 5;
  bool has_member_cnt() const;
  void clear_member_cnt();
  static const int kMemberCntFieldNumber = 5;
  ::google::protobuf::int32 member_cnt() const;
  void set_member_cnt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:create_chatroom_resp)
 private:
  void set_has_res();
  void clear_has_res();
  void set_has_member_cnt();
  void clear_has_member_cnt();
  void set_has_chatroom_wxid();
  void clear_has_chatroom_wxid();
  void set_has_avatar();
  void clear_has_avatar();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::create_chatroom_resp_member_info > member_;
  ::create_chatroom_resp_result* res_;
  ::Wxid* chatroom_wxid_;
  ::create_chatroom_resp_chatroom_avatar* avatar_;
  ::google::protobuf::int32 member_cnt_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class mm_facing_create_chatroom_req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mm_facing_create_chatroom_req) */ {
 public:
  mm_facing_create_chatroom_req();
  virtual ~mm_facing_create_chatroom_req();

  mm_facing_create_chatroom_req(const mm_facing_create_chatroom_req& from);

  inline mm_facing_create_chatroom_req& operator=(const mm_facing_create_chatroom_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mm_facing_create_chatroom_req& default_instance();

  static inline const mm_facing_create_chatroom_req* internal_default_instance() {
    return reinterpret_cast<const mm_facing_create_chatroom_req*>(
               &_mm_facing_create_chatroom_req_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    93;

  void Swap(mm_facing_create_chatroom_req* other);

  // implements Message ----------------------------------------------

  inline mm_facing_create_chatroom_req* New() const PROTOBUF_FINAL { return New(NULL); }

  mm_facing_create_chatroom_req* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const mm_facing_create_chatroom_req& from);
  void MergeFrom(const mm_facing_create_chatroom_req& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(mm_facing_create_chatroom_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string chatroom_pwd = 3;
  bool has_chatroom_pwd() const;
  void clear_chatroom_pwd();
  static const int kChatroomPwdFieldNumber = 3;
  const ::std::string& chatroom_pwd() const;
  void set_chatroom_pwd(const ::std::string& value);
  #if LANG_CXX11
  void set_chatroom_pwd(::std::string&& value);
  #endif
  void set_chatroom_pwd(const char* value);
  void set_chatroom_pwd(const char* value, size_t size);
  ::std::string* mutable_chatroom_pwd();
  ::std::string* release_chatroom_pwd();
  void set_allocated_chatroom_pwd(::std::string* chatroom_pwd);

  // optional string tag10 = 10;
  bool has_tag10() const;
  void clear_tag10();
  static const int kTag10FieldNumber = 10;
  const ::std::string& tag10() const;
  void set_tag10(const ::std::string& value);
  #if LANG_CXX11
  void set_tag10(::std::string&& value);
  #endif
  void set_tag10(const char* value);
  void set_tag10(const char* value, size_t size);
  ::std::string* mutable_tag10();
  ::std::string* release_tag10();
  void set_allocated_tag10(::std::string* tag10);

  // optional .LoginInfo login = 1;
  bool has_login() const;
  void clear_login();
  static const int kLoginFieldNumber = 1;
  const ::LoginInfo& login() const;
  ::LoginInfo* mutable_login();
  ::LoginInfo* release_login();
  void set_allocated_login(::LoginInfo* login);

  // optional int32 op_code = 2;
  bool has_op_code() const;
  void clear_op_code();
  static const int kOpCodeFieldNumber = 2;
  ::google::protobuf::int32 op_code() const;
  void set_op_code(::google::protobuf::int32 value);

  // optional float lon = 4;
  bool has_lon() const;
  void clear_lon();
  static const int kLonFieldNumber = 4;
  float lon() const;
  void set_lon(float value);

  // optional float lat = 5;
  bool has_lat() const;
  void clear_lat();
  static const int kLatFieldNumber = 5;
  float lat() const;
  void set_lat(float value);

  // optional int32 tag6 = 6;
  bool has_tag6() const;
  void clear_tag6();
  static const int kTag6FieldNumber = 6;
  ::google::protobuf::int32 tag6() const;
  void set_tag6(::google::protobuf::int32 value);

  // optional int32 tag9 = 9;
  bool has_tag9() const;
  void clear_tag9();
  static const int kTag9FieldNumber = 9;
  ::google::protobuf::int32 tag9() const;
  void set_tag9(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mm_facing_create_chatroom_req)
 private:
  void set_has_login();
  void clear_has_login();
  void set_has_op_code();
  void clear_has_op_code();
  void set_has_chatroom_pwd();
  void clear_has_chatroom_pwd();
  void set_has_lon();
  void clear_has_lon();
  void set_has_lat();
  void clear_has_lat();
  void set_has_tag6();
  void clear_has_tag6();
  void set_has_tag9();
  void clear_has_tag9();
  void set_has_tag10();
  void clear_has_tag10();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr chatroom_pwd_;
  ::google::protobuf::internal::ArenaStringPtr tag10_;
  ::LoginInfo* login_;
  ::google::protobuf::int32 op_code_;
  float lon_;
  float lat_;
  ::google::protobuf::int32 tag6_;
  ::google::protobuf::int32 tag9_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class mm_facing_create_chatroom_resp_result_err_msg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mm_facing_create_chatroom_resp.result.err_msg) */ {
 public:
  mm_facing_create_chatroom_resp_result_err_msg();
  virtual ~mm_facing_create_chatroom_resp_result_err_msg();

  mm_facing_create_chatroom_resp_result_err_msg(const mm_facing_create_chatroom_resp_result_err_msg& from);

  inline mm_facing_create_chatroom_resp_result_err_msg& operator=(const mm_facing_create_chatroom_resp_result_err_msg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mm_facing_create_chatroom_resp_result_err_msg& default_instance();

  static inline const mm_facing_create_chatroom_resp_result_err_msg* internal_default_instance() {
    return reinterpret_cast<const mm_facing_create_chatroom_resp_result_err_msg*>(
               &_mm_facing_create_chatroom_resp_result_err_msg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    94;

  void Swap(mm_facing_create_chatroom_resp_result_err_msg* other);

  // implements Message ----------------------------------------------

  inline mm_facing_create_chatroom_resp_result_err_msg* New() const PROTOBUF_FINAL { return New(NULL); }

  mm_facing_create_chatroom_resp_result_err_msg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const mm_facing_create_chatroom_resp_result_err_msg& from);
  void MergeFrom(const mm_facing_create_chatroom_resp_result_err_msg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(mm_facing_create_chatroom_resp_result_err_msg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 1;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:mm_facing_create_chatroom_resp.result.err_msg)
 private:
  void set_has_msg();
  void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class mm_facing_create_chatroom_resp_result : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mm_facing_create_chatroom_resp.result) */ {
 public:
  mm_facing_create_chatroom_resp_result();
  virtual ~mm_facing_create_chatroom_resp_result();

  mm_facing_create_chatroom_resp_result(const mm_facing_create_chatroom_resp_result& from);

  inline mm_facing_create_chatroom_resp_result& operator=(const mm_facing_create_chatroom_resp_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mm_facing_create_chatroom_resp_result& default_instance();

  static inline const mm_facing_create_chatroom_resp_result* internal_default_instance() {
    return reinterpret_cast<const mm_facing_create_chatroom_resp_result*>(
               &_mm_facing_create_chatroom_resp_result_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    95;

  void Swap(mm_facing_create_chatroom_resp_result* other);

  // implements Message ----------------------------------------------

  inline mm_facing_create_chatroom_resp_result* New() const PROTOBUF_FINAL { return New(NULL); }

  mm_facing_create_chatroom_resp_result* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const mm_facing_create_chatroom_resp_result& from);
  void MergeFrom(const mm_facing_create_chatroom_resp_result& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(mm_facing_create_chatroom_resp_result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef mm_facing_create_chatroom_resp_result_err_msg err_msg;

  // accessors -------------------------------------------------------

  // optional .mm_facing_create_chatroom_resp.result.err_msg msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::mm_facing_create_chatroom_resp_result_err_msg& msg() const;
  ::mm_facing_create_chatroom_resp_result_err_msg* mutable_msg();
  ::mm_facing_create_chatroom_resp_result_err_msg* release_msg();
  void set_allocated_msg(::mm_facing_create_chatroom_resp_result_err_msg* msg);

  // optional int32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mm_facing_create_chatroom_resp.result)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_msg();
  void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::mm_facing_create_chatroom_resp_result_err_msg* msg_;
  ::google::protobuf::int32 code_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class mm_facing_create_chatroom_resp_member_info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mm_facing_create_chatroom_resp.member_info) */ {
 public:
  mm_facing_create_chatroom_resp_member_info();
  virtual ~mm_facing_create_chatroom_resp_member_info();

  mm_facing_create_chatroom_resp_member_info(const mm_facing_create_chatroom_resp_member_info& from);

  inline mm_facing_create_chatroom_resp_member_info& operator=(const mm_facing_create_chatroom_resp_member_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mm_facing_create_chatroom_resp_member_info& default_instance();

  static inline const mm_facing_create_chatroom_resp_member_info* internal_default_instance() {
    return reinterpret_cast<const mm_facing_create_chatroom_resp_member_info*>(
               &_mm_facing_create_chatroom_resp_member_info_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    96;

  void Swap(mm_facing_create_chatroom_resp_member_info* other);

  // implements Message ----------------------------------------------

  inline mm_facing_create_chatroom_resp_member_info* New() const PROTOBUF_FINAL { return New(NULL); }

  mm_facing_create_chatroom_resp_member_info* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const mm_facing_create_chatroom_resp_member_info& from);
  void MergeFrom(const mm_facing_create_chatroom_resp_member_info& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(mm_facing_create_chatroom_resp_member_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 1;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional string nick_name = 3;
  bool has_nick_name() const;
  void clear_nick_name();
  static const int kNickNameFieldNumber = 3;
  const ::std::string& nick_name() const;
  void set_nick_name(const ::std::string& value);
  #if LANG_CXX11
  void set_nick_name(::std::string&& value);
  #endif
  void set_nick_name(const char* value);
  void set_nick_name(const char* value, size_t size);
  ::std::string* mutable_nick_name();
  ::std::string* release_nick_name();
  void set_allocated_nick_name(::std::string* nick_name);

  // @@protoc_insertion_point(class_scope:mm_facing_create_chatroom_resp.member_info)
 private:
  void set_has_msg();
  void clear_has_msg();
  void set_has_nick_name();
  void clear_has_nick_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::internal::ArenaStringPtr nick_name_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class mm_facing_create_chatroom_resp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mm_facing_create_chatroom_resp) */ {
 public:
  mm_facing_create_chatroom_resp();
  virtual ~mm_facing_create_chatroom_resp();

  mm_facing_create_chatroom_resp(const mm_facing_create_chatroom_resp& from);

  inline mm_facing_create_chatroom_resp& operator=(const mm_facing_create_chatroom_resp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const mm_facing_create_chatroom_resp& default_instance();

  static inline const mm_facing_create_chatroom_resp* internal_default_instance() {
    return reinterpret_cast<const mm_facing_create_chatroom_resp*>(
               &_mm_facing_create_chatroom_resp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    97;

  void Swap(mm_facing_create_chatroom_resp* other);

  // implements Message ----------------------------------------------

  inline mm_facing_create_chatroom_resp* New() const PROTOBUF_FINAL { return New(NULL); }

  mm_facing_create_chatroom_resp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const mm_facing_create_chatroom_resp& from);
  void MergeFrom(const mm_facing_create_chatroom_resp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(mm_facing_create_chatroom_resp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef mm_facing_create_chatroom_resp_result result;
  typedef mm_facing_create_chatroom_resp_member_info member_info;

  // accessors -------------------------------------------------------

  // repeated .mm_facing_create_chatroom_resp.member_info member = 4;
  int member_size() const;
  void clear_member();
  static const int kMemberFieldNumber = 4;
  const ::mm_facing_create_chatroom_resp_member_info& member(int index) const;
  ::mm_facing_create_chatroom_resp_member_info* mutable_member(int index);
  ::mm_facing_create_chatroom_resp_member_info* add_member();
  ::google::protobuf::RepeatedPtrField< ::mm_facing_create_chatroom_resp_member_info >*
      mutable_member();
  const ::google::protobuf::RepeatedPtrField< ::mm_facing_create_chatroom_resp_member_info >&
      member() const;

  // optional string wxid = 5;
  bool has_wxid() const;
  void clear_wxid();
  static const int kWxidFieldNumber = 5;
  const ::std::string& wxid() const;
  void set_wxid(const ::std::string& value);
  #if LANG_CXX11
  void set_wxid(::std::string&& value);
  #endif
  void set_wxid(const char* value);
  void set_wxid(const char* value, size_t size);
  ::std::string* mutable_wxid();
  ::std::string* release_wxid();
  void set_allocated_wxid(::std::string* wxid);

  // optional .mm_facing_create_chatroom_resp.result res = 1;
  bool has_res() const;
  void clear_res();
  static const int kResFieldNumber = 1;
  const ::mm_facing_create_chatroom_resp_result& res() const;
  ::mm_facing_create_chatroom_resp_result* mutable_res();
  ::mm_facing_create_chatroom_resp_result* release_res();
  void set_allocated_res(::mm_facing_create_chatroom_resp_result* res);

  // optional int32 member_cnt = 3;
  bool has_member_cnt() const;
  void clear_member_cnt();
  static const int kMemberCntFieldNumber = 3;
  ::google::protobuf::int32 member_cnt() const;
  void set_member_cnt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:mm_facing_create_chatroom_resp)
 private:
  void set_has_res();
  void clear_has_res();
  void set_has_member_cnt();
  void clear_has_member_cnt();
  void set_has_wxid();
  void clear_has_wxid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::mm_facing_create_chatroom_resp_member_info > member_;
  ::google::protobuf::internal::ArenaStringPtr wxid_;
  ::mm_facing_create_chatroom_resp_result* res_;
  ::google::protobuf::int32 member_cnt_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class add_chatroom_member_req_member_info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:add_chatroom_member_req.member_info) */ {
 public:
  add_chatroom_member_req_member_info();
  virtual ~add_chatroom_member_req_member_info();

  add_chatroom_member_req_member_info(const add_chatroom_member_req_member_info& from);

  inline add_chatroom_member_req_member_info& operator=(const add_chatroom_member_req_member_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const add_chatroom_member_req_member_info& default_instance();

  static inline const add_chatroom_member_req_member_info* internal_default_instance() {
    return reinterpret_cast<const add_chatroom_member_req_member_info*>(
               &_add_chatroom_member_req_member_info_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    98;

  void Swap(add_chatroom_member_req_member_info* other);

  // implements Message ----------------------------------------------

  inline add_chatroom_member_req_member_info* New() const PROTOBUF_FINAL { return New(NULL); }

  add_chatroom_member_req_member_info* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const add_chatroom_member_req_member_info& from);
  void MergeFrom(const add_chatroom_member_req_member_info& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(add_chatroom_member_req_member_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .Wxid wxid = 1;
  bool has_wxid() const;
  void clear_wxid();
  static const int kWxidFieldNumber = 1;
  const ::Wxid& wxid() const;
  ::Wxid* mutable_wxid();
  ::Wxid* release_wxid();
  void set_allocated_wxid(::Wxid* wxid);

  // @@protoc_insertion_point(class_scope:add_chatroom_member_req.member_info)
 private:
  void set_has_wxid();
  void clear_has_wxid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::Wxid* wxid_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class add_chatroom_member_req_chatroom_info : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:add_chatroom_member_req.chatroom_info) */ {
 public:
  add_chatroom_member_req_chatroom_info();
  virtual ~add_chatroom_member_req_chatroom_info();

  add_chatroom_member_req_chatroom_info(const add_chatroom_member_req_chatroom_info& from);

  inline add_chatroom_member_req_chatroom_info& operator=(const add_chatroom_member_req_chatroom_info& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const add_chatroom_member_req_chatroom_info& default_instance();

  static inline const add_chatroom_member_req_chatroom_info* internal_default_instance() {
    return reinterpret_cast<const add_chatroom_member_req_chatroom_info*>(
               &_add_chatroom_member_req_chatroom_info_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    99;

  void Swap(add_chatroom_member_req_chatroom_info* other);

  // implements Message ----------------------------------------------

  inline add_chatroom_member_req_chatroom_info* New() const PROTOBUF_FINAL { return New(NULL); }

  add_chatroom_member_req_chatroom_info* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const add_chatroom_member_req_chatroom_info& from);
  void MergeFrom(const add_chatroom_member_req_chatroom_info& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(add_chatroom_member_req_chatroom_info* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string wxid = 1;
  bool has_wxid() const;
  void clear_wxid();
  static const int kWxidFieldNumber = 1;
  const ::std::string& wxid() const;
  void set_wxid(const ::std::string& value);
  #if LANG_CXX11
  void set_wxid(::std::string&& value);
  #endif
  void set_wxid(const char* value);
  void set_wxid(const char* value, size_t size);
  ::std::string* mutable_wxid();
  ::std::string* release_wxid();
  void set_allocated_wxid(::std::string* wxid);

  // @@protoc_insertion_point(class_scope:add_chatroom_member_req.chatroom_info)
 private:
  void set_has_wxid();
  void clear_has_wxid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr wxid_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class add_chatroom_member_req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:add_chatroom_member_req) */ {
 public:
  add_chatroom_member_req();
  virtual ~add_chatroom_member_req();

  add_chatroom_member_req(const add_chatroom_member_req& from);

  inline add_chatroom_member_req& operator=(const add_chatroom_member_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const add_chatroom_member_req& default_instance();

  static inline const add_chatroom_member_req* internal_default_instance() {
    return reinterpret_cast<const add_chatroom_member_req*>(
               &_add_chatroom_member_req_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    100;

  void Swap(add_chatroom_member_req* other);

  // implements Message ----------------------------------------------

  inline add_chatroom_member_req* New() const PROTOBUF_FINAL { return New(NULL); }

  add_chatroom_member_req* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const add_chatroom_member_req& from);
  void MergeFrom(const add_chatroom_member_req& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(add_chatroom_member_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef add_chatroom_member_req_member_info member_info;
  typedef add_chatroom_member_req_chatroom_info chatroom_info;

  // accessors -------------------------------------------------------

  // repeated .add_chatroom_member_req.member_info member = 3;
  int member_size() const;
  void clear_member();
  static const int kMemberFieldNumber = 3;
  const ::add_chatroom_member_req_member_info& member(int index) const;
  ::add_chatroom_member_req_member_info* mutable_member(int index);
  ::add_chatroom_member_req_member_info* add_member();
  ::google::protobuf::RepeatedPtrField< ::add_chatroom_member_req_member_info >*
      mutable_member();
  const ::google::protobuf::RepeatedPtrField< ::add_chatroom_member_req_member_info >&
      member() const;

  // optional .LoginInfo login = 1;
  bool has_login() const;
  void clear_login();
  static const int kLoginFieldNumber = 1;
  const ::LoginInfo& login() const;
  ::LoginInfo* mutable_login();
  ::LoginInfo* release_login();
  void set_allocated_login(::LoginInfo* login);

  // optional .add_chatroom_member_req.chatroom_info chatroom_wxid = 4;
  bool has_chatroom_wxid() const;
  void clear_chatroom_wxid();
  static const int kChatroomWxidFieldNumber = 4;
  const ::add_chatroom_member_req_chatroom_info& chatroom_wxid() const;
  ::add_chatroom_member_req_chatroom_info* mutable_chatroom_wxid();
  ::add_chatroom_member_req_chatroom_info* release_chatroom_wxid();
  void set_allocated_chatroom_wxid(::add_chatroom_member_req_chatroom_info* chatroom_wxid);

  // optional int32 member_cnt = 2;
  bool has_member_cnt() const;
  void clear_member_cnt();
  static const int kMemberCntFieldNumber = 2;
  ::google::protobuf::int32 member_cnt() const;
  void set_member_cnt(::google::protobuf::int32 value);

  // optional int32 tag5 = 5;
  bool has_tag5() const;
  void clear_tag5();
  static const int kTag5FieldNumber = 5;
  ::google::protobuf::int32 tag5() const;
  void set_tag5(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:add_chatroom_member_req)
 private:
  void set_has_login();
  void clear_has_login();
  void set_has_member_cnt();
  void clear_has_member_cnt();
  void set_has_chatroom_wxid();
  void clear_has_chatroom_wxid();
  void set_has_tag5();
  void clear_has_tag5();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::add_chatroom_member_req_member_info > member_;
  ::LoginInfo* login_;
  ::add_chatroom_member_req_chatroom_info* chatroom_wxid_;
  ::google::protobuf::int32 member_cnt_;
  ::google::protobuf::int32 tag5_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class add_chatroom_member_resp_result_err_msg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:add_chatroom_member_resp.result.err_msg) */ {
 public:
  add_chatroom_member_resp_result_err_msg();
  virtual ~add_chatroom_member_resp_result_err_msg();

  add_chatroom_member_resp_result_err_msg(const add_chatroom_member_resp_result_err_msg& from);

  inline add_chatroom_member_resp_result_err_msg& operator=(const add_chatroom_member_resp_result_err_msg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const add_chatroom_member_resp_result_err_msg& default_instance();

  static inline const add_chatroom_member_resp_result_err_msg* internal_default_instance() {
    return reinterpret_cast<const add_chatroom_member_resp_result_err_msg*>(
               &_add_chatroom_member_resp_result_err_msg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    101;

  void Swap(add_chatroom_member_resp_result_err_msg* other);

  // implements Message ----------------------------------------------

  inline add_chatroom_member_resp_result_err_msg* New() const PROTOBUF_FINAL { return New(NULL); }

  add_chatroom_member_resp_result_err_msg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const add_chatroom_member_resp_result_err_msg& from);
  void MergeFrom(const add_chatroom_member_resp_result_err_msg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(add_chatroom_member_resp_result_err_msg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 1;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:add_chatroom_member_resp.result.err_msg)
 private:
  void set_has_msg();
  void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class add_chatroom_member_resp_result : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:add_chatroom_member_resp.result) */ {
 public:
  add_chatroom_member_resp_result();
  virtual ~add_chatroom_member_resp_result();

  add_chatroom_member_resp_result(const add_chatroom_member_resp_result& from);

  inline add_chatroom_member_resp_result& operator=(const add_chatroom_member_resp_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const add_chatroom_member_resp_result& default_instance();

  static inline const add_chatroom_member_resp_result* internal_default_instance() {
    return reinterpret_cast<const add_chatroom_member_resp_result*>(
               &_add_chatroom_member_resp_result_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    102;

  void Swap(add_chatroom_member_resp_result* other);

  // implements Message ----------------------------------------------

  inline add_chatroom_member_resp_result* New() const PROTOBUF_FINAL { return New(NULL); }

  add_chatroom_member_resp_result* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const add_chatroom_member_resp_result& from);
  void MergeFrom(const add_chatroom_member_resp_result& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(add_chatroom_member_resp_result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef add_chatroom_member_resp_result_err_msg err_msg;

  // accessors -------------------------------------------------------

  // optional .add_chatroom_member_resp.result.err_msg msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::add_chatroom_member_resp_result_err_msg& msg() const;
  ::add_chatroom_member_resp_result_err_msg* mutable_msg();
  ::add_chatroom_member_resp_result_err_msg* release_msg();
  void set_allocated_msg(::add_chatroom_member_resp_result_err_msg* msg);

  // optional int32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:add_chatroom_member_resp.result)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_msg();
  void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::add_chatroom_member_resp_result_err_msg* msg_;
  ::google::protobuf::int32 code_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class add_chatroom_member_resp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:add_chatroom_member_resp) */ {
 public:
  add_chatroom_member_resp();
  virtual ~add_chatroom_member_resp();

  add_chatroom_member_resp(const add_chatroom_member_resp& from);

  inline add_chatroom_member_resp& operator=(const add_chatroom_member_resp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const add_chatroom_member_resp& default_instance();

  static inline const add_chatroom_member_resp* internal_default_instance() {
    return reinterpret_cast<const add_chatroom_member_resp*>(
               &_add_chatroom_member_resp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    103;

  void Swap(add_chatroom_member_resp* other);

  // implements Message ----------------------------------------------

  inline add_chatroom_member_resp* New() const PROTOBUF_FINAL { return New(NULL); }

  add_chatroom_member_resp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const add_chatroom_member_resp& from);
  void MergeFrom(const add_chatroom_member_resp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(add_chatroom_member_resp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef add_chatroom_member_resp_result result;

  // accessors -------------------------------------------------------

  // optional .add_chatroom_member_resp.result res = 1;
  bool has_res() const;
  void clear_res();
  static const int kResFieldNumber = 1;
  const ::add_chatroom_member_resp_result& res() const;
  ::add_chatroom_member_resp_result* mutable_res();
  ::add_chatroom_member_resp_result* release_res();
  void set_allocated_res(::add_chatroom_member_resp_result* res);

  // @@protoc_insertion_point(class_scope:add_chatroom_member_resp)
 private:
  void set_has_res();
  void clear_has_res();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::add_chatroom_member_resp_result* res_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class op_set_group_nick_name : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:op_set_group_nick_name) */ {
 public:
  op_set_group_nick_name();
  virtual ~op_set_group_nick_name();

  op_set_group_nick_name(const op_set_group_nick_name& from);

  inline op_set_group_nick_name& operator=(const op_set_group_nick_name& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const op_set_group_nick_name& default_instance();

  static inline const op_set_group_nick_name* internal_default_instance() {
    return reinterpret_cast<const op_set_group_nick_name*>(
               &_op_set_group_nick_name_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    104;

  void Swap(op_set_group_nick_name* other);

  // implements Message ----------------------------------------------

  inline op_set_group_nick_name* New() const PROTOBUF_FINAL { return New(NULL); }

  op_set_group_nick_name* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const op_set_group_nick_name& from);
  void MergeFrom(const op_set_group_nick_name& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(op_set_group_nick_name* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string tag1 = 1;
  bool has_tag1() const;
  void clear_tag1();
  static const int kTag1FieldNumber = 1;
  const ::std::string& tag1() const;
  void set_tag1(const ::std::string& value);
  #if LANG_CXX11
  void set_tag1(::std::string&& value);
  #endif
  void set_tag1(const char* value);
  void set_tag1(const char* value, size_t size);
  ::std::string* mutable_tag1();
  ::std::string* release_tag1();
  void set_allocated_tag1(::std::string* tag1);

  // optional string tag2 = 2;
  bool has_tag2() const;
  void clear_tag2();
  static const int kTag2FieldNumber = 2;
  const ::std::string& tag2() const;
  void set_tag2(const ::std::string& value);
  #if LANG_CXX11
  void set_tag2(::std::string&& value);
  #endif
  void set_tag2(const char* value);
  void set_tag2(const char* value, size_t size);
  ::std::string* mutable_tag2();
  ::std::string* release_tag2();
  void set_allocated_tag2(::std::string* tag2);

  // optional bytes tag3 = 3;
  bool has_tag3() const;
  void clear_tag3();
  static const int kTag3FieldNumber = 3;
  const ::std::string& tag3() const;
  void set_tag3(const ::std::string& value);
  #if LANG_CXX11
  void set_tag3(::std::string&& value);
  #endif
  void set_tag3(const char* value);
  void set_tag3(const void* value, size_t size);
  ::std::string* mutable_tag3();
  ::std::string* release_tag3();
  void set_allocated_tag3(::std::string* tag3);

  // @@protoc_insertion_point(class_scope:op_set_group_nick_name)
 private:
  void set_has_tag1();
  void clear_has_tag1();
  void set_has_tag2();
  void clear_has_tag2();
  void set_has_tag3();
  void clear_has_tag3();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr tag1_;
  ::google::protobuf::internal::ArenaStringPtr tag2_;
  ::google::protobuf::internal::ArenaStringPtr tag3_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class oplog_req_TAG1_CMD_OPTION : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oplog_req.TAG1.CMD.OPTION) */ {
 public:
  oplog_req_TAG1_CMD_OPTION();
  virtual ~oplog_req_TAG1_CMD_OPTION();

  oplog_req_TAG1_CMD_OPTION(const oplog_req_TAG1_CMD_OPTION& from);

  inline oplog_req_TAG1_CMD_OPTION& operator=(const oplog_req_TAG1_CMD_OPTION& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const oplog_req_TAG1_CMD_OPTION& default_instance();

  static inline const oplog_req_TAG1_CMD_OPTION* internal_default_instance() {
    return reinterpret_cast<const oplog_req_TAG1_CMD_OPTION*>(
               &_oplog_req_TAG1_CMD_OPTION_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    105;

  void Swap(oplog_req_TAG1_CMD_OPTION* other);

  // implements Message ----------------------------------------------

  inline oplog_req_TAG1_CMD_OPTION* New() const PROTOBUF_FINAL { return New(NULL); }

  oplog_req_TAG1_CMD_OPTION* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const oplog_req_TAG1_CMD_OPTION& from);
  void MergeFrom(const oplog_req_TAG1_CMD_OPTION& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(oplog_req_TAG1_CMD_OPTION* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // optional int32 len = 1;
  bool has_len() const;
  void clear_len();
  static const int kLenFieldNumber = 1;
  ::google::protobuf::int32 len() const;
  void set_len(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:oplog_req.TAG1.CMD.OPTION)
 private:
  void set_has_len();
  void clear_has_len();
  void set_has_data();
  void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::int32 len_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class oplog_req_TAG1_CMD : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oplog_req.TAG1.CMD) */ {
 public:
  oplog_req_TAG1_CMD();
  virtual ~oplog_req_TAG1_CMD();

  oplog_req_TAG1_CMD(const oplog_req_TAG1_CMD& from);

  inline oplog_req_TAG1_CMD& operator=(const oplog_req_TAG1_CMD& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const oplog_req_TAG1_CMD& default_instance();

  static inline const oplog_req_TAG1_CMD* internal_default_instance() {
    return reinterpret_cast<const oplog_req_TAG1_CMD*>(
               &_oplog_req_TAG1_CMD_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    106;

  void Swap(oplog_req_TAG1_CMD* other);

  // implements Message ----------------------------------------------

  inline oplog_req_TAG1_CMD* New() const PROTOBUF_FINAL { return New(NULL); }

  oplog_req_TAG1_CMD* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const oplog_req_TAG1_CMD& from);
  void MergeFrom(const oplog_req_TAG1_CMD& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(oplog_req_TAG1_CMD* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef oplog_req_TAG1_CMD_OPTION OPTION;

  // accessors -------------------------------------------------------

  // optional .oplog_req.TAG1.CMD.OPTION option = 2;
  bool has_option() const;
  void clear_option();
  static const int kOptionFieldNumber = 2;
  const ::oplog_req_TAG1_CMD_OPTION& option() const;
  ::oplog_req_TAG1_CMD_OPTION* mutable_option();
  ::oplog_req_TAG1_CMD_OPTION* release_option();
  void set_allocated_option(::oplog_req_TAG1_CMD_OPTION* option);

  // optional int32 cmd_id = 1;
  bool has_cmd_id() const;
  void clear_cmd_id();
  static const int kCmdIdFieldNumber = 1;
  ::google::protobuf::int32 cmd_id() const;
  void set_cmd_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:oplog_req.TAG1.CMD)
 private:
  void set_has_cmd_id();
  void clear_has_cmd_id();
  void set_has_option();
  void clear_has_option();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::oplog_req_TAG1_CMD_OPTION* option_;
  ::google::protobuf::int32 cmd_id_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class oplog_req_TAG1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oplog_req.TAG1) */ {
 public:
  oplog_req_TAG1();
  virtual ~oplog_req_TAG1();

  oplog_req_TAG1(const oplog_req_TAG1& from);

  inline oplog_req_TAG1& operator=(const oplog_req_TAG1& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const oplog_req_TAG1& default_instance();

  static inline const oplog_req_TAG1* internal_default_instance() {
    return reinterpret_cast<const oplog_req_TAG1*>(
               &_oplog_req_TAG1_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    107;

  void Swap(oplog_req_TAG1* other);

  // implements Message ----------------------------------------------

  inline oplog_req_TAG1* New() const PROTOBUF_FINAL { return New(NULL); }

  oplog_req_TAG1* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const oplog_req_TAG1& from);
  void MergeFrom(const oplog_req_TAG1& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(oplog_req_TAG1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef oplog_req_TAG1_CMD CMD;

  // accessors -------------------------------------------------------

  // optional .oplog_req.TAG1.CMD cmd = 2;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 2;
  const ::oplog_req_TAG1_CMD& cmd() const;
  ::oplog_req_TAG1_CMD* mutable_cmd();
  ::oplog_req_TAG1_CMD* release_cmd();
  void set_allocated_cmd(::oplog_req_TAG1_CMD* cmd);

  // optional int32 tag1 = 1;
  bool has_tag1() const;
  void clear_tag1();
  static const int kTag1FieldNumber = 1;
  ::google::protobuf::int32 tag1() const;
  void set_tag1(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:oplog_req.TAG1)
 private:
  void set_has_tag1();
  void clear_has_tag1();
  void set_has_cmd();
  void clear_has_cmd();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::oplog_req_TAG1_CMD* cmd_;
  ::google::protobuf::int32 tag1_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class oplog_req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oplog_req) */ {
 public:
  oplog_req();
  virtual ~oplog_req();

  oplog_req(const oplog_req& from);

  inline oplog_req& operator=(const oplog_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const oplog_req& default_instance();

  static inline const oplog_req* internal_default_instance() {
    return reinterpret_cast<const oplog_req*>(
               &_oplog_req_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    108;

  void Swap(oplog_req* other);

  // implements Message ----------------------------------------------

  inline oplog_req* New() const PROTOBUF_FINAL { return New(NULL); }

  oplog_req* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const oplog_req& from);
  void MergeFrom(const oplog_req& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(oplog_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef oplog_req_TAG1 TAG1;

  // accessors -------------------------------------------------------

  // optional .oplog_req.TAG1 tag1 = 1;
  bool has_tag1() const;
  void clear_tag1();
  static const int kTag1FieldNumber = 1;
  const ::oplog_req_TAG1& tag1() const;
  ::oplog_req_TAG1* mutable_tag1();
  ::oplog_req_TAG1* release_tag1();
  void set_allocated_tag1(::oplog_req_TAG1* tag1);

  // @@protoc_insertion_point(class_scope:oplog_req)
 private:
  void set_has_tag1();
  void clear_has_tag1();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::oplog_req_TAG1* tag1_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class oplog_resp_result : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oplog_resp.result) */ {
 public:
  oplog_resp_result();
  virtual ~oplog_resp_result();

  oplog_resp_result(const oplog_resp_result& from);

  inline oplog_resp_result& operator=(const oplog_resp_result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const oplog_resp_result& default_instance();

  static inline const oplog_resp_result* internal_default_instance() {
    return reinterpret_cast<const oplog_resp_result*>(
               &_oplog_resp_result_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    109;

  void Swap(oplog_resp_result* other);

  // implements Message ----------------------------------------------

  inline oplog_resp_result* New() const PROTOBUF_FINAL { return New(NULL); }

  oplog_resp_result* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const oplog_resp_result& from);
  void MergeFrom(const oplog_resp_result& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(oplog_resp_result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes code = 2;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const void* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // optional string msg = 3;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 3;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:oplog_resp.result)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_msg();
  void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class oplog_resp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oplog_resp) */ {
 public:
  oplog_resp();
  virtual ~oplog_resp();

  oplog_resp(const oplog_resp& from);

  inline oplog_resp& operator=(const oplog_resp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const oplog_resp& default_instance();

  static inline const oplog_resp* internal_default_instance() {
    return reinterpret_cast<const oplog_resp*>(
               &_oplog_resp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    110;

  void Swap(oplog_resp* other);

  // implements Message ----------------------------------------------

  inline oplog_resp* New() const PROTOBUF_FINAL { return New(NULL); }

  oplog_resp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const oplog_resp& from);
  void MergeFrom(const oplog_resp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(oplog_resp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef oplog_resp_result result;

  // accessors -------------------------------------------------------

  // optional .oplog_resp.result res = 2;
  bool has_res() const;
  void clear_res();
  static const int kResFieldNumber = 2;
  const ::oplog_resp_result& res() const;
  ::oplog_resp_result* mutable_res();
  ::oplog_resp_result* release_res();
  void set_allocated_res(::oplog_resp_result* res);

  // @@protoc_insertion_point(class_scope:oplog_resp)
 private:
  void set_has_res();
  void clear_has_res();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::oplog_resp_result* res_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class revoke_msg_req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:revoke_msg_req) */ {
 public:
  revoke_msg_req();
  virtual ~revoke_msg_req();

  revoke_msg_req(const revoke_msg_req& from);

  inline revoke_msg_req& operator=(const revoke_msg_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const revoke_msg_req& default_instance();

  static inline const revoke_msg_req* internal_default_instance() {
    return reinterpret_cast<const revoke_msg_req*>(
               &_revoke_msg_req_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    111;

  void Swap(revoke_msg_req* other);

  // implements Message ----------------------------------------------

  inline revoke_msg_req* New() const PROTOBUF_FINAL { return New(NULL); }

  revoke_msg_req* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const revoke_msg_req& from);
  void MergeFrom(const revoke_msg_req& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(revoke_msg_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string client_id = 2;
  bool has_client_id() const;
  void clear_client_id();
  static const int kClientIdFieldNumber = 2;
  const ::std::string& client_id() const;
  void set_client_id(const ::std::string& value);
  #if LANG_CXX11
  void set_client_id(::std::string&& value);
  #endif
  void set_client_id(const char* value);
  void set_client_id(const char* value, size_t size);
  ::std::string* mutable_client_id();
  ::std::string* release_client_id();
  void set_allocated_client_id(::std::string* client_id);

  // optional string from_wxid = 6;
  bool has_from_wxid() const;
  void clear_from_wxid();
  static const int kFromWxidFieldNumber = 6;
  const ::std::string& from_wxid() const;
  void set_from_wxid(const ::std::string& value);
  #if LANG_CXX11
  void set_from_wxid(::std::string&& value);
  #endif
  void set_from_wxid(const char* value);
  void set_from_wxid(const char* value, size_t size);
  ::std::string* mutable_from_wxid();
  ::std::string* release_from_wxid();
  void set_allocated_from_wxid(::std::string* from_wxid);

  // optional string to_wxid = 7;
  bool has_to_wxid() const;
  void clear_to_wxid();
  static const int kToWxidFieldNumber = 7;
  const ::std::string& to_wxid() const;
  void set_to_wxid(const ::std::string& value);
  #if LANG_CXX11
  void set_to_wxid(::std::string&& value);
  #endif
  void set_to_wxid(const char* value);
  void set_to_wxid(const char* value, size_t size);
  ::std::string* mutable_to_wxid();
  ::std::string* release_to_wxid();
  void set_allocated_to_wxid(::std::string* to_wxid);

  // optional .LoginInfo login = 1;
  bool has_login() const;
  void clear_login();
  static const int kLoginFieldNumber = 1;
  const ::LoginInfo& login() const;
  ::LoginInfo* mutable_login();
  ::LoginInfo* release_login();
  void set_allocated_login(::LoginInfo* login);

  // optional int64 new_client_id = 3;
  bool has_new_client_id() const;
  void clear_new_client_id();
  static const int kNewClientIdFieldNumber = 3;
  ::google::protobuf::int64 new_client_id() const;
  void set_new_client_id(::google::protobuf::int64 value);

  // optional int32 utc = 4;
  bool has_utc() const;
  void clear_utc();
  static const int kUtcFieldNumber = 4;
  ::google::protobuf::int32 utc() const;
  void set_utc(::google::protobuf::int32 value);

  // optional int32 tag5 = 5;
  bool has_tag5() const;
  void clear_tag5();
  static const int kTag5FieldNumber = 5;
  ::google::protobuf::int32 tag5() const;
  void set_tag5(::google::protobuf::int32 value);

  // optional int64 svrid = 9;
  bool has_svrid() const;
  void clear_svrid();
  static const int kSvridFieldNumber = 9;
  ::google::protobuf::int64 svrid() const;
  void set_svrid(::google::protobuf::int64 value);

  // optional int32 index_of_request = 8;
  bool has_index_of_request() const;
  void clear_index_of_request();
  static const int kIndexOfRequestFieldNumber = 8;
  ::google::protobuf::int32 index_of_request() const;
  void set_index_of_request(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:revoke_msg_req)
 private:
  void set_has_login();
  void clear_has_login();
  void set_has_client_id();
  void clear_has_client_id();
  void set_has_new_client_id();
  void clear_has_new_client_id();
  void set_has_utc();
  void clear_has_utc();
  void set_has_tag5();
  void clear_has_tag5();
  void set_has_from_wxid();
  void clear_has_from_wxid();
  void set_has_to_wxid();
  void clear_has_to_wxid();
  void set_has_index_of_request();
  void clear_has_index_of_request();
  void set_has_svrid();
  void clear_has_svrid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr client_id_;
  ::google::protobuf::internal::ArenaStringPtr from_wxid_;
  ::google::protobuf::internal::ArenaStringPtr to_wxid_;
  ::LoginInfo* login_;
  ::google::protobuf::int64 new_client_id_;
  ::google::protobuf::int32 utc_;
  ::google::protobuf::int32 tag5_;
  ::google::protobuf::int64 svrid_;
  ::google::protobuf::int32 index_of_request_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class revoke_msg_resp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:revoke_msg_resp) */ {
 public:
  revoke_msg_resp();
  virtual ~revoke_msg_resp();

  revoke_msg_resp(const revoke_msg_resp& from);

  inline revoke_msg_resp& operator=(const revoke_msg_resp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const revoke_msg_resp& default_instance();

  static inline const revoke_msg_resp* internal_default_instance() {
    return reinterpret_cast<const revoke_msg_resp*>(
               &_revoke_msg_resp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    112;

  void Swap(revoke_msg_resp* other);

  // implements Message ----------------------------------------------

  inline revoke_msg_resp* New() const PROTOBUF_FINAL { return New(NULL); }

  revoke_msg_resp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const revoke_msg_resp& from);
  void MergeFrom(const revoke_msg_resp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(revoke_msg_resp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string response_sys_wording = 3;
  bool has_response_sys_wording() const;
  void clear_response_sys_wording();
  static const int kResponseSysWordingFieldNumber = 3;
  const ::std::string& response_sys_wording() const;
  void set_response_sys_wording(const ::std::string& value);
  #if LANG_CXX11
  void set_response_sys_wording(::std::string&& value);
  #endif
  void set_response_sys_wording(const char* value);
  void set_response_sys_wording(const char* value, size_t size);
  ::std::string* mutable_response_sys_wording();
  ::std::string* release_response_sys_wording();
  void set_allocated_response_sys_wording(::std::string* response_sys_wording);

  // optional .mmRes res = 1;
  bool has_res() const;
  void clear_res();
  static const int kResFieldNumber = 1;
  const ::mmRes& res() const;
  ::mmRes* mutable_res();
  ::mmRes* release_res();
  void set_allocated_res(::mmRes* res);

  // @@protoc_insertion_point(class_scope:revoke_msg_resp)
 private:
  void set_has_res();
  void clear_has_res();
  void set_has_response_sys_wording();
  void clear_has_response_sys_wording();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr response_sys_wording_;
  ::mmRes* res_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class set_chatroom_announcement_req : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:set_chatroom_announcement_req) */ {
 public:
  set_chatroom_announcement_req();
  virtual ~set_chatroom_announcement_req();

  set_chatroom_announcement_req(const set_chatroom_announcement_req& from);

  inline set_chatroom_announcement_req& operator=(const set_chatroom_announcement_req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const set_chatroom_announcement_req& default_instance();

  static inline const set_chatroom_announcement_req* internal_default_instance() {
    return reinterpret_cast<const set_chatroom_announcement_req*>(
               &_set_chatroom_announcement_req_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    113;

  void Swap(set_chatroom_announcement_req* other);

  // implements Message ----------------------------------------------

  inline set_chatroom_announcement_req* New() const PROTOBUF_FINAL { return New(NULL); }

  set_chatroom_announcement_req* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const set_chatroom_announcement_req& from);
  void MergeFrom(const set_chatroom_announcement_req& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(set_chatroom_announcement_req* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string chatroom_wxid = 2;
  bool has_chatroom_wxid() const;
  void clear_chatroom_wxid();
  static const int kChatroomWxidFieldNumber = 2;
  const ::std::string& chatroom_wxid() const;
  void set_chatroom_wxid(const ::std::string& value);
  #if LANG_CXX11
  void set_chatroom_wxid(::std::string&& value);
  #endif
  void set_chatroom_wxid(const char* value);
  void set_chatroom_wxid(const char* value, size_t size);
  ::std::string* mutable_chatroom_wxid();
  ::std::string* release_chatroom_wxid();
  void set_allocated_chatroom_wxid(::std::string* chatroom_wxid);

  // optional string content = 3;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 3;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // optional .LoginInfo login = 1;
  bool has_login() const;
  void clear_login();
  static const int kLoginFieldNumber = 1;
  const ::LoginInfo& login() const;
  ::LoginInfo* mutable_login();
  ::LoginInfo* release_login();
  void set_allocated_login(::LoginInfo* login);

  // @@protoc_insertion_point(class_scope:set_chatroom_announcement_req)
 private:
  void set_has_login();
  void clear_has_login();
  void set_has_chatroom_wxid();
  void clear_has_chatroom_wxid();
  void set_has_content();
  void clear_has_content();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr chatroom_wxid_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::LoginInfo* login_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class set_chatroom_announcement_resp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:set_chatroom_announcement_resp) */ {
 public:
  set_chatroom_announcement_resp();
  virtual ~set_chatroom_announcement_resp();

  set_chatroom_announcement_resp(const set_chatroom_announcement_resp& from);

  inline set_chatroom_announcement_resp& operator=(const set_chatroom_announcement_resp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const set_chatroom_announcement_resp& default_instance();

  static inline const set_chatroom_announcement_resp* internal_default_instance() {
    return reinterpret_cast<const set_chatroom_announcement_resp*>(
               &_set_chatroom_announcement_resp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    114;

  void Swap(set_chatroom_announcement_resp* other);

  // implements Message ----------------------------------------------

  inline set_chatroom_announcement_resp* New() const PROTOBUF_FINAL { return New(NULL); }

  set_chatroom_announcement_resp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const set_chatroom_announcement_resp& from);
  void MergeFrom(const set_chatroom_announcement_resp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(set_chatroom_announcement_resp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .mmRes res = 1;
  bool has_res() const;
  void clear_res();
  static const int kResFieldNumber = 1;
  const ::mmRes& res() const;
  ::mmRes* mutable_res();
  ::mmRes* release_res();
  void set_allocated_res(::mmRes* res);

  // @@protoc_insertion_point(class_scope:set_chatroom_announcement_resp)
 private:
  void set_has_res();
  void clear_has_res();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::mmRes* res_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetLoginQRCodeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GetLoginQRCodeRequest) */ {
 public:
  GetLoginQRCodeRequest();
  virtual ~GetLoginQRCodeRequest();

  GetLoginQRCodeRequest(const GetLoginQRCodeRequest& from);

  inline GetLoginQRCodeRequest& operator=(const GetLoginQRCodeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetLoginQRCodeRequest& default_instance();

  static inline const GetLoginQRCodeRequest* internal_default_instance() {
    return reinterpret_cast<const GetLoginQRCodeRequest*>(
               &_GetLoginQRCodeRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    115;

  void Swap(GetLoginQRCodeRequest* other);

  // implements Message ----------------------------------------------

  inline GetLoginQRCodeRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetLoginQRCodeRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetLoginQRCodeRequest& from);
  void MergeFrom(const GetLoginQRCodeRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetLoginQRCodeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string deviceName = 4;
  bool has_devicename() const;
  void clear_devicename();
  static const int kDeviceNameFieldNumber = 4;
  const ::std::string& devicename() const;
  void set_devicename(const ::std::string& value);
  #if LANG_CXX11
  void set_devicename(::std::string&& value);
  #endif
  void set_devicename(const char* value);
  void set_devicename(const char* value, size_t size);
  ::std::string* mutable_devicename();
  ::std::string* release_devicename();
  void set_allocated_devicename(::std::string* devicename);

  // optional string username = 5;
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 5;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // required .LoginInfo base = 1;
  bool has_base() const;
  void clear_base();
  static const int kBaseFieldNumber = 1;
  const ::LoginInfo& base() const;
  ::LoginInfo* mutable_base();
  ::LoginInfo* release_base();
  void set_allocated_base(::LoginInfo* base);

  // required .sKBuiltinBufferT randomEncryKey = 2;
  bool has_randomencrykey() const;
  void clear_randomencrykey();
  static const int kRandomEncryKeyFieldNumber = 2;
  const ::sKBuiltinBufferT& randomencrykey() const;
  ::sKBuiltinBufferT* mutable_randomencrykey();
  ::sKBuiltinBufferT* release_randomencrykey();
  void set_allocated_randomencrykey(::sKBuiltinBufferT* randomencrykey);

  // required int32 opcode = 3;
  bool has_opcode() const;
  void clear_opcode();
  static const int kOpcodeFieldNumber = 3;
  ::google::protobuf::int32 opcode() const;
  void set_opcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GetLoginQRCodeRequest)
 private:
  void set_has_base();
  void clear_has_base();
  void set_has_randomencrykey();
  void clear_has_randomencrykey();
  void set_has_opcode();
  void clear_has_opcode();
  void set_has_devicename();
  void clear_has_devicename();
  void set_has_username();
  void clear_has_username();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr devicename_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::LoginInfo* base_;
  ::sKBuiltinBufferT* randomencrykey_;
  ::google::protobuf::int32 opcode_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class sKBuiltinBufferT : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:sKBuiltinBufferT) */ {
 public:
  sKBuiltinBufferT();
  virtual ~sKBuiltinBufferT();

  sKBuiltinBufferT(const sKBuiltinBufferT& from);

  inline sKBuiltinBufferT& operator=(const sKBuiltinBufferT& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const sKBuiltinBufferT& default_instance();

  static inline const sKBuiltinBufferT* internal_default_instance() {
    return reinterpret_cast<const sKBuiltinBufferT*>(
               &_sKBuiltinBufferT_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    116;

  void Swap(sKBuiltinBufferT* other);

  // implements Message ----------------------------------------------

  inline sKBuiltinBufferT* New() const PROTOBUF_FINAL { return New(NULL); }

  sKBuiltinBufferT* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const sKBuiltinBufferT& from);
  void MergeFrom(const sKBuiltinBufferT& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(sKBuiltinBufferT* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes Buffer = 2;
  bool has_buffer() const;
  void clear_buffer();
  static const int kBufferFieldNumber = 2;
  const ::std::string& buffer() const;
  void set_buffer(const ::std::string& value);
  #if LANG_CXX11
  void set_buffer(::std::string&& value);
  #endif
  void set_buffer(const char* value);
  void set_buffer(const void* value, size_t size);
  ::std::string* mutable_buffer();
  ::std::string* release_buffer();
  void set_allocated_buffer(::std::string* buffer);

  // optional int32 ILen = 1;
  bool has_ilen() const;
  void clear_ilen();
  static const int kILenFieldNumber = 1;
  ::google::protobuf::int32 ilen() const;
  void set_ilen(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:sKBuiltinBufferT)
 private:
  void set_has_ilen();
  void clear_has_ilen();
  void set_has_buffer();
  void clear_has_buffer();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr buffer_;
  ::google::protobuf::int32 ilen_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetLoginQRCodeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GetLoginQRCodeResponse) */ {
 public:
  GetLoginQRCodeResponse();
  virtual ~GetLoginQRCodeResponse();

  GetLoginQRCodeResponse(const GetLoginQRCodeResponse& from);

  inline GetLoginQRCodeResponse& operator=(const GetLoginQRCodeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetLoginQRCodeResponse& default_instance();

  static inline const GetLoginQRCodeResponse* internal_default_instance() {
    return reinterpret_cast<const GetLoginQRCodeResponse*>(
               &_GetLoginQRCodeResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    117;

  void Swap(GetLoginQRCodeResponse* other);

  // implements Message ----------------------------------------------

  inline GetLoginQRCodeResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetLoginQRCodeResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetLoginQRCodeResponse& from);
  void MergeFrom(const GetLoginQRCodeResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetLoginQRCodeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string UUID = 3;
  bool has_uuid() const;
  void clear_uuid();
  static const int kUUIDFieldNumber = 3;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // optional string BlueToothBroadCastUuid = 7;
  bool has_bluetoothbroadcastuuid() const;
  void clear_bluetoothbroadcastuuid();
  static const int kBlueToothBroadCastUuidFieldNumber = 7;
  const ::std::string& bluetoothbroadcastuuid() const;
  void set_bluetoothbroadcastuuid(const ::std::string& value);
  #if LANG_CXX11
  void set_bluetoothbroadcastuuid(::std::string&& value);
  #endif
  void set_bluetoothbroadcastuuid(const char* value);
  void set_bluetoothbroadcastuuid(const char* value, size_t size);
  ::std::string* mutable_bluetoothbroadcastuuid();
  ::std::string* release_bluetoothbroadcastuuid();
  void set_allocated_bluetoothbroadcastuuid(::std::string* bluetoothbroadcastuuid);

  // required .mmRes Base = 1;
  bool has_base() const;
  void clear_base();
  static const int kBaseFieldNumber = 1;
  const ::mmRes& base() const;
  ::mmRes* mutable_base();
  ::mmRes* release_base();
  void set_allocated_base(::mmRes* base);

  // required .sKBuiltinBufferT QRCode = 2;
  bool has_qrcode() const;
  void clear_qrcode();
  static const int kQRCodeFieldNumber = 2;
  const ::sKBuiltinBufferT& qrcode() const;
  ::sKBuiltinBufferT* mutable_qrcode();
  ::sKBuiltinBufferT* release_qrcode();
  void set_allocated_qrcode(::sKBuiltinBufferT* qrcode);

  // optional .sKBuiltinBufferT NotifyKey = 5;
  bool has_notifykey() const;
  void clear_notifykey();
  static const int kNotifyKeyFieldNumber = 5;
  const ::sKBuiltinBufferT& notifykey() const;
  ::sKBuiltinBufferT* mutable_notifykey();
  ::sKBuiltinBufferT* release_notifykey();
  void set_allocated_notifykey(::sKBuiltinBufferT* notifykey);

  // optional .sKBuiltinBufferT BlueToothBroadCastContent = 8;
  bool has_bluetoothbroadcastcontent() const;
  void clear_bluetoothbroadcastcontent();
  static const int kBlueToothBroadCastContentFieldNumber = 8;
  const ::sKBuiltinBufferT& bluetoothbroadcastcontent() const;
  ::sKBuiltinBufferT* mutable_bluetoothbroadcastcontent();
  ::sKBuiltinBufferT* release_bluetoothbroadcastcontent();
  void set_allocated_bluetoothbroadcastcontent(::sKBuiltinBufferT* bluetoothbroadcastcontent);

  // required int32 CheckTime = 4;
  bool has_checktime() const;
  void clear_checktime();
  static const int kCheckTimeFieldNumber = 4;
  ::google::protobuf::int32 checktime() const;
  void set_checktime(::google::protobuf::int32 value);

  // optional int32 ExpiredTime = 6;
  bool has_expiredtime() const;
  void clear_expiredtime();
  static const int kExpiredTimeFieldNumber = 6;
  ::google::protobuf::int32 expiredtime() const;
  void set_expiredtime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GetLoginQRCodeResponse)
 private:
  void set_has_base();
  void clear_has_base();
  void set_has_qrcode();
  void clear_has_qrcode();
  void set_has_uuid();
  void clear_has_uuid();
  void set_has_checktime();
  void clear_has_checktime();
  void set_has_notifykey();
  void clear_has_notifykey();
  void set_has_expiredtime();
  void clear_has_expiredtime();
  void set_has_bluetoothbroadcastuuid();
  void clear_has_bluetoothbroadcastuuid();
  void set_has_bluetoothbroadcastcontent();
  void clear_has_bluetoothbroadcastcontent();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::internal::ArenaStringPtr bluetoothbroadcastuuid_;
  ::mmRes* base_;
  ::sKBuiltinBufferT* qrcode_;
  ::sKBuiltinBufferT* notifykey_;
  ::sKBuiltinBufferT* bluetoothbroadcastcontent_;
  ::google::protobuf::int32 checktime_;
  ::google::protobuf::int32 expiredtime_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckLoginQRCodeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CheckLoginQRCodeRequest) */ {
 public:
  CheckLoginQRCodeRequest();
  virtual ~CheckLoginQRCodeRequest();

  CheckLoginQRCodeRequest(const CheckLoginQRCodeRequest& from);

  inline CheckLoginQRCodeRequest& operator=(const CheckLoginQRCodeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckLoginQRCodeRequest& default_instance();

  static inline const CheckLoginQRCodeRequest* internal_default_instance() {
    return reinterpret_cast<const CheckLoginQRCodeRequest*>(
               &_CheckLoginQRCodeRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    118;

  void Swap(CheckLoginQRCodeRequest* other);

  // implements Message ----------------------------------------------

  inline CheckLoginQRCodeRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckLoginQRCodeRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckLoginQRCodeRequest& from);
  void MergeFrom(const CheckLoginQRCodeRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckLoginQRCodeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string uuid = 3;
  bool has_uuid() const;
  void clear_uuid();
  static const int kUuidFieldNumber = 3;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // required .LoginInfo base = 1;
  bool has_base() const;
  void clear_base();
  static const int kBaseFieldNumber = 1;
  const ::LoginInfo& base() const;
  ::LoginInfo* mutable_base();
  ::LoginInfo* release_base();
  void set_allocated_base(::LoginInfo* base);

  // required .sKBuiltinBufferT randomEncryKey = 2;
  bool has_randomencrykey() const;
  void clear_randomencrykey();
  static const int kRandomEncryKeyFieldNumber = 2;
  const ::sKBuiltinBufferT& randomencrykey() const;
  ::sKBuiltinBufferT* mutable_randomencrykey();
  ::sKBuiltinBufferT* release_randomencrykey();
  void set_allocated_randomencrykey(::sKBuiltinBufferT* randomencrykey);

  // required int32 timeStamp = 4;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimeStampFieldNumber = 4;
  ::google::protobuf::int32 timestamp() const;
  void set_timestamp(::google::protobuf::int32 value);

  // required int32 opcode = 5;
  bool has_opcode() const;
  void clear_opcode();
  static const int kOpcodeFieldNumber = 5;
  ::google::protobuf::int32 opcode() const;
  void set_opcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CheckLoginQRCodeRequest)
 private:
  void set_has_base();
  void clear_has_base();
  void set_has_randomencrykey();
  void clear_has_randomencrykey();
  void set_has_uuid();
  void clear_has_uuid();
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_opcode();
  void clear_has_opcode();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::LoginInfo* base_;
  ::sKBuiltinBufferT* randomencrykey_;
  ::google::protobuf::int32 timestamp_;
  ::google::protobuf::int32 opcode_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CheckLoginQRCodeResponse.LoginQRCodeNotifyPkg) */ {
 public:
  CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg();
  virtual ~CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg();

  CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg(const CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg& from);

  inline CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg& operator=(const CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg& default_instance();

  static inline const CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg* internal_default_instance() {
    return reinterpret_cast<const CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg*>(
               &_CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    119;

  void Swap(CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg* other);

  // implements Message ----------------------------------------------

  inline CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg& from);
  void MergeFrom(const CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .sKBuiltinBufferT NotifyData = 1;
  bool has_notifydata() const;
  void clear_notifydata();
  static const int kNotifyDataFieldNumber = 1;
  const ::sKBuiltinBufferT& notifydata() const;
  ::sKBuiltinBufferT* mutable_notifydata();
  ::sKBuiltinBufferT* release_notifydata();
  void set_allocated_notifydata(::sKBuiltinBufferT* notifydata);

  // optional int32 Opcode = 2;
  bool has_opcode() const;
  void clear_opcode();
  static const int kOpcodeFieldNumber = 2;
  ::google::protobuf::int32 opcode() const;
  void set_opcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CheckLoginQRCodeResponse.LoginQRCodeNotifyPkg)
 private:
  void set_has_notifydata();
  void clear_has_notifydata();
  void set_has_opcode();
  void clear_has_opcode();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::sKBuiltinBufferT* notifydata_;
  ::google::protobuf::int32 opcode_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckLoginQRCodeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:CheckLoginQRCodeResponse) */ {
 public:
  CheckLoginQRCodeResponse();
  virtual ~CheckLoginQRCodeResponse();

  CheckLoginQRCodeResponse(const CheckLoginQRCodeResponse& from);

  inline CheckLoginQRCodeResponse& operator=(const CheckLoginQRCodeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckLoginQRCodeResponse& default_instance();

  static inline const CheckLoginQRCodeResponse* internal_default_instance() {
    return reinterpret_cast<const CheckLoginQRCodeResponse*>(
               &_CheckLoginQRCodeResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    120;

  void Swap(CheckLoginQRCodeResponse* other);

  // implements Message ----------------------------------------------

  inline CheckLoginQRCodeResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckLoginQRCodeResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckLoginQRCodeResponse& from);
  void MergeFrom(const CheckLoginQRCodeResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckLoginQRCodeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg LoginQRCodeNotifyPkg;

  // accessors -------------------------------------------------------

  // required .mmRes base = 1;
  bool has_base() const;
  void clear_base();
  static const int kBaseFieldNumber = 1;
  const ::mmRes& base() const;
  ::mmRes* mutable_base();
  ::mmRes* release_base();
  void set_allocated_base(::mmRes* base);

  // optional .CheckLoginQRCodeResponse.LoginQRCodeNotifyPkg notifyPkg = 3;
  bool has_notifypkg() const;
  void clear_notifypkg();
  static const int kNotifyPkgFieldNumber = 3;
  const ::CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg& notifypkg() const;
  ::CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg* mutable_notifypkg();
  ::CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg* release_notifypkg();
  void set_allocated_notifypkg(::CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg* notifypkg);

  // @@protoc_insertion_point(class_scope:CheckLoginQRCodeResponse)
 private:
  void set_has_base();
  void clear_has_base();
  void set_has_notifypkg();
  void clear_has_notifypkg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::mmRes* base_;
  ::CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg* notifypkg_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NotifyMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:NotifyMsg) */ {
 public:
  NotifyMsg();
  virtual ~NotifyMsg();

  NotifyMsg(const NotifyMsg& from);

  inline NotifyMsg& operator=(const NotifyMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotifyMsg& default_instance();

  static inline const NotifyMsg* internal_default_instance() {
    return reinterpret_cast<const NotifyMsg*>(
               &_NotifyMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    121;

  void Swap(NotifyMsg* other);

  // implements Message ----------------------------------------------

  inline NotifyMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  NotifyMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NotifyMsg& from);
  void MergeFrom(const NotifyMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NotifyMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Uuid = 1;
  bool has_uuid() const;
  void clear_uuid();
  static const int kUuidFieldNumber = 1;
  const ::std::string& uuid() const;
  void set_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_uuid(::std::string&& value);
  #endif
  void set_uuid(const char* value);
  void set_uuid(const char* value, size_t size);
  ::std::string* mutable_uuid();
  ::std::string* release_uuid();
  void set_allocated_uuid(::std::string* uuid);

  // optional string Username = 3;
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 3;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string Pass = 4;
  bool has_pass() const;
  void clear_pass();
  static const int kPassFieldNumber = 4;
  const ::std::string& pass() const;
  void set_pass(const ::std::string& value);
  #if LANG_CXX11
  void set_pass(::std::string&& value);
  #endif
  void set_pass(const char* value);
  void set_pass(const char* value, size_t size);
  ::std::string* mutable_pass();
  ::std::string* release_pass();
  void set_allocated_pass(::std::string* pass);

  // optional string Imgurl = 5;
  bool has_imgurl() const;
  void clear_imgurl();
  static const int kImgurlFieldNumber = 5;
  const ::std::string& imgurl() const;
  void set_imgurl(const ::std::string& value);
  #if LANG_CXX11
  void set_imgurl(::std::string&& value);
  #endif
  void set_imgurl(const char* value);
  void set_imgurl(const char* value, size_t size);
  ::std::string* mutable_imgurl();
  ::std::string* release_imgurl();
  void set_allocated_imgurl(::std::string* imgurl);

  // optional string Nickname = 7;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 7;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional string Platform = 11;
  bool has_platform() const;
  void clear_platform();
  static const int kPlatformFieldNumber = 11;
  const ::std::string& platform() const;
  void set_platform(const ::std::string& value);
  #if LANG_CXX11
  void set_platform(::std::string&& value);
  #endif
  void set_platform(const char* value);
  void set_platform(const char* value, size_t size);
  ::std::string* mutable_platform();
  ::std::string* release_platform();
  void set_allocated_platform(::std::string* platform);

  // optional int32 Opcode = 2;
  bool has_opcode() const;
  void clear_opcode();
  static const int kOpcodeFieldNumber = 2;
  ::google::protobuf::int32 opcode() const;
  void set_opcode(::google::protobuf::int32 value);

  // optional int32 Unkownint6 = 6;
  bool has_unkownint6() const;
  void clear_unkownint6();
  static const int kUnkownint6FieldNumber = 6;
  ::google::protobuf::int32 unkownint6() const;
  void set_unkownint6(::google::protobuf::int32 value);

  // optional int32 Unkownint8 = 8;
  bool has_unkownint8() const;
  void clear_unkownint8();
  static const int kUnkownint8FieldNumber = 8;
  ::google::protobuf::int32 unkownint8() const;
  void set_unkownint8(::google::protobuf::int32 value);

  // optional int32 Unkownint10 = 10;
  bool has_unkownint10() const;
  void clear_unkownint10();
  static const int kUnkownint10FieldNumber = 10;
  ::google::protobuf::int32 unkownint10() const;
  void set_unkownint10(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:NotifyMsg)
 private:
  void set_has_uuid();
  void clear_has_uuid();
  void set_has_opcode();
  void clear_has_opcode();
  void set_has_username();
  void clear_has_username();
  void set_has_pass();
  void clear_has_pass();
  void set_has_imgurl();
  void clear_has_imgurl();
  void set_has_unkownint6();
  void clear_has_unkownint6();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_unkownint8();
  void clear_has_unkownint8();
  void set_has_unkownint10();
  void clear_has_unkownint10();
  void set_has_platform();
  void clear_has_platform();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr uuid_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr pass_;
  ::google::protobuf::internal::ArenaStringPtr imgurl_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr platform_;
  ::google::protobuf::int32 opcode_;
  ::google::protobuf::int32 unkownint6_;
  ::google::protobuf::int32 unkownint8_;
  ::google::protobuf::int32 unkownint10_;
  friend struct protobuf_mm_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SKBuiltinBuffer_t

// required uint32 iLen = 1;
inline bool SKBuiltinBuffer_t::has_ilen() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SKBuiltinBuffer_t::set_has_ilen() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SKBuiltinBuffer_t::clear_has_ilen() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SKBuiltinBuffer_t::clear_ilen() {
  ilen_ = 0u;
  clear_has_ilen();
}
inline ::google::protobuf::uint32 SKBuiltinBuffer_t::ilen() const {
  // @@protoc_insertion_point(field_get:SKBuiltinBuffer_t.iLen)
  return ilen_;
}
inline void SKBuiltinBuffer_t::set_ilen(::google::protobuf::uint32 value) {
  set_has_ilen();
  ilen_ = value;
  // @@protoc_insertion_point(field_set:SKBuiltinBuffer_t.iLen)
}

// optional bytes Buffer = 2;
inline bool SKBuiltinBuffer_t::has_buffer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SKBuiltinBuffer_t::set_has_buffer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SKBuiltinBuffer_t::clear_has_buffer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SKBuiltinBuffer_t::clear_buffer() {
  buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_buffer();
}
inline const ::std::string& SKBuiltinBuffer_t::buffer() const {
  // @@protoc_insertion_point(field_get:SKBuiltinBuffer_t.Buffer)
  return buffer_.GetNoArena();
}
inline void SKBuiltinBuffer_t::set_buffer(const ::std::string& value) {
  set_has_buffer();
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SKBuiltinBuffer_t.Buffer)
}
#if LANG_CXX11
inline void SKBuiltinBuffer_t::set_buffer(::std::string&& value) {
  set_has_buffer();
  buffer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SKBuiltinBuffer_t.Buffer)
}
#endif
inline void SKBuiltinBuffer_t::set_buffer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_buffer();
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SKBuiltinBuffer_t.Buffer)
}
inline void SKBuiltinBuffer_t::set_buffer(const void* value, size_t size) {
  set_has_buffer();
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SKBuiltinBuffer_t.Buffer)
}
inline ::std::string* SKBuiltinBuffer_t::mutable_buffer() {
  set_has_buffer();
  // @@protoc_insertion_point(field_mutable:SKBuiltinBuffer_t.Buffer)
  return buffer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SKBuiltinBuffer_t::release_buffer() {
  // @@protoc_insertion_point(field_release:SKBuiltinBuffer_t.Buffer)
  clear_has_buffer();
  return buffer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SKBuiltinBuffer_t::set_allocated_buffer(::std::string* buffer) {
  if (buffer != NULL) {
    set_has_buffer();
  } else {
    clear_has_buffer();
  }
  buffer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buffer);
  // @@protoc_insertion_point(field_set_allocated:SKBuiltinBuffer_t.Buffer)
}

// -------------------------------------------------------------------

// mmStr

// optional int32 len = 1;
inline bool mmStr::has_len() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mmStr::set_has_len() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mmStr::clear_has_len() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mmStr::clear_len() {
  len_ = 0;
  clear_has_len();
}
inline ::google::protobuf::int32 mmStr::len() const {
  // @@protoc_insertion_point(field_get:mmStr.len)
  return len_;
}
inline void mmStr::set_len(::google::protobuf::int32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:mmStr.len)
}

// optional string str = 2;
inline bool mmStr::has_str() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mmStr::set_has_str() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mmStr::clear_has_str() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mmStr::clear_str() {
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_str();
}
inline const ::std::string& mmStr::str() const {
  // @@protoc_insertion_point(field_get:mmStr.str)
  return str_.GetNoArena();
}
inline void mmStr::set_str(const ::std::string& value) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mmStr.str)
}
#if LANG_CXX11
inline void mmStr::set_str(::std::string&& value) {
  set_has_str();
  str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mmStr.str)
}
#endif
inline void mmStr::set_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mmStr.str)
}
inline void mmStr::set_str(const char* value, size_t size) {
  set_has_str();
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mmStr.str)
}
inline ::std::string* mmStr::mutable_str() {
  set_has_str();
  // @@protoc_insertion_point(field_mutable:mmStr.str)
  return str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mmStr::release_str() {
  // @@protoc_insertion_point(field_release:mmStr.str)
  clear_has_str();
  return str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mmStr::set_allocated_str(::std::string* str) {
  if (str != NULL) {
    set_has_str();
  } else {
    clear_has_str();
  }
  str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str);
  // @@protoc_insertion_point(field_set_allocated:mmStr.str)
}

// -------------------------------------------------------------------

// mmRes

// optional int32 code = 1;
inline bool mmRes::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mmRes::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mmRes::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mmRes::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 mmRes::code() const {
  // @@protoc_insertion_point(field_get:mmRes.code)
  return code_;
}
inline void mmRes::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:mmRes.code)
}

// optional string message = 2;
inline bool mmRes::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mmRes::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mmRes::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mmRes::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& mmRes::message() const {
  // @@protoc_insertion_point(field_get:mmRes.message)
  return message_.GetNoArena();
}
inline void mmRes::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mmRes.message)
}
#if LANG_CXX11
inline void mmRes::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mmRes.message)
}
#endif
inline void mmRes::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mmRes.message)
}
inline void mmRes::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mmRes.message)
}
inline ::std::string* mmRes::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:mmRes.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mmRes::release_message() {
  // @@protoc_insertion_point(field_release:mmRes.message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mmRes::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:mmRes.message)
}

// -------------------------------------------------------------------

// LoginInfo

// optional bytes aesKey = 1;
inline bool LoginInfo::has_aeskey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginInfo::set_has_aeskey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginInfo::clear_has_aeskey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginInfo::clear_aeskey() {
  aeskey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_aeskey();
}
inline const ::std::string& LoginInfo::aeskey() const {
  // @@protoc_insertion_point(field_get:LoginInfo.aesKey)
  return aeskey_.GetNoArena();
}
inline void LoginInfo::set_aeskey(const ::std::string& value) {
  set_has_aeskey();
  aeskey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginInfo.aesKey)
}
#if LANG_CXX11
inline void LoginInfo::set_aeskey(::std::string&& value) {
  set_has_aeskey();
  aeskey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginInfo.aesKey)
}
#endif
inline void LoginInfo::set_aeskey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_aeskey();
  aeskey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginInfo.aesKey)
}
inline void LoginInfo::set_aeskey(const void* value, size_t size) {
  set_has_aeskey();
  aeskey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginInfo.aesKey)
}
inline ::std::string* LoginInfo::mutable_aeskey() {
  set_has_aeskey();
  // @@protoc_insertion_point(field_mutable:LoginInfo.aesKey)
  return aeskey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginInfo::release_aeskey() {
  // @@protoc_insertion_point(field_release:LoginInfo.aesKey)
  clear_has_aeskey();
  return aeskey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginInfo::set_allocated_aeskey(::std::string* aeskey) {
  if (aeskey != NULL) {
    set_has_aeskey();
  } else {
    clear_has_aeskey();
  }
  aeskey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), aeskey);
  // @@protoc_insertion_point(field_set_allocated:LoginInfo.aesKey)
}

// optional int32 uin = 2;
inline bool LoginInfo::has_uin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginInfo::set_has_uin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginInfo::clear_has_uin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginInfo::clear_uin() {
  uin_ = 0;
  clear_has_uin();
}
inline ::google::protobuf::int32 LoginInfo::uin() const {
  // @@protoc_insertion_point(field_get:LoginInfo.uin)
  return uin_;
}
inline void LoginInfo::set_uin(::google::protobuf::int32 value) {
  set_has_uin();
  uin_ = value;
  // @@protoc_insertion_point(field_set:LoginInfo.uin)
}

// optional string guid = 3;
inline bool LoginInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginInfo::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guid();
}
inline const ::std::string& LoginInfo::guid() const {
  // @@protoc_insertion_point(field_get:LoginInfo.guid)
  return guid_.GetNoArena();
}
inline void LoginInfo::set_guid(const ::std::string& value) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginInfo.guid)
}
#if LANG_CXX11
inline void LoginInfo::set_guid(::std::string&& value) {
  set_has_guid();
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginInfo.guid)
}
#endif
inline void LoginInfo::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginInfo.guid)
}
inline void LoginInfo::set_guid(const char* value, size_t size) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginInfo.guid)
}
inline ::std::string* LoginInfo::mutable_guid() {
  set_has_guid();
  // @@protoc_insertion_point(field_mutable:LoginInfo.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginInfo::release_guid() {
  // @@protoc_insertion_point(field_release:LoginInfo.guid)
  clear_has_guid();
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginInfo::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    set_has_guid();
  } else {
    clear_has_guid();
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:LoginInfo.guid)
}

// optional int32 clientVer = 4;
inline bool LoginInfo::has_clientver() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LoginInfo::set_has_clientver() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LoginInfo::clear_has_clientver() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LoginInfo::clear_clientver() {
  clientver_ = 0;
  clear_has_clientver();
}
inline ::google::protobuf::int32 LoginInfo::clientver() const {
  // @@protoc_insertion_point(field_get:LoginInfo.clientVer)
  return clientver_;
}
inline void LoginInfo::set_clientver(::google::protobuf::int32 value) {
  set_has_clientver();
  clientver_ = value;
  // @@protoc_insertion_point(field_set:LoginInfo.clientVer)
}

// optional string androidVer = 5;
inline bool LoginInfo::has_androidver() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginInfo::set_has_androidver() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginInfo::clear_has_androidver() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginInfo::clear_androidver() {
  androidver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_androidver();
}
inline const ::std::string& LoginInfo::androidver() const {
  // @@protoc_insertion_point(field_get:LoginInfo.androidVer)
  return androidver_.GetNoArena();
}
inline void LoginInfo::set_androidver(const ::std::string& value) {
  set_has_androidver();
  androidver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LoginInfo.androidVer)
}
#if LANG_CXX11
inline void LoginInfo::set_androidver(::std::string&& value) {
  set_has_androidver();
  androidver_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:LoginInfo.androidVer)
}
#endif
inline void LoginInfo::set_androidver(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_androidver();
  androidver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LoginInfo.androidVer)
}
inline void LoginInfo::set_androidver(const char* value, size_t size) {
  set_has_androidver();
  androidver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LoginInfo.androidVer)
}
inline ::std::string* LoginInfo::mutable_androidver() {
  set_has_androidver();
  // @@protoc_insertion_point(field_mutable:LoginInfo.androidVer)
  return androidver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginInfo::release_androidver() {
  // @@protoc_insertion_point(field_release:LoginInfo.androidVer)
  clear_has_androidver();
  return androidver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginInfo::set_allocated_androidver(::std::string* androidver) {
  if (androidver != NULL) {
    set_has_androidver();
  } else {
    clear_has_androidver();
  }
  androidver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), androidver);
  // @@protoc_insertion_point(field_set_allocated:LoginInfo.androidVer)
}

// optional int32 unknown = 6;
inline bool LoginInfo::has_unknown() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LoginInfo::set_has_unknown() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LoginInfo::clear_has_unknown() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LoginInfo::clear_unknown() {
  unknown_ = 0;
  clear_has_unknown();
}
inline ::google::protobuf::int32 LoginInfo::unknown() const {
  // @@protoc_insertion_point(field_get:LoginInfo.unknown)
  return unknown_;
}
inline void LoginInfo::set_unknown(::google::protobuf::int32 value) {
  set_has_unknown();
  unknown_ = value;
  // @@protoc_insertion_point(field_set:LoginInfo.unknown)
}

// -------------------------------------------------------------------

// SyncKey_MsgKey_Key

// optional int32 type = 1;
inline bool SyncKey_MsgKey_Key::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SyncKey_MsgKey_Key::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SyncKey_MsgKey_Key::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SyncKey_MsgKey_Key::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 SyncKey_MsgKey_Key::type() const {
  // @@protoc_insertion_point(field_get:SyncKey.MsgKey.Key.type)
  return type_;
}
inline void SyncKey_MsgKey_Key::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:SyncKey.MsgKey.Key.type)
}

// optional int64 key = 2;
inline bool SyncKey_MsgKey_Key::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncKey_MsgKey_Key::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncKey_MsgKey_Key::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncKey_MsgKey_Key::clear_key() {
  key_ = GOOGLE_LONGLONG(0);
  clear_has_key();
}
inline ::google::protobuf::int64 SyncKey_MsgKey_Key::key() const {
  // @@protoc_insertion_point(field_get:SyncKey.MsgKey.Key.key)
  return key_;
}
inline void SyncKey_MsgKey_Key::set_key(::google::protobuf::int64 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:SyncKey.MsgKey.Key.key)
}

// -------------------------------------------------------------------

// SyncKey_MsgKey

// optional int32 cnt = 1;
inline bool SyncKey_MsgKey::has_cnt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncKey_MsgKey::set_has_cnt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncKey_MsgKey::clear_has_cnt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncKey_MsgKey::clear_cnt() {
  cnt_ = 0;
  clear_has_cnt();
}
inline ::google::protobuf::int32 SyncKey_MsgKey::cnt() const {
  // @@protoc_insertion_point(field_get:SyncKey.MsgKey.cnt)
  return cnt_;
}
inline void SyncKey_MsgKey::set_cnt(::google::protobuf::int32 value) {
  set_has_cnt();
  cnt_ = value;
  // @@protoc_insertion_point(field_set:SyncKey.MsgKey.cnt)
}

// repeated .SyncKey.MsgKey.Key key = 2;
inline int SyncKey_MsgKey::key_size() const {
  return key_.size();
}
inline void SyncKey_MsgKey::clear_key() {
  key_.Clear();
}
inline const ::SyncKey_MsgKey_Key& SyncKey_MsgKey::key(int index) const {
  // @@protoc_insertion_point(field_get:SyncKey.MsgKey.key)
  return key_.Get(index);
}
inline ::SyncKey_MsgKey_Key* SyncKey_MsgKey::mutable_key(int index) {
  // @@protoc_insertion_point(field_mutable:SyncKey.MsgKey.key)
  return key_.Mutable(index);
}
inline ::SyncKey_MsgKey_Key* SyncKey_MsgKey::add_key() {
  // @@protoc_insertion_point(field_add:SyncKey.MsgKey.key)
  return key_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::SyncKey_MsgKey_Key >*
SyncKey_MsgKey::mutable_key() {
  // @@protoc_insertion_point(field_mutable_list:SyncKey.MsgKey.key)
  return &key_;
}
inline const ::google::protobuf::RepeatedPtrField< ::SyncKey_MsgKey_Key >&
SyncKey_MsgKey::key() const {
  // @@protoc_insertion_point(field_list:SyncKey.MsgKey.key)
  return key_;
}

// -------------------------------------------------------------------

// SyncKey

// optional int32 len = 1;
inline bool SyncKey::has_len() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SyncKey::set_has_len() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SyncKey::clear_has_len() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SyncKey::clear_len() {
  len_ = 0;
  clear_has_len();
}
inline ::google::protobuf::int32 SyncKey::len() const {
  // @@protoc_insertion_point(field_get:SyncKey.len)
  return len_;
}
inline void SyncKey::set_len(::google::protobuf::int32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:SyncKey.len)
}

// optional .SyncKey.MsgKey msgkey = 2;
inline bool SyncKey::has_msgkey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncKey::set_has_msgkey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncKey::clear_has_msgkey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncKey::clear_msgkey() {
  if (msgkey_ != NULL) msgkey_->::SyncKey_MsgKey::Clear();
  clear_has_msgkey();
}
inline const ::SyncKey_MsgKey& SyncKey::msgkey() const {
  // @@protoc_insertion_point(field_get:SyncKey.msgkey)
  return msgkey_ != NULL ? *msgkey_
                         : *::SyncKey_MsgKey::internal_default_instance();
}
inline ::SyncKey_MsgKey* SyncKey::mutable_msgkey() {
  set_has_msgkey();
  if (msgkey_ == NULL) {
    msgkey_ = new ::SyncKey_MsgKey;
  }
  // @@protoc_insertion_point(field_mutable:SyncKey.msgkey)
  return msgkey_;
}
inline ::SyncKey_MsgKey* SyncKey::release_msgkey() {
  // @@protoc_insertion_point(field_release:SyncKey.msgkey)
  clear_has_msgkey();
  ::SyncKey_MsgKey* temp = msgkey_;
  msgkey_ = NULL;
  return temp;
}
inline void SyncKey::set_allocated_msgkey(::SyncKey_MsgKey* msgkey) {
  delete msgkey_;
  msgkey_ = msgkey;
  if (msgkey) {
    set_has_msgkey();
  } else {
    clear_has_msgkey();
  }
  // @@protoc_insertion_point(field_set_allocated:SyncKey.msgkey)
}

// -------------------------------------------------------------------

// common_msg_Data

// optional int32 len = 1;
inline bool common_msg_Data::has_len() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void common_msg_Data::set_has_len() {
  _has_bits_[0] |= 0x00000002u;
}
inline void common_msg_Data::clear_has_len() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void common_msg_Data::clear_len() {
  len_ = 0;
  clear_has_len();
}
inline ::google::protobuf::int32 common_msg_Data::len() const {
  // @@protoc_insertion_point(field_get:common_msg.Data.len)
  return len_;
}
inline void common_msg_Data::set_len(::google::protobuf::int32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:common_msg.Data.len)
}

// optional bytes data = 2;
inline bool common_msg_Data::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void common_msg_Data::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void common_msg_Data::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void common_msg_Data::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& common_msg_Data::data() const {
  // @@protoc_insertion_point(field_get:common_msg.Data.data)
  return data_.GetNoArena();
}
inline void common_msg_Data::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:common_msg.Data.data)
}
#if LANG_CXX11
inline void common_msg_Data::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:common_msg.Data.data)
}
#endif
inline void common_msg_Data::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:common_msg.Data.data)
}
inline void common_msg_Data::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:common_msg.Data.data)
}
inline ::std::string* common_msg_Data::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:common_msg.Data.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* common_msg_Data::release_data() {
  // @@protoc_insertion_point(field_release:common_msg.Data.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void common_msg_Data::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:common_msg.Data.data)
}

// -------------------------------------------------------------------

// common_msg

// optional int32 type = 1;
inline bool common_msg::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void common_msg::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void common_msg::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void common_msg::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 common_msg::type() const {
  // @@protoc_insertion_point(field_get:common_msg.type)
  return type_;
}
inline void common_msg::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:common_msg.type)
}

// optional .common_msg.Data data = 2;
inline bool common_msg::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void common_msg::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void common_msg::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void common_msg::clear_data() {
  if (data_ != NULL) data_->::common_msg_Data::Clear();
  clear_has_data();
}
inline const ::common_msg_Data& common_msg::data() const {
  // @@protoc_insertion_point(field_get:common_msg.data)
  return data_ != NULL ? *data_
                         : *::common_msg_Data::internal_default_instance();
}
inline ::common_msg_Data* common_msg::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::common_msg_Data;
  }
  // @@protoc_insertion_point(field_mutable:common_msg.data)
  return data_;
}
inline ::common_msg_Data* common_msg::release_data() {
  // @@protoc_insertion_point(field_release:common_msg.data)
  clear_has_data();
  ::common_msg_Data* temp = data_;
  data_ = NULL;
  return temp;
}
inline void common_msg::set_allocated_data(::common_msg_Data* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:common_msg.data)
}

// -------------------------------------------------------------------

// Wxid

// optional string id = 1;
inline bool Wxid::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Wxid::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Wxid::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Wxid::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& Wxid::id() const {
  // @@protoc_insertion_point(field_get:Wxid.id)
  return id_.GetNoArena();
}
inline void Wxid::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Wxid.id)
}
#if LANG_CXX11
inline void Wxid::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Wxid.id)
}
#endif
inline void Wxid::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Wxid.id)
}
inline void Wxid::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Wxid.id)
}
inline ::std::string* Wxid::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:Wxid.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Wxid::release_id() {
  // @@protoc_insertion_point(field_release:Wxid.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Wxid::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:Wxid.id)
}

// -------------------------------------------------------------------

// Msg_RawContent

// optional string content = 1;
inline bool Msg_RawContent::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg_RawContent::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg_RawContent::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg_RawContent::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& Msg_RawContent::content() const {
  // @@protoc_insertion_point(field_get:Msg.RawContent.content)
  return content_.GetNoArena();
}
inline void Msg_RawContent::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Msg.RawContent.content)
}
#if LANG_CXX11
inline void Msg_RawContent::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Msg.RawContent.content)
}
#endif
inline void Msg_RawContent::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Msg.RawContent.content)
}
inline void Msg_RawContent::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Msg.RawContent.content)
}
inline ::std::string* Msg_RawContent::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:Msg.RawContent.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Msg_RawContent::release_content() {
  // @@protoc_insertion_point(field_release:Msg.RawContent.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Msg_RawContent::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:Msg.RawContent.content)
}

// -------------------------------------------------------------------

// Msg

// optional int64 serverid = 1;
inline bool Msg::has_serverid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Msg::set_has_serverid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Msg::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Msg::clear_serverid() {
  serverid_ = GOOGLE_LONGLONG(0);
  clear_has_serverid();
}
inline ::google::protobuf::int64 Msg::serverid() const {
  // @@protoc_insertion_point(field_get:Msg.serverid)
  return serverid_;
}
inline void Msg::set_serverid(::google::protobuf::int64 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:Msg.serverid)
}

// optional .Wxid from_id = 2;
inline bool Msg::has_from_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Msg::set_has_from_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Msg::clear_has_from_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Msg::clear_from_id() {
  if (from_id_ != NULL) from_id_->::Wxid::Clear();
  clear_has_from_id();
}
inline const ::Wxid& Msg::from_id() const {
  // @@protoc_insertion_point(field_get:Msg.from_id)
  return from_id_ != NULL ? *from_id_
                         : *::Wxid::internal_default_instance();
}
inline ::Wxid* Msg::mutable_from_id() {
  set_has_from_id();
  if (from_id_ == NULL) {
    from_id_ = new ::Wxid;
  }
  // @@protoc_insertion_point(field_mutable:Msg.from_id)
  return from_id_;
}
inline ::Wxid* Msg::release_from_id() {
  // @@protoc_insertion_point(field_release:Msg.from_id)
  clear_has_from_id();
  ::Wxid* temp = from_id_;
  from_id_ = NULL;
  return temp;
}
inline void Msg::set_allocated_from_id(::Wxid* from_id) {
  delete from_id_;
  from_id_ = from_id;
  if (from_id) {
    set_has_from_id();
  } else {
    clear_has_from_id();
  }
  // @@protoc_insertion_point(field_set_allocated:Msg.from_id)
}

// optional .Wxid to_id = 3;
inline bool Msg::has_to_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Msg::set_has_to_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Msg::clear_has_to_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Msg::clear_to_id() {
  if (to_id_ != NULL) to_id_->::Wxid::Clear();
  clear_has_to_id();
}
inline const ::Wxid& Msg::to_id() const {
  // @@protoc_insertion_point(field_get:Msg.to_id)
  return to_id_ != NULL ? *to_id_
                         : *::Wxid::internal_default_instance();
}
inline ::Wxid* Msg::mutable_to_id() {
  set_has_to_id();
  if (to_id_ == NULL) {
    to_id_ = new ::Wxid;
  }
  // @@protoc_insertion_point(field_mutable:Msg.to_id)
  return to_id_;
}
inline ::Wxid* Msg::release_to_id() {
  // @@protoc_insertion_point(field_release:Msg.to_id)
  clear_has_to_id();
  ::Wxid* temp = to_id_;
  to_id_ = NULL;
  return temp;
}
inline void Msg::set_allocated_to_id(::Wxid* to_id) {
  delete to_id_;
  to_id_ = to_id;
  if (to_id) {
    set_has_to_id();
  } else {
    clear_has_to_id();
  }
  // @@protoc_insertion_point(field_set_allocated:Msg.to_id)
}

// optional int32 type = 4;
inline bool Msg::has_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Msg::set_has_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Msg::clear_has_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Msg::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 Msg::type() const {
  // @@protoc_insertion_point(field_get:Msg.type)
  return type_;
}
inline void Msg::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Msg.type)
}

// optional .Msg.RawContent raw = 5;
inline bool Msg::has_raw() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Msg::set_has_raw() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Msg::clear_has_raw() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Msg::clear_raw() {
  if (raw_ != NULL) raw_->::Msg_RawContent::Clear();
  clear_has_raw();
}
inline const ::Msg_RawContent& Msg::raw() const {
  // @@protoc_insertion_point(field_get:Msg.raw)
  return raw_ != NULL ? *raw_
                         : *::Msg_RawContent::internal_default_instance();
}
inline ::Msg_RawContent* Msg::mutable_raw() {
  set_has_raw();
  if (raw_ == NULL) {
    raw_ = new ::Msg_RawContent;
  }
  // @@protoc_insertion_point(field_mutable:Msg.raw)
  return raw_;
}
inline ::Msg_RawContent* Msg::release_raw() {
  // @@protoc_insertion_point(field_release:Msg.raw)
  clear_has_raw();
  ::Msg_RawContent* temp = raw_;
  raw_ = NULL;
  return temp;
}
inline void Msg::set_allocated_raw(::Msg_RawContent* raw) {
  delete raw_;
  raw_ = raw;
  if (raw) {
    set_has_raw();
  } else {
    clear_has_raw();
  }
  // @@protoc_insertion_point(field_set_allocated:Msg.raw)
}

// optional int32 status = 6;
inline bool Msg::has_status() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Msg::set_has_status() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Msg::clear_has_status() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Msg::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 Msg::status() const {
  // @@protoc_insertion_point(field_get:Msg.status)
  return status_;
}
inline void Msg::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:Msg.status)
}

// optional int32 tag7 = 7;
inline bool Msg::has_tag7() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Msg::set_has_tag7() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Msg::clear_has_tag7() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Msg::clear_tag7() {
  tag7_ = 0;
  clear_has_tag7();
}
inline ::google::protobuf::int32 Msg::tag7() const {
  // @@protoc_insertion_point(field_get:Msg.tag7)
  return tag7_;
}
inline void Msg::set_tag7(::google::protobuf::int32 value) {
  set_has_tag7();
  tag7_ = value;
  // @@protoc_insertion_point(field_set:Msg.tag7)
}

// optional bytes tag8 = 8;
inline bool Msg::has_tag8() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg::set_has_tag8() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg::clear_has_tag8() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg::clear_tag8() {
  tag8_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag8();
}
inline const ::std::string& Msg::tag8() const {
  // @@protoc_insertion_point(field_get:Msg.tag8)
  return tag8_.GetNoArena();
}
inline void Msg::set_tag8(const ::std::string& value) {
  set_has_tag8();
  tag8_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Msg.tag8)
}
#if LANG_CXX11
inline void Msg::set_tag8(::std::string&& value) {
  set_has_tag8();
  tag8_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Msg.tag8)
}
#endif
inline void Msg::set_tag8(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag8();
  tag8_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Msg.tag8)
}
inline void Msg::set_tag8(const void* value, size_t size) {
  set_has_tag8();
  tag8_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Msg.tag8)
}
inline ::std::string* Msg::mutable_tag8() {
  set_has_tag8();
  // @@protoc_insertion_point(field_mutable:Msg.tag8)
  return tag8_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Msg::release_tag8() {
  // @@protoc_insertion_point(field_release:Msg.tag8)
  clear_has_tag8();
  return tag8_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Msg::set_allocated_tag8(::std::string* tag8) {
  if (tag8 != NULL) {
    set_has_tag8();
  } else {
    clear_has_tag8();
  }
  tag8_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag8);
  // @@protoc_insertion_point(field_set_allocated:Msg.tag8)
}

// optional int32 createTime = 9;
inline bool Msg::has_createtime() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Msg::set_has_createtime() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Msg::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Msg::clear_createtime() {
  createtime_ = 0;
  clear_has_createtime();
}
inline ::google::protobuf::int32 Msg::createtime() const {
  // @@protoc_insertion_point(field_get:Msg.createTime)
  return createtime_;
}
inline void Msg::set_createtime(::google::protobuf::int32 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:Msg.createTime)
}

// optional string ex_info = 10;
inline bool Msg::has_ex_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg::set_has_ex_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg::clear_has_ex_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg::clear_ex_info() {
  ex_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ex_info();
}
inline const ::std::string& Msg::ex_info() const {
  // @@protoc_insertion_point(field_get:Msg.ex_info)
  return ex_info_.GetNoArena();
}
inline void Msg::set_ex_info(const ::std::string& value) {
  set_has_ex_info();
  ex_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Msg.ex_info)
}
#if LANG_CXX11
inline void Msg::set_ex_info(::std::string&& value) {
  set_has_ex_info();
  ex_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Msg.ex_info)
}
#endif
inline void Msg::set_ex_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ex_info();
  ex_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Msg.ex_info)
}
inline void Msg::set_ex_info(const char* value, size_t size) {
  set_has_ex_info();
  ex_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Msg.ex_info)
}
inline ::std::string* Msg::mutable_ex_info() {
  set_has_ex_info();
  // @@protoc_insertion_point(field_mutable:Msg.ex_info)
  return ex_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Msg::release_ex_info() {
  // @@protoc_insertion_point(field_release:Msg.ex_info)
  clear_has_ex_info();
  return ex_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Msg::set_allocated_ex_info(::std::string* ex_info) {
  if (ex_info != NULL) {
    set_has_ex_info();
  } else {
    clear_has_ex_info();
  }
  ex_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ex_info);
  // @@protoc_insertion_point(field_set_allocated:Msg.ex_info)
}

// optional string xmlContent = 11;
inline bool Msg::has_xmlcontent() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Msg::set_has_xmlcontent() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Msg::clear_has_xmlcontent() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Msg::clear_xmlcontent() {
  xmlcontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_xmlcontent();
}
inline const ::std::string& Msg::xmlcontent() const {
  // @@protoc_insertion_point(field_get:Msg.xmlContent)
  return xmlcontent_.GetNoArena();
}
inline void Msg::set_xmlcontent(const ::std::string& value) {
  set_has_xmlcontent();
  xmlcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Msg.xmlContent)
}
#if LANG_CXX11
inline void Msg::set_xmlcontent(::std::string&& value) {
  set_has_xmlcontent();
  xmlcontent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Msg.xmlContent)
}
#endif
inline void Msg::set_xmlcontent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_xmlcontent();
  xmlcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Msg.xmlContent)
}
inline void Msg::set_xmlcontent(const char* value, size_t size) {
  set_has_xmlcontent();
  xmlcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Msg.xmlContent)
}
inline ::std::string* Msg::mutable_xmlcontent() {
  set_has_xmlcontent();
  // @@protoc_insertion_point(field_mutable:Msg.xmlContent)
  return xmlcontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Msg::release_xmlcontent() {
  // @@protoc_insertion_point(field_release:Msg.xmlContent)
  clear_has_xmlcontent();
  return xmlcontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Msg::set_allocated_xmlcontent(::std::string* xmlcontent) {
  if (xmlcontent != NULL) {
    set_has_xmlcontent();
  } else {
    clear_has_xmlcontent();
  }
  xmlcontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), xmlcontent);
  // @@protoc_insertion_point(field_set_allocated:Msg.xmlContent)
}

// optional int64 svrId = 12;
inline bool Msg::has_svrid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Msg::set_has_svrid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Msg::clear_has_svrid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Msg::clear_svrid() {
  svrid_ = GOOGLE_LONGLONG(0);
  clear_has_svrid();
}
inline ::google::protobuf::int64 Msg::svrid() const {
  // @@protoc_insertion_point(field_get:Msg.svrId)
  return svrid_;
}
inline void Msg::set_svrid(::google::protobuf::int64 value) {
  set_has_svrid();
  svrid_ = value;
  // @@protoc_insertion_point(field_set:Msg.svrId)
}

// optional int32 msgKey = 13;
inline bool Msg::has_msgkey() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Msg::set_has_msgkey() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Msg::clear_has_msgkey() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Msg::clear_msgkey() {
  msgkey_ = 0;
  clear_has_msgkey();
}
inline ::google::protobuf::int32 Msg::msgkey() const {
  // @@protoc_insertion_point(field_get:Msg.msgKey)
  return msgkey_;
}
inline void Msg::set_msgkey(::google::protobuf::int32 value) {
  set_has_msgkey();
  msgkey_ = value;
  // @@protoc_insertion_point(field_set:Msg.msgKey)
}

// -------------------------------------------------------------------

// contact_info_NickName

// optional string name = 1;
inline bool contact_info_NickName::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void contact_info_NickName::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void contact_info_NickName::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void contact_info_NickName::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& contact_info_NickName::name() const {
  // @@protoc_insertion_point(field_get:contact_info.NickName.name)
  return name_.GetNoArena();
}
inline void contact_info_NickName::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contact_info.NickName.name)
}
#if LANG_CXX11
inline void contact_info_NickName::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contact_info.NickName.name)
}
#endif
inline void contact_info_NickName::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contact_info.NickName.name)
}
inline void contact_info_NickName::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contact_info.NickName.name)
}
inline ::std::string* contact_info_NickName::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:contact_info.NickName.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* contact_info_NickName::release_name() {
  // @@protoc_insertion_point(field_release:contact_info.NickName.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void contact_info_NickName::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:contact_info.NickName.name)
}

// -------------------------------------------------------------------

// contact_info_PY_SHORT

// optional string name = 1;
inline bool contact_info_PY_SHORT::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void contact_info_PY_SHORT::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void contact_info_PY_SHORT::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void contact_info_PY_SHORT::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& contact_info_PY_SHORT::name() const {
  // @@protoc_insertion_point(field_get:contact_info.PY_SHORT.name)
  return name_.GetNoArena();
}
inline void contact_info_PY_SHORT::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contact_info.PY_SHORT.name)
}
#if LANG_CXX11
inline void contact_info_PY_SHORT::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contact_info.PY_SHORT.name)
}
#endif
inline void contact_info_PY_SHORT::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contact_info.PY_SHORT.name)
}
inline void contact_info_PY_SHORT::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contact_info.PY_SHORT.name)
}
inline ::std::string* contact_info_PY_SHORT::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:contact_info.PY_SHORT.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* contact_info_PY_SHORT::release_name() {
  // @@protoc_insertion_point(field_release:contact_info.PY_SHORT.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void contact_info_PY_SHORT::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:contact_info.PY_SHORT.name)
}

// -------------------------------------------------------------------

// contact_info_QuanPin

// optional string name = 1;
inline bool contact_info_QuanPin::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void contact_info_QuanPin::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void contact_info_QuanPin::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void contact_info_QuanPin::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& contact_info_QuanPin::name() const {
  // @@protoc_insertion_point(field_get:contact_info.QuanPin.name)
  return name_.GetNoArena();
}
inline void contact_info_QuanPin::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contact_info.QuanPin.name)
}
#if LANG_CXX11
inline void contact_info_QuanPin::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contact_info.QuanPin.name)
}
#endif
inline void contact_info_QuanPin::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contact_info.QuanPin.name)
}
inline void contact_info_QuanPin::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contact_info.QuanPin.name)
}
inline ::std::string* contact_info_QuanPin::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:contact_info.QuanPin.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* contact_info_QuanPin::release_name() {
  // @@protoc_insertion_point(field_release:contact_info.QuanPin.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void contact_info_QuanPin::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:contact_info.QuanPin.name)
}

// -------------------------------------------------------------------

// contact_info_BeiZhu

// optional string name = 1;
inline bool contact_info_BeiZhu::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void contact_info_BeiZhu::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void contact_info_BeiZhu::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void contact_info_BeiZhu::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& contact_info_BeiZhu::name() const {
  // @@protoc_insertion_point(field_get:contact_info.BeiZhu.name)
  return name_.GetNoArena();
}
inline void contact_info_BeiZhu::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contact_info.BeiZhu.name)
}
#if LANG_CXX11
inline void contact_info_BeiZhu::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contact_info.BeiZhu.name)
}
#endif
inline void contact_info_BeiZhu::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contact_info.BeiZhu.name)
}
inline void contact_info_BeiZhu::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contact_info.BeiZhu.name)
}
inline ::std::string* contact_info_BeiZhu::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:contact_info.BeiZhu.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* contact_info_BeiZhu::release_name() {
  // @@protoc_insertion_point(field_release:contact_info.BeiZhu.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void contact_info_BeiZhu::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:contact_info.BeiZhu.name)
}

// -------------------------------------------------------------------

// contact_info_REAL_PY_SHORT

// optional string name = 1;
inline bool contact_info_REAL_PY_SHORT::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void contact_info_REAL_PY_SHORT::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void contact_info_REAL_PY_SHORT::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void contact_info_REAL_PY_SHORT::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& contact_info_REAL_PY_SHORT::name() const {
  // @@protoc_insertion_point(field_get:contact_info.REAL_PY_SHORT.name)
  return name_.GetNoArena();
}
inline void contact_info_REAL_PY_SHORT::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contact_info.REAL_PY_SHORT.name)
}
#if LANG_CXX11
inline void contact_info_REAL_PY_SHORT::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contact_info.REAL_PY_SHORT.name)
}
#endif
inline void contact_info_REAL_PY_SHORT::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contact_info.REAL_PY_SHORT.name)
}
inline void contact_info_REAL_PY_SHORT::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contact_info.REAL_PY_SHORT.name)
}
inline ::std::string* contact_info_REAL_PY_SHORT::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:contact_info.REAL_PY_SHORT.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* contact_info_REAL_PY_SHORT::release_name() {
  // @@protoc_insertion_point(field_release:contact_info.REAL_PY_SHORT.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void contact_info_REAL_PY_SHORT::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:contact_info.REAL_PY_SHORT.name)
}

// -------------------------------------------------------------------

// contact_info_REAL_QuanPin

// optional string name = 1;
inline bool contact_info_REAL_QuanPin::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void contact_info_REAL_QuanPin::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void contact_info_REAL_QuanPin::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void contact_info_REAL_QuanPin::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& contact_info_REAL_QuanPin::name() const {
  // @@protoc_insertion_point(field_get:contact_info.REAL_QuanPin.name)
  return name_.GetNoArena();
}
inline void contact_info_REAL_QuanPin::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contact_info.REAL_QuanPin.name)
}
#if LANG_CXX11
inline void contact_info_REAL_QuanPin::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contact_info.REAL_QuanPin.name)
}
#endif
inline void contact_info_REAL_QuanPin::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contact_info.REAL_QuanPin.name)
}
inline void contact_info_REAL_QuanPin::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contact_info.REAL_QuanPin.name)
}
inline ::std::string* contact_info_REAL_QuanPin::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:contact_info.REAL_QuanPin.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* contact_info_REAL_QuanPin::release_name() {
  // @@protoc_insertion_point(field_release:contact_info.REAL_QuanPin.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void contact_info_REAL_QuanPin::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:contact_info.REAL_QuanPin.name)
}

// -------------------------------------------------------------------

// contact_info_GroupMemberList_MemberInfo

// optional string wxid = 1;
inline bool contact_info_GroupMemberList_MemberInfo::has_wxid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void contact_info_GroupMemberList_MemberInfo::set_has_wxid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void contact_info_GroupMemberList_MemberInfo::clear_has_wxid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void contact_info_GroupMemberList_MemberInfo::clear_wxid() {
  wxid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_wxid();
}
inline const ::std::string& contact_info_GroupMemberList_MemberInfo::wxid() const {
  // @@protoc_insertion_point(field_get:contact_info.GroupMemberList.MemberInfo.wxid)
  return wxid_.GetNoArena();
}
inline void contact_info_GroupMemberList_MemberInfo::set_wxid(const ::std::string& value) {
  set_has_wxid();
  wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contact_info.GroupMemberList.MemberInfo.wxid)
}
#if LANG_CXX11
inline void contact_info_GroupMemberList_MemberInfo::set_wxid(::std::string&& value) {
  set_has_wxid();
  wxid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contact_info.GroupMemberList.MemberInfo.wxid)
}
#endif
inline void contact_info_GroupMemberList_MemberInfo::set_wxid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_wxid();
  wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contact_info.GroupMemberList.MemberInfo.wxid)
}
inline void contact_info_GroupMemberList_MemberInfo::set_wxid(const char* value, size_t size) {
  set_has_wxid();
  wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contact_info.GroupMemberList.MemberInfo.wxid)
}
inline ::std::string* contact_info_GroupMemberList_MemberInfo::mutable_wxid() {
  set_has_wxid();
  // @@protoc_insertion_point(field_mutable:contact_info.GroupMemberList.MemberInfo.wxid)
  return wxid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* contact_info_GroupMemberList_MemberInfo::release_wxid() {
  // @@protoc_insertion_point(field_release:contact_info.GroupMemberList.MemberInfo.wxid)
  clear_has_wxid();
  return wxid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void contact_info_GroupMemberList_MemberInfo::set_allocated_wxid(::std::string* wxid) {
  if (wxid != NULL) {
    set_has_wxid();
  } else {
    clear_has_wxid();
  }
  wxid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wxid);
  // @@protoc_insertion_point(field_set_allocated:contact_info.GroupMemberList.MemberInfo.wxid)
}

// optional string nick_name = 2;
inline bool contact_info_GroupMemberList_MemberInfo::has_nick_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void contact_info_GroupMemberList_MemberInfo::set_has_nick_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void contact_info_GroupMemberList_MemberInfo::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void contact_info_GroupMemberList_MemberInfo::clear_nick_name() {
  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nick_name();
}
inline const ::std::string& contact_info_GroupMemberList_MemberInfo::nick_name() const {
  // @@protoc_insertion_point(field_get:contact_info.GroupMemberList.MemberInfo.nick_name)
  return nick_name_.GetNoArena();
}
inline void contact_info_GroupMemberList_MemberInfo::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contact_info.GroupMemberList.MemberInfo.nick_name)
}
#if LANG_CXX11
inline void contact_info_GroupMemberList_MemberInfo::set_nick_name(::std::string&& value) {
  set_has_nick_name();
  nick_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contact_info.GroupMemberList.MemberInfo.nick_name)
}
#endif
inline void contact_info_GroupMemberList_MemberInfo::set_nick_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nick_name();
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contact_info.GroupMemberList.MemberInfo.nick_name)
}
inline void contact_info_GroupMemberList_MemberInfo::set_nick_name(const char* value, size_t size) {
  set_has_nick_name();
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contact_info.GroupMemberList.MemberInfo.nick_name)
}
inline ::std::string* contact_info_GroupMemberList_MemberInfo::mutable_nick_name() {
  set_has_nick_name();
  // @@protoc_insertion_point(field_mutable:contact_info.GroupMemberList.MemberInfo.nick_name)
  return nick_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* contact_info_GroupMemberList_MemberInfo::release_nick_name() {
  // @@protoc_insertion_point(field_release:contact_info.GroupMemberList.MemberInfo.nick_name)
  clear_has_nick_name();
  return nick_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void contact_info_GroupMemberList_MemberInfo::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name != NULL) {
    set_has_nick_name();
  } else {
    clear_has_nick_name();
  }
  nick_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nick_name);
  // @@protoc_insertion_point(field_set_allocated:contact_info.GroupMemberList.MemberInfo.nick_name)
}

// optional int32 tag6 = 6;
inline bool contact_info_GroupMemberList_MemberInfo::has_tag6() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void contact_info_GroupMemberList_MemberInfo::set_has_tag6() {
  _has_bits_[0] |= 0x00000008u;
}
inline void contact_info_GroupMemberList_MemberInfo::clear_has_tag6() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void contact_info_GroupMemberList_MemberInfo::clear_tag6() {
  tag6_ = 0;
  clear_has_tag6();
}
inline ::google::protobuf::int32 contact_info_GroupMemberList_MemberInfo::tag6() const {
  // @@protoc_insertion_point(field_get:contact_info.GroupMemberList.MemberInfo.tag6)
  return tag6_;
}
inline void contact_info_GroupMemberList_MemberInfo::set_tag6(::google::protobuf::int32 value) {
  set_has_tag6();
  tag6_ = value;
  // @@protoc_insertion_point(field_set:contact_info.GroupMemberList.MemberInfo.tag6)
}

// optional string inviteer_wxid = 7;
inline bool contact_info_GroupMemberList_MemberInfo::has_inviteer_wxid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void contact_info_GroupMemberList_MemberInfo::set_has_inviteer_wxid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void contact_info_GroupMemberList_MemberInfo::clear_has_inviteer_wxid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void contact_info_GroupMemberList_MemberInfo::clear_inviteer_wxid() {
  inviteer_wxid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_inviteer_wxid();
}
inline const ::std::string& contact_info_GroupMemberList_MemberInfo::inviteer_wxid() const {
  // @@protoc_insertion_point(field_get:contact_info.GroupMemberList.MemberInfo.inviteer_wxid)
  return inviteer_wxid_.GetNoArena();
}
inline void contact_info_GroupMemberList_MemberInfo::set_inviteer_wxid(const ::std::string& value) {
  set_has_inviteer_wxid();
  inviteer_wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contact_info.GroupMemberList.MemberInfo.inviteer_wxid)
}
#if LANG_CXX11
inline void contact_info_GroupMemberList_MemberInfo::set_inviteer_wxid(::std::string&& value) {
  set_has_inviteer_wxid();
  inviteer_wxid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contact_info.GroupMemberList.MemberInfo.inviteer_wxid)
}
#endif
inline void contact_info_GroupMemberList_MemberInfo::set_inviteer_wxid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_inviteer_wxid();
  inviteer_wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contact_info.GroupMemberList.MemberInfo.inviteer_wxid)
}
inline void contact_info_GroupMemberList_MemberInfo::set_inviteer_wxid(const char* value, size_t size) {
  set_has_inviteer_wxid();
  inviteer_wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contact_info.GroupMemberList.MemberInfo.inviteer_wxid)
}
inline ::std::string* contact_info_GroupMemberList_MemberInfo::mutable_inviteer_wxid() {
  set_has_inviteer_wxid();
  // @@protoc_insertion_point(field_mutable:contact_info.GroupMemberList.MemberInfo.inviteer_wxid)
  return inviteer_wxid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* contact_info_GroupMemberList_MemberInfo::release_inviteer_wxid() {
  // @@protoc_insertion_point(field_release:contact_info.GroupMemberList.MemberInfo.inviteer_wxid)
  clear_has_inviteer_wxid();
  return inviteer_wxid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void contact_info_GroupMemberList_MemberInfo::set_allocated_inviteer_wxid(::std::string* inviteer_wxid) {
  if (inviteer_wxid != NULL) {
    set_has_inviteer_wxid();
  } else {
    clear_has_inviteer_wxid();
  }
  inviteer_wxid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), inviteer_wxid);
  // @@protoc_insertion_point(field_set_allocated:contact_info.GroupMemberList.MemberInfo.inviteer_wxid)
}

// optional int32 tag8 = 8;
inline bool contact_info_GroupMemberList_MemberInfo::has_tag8() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void contact_info_GroupMemberList_MemberInfo::set_has_tag8() {
  _has_bits_[0] |= 0x00000010u;
}
inline void contact_info_GroupMemberList_MemberInfo::clear_has_tag8() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void contact_info_GroupMemberList_MemberInfo::clear_tag8() {
  tag8_ = 0;
  clear_has_tag8();
}
inline ::google::protobuf::int32 contact_info_GroupMemberList_MemberInfo::tag8() const {
  // @@protoc_insertion_point(field_get:contact_info.GroupMemberList.MemberInfo.tag8)
  return tag8_;
}
inline void contact_info_GroupMemberList_MemberInfo::set_tag8(::google::protobuf::int32 value) {
  set_has_tag8();
  tag8_ = value;
  // @@protoc_insertion_point(field_set:contact_info.GroupMemberList.MemberInfo.tag8)
}

// -------------------------------------------------------------------

// contact_info_GroupMemberList

// optional int32 cnt = 1;
inline bool contact_info_GroupMemberList::has_cnt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void contact_info_GroupMemberList::set_has_cnt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void contact_info_GroupMemberList::clear_has_cnt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void contact_info_GroupMemberList::clear_cnt() {
  cnt_ = 0;
  clear_has_cnt();
}
inline ::google::protobuf::int32 contact_info_GroupMemberList::cnt() const {
  // @@protoc_insertion_point(field_get:contact_info.GroupMemberList.cnt)
  return cnt_;
}
inline void contact_info_GroupMemberList::set_cnt(::google::protobuf::int32 value) {
  set_has_cnt();
  cnt_ = value;
  // @@protoc_insertion_point(field_set:contact_info.GroupMemberList.cnt)
}

// repeated .contact_info.GroupMemberList.MemberInfo member = 2;
inline int contact_info_GroupMemberList::member_size() const {
  return member_.size();
}
inline void contact_info_GroupMemberList::clear_member() {
  member_.Clear();
}
inline const ::contact_info_GroupMemberList_MemberInfo& contact_info_GroupMemberList::member(int index) const {
  // @@protoc_insertion_point(field_get:contact_info.GroupMemberList.member)
  return member_.Get(index);
}
inline ::contact_info_GroupMemberList_MemberInfo* contact_info_GroupMemberList::mutable_member(int index) {
  // @@protoc_insertion_point(field_mutable:contact_info.GroupMemberList.member)
  return member_.Mutable(index);
}
inline ::contact_info_GroupMemberList_MemberInfo* contact_info_GroupMemberList::add_member() {
  // @@protoc_insertion_point(field_add:contact_info.GroupMemberList.member)
  return member_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::contact_info_GroupMemberList_MemberInfo >*
contact_info_GroupMemberList::mutable_member() {
  // @@protoc_insertion_point(field_mutable_list:contact_info.GroupMemberList.member)
  return &member_;
}
inline const ::google::protobuf::RepeatedPtrField< ::contact_info_GroupMemberList_MemberInfo >&
contact_info_GroupMemberList::member() const {
  // @@protoc_insertion_point(field_list:contact_info.GroupMemberList.member)
  return member_;
}

// optional int32 tag3 = 3;
inline bool contact_info_GroupMemberList::has_tag3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void contact_info_GroupMemberList::set_has_tag3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void contact_info_GroupMemberList::clear_has_tag3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void contact_info_GroupMemberList::clear_tag3() {
  tag3_ = 0;
  clear_has_tag3();
}
inline ::google::protobuf::int32 contact_info_GroupMemberList::tag3() const {
  // @@protoc_insertion_point(field_get:contact_info.GroupMemberList.tag3)
  return tag3_;
}
inline void contact_info_GroupMemberList::set_tag3(::google::protobuf::int32 value) {
  set_has_tag3();
  tag3_ = value;
  // @@protoc_insertion_point(field_set:contact_info.GroupMemberList.tag3)
}

// optional string tag4 = 4;
inline bool contact_info_GroupMemberList::has_tag4() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void contact_info_GroupMemberList::set_has_tag4() {
  _has_bits_[0] |= 0x00000001u;
}
inline void contact_info_GroupMemberList::clear_has_tag4() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void contact_info_GroupMemberList::clear_tag4() {
  tag4_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag4();
}
inline const ::std::string& contact_info_GroupMemberList::tag4() const {
  // @@protoc_insertion_point(field_get:contact_info.GroupMemberList.tag4)
  return tag4_.GetNoArena();
}
inline void contact_info_GroupMemberList::set_tag4(const ::std::string& value) {
  set_has_tag4();
  tag4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contact_info.GroupMemberList.tag4)
}
#if LANG_CXX11
inline void contact_info_GroupMemberList::set_tag4(::std::string&& value) {
  set_has_tag4();
  tag4_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contact_info.GroupMemberList.tag4)
}
#endif
inline void contact_info_GroupMemberList::set_tag4(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag4();
  tag4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contact_info.GroupMemberList.tag4)
}
inline void contact_info_GroupMemberList::set_tag4(const char* value, size_t size) {
  set_has_tag4();
  tag4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contact_info.GroupMemberList.tag4)
}
inline ::std::string* contact_info_GroupMemberList::mutable_tag4() {
  set_has_tag4();
  // @@protoc_insertion_point(field_mutable:contact_info.GroupMemberList.tag4)
  return tag4_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* contact_info_GroupMemberList::release_tag4() {
  // @@protoc_insertion_point(field_release:contact_info.GroupMemberList.tag4)
  clear_has_tag4();
  return tag4_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void contact_info_GroupMemberList::set_allocated_tag4(::std::string* tag4) {
  if (tag4 != NULL) {
    set_has_tag4();
  } else {
    clear_has_tag4();
  }
  tag4_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag4);
  // @@protoc_insertion_point(field_set_allocated:contact_info.GroupMemberList.tag4)
}

// -------------------------------------------------------------------

// contact_info

// optional .Wxid wxid = 1;
inline bool contact_info::has_wxid() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void contact_info::set_has_wxid() {
  _has_bits_[0] |= 0x00020000u;
}
inline void contact_info::clear_has_wxid() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void contact_info::clear_wxid() {
  if (wxid_ != NULL) wxid_->::Wxid::Clear();
  clear_has_wxid();
}
inline const ::Wxid& contact_info::wxid() const {
  // @@protoc_insertion_point(field_get:contact_info.wxid)
  return wxid_ != NULL ? *wxid_
                         : *::Wxid::internal_default_instance();
}
inline ::Wxid* contact_info::mutable_wxid() {
  set_has_wxid();
  if (wxid_ == NULL) {
    wxid_ = new ::Wxid;
  }
  // @@protoc_insertion_point(field_mutable:contact_info.wxid)
  return wxid_;
}
inline ::Wxid* contact_info::release_wxid() {
  // @@protoc_insertion_point(field_release:contact_info.wxid)
  clear_has_wxid();
  ::Wxid* temp = wxid_;
  wxid_ = NULL;
  return temp;
}
inline void contact_info::set_allocated_wxid(::Wxid* wxid) {
  delete wxid_;
  wxid_ = wxid;
  if (wxid) {
    set_has_wxid();
  } else {
    clear_has_wxid();
  }
  // @@protoc_insertion_point(field_set_allocated:contact_info.wxid)
}

// optional .contact_info.NickName nickname = 2;
inline bool contact_info::has_nickname() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void contact_info::set_has_nickname() {
  _has_bits_[0] |= 0x00040000u;
}
inline void contact_info::clear_has_nickname() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void contact_info::clear_nickname() {
  if (nickname_ != NULL) nickname_->::contact_info_NickName::Clear();
  clear_has_nickname();
}
inline const ::contact_info_NickName& contact_info::nickname() const {
  // @@protoc_insertion_point(field_get:contact_info.nickname)
  return nickname_ != NULL ? *nickname_
                         : *::contact_info_NickName::internal_default_instance();
}
inline ::contact_info_NickName* contact_info::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == NULL) {
    nickname_ = new ::contact_info_NickName;
  }
  // @@protoc_insertion_point(field_mutable:contact_info.nickname)
  return nickname_;
}
inline ::contact_info_NickName* contact_info::release_nickname() {
  // @@protoc_insertion_point(field_release:contact_info.nickname)
  clear_has_nickname();
  ::contact_info_NickName* temp = nickname_;
  nickname_ = NULL;
  return temp;
}
inline void contact_info::set_allocated_nickname(::contact_info_NickName* nickname) {
  delete nickname_;
  nickname_ = nickname;
  if (nickname) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  // @@protoc_insertion_point(field_set_allocated:contact_info.nickname)
}

// optional .contact_info.PY_SHORT shortPy = 3;
inline bool contact_info::has_shortpy() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void contact_info::set_has_shortpy() {
  _has_bits_[0] |= 0x00080000u;
}
inline void contact_info::clear_has_shortpy() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void contact_info::clear_shortpy() {
  if (shortpy_ != NULL) shortpy_->::contact_info_PY_SHORT::Clear();
  clear_has_shortpy();
}
inline const ::contact_info_PY_SHORT& contact_info::shortpy() const {
  // @@protoc_insertion_point(field_get:contact_info.shortPy)
  return shortpy_ != NULL ? *shortpy_
                         : *::contact_info_PY_SHORT::internal_default_instance();
}
inline ::contact_info_PY_SHORT* contact_info::mutable_shortpy() {
  set_has_shortpy();
  if (shortpy_ == NULL) {
    shortpy_ = new ::contact_info_PY_SHORT;
  }
  // @@protoc_insertion_point(field_mutable:contact_info.shortPy)
  return shortpy_;
}
inline ::contact_info_PY_SHORT* contact_info::release_shortpy() {
  // @@protoc_insertion_point(field_release:contact_info.shortPy)
  clear_has_shortpy();
  ::contact_info_PY_SHORT* temp = shortpy_;
  shortpy_ = NULL;
  return temp;
}
inline void contact_info::set_allocated_shortpy(::contact_info_PY_SHORT* shortpy) {
  delete shortpy_;
  shortpy_ = shortpy;
  if (shortpy) {
    set_has_shortpy();
  } else {
    clear_has_shortpy();
  }
  // @@protoc_insertion_point(field_set_allocated:contact_info.shortPy)
}

// optional .contact_info.QuanPin quanpin = 4;
inline bool contact_info::has_quanpin() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void contact_info::set_has_quanpin() {
  _has_bits_[0] |= 0x00100000u;
}
inline void contact_info::clear_has_quanpin() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void contact_info::clear_quanpin() {
  if (quanpin_ != NULL) quanpin_->::contact_info_QuanPin::Clear();
  clear_has_quanpin();
}
inline const ::contact_info_QuanPin& contact_info::quanpin() const {
  // @@protoc_insertion_point(field_get:contact_info.quanpin)
  return quanpin_ != NULL ? *quanpin_
                         : *::contact_info_QuanPin::internal_default_instance();
}
inline ::contact_info_QuanPin* contact_info::mutable_quanpin() {
  set_has_quanpin();
  if (quanpin_ == NULL) {
    quanpin_ = new ::contact_info_QuanPin;
  }
  // @@protoc_insertion_point(field_mutable:contact_info.quanpin)
  return quanpin_;
}
inline ::contact_info_QuanPin* contact_info::release_quanpin() {
  // @@protoc_insertion_point(field_release:contact_info.quanpin)
  clear_has_quanpin();
  ::contact_info_QuanPin* temp = quanpin_;
  quanpin_ = NULL;
  return temp;
}
inline void contact_info::set_allocated_quanpin(::contact_info_QuanPin* quanpin) {
  delete quanpin_;
  quanpin_ = quanpin;
  if (quanpin) {
    set_has_quanpin();
  } else {
    clear_has_quanpin();
  }
  // @@protoc_insertion_point(field_set_allocated:contact_info.quanpin)
}

// optional int32 sex = 5;
inline bool contact_info::has_sex() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void contact_info::set_has_sex() {
  _has_bits_[0] |= 0x02000000u;
}
inline void contact_info::clear_has_sex() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void contact_info::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 contact_info::sex() const {
  // @@protoc_insertion_point(field_get:contact_info.sex)
  return sex_;
}
inline void contact_info::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:contact_info.sex)
}

// optional string tag6 = 6;
inline bool contact_info::has_tag6() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void contact_info::set_has_tag6() {
  _has_bits_[0] |= 0x00000001u;
}
inline void contact_info::clear_has_tag6() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void contact_info::clear_tag6() {
  tag6_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag6();
}
inline const ::std::string& contact_info::tag6() const {
  // @@protoc_insertion_point(field_get:contact_info.tag6)
  return tag6_.GetNoArena();
}
inline void contact_info::set_tag6(const ::std::string& value) {
  set_has_tag6();
  tag6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contact_info.tag6)
}
#if LANG_CXX11
inline void contact_info::set_tag6(::std::string&& value) {
  set_has_tag6();
  tag6_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contact_info.tag6)
}
#endif
inline void contact_info::set_tag6(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag6();
  tag6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contact_info.tag6)
}
inline void contact_info::set_tag6(const char* value, size_t size) {
  set_has_tag6();
  tag6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contact_info.tag6)
}
inline ::std::string* contact_info::mutable_tag6() {
  set_has_tag6();
  // @@protoc_insertion_point(field_mutable:contact_info.tag6)
  return tag6_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* contact_info::release_tag6() {
  // @@protoc_insertion_point(field_release:contact_info.tag6)
  clear_has_tag6();
  return tag6_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void contact_info::set_allocated_tag6(::std::string* tag6) {
  if (tag6 != NULL) {
    set_has_tag6();
  } else {
    clear_has_tag6();
  }
  tag6_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag6);
  // @@protoc_insertion_point(field_set_allocated:contact_info.tag6)
}

// optional int32 tag7 = 7;
inline bool contact_info::has_tag7() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void contact_info::set_has_tag7() {
  _has_bits_[0] |= 0x04000000u;
}
inline void contact_info::clear_has_tag7() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void contact_info::clear_tag7() {
  tag7_ = 0;
  clear_has_tag7();
}
inline ::google::protobuf::int32 contact_info::tag7() const {
  // @@protoc_insertion_point(field_get:contact_info.tag7)
  return tag7_;
}
inline void contact_info::set_tag7(::google::protobuf::int32 value) {
  set_has_tag7();
  tag7_ = value;
  // @@protoc_insertion_point(field_set:contact_info.tag7)
}

// optional int32 type = 8;
inline bool contact_info::has_type() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void contact_info::set_has_type() {
  _has_bits_[0] |= 0x08000000u;
}
inline void contact_info::clear_has_type() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void contact_info::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 contact_info::type() const {
  // @@protoc_insertion_point(field_get:contact_info.type)
  return type_;
}
inline void contact_info::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:contact_info.type)
}

// optional int32 tag9 = 9;
inline bool contact_info::has_tag9() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void contact_info::set_has_tag9() {
  _has_bits_[0] |= 0x10000000u;
}
inline void contact_info::clear_has_tag9() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void contact_info::clear_tag9() {
  tag9_ = 0;
  clear_has_tag9();
}
inline ::google::protobuf::int32 contact_info::tag9() const {
  // @@protoc_insertion_point(field_get:contact_info.tag9)
  return tag9_;
}
inline void contact_info::set_tag9(::google::protobuf::int32 value) {
  set_has_tag9();
  tag9_ = value;
  // @@protoc_insertion_point(field_set:contact_info.tag9)
}

// optional .contact_info.BeiZhu remark_name = 10;
inline bool contact_info::has_remark_name() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void contact_info::set_has_remark_name() {
  _has_bits_[0] |= 0x00200000u;
}
inline void contact_info::clear_has_remark_name() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void contact_info::clear_remark_name() {
  if (remark_name_ != NULL) remark_name_->::contact_info_BeiZhu::Clear();
  clear_has_remark_name();
}
inline const ::contact_info_BeiZhu& contact_info::remark_name() const {
  // @@protoc_insertion_point(field_get:contact_info.remark_name)
  return remark_name_ != NULL ? *remark_name_
                         : *::contact_info_BeiZhu::internal_default_instance();
}
inline ::contact_info_BeiZhu* contact_info::mutable_remark_name() {
  set_has_remark_name();
  if (remark_name_ == NULL) {
    remark_name_ = new ::contact_info_BeiZhu;
  }
  // @@protoc_insertion_point(field_mutable:contact_info.remark_name)
  return remark_name_;
}
inline ::contact_info_BeiZhu* contact_info::release_remark_name() {
  // @@protoc_insertion_point(field_release:contact_info.remark_name)
  clear_has_remark_name();
  ::contact_info_BeiZhu* temp = remark_name_;
  remark_name_ = NULL;
  return temp;
}
inline void contact_info::set_allocated_remark_name(::contact_info_BeiZhu* remark_name) {
  delete remark_name_;
  remark_name_ = remark_name;
  if (remark_name) {
    set_has_remark_name();
  } else {
    clear_has_remark_name();
  }
  // @@protoc_insertion_point(field_set_allocated:contact_info.remark_name)
}

// optional .contact_info.REAL_PY_SHORT real_shortPy = 11;
inline bool contact_info::has_real_shortpy() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void contact_info::set_has_real_shortpy() {
  _has_bits_[0] |= 0x00400000u;
}
inline void contact_info::clear_has_real_shortpy() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void contact_info::clear_real_shortpy() {
  if (real_shortpy_ != NULL) real_shortpy_->::contact_info_REAL_PY_SHORT::Clear();
  clear_has_real_shortpy();
}
inline const ::contact_info_REAL_PY_SHORT& contact_info::real_shortpy() const {
  // @@protoc_insertion_point(field_get:contact_info.real_shortPy)
  return real_shortpy_ != NULL ? *real_shortpy_
                         : *::contact_info_REAL_PY_SHORT::internal_default_instance();
}
inline ::contact_info_REAL_PY_SHORT* contact_info::mutable_real_shortpy() {
  set_has_real_shortpy();
  if (real_shortpy_ == NULL) {
    real_shortpy_ = new ::contact_info_REAL_PY_SHORT;
  }
  // @@protoc_insertion_point(field_mutable:contact_info.real_shortPy)
  return real_shortpy_;
}
inline ::contact_info_REAL_PY_SHORT* contact_info::release_real_shortpy() {
  // @@protoc_insertion_point(field_release:contact_info.real_shortPy)
  clear_has_real_shortpy();
  ::contact_info_REAL_PY_SHORT* temp = real_shortpy_;
  real_shortpy_ = NULL;
  return temp;
}
inline void contact_info::set_allocated_real_shortpy(::contact_info_REAL_PY_SHORT* real_shortpy) {
  delete real_shortpy_;
  real_shortpy_ = real_shortpy;
  if (real_shortpy) {
    set_has_real_shortpy();
  } else {
    clear_has_real_shortpy();
  }
  // @@protoc_insertion_point(field_set_allocated:contact_info.real_shortPy)
}

// optional .contact_info.REAL_QuanPin real_quanpin = 12;
inline bool contact_info::has_real_quanpin() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void contact_info::set_has_real_quanpin() {
  _has_bits_[0] |= 0x00800000u;
}
inline void contact_info::clear_has_real_quanpin() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void contact_info::clear_real_quanpin() {
  if (real_quanpin_ != NULL) real_quanpin_->::contact_info_REAL_QuanPin::Clear();
  clear_has_real_quanpin();
}
inline const ::contact_info_REAL_QuanPin& contact_info::real_quanpin() const {
  // @@protoc_insertion_point(field_get:contact_info.real_quanpin)
  return real_quanpin_ != NULL ? *real_quanpin_
                         : *::contact_info_REAL_QuanPin::internal_default_instance();
}
inline ::contact_info_REAL_QuanPin* contact_info::mutable_real_quanpin() {
  set_has_real_quanpin();
  if (real_quanpin_ == NULL) {
    real_quanpin_ = new ::contact_info_REAL_QuanPin;
  }
  // @@protoc_insertion_point(field_mutable:contact_info.real_quanpin)
  return real_quanpin_;
}
inline ::contact_info_REAL_QuanPin* contact_info::release_real_quanpin() {
  // @@protoc_insertion_point(field_release:contact_info.real_quanpin)
  clear_has_real_quanpin();
  ::contact_info_REAL_QuanPin* temp = real_quanpin_;
  real_quanpin_ = NULL;
  return temp;
}
inline void contact_info::set_allocated_real_quanpin(::contact_info_REAL_QuanPin* real_quanpin) {
  delete real_quanpin_;
  real_quanpin_ = real_quanpin;
  if (real_quanpin) {
    set_has_real_quanpin();
  } else {
    clear_has_real_quanpin();
  }
  // @@protoc_insertion_point(field_set_allocated:contact_info.real_quanpin)
}

// optional int32 tag13 = 13;
inline bool contact_info::has_tag13() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void contact_info::set_has_tag13() {
  _has_bits_[0] |= 0x20000000u;
}
inline void contact_info::clear_has_tag13() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void contact_info::clear_tag13() {
  tag13_ = 0;
  clear_has_tag13();
}
inline ::google::protobuf::int32 contact_info::tag13() const {
  // @@protoc_insertion_point(field_get:contact_info.tag13)
  return tag13_;
}
inline void contact_info::set_tag13(::google::protobuf::int32 value) {
  set_has_tag13();
  tag13_ = value;
  // @@protoc_insertion_point(field_set:contact_info.tag13)
}

// optional int32 tag14 = 14;
inline bool contact_info::has_tag14() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void contact_info::set_has_tag14() {
  _has_bits_[0] |= 0x40000000u;
}
inline void contact_info::clear_has_tag14() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void contact_info::clear_tag14() {
  tag14_ = 0;
  clear_has_tag14();
}
inline ::google::protobuf::int32 contact_info::tag14() const {
  // @@protoc_insertion_point(field_get:contact_info.tag14)
  return tag14_;
}
inline void contact_info::set_tag14(::google::protobuf::int32 value) {
  set_has_tag14();
  tag14_ = value;
  // @@protoc_insertion_point(field_set:contact_info.tag14)
}

// optional string tag16 = 16;
inline bool contact_info::has_tag16() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void contact_info::set_has_tag16() {
  _has_bits_[0] |= 0x00000002u;
}
inline void contact_info::clear_has_tag16() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void contact_info::clear_tag16() {
  tag16_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag16();
}
inline const ::std::string& contact_info::tag16() const {
  // @@protoc_insertion_point(field_get:contact_info.tag16)
  return tag16_.GetNoArena();
}
inline void contact_info::set_tag16(const ::std::string& value) {
  set_has_tag16();
  tag16_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contact_info.tag16)
}
#if LANG_CXX11
inline void contact_info::set_tag16(::std::string&& value) {
  set_has_tag16();
  tag16_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contact_info.tag16)
}
#endif
inline void contact_info::set_tag16(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag16();
  tag16_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contact_info.tag16)
}
inline void contact_info::set_tag16(const char* value, size_t size) {
  set_has_tag16();
  tag16_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contact_info.tag16)
}
inline ::std::string* contact_info::mutable_tag16() {
  set_has_tag16();
  // @@protoc_insertion_point(field_mutable:contact_info.tag16)
  return tag16_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* contact_info::release_tag16() {
  // @@protoc_insertion_point(field_release:contact_info.tag16)
  clear_has_tag16();
  return tag16_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void contact_info::set_allocated_tag16(::std::string* tag16) {
  if (tag16 != NULL) {
    set_has_tag16();
  } else {
    clear_has_tag16();
  }
  tag16_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag16);
  // @@protoc_insertion_point(field_set_allocated:contact_info.tag16)
}

// optional int32 bChatRoom = 17;
inline bool contact_info::has_bchatroom() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void contact_info::set_has_bchatroom() {
  _has_bits_[0] |= 0x80000000u;
}
inline void contact_info::clear_has_bchatroom() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void contact_info::clear_bchatroom() {
  bchatroom_ = 0;
  clear_has_bchatroom();
}
inline ::google::protobuf::int32 contact_info::bchatroom() const {
  // @@protoc_insertion_point(field_get:contact_info.bChatRoom)
  return bchatroom_;
}
inline void contact_info::set_bchatroom(::google::protobuf::int32 value) {
  set_has_bchatroom();
  bchatroom_ = value;
  // @@protoc_insertion_point(field_set:contact_info.bChatRoom)
}

// optional int32 tag18 = 18;
inline bool contact_info::has_tag18() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void contact_info::set_has_tag18() {
  _has_bits_[1] |= 0x00000001u;
}
inline void contact_info::clear_has_tag18() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void contact_info::clear_tag18() {
  tag18_ = 0;
  clear_has_tag18();
}
inline ::google::protobuf::int32 contact_info::tag18() const {
  // @@protoc_insertion_point(field_get:contact_info.tag18)
  return tag18_;
}
inline void contact_info::set_tag18(::google::protobuf::int32 value) {
  set_has_tag18();
  tag18_ = value;
  // @@protoc_insertion_point(field_set:contact_info.tag18)
}

// optional string sheng = 19;
inline bool contact_info::has_sheng() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void contact_info::set_has_sheng() {
  _has_bits_[0] |= 0x00000004u;
}
inline void contact_info::clear_has_sheng() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void contact_info::clear_sheng() {
  sheng_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sheng();
}
inline const ::std::string& contact_info::sheng() const {
  // @@protoc_insertion_point(field_get:contact_info.sheng)
  return sheng_.GetNoArena();
}
inline void contact_info::set_sheng(const ::std::string& value) {
  set_has_sheng();
  sheng_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contact_info.sheng)
}
#if LANG_CXX11
inline void contact_info::set_sheng(::std::string&& value) {
  set_has_sheng();
  sheng_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contact_info.sheng)
}
#endif
inline void contact_info::set_sheng(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sheng();
  sheng_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contact_info.sheng)
}
inline void contact_info::set_sheng(const char* value, size_t size) {
  set_has_sheng();
  sheng_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contact_info.sheng)
}
inline ::std::string* contact_info::mutable_sheng() {
  set_has_sheng();
  // @@protoc_insertion_point(field_mutable:contact_info.sheng)
  return sheng_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* contact_info::release_sheng() {
  // @@protoc_insertion_point(field_release:contact_info.sheng)
  clear_has_sheng();
  return sheng_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void contact_info::set_allocated_sheng(::std::string* sheng) {
  if (sheng != NULL) {
    set_has_sheng();
  } else {
    clear_has_sheng();
  }
  sheng_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sheng);
  // @@protoc_insertion_point(field_set_allocated:contact_info.sheng)
}

// optional string shi = 20;
inline bool contact_info::has_shi() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void contact_info::set_has_shi() {
  _has_bits_[0] |= 0x00000008u;
}
inline void contact_info::clear_has_shi() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void contact_info::clear_shi() {
  shi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_shi();
}
inline const ::std::string& contact_info::shi() const {
  // @@protoc_insertion_point(field_get:contact_info.shi)
  return shi_.GetNoArena();
}
inline void contact_info::set_shi(const ::std::string& value) {
  set_has_shi();
  shi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contact_info.shi)
}
#if LANG_CXX11
inline void contact_info::set_shi(::std::string&& value) {
  set_has_shi();
  shi_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contact_info.shi)
}
#endif
inline void contact_info::set_shi(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_shi();
  shi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contact_info.shi)
}
inline void contact_info::set_shi(const char* value, size_t size) {
  set_has_shi();
  shi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contact_info.shi)
}
inline ::std::string* contact_info::mutable_shi() {
  set_has_shi();
  // @@protoc_insertion_point(field_mutable:contact_info.shi)
  return shi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* contact_info::release_shi() {
  // @@protoc_insertion_point(field_release:contact_info.shi)
  clear_has_shi();
  return shi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void contact_info::set_allocated_shi(::std::string* shi) {
  if (shi != NULL) {
    set_has_shi();
  } else {
    clear_has_shi();
  }
  shi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shi);
  // @@protoc_insertion_point(field_set_allocated:contact_info.shi)
}

// optional string qianming = 21;
inline bool contact_info::has_qianming() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void contact_info::set_has_qianming() {
  _has_bits_[0] |= 0x00000010u;
}
inline void contact_info::clear_has_qianming() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void contact_info::clear_qianming() {
  qianming_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_qianming();
}
inline const ::std::string& contact_info::qianming() const {
  // @@protoc_insertion_point(field_get:contact_info.qianming)
  return qianming_.GetNoArena();
}
inline void contact_info::set_qianming(const ::std::string& value) {
  set_has_qianming();
  qianming_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contact_info.qianming)
}
#if LANG_CXX11
inline void contact_info::set_qianming(::std::string&& value) {
  set_has_qianming();
  qianming_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contact_info.qianming)
}
#endif
inline void contact_info::set_qianming(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_qianming();
  qianming_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contact_info.qianming)
}
inline void contact_info::set_qianming(const char* value, size_t size) {
  set_has_qianming();
  qianming_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contact_info.qianming)
}
inline ::std::string* contact_info::mutable_qianming() {
  set_has_qianming();
  // @@protoc_insertion_point(field_mutable:contact_info.qianming)
  return qianming_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* contact_info::release_qianming() {
  // @@protoc_insertion_point(field_release:contact_info.qianming)
  clear_has_qianming();
  return qianming_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void contact_info::set_allocated_qianming(::std::string* qianming) {
  if (qianming != NULL) {
    set_has_qianming();
  } else {
    clear_has_qianming();
  }
  qianming_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), qianming);
  // @@protoc_insertion_point(field_set_allocated:contact_info.qianming)
}

// optional int32 tag22 = 22;
inline bool contact_info::has_tag22() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void contact_info::set_has_tag22() {
  _has_bits_[1] |= 0x00000002u;
}
inline void contact_info::clear_has_tag22() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void contact_info::clear_tag22() {
  tag22_ = 0;
  clear_has_tag22();
}
inline ::google::protobuf::int32 contact_info::tag22() const {
  // @@protoc_insertion_point(field_get:contact_info.tag22)
  return tag22_;
}
inline void contact_info::set_tag22(::google::protobuf::int32 value) {
  set_has_tag22();
  tag22_ = value;
  // @@protoc_insertion_point(field_set:contact_info.tag22)
}

// optional int32 tag23 = 23;
inline bool contact_info::has_tag23() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void contact_info::set_has_tag23() {
  _has_bits_[1] |= 0x00000004u;
}
inline void contact_info::clear_has_tag23() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void contact_info::clear_tag23() {
  tag23_ = 0;
  clear_has_tag23();
}
inline ::google::protobuf::int32 contact_info::tag23() const {
  // @@protoc_insertion_point(field_get:contact_info.tag23)
  return tag23_;
}
inline void contact_info::set_tag23(::google::protobuf::int32 value) {
  set_has_tag23();
  tag23_ = value;
  // @@protoc_insertion_point(field_set:contact_info.tag23)
}

// optional int32 register_body_type = 24;
inline bool contact_info::has_register_body_type() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void contact_info::set_has_register_body_type() {
  _has_bits_[1] |= 0x00000008u;
}
inline void contact_info::clear_has_register_body_type() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void contact_info::clear_register_body_type() {
  register_body_type_ = 0;
  clear_has_register_body_type();
}
inline ::google::protobuf::int32 contact_info::register_body_type() const {
  // @@protoc_insertion_point(field_get:contact_info.register_body_type)
  return register_body_type_;
}
inline void contact_info::set_register_body_type(::google::protobuf::int32 value) {
  set_has_register_body_type();
  register_body_type_ = value;
  // @@protoc_insertion_point(field_set:contact_info.register_body_type)
}

// optional string register_body = 25;
inline bool contact_info::has_register_body() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void contact_info::set_has_register_body() {
  _has_bits_[0] |= 0x00000020u;
}
inline void contact_info::clear_has_register_body() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void contact_info::clear_register_body() {
  register_body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_register_body();
}
inline const ::std::string& contact_info::register_body() const {
  // @@protoc_insertion_point(field_get:contact_info.register_body)
  return register_body_.GetNoArena();
}
inline void contact_info::set_register_body(const ::std::string& value) {
  set_has_register_body();
  register_body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contact_info.register_body)
}
#if LANG_CXX11
inline void contact_info::set_register_body(::std::string&& value) {
  set_has_register_body();
  register_body_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contact_info.register_body)
}
#endif
inline void contact_info::set_register_body(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_register_body();
  register_body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contact_info.register_body)
}
inline void contact_info::set_register_body(const char* value, size_t size) {
  set_has_register_body();
  register_body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contact_info.register_body)
}
inline ::std::string* contact_info::mutable_register_body() {
  set_has_register_body();
  // @@protoc_insertion_point(field_mutable:contact_info.register_body)
  return register_body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* contact_info::release_register_body() {
  // @@protoc_insertion_point(field_release:contact_info.register_body)
  clear_has_register_body();
  return register_body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void contact_info::set_allocated_register_body(::std::string* register_body) {
  if (register_body != NULL) {
    set_has_register_body();
  } else {
    clear_has_register_body();
  }
  register_body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), register_body);
  // @@protoc_insertion_point(field_set_allocated:contact_info.register_body)
}

// optional int32 tag26 = 26;
inline bool contact_info::has_tag26() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void contact_info::set_has_tag26() {
  _has_bits_[1] |= 0x00000010u;
}
inline void contact_info::clear_has_tag26() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void contact_info::clear_tag26() {
  tag26_ = 0;
  clear_has_tag26();
}
inline ::google::protobuf::int32 contact_info::tag26() const {
  // @@protoc_insertion_point(field_get:contact_info.tag26)
  return tag26_;
}
inline void contact_info::set_tag26(::google::protobuf::int32 value) {
  set_has_tag26();
  tag26_ = value;
  // @@protoc_insertion_point(field_set:contact_info.tag26)
}

// optional int32 src = 27;
inline bool contact_info::has_src() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void contact_info::set_has_src() {
  _has_bits_[1] |= 0x00000020u;
}
inline void contact_info::clear_has_src() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void contact_info::clear_src() {
  src_ = 0;
  clear_has_src();
}
inline ::google::protobuf::int32 contact_info::src() const {
  // @@protoc_insertion_point(field_get:contact_info.src)
  return src_;
}
inline void contact_info::set_src(::google::protobuf::int32 value) {
  set_has_src();
  src_ = value;
  // @@protoc_insertion_point(field_set:contact_info.src)
}

// optional string lastMsgTime = 29;
inline bool contact_info::has_lastmsgtime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void contact_info::set_has_lastmsgtime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void contact_info::clear_has_lastmsgtime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void contact_info::clear_lastmsgtime() {
  lastmsgtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lastmsgtime();
}
inline const ::std::string& contact_info::lastmsgtime() const {
  // @@protoc_insertion_point(field_get:contact_info.lastMsgTime)
  return lastmsgtime_.GetNoArena();
}
inline void contact_info::set_lastmsgtime(const ::std::string& value) {
  set_has_lastmsgtime();
  lastmsgtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contact_info.lastMsgTime)
}
#if LANG_CXX11
inline void contact_info::set_lastmsgtime(::std::string&& value) {
  set_has_lastmsgtime();
  lastmsgtime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contact_info.lastMsgTime)
}
#endif
inline void contact_info::set_lastmsgtime(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_lastmsgtime();
  lastmsgtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contact_info.lastMsgTime)
}
inline void contact_info::set_lastmsgtime(const char* value, size_t size) {
  set_has_lastmsgtime();
  lastmsgtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contact_info.lastMsgTime)
}
inline ::std::string* contact_info::mutable_lastmsgtime() {
  set_has_lastmsgtime();
  // @@protoc_insertion_point(field_mutable:contact_info.lastMsgTime)
  return lastmsgtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* contact_info::release_lastmsgtime() {
  // @@protoc_insertion_point(field_release:contact_info.lastMsgTime)
  clear_has_lastmsgtime();
  return lastmsgtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void contact_info::set_allocated_lastmsgtime(::std::string* lastmsgtime) {
  if (lastmsgtime != NULL) {
    set_has_lastmsgtime();
  } else {
    clear_has_lastmsgtime();
  }
  lastmsgtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lastmsgtime);
  // @@protoc_insertion_point(field_set_allocated:contact_info.lastMsgTime)
}

// optional string alias = 30;
inline bool contact_info::has_alias() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void contact_info::set_has_alias() {
  _has_bits_[0] |= 0x00000080u;
}
inline void contact_info::clear_has_alias() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void contact_info::clear_alias() {
  alias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alias();
}
inline const ::std::string& contact_info::alias() const {
  // @@protoc_insertion_point(field_get:contact_info.alias)
  return alias_.GetNoArena();
}
inline void contact_info::set_alias(const ::std::string& value) {
  set_has_alias();
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contact_info.alias)
}
#if LANG_CXX11
inline void contact_info::set_alias(::std::string&& value) {
  set_has_alias();
  alias_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contact_info.alias)
}
#endif
inline void contact_info::set_alias(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alias();
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contact_info.alias)
}
inline void contact_info::set_alias(const char* value, size_t size) {
  set_has_alias();
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contact_info.alias)
}
inline ::std::string* contact_info::mutable_alias() {
  set_has_alias();
  // @@protoc_insertion_point(field_mutable:contact_info.alias)
  return alias_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* contact_info::release_alias() {
  // @@protoc_insertion_point(field_release:contact_info.alias)
  clear_has_alias();
  return alias_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void contact_info::set_allocated_alias(::std::string* alias) {
  if (alias != NULL) {
    set_has_alias();
  } else {
    clear_has_alias();
  }
  alias_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alias);
  // @@protoc_insertion_point(field_set_allocated:contact_info.alias)
}

// optional string chatroomOwnerWxid = 31;
inline bool contact_info::has_chatroomownerwxid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void contact_info::set_has_chatroomownerwxid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void contact_info::clear_has_chatroomownerwxid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void contact_info::clear_chatroomownerwxid() {
  chatroomownerwxid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chatroomownerwxid();
}
inline const ::std::string& contact_info::chatroomownerwxid() const {
  // @@protoc_insertion_point(field_get:contact_info.chatroomOwnerWxid)
  return chatroomownerwxid_.GetNoArena();
}
inline void contact_info::set_chatroomownerwxid(const ::std::string& value) {
  set_has_chatroomownerwxid();
  chatroomownerwxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contact_info.chatroomOwnerWxid)
}
#if LANG_CXX11
inline void contact_info::set_chatroomownerwxid(::std::string&& value) {
  set_has_chatroomownerwxid();
  chatroomownerwxid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contact_info.chatroomOwnerWxid)
}
#endif
inline void contact_info::set_chatroomownerwxid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chatroomownerwxid();
  chatroomownerwxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contact_info.chatroomOwnerWxid)
}
inline void contact_info::set_chatroomownerwxid(const char* value, size_t size) {
  set_has_chatroomownerwxid();
  chatroomownerwxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contact_info.chatroomOwnerWxid)
}
inline ::std::string* contact_info::mutable_chatroomownerwxid() {
  set_has_chatroomownerwxid();
  // @@protoc_insertion_point(field_mutable:contact_info.chatroomOwnerWxid)
  return chatroomownerwxid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* contact_info::release_chatroomownerwxid() {
  // @@protoc_insertion_point(field_release:contact_info.chatroomOwnerWxid)
  clear_has_chatroomownerwxid();
  return chatroomownerwxid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void contact_info::set_allocated_chatroomownerwxid(::std::string* chatroomownerwxid) {
  if (chatroomownerwxid != NULL) {
    set_has_chatroomownerwxid();
  } else {
    clear_has_chatroomownerwxid();
  }
  chatroomownerwxid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chatroomownerwxid);
  // @@protoc_insertion_point(field_set_allocated:contact_info.chatroomOwnerWxid)
}

// optional int32 tag33 = 33;
inline bool contact_info::has_tag33() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void contact_info::set_has_tag33() {
  _has_bits_[1] |= 0x00000040u;
}
inline void contact_info::clear_has_tag33() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void contact_info::clear_tag33() {
  tag33_ = 0;
  clear_has_tag33();
}
inline ::google::protobuf::int32 contact_info::tag33() const {
  // @@protoc_insertion_point(field_get:contact_info.tag33)
  return tag33_;
}
inline void contact_info::set_tag33(::google::protobuf::int32 value) {
  set_has_tag33();
  tag33_ = value;
  // @@protoc_insertion_point(field_set:contact_info.tag33)
}

// optional int32 tag34 = 34;
inline bool contact_info::has_tag34() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void contact_info::set_has_tag34() {
  _has_bits_[1] |= 0x00000080u;
}
inline void contact_info::clear_has_tag34() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void contact_info::clear_tag34() {
  tag34_ = 0;
  clear_has_tag34();
}
inline ::google::protobuf::int32 contact_info::tag34() const {
  // @@protoc_insertion_point(field_get:contact_info.tag34)
  return tag34_;
}
inline void contact_info::set_tag34(::google::protobuf::int32 value) {
  set_has_tag34();
  tag34_ = value;
  // @@protoc_insertion_point(field_set:contact_info.tag34)
}

// optional int32 tag35 = 35;
inline bool contact_info::has_tag35() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void contact_info::set_has_tag35() {
  _has_bits_[1] |= 0x00000100u;
}
inline void contact_info::clear_has_tag35() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void contact_info::clear_tag35() {
  tag35_ = 0;
  clear_has_tag35();
}
inline ::google::protobuf::int32 contact_info::tag35() const {
  // @@protoc_insertion_point(field_get:contact_info.tag35)
  return tag35_;
}
inline void contact_info::set_tag35(::google::protobuf::int32 value) {
  set_has_tag35();
  tag35_ = value;
  // @@protoc_insertion_point(field_set:contact_info.tag35)
}

// optional bytes tag37 = 37;
inline bool contact_info::has_tag37() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void contact_info::set_has_tag37() {
  _has_bits_[0] |= 0x00000200u;
}
inline void contact_info::clear_has_tag37() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void contact_info::clear_tag37() {
  tag37_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag37();
}
inline const ::std::string& contact_info::tag37() const {
  // @@protoc_insertion_point(field_get:contact_info.tag37)
  return tag37_.GetNoArena();
}
inline void contact_info::set_tag37(const ::std::string& value) {
  set_has_tag37();
  tag37_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contact_info.tag37)
}
#if LANG_CXX11
inline void contact_info::set_tag37(::std::string&& value) {
  set_has_tag37();
  tag37_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contact_info.tag37)
}
#endif
inline void contact_info::set_tag37(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag37();
  tag37_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contact_info.tag37)
}
inline void contact_info::set_tag37(const void* value, size_t size) {
  set_has_tag37();
  tag37_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contact_info.tag37)
}
inline ::std::string* contact_info::mutable_tag37() {
  set_has_tag37();
  // @@protoc_insertion_point(field_mutable:contact_info.tag37)
  return tag37_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* contact_info::release_tag37() {
  // @@protoc_insertion_point(field_release:contact_info.tag37)
  clear_has_tag37();
  return tag37_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void contact_info::set_allocated_tag37(::std::string* tag37) {
  if (tag37 != NULL) {
    set_has_tag37();
  } else {
    clear_has_tag37();
  }
  tag37_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag37);
  // @@protoc_insertion_point(field_set_allocated:contact_info.tag37)
}

// optional string country = 38;
inline bool contact_info::has_country() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void contact_info::set_has_country() {
  _has_bits_[0] |= 0x00000400u;
}
inline void contact_info::clear_has_country() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void contact_info::clear_country() {
  country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_country();
}
inline const ::std::string& contact_info::country() const {
  // @@protoc_insertion_point(field_get:contact_info.country)
  return country_.GetNoArena();
}
inline void contact_info::set_country(const ::std::string& value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contact_info.country)
}
#if LANG_CXX11
inline void contact_info::set_country(::std::string&& value) {
  set_has_country();
  country_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contact_info.country)
}
#endif
inline void contact_info::set_country(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contact_info.country)
}
inline void contact_info::set_country(const char* value, size_t size) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contact_info.country)
}
inline ::std::string* contact_info::mutable_country() {
  set_has_country();
  // @@protoc_insertion_point(field_mutable:contact_info.country)
  return country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* contact_info::release_country() {
  // @@protoc_insertion_point(field_release:contact_info.country)
  clear_has_country();
  return country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void contact_info::set_allocated_country(::std::string* country) {
  if (country != NULL) {
    set_has_country();
  } else {
    clear_has_country();
  }
  country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country);
  // @@protoc_insertion_point(field_set_allocated:contact_info.country)
}

// optional string avatar_big = 39;
inline bool contact_info::has_avatar_big() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void contact_info::set_has_avatar_big() {
  _has_bits_[0] |= 0x00000800u;
}
inline void contact_info::clear_has_avatar_big() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void contact_info::clear_avatar_big() {
  avatar_big_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_avatar_big();
}
inline const ::std::string& contact_info::avatar_big() const {
  // @@protoc_insertion_point(field_get:contact_info.avatar_big)
  return avatar_big_.GetNoArena();
}
inline void contact_info::set_avatar_big(const ::std::string& value) {
  set_has_avatar_big();
  avatar_big_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contact_info.avatar_big)
}
#if LANG_CXX11
inline void contact_info::set_avatar_big(::std::string&& value) {
  set_has_avatar_big();
  avatar_big_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contact_info.avatar_big)
}
#endif
inline void contact_info::set_avatar_big(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_avatar_big();
  avatar_big_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contact_info.avatar_big)
}
inline void contact_info::set_avatar_big(const char* value, size_t size) {
  set_has_avatar_big();
  avatar_big_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contact_info.avatar_big)
}
inline ::std::string* contact_info::mutable_avatar_big() {
  set_has_avatar_big();
  // @@protoc_insertion_point(field_mutable:contact_info.avatar_big)
  return avatar_big_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* contact_info::release_avatar_big() {
  // @@protoc_insertion_point(field_release:contact_info.avatar_big)
  clear_has_avatar_big();
  return avatar_big_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void contact_info::set_allocated_avatar_big(::std::string* avatar_big) {
  if (avatar_big != NULL) {
    set_has_avatar_big();
  } else {
    clear_has_avatar_big();
  }
  avatar_big_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), avatar_big);
  // @@protoc_insertion_point(field_set_allocated:contact_info.avatar_big)
}

// optional string avatar_small = 40;
inline bool contact_info::has_avatar_small() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void contact_info::set_has_avatar_small() {
  _has_bits_[0] |= 0x00001000u;
}
inline void contact_info::clear_has_avatar_small() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void contact_info::clear_avatar_small() {
  avatar_small_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_avatar_small();
}
inline const ::std::string& contact_info::avatar_small() const {
  // @@protoc_insertion_point(field_get:contact_info.avatar_small)
  return avatar_small_.GetNoArena();
}
inline void contact_info::set_avatar_small(const ::std::string& value) {
  set_has_avatar_small();
  avatar_small_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contact_info.avatar_small)
}
#if LANG_CXX11
inline void contact_info::set_avatar_small(::std::string&& value) {
  set_has_avatar_small();
  avatar_small_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contact_info.avatar_small)
}
#endif
inline void contact_info::set_avatar_small(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_avatar_small();
  avatar_small_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contact_info.avatar_small)
}
inline void contact_info::set_avatar_small(const char* value, size_t size) {
  set_has_avatar_small();
  avatar_small_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contact_info.avatar_small)
}
inline ::std::string* contact_info::mutable_avatar_small() {
  set_has_avatar_small();
  // @@protoc_insertion_point(field_mutable:contact_info.avatar_small)
  return avatar_small_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* contact_info::release_avatar_small() {
  // @@protoc_insertion_point(field_release:contact_info.avatar_small)
  clear_has_avatar_small();
  return avatar_small_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void contact_info::set_allocated_avatar_small(::std::string* avatar_small) {
  if (avatar_small != NULL) {
    set_has_avatar_small();
  } else {
    clear_has_avatar_small();
  }
  avatar_small_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), avatar_small);
  // @@protoc_insertion_point(field_set_allocated:contact_info.avatar_small)
}

// optional bytes tag42 = 42;
inline bool contact_info::has_tag42() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void contact_info::set_has_tag42() {
  _has_bits_[0] |= 0x00002000u;
}
inline void contact_info::clear_has_tag42() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void contact_info::clear_tag42() {
  tag42_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag42();
}
inline const ::std::string& contact_info::tag42() const {
  // @@protoc_insertion_point(field_get:contact_info.tag42)
  return tag42_.GetNoArena();
}
inline void contact_info::set_tag42(const ::std::string& value) {
  set_has_tag42();
  tag42_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contact_info.tag42)
}
#if LANG_CXX11
inline void contact_info::set_tag42(::std::string&& value) {
  set_has_tag42();
  tag42_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contact_info.tag42)
}
#endif
inline void contact_info::set_tag42(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag42();
  tag42_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contact_info.tag42)
}
inline void contact_info::set_tag42(const void* value, size_t size) {
  set_has_tag42();
  tag42_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contact_info.tag42)
}
inline ::std::string* contact_info::mutable_tag42() {
  set_has_tag42();
  // @@protoc_insertion_point(field_mutable:contact_info.tag42)
  return tag42_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* contact_info::release_tag42() {
  // @@protoc_insertion_point(field_release:contact_info.tag42)
  clear_has_tag42();
  return tag42_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void contact_info::set_allocated_tag42(::std::string* tag42) {
  if (tag42 != NULL) {
    set_has_tag42();
  } else {
    clear_has_tag42();
  }
  tag42_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag42);
  // @@protoc_insertion_point(field_set_allocated:contact_info.tag42)
}

// optional string v1_name = 45;
inline bool contact_info::has_v1_name() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void contact_info::set_has_v1_name() {
  _has_bits_[0] |= 0x00004000u;
}
inline void contact_info::clear_has_v1_name() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void contact_info::clear_v1_name() {
  v1_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_v1_name();
}
inline const ::std::string& contact_info::v1_name() const {
  // @@protoc_insertion_point(field_get:contact_info.v1_name)
  return v1_name_.GetNoArena();
}
inline void contact_info::set_v1_name(const ::std::string& value) {
  set_has_v1_name();
  v1_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contact_info.v1_name)
}
#if LANG_CXX11
inline void contact_info::set_v1_name(::std::string&& value) {
  set_has_v1_name();
  v1_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contact_info.v1_name)
}
#endif
inline void contact_info::set_v1_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_v1_name();
  v1_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contact_info.v1_name)
}
inline void contact_info::set_v1_name(const char* value, size_t size) {
  set_has_v1_name();
  v1_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contact_info.v1_name)
}
inline ::std::string* contact_info::mutable_v1_name() {
  set_has_v1_name();
  // @@protoc_insertion_point(field_mutable:contact_info.v1_name)
  return v1_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* contact_info::release_v1_name() {
  // @@protoc_insertion_point(field_release:contact_info.v1_name)
  clear_has_v1_name();
  return v1_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void contact_info::set_allocated_v1_name(::std::string* v1_name) {
  if (v1_name != NULL) {
    set_has_v1_name();
  } else {
    clear_has_v1_name();
  }
  v1_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), v1_name);
  // @@protoc_insertion_point(field_set_allocated:contact_info.v1_name)
}

// optional bytes tag50 = 50;
inline bool contact_info::has_tag50() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void contact_info::set_has_tag50() {
  _has_bits_[0] |= 0x00008000u;
}
inline void contact_info::clear_has_tag50() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void contact_info::clear_tag50() {
  tag50_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag50();
}
inline const ::std::string& contact_info::tag50() const {
  // @@protoc_insertion_point(field_get:contact_info.tag50)
  return tag50_.GetNoArena();
}
inline void contact_info::set_tag50(const ::std::string& value) {
  set_has_tag50();
  tag50_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contact_info.tag50)
}
#if LANG_CXX11
inline void contact_info::set_tag50(::std::string&& value) {
  set_has_tag50();
  tag50_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contact_info.tag50)
}
#endif
inline void contact_info::set_tag50(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag50();
  tag50_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contact_info.tag50)
}
inline void contact_info::set_tag50(const void* value, size_t size) {
  set_has_tag50();
  tag50_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contact_info.tag50)
}
inline ::std::string* contact_info::mutable_tag50() {
  set_has_tag50();
  // @@protoc_insertion_point(field_mutable:contact_info.tag50)
  return tag50_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* contact_info::release_tag50() {
  // @@protoc_insertion_point(field_release:contact_info.tag50)
  clear_has_tag50();
  return tag50_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void contact_info::set_allocated_tag50(::std::string* tag50) {
  if (tag50 != NULL) {
    set_has_tag50();
  } else {
    clear_has_tag50();
  }
  tag50_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag50);
  // @@protoc_insertion_point(field_set_allocated:contact_info.tag50)
}

// optional int32 chatroom_serverVer = 53;
inline bool contact_info::has_chatroom_serverver() const {
  return (_has_bits_[1] & 0x00000200u) != 0;
}
inline void contact_info::set_has_chatroom_serverver() {
  _has_bits_[1] |= 0x00000200u;
}
inline void contact_info::clear_has_chatroom_serverver() {
  _has_bits_[1] &= ~0x00000200u;
}
inline void contact_info::clear_chatroom_serverver() {
  chatroom_serverver_ = 0;
  clear_has_chatroom_serverver();
}
inline ::google::protobuf::int32 contact_info::chatroom_serverver() const {
  // @@protoc_insertion_point(field_get:contact_info.chatroom_serverVer)
  return chatroom_serverver_;
}
inline void contact_info::set_chatroom_serverver(::google::protobuf::int32 value) {
  set_has_chatroom_serverver();
  chatroom_serverver_ = value;
  // @@protoc_insertion_point(field_set:contact_info.chatroom_serverVer)
}

// optional int32 chatroom_max_member = 55;
inline bool contact_info::has_chatroom_max_member() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void contact_info::set_has_chatroom_max_member() {
  _has_bits_[1] |= 0x00000400u;
}
inline void contact_info::clear_has_chatroom_max_member() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void contact_info::clear_chatroom_max_member() {
  chatroom_max_member_ = 0;
  clear_has_chatroom_max_member();
}
inline ::google::protobuf::int32 contact_info::chatroom_max_member() const {
  // @@protoc_insertion_point(field_get:contact_info.chatroom_max_member)
  return chatroom_max_member_;
}
inline void contact_info::set_chatroom_max_member(::google::protobuf::int32 value) {
  set_has_chatroom_max_member();
  chatroom_max_member_ = value;
  // @@protoc_insertion_point(field_set:contact_info.chatroom_max_member)
}

// optional int32 tag56 = 56;
inline bool contact_info::has_tag56() const {
  return (_has_bits_[1] & 0x00000800u) != 0;
}
inline void contact_info::set_has_tag56() {
  _has_bits_[1] |= 0x00000800u;
}
inline void contact_info::clear_has_tag56() {
  _has_bits_[1] &= ~0x00000800u;
}
inline void contact_info::clear_tag56() {
  tag56_ = 0;
  clear_has_tag56();
}
inline ::google::protobuf::int32 contact_info::tag56() const {
  // @@protoc_insertion_point(field_get:contact_info.tag56)
  return tag56_;
}
inline void contact_info::set_tag56(::google::protobuf::int32 value) {
  set_has_tag56();
  tag56_ = value;
  // @@protoc_insertion_point(field_set:contact_info.tag56)
}

// optional .contact_info.GroupMemberList group_member_list = 57;
inline bool contact_info::has_group_member_list() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void contact_info::set_has_group_member_list() {
  _has_bits_[0] |= 0x01000000u;
}
inline void contact_info::clear_has_group_member_list() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void contact_info::clear_group_member_list() {
  if (group_member_list_ != NULL) group_member_list_->::contact_info_GroupMemberList::Clear();
  clear_has_group_member_list();
}
inline const ::contact_info_GroupMemberList& contact_info::group_member_list() const {
  // @@protoc_insertion_point(field_get:contact_info.group_member_list)
  return group_member_list_ != NULL ? *group_member_list_
                         : *::contact_info_GroupMemberList::internal_default_instance();
}
inline ::contact_info_GroupMemberList* contact_info::mutable_group_member_list() {
  set_has_group_member_list();
  if (group_member_list_ == NULL) {
    group_member_list_ = new ::contact_info_GroupMemberList;
  }
  // @@protoc_insertion_point(field_mutable:contact_info.group_member_list)
  return group_member_list_;
}
inline ::contact_info_GroupMemberList* contact_info::release_group_member_list() {
  // @@protoc_insertion_point(field_release:contact_info.group_member_list)
  clear_has_group_member_list();
  ::contact_info_GroupMemberList* temp = group_member_list_;
  group_member_list_ = NULL;
  return temp;
}
inline void contact_info::set_allocated_group_member_list(::contact_info_GroupMemberList* group_member_list) {
  delete group_member_list_;
  group_member_list_ = group_member_list;
  if (group_member_list) {
    set_has_group_member_list();
  } else {
    clear_has_group_member_list();
  }
  // @@protoc_insertion_point(field_set_allocated:contact_info.group_member_list)
}

// optional int32 tag58 = 58;
inline bool contact_info::has_tag58() const {
  return (_has_bits_[1] & 0x00001000u) != 0;
}
inline void contact_info::set_has_tag58() {
  _has_bits_[1] |= 0x00001000u;
}
inline void contact_info::clear_has_tag58() {
  _has_bits_[1] &= ~0x00001000u;
}
inline void contact_info::clear_tag58() {
  tag58_ = 0;
  clear_has_tag58();
}
inline ::google::protobuf::int32 contact_info::tag58() const {
  // @@protoc_insertion_point(field_get:contact_info.tag58)
  return tag58_;
}
inline void contact_info::set_tag58(::google::protobuf::int32 value) {
  set_has_tag58();
  tag58_ = value;
  // @@protoc_insertion_point(field_set:contact_info.tag58)
}

// optional bytes tag62 = 62;
inline bool contact_info::has_tag62() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void contact_info::set_has_tag62() {
  _has_bits_[0] |= 0x00010000u;
}
inline void contact_info::clear_has_tag62() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void contact_info::clear_tag62() {
  tag62_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag62();
}
inline const ::std::string& contact_info::tag62() const {
  // @@protoc_insertion_point(field_get:contact_info.tag62)
  return tag62_.GetNoArena();
}
inline void contact_info::set_tag62(const ::std::string& value) {
  set_has_tag62();
  tag62_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:contact_info.tag62)
}
#if LANG_CXX11
inline void contact_info::set_tag62(::std::string&& value) {
  set_has_tag62();
  tag62_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:contact_info.tag62)
}
#endif
inline void contact_info::set_tag62(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag62();
  tag62_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:contact_info.tag62)
}
inline void contact_info::set_tag62(const void* value, size_t size) {
  set_has_tag62();
  tag62_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:contact_info.tag62)
}
inline ::std::string* contact_info::mutable_tag62() {
  set_has_tag62();
  // @@protoc_insertion_point(field_mutable:contact_info.tag62)
  return tag62_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* contact_info::release_tag62() {
  // @@protoc_insertion_point(field_release:contact_info.tag62)
  clear_has_tag62();
  return tag62_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void contact_info::set_allocated_tag62(::std::string* tag62) {
  if (tag62 != NULL) {
    set_has_tag62();
  } else {
    clear_has_tag62();
  }
  tag62_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag62);
  // @@protoc_insertion_point(field_set_allocated:contact_info.tag62)
}

// optional int32 tag64 = 64;
inline bool contact_info::has_tag64() const {
  return (_has_bits_[1] & 0x00002000u) != 0;
}
inline void contact_info::set_has_tag64() {
  _has_bits_[1] |= 0x00002000u;
}
inline void contact_info::clear_has_tag64() {
  _has_bits_[1] &= ~0x00002000u;
}
inline void contact_info::clear_tag64() {
  tag64_ = 0;
  clear_has_tag64();
}
inline ::google::protobuf::int32 contact_info::tag64() const {
  // @@protoc_insertion_point(field_get:contact_info.tag64)
  return tag64_;
}
inline void contact_info::set_tag64(::google::protobuf::int32 value) {
  set_has_tag64();
  tag64_ = value;
  // @@protoc_insertion_point(field_set:contact_info.tag64)
}

// optional int32 tag65 = 65;
inline bool contact_info::has_tag65() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void contact_info::set_has_tag65() {
  _has_bits_[1] |= 0x00004000u;
}
inline void contact_info::clear_has_tag65() {
  _has_bits_[1] &= ~0x00004000u;
}
inline void contact_info::clear_tag65() {
  tag65_ = 0;
  clear_has_tag65();
}
inline ::google::protobuf::int32 contact_info::tag65() const {
  // @@protoc_insertion_point(field_get:contact_info.tag65)
  return tag65_;
}
inline void contact_info::set_tag65(::google::protobuf::int32 value) {
  set_has_tag65();
  tag65_ = value;
  // @@protoc_insertion_point(field_set:contact_info.tag65)
}

// optional int32 tag66 = 66;
inline bool contact_info::has_tag66() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void contact_info::set_has_tag66() {
  _has_bits_[1] |= 0x00008000u;
}
inline void contact_info::clear_has_tag66() {
  _has_bits_[1] &= ~0x00008000u;
}
inline void contact_info::clear_tag66() {
  tag66_ = 0;
  clear_has_tag66();
}
inline ::google::protobuf::int32 contact_info::tag66() const {
  // @@protoc_insertion_point(field_get:contact_info.tag66)
  return tag66_;
}
inline void contact_info::set_tag66(::google::protobuf::int32 value) {
  set_has_tag66();
  tag66_ = value;
  // @@protoc_insertion_point(field_set:contact_info.tag66)
}

// optional int32 tag67 = 67;
inline bool contact_info::has_tag67() const {
  return (_has_bits_[1] & 0x00010000u) != 0;
}
inline void contact_info::set_has_tag67() {
  _has_bits_[1] |= 0x00010000u;
}
inline void contact_info::clear_has_tag67() {
  _has_bits_[1] &= ~0x00010000u;
}
inline void contact_info::clear_tag67() {
  tag67_ = 0;
  clear_has_tag67();
}
inline ::google::protobuf::int32 contact_info::tag67() const {
  // @@protoc_insertion_point(field_get:contact_info.tag67)
  return tag67_;
}
inline void contact_info::set_tag67(::google::protobuf::int32 value) {
  set_has_tag67();
  tag67_ = value;
  // @@protoc_insertion_point(field_set:contact_info.tag67)
}

// -------------------------------------------------------------------

// ManualAuthAccountRequest_AesKey

// required int32 len = 1;
inline bool ManualAuthAccountRequest_AesKey::has_len() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManualAuthAccountRequest_AesKey::set_has_len() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManualAuthAccountRequest_AesKey::clear_has_len() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManualAuthAccountRequest_AesKey::clear_len() {
  len_ = 0;
  clear_has_len();
}
inline ::google::protobuf::int32 ManualAuthAccountRequest_AesKey::len() const {
  // @@protoc_insertion_point(field_get:ManualAuthAccountRequest.AesKey.len)
  return len_;
}
inline void ManualAuthAccountRequest_AesKey::set_len(::google::protobuf::int32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:ManualAuthAccountRequest.AesKey.len)
}

// required bytes key = 2;
inline bool ManualAuthAccountRequest_AesKey::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManualAuthAccountRequest_AesKey::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManualAuthAccountRequest_AesKey::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManualAuthAccountRequest_AesKey::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& ManualAuthAccountRequest_AesKey::key() const {
  // @@protoc_insertion_point(field_get:ManualAuthAccountRequest.AesKey.key)
  return key_.GetNoArena();
}
inline void ManualAuthAccountRequest_AesKey::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthAccountRequest.AesKey.key)
}
#if LANG_CXX11
inline void ManualAuthAccountRequest_AesKey::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthAccountRequest.AesKey.key)
}
#endif
inline void ManualAuthAccountRequest_AesKey::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthAccountRequest.AesKey.key)
}
inline void ManualAuthAccountRequest_AesKey::set_key(const void* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthAccountRequest.AesKey.key)
}
inline ::std::string* ManualAuthAccountRequest_AesKey::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:ManualAuthAccountRequest.AesKey.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthAccountRequest_AesKey::release_key() {
  // @@protoc_insertion_point(field_release:ManualAuthAccountRequest.AesKey.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthAccountRequest_AesKey::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthAccountRequest.AesKey.key)
}

// -------------------------------------------------------------------

// ManualAuthAccountRequest_Ecdh_EcdhKey

// required int32 len = 1;
inline bool ManualAuthAccountRequest_Ecdh_EcdhKey::has_len() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManualAuthAccountRequest_Ecdh_EcdhKey::set_has_len() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManualAuthAccountRequest_Ecdh_EcdhKey::clear_has_len() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManualAuthAccountRequest_Ecdh_EcdhKey::clear_len() {
  len_ = 0;
  clear_has_len();
}
inline ::google::protobuf::int32 ManualAuthAccountRequest_Ecdh_EcdhKey::len() const {
  // @@protoc_insertion_point(field_get:ManualAuthAccountRequest.Ecdh.EcdhKey.len)
  return len_;
}
inline void ManualAuthAccountRequest_Ecdh_EcdhKey::set_len(::google::protobuf::int32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:ManualAuthAccountRequest.Ecdh.EcdhKey.len)
}

// required bytes key = 2;
inline bool ManualAuthAccountRequest_Ecdh_EcdhKey::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManualAuthAccountRequest_Ecdh_EcdhKey::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManualAuthAccountRequest_Ecdh_EcdhKey::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManualAuthAccountRequest_Ecdh_EcdhKey::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& ManualAuthAccountRequest_Ecdh_EcdhKey::key() const {
  // @@protoc_insertion_point(field_get:ManualAuthAccountRequest.Ecdh.EcdhKey.key)
  return key_.GetNoArena();
}
inline void ManualAuthAccountRequest_Ecdh_EcdhKey::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthAccountRequest.Ecdh.EcdhKey.key)
}
#if LANG_CXX11
inline void ManualAuthAccountRequest_Ecdh_EcdhKey::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthAccountRequest.Ecdh.EcdhKey.key)
}
#endif
inline void ManualAuthAccountRequest_Ecdh_EcdhKey::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthAccountRequest.Ecdh.EcdhKey.key)
}
inline void ManualAuthAccountRequest_Ecdh_EcdhKey::set_key(const void* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthAccountRequest.Ecdh.EcdhKey.key)
}
inline ::std::string* ManualAuthAccountRequest_Ecdh_EcdhKey::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:ManualAuthAccountRequest.Ecdh.EcdhKey.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthAccountRequest_Ecdh_EcdhKey::release_key() {
  // @@protoc_insertion_point(field_release:ManualAuthAccountRequest.Ecdh.EcdhKey.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthAccountRequest_Ecdh_EcdhKey::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthAccountRequest.Ecdh.EcdhKey.key)
}

// -------------------------------------------------------------------

// ManualAuthAccountRequest_Ecdh

// required int32 nid = 1;
inline bool ManualAuthAccountRequest_Ecdh::has_nid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManualAuthAccountRequest_Ecdh::set_has_nid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManualAuthAccountRequest_Ecdh::clear_has_nid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManualAuthAccountRequest_Ecdh::clear_nid() {
  nid_ = 0;
  clear_has_nid();
}
inline ::google::protobuf::int32 ManualAuthAccountRequest_Ecdh::nid() const {
  // @@protoc_insertion_point(field_get:ManualAuthAccountRequest.Ecdh.nid)
  return nid_;
}
inline void ManualAuthAccountRequest_Ecdh::set_nid(::google::protobuf::int32 value) {
  set_has_nid();
  nid_ = value;
  // @@protoc_insertion_point(field_set:ManualAuthAccountRequest.Ecdh.nid)
}

// required .ManualAuthAccountRequest.Ecdh.EcdhKey ecdhKey = 2;
inline bool ManualAuthAccountRequest_Ecdh::has_ecdhkey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManualAuthAccountRequest_Ecdh::set_has_ecdhkey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManualAuthAccountRequest_Ecdh::clear_has_ecdhkey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManualAuthAccountRequest_Ecdh::clear_ecdhkey() {
  if (ecdhkey_ != NULL) ecdhkey_->::ManualAuthAccountRequest_Ecdh_EcdhKey::Clear();
  clear_has_ecdhkey();
}
inline const ::ManualAuthAccountRequest_Ecdh_EcdhKey& ManualAuthAccountRequest_Ecdh::ecdhkey() const {
  // @@protoc_insertion_point(field_get:ManualAuthAccountRequest.Ecdh.ecdhKey)
  return ecdhkey_ != NULL ? *ecdhkey_
                         : *::ManualAuthAccountRequest_Ecdh_EcdhKey::internal_default_instance();
}
inline ::ManualAuthAccountRequest_Ecdh_EcdhKey* ManualAuthAccountRequest_Ecdh::mutable_ecdhkey() {
  set_has_ecdhkey();
  if (ecdhkey_ == NULL) {
    ecdhkey_ = new ::ManualAuthAccountRequest_Ecdh_EcdhKey;
  }
  // @@protoc_insertion_point(field_mutable:ManualAuthAccountRequest.Ecdh.ecdhKey)
  return ecdhkey_;
}
inline ::ManualAuthAccountRequest_Ecdh_EcdhKey* ManualAuthAccountRequest_Ecdh::release_ecdhkey() {
  // @@protoc_insertion_point(field_release:ManualAuthAccountRequest.Ecdh.ecdhKey)
  clear_has_ecdhkey();
  ::ManualAuthAccountRequest_Ecdh_EcdhKey* temp = ecdhkey_;
  ecdhkey_ = NULL;
  return temp;
}
inline void ManualAuthAccountRequest_Ecdh::set_allocated_ecdhkey(::ManualAuthAccountRequest_Ecdh_EcdhKey* ecdhkey) {
  delete ecdhkey_;
  ecdhkey_ = ecdhkey;
  if (ecdhkey) {
    set_has_ecdhkey();
  } else {
    clear_has_ecdhkey();
  }
  // @@protoc_insertion_point(field_set_allocated:ManualAuthAccountRequest.Ecdh.ecdhKey)
}

// -------------------------------------------------------------------

// ManualAuthAccountRequest

// required .ManualAuthAccountRequest.AesKey aes = 1;
inline bool ManualAuthAccountRequest::has_aes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ManualAuthAccountRequest::set_has_aes() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ManualAuthAccountRequest::clear_has_aes() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ManualAuthAccountRequest::clear_aes() {
  if (aes_ != NULL) aes_->::ManualAuthAccountRequest_AesKey::Clear();
  clear_has_aes();
}
inline const ::ManualAuthAccountRequest_AesKey& ManualAuthAccountRequest::aes() const {
  // @@protoc_insertion_point(field_get:ManualAuthAccountRequest.aes)
  return aes_ != NULL ? *aes_
                         : *::ManualAuthAccountRequest_AesKey::internal_default_instance();
}
inline ::ManualAuthAccountRequest_AesKey* ManualAuthAccountRequest::mutable_aes() {
  set_has_aes();
  if (aes_ == NULL) {
    aes_ = new ::ManualAuthAccountRequest_AesKey;
  }
  // @@protoc_insertion_point(field_mutable:ManualAuthAccountRequest.aes)
  return aes_;
}
inline ::ManualAuthAccountRequest_AesKey* ManualAuthAccountRequest::release_aes() {
  // @@protoc_insertion_point(field_release:ManualAuthAccountRequest.aes)
  clear_has_aes();
  ::ManualAuthAccountRequest_AesKey* temp = aes_;
  aes_ = NULL;
  return temp;
}
inline void ManualAuthAccountRequest::set_allocated_aes(::ManualAuthAccountRequest_AesKey* aes) {
  delete aes_;
  aes_ = aes;
  if (aes) {
    set_has_aes();
  } else {
    clear_has_aes();
  }
  // @@protoc_insertion_point(field_set_allocated:ManualAuthAccountRequest.aes)
}

// required .ManualAuthAccountRequest.Ecdh ecdh = 2;
inline bool ManualAuthAccountRequest::has_ecdh() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ManualAuthAccountRequest::set_has_ecdh() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ManualAuthAccountRequest::clear_has_ecdh() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ManualAuthAccountRequest::clear_ecdh() {
  if (ecdh_ != NULL) ecdh_->::ManualAuthAccountRequest_Ecdh::Clear();
  clear_has_ecdh();
}
inline const ::ManualAuthAccountRequest_Ecdh& ManualAuthAccountRequest::ecdh() const {
  // @@protoc_insertion_point(field_get:ManualAuthAccountRequest.ecdh)
  return ecdh_ != NULL ? *ecdh_
                         : *::ManualAuthAccountRequest_Ecdh::internal_default_instance();
}
inline ::ManualAuthAccountRequest_Ecdh* ManualAuthAccountRequest::mutable_ecdh() {
  set_has_ecdh();
  if (ecdh_ == NULL) {
    ecdh_ = new ::ManualAuthAccountRequest_Ecdh;
  }
  // @@protoc_insertion_point(field_mutable:ManualAuthAccountRequest.ecdh)
  return ecdh_;
}
inline ::ManualAuthAccountRequest_Ecdh* ManualAuthAccountRequest::release_ecdh() {
  // @@protoc_insertion_point(field_release:ManualAuthAccountRequest.ecdh)
  clear_has_ecdh();
  ::ManualAuthAccountRequest_Ecdh* temp = ecdh_;
  ecdh_ = NULL;
  return temp;
}
inline void ManualAuthAccountRequest::set_allocated_ecdh(::ManualAuthAccountRequest_Ecdh* ecdh) {
  delete ecdh_;
  ecdh_ = ecdh;
  if (ecdh) {
    set_has_ecdh();
  } else {
    clear_has_ecdh();
  }
  // @@protoc_insertion_point(field_set_allocated:ManualAuthAccountRequest.ecdh)
}

// required string userName = 3;
inline bool ManualAuthAccountRequest::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManualAuthAccountRequest::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManualAuthAccountRequest::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManualAuthAccountRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& ManualAuthAccountRequest::username() const {
  // @@protoc_insertion_point(field_get:ManualAuthAccountRequest.userName)
  return username_.GetNoArena();
}
inline void ManualAuthAccountRequest::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthAccountRequest.userName)
}
#if LANG_CXX11
inline void ManualAuthAccountRequest::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthAccountRequest.userName)
}
#endif
inline void ManualAuthAccountRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthAccountRequest.userName)
}
inline void ManualAuthAccountRequest::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthAccountRequest.userName)
}
inline ::std::string* ManualAuthAccountRequest::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:ManualAuthAccountRequest.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthAccountRequest::release_username() {
  // @@protoc_insertion_point(field_release:ManualAuthAccountRequest.userName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthAccountRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthAccountRequest.userName)
}

// required string password1 = 4;
inline bool ManualAuthAccountRequest::has_password1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManualAuthAccountRequest::set_has_password1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManualAuthAccountRequest::clear_has_password1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManualAuthAccountRequest::clear_password1() {
  password1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password1();
}
inline const ::std::string& ManualAuthAccountRequest::password1() const {
  // @@protoc_insertion_point(field_get:ManualAuthAccountRequest.password1)
  return password1_.GetNoArena();
}
inline void ManualAuthAccountRequest::set_password1(const ::std::string& value) {
  set_has_password1();
  password1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthAccountRequest.password1)
}
#if LANG_CXX11
inline void ManualAuthAccountRequest::set_password1(::std::string&& value) {
  set_has_password1();
  password1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthAccountRequest.password1)
}
#endif
inline void ManualAuthAccountRequest::set_password1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password1();
  password1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthAccountRequest.password1)
}
inline void ManualAuthAccountRequest::set_password1(const char* value, size_t size) {
  set_has_password1();
  password1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthAccountRequest.password1)
}
inline ::std::string* ManualAuthAccountRequest::mutable_password1() {
  set_has_password1();
  // @@protoc_insertion_point(field_mutable:ManualAuthAccountRequest.password1)
  return password1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthAccountRequest::release_password1() {
  // @@protoc_insertion_point(field_release:ManualAuthAccountRequest.password1)
  clear_has_password1();
  return password1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthAccountRequest::set_allocated_password1(::std::string* password1) {
  if (password1 != NULL) {
    set_has_password1();
  } else {
    clear_has_password1();
  }
  password1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password1);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthAccountRequest.password1)
}

// required string password2 = 5;
inline bool ManualAuthAccountRequest::has_password2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ManualAuthAccountRequest::set_has_password2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ManualAuthAccountRequest::clear_has_password2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ManualAuthAccountRequest::clear_password2() {
  password2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password2();
}
inline const ::std::string& ManualAuthAccountRequest::password2() const {
  // @@protoc_insertion_point(field_get:ManualAuthAccountRequest.password2)
  return password2_.GetNoArena();
}
inline void ManualAuthAccountRequest::set_password2(const ::std::string& value) {
  set_has_password2();
  password2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthAccountRequest.password2)
}
#if LANG_CXX11
inline void ManualAuthAccountRequest::set_password2(::std::string&& value) {
  set_has_password2();
  password2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthAccountRequest.password2)
}
#endif
inline void ManualAuthAccountRequest::set_password2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password2();
  password2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthAccountRequest.password2)
}
inline void ManualAuthAccountRequest::set_password2(const char* value, size_t size) {
  set_has_password2();
  password2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthAccountRequest.password2)
}
inline ::std::string* ManualAuthAccountRequest::mutable_password2() {
  set_has_password2();
  // @@protoc_insertion_point(field_mutable:ManualAuthAccountRequest.password2)
  return password2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthAccountRequest::release_password2() {
  // @@protoc_insertion_point(field_release:ManualAuthAccountRequest.password2)
  clear_has_password2();
  return password2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthAccountRequest::set_allocated_password2(::std::string* password2) {
  if (password2 != NULL) {
    set_has_password2();
  } else {
    clear_has_password2();
  }
  password2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password2);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthAccountRequest.password2)
}

// -------------------------------------------------------------------

// ManualAuthDeviceRequest__Tag2___Tag2

// optional string tag1 = 1;
inline bool ManualAuthDeviceRequest__Tag2___Tag2::has_tag1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManualAuthDeviceRequest__Tag2___Tag2::set_has_tag1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManualAuthDeviceRequest__Tag2___Tag2::clear_has_tag1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManualAuthDeviceRequest__Tag2___Tag2::clear_tag1() {
  tag1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag1();
}
inline const ::std::string& ManualAuthDeviceRequest__Tag2___Tag2::tag1() const {
  // @@protoc_insertion_point(field_get:ManualAuthDeviceRequest._Tag2.__Tag2.tag1)
  return tag1_.GetNoArena();
}
inline void ManualAuthDeviceRequest__Tag2___Tag2::set_tag1(const ::std::string& value) {
  set_has_tag1();
  tag1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthDeviceRequest._Tag2.__Tag2.tag1)
}
#if LANG_CXX11
inline void ManualAuthDeviceRequest__Tag2___Tag2::set_tag1(::std::string&& value) {
  set_has_tag1();
  tag1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthDeviceRequest._Tag2.__Tag2.tag1)
}
#endif
inline void ManualAuthDeviceRequest__Tag2___Tag2::set_tag1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag1();
  tag1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthDeviceRequest._Tag2.__Tag2.tag1)
}
inline void ManualAuthDeviceRequest__Tag2___Tag2::set_tag1(const char* value, size_t size) {
  set_has_tag1();
  tag1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthDeviceRequest._Tag2.__Tag2.tag1)
}
inline ::std::string* ManualAuthDeviceRequest__Tag2___Tag2::mutable_tag1() {
  set_has_tag1();
  // @@protoc_insertion_point(field_mutable:ManualAuthDeviceRequest._Tag2.__Tag2.tag1)
  return tag1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthDeviceRequest__Tag2___Tag2::release_tag1() {
  // @@protoc_insertion_point(field_release:ManualAuthDeviceRequest._Tag2.__Tag2.tag1)
  clear_has_tag1();
  return tag1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthDeviceRequest__Tag2___Tag2::set_allocated_tag1(::std::string* tag1) {
  if (tag1 != NULL) {
    set_has_tag1();
  } else {
    clear_has_tag1();
  }
  tag1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag1);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthDeviceRequest._Tag2.__Tag2.tag1)
}

// optional string tag2 = 2;
inline bool ManualAuthDeviceRequest__Tag2___Tag2::has_tag2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManualAuthDeviceRequest__Tag2___Tag2::set_has_tag2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManualAuthDeviceRequest__Tag2___Tag2::clear_has_tag2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManualAuthDeviceRequest__Tag2___Tag2::clear_tag2() {
  tag2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag2();
}
inline const ::std::string& ManualAuthDeviceRequest__Tag2___Tag2::tag2() const {
  // @@protoc_insertion_point(field_get:ManualAuthDeviceRequest._Tag2.__Tag2.tag2)
  return tag2_.GetNoArena();
}
inline void ManualAuthDeviceRequest__Tag2___Tag2::set_tag2(const ::std::string& value) {
  set_has_tag2();
  tag2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthDeviceRequest._Tag2.__Tag2.tag2)
}
#if LANG_CXX11
inline void ManualAuthDeviceRequest__Tag2___Tag2::set_tag2(::std::string&& value) {
  set_has_tag2();
  tag2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthDeviceRequest._Tag2.__Tag2.tag2)
}
#endif
inline void ManualAuthDeviceRequest__Tag2___Tag2::set_tag2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag2();
  tag2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthDeviceRequest._Tag2.__Tag2.tag2)
}
inline void ManualAuthDeviceRequest__Tag2___Tag2::set_tag2(const char* value, size_t size) {
  set_has_tag2();
  tag2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthDeviceRequest._Tag2.__Tag2.tag2)
}
inline ::std::string* ManualAuthDeviceRequest__Tag2___Tag2::mutable_tag2() {
  set_has_tag2();
  // @@protoc_insertion_point(field_mutable:ManualAuthDeviceRequest._Tag2.__Tag2.tag2)
  return tag2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthDeviceRequest__Tag2___Tag2::release_tag2() {
  // @@protoc_insertion_point(field_release:ManualAuthDeviceRequest._Tag2.__Tag2.tag2)
  clear_has_tag2();
  return tag2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthDeviceRequest__Tag2___Tag2::set_allocated_tag2(::std::string* tag2) {
  if (tag2 != NULL) {
    set_has_tag2();
  } else {
    clear_has_tag2();
  }
  tag2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag2);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthDeviceRequest._Tag2.__Tag2.tag2)
}

// optional string tag3 = 3;
inline bool ManualAuthDeviceRequest__Tag2___Tag2::has_tag3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ManualAuthDeviceRequest__Tag2___Tag2::set_has_tag3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ManualAuthDeviceRequest__Tag2___Tag2::clear_has_tag3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ManualAuthDeviceRequest__Tag2___Tag2::clear_tag3() {
  tag3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag3();
}
inline const ::std::string& ManualAuthDeviceRequest__Tag2___Tag2::tag3() const {
  // @@protoc_insertion_point(field_get:ManualAuthDeviceRequest._Tag2.__Tag2.tag3)
  return tag3_.GetNoArena();
}
inline void ManualAuthDeviceRequest__Tag2___Tag2::set_tag3(const ::std::string& value) {
  set_has_tag3();
  tag3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthDeviceRequest._Tag2.__Tag2.tag3)
}
#if LANG_CXX11
inline void ManualAuthDeviceRequest__Tag2___Tag2::set_tag3(::std::string&& value) {
  set_has_tag3();
  tag3_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthDeviceRequest._Tag2.__Tag2.tag3)
}
#endif
inline void ManualAuthDeviceRequest__Tag2___Tag2::set_tag3(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag3();
  tag3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthDeviceRequest._Tag2.__Tag2.tag3)
}
inline void ManualAuthDeviceRequest__Tag2___Tag2::set_tag3(const char* value, size_t size) {
  set_has_tag3();
  tag3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthDeviceRequest._Tag2.__Tag2.tag3)
}
inline ::std::string* ManualAuthDeviceRequest__Tag2___Tag2::mutable_tag3() {
  set_has_tag3();
  // @@protoc_insertion_point(field_mutable:ManualAuthDeviceRequest._Tag2.__Tag2.tag3)
  return tag3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthDeviceRequest__Tag2___Tag2::release_tag3() {
  // @@protoc_insertion_point(field_release:ManualAuthDeviceRequest._Tag2.__Tag2.tag3)
  clear_has_tag3();
  return tag3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthDeviceRequest__Tag2___Tag2::set_allocated_tag3(::std::string* tag3) {
  if (tag3 != NULL) {
    set_has_tag3();
  } else {
    clear_has_tag3();
  }
  tag3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag3);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthDeviceRequest._Tag2.__Tag2.tag3)
}

// optional .mmStr tag4 = 4;
inline bool ManualAuthDeviceRequest__Tag2___Tag2::has_tag4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ManualAuthDeviceRequest__Tag2___Tag2::set_has_tag4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ManualAuthDeviceRequest__Tag2___Tag2::clear_has_tag4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ManualAuthDeviceRequest__Tag2___Tag2::clear_tag4() {
  if (tag4_ != NULL) tag4_->::mmStr::Clear();
  clear_has_tag4();
}
inline const ::mmStr& ManualAuthDeviceRequest__Tag2___Tag2::tag4() const {
  // @@protoc_insertion_point(field_get:ManualAuthDeviceRequest._Tag2.__Tag2.tag4)
  return tag4_ != NULL ? *tag4_
                         : *::mmStr::internal_default_instance();
}
inline ::mmStr* ManualAuthDeviceRequest__Tag2___Tag2::mutable_tag4() {
  set_has_tag4();
  if (tag4_ == NULL) {
    tag4_ = new ::mmStr;
  }
  // @@protoc_insertion_point(field_mutable:ManualAuthDeviceRequest._Tag2.__Tag2.tag4)
  return tag4_;
}
inline ::mmStr* ManualAuthDeviceRequest__Tag2___Tag2::release_tag4() {
  // @@protoc_insertion_point(field_release:ManualAuthDeviceRequest._Tag2.__Tag2.tag4)
  clear_has_tag4();
  ::mmStr* temp = tag4_;
  tag4_ = NULL;
  return temp;
}
inline void ManualAuthDeviceRequest__Tag2___Tag2::set_allocated_tag4(::mmStr* tag4) {
  delete tag4_;
  tag4_ = tag4;
  if (tag4) {
    set_has_tag4();
  } else {
    clear_has_tag4();
  }
  // @@protoc_insertion_point(field_set_allocated:ManualAuthDeviceRequest._Tag2.__Tag2.tag4)
}

// -------------------------------------------------------------------

// ManualAuthDeviceRequest__Tag2_TAG3

// optional string tag1 = 1;
inline bool ManualAuthDeviceRequest__Tag2_TAG3::has_tag1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManualAuthDeviceRequest__Tag2_TAG3::set_has_tag1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManualAuthDeviceRequest__Tag2_TAG3::clear_has_tag1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManualAuthDeviceRequest__Tag2_TAG3::clear_tag1() {
  tag1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag1();
}
inline const ::std::string& ManualAuthDeviceRequest__Tag2_TAG3::tag1() const {
  // @@protoc_insertion_point(field_get:ManualAuthDeviceRequest._Tag2.TAG3.tag1)
  return tag1_.GetNoArena();
}
inline void ManualAuthDeviceRequest__Tag2_TAG3::set_tag1(const ::std::string& value) {
  set_has_tag1();
  tag1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthDeviceRequest._Tag2.TAG3.tag1)
}
#if LANG_CXX11
inline void ManualAuthDeviceRequest__Tag2_TAG3::set_tag1(::std::string&& value) {
  set_has_tag1();
  tag1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthDeviceRequest._Tag2.TAG3.tag1)
}
#endif
inline void ManualAuthDeviceRequest__Tag2_TAG3::set_tag1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag1();
  tag1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthDeviceRequest._Tag2.TAG3.tag1)
}
inline void ManualAuthDeviceRequest__Tag2_TAG3::set_tag1(const char* value, size_t size) {
  set_has_tag1();
  tag1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthDeviceRequest._Tag2.TAG3.tag1)
}
inline ::std::string* ManualAuthDeviceRequest__Tag2_TAG3::mutable_tag1() {
  set_has_tag1();
  // @@protoc_insertion_point(field_mutable:ManualAuthDeviceRequest._Tag2.TAG3.tag1)
  return tag1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthDeviceRequest__Tag2_TAG3::release_tag1() {
  // @@protoc_insertion_point(field_release:ManualAuthDeviceRequest._Tag2.TAG3.tag1)
  clear_has_tag1();
  return tag1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthDeviceRequest__Tag2_TAG3::set_allocated_tag1(::std::string* tag1) {
  if (tag1 != NULL) {
    set_has_tag1();
  } else {
    clear_has_tag1();
  }
  tag1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag1);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthDeviceRequest._Tag2.TAG3.tag1)
}

// optional string tag2 = 2;
inline bool ManualAuthDeviceRequest__Tag2_TAG3::has_tag2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManualAuthDeviceRequest__Tag2_TAG3::set_has_tag2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManualAuthDeviceRequest__Tag2_TAG3::clear_has_tag2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManualAuthDeviceRequest__Tag2_TAG3::clear_tag2() {
  tag2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag2();
}
inline const ::std::string& ManualAuthDeviceRequest__Tag2_TAG3::tag2() const {
  // @@protoc_insertion_point(field_get:ManualAuthDeviceRequest._Tag2.TAG3.tag2)
  return tag2_.GetNoArena();
}
inline void ManualAuthDeviceRequest__Tag2_TAG3::set_tag2(const ::std::string& value) {
  set_has_tag2();
  tag2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthDeviceRequest._Tag2.TAG3.tag2)
}
#if LANG_CXX11
inline void ManualAuthDeviceRequest__Tag2_TAG3::set_tag2(::std::string&& value) {
  set_has_tag2();
  tag2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthDeviceRequest._Tag2.TAG3.tag2)
}
#endif
inline void ManualAuthDeviceRequest__Tag2_TAG3::set_tag2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag2();
  tag2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthDeviceRequest._Tag2.TAG3.tag2)
}
inline void ManualAuthDeviceRequest__Tag2_TAG3::set_tag2(const char* value, size_t size) {
  set_has_tag2();
  tag2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthDeviceRequest._Tag2.TAG3.tag2)
}
inline ::std::string* ManualAuthDeviceRequest__Tag2_TAG3::mutable_tag2() {
  set_has_tag2();
  // @@protoc_insertion_point(field_mutable:ManualAuthDeviceRequest._Tag2.TAG3.tag2)
  return tag2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthDeviceRequest__Tag2_TAG3::release_tag2() {
  // @@protoc_insertion_point(field_release:ManualAuthDeviceRequest._Tag2.TAG3.tag2)
  clear_has_tag2();
  return tag2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthDeviceRequest__Tag2_TAG3::set_allocated_tag2(::std::string* tag2) {
  if (tag2 != NULL) {
    set_has_tag2();
  } else {
    clear_has_tag2();
  }
  tag2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag2);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthDeviceRequest._Tag2.TAG3.tag2)
}

// -------------------------------------------------------------------

// ManualAuthDeviceRequest__Tag2

// optional .mmStr tag1 = 1;
inline bool ManualAuthDeviceRequest__Tag2::has_tag1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManualAuthDeviceRequest__Tag2::set_has_tag1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManualAuthDeviceRequest__Tag2::clear_has_tag1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManualAuthDeviceRequest__Tag2::clear_tag1() {
  if (tag1_ != NULL) tag1_->::mmStr::Clear();
  clear_has_tag1();
}
inline const ::mmStr& ManualAuthDeviceRequest__Tag2::tag1() const {
  // @@protoc_insertion_point(field_get:ManualAuthDeviceRequest._Tag2.tag1)
  return tag1_ != NULL ? *tag1_
                         : *::mmStr::internal_default_instance();
}
inline ::mmStr* ManualAuthDeviceRequest__Tag2::mutable_tag1() {
  set_has_tag1();
  if (tag1_ == NULL) {
    tag1_ = new ::mmStr;
  }
  // @@protoc_insertion_point(field_mutable:ManualAuthDeviceRequest._Tag2.tag1)
  return tag1_;
}
inline ::mmStr* ManualAuthDeviceRequest__Tag2::release_tag1() {
  // @@protoc_insertion_point(field_release:ManualAuthDeviceRequest._Tag2.tag1)
  clear_has_tag1();
  ::mmStr* temp = tag1_;
  tag1_ = NULL;
  return temp;
}
inline void ManualAuthDeviceRequest__Tag2::set_allocated_tag1(::mmStr* tag1) {
  delete tag1_;
  tag1_ = tag1;
  if (tag1) {
    set_has_tag1();
  } else {
    clear_has_tag1();
  }
  // @@protoc_insertion_point(field_set_allocated:ManualAuthDeviceRequest._Tag2.tag1)
}

// optional .ManualAuthDeviceRequest._Tag2.__Tag2 tag2 = 2;
inline bool ManualAuthDeviceRequest__Tag2::has_tag2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManualAuthDeviceRequest__Tag2::set_has_tag2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManualAuthDeviceRequest__Tag2::clear_has_tag2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManualAuthDeviceRequest__Tag2::clear_tag2() {
  if (tag2_ != NULL) tag2_->::ManualAuthDeviceRequest__Tag2___Tag2::Clear();
  clear_has_tag2();
}
inline const ::ManualAuthDeviceRequest__Tag2___Tag2& ManualAuthDeviceRequest__Tag2::tag2() const {
  // @@protoc_insertion_point(field_get:ManualAuthDeviceRequest._Tag2.tag2)
  return tag2_ != NULL ? *tag2_
                         : *::ManualAuthDeviceRequest__Tag2___Tag2::internal_default_instance();
}
inline ::ManualAuthDeviceRequest__Tag2___Tag2* ManualAuthDeviceRequest__Tag2::mutable_tag2() {
  set_has_tag2();
  if (tag2_ == NULL) {
    tag2_ = new ::ManualAuthDeviceRequest__Tag2___Tag2;
  }
  // @@protoc_insertion_point(field_mutable:ManualAuthDeviceRequest._Tag2.tag2)
  return tag2_;
}
inline ::ManualAuthDeviceRequest__Tag2___Tag2* ManualAuthDeviceRequest__Tag2::release_tag2() {
  // @@protoc_insertion_point(field_release:ManualAuthDeviceRequest._Tag2.tag2)
  clear_has_tag2();
  ::ManualAuthDeviceRequest__Tag2___Tag2* temp = tag2_;
  tag2_ = NULL;
  return temp;
}
inline void ManualAuthDeviceRequest__Tag2::set_allocated_tag2(::ManualAuthDeviceRequest__Tag2___Tag2* tag2) {
  delete tag2_;
  tag2_ = tag2;
  if (tag2) {
    set_has_tag2();
  } else {
    clear_has_tag2();
  }
  // @@protoc_insertion_point(field_set_allocated:ManualAuthDeviceRequest._Tag2.tag2)
}

// optional .ManualAuthDeviceRequest._Tag2.TAG3 tag3 = 3;
inline bool ManualAuthDeviceRequest__Tag2::has_tag3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ManualAuthDeviceRequest__Tag2::set_has_tag3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ManualAuthDeviceRequest__Tag2::clear_has_tag3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ManualAuthDeviceRequest__Tag2::clear_tag3() {
  if (tag3_ != NULL) tag3_->::ManualAuthDeviceRequest__Tag2_TAG3::Clear();
  clear_has_tag3();
}
inline const ::ManualAuthDeviceRequest__Tag2_TAG3& ManualAuthDeviceRequest__Tag2::tag3() const {
  // @@protoc_insertion_point(field_get:ManualAuthDeviceRequest._Tag2.tag3)
  return tag3_ != NULL ? *tag3_
                         : *::ManualAuthDeviceRequest__Tag2_TAG3::internal_default_instance();
}
inline ::ManualAuthDeviceRequest__Tag2_TAG3* ManualAuthDeviceRequest__Tag2::mutable_tag3() {
  set_has_tag3();
  if (tag3_ == NULL) {
    tag3_ = new ::ManualAuthDeviceRequest__Tag2_TAG3;
  }
  // @@protoc_insertion_point(field_mutable:ManualAuthDeviceRequest._Tag2.tag3)
  return tag3_;
}
inline ::ManualAuthDeviceRequest__Tag2_TAG3* ManualAuthDeviceRequest__Tag2::release_tag3() {
  // @@protoc_insertion_point(field_release:ManualAuthDeviceRequest._Tag2.tag3)
  clear_has_tag3();
  ::ManualAuthDeviceRequest__Tag2_TAG3* temp = tag3_;
  tag3_ = NULL;
  return temp;
}
inline void ManualAuthDeviceRequest__Tag2::set_allocated_tag3(::ManualAuthDeviceRequest__Tag2_TAG3* tag3) {
  delete tag3_;
  tag3_ = tag3;
  if (tag3) {
    set_has_tag3();
  } else {
    clear_has_tag3();
  }
  // @@protoc_insertion_point(field_set_allocated:ManualAuthDeviceRequest._Tag2.tag3)
}

// optional .mmStr tag4 = 4;
inline bool ManualAuthDeviceRequest__Tag2::has_tag4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ManualAuthDeviceRequest__Tag2::set_has_tag4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ManualAuthDeviceRequest__Tag2::clear_has_tag4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ManualAuthDeviceRequest__Tag2::clear_tag4() {
  if (tag4_ != NULL) tag4_->::mmStr::Clear();
  clear_has_tag4();
}
inline const ::mmStr& ManualAuthDeviceRequest__Tag2::tag4() const {
  // @@protoc_insertion_point(field_get:ManualAuthDeviceRequest._Tag2.tag4)
  return tag4_ != NULL ? *tag4_
                         : *::mmStr::internal_default_instance();
}
inline ::mmStr* ManualAuthDeviceRequest__Tag2::mutable_tag4() {
  set_has_tag4();
  if (tag4_ == NULL) {
    tag4_ = new ::mmStr;
  }
  // @@protoc_insertion_point(field_mutable:ManualAuthDeviceRequest._Tag2.tag4)
  return tag4_;
}
inline ::mmStr* ManualAuthDeviceRequest__Tag2::release_tag4() {
  // @@protoc_insertion_point(field_release:ManualAuthDeviceRequest._Tag2.tag4)
  clear_has_tag4();
  ::mmStr* temp = tag4_;
  tag4_ = NULL;
  return temp;
}
inline void ManualAuthDeviceRequest__Tag2::set_allocated_tag4(::mmStr* tag4) {
  delete tag4_;
  tag4_ = tag4;
  if (tag4) {
    set_has_tag4();
  } else {
    clear_has_tag4();
  }
  // @@protoc_insertion_point(field_set_allocated:ManualAuthDeviceRequest._Tag2.tag4)
}

// optional .mmStr tag5 = 5;
inline bool ManualAuthDeviceRequest__Tag2::has_tag5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ManualAuthDeviceRequest__Tag2::set_has_tag5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ManualAuthDeviceRequest__Tag2::clear_has_tag5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ManualAuthDeviceRequest__Tag2::clear_tag5() {
  if (tag5_ != NULL) tag5_->::mmStr::Clear();
  clear_has_tag5();
}
inline const ::mmStr& ManualAuthDeviceRequest__Tag2::tag5() const {
  // @@protoc_insertion_point(field_get:ManualAuthDeviceRequest._Tag2.tag5)
  return tag5_ != NULL ? *tag5_
                         : *::mmStr::internal_default_instance();
}
inline ::mmStr* ManualAuthDeviceRequest__Tag2::mutable_tag5() {
  set_has_tag5();
  if (tag5_ == NULL) {
    tag5_ = new ::mmStr;
  }
  // @@protoc_insertion_point(field_mutable:ManualAuthDeviceRequest._Tag2.tag5)
  return tag5_;
}
inline ::mmStr* ManualAuthDeviceRequest__Tag2::release_tag5() {
  // @@protoc_insertion_point(field_release:ManualAuthDeviceRequest._Tag2.tag5)
  clear_has_tag5();
  ::mmStr* temp = tag5_;
  tag5_ = NULL;
  return temp;
}
inline void ManualAuthDeviceRequest__Tag2::set_allocated_tag5(::mmStr* tag5) {
  delete tag5_;
  tag5_ = tag5;
  if (tag5) {
    set_has_tag5();
  } else {
    clear_has_tag5();
  }
  // @@protoc_insertion_point(field_set_allocated:ManualAuthDeviceRequest._Tag2.tag5)
}

// optional int32 tag6 = 6;
inline bool ManualAuthDeviceRequest__Tag2::has_tag6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ManualAuthDeviceRequest__Tag2::set_has_tag6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ManualAuthDeviceRequest__Tag2::clear_has_tag6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ManualAuthDeviceRequest__Tag2::clear_tag6() {
  tag6_ = 0;
  clear_has_tag6();
}
inline ::google::protobuf::int32 ManualAuthDeviceRequest__Tag2::tag6() const {
  // @@protoc_insertion_point(field_get:ManualAuthDeviceRequest._Tag2.tag6)
  return tag6_;
}
inline void ManualAuthDeviceRequest__Tag2::set_tag6(::google::protobuf::int32 value) {
  set_has_tag6();
  tag6_ = value;
  // @@protoc_insertion_point(field_set:ManualAuthDeviceRequest._Tag2.tag6)
}

// -------------------------------------------------------------------

// ManualAuthDeviceRequest

// optional .LoginInfo login = 1;
inline bool ManualAuthDeviceRequest::has_login() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ManualAuthDeviceRequest::set_has_login() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ManualAuthDeviceRequest::clear_has_login() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ManualAuthDeviceRequest::clear_login() {
  if (login_ != NULL) login_->::LoginInfo::Clear();
  clear_has_login();
}
inline const ::LoginInfo& ManualAuthDeviceRequest::login() const {
  // @@protoc_insertion_point(field_get:ManualAuthDeviceRequest.login)
  return login_ != NULL ? *login_
                         : *::LoginInfo::internal_default_instance();
}
inline ::LoginInfo* ManualAuthDeviceRequest::mutable_login() {
  set_has_login();
  if (login_ == NULL) {
    login_ = new ::LoginInfo;
  }
  // @@protoc_insertion_point(field_mutable:ManualAuthDeviceRequest.login)
  return login_;
}
inline ::LoginInfo* ManualAuthDeviceRequest::release_login() {
  // @@protoc_insertion_point(field_release:ManualAuthDeviceRequest.login)
  clear_has_login();
  ::LoginInfo* temp = login_;
  login_ = NULL;
  return temp;
}
inline void ManualAuthDeviceRequest::set_allocated_login(::LoginInfo* login) {
  delete login_;
  login_ = login;
  if (login) {
    set_has_login();
  } else {
    clear_has_login();
  }
  // @@protoc_insertion_point(field_set_allocated:ManualAuthDeviceRequest.login)
}

// optional .ManualAuthDeviceRequest._Tag2 tag2 = 2;
inline bool ManualAuthDeviceRequest::has_tag2() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ManualAuthDeviceRequest::set_has_tag2() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ManualAuthDeviceRequest::clear_has_tag2() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ManualAuthDeviceRequest::clear_tag2() {
  if (tag2_ != NULL) tag2_->::ManualAuthDeviceRequest__Tag2::Clear();
  clear_has_tag2();
}
inline const ::ManualAuthDeviceRequest__Tag2& ManualAuthDeviceRequest::tag2() const {
  // @@protoc_insertion_point(field_get:ManualAuthDeviceRequest.tag2)
  return tag2_ != NULL ? *tag2_
                         : *::ManualAuthDeviceRequest__Tag2::internal_default_instance();
}
inline ::ManualAuthDeviceRequest__Tag2* ManualAuthDeviceRequest::mutable_tag2() {
  set_has_tag2();
  if (tag2_ == NULL) {
    tag2_ = new ::ManualAuthDeviceRequest__Tag2;
  }
  // @@protoc_insertion_point(field_mutable:ManualAuthDeviceRequest.tag2)
  return tag2_;
}
inline ::ManualAuthDeviceRequest__Tag2* ManualAuthDeviceRequest::release_tag2() {
  // @@protoc_insertion_point(field_release:ManualAuthDeviceRequest.tag2)
  clear_has_tag2();
  ::ManualAuthDeviceRequest__Tag2* temp = tag2_;
  tag2_ = NULL;
  return temp;
}
inline void ManualAuthDeviceRequest::set_allocated_tag2(::ManualAuthDeviceRequest__Tag2* tag2) {
  delete tag2_;
  tag2_ = tag2;
  if (tag2) {
    set_has_tag2();
  } else {
    clear_has_tag2();
  }
  // @@protoc_insertion_point(field_set_allocated:ManualAuthDeviceRequest.tag2)
}

// optional string imei = 3;
inline bool ManualAuthDeviceRequest::has_imei() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManualAuthDeviceRequest::set_has_imei() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManualAuthDeviceRequest::clear_has_imei() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManualAuthDeviceRequest::clear_imei() {
  imei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_imei();
}
inline const ::std::string& ManualAuthDeviceRequest::imei() const {
  // @@protoc_insertion_point(field_get:ManualAuthDeviceRequest.imei)
  return imei_.GetNoArena();
}
inline void ManualAuthDeviceRequest::set_imei(const ::std::string& value) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthDeviceRequest.imei)
}
#if LANG_CXX11
inline void ManualAuthDeviceRequest::set_imei(::std::string&& value) {
  set_has_imei();
  imei_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthDeviceRequest.imei)
}
#endif
inline void ManualAuthDeviceRequest::set_imei(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthDeviceRequest.imei)
}
inline void ManualAuthDeviceRequest::set_imei(const char* value, size_t size) {
  set_has_imei();
  imei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthDeviceRequest.imei)
}
inline ::std::string* ManualAuthDeviceRequest::mutable_imei() {
  set_has_imei();
  // @@protoc_insertion_point(field_mutable:ManualAuthDeviceRequest.imei)
  return imei_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthDeviceRequest::release_imei() {
  // @@protoc_insertion_point(field_release:ManualAuthDeviceRequest.imei)
  clear_has_imei();
  return imei_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthDeviceRequest::set_allocated_imei(::std::string* imei) {
  if (imei != NULL) {
    set_has_imei();
  } else {
    clear_has_imei();
  }
  imei_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imei);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthDeviceRequest.imei)
}

// optional string softInfoXml = 4;
inline bool ManualAuthDeviceRequest::has_softinfoxml() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManualAuthDeviceRequest::set_has_softinfoxml() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManualAuthDeviceRequest::clear_has_softinfoxml() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManualAuthDeviceRequest::clear_softinfoxml() {
  softinfoxml_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_softinfoxml();
}
inline const ::std::string& ManualAuthDeviceRequest::softinfoxml() const {
  // @@protoc_insertion_point(field_get:ManualAuthDeviceRequest.softInfoXml)
  return softinfoxml_.GetNoArena();
}
inline void ManualAuthDeviceRequest::set_softinfoxml(const ::std::string& value) {
  set_has_softinfoxml();
  softinfoxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthDeviceRequest.softInfoXml)
}
#if LANG_CXX11
inline void ManualAuthDeviceRequest::set_softinfoxml(::std::string&& value) {
  set_has_softinfoxml();
  softinfoxml_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthDeviceRequest.softInfoXml)
}
#endif
inline void ManualAuthDeviceRequest::set_softinfoxml(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_softinfoxml();
  softinfoxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthDeviceRequest.softInfoXml)
}
inline void ManualAuthDeviceRequest::set_softinfoxml(const char* value, size_t size) {
  set_has_softinfoxml();
  softinfoxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthDeviceRequest.softInfoXml)
}
inline ::std::string* ManualAuthDeviceRequest::mutable_softinfoxml() {
  set_has_softinfoxml();
  // @@protoc_insertion_point(field_mutable:ManualAuthDeviceRequest.softInfoXml)
  return softinfoxml_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthDeviceRequest::release_softinfoxml() {
  // @@protoc_insertion_point(field_release:ManualAuthDeviceRequest.softInfoXml)
  clear_has_softinfoxml();
  return softinfoxml_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthDeviceRequest::set_allocated_softinfoxml(::std::string* softinfoxml) {
  if (softinfoxml != NULL) {
    set_has_softinfoxml();
  } else {
    clear_has_softinfoxml();
  }
  softinfoxml_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), softinfoxml);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthDeviceRequest.softInfoXml)
}

// optional int32 unknown5 = 5;
inline bool ManualAuthDeviceRequest::has_unknown5() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ManualAuthDeviceRequest::set_has_unknown5() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ManualAuthDeviceRequest::clear_has_unknown5() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ManualAuthDeviceRequest::clear_unknown5() {
  unknown5_ = 0;
  clear_has_unknown5();
}
inline ::google::protobuf::int32 ManualAuthDeviceRequest::unknown5() const {
  // @@protoc_insertion_point(field_get:ManualAuthDeviceRequest.unknown5)
  return unknown5_;
}
inline void ManualAuthDeviceRequest::set_unknown5(::google::protobuf::int32 value) {
  set_has_unknown5();
  unknown5_ = value;
  // @@protoc_insertion_point(field_set:ManualAuthDeviceRequest.unknown5)
}

// optional string clientSeqID = 6;
inline bool ManualAuthDeviceRequest::has_clientseqid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ManualAuthDeviceRequest::set_has_clientseqid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ManualAuthDeviceRequest::clear_has_clientseqid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ManualAuthDeviceRequest::clear_clientseqid() {
  clientseqid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_clientseqid();
}
inline const ::std::string& ManualAuthDeviceRequest::clientseqid() const {
  // @@protoc_insertion_point(field_get:ManualAuthDeviceRequest.clientSeqID)
  return clientseqid_.GetNoArena();
}
inline void ManualAuthDeviceRequest::set_clientseqid(const ::std::string& value) {
  set_has_clientseqid();
  clientseqid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthDeviceRequest.clientSeqID)
}
#if LANG_CXX11
inline void ManualAuthDeviceRequest::set_clientseqid(::std::string&& value) {
  set_has_clientseqid();
  clientseqid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthDeviceRequest.clientSeqID)
}
#endif
inline void ManualAuthDeviceRequest::set_clientseqid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_clientseqid();
  clientseqid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthDeviceRequest.clientSeqID)
}
inline void ManualAuthDeviceRequest::set_clientseqid(const char* value, size_t size) {
  set_has_clientseqid();
  clientseqid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthDeviceRequest.clientSeqID)
}
inline ::std::string* ManualAuthDeviceRequest::mutable_clientseqid() {
  set_has_clientseqid();
  // @@protoc_insertion_point(field_mutable:ManualAuthDeviceRequest.clientSeqID)
  return clientseqid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthDeviceRequest::release_clientseqid() {
  // @@protoc_insertion_point(field_release:ManualAuthDeviceRequest.clientSeqID)
  clear_has_clientseqid();
  return clientseqid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthDeviceRequest::set_allocated_clientseqid(::std::string* clientseqid) {
  if (clientseqid != NULL) {
    set_has_clientseqid();
  } else {
    clear_has_clientseqid();
  }
  clientseqid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientseqid);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthDeviceRequest.clientSeqID)
}

// optional string clientSeqID_sign = 7;
inline bool ManualAuthDeviceRequest::has_clientseqid_sign() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ManualAuthDeviceRequest::set_has_clientseqid_sign() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ManualAuthDeviceRequest::clear_has_clientseqid_sign() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ManualAuthDeviceRequest::clear_clientseqid_sign() {
  clientseqid_sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_clientseqid_sign();
}
inline const ::std::string& ManualAuthDeviceRequest::clientseqid_sign() const {
  // @@protoc_insertion_point(field_get:ManualAuthDeviceRequest.clientSeqID_sign)
  return clientseqid_sign_.GetNoArena();
}
inline void ManualAuthDeviceRequest::set_clientseqid_sign(const ::std::string& value) {
  set_has_clientseqid_sign();
  clientseqid_sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthDeviceRequest.clientSeqID_sign)
}
#if LANG_CXX11
inline void ManualAuthDeviceRequest::set_clientseqid_sign(::std::string&& value) {
  set_has_clientseqid_sign();
  clientseqid_sign_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthDeviceRequest.clientSeqID_sign)
}
#endif
inline void ManualAuthDeviceRequest::set_clientseqid_sign(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_clientseqid_sign();
  clientseqid_sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthDeviceRequest.clientSeqID_sign)
}
inline void ManualAuthDeviceRequest::set_clientseqid_sign(const char* value, size_t size) {
  set_has_clientseqid_sign();
  clientseqid_sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthDeviceRequest.clientSeqID_sign)
}
inline ::std::string* ManualAuthDeviceRequest::mutable_clientseqid_sign() {
  set_has_clientseqid_sign();
  // @@protoc_insertion_point(field_mutable:ManualAuthDeviceRequest.clientSeqID_sign)
  return clientseqid_sign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthDeviceRequest::release_clientseqid_sign() {
  // @@protoc_insertion_point(field_release:ManualAuthDeviceRequest.clientSeqID_sign)
  clear_has_clientseqid_sign();
  return clientseqid_sign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthDeviceRequest::set_allocated_clientseqid_sign(::std::string* clientseqid_sign) {
  if (clientseqid_sign != NULL) {
    set_has_clientseqid_sign();
  } else {
    clear_has_clientseqid_sign();
  }
  clientseqid_sign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientseqid_sign);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthDeviceRequest.clientSeqID_sign)
}

// optional string loginDeviceName = 8;
inline bool ManualAuthDeviceRequest::has_logindevicename() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ManualAuthDeviceRequest::set_has_logindevicename() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ManualAuthDeviceRequest::clear_has_logindevicename() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ManualAuthDeviceRequest::clear_logindevicename() {
  logindevicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_logindevicename();
}
inline const ::std::string& ManualAuthDeviceRequest::logindevicename() const {
  // @@protoc_insertion_point(field_get:ManualAuthDeviceRequest.loginDeviceName)
  return logindevicename_.GetNoArena();
}
inline void ManualAuthDeviceRequest::set_logindevicename(const ::std::string& value) {
  set_has_logindevicename();
  logindevicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthDeviceRequest.loginDeviceName)
}
#if LANG_CXX11
inline void ManualAuthDeviceRequest::set_logindevicename(::std::string&& value) {
  set_has_logindevicename();
  logindevicename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthDeviceRequest.loginDeviceName)
}
#endif
inline void ManualAuthDeviceRequest::set_logindevicename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_logindevicename();
  logindevicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthDeviceRequest.loginDeviceName)
}
inline void ManualAuthDeviceRequest::set_logindevicename(const char* value, size_t size) {
  set_has_logindevicename();
  logindevicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthDeviceRequest.loginDeviceName)
}
inline ::std::string* ManualAuthDeviceRequest::mutable_logindevicename() {
  set_has_logindevicename();
  // @@protoc_insertion_point(field_mutable:ManualAuthDeviceRequest.loginDeviceName)
  return logindevicename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthDeviceRequest::release_logindevicename() {
  // @@protoc_insertion_point(field_release:ManualAuthDeviceRequest.loginDeviceName)
  clear_has_logindevicename();
  return logindevicename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthDeviceRequest::set_allocated_logindevicename(::std::string* logindevicename) {
  if (logindevicename != NULL) {
    set_has_logindevicename();
  } else {
    clear_has_logindevicename();
  }
  logindevicename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logindevicename);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthDeviceRequest.loginDeviceName)
}

// optional string deviceInfoXml = 9;
inline bool ManualAuthDeviceRequest::has_deviceinfoxml() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ManualAuthDeviceRequest::set_has_deviceinfoxml() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ManualAuthDeviceRequest::clear_has_deviceinfoxml() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ManualAuthDeviceRequest::clear_deviceinfoxml() {
  deviceinfoxml_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deviceinfoxml();
}
inline const ::std::string& ManualAuthDeviceRequest::deviceinfoxml() const {
  // @@protoc_insertion_point(field_get:ManualAuthDeviceRequest.deviceInfoXml)
  return deviceinfoxml_.GetNoArena();
}
inline void ManualAuthDeviceRequest::set_deviceinfoxml(const ::std::string& value) {
  set_has_deviceinfoxml();
  deviceinfoxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthDeviceRequest.deviceInfoXml)
}
#if LANG_CXX11
inline void ManualAuthDeviceRequest::set_deviceinfoxml(::std::string&& value) {
  set_has_deviceinfoxml();
  deviceinfoxml_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthDeviceRequest.deviceInfoXml)
}
#endif
inline void ManualAuthDeviceRequest::set_deviceinfoxml(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_deviceinfoxml();
  deviceinfoxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthDeviceRequest.deviceInfoXml)
}
inline void ManualAuthDeviceRequest::set_deviceinfoxml(const char* value, size_t size) {
  set_has_deviceinfoxml();
  deviceinfoxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthDeviceRequest.deviceInfoXml)
}
inline ::std::string* ManualAuthDeviceRequest::mutable_deviceinfoxml() {
  set_has_deviceinfoxml();
  // @@protoc_insertion_point(field_mutable:ManualAuthDeviceRequest.deviceInfoXml)
  return deviceinfoxml_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthDeviceRequest::release_deviceinfoxml() {
  // @@protoc_insertion_point(field_release:ManualAuthDeviceRequest.deviceInfoXml)
  clear_has_deviceinfoxml();
  return deviceinfoxml_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthDeviceRequest::set_allocated_deviceinfoxml(::std::string* deviceinfoxml) {
  if (deviceinfoxml != NULL) {
    set_has_deviceinfoxml();
  } else {
    clear_has_deviceinfoxml();
  }
  deviceinfoxml_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceinfoxml);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthDeviceRequest.deviceInfoXml)
}

// optional string language = 10;
inline bool ManualAuthDeviceRequest::has_language() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ManualAuthDeviceRequest::set_has_language() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ManualAuthDeviceRequest::clear_has_language() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ManualAuthDeviceRequest::clear_language() {
  language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_language();
}
inline const ::std::string& ManualAuthDeviceRequest::language() const {
  // @@protoc_insertion_point(field_get:ManualAuthDeviceRequest.language)
  return language_.GetNoArena();
}
inline void ManualAuthDeviceRequest::set_language(const ::std::string& value) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthDeviceRequest.language)
}
#if LANG_CXX11
inline void ManualAuthDeviceRequest::set_language(::std::string&& value) {
  set_has_language();
  language_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthDeviceRequest.language)
}
#endif
inline void ManualAuthDeviceRequest::set_language(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthDeviceRequest.language)
}
inline void ManualAuthDeviceRequest::set_language(const char* value, size_t size) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthDeviceRequest.language)
}
inline ::std::string* ManualAuthDeviceRequest::mutable_language() {
  set_has_language();
  // @@protoc_insertion_point(field_mutable:ManualAuthDeviceRequest.language)
  return language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthDeviceRequest::release_language() {
  // @@protoc_insertion_point(field_release:ManualAuthDeviceRequest.language)
  clear_has_language();
  return language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthDeviceRequest::set_allocated_language(::std::string* language) {
  if (language != NULL) {
    set_has_language();
  } else {
    clear_has_language();
  }
  language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthDeviceRequest.language)
}

// optional string timeZone = 11;
inline bool ManualAuthDeviceRequest::has_timezone() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ManualAuthDeviceRequest::set_has_timezone() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ManualAuthDeviceRequest::clear_has_timezone() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ManualAuthDeviceRequest::clear_timezone() {
  timezone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_timezone();
}
inline const ::std::string& ManualAuthDeviceRequest::timezone() const {
  // @@protoc_insertion_point(field_get:ManualAuthDeviceRequest.timeZone)
  return timezone_.GetNoArena();
}
inline void ManualAuthDeviceRequest::set_timezone(const ::std::string& value) {
  set_has_timezone();
  timezone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthDeviceRequest.timeZone)
}
#if LANG_CXX11
inline void ManualAuthDeviceRequest::set_timezone(::std::string&& value) {
  set_has_timezone();
  timezone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthDeviceRequest.timeZone)
}
#endif
inline void ManualAuthDeviceRequest::set_timezone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_timezone();
  timezone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthDeviceRequest.timeZone)
}
inline void ManualAuthDeviceRequest::set_timezone(const char* value, size_t size) {
  set_has_timezone();
  timezone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthDeviceRequest.timeZone)
}
inline ::std::string* ManualAuthDeviceRequest::mutable_timezone() {
  set_has_timezone();
  // @@protoc_insertion_point(field_mutable:ManualAuthDeviceRequest.timeZone)
  return timezone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthDeviceRequest::release_timezone() {
  // @@protoc_insertion_point(field_release:ManualAuthDeviceRequest.timeZone)
  clear_has_timezone();
  return timezone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthDeviceRequest::set_allocated_timezone(::std::string* timezone) {
  if (timezone != NULL) {
    set_has_timezone();
  } else {
    clear_has_timezone();
  }
  timezone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), timezone);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthDeviceRequest.timeZone)
}

// optional int32 unknown13 = 13;
inline bool ManualAuthDeviceRequest::has_unknown13() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ManualAuthDeviceRequest::set_has_unknown13() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ManualAuthDeviceRequest::clear_has_unknown13() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ManualAuthDeviceRequest::clear_unknown13() {
  unknown13_ = 0;
  clear_has_unknown13();
}
inline ::google::protobuf::int32 ManualAuthDeviceRequest::unknown13() const {
  // @@protoc_insertion_point(field_get:ManualAuthDeviceRequest.unknown13)
  return unknown13_;
}
inline void ManualAuthDeviceRequest::set_unknown13(::google::protobuf::int32 value) {
  set_has_unknown13();
  unknown13_ = value;
  // @@protoc_insertion_point(field_set:ManualAuthDeviceRequest.unknown13)
}

// optional int32 unknown14 = 14;
inline bool ManualAuthDeviceRequest::has_unknown14() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ManualAuthDeviceRequest::set_has_unknown14() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ManualAuthDeviceRequest::clear_has_unknown14() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ManualAuthDeviceRequest::clear_unknown14() {
  unknown14_ = 0;
  clear_has_unknown14();
}
inline ::google::protobuf::int32 ManualAuthDeviceRequest::unknown14() const {
  // @@protoc_insertion_point(field_get:ManualAuthDeviceRequest.unknown14)
  return unknown14_;
}
inline void ManualAuthDeviceRequest::set_unknown14(::google::protobuf::int32 value) {
  set_has_unknown14();
  unknown14_ = value;
  // @@protoc_insertion_point(field_set:ManualAuthDeviceRequest.unknown14)
}

// optional string deviceBrand = 15;
inline bool ManualAuthDeviceRequest::has_devicebrand() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ManualAuthDeviceRequest::set_has_devicebrand() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ManualAuthDeviceRequest::clear_has_devicebrand() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ManualAuthDeviceRequest::clear_devicebrand() {
  devicebrand_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_devicebrand();
}
inline const ::std::string& ManualAuthDeviceRequest::devicebrand() const {
  // @@protoc_insertion_point(field_get:ManualAuthDeviceRequest.deviceBrand)
  return devicebrand_.GetNoArena();
}
inline void ManualAuthDeviceRequest::set_devicebrand(const ::std::string& value) {
  set_has_devicebrand();
  devicebrand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthDeviceRequest.deviceBrand)
}
#if LANG_CXX11
inline void ManualAuthDeviceRequest::set_devicebrand(::std::string&& value) {
  set_has_devicebrand();
  devicebrand_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthDeviceRequest.deviceBrand)
}
#endif
inline void ManualAuthDeviceRequest::set_devicebrand(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_devicebrand();
  devicebrand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthDeviceRequest.deviceBrand)
}
inline void ManualAuthDeviceRequest::set_devicebrand(const char* value, size_t size) {
  set_has_devicebrand();
  devicebrand_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthDeviceRequest.deviceBrand)
}
inline ::std::string* ManualAuthDeviceRequest::mutable_devicebrand() {
  set_has_devicebrand();
  // @@protoc_insertion_point(field_mutable:ManualAuthDeviceRequest.deviceBrand)
  return devicebrand_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthDeviceRequest::release_devicebrand() {
  // @@protoc_insertion_point(field_release:ManualAuthDeviceRequest.deviceBrand)
  clear_has_devicebrand();
  return devicebrand_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthDeviceRequest::set_allocated_devicebrand(::std::string* devicebrand) {
  if (devicebrand != NULL) {
    set_has_devicebrand();
  } else {
    clear_has_devicebrand();
  }
  devicebrand_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devicebrand);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthDeviceRequest.deviceBrand)
}

// optional string deviceModel = 16;
inline bool ManualAuthDeviceRequest::has_devicemodel() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ManualAuthDeviceRequest::set_has_devicemodel() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ManualAuthDeviceRequest::clear_has_devicemodel() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ManualAuthDeviceRequest::clear_devicemodel() {
  devicemodel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_devicemodel();
}
inline const ::std::string& ManualAuthDeviceRequest::devicemodel() const {
  // @@protoc_insertion_point(field_get:ManualAuthDeviceRequest.deviceModel)
  return devicemodel_.GetNoArena();
}
inline void ManualAuthDeviceRequest::set_devicemodel(const ::std::string& value) {
  set_has_devicemodel();
  devicemodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthDeviceRequest.deviceModel)
}
#if LANG_CXX11
inline void ManualAuthDeviceRequest::set_devicemodel(::std::string&& value) {
  set_has_devicemodel();
  devicemodel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthDeviceRequest.deviceModel)
}
#endif
inline void ManualAuthDeviceRequest::set_devicemodel(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_devicemodel();
  devicemodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthDeviceRequest.deviceModel)
}
inline void ManualAuthDeviceRequest::set_devicemodel(const char* value, size_t size) {
  set_has_devicemodel();
  devicemodel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthDeviceRequest.deviceModel)
}
inline ::std::string* ManualAuthDeviceRequest::mutable_devicemodel() {
  set_has_devicemodel();
  // @@protoc_insertion_point(field_mutable:ManualAuthDeviceRequest.deviceModel)
  return devicemodel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthDeviceRequest::release_devicemodel() {
  // @@protoc_insertion_point(field_release:ManualAuthDeviceRequest.deviceModel)
  clear_has_devicemodel();
  return devicemodel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthDeviceRequest::set_allocated_devicemodel(::std::string* devicemodel) {
  if (devicemodel != NULL) {
    set_has_devicemodel();
  } else {
    clear_has_devicemodel();
  }
  devicemodel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devicemodel);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthDeviceRequest.deviceModel)
}

// optional string osType = 17;
inline bool ManualAuthDeviceRequest::has_ostype() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ManualAuthDeviceRequest::set_has_ostype() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ManualAuthDeviceRequest::clear_has_ostype() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ManualAuthDeviceRequest::clear_ostype() {
  ostype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ostype();
}
inline const ::std::string& ManualAuthDeviceRequest::ostype() const {
  // @@protoc_insertion_point(field_get:ManualAuthDeviceRequest.osType)
  return ostype_.GetNoArena();
}
inline void ManualAuthDeviceRequest::set_ostype(const ::std::string& value) {
  set_has_ostype();
  ostype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthDeviceRequest.osType)
}
#if LANG_CXX11
inline void ManualAuthDeviceRequest::set_ostype(::std::string&& value) {
  set_has_ostype();
  ostype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthDeviceRequest.osType)
}
#endif
inline void ManualAuthDeviceRequest::set_ostype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ostype();
  ostype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthDeviceRequest.osType)
}
inline void ManualAuthDeviceRequest::set_ostype(const char* value, size_t size) {
  set_has_ostype();
  ostype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthDeviceRequest.osType)
}
inline ::std::string* ManualAuthDeviceRequest::mutable_ostype() {
  set_has_ostype();
  // @@protoc_insertion_point(field_mutable:ManualAuthDeviceRequest.osType)
  return ostype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthDeviceRequest::release_ostype() {
  // @@protoc_insertion_point(field_release:ManualAuthDeviceRequest.osType)
  clear_has_ostype();
  return ostype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthDeviceRequest::set_allocated_ostype(::std::string* ostype) {
  if (ostype != NULL) {
    set_has_ostype();
  } else {
    clear_has_ostype();
  }
  ostype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ostype);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthDeviceRequest.osType)
}

// optional string realCountry = 18;
inline bool ManualAuthDeviceRequest::has_realcountry() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ManualAuthDeviceRequest::set_has_realcountry() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ManualAuthDeviceRequest::clear_has_realcountry() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ManualAuthDeviceRequest::clear_realcountry() {
  realcountry_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_realcountry();
}
inline const ::std::string& ManualAuthDeviceRequest::realcountry() const {
  // @@protoc_insertion_point(field_get:ManualAuthDeviceRequest.realCountry)
  return realcountry_.GetNoArena();
}
inline void ManualAuthDeviceRequest::set_realcountry(const ::std::string& value) {
  set_has_realcountry();
  realcountry_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthDeviceRequest.realCountry)
}
#if LANG_CXX11
inline void ManualAuthDeviceRequest::set_realcountry(::std::string&& value) {
  set_has_realcountry();
  realcountry_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthDeviceRequest.realCountry)
}
#endif
inline void ManualAuthDeviceRequest::set_realcountry(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_realcountry();
  realcountry_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthDeviceRequest.realCountry)
}
inline void ManualAuthDeviceRequest::set_realcountry(const char* value, size_t size) {
  set_has_realcountry();
  realcountry_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthDeviceRequest.realCountry)
}
inline ::std::string* ManualAuthDeviceRequest::mutable_realcountry() {
  set_has_realcountry();
  // @@protoc_insertion_point(field_mutable:ManualAuthDeviceRequest.realCountry)
  return realcountry_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthDeviceRequest::release_realcountry() {
  // @@protoc_insertion_point(field_release:ManualAuthDeviceRequest.realCountry)
  clear_has_realcountry();
  return realcountry_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthDeviceRequest::set_allocated_realcountry(::std::string* realcountry) {
  if (realcountry != NULL) {
    set_has_realcountry();
  } else {
    clear_has_realcountry();
  }
  realcountry_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), realcountry);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthDeviceRequest.realCountry)
}

// optional int32 unknown22 = 22;
inline bool ManualAuthDeviceRequest::has_unknown22() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void ManualAuthDeviceRequest::set_has_unknown22() {
  _has_bits_[0] |= 0x00020000u;
}
inline void ManualAuthDeviceRequest::clear_has_unknown22() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void ManualAuthDeviceRequest::clear_unknown22() {
  unknown22_ = 0;
  clear_has_unknown22();
}
inline ::google::protobuf::int32 ManualAuthDeviceRequest::unknown22() const {
  // @@protoc_insertion_point(field_get:ManualAuthDeviceRequest.unknown22)
  return unknown22_;
}
inline void ManualAuthDeviceRequest::set_unknown22(::google::protobuf::int32 value) {
  set_has_unknown22();
  unknown22_ = value;
  // @@protoc_insertion_point(field_set:ManualAuthDeviceRequest.unknown22)
}

// -------------------------------------------------------------------

// ManualAuthResponse_AuthResult_ErrMsg

// optional string msg = 1;
inline bool ManualAuthResponse_AuthResult_ErrMsg::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManualAuthResponse_AuthResult_ErrMsg::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManualAuthResponse_AuthResult_ErrMsg::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManualAuthResponse_AuthResult_ErrMsg::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& ManualAuthResponse_AuthResult_ErrMsg::msg() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.AuthResult.ErrMsg.msg)
  return msg_.GetNoArena();
}
inline void ManualAuthResponse_AuthResult_ErrMsg::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthResponse.AuthResult.ErrMsg.msg)
}
#if LANG_CXX11
inline void ManualAuthResponse_AuthResult_ErrMsg::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthResponse.AuthResult.ErrMsg.msg)
}
#endif
inline void ManualAuthResponse_AuthResult_ErrMsg::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthResponse.AuthResult.ErrMsg.msg)
}
inline void ManualAuthResponse_AuthResult_ErrMsg::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthResponse.AuthResult.ErrMsg.msg)
}
inline ::std::string* ManualAuthResponse_AuthResult_ErrMsg::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.AuthResult.ErrMsg.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthResponse_AuthResult_ErrMsg::release_msg() {
  // @@protoc_insertion_point(field_release:ManualAuthResponse.AuthResult.ErrMsg.msg)
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthResponse_AuthResult_ErrMsg::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthResponse.AuthResult.ErrMsg.msg)
}

// -------------------------------------------------------------------

// ManualAuthResponse_AuthResult

// required int32 code = 1;
inline bool ManualAuthResponse_AuthResult::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManualAuthResponse_AuthResult::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManualAuthResponse_AuthResult::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManualAuthResponse_AuthResult::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 ManualAuthResponse_AuthResult::code() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.AuthResult.code)
  return code_;
}
inline void ManualAuthResponse_AuthResult::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:ManualAuthResponse.AuthResult.code)
}

// required .ManualAuthResponse.AuthResult.ErrMsg err_msg = 2;
inline bool ManualAuthResponse_AuthResult::has_err_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManualAuthResponse_AuthResult::set_has_err_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManualAuthResponse_AuthResult::clear_has_err_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManualAuthResponse_AuthResult::clear_err_msg() {
  if (err_msg_ != NULL) err_msg_->::ManualAuthResponse_AuthResult_ErrMsg::Clear();
  clear_has_err_msg();
}
inline const ::ManualAuthResponse_AuthResult_ErrMsg& ManualAuthResponse_AuthResult::err_msg() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.AuthResult.err_msg)
  return err_msg_ != NULL ? *err_msg_
                         : *::ManualAuthResponse_AuthResult_ErrMsg::internal_default_instance();
}
inline ::ManualAuthResponse_AuthResult_ErrMsg* ManualAuthResponse_AuthResult::mutable_err_msg() {
  set_has_err_msg();
  if (err_msg_ == NULL) {
    err_msg_ = new ::ManualAuthResponse_AuthResult_ErrMsg;
  }
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.AuthResult.err_msg)
  return err_msg_;
}
inline ::ManualAuthResponse_AuthResult_ErrMsg* ManualAuthResponse_AuthResult::release_err_msg() {
  // @@protoc_insertion_point(field_release:ManualAuthResponse.AuthResult.err_msg)
  clear_has_err_msg();
  ::ManualAuthResponse_AuthResult_ErrMsg* temp = err_msg_;
  err_msg_ = NULL;
  return temp;
}
inline void ManualAuthResponse_AuthResult::set_allocated_err_msg(::ManualAuthResponse_AuthResult_ErrMsg* err_msg) {
  delete err_msg_;
  err_msg_ = err_msg;
  if (err_msg) {
    set_has_err_msg();
  } else {
    clear_has_err_msg();
  }
  // @@protoc_insertion_point(field_set_allocated:ManualAuthResponse.AuthResult.err_msg)
}

// -------------------------------------------------------------------

// ManualAuthResponse_AuthParam_Ecdh_EcdhKey

// required int32 len = 1;
inline bool ManualAuthResponse_AuthParam_Ecdh_EcdhKey::has_len() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManualAuthResponse_AuthParam_Ecdh_EcdhKey::set_has_len() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManualAuthResponse_AuthParam_Ecdh_EcdhKey::clear_has_len() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManualAuthResponse_AuthParam_Ecdh_EcdhKey::clear_len() {
  len_ = 0;
  clear_has_len();
}
inline ::google::protobuf::int32 ManualAuthResponse_AuthParam_Ecdh_EcdhKey::len() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.AuthParam.Ecdh.EcdhKey.len)
  return len_;
}
inline void ManualAuthResponse_AuthParam_Ecdh_EcdhKey::set_len(::google::protobuf::int32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:ManualAuthResponse.AuthParam.Ecdh.EcdhKey.len)
}

// optional bytes key = 2;
inline bool ManualAuthResponse_AuthParam_Ecdh_EcdhKey::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManualAuthResponse_AuthParam_Ecdh_EcdhKey::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManualAuthResponse_AuthParam_Ecdh_EcdhKey::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManualAuthResponse_AuthParam_Ecdh_EcdhKey::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& ManualAuthResponse_AuthParam_Ecdh_EcdhKey::key() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.AuthParam.Ecdh.EcdhKey.key)
  return key_.GetNoArena();
}
inline void ManualAuthResponse_AuthParam_Ecdh_EcdhKey::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthResponse.AuthParam.Ecdh.EcdhKey.key)
}
#if LANG_CXX11
inline void ManualAuthResponse_AuthParam_Ecdh_EcdhKey::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthResponse.AuthParam.Ecdh.EcdhKey.key)
}
#endif
inline void ManualAuthResponse_AuthParam_Ecdh_EcdhKey::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthResponse.AuthParam.Ecdh.EcdhKey.key)
}
inline void ManualAuthResponse_AuthParam_Ecdh_EcdhKey::set_key(const void* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthResponse.AuthParam.Ecdh.EcdhKey.key)
}
inline ::std::string* ManualAuthResponse_AuthParam_Ecdh_EcdhKey::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.AuthParam.Ecdh.EcdhKey.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthResponse_AuthParam_Ecdh_EcdhKey::release_key() {
  // @@protoc_insertion_point(field_release:ManualAuthResponse.AuthParam.Ecdh.EcdhKey.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthResponse_AuthParam_Ecdh_EcdhKey::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthResponse.AuthParam.Ecdh.EcdhKey.key)
}

// -------------------------------------------------------------------

// ManualAuthResponse_AuthParam_Ecdh

// required int32 nid = 1;
inline bool ManualAuthResponse_AuthParam_Ecdh::has_nid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManualAuthResponse_AuthParam_Ecdh::set_has_nid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManualAuthResponse_AuthParam_Ecdh::clear_has_nid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManualAuthResponse_AuthParam_Ecdh::clear_nid() {
  nid_ = 0;
  clear_has_nid();
}
inline ::google::protobuf::int32 ManualAuthResponse_AuthParam_Ecdh::nid() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.AuthParam.Ecdh.nid)
  return nid_;
}
inline void ManualAuthResponse_AuthParam_Ecdh::set_nid(::google::protobuf::int32 value) {
  set_has_nid();
  nid_ = value;
  // @@protoc_insertion_point(field_set:ManualAuthResponse.AuthParam.Ecdh.nid)
}

// optional .ManualAuthResponse.AuthParam.Ecdh.EcdhKey ecdhKey = 2;
inline bool ManualAuthResponse_AuthParam_Ecdh::has_ecdhkey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManualAuthResponse_AuthParam_Ecdh::set_has_ecdhkey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManualAuthResponse_AuthParam_Ecdh::clear_has_ecdhkey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManualAuthResponse_AuthParam_Ecdh::clear_ecdhkey() {
  if (ecdhkey_ != NULL) ecdhkey_->::ManualAuthResponse_AuthParam_Ecdh_EcdhKey::Clear();
  clear_has_ecdhkey();
}
inline const ::ManualAuthResponse_AuthParam_Ecdh_EcdhKey& ManualAuthResponse_AuthParam_Ecdh::ecdhkey() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.AuthParam.Ecdh.ecdhKey)
  return ecdhkey_ != NULL ? *ecdhkey_
                         : *::ManualAuthResponse_AuthParam_Ecdh_EcdhKey::internal_default_instance();
}
inline ::ManualAuthResponse_AuthParam_Ecdh_EcdhKey* ManualAuthResponse_AuthParam_Ecdh::mutable_ecdhkey() {
  set_has_ecdhkey();
  if (ecdhkey_ == NULL) {
    ecdhkey_ = new ::ManualAuthResponse_AuthParam_Ecdh_EcdhKey;
  }
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.AuthParam.Ecdh.ecdhKey)
  return ecdhkey_;
}
inline ::ManualAuthResponse_AuthParam_Ecdh_EcdhKey* ManualAuthResponse_AuthParam_Ecdh::release_ecdhkey() {
  // @@protoc_insertion_point(field_release:ManualAuthResponse.AuthParam.Ecdh.ecdhKey)
  clear_has_ecdhkey();
  ::ManualAuthResponse_AuthParam_Ecdh_EcdhKey* temp = ecdhkey_;
  ecdhkey_ = NULL;
  return temp;
}
inline void ManualAuthResponse_AuthParam_Ecdh::set_allocated_ecdhkey(::ManualAuthResponse_AuthParam_Ecdh_EcdhKey* ecdhkey) {
  delete ecdhkey_;
  ecdhkey_ = ecdhkey;
  if (ecdhkey) {
    set_has_ecdhkey();
  } else {
    clear_has_ecdhkey();
  }
  // @@protoc_insertion_point(field_set_allocated:ManualAuthResponse.AuthParam.Ecdh.ecdhKey)
}

// -------------------------------------------------------------------

// ManualAuthResponse_AuthParam_SessionKey

// required int32 len = 1;
inline bool ManualAuthResponse_AuthParam_SessionKey::has_len() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManualAuthResponse_AuthParam_SessionKey::set_has_len() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManualAuthResponse_AuthParam_SessionKey::clear_has_len() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManualAuthResponse_AuthParam_SessionKey::clear_len() {
  len_ = 0;
  clear_has_len();
}
inline ::google::protobuf::int32 ManualAuthResponse_AuthParam_SessionKey::len() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.AuthParam.SessionKey.len)
  return len_;
}
inline void ManualAuthResponse_AuthParam_SessionKey::set_len(::google::protobuf::int32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:ManualAuthResponse.AuthParam.SessionKey.len)
}

// optional bytes key = 2;
inline bool ManualAuthResponse_AuthParam_SessionKey::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManualAuthResponse_AuthParam_SessionKey::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManualAuthResponse_AuthParam_SessionKey::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManualAuthResponse_AuthParam_SessionKey::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& ManualAuthResponse_AuthParam_SessionKey::key() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.AuthParam.SessionKey.key)
  return key_.GetNoArena();
}
inline void ManualAuthResponse_AuthParam_SessionKey::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthResponse.AuthParam.SessionKey.key)
}
#if LANG_CXX11
inline void ManualAuthResponse_AuthParam_SessionKey::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthResponse.AuthParam.SessionKey.key)
}
#endif
inline void ManualAuthResponse_AuthParam_SessionKey::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthResponse.AuthParam.SessionKey.key)
}
inline void ManualAuthResponse_AuthParam_SessionKey::set_key(const void* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthResponse.AuthParam.SessionKey.key)
}
inline ::std::string* ManualAuthResponse_AuthParam_SessionKey::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.AuthParam.SessionKey.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthResponse_AuthParam_SessionKey::release_key() {
  // @@protoc_insertion_point(field_release:ManualAuthResponse.AuthParam.SessionKey.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthResponse_AuthParam_SessionKey::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthResponse.AuthParam.SessionKey.key)
}

// -------------------------------------------------------------------

// ManualAuthResponse_AuthParam

// required int32 uin = 1;
inline bool ManualAuthResponse_AuthParam::has_uin() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ManualAuthResponse_AuthParam::set_has_uin() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ManualAuthResponse_AuthParam::clear_has_uin() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ManualAuthResponse_AuthParam::clear_uin() {
  uin_ = 0;
  clear_has_uin();
}
inline ::google::protobuf::int32 ManualAuthResponse_AuthParam::uin() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.AuthParam.uin)
  return uin_;
}
inline void ManualAuthResponse_AuthParam::set_uin(::google::protobuf::int32 value) {
  set_has_uin();
  uin_ = value;
  // @@protoc_insertion_point(field_set:ManualAuthResponse.AuthParam.uin)
}

// required .ManualAuthResponse.AuthParam.Ecdh ecdh = 2;
inline bool ManualAuthResponse_AuthParam::has_ecdh() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ManualAuthResponse_AuthParam::set_has_ecdh() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ManualAuthResponse_AuthParam::clear_has_ecdh() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ManualAuthResponse_AuthParam::clear_ecdh() {
  if (ecdh_ != NULL) ecdh_->::ManualAuthResponse_AuthParam_Ecdh::Clear();
  clear_has_ecdh();
}
inline const ::ManualAuthResponse_AuthParam_Ecdh& ManualAuthResponse_AuthParam::ecdh() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.AuthParam.ecdh)
  return ecdh_ != NULL ? *ecdh_
                         : *::ManualAuthResponse_AuthParam_Ecdh::internal_default_instance();
}
inline ::ManualAuthResponse_AuthParam_Ecdh* ManualAuthResponse_AuthParam::mutable_ecdh() {
  set_has_ecdh();
  if (ecdh_ == NULL) {
    ecdh_ = new ::ManualAuthResponse_AuthParam_Ecdh;
  }
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.AuthParam.ecdh)
  return ecdh_;
}
inline ::ManualAuthResponse_AuthParam_Ecdh* ManualAuthResponse_AuthParam::release_ecdh() {
  // @@protoc_insertion_point(field_release:ManualAuthResponse.AuthParam.ecdh)
  clear_has_ecdh();
  ::ManualAuthResponse_AuthParam_Ecdh* temp = ecdh_;
  ecdh_ = NULL;
  return temp;
}
inline void ManualAuthResponse_AuthParam::set_allocated_ecdh(::ManualAuthResponse_AuthParam_Ecdh* ecdh) {
  delete ecdh_;
  ecdh_ = ecdh;
  if (ecdh) {
    set_has_ecdh();
  } else {
    clear_has_ecdh();
  }
  // @@protoc_insertion_point(field_set_allocated:ManualAuthResponse.AuthParam.ecdh)
}

// required .ManualAuthResponse.AuthParam.SessionKey session = 3;
inline bool ManualAuthResponse_AuthParam::has_session() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ManualAuthResponse_AuthParam::set_has_session() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ManualAuthResponse_AuthParam::clear_has_session() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ManualAuthResponse_AuthParam::clear_session() {
  if (session_ != NULL) session_->::ManualAuthResponse_AuthParam_SessionKey::Clear();
  clear_has_session();
}
inline const ::ManualAuthResponse_AuthParam_SessionKey& ManualAuthResponse_AuthParam::session() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.AuthParam.session)
  return session_ != NULL ? *session_
                         : *::ManualAuthResponse_AuthParam_SessionKey::internal_default_instance();
}
inline ::ManualAuthResponse_AuthParam_SessionKey* ManualAuthResponse_AuthParam::mutable_session() {
  set_has_session();
  if (session_ == NULL) {
    session_ = new ::ManualAuthResponse_AuthParam_SessionKey;
  }
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.AuthParam.session)
  return session_;
}
inline ::ManualAuthResponse_AuthParam_SessionKey* ManualAuthResponse_AuthParam::release_session() {
  // @@protoc_insertion_point(field_release:ManualAuthResponse.AuthParam.session)
  clear_has_session();
  ::ManualAuthResponse_AuthParam_SessionKey* temp = session_;
  session_ = NULL;
  return temp;
}
inline void ManualAuthResponse_AuthParam::set_allocated_session(::ManualAuthResponse_AuthParam_SessionKey* session) {
  delete session_;
  session_ = session;
  if (session) {
    set_has_session();
  } else {
    clear_has_session();
  }
  // @@protoc_insertion_point(field_set_allocated:ManualAuthResponse.AuthParam.session)
}

// optional bytes SmsTicket = 16;
inline bool ManualAuthResponse_AuthParam::has_smsticket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManualAuthResponse_AuthParam::set_has_smsticket() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManualAuthResponse_AuthParam::clear_has_smsticket() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManualAuthResponse_AuthParam::clear_smsticket() {
  smsticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_smsticket();
}
inline const ::std::string& ManualAuthResponse_AuthParam::smsticket() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.AuthParam.SmsTicket)
  return smsticket_.GetNoArena();
}
inline void ManualAuthResponse_AuthParam::set_smsticket(const ::std::string& value) {
  set_has_smsticket();
  smsticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthResponse.AuthParam.SmsTicket)
}
#if LANG_CXX11
inline void ManualAuthResponse_AuthParam::set_smsticket(::std::string&& value) {
  set_has_smsticket();
  smsticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthResponse.AuthParam.SmsTicket)
}
#endif
inline void ManualAuthResponse_AuthParam::set_smsticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_smsticket();
  smsticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthResponse.AuthParam.SmsTicket)
}
inline void ManualAuthResponse_AuthParam::set_smsticket(const void* value, size_t size) {
  set_has_smsticket();
  smsticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthResponse.AuthParam.SmsTicket)
}
inline ::std::string* ManualAuthResponse_AuthParam::mutable_smsticket() {
  set_has_smsticket();
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.AuthParam.SmsTicket)
  return smsticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthResponse_AuthParam::release_smsticket() {
  // @@protoc_insertion_point(field_release:ManualAuthResponse.AuthParam.SmsTicket)
  clear_has_smsticket();
  return smsticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthResponse_AuthParam::set_allocated_smsticket(::std::string* smsticket) {
  if (smsticket != NULL) {
    set_has_smsticket();
  } else {
    clear_has_smsticket();
  }
  smsticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smsticket);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthResponse.AuthParam.SmsTicket)
}

// optional string bindMailLoginUrl = 20;
inline bool ManualAuthResponse_AuthParam::has_bindmailloginurl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManualAuthResponse_AuthParam::set_has_bindmailloginurl() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManualAuthResponse_AuthParam::clear_has_bindmailloginurl() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManualAuthResponse_AuthParam::clear_bindmailloginurl() {
  bindmailloginurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bindmailloginurl();
}
inline const ::std::string& ManualAuthResponse_AuthParam::bindmailloginurl() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.AuthParam.bindMailLoginUrl)
  return bindmailloginurl_.GetNoArena();
}
inline void ManualAuthResponse_AuthParam::set_bindmailloginurl(const ::std::string& value) {
  set_has_bindmailloginurl();
  bindmailloginurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthResponse.AuthParam.bindMailLoginUrl)
}
#if LANG_CXX11
inline void ManualAuthResponse_AuthParam::set_bindmailloginurl(::std::string&& value) {
  set_has_bindmailloginurl();
  bindmailloginurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthResponse.AuthParam.bindMailLoginUrl)
}
#endif
inline void ManualAuthResponse_AuthParam::set_bindmailloginurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bindmailloginurl();
  bindmailloginurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthResponse.AuthParam.bindMailLoginUrl)
}
inline void ManualAuthResponse_AuthParam::set_bindmailloginurl(const char* value, size_t size) {
  set_has_bindmailloginurl();
  bindmailloginurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthResponse.AuthParam.bindMailLoginUrl)
}
inline ::std::string* ManualAuthResponse_AuthParam::mutable_bindmailloginurl() {
  set_has_bindmailloginurl();
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.AuthParam.bindMailLoginUrl)
  return bindmailloginurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthResponse_AuthParam::release_bindmailloginurl() {
  // @@protoc_insertion_point(field_release:ManualAuthResponse.AuthParam.bindMailLoginUrl)
  clear_has_bindmailloginurl();
  return bindmailloginurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthResponse_AuthParam::set_allocated_bindmailloginurl(::std::string* bindmailloginurl) {
  if (bindmailloginurl != NULL) {
    set_has_bindmailloginurl();
  } else {
    clear_has_bindmailloginurl();
  }
  bindmailloginurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bindmailloginurl);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthResponse.AuthParam.bindMailLoginUrl)
}

// optional int32 serverTime = 22;
inline bool ManualAuthResponse_AuthParam::has_servertime() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ManualAuthResponse_AuthParam::set_has_servertime() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ManualAuthResponse_AuthParam::clear_has_servertime() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ManualAuthResponse_AuthParam::clear_servertime() {
  servertime_ = 0;
  clear_has_servertime();
}
inline ::google::protobuf::int32 ManualAuthResponse_AuthParam::servertime() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.AuthParam.serverTime)
  return servertime_;
}
inline void ManualAuthResponse_AuthParam::set_servertime(::google::protobuf::int32 value) {
  set_has_servertime();
  servertime_ = value;
  // @@protoc_insertion_point(field_set:ManualAuthResponse.AuthParam.serverTime)
}

// -------------------------------------------------------------------

// ManualAuthResponse_AccountInfo

// optional string wxId = 1;
inline bool ManualAuthResponse_AccountInfo::has_wxid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManualAuthResponse_AccountInfo::set_has_wxid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManualAuthResponse_AccountInfo::clear_has_wxid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManualAuthResponse_AccountInfo::clear_wxid() {
  wxid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_wxid();
}
inline const ::std::string& ManualAuthResponse_AccountInfo::wxid() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.AccountInfo.wxId)
  return wxid_.GetNoArena();
}
inline void ManualAuthResponse_AccountInfo::set_wxid(const ::std::string& value) {
  set_has_wxid();
  wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthResponse.AccountInfo.wxId)
}
#if LANG_CXX11
inline void ManualAuthResponse_AccountInfo::set_wxid(::std::string&& value) {
  set_has_wxid();
  wxid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthResponse.AccountInfo.wxId)
}
#endif
inline void ManualAuthResponse_AccountInfo::set_wxid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_wxid();
  wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthResponse.AccountInfo.wxId)
}
inline void ManualAuthResponse_AccountInfo::set_wxid(const char* value, size_t size) {
  set_has_wxid();
  wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthResponse.AccountInfo.wxId)
}
inline ::std::string* ManualAuthResponse_AccountInfo::mutable_wxid() {
  set_has_wxid();
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.AccountInfo.wxId)
  return wxid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthResponse_AccountInfo::release_wxid() {
  // @@protoc_insertion_point(field_release:ManualAuthResponse.AccountInfo.wxId)
  clear_has_wxid();
  return wxid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthResponse_AccountInfo::set_allocated_wxid(::std::string* wxid) {
  if (wxid != NULL) {
    set_has_wxid();
  } else {
    clear_has_wxid();
  }
  wxid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wxid);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthResponse.AccountInfo.wxId)
}

// optional string nickName = 2;
inline bool ManualAuthResponse_AccountInfo::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManualAuthResponse_AccountInfo::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManualAuthResponse_AccountInfo::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManualAuthResponse_AccountInfo::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& ManualAuthResponse_AccountInfo::nickname() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.AccountInfo.nickName)
  return nickname_.GetNoArena();
}
inline void ManualAuthResponse_AccountInfo::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthResponse.AccountInfo.nickName)
}
#if LANG_CXX11
inline void ManualAuthResponse_AccountInfo::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthResponse.AccountInfo.nickName)
}
#endif
inline void ManualAuthResponse_AccountInfo::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthResponse.AccountInfo.nickName)
}
inline void ManualAuthResponse_AccountInfo::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthResponse.AccountInfo.nickName)
}
inline ::std::string* ManualAuthResponse_AccountInfo::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.AccountInfo.nickName)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthResponse_AccountInfo::release_nickname() {
  // @@protoc_insertion_point(field_release:ManualAuthResponse.AccountInfo.nickName)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthResponse_AccountInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthResponse.AccountInfo.nickName)
}

// optional int32 tag3 = 3;
inline bool ManualAuthResponse_AccountInfo::has_tag3() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ManualAuthResponse_AccountInfo::set_has_tag3() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ManualAuthResponse_AccountInfo::clear_has_tag3() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ManualAuthResponse_AccountInfo::clear_tag3() {
  tag3_ = 0;
  clear_has_tag3();
}
inline ::google::protobuf::int32 ManualAuthResponse_AccountInfo::tag3() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.AccountInfo.tag3)
  return tag3_;
}
inline void ManualAuthResponse_AccountInfo::set_tag3(::google::protobuf::int32 value) {
  set_has_tag3();
  tag3_ = value;
  // @@protoc_insertion_point(field_set:ManualAuthResponse.AccountInfo.tag3)
}

// optional string bindMail = 4;
inline bool ManualAuthResponse_AccountInfo::has_bindmail() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ManualAuthResponse_AccountInfo::set_has_bindmail() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ManualAuthResponse_AccountInfo::clear_has_bindmail() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ManualAuthResponse_AccountInfo::clear_bindmail() {
  bindmail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bindmail();
}
inline const ::std::string& ManualAuthResponse_AccountInfo::bindmail() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.AccountInfo.bindMail)
  return bindmail_.GetNoArena();
}
inline void ManualAuthResponse_AccountInfo::set_bindmail(const ::std::string& value) {
  set_has_bindmail();
  bindmail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthResponse.AccountInfo.bindMail)
}
#if LANG_CXX11
inline void ManualAuthResponse_AccountInfo::set_bindmail(::std::string&& value) {
  set_has_bindmail();
  bindmail_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthResponse.AccountInfo.bindMail)
}
#endif
inline void ManualAuthResponse_AccountInfo::set_bindmail(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bindmail();
  bindmail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthResponse.AccountInfo.bindMail)
}
inline void ManualAuthResponse_AccountInfo::set_bindmail(const char* value, size_t size) {
  set_has_bindmail();
  bindmail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthResponse.AccountInfo.bindMail)
}
inline ::std::string* ManualAuthResponse_AccountInfo::mutable_bindmail() {
  set_has_bindmail();
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.AccountInfo.bindMail)
  return bindmail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthResponse_AccountInfo::release_bindmail() {
  // @@protoc_insertion_point(field_release:ManualAuthResponse.AccountInfo.bindMail)
  clear_has_bindmail();
  return bindmail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthResponse_AccountInfo::set_allocated_bindmail(::std::string* bindmail) {
  if (bindmail != NULL) {
    set_has_bindmail();
  } else {
    clear_has_bindmail();
  }
  bindmail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bindmail);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthResponse.AccountInfo.bindMail)
}

// optional string bindMobile = 5;
inline bool ManualAuthResponse_AccountInfo::has_bindmobile() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ManualAuthResponse_AccountInfo::set_has_bindmobile() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ManualAuthResponse_AccountInfo::clear_has_bindmobile() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ManualAuthResponse_AccountInfo::clear_bindmobile() {
  bindmobile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bindmobile();
}
inline const ::std::string& ManualAuthResponse_AccountInfo::bindmobile() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.AccountInfo.bindMobile)
  return bindmobile_.GetNoArena();
}
inline void ManualAuthResponse_AccountInfo::set_bindmobile(const ::std::string& value) {
  set_has_bindmobile();
  bindmobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthResponse.AccountInfo.bindMobile)
}
#if LANG_CXX11
inline void ManualAuthResponse_AccountInfo::set_bindmobile(::std::string&& value) {
  set_has_bindmobile();
  bindmobile_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthResponse.AccountInfo.bindMobile)
}
#endif
inline void ManualAuthResponse_AccountInfo::set_bindmobile(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bindmobile();
  bindmobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthResponse.AccountInfo.bindMobile)
}
inline void ManualAuthResponse_AccountInfo::set_bindmobile(const char* value, size_t size) {
  set_has_bindmobile();
  bindmobile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthResponse.AccountInfo.bindMobile)
}
inline ::std::string* ManualAuthResponse_AccountInfo::mutable_bindmobile() {
  set_has_bindmobile();
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.AccountInfo.bindMobile)
  return bindmobile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthResponse_AccountInfo::release_bindmobile() {
  // @@protoc_insertion_point(field_release:ManualAuthResponse.AccountInfo.bindMobile)
  clear_has_bindmobile();
  return bindmobile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthResponse_AccountInfo::set_allocated_bindmobile(::std::string* bindmobile) {
  if (bindmobile != NULL) {
    set_has_bindmobile();
  } else {
    clear_has_bindmobile();
  }
  bindmobile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bindmobile);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthResponse.AccountInfo.bindMobile)
}

// optional string Alias = 6;
inline bool ManualAuthResponse_AccountInfo::has_alias() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ManualAuthResponse_AccountInfo::set_has_alias() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ManualAuthResponse_AccountInfo::clear_has_alias() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ManualAuthResponse_AccountInfo::clear_alias() {
  alias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alias();
}
inline const ::std::string& ManualAuthResponse_AccountInfo::alias() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.AccountInfo.Alias)
  return alias_.GetNoArena();
}
inline void ManualAuthResponse_AccountInfo::set_alias(const ::std::string& value) {
  set_has_alias();
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthResponse.AccountInfo.Alias)
}
#if LANG_CXX11
inline void ManualAuthResponse_AccountInfo::set_alias(::std::string&& value) {
  set_has_alias();
  alias_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthResponse.AccountInfo.Alias)
}
#endif
inline void ManualAuthResponse_AccountInfo::set_alias(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alias();
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthResponse.AccountInfo.Alias)
}
inline void ManualAuthResponse_AccountInfo::set_alias(const char* value, size_t size) {
  set_has_alias();
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthResponse.AccountInfo.Alias)
}
inline ::std::string* ManualAuthResponse_AccountInfo::mutable_alias() {
  set_has_alias();
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.AccountInfo.Alias)
  return alias_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthResponse_AccountInfo::release_alias() {
  // @@protoc_insertion_point(field_release:ManualAuthResponse.AccountInfo.Alias)
  clear_has_alias();
  return alias_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthResponse_AccountInfo::set_allocated_alias(::std::string* alias) {
  if (alias != NULL) {
    set_has_alias();
  } else {
    clear_has_alias();
  }
  alias_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alias);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthResponse.AccountInfo.Alias)
}

// optional string tag7 = 7;
inline bool ManualAuthResponse_AccountInfo::has_tag7() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ManualAuthResponse_AccountInfo::set_has_tag7() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ManualAuthResponse_AccountInfo::clear_has_tag7() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ManualAuthResponse_AccountInfo::clear_tag7() {
  tag7_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag7();
}
inline const ::std::string& ManualAuthResponse_AccountInfo::tag7() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.AccountInfo.tag7)
  return tag7_.GetNoArena();
}
inline void ManualAuthResponse_AccountInfo::set_tag7(const ::std::string& value) {
  set_has_tag7();
  tag7_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthResponse.AccountInfo.tag7)
}
#if LANG_CXX11
inline void ManualAuthResponse_AccountInfo::set_tag7(::std::string&& value) {
  set_has_tag7();
  tag7_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthResponse.AccountInfo.tag7)
}
#endif
inline void ManualAuthResponse_AccountInfo::set_tag7(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag7();
  tag7_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthResponse.AccountInfo.tag7)
}
inline void ManualAuthResponse_AccountInfo::set_tag7(const char* value, size_t size) {
  set_has_tag7();
  tag7_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthResponse.AccountInfo.tag7)
}
inline ::std::string* ManualAuthResponse_AccountInfo::mutable_tag7() {
  set_has_tag7();
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.AccountInfo.tag7)
  return tag7_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthResponse_AccountInfo::release_tag7() {
  // @@protoc_insertion_point(field_release:ManualAuthResponse.AccountInfo.tag7)
  clear_has_tag7();
  return tag7_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthResponse_AccountInfo::set_allocated_tag7(::std::string* tag7) {
  if (tag7 != NULL) {
    set_has_tag7();
  } else {
    clear_has_tag7();
  }
  tag7_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag7);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthResponse.AccountInfo.tag7)
}

// optional int32 status = 8;
inline bool ManualAuthResponse_AccountInfo::has_status() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ManualAuthResponse_AccountInfo::set_has_status() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ManualAuthResponse_AccountInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ManualAuthResponse_AccountInfo::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 ManualAuthResponse_AccountInfo::status() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.AccountInfo.status)
  return status_;
}
inline void ManualAuthResponse_AccountInfo::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ManualAuthResponse.AccountInfo.status)
}

// optional int32 pluginFlag = 9;
inline bool ManualAuthResponse_AccountInfo::has_pluginflag() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ManualAuthResponse_AccountInfo::set_has_pluginflag() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ManualAuthResponse_AccountInfo::clear_has_pluginflag() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ManualAuthResponse_AccountInfo::clear_pluginflag() {
  pluginflag_ = 0;
  clear_has_pluginflag();
}
inline ::google::protobuf::int32 ManualAuthResponse_AccountInfo::pluginflag() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.AccountInfo.pluginFlag)
  return pluginflag_;
}
inline void ManualAuthResponse_AccountInfo::set_pluginflag(::google::protobuf::int32 value) {
  set_has_pluginflag();
  pluginflag_ = value;
  // @@protoc_insertion_point(field_set:ManualAuthResponse.AccountInfo.pluginFlag)
}

// optional int32 registerType = 10;
inline bool ManualAuthResponse_AccountInfo::has_registertype() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ManualAuthResponse_AccountInfo::set_has_registertype() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ManualAuthResponse_AccountInfo::clear_has_registertype() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ManualAuthResponse_AccountInfo::clear_registertype() {
  registertype_ = 0;
  clear_has_registertype();
}
inline ::google::protobuf::int32 ManualAuthResponse_AccountInfo::registertype() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.AccountInfo.registerType)
  return registertype_;
}
inline void ManualAuthResponse_AccountInfo::set_registertype(::google::protobuf::int32 value) {
  set_has_registertype();
  registertype_ = value;
  // @@protoc_insertion_point(field_set:ManualAuthResponse.AccountInfo.registerType)
}

// optional string tag11 = 11;
inline bool ManualAuthResponse_AccountInfo::has_tag11() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ManualAuthResponse_AccountInfo::set_has_tag11() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ManualAuthResponse_AccountInfo::clear_has_tag11() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ManualAuthResponse_AccountInfo::clear_tag11() {
  tag11_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag11();
}
inline const ::std::string& ManualAuthResponse_AccountInfo::tag11() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.AccountInfo.tag11)
  return tag11_.GetNoArena();
}
inline void ManualAuthResponse_AccountInfo::set_tag11(const ::std::string& value) {
  set_has_tag11();
  tag11_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthResponse.AccountInfo.tag11)
}
#if LANG_CXX11
inline void ManualAuthResponse_AccountInfo::set_tag11(::std::string&& value) {
  set_has_tag11();
  tag11_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthResponse.AccountInfo.tag11)
}
#endif
inline void ManualAuthResponse_AccountInfo::set_tag11(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag11();
  tag11_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthResponse.AccountInfo.tag11)
}
inline void ManualAuthResponse_AccountInfo::set_tag11(const char* value, size_t size) {
  set_has_tag11();
  tag11_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthResponse.AccountInfo.tag11)
}
inline ::std::string* ManualAuthResponse_AccountInfo::mutable_tag11() {
  set_has_tag11();
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.AccountInfo.tag11)
  return tag11_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthResponse_AccountInfo::release_tag11() {
  // @@protoc_insertion_point(field_release:ManualAuthResponse.AccountInfo.tag11)
  clear_has_tag11();
  return tag11_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthResponse_AccountInfo::set_allocated_tag11(::std::string* tag11) {
  if (tag11 != NULL) {
    set_has_tag11();
  } else {
    clear_has_tag11();
  }
  tag11_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag11);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthResponse.AccountInfo.tag11)
}

// optional int32 safeDevice = 12;
inline bool ManualAuthResponse_AccountInfo::has_safedevice() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ManualAuthResponse_AccountInfo::set_has_safedevice() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ManualAuthResponse_AccountInfo::clear_has_safedevice() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ManualAuthResponse_AccountInfo::clear_safedevice() {
  safedevice_ = 0;
  clear_has_safedevice();
}
inline ::google::protobuf::int32 ManualAuthResponse_AccountInfo::safedevice() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.AccountInfo.safeDevice)
  return safedevice_;
}
inline void ManualAuthResponse_AccountInfo::set_safedevice(::google::protobuf::int32 value) {
  set_has_safedevice();
  safedevice_ = value;
  // @@protoc_insertion_point(field_set:ManualAuthResponse.AccountInfo.safeDevice)
}

// optional string officialNamePinyin = 13;
inline bool ManualAuthResponse_AccountInfo::has_officialnamepinyin() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ManualAuthResponse_AccountInfo::set_has_officialnamepinyin() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ManualAuthResponse_AccountInfo::clear_has_officialnamepinyin() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ManualAuthResponse_AccountInfo::clear_officialnamepinyin() {
  officialnamepinyin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_officialnamepinyin();
}
inline const ::std::string& ManualAuthResponse_AccountInfo::officialnamepinyin() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.AccountInfo.officialNamePinyin)
  return officialnamepinyin_.GetNoArena();
}
inline void ManualAuthResponse_AccountInfo::set_officialnamepinyin(const ::std::string& value) {
  set_has_officialnamepinyin();
  officialnamepinyin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthResponse.AccountInfo.officialNamePinyin)
}
#if LANG_CXX11
inline void ManualAuthResponse_AccountInfo::set_officialnamepinyin(::std::string&& value) {
  set_has_officialnamepinyin();
  officialnamepinyin_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthResponse.AccountInfo.officialNamePinyin)
}
#endif
inline void ManualAuthResponse_AccountInfo::set_officialnamepinyin(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_officialnamepinyin();
  officialnamepinyin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthResponse.AccountInfo.officialNamePinyin)
}
inline void ManualAuthResponse_AccountInfo::set_officialnamepinyin(const char* value, size_t size) {
  set_has_officialnamepinyin();
  officialnamepinyin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthResponse.AccountInfo.officialNamePinyin)
}
inline ::std::string* ManualAuthResponse_AccountInfo::mutable_officialnamepinyin() {
  set_has_officialnamepinyin();
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.AccountInfo.officialNamePinyin)
  return officialnamepinyin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthResponse_AccountInfo::release_officialnamepinyin() {
  // @@protoc_insertion_point(field_release:ManualAuthResponse.AccountInfo.officialNamePinyin)
  clear_has_officialnamepinyin();
  return officialnamepinyin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthResponse_AccountInfo::set_allocated_officialnamepinyin(::std::string* officialnamepinyin) {
  if (officialnamepinyin != NULL) {
    set_has_officialnamepinyin();
  } else {
    clear_has_officialnamepinyin();
  }
  officialnamepinyin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), officialnamepinyin);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthResponse.AccountInfo.officialNamePinyin)
}

// optional string officialNameZh = 14;
inline bool ManualAuthResponse_AccountInfo::has_officialnamezh() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ManualAuthResponse_AccountInfo::set_has_officialnamezh() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ManualAuthResponse_AccountInfo::clear_has_officialnamezh() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ManualAuthResponse_AccountInfo::clear_officialnamezh() {
  officialnamezh_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_officialnamezh();
}
inline const ::std::string& ManualAuthResponse_AccountInfo::officialnamezh() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.AccountInfo.officialNameZh)
  return officialnamezh_.GetNoArena();
}
inline void ManualAuthResponse_AccountInfo::set_officialnamezh(const ::std::string& value) {
  set_has_officialnamezh();
  officialnamezh_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthResponse.AccountInfo.officialNameZh)
}
#if LANG_CXX11
inline void ManualAuthResponse_AccountInfo::set_officialnamezh(::std::string&& value) {
  set_has_officialnamezh();
  officialnamezh_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthResponse.AccountInfo.officialNameZh)
}
#endif
inline void ManualAuthResponse_AccountInfo::set_officialnamezh(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_officialnamezh();
  officialnamezh_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthResponse.AccountInfo.officialNameZh)
}
inline void ManualAuthResponse_AccountInfo::set_officialnamezh(const char* value, size_t size) {
  set_has_officialnamezh();
  officialnamezh_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthResponse.AccountInfo.officialNameZh)
}
inline ::std::string* ManualAuthResponse_AccountInfo::mutable_officialnamezh() {
  set_has_officialnamezh();
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.AccountInfo.officialNameZh)
  return officialnamezh_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthResponse_AccountInfo::release_officialnamezh() {
  // @@protoc_insertion_point(field_release:ManualAuthResponse.AccountInfo.officialNameZh)
  clear_has_officialnamezh();
  return officialnamezh_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthResponse_AccountInfo::set_allocated_officialnamezh(::std::string* officialnamezh) {
  if (officialnamezh != NULL) {
    set_has_officialnamezh();
  } else {
    clear_has_officialnamezh();
  }
  officialnamezh_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), officialnamezh);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthResponse.AccountInfo.officialNameZh)
}

// optional string tag15 = 15;
inline bool ManualAuthResponse_AccountInfo::has_tag15() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ManualAuthResponse_AccountInfo::set_has_tag15() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ManualAuthResponse_AccountInfo::clear_has_tag15() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ManualAuthResponse_AccountInfo::clear_tag15() {
  tag15_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag15();
}
inline const ::std::string& ManualAuthResponse_AccountInfo::tag15() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.AccountInfo.tag15)
  return tag15_.GetNoArena();
}
inline void ManualAuthResponse_AccountInfo::set_tag15(const ::std::string& value) {
  set_has_tag15();
  tag15_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthResponse.AccountInfo.tag15)
}
#if LANG_CXX11
inline void ManualAuthResponse_AccountInfo::set_tag15(::std::string&& value) {
  set_has_tag15();
  tag15_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthResponse.AccountInfo.tag15)
}
#endif
inline void ManualAuthResponse_AccountInfo::set_tag15(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag15();
  tag15_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthResponse.AccountInfo.tag15)
}
inline void ManualAuthResponse_AccountInfo::set_tag15(const char* value, size_t size) {
  set_has_tag15();
  tag15_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthResponse.AccountInfo.tag15)
}
inline ::std::string* ManualAuthResponse_AccountInfo::mutable_tag15() {
  set_has_tag15();
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.AccountInfo.tag15)
  return tag15_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthResponse_AccountInfo::release_tag15() {
  // @@protoc_insertion_point(field_release:ManualAuthResponse.AccountInfo.tag15)
  clear_has_tag15();
  return tag15_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthResponse_AccountInfo::set_allocated_tag15(::std::string* tag15) {
  if (tag15 != NULL) {
    set_has_tag15();
  } else {
    clear_has_tag15();
  }
  tag15_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag15);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthResponse.AccountInfo.tag15)
}

// optional string fsUrl = 16;
inline bool ManualAuthResponse_AccountInfo::has_fsurl() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ManualAuthResponse_AccountInfo::set_has_fsurl() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ManualAuthResponse_AccountInfo::clear_has_fsurl() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ManualAuthResponse_AccountInfo::clear_fsurl() {
  fsurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fsurl();
}
inline const ::std::string& ManualAuthResponse_AccountInfo::fsurl() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.AccountInfo.fsUrl)
  return fsurl_.GetNoArena();
}
inline void ManualAuthResponse_AccountInfo::set_fsurl(const ::std::string& value) {
  set_has_fsurl();
  fsurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthResponse.AccountInfo.fsUrl)
}
#if LANG_CXX11
inline void ManualAuthResponse_AccountInfo::set_fsurl(::std::string&& value) {
  set_has_fsurl();
  fsurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthResponse.AccountInfo.fsUrl)
}
#endif
inline void ManualAuthResponse_AccountInfo::set_fsurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_fsurl();
  fsurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthResponse.AccountInfo.fsUrl)
}
inline void ManualAuthResponse_AccountInfo::set_fsurl(const char* value, size_t size) {
  set_has_fsurl();
  fsurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthResponse.AccountInfo.fsUrl)
}
inline ::std::string* ManualAuthResponse_AccountInfo::mutable_fsurl() {
  set_has_fsurl();
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.AccountInfo.fsUrl)
  return fsurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthResponse_AccountInfo::release_fsurl() {
  // @@protoc_insertion_point(field_release:ManualAuthResponse.AccountInfo.fsUrl)
  clear_has_fsurl();
  return fsurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthResponse_AccountInfo::set_allocated_fsurl(::std::string* fsurl) {
  if (fsurl != NULL) {
    set_has_fsurl();
  } else {
    clear_has_fsurl();
  }
  fsurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fsurl);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthResponse.AccountInfo.fsUrl)
}

// -------------------------------------------------------------------

// ManualAuthResponse_dns_info_redirect_info_real_host_info

// optional string host = 1;
inline bool ManualAuthResponse_dns_info_redirect_info_real_host_info::has_host() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManualAuthResponse_dns_info_redirect_info_real_host_info::set_has_host() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManualAuthResponse_dns_info_redirect_info_real_host_info::clear_has_host() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManualAuthResponse_dns_info_redirect_info_real_host_info::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host();
}
inline const ::std::string& ManualAuthResponse_dns_info_redirect_info_real_host_info::host() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.dns_info.redirect_info.real_host_info.host)
  return host_.GetNoArena();
}
inline void ManualAuthResponse_dns_info_redirect_info_real_host_info::set_host(const ::std::string& value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthResponse.dns_info.redirect_info.real_host_info.host)
}
#if LANG_CXX11
inline void ManualAuthResponse_dns_info_redirect_info_real_host_info::set_host(::std::string&& value) {
  set_has_host();
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthResponse.dns_info.redirect_info.real_host_info.host)
}
#endif
inline void ManualAuthResponse_dns_info_redirect_info_real_host_info::set_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthResponse.dns_info.redirect_info.real_host_info.host)
}
inline void ManualAuthResponse_dns_info_redirect_info_real_host_info::set_host(const char* value, size_t size) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthResponse.dns_info.redirect_info.real_host_info.host)
}
inline ::std::string* ManualAuthResponse_dns_info_redirect_info_real_host_info::mutable_host() {
  set_has_host();
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.dns_info.redirect_info.real_host_info.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthResponse_dns_info_redirect_info_real_host_info::release_host() {
  // @@protoc_insertion_point(field_release:ManualAuthResponse.dns_info.redirect_info.real_host_info.host)
  clear_has_host();
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthResponse_dns_info_redirect_info_real_host_info::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    set_has_host();
  } else {
    clear_has_host();
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthResponse.dns_info.redirect_info.real_host_info.host)
}

// optional string redirect = 2;
inline bool ManualAuthResponse_dns_info_redirect_info_real_host_info::has_redirect() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManualAuthResponse_dns_info_redirect_info_real_host_info::set_has_redirect() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManualAuthResponse_dns_info_redirect_info_real_host_info::clear_has_redirect() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManualAuthResponse_dns_info_redirect_info_real_host_info::clear_redirect() {
  redirect_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_redirect();
}
inline const ::std::string& ManualAuthResponse_dns_info_redirect_info_real_host_info::redirect() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.dns_info.redirect_info.real_host_info.redirect)
  return redirect_.GetNoArena();
}
inline void ManualAuthResponse_dns_info_redirect_info_real_host_info::set_redirect(const ::std::string& value) {
  set_has_redirect();
  redirect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthResponse.dns_info.redirect_info.real_host_info.redirect)
}
#if LANG_CXX11
inline void ManualAuthResponse_dns_info_redirect_info_real_host_info::set_redirect(::std::string&& value) {
  set_has_redirect();
  redirect_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthResponse.dns_info.redirect_info.real_host_info.redirect)
}
#endif
inline void ManualAuthResponse_dns_info_redirect_info_real_host_info::set_redirect(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_redirect();
  redirect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthResponse.dns_info.redirect_info.real_host_info.redirect)
}
inline void ManualAuthResponse_dns_info_redirect_info_real_host_info::set_redirect(const char* value, size_t size) {
  set_has_redirect();
  redirect_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthResponse.dns_info.redirect_info.real_host_info.redirect)
}
inline ::std::string* ManualAuthResponse_dns_info_redirect_info_real_host_info::mutable_redirect() {
  set_has_redirect();
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.dns_info.redirect_info.real_host_info.redirect)
  return redirect_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthResponse_dns_info_redirect_info_real_host_info::release_redirect() {
  // @@protoc_insertion_point(field_release:ManualAuthResponse.dns_info.redirect_info.real_host_info.redirect)
  clear_has_redirect();
  return redirect_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthResponse_dns_info_redirect_info_real_host_info::set_allocated_redirect(::std::string* redirect) {
  if (redirect != NULL) {
    set_has_redirect();
  } else {
    clear_has_redirect();
  }
  redirect_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), redirect);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthResponse.dns_info.redirect_info.real_host_info.redirect)
}

// -------------------------------------------------------------------

// ManualAuthResponse_dns_info_redirect_info

// optional int32 cnt = 1;
inline bool ManualAuthResponse_dns_info_redirect_info::has_cnt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManualAuthResponse_dns_info_redirect_info::set_has_cnt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManualAuthResponse_dns_info_redirect_info::clear_has_cnt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManualAuthResponse_dns_info_redirect_info::clear_cnt() {
  cnt_ = 0;
  clear_has_cnt();
}
inline ::google::protobuf::int32 ManualAuthResponse_dns_info_redirect_info::cnt() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.dns_info.redirect_info.cnt)
  return cnt_;
}
inline void ManualAuthResponse_dns_info_redirect_info::set_cnt(::google::protobuf::int32 value) {
  set_has_cnt();
  cnt_ = value;
  // @@protoc_insertion_point(field_set:ManualAuthResponse.dns_info.redirect_info.cnt)
}

// repeated .ManualAuthResponse.dns_info.redirect_info.real_host_info real_host = 2;
inline int ManualAuthResponse_dns_info_redirect_info::real_host_size() const {
  return real_host_.size();
}
inline void ManualAuthResponse_dns_info_redirect_info::clear_real_host() {
  real_host_.Clear();
}
inline const ::ManualAuthResponse_dns_info_redirect_info_real_host_info& ManualAuthResponse_dns_info_redirect_info::real_host(int index) const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.dns_info.redirect_info.real_host)
  return real_host_.Get(index);
}
inline ::ManualAuthResponse_dns_info_redirect_info_real_host_info* ManualAuthResponse_dns_info_redirect_info::mutable_real_host(int index) {
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.dns_info.redirect_info.real_host)
  return real_host_.Mutable(index);
}
inline ::ManualAuthResponse_dns_info_redirect_info_real_host_info* ManualAuthResponse_dns_info_redirect_info::add_real_host() {
  // @@protoc_insertion_point(field_add:ManualAuthResponse.dns_info.redirect_info.real_host)
  return real_host_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ManualAuthResponse_dns_info_redirect_info_real_host_info >*
ManualAuthResponse_dns_info_redirect_info::mutable_real_host() {
  // @@protoc_insertion_point(field_mutable_list:ManualAuthResponse.dns_info.redirect_info.real_host)
  return &real_host_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ManualAuthResponse_dns_info_redirect_info_real_host_info >&
ManualAuthResponse_dns_info_redirect_info::real_host() const {
  // @@protoc_insertion_point(field_list:ManualAuthResponse.dns_info.redirect_info.real_host)
  return real_host_;
}

// -------------------------------------------------------------------

// ManualAuthResponse_dns_info_ip_info_longlink_ip_info

// optional string ip = 3;
inline bool ManualAuthResponse_dns_info_ip_info_longlink_ip_info::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManualAuthResponse_dns_info_ip_info_longlink_ip_info::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManualAuthResponse_dns_info_ip_info_longlink_ip_info::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManualAuthResponse_dns_info_ip_info_longlink_ip_info::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& ManualAuthResponse_dns_info_ip_info_longlink_ip_info::ip() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.dns_info.ip_info.longlink_ip_info.ip)
  return ip_.GetNoArena();
}
inline void ManualAuthResponse_dns_info_ip_info_longlink_ip_info::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthResponse.dns_info.ip_info.longlink_ip_info.ip)
}
#if LANG_CXX11
inline void ManualAuthResponse_dns_info_ip_info_longlink_ip_info::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthResponse.dns_info.ip_info.longlink_ip_info.ip)
}
#endif
inline void ManualAuthResponse_dns_info_ip_info_longlink_ip_info::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthResponse.dns_info.ip_info.longlink_ip_info.ip)
}
inline void ManualAuthResponse_dns_info_ip_info_longlink_ip_info::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthResponse.dns_info.ip_info.longlink_ip_info.ip)
}
inline ::std::string* ManualAuthResponse_dns_info_ip_info_longlink_ip_info::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.dns_info.ip_info.longlink_ip_info.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthResponse_dns_info_ip_info_longlink_ip_info::release_ip() {
  // @@protoc_insertion_point(field_release:ManualAuthResponse.dns_info.ip_info.longlink_ip_info.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthResponse_dns_info_ip_info_longlink_ip_info::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthResponse.dns_info.ip_info.longlink_ip_info.ip)
}

// optional string host = 4;
inline bool ManualAuthResponse_dns_info_ip_info_longlink_ip_info::has_host() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManualAuthResponse_dns_info_ip_info_longlink_ip_info::set_has_host() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManualAuthResponse_dns_info_ip_info_longlink_ip_info::clear_has_host() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManualAuthResponse_dns_info_ip_info_longlink_ip_info::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host();
}
inline const ::std::string& ManualAuthResponse_dns_info_ip_info_longlink_ip_info::host() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.dns_info.ip_info.longlink_ip_info.host)
  return host_.GetNoArena();
}
inline void ManualAuthResponse_dns_info_ip_info_longlink_ip_info::set_host(const ::std::string& value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthResponse.dns_info.ip_info.longlink_ip_info.host)
}
#if LANG_CXX11
inline void ManualAuthResponse_dns_info_ip_info_longlink_ip_info::set_host(::std::string&& value) {
  set_has_host();
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthResponse.dns_info.ip_info.longlink_ip_info.host)
}
#endif
inline void ManualAuthResponse_dns_info_ip_info_longlink_ip_info::set_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthResponse.dns_info.ip_info.longlink_ip_info.host)
}
inline void ManualAuthResponse_dns_info_ip_info_longlink_ip_info::set_host(const char* value, size_t size) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthResponse.dns_info.ip_info.longlink_ip_info.host)
}
inline ::std::string* ManualAuthResponse_dns_info_ip_info_longlink_ip_info::mutable_host() {
  set_has_host();
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.dns_info.ip_info.longlink_ip_info.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthResponse_dns_info_ip_info_longlink_ip_info::release_host() {
  // @@protoc_insertion_point(field_release:ManualAuthResponse.dns_info.ip_info.longlink_ip_info.host)
  clear_has_host();
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthResponse_dns_info_ip_info_longlink_ip_info::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    set_has_host();
  } else {
    clear_has_host();
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthResponse.dns_info.ip_info.longlink_ip_info.host)
}

// -------------------------------------------------------------------

// ManualAuthResponse_dns_info_ip_info_shortlink_ip_info

// optional string ip = 3;
inline bool ManualAuthResponse_dns_info_ip_info_shortlink_ip_info::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManualAuthResponse_dns_info_ip_info_shortlink_ip_info::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManualAuthResponse_dns_info_ip_info_shortlink_ip_info::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManualAuthResponse_dns_info_ip_info_shortlink_ip_info::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& ManualAuthResponse_dns_info_ip_info_shortlink_ip_info::ip() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.dns_info.ip_info.shortlink_ip_info.ip)
  return ip_.GetNoArena();
}
inline void ManualAuthResponse_dns_info_ip_info_shortlink_ip_info::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthResponse.dns_info.ip_info.shortlink_ip_info.ip)
}
#if LANG_CXX11
inline void ManualAuthResponse_dns_info_ip_info_shortlink_ip_info::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthResponse.dns_info.ip_info.shortlink_ip_info.ip)
}
#endif
inline void ManualAuthResponse_dns_info_ip_info_shortlink_ip_info::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthResponse.dns_info.ip_info.shortlink_ip_info.ip)
}
inline void ManualAuthResponse_dns_info_ip_info_shortlink_ip_info::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthResponse.dns_info.ip_info.shortlink_ip_info.ip)
}
inline ::std::string* ManualAuthResponse_dns_info_ip_info_shortlink_ip_info::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.dns_info.ip_info.shortlink_ip_info.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthResponse_dns_info_ip_info_shortlink_ip_info::release_ip() {
  // @@protoc_insertion_point(field_release:ManualAuthResponse.dns_info.ip_info.shortlink_ip_info.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthResponse_dns_info_ip_info_shortlink_ip_info::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthResponse.dns_info.ip_info.shortlink_ip_info.ip)
}

// optional string host = 4;
inline bool ManualAuthResponse_dns_info_ip_info_shortlink_ip_info::has_host() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManualAuthResponse_dns_info_ip_info_shortlink_ip_info::set_has_host() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManualAuthResponse_dns_info_ip_info_shortlink_ip_info::clear_has_host() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManualAuthResponse_dns_info_ip_info_shortlink_ip_info::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host();
}
inline const ::std::string& ManualAuthResponse_dns_info_ip_info_shortlink_ip_info::host() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.dns_info.ip_info.shortlink_ip_info.host)
  return host_.GetNoArena();
}
inline void ManualAuthResponse_dns_info_ip_info_shortlink_ip_info::set_host(const ::std::string& value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ManualAuthResponse.dns_info.ip_info.shortlink_ip_info.host)
}
#if LANG_CXX11
inline void ManualAuthResponse_dns_info_ip_info_shortlink_ip_info::set_host(::std::string&& value) {
  set_has_host();
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ManualAuthResponse.dns_info.ip_info.shortlink_ip_info.host)
}
#endif
inline void ManualAuthResponse_dns_info_ip_info_shortlink_ip_info::set_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ManualAuthResponse.dns_info.ip_info.shortlink_ip_info.host)
}
inline void ManualAuthResponse_dns_info_ip_info_shortlink_ip_info::set_host(const char* value, size_t size) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ManualAuthResponse.dns_info.ip_info.shortlink_ip_info.host)
}
inline ::std::string* ManualAuthResponse_dns_info_ip_info_shortlink_ip_info::mutable_host() {
  set_has_host();
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.dns_info.ip_info.shortlink_ip_info.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ManualAuthResponse_dns_info_ip_info_shortlink_ip_info::release_host() {
  // @@protoc_insertion_point(field_release:ManualAuthResponse.dns_info.ip_info.shortlink_ip_info.host)
  clear_has_host();
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ManualAuthResponse_dns_info_ip_info_shortlink_ip_info::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    set_has_host();
  } else {
    clear_has_host();
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:ManualAuthResponse.dns_info.ip_info.shortlink_ip_info.host)
}

// -------------------------------------------------------------------

// ManualAuthResponse_dns_info_ip_info

// optional int32 longlink_ip_cnt = 1;
inline bool ManualAuthResponse_dns_info_ip_info::has_longlink_ip_cnt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManualAuthResponse_dns_info_ip_info::set_has_longlink_ip_cnt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManualAuthResponse_dns_info_ip_info::clear_has_longlink_ip_cnt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManualAuthResponse_dns_info_ip_info::clear_longlink_ip_cnt() {
  longlink_ip_cnt_ = 0;
  clear_has_longlink_ip_cnt();
}
inline ::google::protobuf::int32 ManualAuthResponse_dns_info_ip_info::longlink_ip_cnt() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.dns_info.ip_info.longlink_ip_cnt)
  return longlink_ip_cnt_;
}
inline void ManualAuthResponse_dns_info_ip_info::set_longlink_ip_cnt(::google::protobuf::int32 value) {
  set_has_longlink_ip_cnt();
  longlink_ip_cnt_ = value;
  // @@protoc_insertion_point(field_set:ManualAuthResponse.dns_info.ip_info.longlink_ip_cnt)
}

// optional int32 shortlink_ip_cnt = 2;
inline bool ManualAuthResponse_dns_info_ip_info::has_shortlink_ip_cnt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManualAuthResponse_dns_info_ip_info::set_has_shortlink_ip_cnt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManualAuthResponse_dns_info_ip_info::clear_has_shortlink_ip_cnt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManualAuthResponse_dns_info_ip_info::clear_shortlink_ip_cnt() {
  shortlink_ip_cnt_ = 0;
  clear_has_shortlink_ip_cnt();
}
inline ::google::protobuf::int32 ManualAuthResponse_dns_info_ip_info::shortlink_ip_cnt() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.dns_info.ip_info.shortlink_ip_cnt)
  return shortlink_ip_cnt_;
}
inline void ManualAuthResponse_dns_info_ip_info::set_shortlink_ip_cnt(::google::protobuf::int32 value) {
  set_has_shortlink_ip_cnt();
  shortlink_ip_cnt_ = value;
  // @@protoc_insertion_point(field_set:ManualAuthResponse.dns_info.ip_info.shortlink_ip_cnt)
}

// repeated .ManualAuthResponse.dns_info.ip_info.longlink_ip_info longlink = 3;
inline int ManualAuthResponse_dns_info_ip_info::longlink_size() const {
  return longlink_.size();
}
inline void ManualAuthResponse_dns_info_ip_info::clear_longlink() {
  longlink_.Clear();
}
inline const ::ManualAuthResponse_dns_info_ip_info_longlink_ip_info& ManualAuthResponse_dns_info_ip_info::longlink(int index) const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.dns_info.ip_info.longlink)
  return longlink_.Get(index);
}
inline ::ManualAuthResponse_dns_info_ip_info_longlink_ip_info* ManualAuthResponse_dns_info_ip_info::mutable_longlink(int index) {
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.dns_info.ip_info.longlink)
  return longlink_.Mutable(index);
}
inline ::ManualAuthResponse_dns_info_ip_info_longlink_ip_info* ManualAuthResponse_dns_info_ip_info::add_longlink() {
  // @@protoc_insertion_point(field_add:ManualAuthResponse.dns_info.ip_info.longlink)
  return longlink_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ManualAuthResponse_dns_info_ip_info_longlink_ip_info >*
ManualAuthResponse_dns_info_ip_info::mutable_longlink() {
  // @@protoc_insertion_point(field_mutable_list:ManualAuthResponse.dns_info.ip_info.longlink)
  return &longlink_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ManualAuthResponse_dns_info_ip_info_longlink_ip_info >&
ManualAuthResponse_dns_info_ip_info::longlink() const {
  // @@protoc_insertion_point(field_list:ManualAuthResponse.dns_info.ip_info.longlink)
  return longlink_;
}

// repeated .ManualAuthResponse.dns_info.ip_info.shortlink_ip_info shortlink = 4;
inline int ManualAuthResponse_dns_info_ip_info::shortlink_size() const {
  return shortlink_.size();
}
inline void ManualAuthResponse_dns_info_ip_info::clear_shortlink() {
  shortlink_.Clear();
}
inline const ::ManualAuthResponse_dns_info_ip_info_shortlink_ip_info& ManualAuthResponse_dns_info_ip_info::shortlink(int index) const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.dns_info.ip_info.shortlink)
  return shortlink_.Get(index);
}
inline ::ManualAuthResponse_dns_info_ip_info_shortlink_ip_info* ManualAuthResponse_dns_info_ip_info::mutable_shortlink(int index) {
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.dns_info.ip_info.shortlink)
  return shortlink_.Mutable(index);
}
inline ::ManualAuthResponse_dns_info_ip_info_shortlink_ip_info* ManualAuthResponse_dns_info_ip_info::add_shortlink() {
  // @@protoc_insertion_point(field_add:ManualAuthResponse.dns_info.ip_info.shortlink)
  return shortlink_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ManualAuthResponse_dns_info_ip_info_shortlink_ip_info >*
ManualAuthResponse_dns_info_ip_info::mutable_shortlink() {
  // @@protoc_insertion_point(field_mutable_list:ManualAuthResponse.dns_info.ip_info.shortlink)
  return &shortlink_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ManualAuthResponse_dns_info_ip_info_shortlink_ip_info >&
ManualAuthResponse_dns_info_ip_info::shortlink() const {
  // @@protoc_insertion_point(field_list:ManualAuthResponse.dns_info.ip_info.shortlink)
  return shortlink_;
}

// -------------------------------------------------------------------

// ManualAuthResponse_dns_info

// optional .ManualAuthResponse.dns_info.redirect_info redirect = 1;
inline bool ManualAuthResponse_dns_info::has_redirect() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManualAuthResponse_dns_info::set_has_redirect() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManualAuthResponse_dns_info::clear_has_redirect() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManualAuthResponse_dns_info::clear_redirect() {
  if (redirect_ != NULL) redirect_->::ManualAuthResponse_dns_info_redirect_info::Clear();
  clear_has_redirect();
}
inline const ::ManualAuthResponse_dns_info_redirect_info& ManualAuthResponse_dns_info::redirect() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.dns_info.redirect)
  return redirect_ != NULL ? *redirect_
                         : *::ManualAuthResponse_dns_info_redirect_info::internal_default_instance();
}
inline ::ManualAuthResponse_dns_info_redirect_info* ManualAuthResponse_dns_info::mutable_redirect() {
  set_has_redirect();
  if (redirect_ == NULL) {
    redirect_ = new ::ManualAuthResponse_dns_info_redirect_info;
  }
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.dns_info.redirect)
  return redirect_;
}
inline ::ManualAuthResponse_dns_info_redirect_info* ManualAuthResponse_dns_info::release_redirect() {
  // @@protoc_insertion_point(field_release:ManualAuthResponse.dns_info.redirect)
  clear_has_redirect();
  ::ManualAuthResponse_dns_info_redirect_info* temp = redirect_;
  redirect_ = NULL;
  return temp;
}
inline void ManualAuthResponse_dns_info::set_allocated_redirect(::ManualAuthResponse_dns_info_redirect_info* redirect) {
  delete redirect_;
  redirect_ = redirect;
  if (redirect) {
    set_has_redirect();
  } else {
    clear_has_redirect();
  }
  // @@protoc_insertion_point(field_set_allocated:ManualAuthResponse.dns_info.redirect)
}

// optional .ManualAuthResponse.dns_info.ip_info ip = 3;
inline bool ManualAuthResponse_dns_info::has_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManualAuthResponse_dns_info::set_has_ip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManualAuthResponse_dns_info::clear_has_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManualAuthResponse_dns_info::clear_ip() {
  if (ip_ != NULL) ip_->::ManualAuthResponse_dns_info_ip_info::Clear();
  clear_has_ip();
}
inline const ::ManualAuthResponse_dns_info_ip_info& ManualAuthResponse_dns_info::ip() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.dns_info.ip)
  return ip_ != NULL ? *ip_
                         : *::ManualAuthResponse_dns_info_ip_info::internal_default_instance();
}
inline ::ManualAuthResponse_dns_info_ip_info* ManualAuthResponse_dns_info::mutable_ip() {
  set_has_ip();
  if (ip_ == NULL) {
    ip_ = new ::ManualAuthResponse_dns_info_ip_info;
  }
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.dns_info.ip)
  return ip_;
}
inline ::ManualAuthResponse_dns_info_ip_info* ManualAuthResponse_dns_info::release_ip() {
  // @@protoc_insertion_point(field_release:ManualAuthResponse.dns_info.ip)
  clear_has_ip();
  ::ManualAuthResponse_dns_info_ip_info* temp = ip_;
  ip_ = NULL;
  return temp;
}
inline void ManualAuthResponse_dns_info::set_allocated_ip(::ManualAuthResponse_dns_info_ip_info* ip) {
  delete ip_;
  ip_ = ip;
  if (ip) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  // @@protoc_insertion_point(field_set_allocated:ManualAuthResponse.dns_info.ip)
}

// -------------------------------------------------------------------

// ManualAuthResponse

// required .ManualAuthResponse.AuthResult result = 1;
inline bool ManualAuthResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ManualAuthResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ManualAuthResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ManualAuthResponse::clear_result() {
  if (result_ != NULL) result_->::ManualAuthResponse_AuthResult::Clear();
  clear_has_result();
}
inline const ::ManualAuthResponse_AuthResult& ManualAuthResponse::result() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.result)
  return result_ != NULL ? *result_
                         : *::ManualAuthResponse_AuthResult::internal_default_instance();
}
inline ::ManualAuthResponse_AuthResult* ManualAuthResponse::mutable_result() {
  set_has_result();
  if (result_ == NULL) {
    result_ = new ::ManualAuthResponse_AuthResult;
  }
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.result)
  return result_;
}
inline ::ManualAuthResponse_AuthResult* ManualAuthResponse::release_result() {
  // @@protoc_insertion_point(field_release:ManualAuthResponse.result)
  clear_has_result();
  ::ManualAuthResponse_AuthResult* temp = result_;
  result_ = NULL;
  return temp;
}
inline void ManualAuthResponse::set_allocated_result(::ManualAuthResponse_AuthResult* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:ManualAuthResponse.result)
}

// required int32 unifyFlag = 2;
inline bool ManualAuthResponse::has_unifyflag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ManualAuthResponse::set_has_unifyflag() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ManualAuthResponse::clear_has_unifyflag() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ManualAuthResponse::clear_unifyflag() {
  unifyflag_ = 0;
  clear_has_unifyflag();
}
inline ::google::protobuf::int32 ManualAuthResponse::unifyflag() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.unifyFlag)
  return unifyflag_;
}
inline void ManualAuthResponse::set_unifyflag(::google::protobuf::int32 value) {
  set_has_unifyflag();
  unifyflag_ = value;
  // @@protoc_insertion_point(field_set:ManualAuthResponse.unifyFlag)
}

// required .ManualAuthResponse.AuthParam authParam = 3;
inline bool ManualAuthResponse::has_authparam() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ManualAuthResponse::set_has_authparam() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ManualAuthResponse::clear_has_authparam() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ManualAuthResponse::clear_authparam() {
  if (authparam_ != NULL) authparam_->::ManualAuthResponse_AuthParam::Clear();
  clear_has_authparam();
}
inline const ::ManualAuthResponse_AuthParam& ManualAuthResponse::authparam() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.authParam)
  return authparam_ != NULL ? *authparam_
                         : *::ManualAuthResponse_AuthParam::internal_default_instance();
}
inline ::ManualAuthResponse_AuthParam* ManualAuthResponse::mutable_authparam() {
  set_has_authparam();
  if (authparam_ == NULL) {
    authparam_ = new ::ManualAuthResponse_AuthParam;
  }
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.authParam)
  return authparam_;
}
inline ::ManualAuthResponse_AuthParam* ManualAuthResponse::release_authparam() {
  // @@protoc_insertion_point(field_release:ManualAuthResponse.authParam)
  clear_has_authparam();
  ::ManualAuthResponse_AuthParam* temp = authparam_;
  authparam_ = NULL;
  return temp;
}
inline void ManualAuthResponse::set_allocated_authparam(::ManualAuthResponse_AuthParam* authparam) {
  delete authparam_;
  authparam_ = authparam;
  if (authparam) {
    set_has_authparam();
  } else {
    clear_has_authparam();
  }
  // @@protoc_insertion_point(field_set_allocated:ManualAuthResponse.authParam)
}

// optional .ManualAuthResponse.AccountInfo accountInfo = 4;
inline bool ManualAuthResponse::has_accountinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ManualAuthResponse::set_has_accountinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ManualAuthResponse::clear_has_accountinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ManualAuthResponse::clear_accountinfo() {
  if (accountinfo_ != NULL) accountinfo_->::ManualAuthResponse_AccountInfo::Clear();
  clear_has_accountinfo();
}
inline const ::ManualAuthResponse_AccountInfo& ManualAuthResponse::accountinfo() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.accountInfo)
  return accountinfo_ != NULL ? *accountinfo_
                         : *::ManualAuthResponse_AccountInfo::internal_default_instance();
}
inline ::ManualAuthResponse_AccountInfo* ManualAuthResponse::mutable_accountinfo() {
  set_has_accountinfo();
  if (accountinfo_ == NULL) {
    accountinfo_ = new ::ManualAuthResponse_AccountInfo;
  }
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.accountInfo)
  return accountinfo_;
}
inline ::ManualAuthResponse_AccountInfo* ManualAuthResponse::release_accountinfo() {
  // @@protoc_insertion_point(field_release:ManualAuthResponse.accountInfo)
  clear_has_accountinfo();
  ::ManualAuthResponse_AccountInfo* temp = accountinfo_;
  accountinfo_ = NULL;
  return temp;
}
inline void ManualAuthResponse::set_allocated_accountinfo(::ManualAuthResponse_AccountInfo* accountinfo) {
  delete accountinfo_;
  accountinfo_ = accountinfo;
  if (accountinfo) {
    set_has_accountinfo();
  } else {
    clear_has_accountinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:ManualAuthResponse.accountInfo)
}

// optional .ManualAuthResponse.dns_info dns = 5;
inline bool ManualAuthResponse::has_dns() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ManualAuthResponse::set_has_dns() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ManualAuthResponse::clear_has_dns() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ManualAuthResponse::clear_dns() {
  if (dns_ != NULL) dns_->::ManualAuthResponse_dns_info::Clear();
  clear_has_dns();
}
inline const ::ManualAuthResponse_dns_info& ManualAuthResponse::dns() const {
  // @@protoc_insertion_point(field_get:ManualAuthResponse.dns)
  return dns_ != NULL ? *dns_
                         : *::ManualAuthResponse_dns_info::internal_default_instance();
}
inline ::ManualAuthResponse_dns_info* ManualAuthResponse::mutable_dns() {
  set_has_dns();
  if (dns_ == NULL) {
    dns_ = new ::ManualAuthResponse_dns_info;
  }
  // @@protoc_insertion_point(field_mutable:ManualAuthResponse.dns)
  return dns_;
}
inline ::ManualAuthResponse_dns_info* ManualAuthResponse::release_dns() {
  // @@protoc_insertion_point(field_release:ManualAuthResponse.dns)
  clear_has_dns();
  ::ManualAuthResponse_dns_info* temp = dns_;
  dns_ = NULL;
  return temp;
}
inline void ManualAuthResponse::set_allocated_dns(::ManualAuthResponse_dns_info* dns) {
  delete dns_;
  dns_ = dns;
  if (dns) {
    set_has_dns();
  } else {
    clear_has_dns();
  }
  // @@protoc_insertion_point(field_set_allocated:ManualAuthResponse.dns)
}

// -------------------------------------------------------------------

// NewInitRequest

// optional .LoginInfo login = 1;
inline bool NewInitRequest::has_login() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NewInitRequest::set_has_login() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NewInitRequest::clear_has_login() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NewInitRequest::clear_login() {
  if (login_ != NULL) login_->::LoginInfo::Clear();
  clear_has_login();
}
inline const ::LoginInfo& NewInitRequest::login() const {
  // @@protoc_insertion_point(field_get:NewInitRequest.login)
  return login_ != NULL ? *login_
                         : *::LoginInfo::internal_default_instance();
}
inline ::LoginInfo* NewInitRequest::mutable_login() {
  set_has_login();
  if (login_ == NULL) {
    login_ = new ::LoginInfo;
  }
  // @@protoc_insertion_point(field_mutable:NewInitRequest.login)
  return login_;
}
inline ::LoginInfo* NewInitRequest::release_login() {
  // @@protoc_insertion_point(field_release:NewInitRequest.login)
  clear_has_login();
  ::LoginInfo* temp = login_;
  login_ = NULL;
  return temp;
}
inline void NewInitRequest::set_allocated_login(::LoginInfo* login) {
  delete login_;
  login_ = login;
  if (login) {
    set_has_login();
  } else {
    clear_has_login();
  }
  // @@protoc_insertion_point(field_set_allocated:NewInitRequest.login)
}

// optional string wxid = 2;
inline bool NewInitRequest::has_wxid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewInitRequest::set_has_wxid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewInitRequest::clear_has_wxid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewInitRequest::clear_wxid() {
  wxid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_wxid();
}
inline const ::std::string& NewInitRequest::wxid() const {
  // @@protoc_insertion_point(field_get:NewInitRequest.wxid)
  return wxid_.GetNoArena();
}
inline void NewInitRequest::set_wxid(const ::std::string& value) {
  set_has_wxid();
  wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NewInitRequest.wxid)
}
#if LANG_CXX11
inline void NewInitRequest::set_wxid(::std::string&& value) {
  set_has_wxid();
  wxid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NewInitRequest.wxid)
}
#endif
inline void NewInitRequest::set_wxid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_wxid();
  wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NewInitRequest.wxid)
}
inline void NewInitRequest::set_wxid(const char* value, size_t size) {
  set_has_wxid();
  wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NewInitRequest.wxid)
}
inline ::std::string* NewInitRequest::mutable_wxid() {
  set_has_wxid();
  // @@protoc_insertion_point(field_mutable:NewInitRequest.wxid)
  return wxid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NewInitRequest::release_wxid() {
  // @@protoc_insertion_point(field_release:NewInitRequest.wxid)
  clear_has_wxid();
  return wxid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NewInitRequest::set_allocated_wxid(::std::string* wxid) {
  if (wxid != NULL) {
    set_has_wxid();
  } else {
    clear_has_wxid();
  }
  wxid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wxid);
  // @@protoc_insertion_point(field_set_allocated:NewInitRequest.wxid)
}

// optional .SKBuiltinBuffer_t sync_key_cur = 3;
inline bool NewInitRequest::has_sync_key_cur() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NewInitRequest::set_has_sync_key_cur() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NewInitRequest::clear_has_sync_key_cur() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NewInitRequest::clear_sync_key_cur() {
  if (sync_key_cur_ != NULL) sync_key_cur_->::SKBuiltinBuffer_t::Clear();
  clear_has_sync_key_cur();
}
inline const ::SKBuiltinBuffer_t& NewInitRequest::sync_key_cur() const {
  // @@protoc_insertion_point(field_get:NewInitRequest.sync_key_cur)
  return sync_key_cur_ != NULL ? *sync_key_cur_
                         : *::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::SKBuiltinBuffer_t* NewInitRequest::mutable_sync_key_cur() {
  set_has_sync_key_cur();
  if (sync_key_cur_ == NULL) {
    sync_key_cur_ = new ::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:NewInitRequest.sync_key_cur)
  return sync_key_cur_;
}
inline ::SKBuiltinBuffer_t* NewInitRequest::release_sync_key_cur() {
  // @@protoc_insertion_point(field_release:NewInitRequest.sync_key_cur)
  clear_has_sync_key_cur();
  ::SKBuiltinBuffer_t* temp = sync_key_cur_;
  sync_key_cur_ = NULL;
  return temp;
}
inline void NewInitRequest::set_allocated_sync_key_cur(::SKBuiltinBuffer_t* sync_key_cur) {
  delete sync_key_cur_;
  sync_key_cur_ = sync_key_cur;
  if (sync_key_cur) {
    set_has_sync_key_cur();
  } else {
    clear_has_sync_key_cur();
  }
  // @@protoc_insertion_point(field_set_allocated:NewInitRequest.sync_key_cur)
}

// optional .SKBuiltinBuffer_t sync_key_max = 4;
inline bool NewInitRequest::has_sync_key_max() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NewInitRequest::set_has_sync_key_max() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NewInitRequest::clear_has_sync_key_max() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NewInitRequest::clear_sync_key_max() {
  if (sync_key_max_ != NULL) sync_key_max_->::SKBuiltinBuffer_t::Clear();
  clear_has_sync_key_max();
}
inline const ::SKBuiltinBuffer_t& NewInitRequest::sync_key_max() const {
  // @@protoc_insertion_point(field_get:NewInitRequest.sync_key_max)
  return sync_key_max_ != NULL ? *sync_key_max_
                         : *::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::SKBuiltinBuffer_t* NewInitRequest::mutable_sync_key_max() {
  set_has_sync_key_max();
  if (sync_key_max_ == NULL) {
    sync_key_max_ = new ::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:NewInitRequest.sync_key_max)
  return sync_key_max_;
}
inline ::SKBuiltinBuffer_t* NewInitRequest::release_sync_key_max() {
  // @@protoc_insertion_point(field_release:NewInitRequest.sync_key_max)
  clear_has_sync_key_max();
  ::SKBuiltinBuffer_t* temp = sync_key_max_;
  sync_key_max_ = NULL;
  return temp;
}
inline void NewInitRequest::set_allocated_sync_key_max(::SKBuiltinBuffer_t* sync_key_max) {
  delete sync_key_max_;
  sync_key_max_ = sync_key_max;
  if (sync_key_max) {
    set_has_sync_key_max();
  } else {
    clear_has_sync_key_max();
  }
  // @@protoc_insertion_point(field_set_allocated:NewInitRequest.sync_key_max)
}

// optional string language = 5;
inline bool NewInitRequest::has_language() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NewInitRequest::set_has_language() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NewInitRequest::clear_has_language() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NewInitRequest::clear_language() {
  language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_language();
}
inline const ::std::string& NewInitRequest::language() const {
  // @@protoc_insertion_point(field_get:NewInitRequest.language)
  return language_.GetNoArena();
}
inline void NewInitRequest::set_language(const ::std::string& value) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NewInitRequest.language)
}
#if LANG_CXX11
inline void NewInitRequest::set_language(::std::string&& value) {
  set_has_language();
  language_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NewInitRequest.language)
}
#endif
inline void NewInitRequest::set_language(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NewInitRequest.language)
}
inline void NewInitRequest::set_language(const char* value, size_t size) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NewInitRequest.language)
}
inline ::std::string* NewInitRequest::mutable_language() {
  set_has_language();
  // @@protoc_insertion_point(field_mutable:NewInitRequest.language)
  return language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NewInitRequest::release_language() {
  // @@protoc_insertion_point(field_release:NewInitRequest.language)
  clear_has_language();
  return language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NewInitRequest::set_allocated_language(::std::string* language) {
  if (language != NULL) {
    set_has_language();
  } else {
    clear_has_language();
  }
  language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language);
  // @@protoc_insertion_point(field_set_allocated:NewInitRequest.language)
}

// -------------------------------------------------------------------

// NewInitResponse

// optional bytes tag1 = 1;
inline bool NewInitResponse::has_tag1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewInitResponse::set_has_tag1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewInitResponse::clear_has_tag1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewInitResponse::clear_tag1() {
  tag1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag1();
}
inline const ::std::string& NewInitResponse::tag1() const {
  // @@protoc_insertion_point(field_get:NewInitResponse.tag1)
  return tag1_.GetNoArena();
}
inline void NewInitResponse::set_tag1(const ::std::string& value) {
  set_has_tag1();
  tag1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NewInitResponse.tag1)
}
#if LANG_CXX11
inline void NewInitResponse::set_tag1(::std::string&& value) {
  set_has_tag1();
  tag1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NewInitResponse.tag1)
}
#endif
inline void NewInitResponse::set_tag1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag1();
  tag1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NewInitResponse.tag1)
}
inline void NewInitResponse::set_tag1(const void* value, size_t size) {
  set_has_tag1();
  tag1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NewInitResponse.tag1)
}
inline ::std::string* NewInitResponse::mutable_tag1() {
  set_has_tag1();
  // @@protoc_insertion_point(field_mutable:NewInitResponse.tag1)
  return tag1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NewInitResponse::release_tag1() {
  // @@protoc_insertion_point(field_release:NewInitResponse.tag1)
  clear_has_tag1();
  return tag1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NewInitResponse::set_allocated_tag1(::std::string* tag1) {
  if (tag1 != NULL) {
    set_has_tag1();
  } else {
    clear_has_tag1();
  }
  tag1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag1);
  // @@protoc_insertion_point(field_set_allocated:NewInitResponse.tag1)
}

// optional bytes sync_key_cur = 2;
inline bool NewInitResponse::has_sync_key_cur() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NewInitResponse::set_has_sync_key_cur() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NewInitResponse::clear_has_sync_key_cur() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NewInitResponse::clear_sync_key_cur() {
  sync_key_cur_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sync_key_cur();
}
inline const ::std::string& NewInitResponse::sync_key_cur() const {
  // @@protoc_insertion_point(field_get:NewInitResponse.sync_key_cur)
  return sync_key_cur_.GetNoArena();
}
inline void NewInitResponse::set_sync_key_cur(const ::std::string& value) {
  set_has_sync_key_cur();
  sync_key_cur_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NewInitResponse.sync_key_cur)
}
#if LANG_CXX11
inline void NewInitResponse::set_sync_key_cur(::std::string&& value) {
  set_has_sync_key_cur();
  sync_key_cur_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NewInitResponse.sync_key_cur)
}
#endif
inline void NewInitResponse::set_sync_key_cur(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sync_key_cur();
  sync_key_cur_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NewInitResponse.sync_key_cur)
}
inline void NewInitResponse::set_sync_key_cur(const void* value, size_t size) {
  set_has_sync_key_cur();
  sync_key_cur_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NewInitResponse.sync_key_cur)
}
inline ::std::string* NewInitResponse::mutable_sync_key_cur() {
  set_has_sync_key_cur();
  // @@protoc_insertion_point(field_mutable:NewInitResponse.sync_key_cur)
  return sync_key_cur_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NewInitResponse::release_sync_key_cur() {
  // @@protoc_insertion_point(field_release:NewInitResponse.sync_key_cur)
  clear_has_sync_key_cur();
  return sync_key_cur_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NewInitResponse::set_allocated_sync_key_cur(::std::string* sync_key_cur) {
  if (sync_key_cur != NULL) {
    set_has_sync_key_cur();
  } else {
    clear_has_sync_key_cur();
  }
  sync_key_cur_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sync_key_cur);
  // @@protoc_insertion_point(field_set_allocated:NewInitResponse.sync_key_cur)
}

// optional bytes sync_key_max = 3;
inline bool NewInitResponse::has_sync_key_max() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NewInitResponse::set_has_sync_key_max() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NewInitResponse::clear_has_sync_key_max() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NewInitResponse::clear_sync_key_max() {
  sync_key_max_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sync_key_max();
}
inline const ::std::string& NewInitResponse::sync_key_max() const {
  // @@protoc_insertion_point(field_get:NewInitResponse.sync_key_max)
  return sync_key_max_.GetNoArena();
}
inline void NewInitResponse::set_sync_key_max(const ::std::string& value) {
  set_has_sync_key_max();
  sync_key_max_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NewInitResponse.sync_key_max)
}
#if LANG_CXX11
inline void NewInitResponse::set_sync_key_max(::std::string&& value) {
  set_has_sync_key_max();
  sync_key_max_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NewInitResponse.sync_key_max)
}
#endif
inline void NewInitResponse::set_sync_key_max(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sync_key_max();
  sync_key_max_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NewInitResponse.sync_key_max)
}
inline void NewInitResponse::set_sync_key_max(const void* value, size_t size) {
  set_has_sync_key_max();
  sync_key_max_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NewInitResponse.sync_key_max)
}
inline ::std::string* NewInitResponse::mutable_sync_key_max() {
  set_has_sync_key_max();
  // @@protoc_insertion_point(field_mutable:NewInitResponse.sync_key_max)
  return sync_key_max_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NewInitResponse::release_sync_key_max() {
  // @@protoc_insertion_point(field_release:NewInitResponse.sync_key_max)
  clear_has_sync_key_max();
  return sync_key_max_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NewInitResponse::set_allocated_sync_key_max(::std::string* sync_key_max) {
  if (sync_key_max != NULL) {
    set_has_sync_key_max();
  } else {
    clear_has_sync_key_max();
  }
  sync_key_max_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sync_key_max);
  // @@protoc_insertion_point(field_set_allocated:NewInitResponse.sync_key_max)
}

// optional int32 continue_flag = 4;
inline bool NewInitResponse::has_continue_flag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NewInitResponse::set_has_continue_flag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NewInitResponse::clear_has_continue_flag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NewInitResponse::clear_continue_flag() {
  continue_flag_ = 0;
  clear_has_continue_flag();
}
inline ::google::protobuf::int32 NewInitResponse::continue_flag() const {
  // @@protoc_insertion_point(field_get:NewInitResponse.continue_flag)
  return continue_flag_;
}
inline void NewInitResponse::set_continue_flag(::google::protobuf::int32 value) {
  set_has_continue_flag();
  continue_flag_ = value;
  // @@protoc_insertion_point(field_set:NewInitResponse.continue_flag)
}

// optional int32 cntList = 6;
inline bool NewInitResponse::has_cntlist() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NewInitResponse::set_has_cntlist() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NewInitResponse::clear_has_cntlist() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NewInitResponse::clear_cntlist() {
  cntlist_ = 0;
  clear_has_cntlist();
}
inline ::google::protobuf::int32 NewInitResponse::cntlist() const {
  // @@protoc_insertion_point(field_get:NewInitResponse.cntList)
  return cntlist_;
}
inline void NewInitResponse::set_cntlist(::google::protobuf::int32 value) {
  set_has_cntlist();
  cntlist_ = value;
  // @@protoc_insertion_point(field_set:NewInitResponse.cntList)
}

// repeated .common_msg tag7 = 7;
inline int NewInitResponse::tag7_size() const {
  return tag7_.size();
}
inline void NewInitResponse::clear_tag7() {
  tag7_.Clear();
}
inline const ::common_msg& NewInitResponse::tag7(int index) const {
  // @@protoc_insertion_point(field_get:NewInitResponse.tag7)
  return tag7_.Get(index);
}
inline ::common_msg* NewInitResponse::mutable_tag7(int index) {
  // @@protoc_insertion_point(field_mutable:NewInitResponse.tag7)
  return tag7_.Mutable(index);
}
inline ::common_msg* NewInitResponse::add_tag7() {
  // @@protoc_insertion_point(field_add:NewInitResponse.tag7)
  return tag7_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::common_msg >*
NewInitResponse::mutable_tag7() {
  // @@protoc_insertion_point(field_mutable_list:NewInitResponse.tag7)
  return &tag7_;
}
inline const ::google::protobuf::RepeatedPtrField< ::common_msg >&
NewInitResponse::tag7() const {
  // @@protoc_insertion_point(field_list:NewInitResponse.tag7)
  return tag7_;
}

// -------------------------------------------------------------------

// new_sync_req_continue_flag

// optional int32 flag = 1;
inline bool new_sync_req_continue_flag::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void new_sync_req_continue_flag::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void new_sync_req_continue_flag::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void new_sync_req_continue_flag::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 new_sync_req_continue_flag::flag() const {
  // @@protoc_insertion_point(field_get:new_sync_req.continue_flag.flag)
  return flag_;
}
inline void new_sync_req_continue_flag::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:new_sync_req.continue_flag.flag)
}

// -------------------------------------------------------------------

// new_sync_req

// optional .new_sync_req.continue_flag flag = 1;
inline bool new_sync_req::has_flag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void new_sync_req::set_has_flag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void new_sync_req::clear_has_flag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void new_sync_req::clear_flag() {
  if (flag_ != NULL) flag_->::new_sync_req_continue_flag::Clear();
  clear_has_flag();
}
inline const ::new_sync_req_continue_flag& new_sync_req::flag() const {
  // @@protoc_insertion_point(field_get:new_sync_req.flag)
  return flag_ != NULL ? *flag_
                         : *::new_sync_req_continue_flag::internal_default_instance();
}
inline ::new_sync_req_continue_flag* new_sync_req::mutable_flag() {
  set_has_flag();
  if (flag_ == NULL) {
    flag_ = new ::new_sync_req_continue_flag;
  }
  // @@protoc_insertion_point(field_mutable:new_sync_req.flag)
  return flag_;
}
inline ::new_sync_req_continue_flag* new_sync_req::release_flag() {
  // @@protoc_insertion_point(field_release:new_sync_req.flag)
  clear_has_flag();
  ::new_sync_req_continue_flag* temp = flag_;
  flag_ = NULL;
  return temp;
}
inline void new_sync_req::set_allocated_flag(::new_sync_req_continue_flag* flag) {
  delete flag_;
  flag_ = flag;
  if (flag) {
    set_has_flag();
  } else {
    clear_has_flag();
  }
  // @@protoc_insertion_point(field_set_allocated:new_sync_req.flag)
}

// optional int32 selector = 2;
inline bool new_sync_req::has_selector() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void new_sync_req::set_has_selector() {
  _has_bits_[0] |= 0x00000008u;
}
inline void new_sync_req::clear_has_selector() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void new_sync_req::clear_selector() {
  selector_ = 0;
  clear_has_selector();
}
inline ::google::protobuf::int32 new_sync_req::selector() const {
  // @@protoc_insertion_point(field_get:new_sync_req.selector)
  return selector_;
}
inline void new_sync_req::set_selector(::google::protobuf::int32 value) {
  set_has_selector();
  selector_ = value;
  // @@protoc_insertion_point(field_set:new_sync_req.selector)
}

// optional bytes sync_Key = 3;
inline bool new_sync_req::has_sync_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void new_sync_req::set_has_sync_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void new_sync_req::clear_has_sync_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void new_sync_req::clear_sync_key() {
  sync_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sync_key();
}
inline const ::std::string& new_sync_req::sync_key() const {
  // @@protoc_insertion_point(field_get:new_sync_req.sync_Key)
  return sync_key_.GetNoArena();
}
inline void new_sync_req::set_sync_key(const ::std::string& value) {
  set_has_sync_key();
  sync_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:new_sync_req.sync_Key)
}
#if LANG_CXX11
inline void new_sync_req::set_sync_key(::std::string&& value) {
  set_has_sync_key();
  sync_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:new_sync_req.sync_Key)
}
#endif
inline void new_sync_req::set_sync_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sync_key();
  sync_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:new_sync_req.sync_Key)
}
inline void new_sync_req::set_sync_key(const void* value, size_t size) {
  set_has_sync_key();
  sync_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:new_sync_req.sync_Key)
}
inline ::std::string* new_sync_req::mutable_sync_key() {
  set_has_sync_key();
  // @@protoc_insertion_point(field_mutable:new_sync_req.sync_Key)
  return sync_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* new_sync_req::release_sync_key() {
  // @@protoc_insertion_point(field_release:new_sync_req.sync_Key)
  clear_has_sync_key();
  return sync_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void new_sync_req::set_allocated_sync_key(::std::string* sync_key) {
  if (sync_key != NULL) {
    set_has_sync_key();
  } else {
    clear_has_sync_key();
  }
  sync_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sync_key);
  // @@protoc_insertion_point(field_set_allocated:new_sync_req.sync_Key)
}

// optional int32 scene = 4;
inline bool new_sync_req::has_scene() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void new_sync_req::set_has_scene() {
  _has_bits_[0] |= 0x00000010u;
}
inline void new_sync_req::clear_has_scene() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void new_sync_req::clear_scene() {
  scene_ = 0;
  clear_has_scene();
}
inline ::google::protobuf::int32 new_sync_req::scene() const {
  // @@protoc_insertion_point(field_get:new_sync_req.scene)
  return scene_;
}
inline void new_sync_req::set_scene(::google::protobuf::int32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:new_sync_req.scene)
}

// optional string device = 5;
inline bool new_sync_req::has_device() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void new_sync_req::set_has_device() {
  _has_bits_[0] |= 0x00000002u;
}
inline void new_sync_req::clear_has_device() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void new_sync_req::clear_device() {
  device_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_device();
}
inline const ::std::string& new_sync_req::device() const {
  // @@protoc_insertion_point(field_get:new_sync_req.device)
  return device_.GetNoArena();
}
inline void new_sync_req::set_device(const ::std::string& value) {
  set_has_device();
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:new_sync_req.device)
}
#if LANG_CXX11
inline void new_sync_req::set_device(::std::string&& value) {
  set_has_device();
  device_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:new_sync_req.device)
}
#endif
inline void new_sync_req::set_device(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_device();
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:new_sync_req.device)
}
inline void new_sync_req::set_device(const char* value, size_t size) {
  set_has_device();
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:new_sync_req.device)
}
inline ::std::string* new_sync_req::mutable_device() {
  set_has_device();
  // @@protoc_insertion_point(field_mutable:new_sync_req.device)
  return device_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* new_sync_req::release_device() {
  // @@protoc_insertion_point(field_release:new_sync_req.device)
  clear_has_device();
  return device_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void new_sync_req::set_allocated_device(::std::string* device) {
  if (device != NULL) {
    set_has_device();
  } else {
    clear_has_device();
  }
  device_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device);
  // @@protoc_insertion_point(field_set_allocated:new_sync_req.device)
}

// optional int32 sync_msg_digest = 6;
inline bool new_sync_req::has_sync_msg_digest() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void new_sync_req::set_has_sync_msg_digest() {
  _has_bits_[0] |= 0x00000020u;
}
inline void new_sync_req::clear_has_sync_msg_digest() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void new_sync_req::clear_sync_msg_digest() {
  sync_msg_digest_ = 0;
  clear_has_sync_msg_digest();
}
inline ::google::protobuf::int32 new_sync_req::sync_msg_digest() const {
  // @@protoc_insertion_point(field_get:new_sync_req.sync_msg_digest)
  return sync_msg_digest_;
}
inline void new_sync_req::set_sync_msg_digest(::google::protobuf::int32 value) {
  set_has_sync_msg_digest();
  sync_msg_digest_ = value;
  // @@protoc_insertion_point(field_set:new_sync_req.sync_msg_digest)
}

// -------------------------------------------------------------------

// new_sync_resp_new_msg

// optional int32 cntList = 1;
inline bool new_sync_resp_new_msg::has_cntlist() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void new_sync_resp_new_msg::set_has_cntlist() {
  _has_bits_[0] |= 0x00000001u;
}
inline void new_sync_resp_new_msg::clear_has_cntlist() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void new_sync_resp_new_msg::clear_cntlist() {
  cntlist_ = 0;
  clear_has_cntlist();
}
inline ::google::protobuf::int32 new_sync_resp_new_msg::cntlist() const {
  // @@protoc_insertion_point(field_get:new_sync_resp.new_msg.cntList)
  return cntlist_;
}
inline void new_sync_resp_new_msg::set_cntlist(::google::protobuf::int32 value) {
  set_has_cntlist();
  cntlist_ = value;
  // @@protoc_insertion_point(field_set:new_sync_resp.new_msg.cntList)
}

// repeated .common_msg tag2 = 2;
inline int new_sync_resp_new_msg::tag2_size() const {
  return tag2_.size();
}
inline void new_sync_resp_new_msg::clear_tag2() {
  tag2_.Clear();
}
inline const ::common_msg& new_sync_resp_new_msg::tag2(int index) const {
  // @@protoc_insertion_point(field_get:new_sync_resp.new_msg.tag2)
  return tag2_.Get(index);
}
inline ::common_msg* new_sync_resp_new_msg::mutable_tag2(int index) {
  // @@protoc_insertion_point(field_mutable:new_sync_resp.new_msg.tag2)
  return tag2_.Mutable(index);
}
inline ::common_msg* new_sync_resp_new_msg::add_tag2() {
  // @@protoc_insertion_point(field_add:new_sync_resp.new_msg.tag2)
  return tag2_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::common_msg >*
new_sync_resp_new_msg::mutable_tag2() {
  // @@protoc_insertion_point(field_mutable_list:new_sync_resp.new_msg.tag2)
  return &tag2_;
}
inline const ::google::protobuf::RepeatedPtrField< ::common_msg >&
new_sync_resp_new_msg::tag2() const {
  // @@protoc_insertion_point(field_list:new_sync_resp.new_msg.tag2)
  return tag2_;
}

// -------------------------------------------------------------------

// new_sync_resp

// optional int32 tag1 = 1;
inline bool new_sync_resp::has_tag1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void new_sync_resp::set_has_tag1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void new_sync_resp::clear_has_tag1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void new_sync_resp::clear_tag1() {
  tag1_ = 0;
  clear_has_tag1();
}
inline ::google::protobuf::int32 new_sync_resp::tag1() const {
  // @@protoc_insertion_point(field_get:new_sync_resp.tag1)
  return tag1_;
}
inline void new_sync_resp::set_tag1(::google::protobuf::int32 value) {
  set_has_tag1();
  tag1_ = value;
  // @@protoc_insertion_point(field_set:new_sync_resp.tag1)
}

// optional .new_sync_resp.new_msg msg = 2;
inline bool new_sync_resp::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void new_sync_resp::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void new_sync_resp::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void new_sync_resp::clear_msg() {
  if (msg_ != NULL) msg_->::new_sync_resp_new_msg::Clear();
  clear_has_msg();
}
inline const ::new_sync_resp_new_msg& new_sync_resp::msg() const {
  // @@protoc_insertion_point(field_get:new_sync_resp.msg)
  return msg_ != NULL ? *msg_
                         : *::new_sync_resp_new_msg::internal_default_instance();
}
inline ::new_sync_resp_new_msg* new_sync_resp::mutable_msg() {
  set_has_msg();
  if (msg_ == NULL) {
    msg_ = new ::new_sync_resp_new_msg;
  }
  // @@protoc_insertion_point(field_mutable:new_sync_resp.msg)
  return msg_;
}
inline ::new_sync_resp_new_msg* new_sync_resp::release_msg() {
  // @@protoc_insertion_point(field_release:new_sync_resp.msg)
  clear_has_msg();
  ::new_sync_resp_new_msg* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline void new_sync_resp::set_allocated_msg(::new_sync_resp_new_msg* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  // @@protoc_insertion_point(field_set_allocated:new_sync_resp.msg)
}

// optional int32 tag3 = 3;
inline bool new_sync_resp::has_tag3() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void new_sync_resp::set_has_tag3() {
  _has_bits_[0] |= 0x00000008u;
}
inline void new_sync_resp::clear_has_tag3() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void new_sync_resp::clear_tag3() {
  tag3_ = 0;
  clear_has_tag3();
}
inline ::google::protobuf::int32 new_sync_resp::tag3() const {
  // @@protoc_insertion_point(field_get:new_sync_resp.tag3)
  return tag3_;
}
inline void new_sync_resp::set_tag3(::google::protobuf::int32 value) {
  set_has_tag3();
  tag3_ = value;
  // @@protoc_insertion_point(field_set:new_sync_resp.tag3)
}

// optional bytes sync_key = 4;
inline bool new_sync_resp::has_sync_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void new_sync_resp::set_has_sync_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void new_sync_resp::clear_has_sync_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void new_sync_resp::clear_sync_key() {
  sync_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sync_key();
}
inline const ::std::string& new_sync_resp::sync_key() const {
  // @@protoc_insertion_point(field_get:new_sync_resp.sync_key)
  return sync_key_.GetNoArena();
}
inline void new_sync_resp::set_sync_key(const ::std::string& value) {
  set_has_sync_key();
  sync_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:new_sync_resp.sync_key)
}
#if LANG_CXX11
inline void new_sync_resp::set_sync_key(::std::string&& value) {
  set_has_sync_key();
  sync_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:new_sync_resp.sync_key)
}
#endif
inline void new_sync_resp::set_sync_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sync_key();
  sync_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:new_sync_resp.sync_key)
}
inline void new_sync_resp::set_sync_key(const void* value, size_t size) {
  set_has_sync_key();
  sync_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:new_sync_resp.sync_key)
}
inline ::std::string* new_sync_resp::mutable_sync_key() {
  set_has_sync_key();
  // @@protoc_insertion_point(field_mutable:new_sync_resp.sync_key)
  return sync_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* new_sync_resp::release_sync_key() {
  // @@protoc_insertion_point(field_release:new_sync_resp.sync_key)
  clear_has_sync_key();
  return sync_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void new_sync_resp::set_allocated_sync_key(::std::string* sync_key) {
  if (sync_key != NULL) {
    set_has_sync_key();
  } else {
    clear_has_sync_key();
  }
  sync_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sync_key);
  // @@protoc_insertion_point(field_set_allocated:new_sync_resp.sync_key)
}

// optional int32 tag5 = 5;
inline bool new_sync_resp::has_tag5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void new_sync_resp::set_has_tag5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void new_sync_resp::clear_has_tag5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void new_sync_resp::clear_tag5() {
  tag5_ = 0;
  clear_has_tag5();
}
inline ::google::protobuf::int32 new_sync_resp::tag5() const {
  // @@protoc_insertion_point(field_get:new_sync_resp.tag5)
  return tag5_;
}
inline void new_sync_resp::set_tag5(::google::protobuf::int32 value) {
  set_has_tag5();
  tag5_ = value;
  // @@protoc_insertion_point(field_set:new_sync_resp.tag5)
}

// optional int32 tag6 = 6;
inline bool new_sync_resp::has_tag6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void new_sync_resp::set_has_tag6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void new_sync_resp::clear_has_tag6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void new_sync_resp::clear_tag6() {
  tag6_ = 0;
  clear_has_tag6();
}
inline ::google::protobuf::int32 new_sync_resp::tag6() const {
  // @@protoc_insertion_point(field_get:new_sync_resp.tag6)
  return tag6_;
}
inline void new_sync_resp::set_tag6(::google::protobuf::int32 value) {
  set_has_tag6();
  tag6_ = value;
  // @@protoc_insertion_point(field_set:new_sync_resp.tag6)
}

// optional int32 utc = 7;
inline bool new_sync_resp::has_utc() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void new_sync_resp::set_has_utc() {
  _has_bits_[0] |= 0x00000040u;
}
inline void new_sync_resp::clear_has_utc() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void new_sync_resp::clear_utc() {
  utc_ = 0;
  clear_has_utc();
}
inline ::google::protobuf::int32 new_sync_resp::utc() const {
  // @@protoc_insertion_point(field_get:new_sync_resp.utc)
  return utc_;
}
inline void new_sync_resp::set_utc(::google::protobuf::int32 value) {
  set_has_utc();
  utc_ = value;
  // @@protoc_insertion_point(field_set:new_sync_resp.utc)
}

// -------------------------------------------------------------------

// new_send_msg_req_msg_info

// optional .Wxid to = 1;
inline bool new_send_msg_req_msg_info::has_to() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void new_send_msg_req_msg_info::set_has_to() {
  _has_bits_[0] |= 0x00000004u;
}
inline void new_send_msg_req_msg_info::clear_has_to() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void new_send_msg_req_msg_info::clear_to() {
  if (to_ != NULL) to_->::Wxid::Clear();
  clear_has_to();
}
inline const ::Wxid& new_send_msg_req_msg_info::to() const {
  // @@protoc_insertion_point(field_get:new_send_msg_req.msg_info.to)
  return to_ != NULL ? *to_
                         : *::Wxid::internal_default_instance();
}
inline ::Wxid* new_send_msg_req_msg_info::mutable_to() {
  set_has_to();
  if (to_ == NULL) {
    to_ = new ::Wxid;
  }
  // @@protoc_insertion_point(field_mutable:new_send_msg_req.msg_info.to)
  return to_;
}
inline ::Wxid* new_send_msg_req_msg_info::release_to() {
  // @@protoc_insertion_point(field_release:new_send_msg_req.msg_info.to)
  clear_has_to();
  ::Wxid* temp = to_;
  to_ = NULL;
  return temp;
}
inline void new_send_msg_req_msg_info::set_allocated_to(::Wxid* to) {
  delete to_;
  to_ = to;
  if (to) {
    set_has_to();
  } else {
    clear_has_to();
  }
  // @@protoc_insertion_point(field_set_allocated:new_send_msg_req.msg_info.to)
}

// optional bytes content = 2;
inline bool new_send_msg_req_msg_info::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void new_send_msg_req_msg_info::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void new_send_msg_req_msg_info::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void new_send_msg_req_msg_info::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& new_send_msg_req_msg_info::content() const {
  // @@protoc_insertion_point(field_get:new_send_msg_req.msg_info.content)
  return content_.GetNoArena();
}
inline void new_send_msg_req_msg_info::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:new_send_msg_req.msg_info.content)
}
#if LANG_CXX11
inline void new_send_msg_req_msg_info::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:new_send_msg_req.msg_info.content)
}
#endif
inline void new_send_msg_req_msg_info::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:new_send_msg_req.msg_info.content)
}
inline void new_send_msg_req_msg_info::set_content(const void* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:new_send_msg_req.msg_info.content)
}
inline ::std::string* new_send_msg_req_msg_info::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:new_send_msg_req.msg_info.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* new_send_msg_req_msg_info::release_content() {
  // @@protoc_insertion_point(field_release:new_send_msg_req.msg_info.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void new_send_msg_req_msg_info::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:new_send_msg_req.msg_info.content)
}

// optional int32 type = 3;
inline bool new_send_msg_req_msg_info::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void new_send_msg_req_msg_info::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void new_send_msg_req_msg_info::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void new_send_msg_req_msg_info::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 new_send_msg_req_msg_info::type() const {
  // @@protoc_insertion_point(field_get:new_send_msg_req.msg_info.type)
  return type_;
}
inline void new_send_msg_req_msg_info::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:new_send_msg_req.msg_info.type)
}

// optional int32 utc = 4;
inline bool new_send_msg_req_msg_info::has_utc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void new_send_msg_req_msg_info::set_has_utc() {
  _has_bits_[0] |= 0x00000010u;
}
inline void new_send_msg_req_msg_info::clear_has_utc() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void new_send_msg_req_msg_info::clear_utc() {
  utc_ = 0;
  clear_has_utc();
}
inline ::google::protobuf::int32 new_send_msg_req_msg_info::utc() const {
  // @@protoc_insertion_point(field_get:new_send_msg_req.msg_info.utc)
  return utc_;
}
inline void new_send_msg_req_msg_info::set_utc(::google::protobuf::int32 value) {
  set_has_utc();
  utc_ = value;
  // @@protoc_insertion_point(field_set:new_send_msg_req.msg_info.utc)
}

// optional int32 client_id = 5;
inline bool new_send_msg_req_msg_info::has_client_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void new_send_msg_req_msg_info::set_has_client_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void new_send_msg_req_msg_info::clear_has_client_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void new_send_msg_req_msg_info::clear_client_id() {
  client_id_ = 0;
  clear_has_client_id();
}
inline ::google::protobuf::int32 new_send_msg_req_msg_info::client_id() const {
  // @@protoc_insertion_point(field_get:new_send_msg_req.msg_info.client_id)
  return client_id_;
}
inline void new_send_msg_req_msg_info::set_client_id(::google::protobuf::int32 value) {
  set_has_client_id();
  client_id_ = value;
  // @@protoc_insertion_point(field_set:new_send_msg_req.msg_info.client_id)
}

// optional string at_list = 6;
inline bool new_send_msg_req_msg_info::has_at_list() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void new_send_msg_req_msg_info::set_has_at_list() {
  _has_bits_[0] |= 0x00000002u;
}
inline void new_send_msg_req_msg_info::clear_has_at_list() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void new_send_msg_req_msg_info::clear_at_list() {
  at_list_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_at_list();
}
inline const ::std::string& new_send_msg_req_msg_info::at_list() const {
  // @@protoc_insertion_point(field_get:new_send_msg_req.msg_info.at_list)
  return at_list_.GetNoArena();
}
inline void new_send_msg_req_msg_info::set_at_list(const ::std::string& value) {
  set_has_at_list();
  at_list_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:new_send_msg_req.msg_info.at_list)
}
#if LANG_CXX11
inline void new_send_msg_req_msg_info::set_at_list(::std::string&& value) {
  set_has_at_list();
  at_list_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:new_send_msg_req.msg_info.at_list)
}
#endif
inline void new_send_msg_req_msg_info::set_at_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_at_list();
  at_list_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:new_send_msg_req.msg_info.at_list)
}
inline void new_send_msg_req_msg_info::set_at_list(const char* value, size_t size) {
  set_has_at_list();
  at_list_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:new_send_msg_req.msg_info.at_list)
}
inline ::std::string* new_send_msg_req_msg_info::mutable_at_list() {
  set_has_at_list();
  // @@protoc_insertion_point(field_mutable:new_send_msg_req.msg_info.at_list)
  return at_list_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* new_send_msg_req_msg_info::release_at_list() {
  // @@protoc_insertion_point(field_release:new_send_msg_req.msg_info.at_list)
  clear_has_at_list();
  return at_list_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void new_send_msg_req_msg_info::set_allocated_at_list(::std::string* at_list) {
  if (at_list != NULL) {
    set_has_at_list();
  } else {
    clear_has_at_list();
  }
  at_list_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), at_list);
  // @@protoc_insertion_point(field_set_allocated:new_send_msg_req.msg_info.at_list)
}

// -------------------------------------------------------------------

// new_send_msg_req

// optional int32 cnt = 1;
inline bool new_send_msg_req::has_cnt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void new_send_msg_req::set_has_cnt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void new_send_msg_req::clear_has_cnt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void new_send_msg_req::clear_cnt() {
  cnt_ = 0;
  clear_has_cnt();
}
inline ::google::protobuf::int32 new_send_msg_req::cnt() const {
  // @@protoc_insertion_point(field_get:new_send_msg_req.cnt)
  return cnt_;
}
inline void new_send_msg_req::set_cnt(::google::protobuf::int32 value) {
  set_has_cnt();
  cnt_ = value;
  // @@protoc_insertion_point(field_set:new_send_msg_req.cnt)
}

// optional .new_send_msg_req.msg_info msg = 2;
inline bool new_send_msg_req::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void new_send_msg_req::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void new_send_msg_req::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void new_send_msg_req::clear_msg() {
  if (msg_ != NULL) msg_->::new_send_msg_req_msg_info::Clear();
  clear_has_msg();
}
inline const ::new_send_msg_req_msg_info& new_send_msg_req::msg() const {
  // @@protoc_insertion_point(field_get:new_send_msg_req.msg)
  return msg_ != NULL ? *msg_
                         : *::new_send_msg_req_msg_info::internal_default_instance();
}
inline ::new_send_msg_req_msg_info* new_send_msg_req::mutable_msg() {
  set_has_msg();
  if (msg_ == NULL) {
    msg_ = new ::new_send_msg_req_msg_info;
  }
  // @@protoc_insertion_point(field_mutable:new_send_msg_req.msg)
  return msg_;
}
inline ::new_send_msg_req_msg_info* new_send_msg_req::release_msg() {
  // @@protoc_insertion_point(field_release:new_send_msg_req.msg)
  clear_has_msg();
  ::new_send_msg_req_msg_info* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline void new_send_msg_req::set_allocated_msg(::new_send_msg_req_msg_info* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  // @@protoc_insertion_point(field_set_allocated:new_send_msg_req.msg)
}

// -------------------------------------------------------------------

// new_send_msg_resp_result

// optional int32 code = 1;
inline bool new_send_msg_resp_result::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void new_send_msg_resp_result::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void new_send_msg_resp_result::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void new_send_msg_resp_result::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 new_send_msg_resp_result::code() const {
  // @@protoc_insertion_point(field_get:new_send_msg_resp.result.code)
  return code_;
}
inline void new_send_msg_resp_result::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:new_send_msg_resp.result.code)
}

// optional .Wxid to = 2;
inline bool new_send_msg_resp_result::has_to() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void new_send_msg_resp_result::set_has_to() {
  _has_bits_[0] |= 0x00000001u;
}
inline void new_send_msg_resp_result::clear_has_to() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void new_send_msg_resp_result::clear_to() {
  if (to_ != NULL) to_->::Wxid::Clear();
  clear_has_to();
}
inline const ::Wxid& new_send_msg_resp_result::to() const {
  // @@protoc_insertion_point(field_get:new_send_msg_resp.result.to)
  return to_ != NULL ? *to_
                         : *::Wxid::internal_default_instance();
}
inline ::Wxid* new_send_msg_resp_result::mutable_to() {
  set_has_to();
  if (to_ == NULL) {
    to_ = new ::Wxid;
  }
  // @@protoc_insertion_point(field_mutable:new_send_msg_resp.result.to)
  return to_;
}
inline ::Wxid* new_send_msg_resp_result::release_to() {
  // @@protoc_insertion_point(field_release:new_send_msg_resp.result.to)
  clear_has_to();
  ::Wxid* temp = to_;
  to_ = NULL;
  return temp;
}
inline void new_send_msg_resp_result::set_allocated_to(::Wxid* to) {
  delete to_;
  to_ = to;
  if (to) {
    set_has_to();
  } else {
    clear_has_to();
  }
  // @@protoc_insertion_point(field_set_allocated:new_send_msg_resp.result.to)
}

// optional int32 type = 7;
inline bool new_send_msg_resp_result::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void new_send_msg_resp_result::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void new_send_msg_resp_result::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void new_send_msg_resp_result::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 new_send_msg_resp_result::type() const {
  // @@protoc_insertion_point(field_get:new_send_msg_resp.result.type)
  return type_;
}
inline void new_send_msg_resp_result::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:new_send_msg_resp.result.type)
}

// optional int64 svrid = 8;
inline bool new_send_msg_resp_result::has_svrid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void new_send_msg_resp_result::set_has_svrid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void new_send_msg_resp_result::clear_has_svrid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void new_send_msg_resp_result::clear_svrid() {
  svrid_ = GOOGLE_LONGLONG(0);
  clear_has_svrid();
}
inline ::google::protobuf::int64 new_send_msg_resp_result::svrid() const {
  // @@protoc_insertion_point(field_get:new_send_msg_resp.result.svrid)
  return svrid_;
}
inline void new_send_msg_resp_result::set_svrid(::google::protobuf::int64 value) {
  set_has_svrid();
  svrid_ = value;
  // @@protoc_insertion_point(field_set:new_send_msg_resp.result.svrid)
}

// -------------------------------------------------------------------

// new_send_msg_resp

// optional .mmStr tag1 = 1;
inline bool new_send_msg_resp::has_tag1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void new_send_msg_resp::set_has_tag1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void new_send_msg_resp::clear_has_tag1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void new_send_msg_resp::clear_tag1() {
  if (tag1_ != NULL) tag1_->::mmStr::Clear();
  clear_has_tag1();
}
inline const ::mmStr& new_send_msg_resp::tag1() const {
  // @@protoc_insertion_point(field_get:new_send_msg_resp.tag1)
  return tag1_ != NULL ? *tag1_
                         : *::mmStr::internal_default_instance();
}
inline ::mmStr* new_send_msg_resp::mutable_tag1() {
  set_has_tag1();
  if (tag1_ == NULL) {
    tag1_ = new ::mmStr;
  }
  // @@protoc_insertion_point(field_mutable:new_send_msg_resp.tag1)
  return tag1_;
}
inline ::mmStr* new_send_msg_resp::release_tag1() {
  // @@protoc_insertion_point(field_release:new_send_msg_resp.tag1)
  clear_has_tag1();
  ::mmStr* temp = tag1_;
  tag1_ = NULL;
  return temp;
}
inline void new_send_msg_resp::set_allocated_tag1(::mmStr* tag1) {
  delete tag1_;
  tag1_ = tag1;
  if (tag1) {
    set_has_tag1();
  } else {
    clear_has_tag1();
  }
  // @@protoc_insertion_point(field_set_allocated:new_send_msg_resp.tag1)
}

// optional int32 cnt = 2;
inline bool new_send_msg_resp::has_cnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void new_send_msg_resp::set_has_cnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void new_send_msg_resp::clear_has_cnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void new_send_msg_resp::clear_cnt() {
  cnt_ = 0;
  clear_has_cnt();
}
inline ::google::protobuf::int32 new_send_msg_resp::cnt() const {
  // @@protoc_insertion_point(field_get:new_send_msg_resp.cnt)
  return cnt_;
}
inline void new_send_msg_resp::set_cnt(::google::protobuf::int32 value) {
  set_has_cnt();
  cnt_ = value;
  // @@protoc_insertion_point(field_set:new_send_msg_resp.cnt)
}

// optional .new_send_msg_resp.result res = 3;
inline bool new_send_msg_resp::has_res() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void new_send_msg_resp::set_has_res() {
  _has_bits_[0] |= 0x00000002u;
}
inline void new_send_msg_resp::clear_has_res() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void new_send_msg_resp::clear_res() {
  if (res_ != NULL) res_->::new_send_msg_resp_result::Clear();
  clear_has_res();
}
inline const ::new_send_msg_resp_result& new_send_msg_resp::res() const {
  // @@protoc_insertion_point(field_get:new_send_msg_resp.res)
  return res_ != NULL ? *res_
                         : *::new_send_msg_resp_result::internal_default_instance();
}
inline ::new_send_msg_resp_result* new_send_msg_resp::mutable_res() {
  set_has_res();
  if (res_ == NULL) {
    res_ = new ::new_send_msg_resp_result;
  }
  // @@protoc_insertion_point(field_mutable:new_send_msg_resp.res)
  return res_;
}
inline ::new_send_msg_resp_result* new_send_msg_resp::release_res() {
  // @@protoc_insertion_point(field_release:new_send_msg_resp.res)
  clear_has_res();
  ::new_send_msg_resp_result* temp = res_;
  res_ = NULL;
  return temp;
}
inline void new_send_msg_resp::set_allocated_res(::new_send_msg_resp_result* res) {
  delete res_;
  res_ = res;
  if (res) {
    set_has_res();
  } else {
    clear_has_res();
  }
  // @@protoc_insertion_point(field_set_allocated:new_send_msg_resp.res)
}

// -------------------------------------------------------------------

// new_send_app_msg_req_appmsg_info

// optional string from_wxid = 1;
inline bool new_send_app_msg_req_appmsg_info::has_from_wxid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void new_send_app_msg_req_appmsg_info::set_has_from_wxid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void new_send_app_msg_req_appmsg_info::clear_has_from_wxid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void new_send_app_msg_req_appmsg_info::clear_from_wxid() {
  from_wxid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_from_wxid();
}
inline const ::std::string& new_send_app_msg_req_appmsg_info::from_wxid() const {
  // @@protoc_insertion_point(field_get:new_send_app_msg_req.appmsg_info.from_wxid)
  return from_wxid_.GetNoArena();
}
inline void new_send_app_msg_req_appmsg_info::set_from_wxid(const ::std::string& value) {
  set_has_from_wxid();
  from_wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:new_send_app_msg_req.appmsg_info.from_wxid)
}
#if LANG_CXX11
inline void new_send_app_msg_req_appmsg_info::set_from_wxid(::std::string&& value) {
  set_has_from_wxid();
  from_wxid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:new_send_app_msg_req.appmsg_info.from_wxid)
}
#endif
inline void new_send_app_msg_req_appmsg_info::set_from_wxid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_from_wxid();
  from_wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:new_send_app_msg_req.appmsg_info.from_wxid)
}
inline void new_send_app_msg_req_appmsg_info::set_from_wxid(const char* value, size_t size) {
  set_has_from_wxid();
  from_wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:new_send_app_msg_req.appmsg_info.from_wxid)
}
inline ::std::string* new_send_app_msg_req_appmsg_info::mutable_from_wxid() {
  set_has_from_wxid();
  // @@protoc_insertion_point(field_mutable:new_send_app_msg_req.appmsg_info.from_wxid)
  return from_wxid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* new_send_app_msg_req_appmsg_info::release_from_wxid() {
  // @@protoc_insertion_point(field_release:new_send_app_msg_req.appmsg_info.from_wxid)
  clear_has_from_wxid();
  return from_wxid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void new_send_app_msg_req_appmsg_info::set_allocated_from_wxid(::std::string* from_wxid) {
  if (from_wxid != NULL) {
    set_has_from_wxid();
  } else {
    clear_has_from_wxid();
  }
  from_wxid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_wxid);
  // @@protoc_insertion_point(field_set_allocated:new_send_app_msg_req.appmsg_info.from_wxid)
}

// optional string app_wxid = 2;
inline bool new_send_app_msg_req_appmsg_info::has_app_wxid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void new_send_app_msg_req_appmsg_info::set_has_app_wxid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void new_send_app_msg_req_appmsg_info::clear_has_app_wxid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void new_send_app_msg_req_appmsg_info::clear_app_wxid() {
  app_wxid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_wxid();
}
inline const ::std::string& new_send_app_msg_req_appmsg_info::app_wxid() const {
  // @@protoc_insertion_point(field_get:new_send_app_msg_req.appmsg_info.app_wxid)
  return app_wxid_.GetNoArena();
}
inline void new_send_app_msg_req_appmsg_info::set_app_wxid(const ::std::string& value) {
  set_has_app_wxid();
  app_wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:new_send_app_msg_req.appmsg_info.app_wxid)
}
#if LANG_CXX11
inline void new_send_app_msg_req_appmsg_info::set_app_wxid(::std::string&& value) {
  set_has_app_wxid();
  app_wxid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:new_send_app_msg_req.appmsg_info.app_wxid)
}
#endif
inline void new_send_app_msg_req_appmsg_info::set_app_wxid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_app_wxid();
  app_wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:new_send_app_msg_req.appmsg_info.app_wxid)
}
inline void new_send_app_msg_req_appmsg_info::set_app_wxid(const char* value, size_t size) {
  set_has_app_wxid();
  app_wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:new_send_app_msg_req.appmsg_info.app_wxid)
}
inline ::std::string* new_send_app_msg_req_appmsg_info::mutable_app_wxid() {
  set_has_app_wxid();
  // @@protoc_insertion_point(field_mutable:new_send_app_msg_req.appmsg_info.app_wxid)
  return app_wxid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* new_send_app_msg_req_appmsg_info::release_app_wxid() {
  // @@protoc_insertion_point(field_release:new_send_app_msg_req.appmsg_info.app_wxid)
  clear_has_app_wxid();
  return app_wxid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void new_send_app_msg_req_appmsg_info::set_allocated_app_wxid(::std::string* app_wxid) {
  if (app_wxid != NULL) {
    set_has_app_wxid();
  } else {
    clear_has_app_wxid();
  }
  app_wxid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_wxid);
  // @@protoc_insertion_point(field_set_allocated:new_send_app_msg_req.appmsg_info.app_wxid)
}

// optional int32 tag3 = 3;
inline bool new_send_app_msg_req_appmsg_info::has_tag3() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void new_send_app_msg_req_appmsg_info::set_has_tag3() {
  _has_bits_[0] |= 0x00000020u;
}
inline void new_send_app_msg_req_appmsg_info::clear_has_tag3() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void new_send_app_msg_req_appmsg_info::clear_tag3() {
  tag3_ = 0;
  clear_has_tag3();
}
inline ::google::protobuf::int32 new_send_app_msg_req_appmsg_info::tag3() const {
  // @@protoc_insertion_point(field_get:new_send_app_msg_req.appmsg_info.tag3)
  return tag3_;
}
inline void new_send_app_msg_req_appmsg_info::set_tag3(::google::protobuf::int32 value) {
  set_has_tag3();
  tag3_ = value;
  // @@protoc_insertion_point(field_set:new_send_app_msg_req.appmsg_info.tag3)
}

// optional string to_wxid = 4;
inline bool new_send_app_msg_req_appmsg_info::has_to_wxid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void new_send_app_msg_req_appmsg_info::set_has_to_wxid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void new_send_app_msg_req_appmsg_info::clear_has_to_wxid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void new_send_app_msg_req_appmsg_info::clear_to_wxid() {
  to_wxid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_to_wxid();
}
inline const ::std::string& new_send_app_msg_req_appmsg_info::to_wxid() const {
  // @@protoc_insertion_point(field_get:new_send_app_msg_req.appmsg_info.to_wxid)
  return to_wxid_.GetNoArena();
}
inline void new_send_app_msg_req_appmsg_info::set_to_wxid(const ::std::string& value) {
  set_has_to_wxid();
  to_wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:new_send_app_msg_req.appmsg_info.to_wxid)
}
#if LANG_CXX11
inline void new_send_app_msg_req_appmsg_info::set_to_wxid(::std::string&& value) {
  set_has_to_wxid();
  to_wxid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:new_send_app_msg_req.appmsg_info.to_wxid)
}
#endif
inline void new_send_app_msg_req_appmsg_info::set_to_wxid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_to_wxid();
  to_wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:new_send_app_msg_req.appmsg_info.to_wxid)
}
inline void new_send_app_msg_req_appmsg_info::set_to_wxid(const char* value, size_t size) {
  set_has_to_wxid();
  to_wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:new_send_app_msg_req.appmsg_info.to_wxid)
}
inline ::std::string* new_send_app_msg_req_appmsg_info::mutable_to_wxid() {
  set_has_to_wxid();
  // @@protoc_insertion_point(field_mutable:new_send_app_msg_req.appmsg_info.to_wxid)
  return to_wxid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* new_send_app_msg_req_appmsg_info::release_to_wxid() {
  // @@protoc_insertion_point(field_release:new_send_app_msg_req.appmsg_info.to_wxid)
  clear_has_to_wxid();
  return to_wxid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void new_send_app_msg_req_appmsg_info::set_allocated_to_wxid(::std::string* to_wxid) {
  if (to_wxid != NULL) {
    set_has_to_wxid();
  } else {
    clear_has_to_wxid();
  }
  to_wxid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_wxid);
  // @@protoc_insertion_point(field_set_allocated:new_send_app_msg_req.appmsg_info.to_wxid)
}

// optional int32 type = 5;
inline bool new_send_app_msg_req_appmsg_info::has_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void new_send_app_msg_req_appmsg_info::set_has_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void new_send_app_msg_req_appmsg_info::clear_has_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void new_send_app_msg_req_appmsg_info::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 new_send_app_msg_req_appmsg_info::type() const {
  // @@protoc_insertion_point(field_get:new_send_app_msg_req.appmsg_info.type)
  return type_;
}
inline void new_send_app_msg_req_appmsg_info::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:new_send_app_msg_req.appmsg_info.type)
}

// optional string content = 6;
inline bool new_send_app_msg_req_appmsg_info::has_content() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void new_send_app_msg_req_appmsg_info::set_has_content() {
  _has_bits_[0] |= 0x00000008u;
}
inline void new_send_app_msg_req_appmsg_info::clear_has_content() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void new_send_app_msg_req_appmsg_info::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& new_send_app_msg_req_appmsg_info::content() const {
  // @@protoc_insertion_point(field_get:new_send_app_msg_req.appmsg_info.content)
  return content_.GetNoArena();
}
inline void new_send_app_msg_req_appmsg_info::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:new_send_app_msg_req.appmsg_info.content)
}
#if LANG_CXX11
inline void new_send_app_msg_req_appmsg_info::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:new_send_app_msg_req.appmsg_info.content)
}
#endif
inline void new_send_app_msg_req_appmsg_info::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:new_send_app_msg_req.appmsg_info.content)
}
inline void new_send_app_msg_req_appmsg_info::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:new_send_app_msg_req.appmsg_info.content)
}
inline ::std::string* new_send_app_msg_req_appmsg_info::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:new_send_app_msg_req.appmsg_info.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* new_send_app_msg_req_appmsg_info::release_content() {
  // @@protoc_insertion_point(field_release:new_send_app_msg_req.appmsg_info.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void new_send_app_msg_req_appmsg_info::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:new_send_app_msg_req.appmsg_info.content)
}

// optional int32 utc = 7;
inline bool new_send_app_msg_req_appmsg_info::has_utc() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void new_send_app_msg_req_appmsg_info::set_has_utc() {
  _has_bits_[0] |= 0x00000080u;
}
inline void new_send_app_msg_req_appmsg_info::clear_has_utc() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void new_send_app_msg_req_appmsg_info::clear_utc() {
  utc_ = 0;
  clear_has_utc();
}
inline ::google::protobuf::int32 new_send_app_msg_req_appmsg_info::utc() const {
  // @@protoc_insertion_point(field_get:new_send_app_msg_req.appmsg_info.utc)
  return utc_;
}
inline void new_send_app_msg_req_appmsg_info::set_utc(::google::protobuf::int32 value) {
  set_has_utc();
  utc_ = value;
  // @@protoc_insertion_point(field_set:new_send_app_msg_req.appmsg_info.utc)
}

// optional string client_id = 8;
inline bool new_send_app_msg_req_appmsg_info::has_client_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void new_send_app_msg_req_appmsg_info::set_has_client_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void new_send_app_msg_req_appmsg_info::clear_has_client_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void new_send_app_msg_req_appmsg_info::clear_client_id() {
  client_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_client_id();
}
inline const ::std::string& new_send_app_msg_req_appmsg_info::client_id() const {
  // @@protoc_insertion_point(field_get:new_send_app_msg_req.appmsg_info.client_id)
  return client_id_.GetNoArena();
}
inline void new_send_app_msg_req_appmsg_info::set_client_id(const ::std::string& value) {
  set_has_client_id();
  client_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:new_send_app_msg_req.appmsg_info.client_id)
}
#if LANG_CXX11
inline void new_send_app_msg_req_appmsg_info::set_client_id(::std::string&& value) {
  set_has_client_id();
  client_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:new_send_app_msg_req.appmsg_info.client_id)
}
#endif
inline void new_send_app_msg_req_appmsg_info::set_client_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_client_id();
  client_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:new_send_app_msg_req.appmsg_info.client_id)
}
inline void new_send_app_msg_req_appmsg_info::set_client_id(const char* value, size_t size) {
  set_has_client_id();
  client_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:new_send_app_msg_req.appmsg_info.client_id)
}
inline ::std::string* new_send_app_msg_req_appmsg_info::mutable_client_id() {
  set_has_client_id();
  // @@protoc_insertion_point(field_mutable:new_send_app_msg_req.appmsg_info.client_id)
  return client_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* new_send_app_msg_req_appmsg_info::release_client_id() {
  // @@protoc_insertion_point(field_release:new_send_app_msg_req.appmsg_info.client_id)
  clear_has_client_id();
  return client_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void new_send_app_msg_req_appmsg_info::set_allocated_client_id(::std::string* client_id) {
  if (client_id != NULL) {
    set_has_client_id();
  } else {
    clear_has_client_id();
  }
  client_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_id);
  // @@protoc_insertion_point(field_set_allocated:new_send_app_msg_req.appmsg_info.client_id)
}

// optional int32 tag10 = 10;
inline bool new_send_app_msg_req_appmsg_info::has_tag10() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void new_send_app_msg_req_appmsg_info::set_has_tag10() {
  _has_bits_[0] |= 0x00000100u;
}
inline void new_send_app_msg_req_appmsg_info::clear_has_tag10() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void new_send_app_msg_req_appmsg_info::clear_tag10() {
  tag10_ = 0;
  clear_has_tag10();
}
inline ::google::protobuf::int32 new_send_app_msg_req_appmsg_info::tag10() const {
  // @@protoc_insertion_point(field_get:new_send_app_msg_req.appmsg_info.tag10)
  return tag10_;
}
inline void new_send_app_msg_req_appmsg_info::set_tag10(::google::protobuf::int32 value) {
  set_has_tag10();
  tag10_ = value;
  // @@protoc_insertion_point(field_set:new_send_app_msg_req.appmsg_info.tag10)
}

// optional int32 tag11 = 11;
inline bool new_send_app_msg_req_appmsg_info::has_tag11() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void new_send_app_msg_req_appmsg_info::set_has_tag11() {
  _has_bits_[0] |= 0x00000200u;
}
inline void new_send_app_msg_req_appmsg_info::clear_has_tag11() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void new_send_app_msg_req_appmsg_info::clear_tag11() {
  tag11_ = 0;
  clear_has_tag11();
}
inline ::google::protobuf::int32 new_send_app_msg_req_appmsg_info::tag11() const {
  // @@protoc_insertion_point(field_get:new_send_app_msg_req.appmsg_info.tag11)
  return tag11_;
}
inline void new_send_app_msg_req_appmsg_info::set_tag11(::google::protobuf::int32 value) {
  set_has_tag11();
  tag11_ = value;
  // @@protoc_insertion_point(field_set:new_send_app_msg_req.appmsg_info.tag11)
}

// -------------------------------------------------------------------

// new_send_app_msg_req

// optional .LoginInfo login = 1;
inline bool new_send_app_msg_req::has_login() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void new_send_app_msg_req::set_has_login() {
  _has_bits_[0] |= 0x00000004u;
}
inline void new_send_app_msg_req::clear_has_login() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void new_send_app_msg_req::clear_login() {
  if (login_ != NULL) login_->::LoginInfo::Clear();
  clear_has_login();
}
inline const ::LoginInfo& new_send_app_msg_req::login() const {
  // @@protoc_insertion_point(field_get:new_send_app_msg_req.login)
  return login_ != NULL ? *login_
                         : *::LoginInfo::internal_default_instance();
}
inline ::LoginInfo* new_send_app_msg_req::mutable_login() {
  set_has_login();
  if (login_ == NULL) {
    login_ = new ::LoginInfo;
  }
  // @@protoc_insertion_point(field_mutable:new_send_app_msg_req.login)
  return login_;
}
inline ::LoginInfo* new_send_app_msg_req::release_login() {
  // @@protoc_insertion_point(field_release:new_send_app_msg_req.login)
  clear_has_login();
  ::LoginInfo* temp = login_;
  login_ = NULL;
  return temp;
}
inline void new_send_app_msg_req::set_allocated_login(::LoginInfo* login) {
  delete login_;
  login_ = login;
  if (login) {
    set_has_login();
  } else {
    clear_has_login();
  }
  // @@protoc_insertion_point(field_set_allocated:new_send_app_msg_req.login)
}

// optional .new_send_app_msg_req.appmsg_info info = 2;
inline bool new_send_app_msg_req::has_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void new_send_app_msg_req::set_has_info() {
  _has_bits_[0] |= 0x00000008u;
}
inline void new_send_app_msg_req::clear_has_info() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void new_send_app_msg_req::clear_info() {
  if (info_ != NULL) info_->::new_send_app_msg_req_appmsg_info::Clear();
  clear_has_info();
}
inline const ::new_send_app_msg_req_appmsg_info& new_send_app_msg_req::info() const {
  // @@protoc_insertion_point(field_get:new_send_app_msg_req.info)
  return info_ != NULL ? *info_
                         : *::new_send_app_msg_req_appmsg_info::internal_default_instance();
}
inline ::new_send_app_msg_req_appmsg_info* new_send_app_msg_req::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::new_send_app_msg_req_appmsg_info;
  }
  // @@protoc_insertion_point(field_mutable:new_send_app_msg_req.info)
  return info_;
}
inline ::new_send_app_msg_req_appmsg_info* new_send_app_msg_req::release_info() {
  // @@protoc_insertion_point(field_release:new_send_app_msg_req.info)
  clear_has_info();
  ::new_send_app_msg_req_appmsg_info* temp = info_;
  info_ = NULL;
  return temp;
}
inline void new_send_app_msg_req::set_allocated_info(::new_send_app_msg_req_appmsg_info* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:new_send_app_msg_req.info)
}

// optional int32 tag4 = 4;
inline bool new_send_app_msg_req::has_tag4() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void new_send_app_msg_req::set_has_tag4() {
  _has_bits_[0] |= 0x00000010u;
}
inline void new_send_app_msg_req::clear_has_tag4() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void new_send_app_msg_req::clear_tag4() {
  tag4_ = 0;
  clear_has_tag4();
}
inline ::google::protobuf::int32 new_send_app_msg_req::tag4() const {
  // @@protoc_insertion_point(field_get:new_send_app_msg_req.tag4)
  return tag4_;
}
inline void new_send_app_msg_req::set_tag4(::google::protobuf::int32 value) {
  set_has_tag4();
  tag4_ = value;
  // @@protoc_insertion_point(field_set:new_send_app_msg_req.tag4)
}

// optional int32 tag6 = 6;
inline bool new_send_app_msg_req::has_tag6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void new_send_app_msg_req::set_has_tag6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void new_send_app_msg_req::clear_has_tag6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void new_send_app_msg_req::clear_tag6() {
  tag6_ = 0;
  clear_has_tag6();
}
inline ::google::protobuf::int32 new_send_app_msg_req::tag6() const {
  // @@protoc_insertion_point(field_get:new_send_app_msg_req.tag6)
  return tag6_;
}
inline void new_send_app_msg_req::set_tag6(::google::protobuf::int32 value) {
  set_has_tag6();
  tag6_ = value;
  // @@protoc_insertion_point(field_set:new_send_app_msg_req.tag6)
}

// optional string tag7 = 7;
inline bool new_send_app_msg_req::has_tag7() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void new_send_app_msg_req::set_has_tag7() {
  _has_bits_[0] |= 0x00000001u;
}
inline void new_send_app_msg_req::clear_has_tag7() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void new_send_app_msg_req::clear_tag7() {
  tag7_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag7();
}
inline const ::std::string& new_send_app_msg_req::tag7() const {
  // @@protoc_insertion_point(field_get:new_send_app_msg_req.tag7)
  return tag7_.GetNoArena();
}
inline void new_send_app_msg_req::set_tag7(const ::std::string& value) {
  set_has_tag7();
  tag7_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:new_send_app_msg_req.tag7)
}
#if LANG_CXX11
inline void new_send_app_msg_req::set_tag7(::std::string&& value) {
  set_has_tag7();
  tag7_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:new_send_app_msg_req.tag7)
}
#endif
inline void new_send_app_msg_req::set_tag7(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag7();
  tag7_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:new_send_app_msg_req.tag7)
}
inline void new_send_app_msg_req::set_tag7(const char* value, size_t size) {
  set_has_tag7();
  tag7_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:new_send_app_msg_req.tag7)
}
inline ::std::string* new_send_app_msg_req::mutable_tag7() {
  set_has_tag7();
  // @@protoc_insertion_point(field_mutable:new_send_app_msg_req.tag7)
  return tag7_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* new_send_app_msg_req::release_tag7() {
  // @@protoc_insertion_point(field_release:new_send_app_msg_req.tag7)
  clear_has_tag7();
  return tag7_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void new_send_app_msg_req::set_allocated_tag7(::std::string* tag7) {
  if (tag7 != NULL) {
    set_has_tag7();
  } else {
    clear_has_tag7();
  }
  tag7_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag7);
  // @@protoc_insertion_point(field_set_allocated:new_send_app_msg_req.tag7)
}

// optional string fromScene = 8;
inline bool new_send_app_msg_req::has_fromscene() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void new_send_app_msg_req::set_has_fromscene() {
  _has_bits_[0] |= 0x00000002u;
}
inline void new_send_app_msg_req::clear_has_fromscene() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void new_send_app_msg_req::clear_fromscene() {
  fromscene_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fromscene();
}
inline const ::std::string& new_send_app_msg_req::fromscene() const {
  // @@protoc_insertion_point(field_get:new_send_app_msg_req.fromScene)
  return fromscene_.GetNoArena();
}
inline void new_send_app_msg_req::set_fromscene(const ::std::string& value) {
  set_has_fromscene();
  fromscene_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:new_send_app_msg_req.fromScene)
}
#if LANG_CXX11
inline void new_send_app_msg_req::set_fromscene(::std::string&& value) {
  set_has_fromscene();
  fromscene_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:new_send_app_msg_req.fromScene)
}
#endif
inline void new_send_app_msg_req::set_fromscene(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_fromscene();
  fromscene_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:new_send_app_msg_req.fromScene)
}
inline void new_send_app_msg_req::set_fromscene(const char* value, size_t size) {
  set_has_fromscene();
  fromscene_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:new_send_app_msg_req.fromScene)
}
inline ::std::string* new_send_app_msg_req::mutable_fromscene() {
  set_has_fromscene();
  // @@protoc_insertion_point(field_mutable:new_send_app_msg_req.fromScene)
  return fromscene_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* new_send_app_msg_req::release_fromscene() {
  // @@protoc_insertion_point(field_release:new_send_app_msg_req.fromScene)
  clear_has_fromscene();
  return fromscene_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void new_send_app_msg_req::set_allocated_fromscene(::std::string* fromscene) {
  if (fromscene != NULL) {
    set_has_fromscene();
  } else {
    clear_has_fromscene();
  }
  fromscene_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromscene);
  // @@protoc_insertion_point(field_set_allocated:new_send_app_msg_req.fromScene)
}

// optional int32 tag9 = 9;
inline bool new_send_app_msg_req::has_tag9() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void new_send_app_msg_req::set_has_tag9() {
  _has_bits_[0] |= 0x00000040u;
}
inline void new_send_app_msg_req::clear_has_tag9() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void new_send_app_msg_req::clear_tag9() {
  tag9_ = 0;
  clear_has_tag9();
}
inline ::google::protobuf::int32 new_send_app_msg_req::tag9() const {
  // @@protoc_insertion_point(field_get:new_send_app_msg_req.tag9)
  return tag9_;
}
inline void new_send_app_msg_req::set_tag9(::google::protobuf::int32 value) {
  set_has_tag9();
  tag9_ = value;
  // @@protoc_insertion_point(field_set:new_send_app_msg_req.tag9)
}

// optional int32 tag10 = 10;
inline bool new_send_app_msg_req::has_tag10() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void new_send_app_msg_req::set_has_tag10() {
  _has_bits_[0] |= 0x00000080u;
}
inline void new_send_app_msg_req::clear_has_tag10() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void new_send_app_msg_req::clear_tag10() {
  tag10_ = 0;
  clear_has_tag10();
}
inline ::google::protobuf::int32 new_send_app_msg_req::tag10() const {
  // @@protoc_insertion_point(field_get:new_send_app_msg_req.tag10)
  return tag10_;
}
inline void new_send_app_msg_req::set_tag10(::google::protobuf::int32 value) {
  set_has_tag10();
  tag10_ = value;
  // @@protoc_insertion_point(field_set:new_send_app_msg_req.tag10)
}

// -------------------------------------------------------------------

// new_send_app_msg_resp

// optional .mmStr tag1 = 1;
inline bool new_send_app_msg_resp::has_tag1() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void new_send_app_msg_resp::set_has_tag1() {
  _has_bits_[0] |= 0x00000008u;
}
inline void new_send_app_msg_resp::clear_has_tag1() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void new_send_app_msg_resp::clear_tag1() {
  if (tag1_ != NULL) tag1_->::mmStr::Clear();
  clear_has_tag1();
}
inline const ::mmStr& new_send_app_msg_resp::tag1() const {
  // @@protoc_insertion_point(field_get:new_send_app_msg_resp.tag1)
  return tag1_ != NULL ? *tag1_
                         : *::mmStr::internal_default_instance();
}
inline ::mmStr* new_send_app_msg_resp::mutable_tag1() {
  set_has_tag1();
  if (tag1_ == NULL) {
    tag1_ = new ::mmStr;
  }
  // @@protoc_insertion_point(field_mutable:new_send_app_msg_resp.tag1)
  return tag1_;
}
inline ::mmStr* new_send_app_msg_resp::release_tag1() {
  // @@protoc_insertion_point(field_release:new_send_app_msg_resp.tag1)
  clear_has_tag1();
  ::mmStr* temp = tag1_;
  tag1_ = NULL;
  return temp;
}
inline void new_send_app_msg_resp::set_allocated_tag1(::mmStr* tag1) {
  delete tag1_;
  tag1_ = tag1;
  if (tag1) {
    set_has_tag1();
  } else {
    clear_has_tag1();
  }
  // @@protoc_insertion_point(field_set_allocated:new_send_app_msg_resp.tag1)
}

// optional string from_wxid = 3;
inline bool new_send_app_msg_resp::has_from_wxid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void new_send_app_msg_resp::set_has_from_wxid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void new_send_app_msg_resp::clear_has_from_wxid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void new_send_app_msg_resp::clear_from_wxid() {
  from_wxid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_from_wxid();
}
inline const ::std::string& new_send_app_msg_resp::from_wxid() const {
  // @@protoc_insertion_point(field_get:new_send_app_msg_resp.from_wxid)
  return from_wxid_.GetNoArena();
}
inline void new_send_app_msg_resp::set_from_wxid(const ::std::string& value) {
  set_has_from_wxid();
  from_wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:new_send_app_msg_resp.from_wxid)
}
#if LANG_CXX11
inline void new_send_app_msg_resp::set_from_wxid(::std::string&& value) {
  set_has_from_wxid();
  from_wxid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:new_send_app_msg_resp.from_wxid)
}
#endif
inline void new_send_app_msg_resp::set_from_wxid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_from_wxid();
  from_wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:new_send_app_msg_resp.from_wxid)
}
inline void new_send_app_msg_resp::set_from_wxid(const char* value, size_t size) {
  set_has_from_wxid();
  from_wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:new_send_app_msg_resp.from_wxid)
}
inline ::std::string* new_send_app_msg_resp::mutable_from_wxid() {
  set_has_from_wxid();
  // @@protoc_insertion_point(field_mutable:new_send_app_msg_resp.from_wxid)
  return from_wxid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* new_send_app_msg_resp::release_from_wxid() {
  // @@protoc_insertion_point(field_release:new_send_app_msg_resp.from_wxid)
  clear_has_from_wxid();
  return from_wxid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void new_send_app_msg_resp::set_allocated_from_wxid(::std::string* from_wxid) {
  if (from_wxid != NULL) {
    set_has_from_wxid();
  } else {
    clear_has_from_wxid();
  }
  from_wxid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_wxid);
  // @@protoc_insertion_point(field_set_allocated:new_send_app_msg_resp.from_wxid)
}

// optional string to_wxid = 4;
inline bool new_send_app_msg_resp::has_to_wxid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void new_send_app_msg_resp::set_has_to_wxid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void new_send_app_msg_resp::clear_has_to_wxid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void new_send_app_msg_resp::clear_to_wxid() {
  to_wxid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_to_wxid();
}
inline const ::std::string& new_send_app_msg_resp::to_wxid() const {
  // @@protoc_insertion_point(field_get:new_send_app_msg_resp.to_wxid)
  return to_wxid_.GetNoArena();
}
inline void new_send_app_msg_resp::set_to_wxid(const ::std::string& value) {
  set_has_to_wxid();
  to_wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:new_send_app_msg_resp.to_wxid)
}
#if LANG_CXX11
inline void new_send_app_msg_resp::set_to_wxid(::std::string&& value) {
  set_has_to_wxid();
  to_wxid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:new_send_app_msg_resp.to_wxid)
}
#endif
inline void new_send_app_msg_resp::set_to_wxid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_to_wxid();
  to_wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:new_send_app_msg_resp.to_wxid)
}
inline void new_send_app_msg_resp::set_to_wxid(const char* value, size_t size) {
  set_has_to_wxid();
  to_wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:new_send_app_msg_resp.to_wxid)
}
inline ::std::string* new_send_app_msg_resp::mutable_to_wxid() {
  set_has_to_wxid();
  // @@protoc_insertion_point(field_mutable:new_send_app_msg_resp.to_wxid)
  return to_wxid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* new_send_app_msg_resp::release_to_wxid() {
  // @@protoc_insertion_point(field_release:new_send_app_msg_resp.to_wxid)
  clear_has_to_wxid();
  return to_wxid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void new_send_app_msg_resp::set_allocated_to_wxid(::std::string* to_wxid) {
  if (to_wxid != NULL) {
    set_has_to_wxid();
  } else {
    clear_has_to_wxid();
  }
  to_wxid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_wxid);
  // @@protoc_insertion_point(field_set_allocated:new_send_app_msg_resp.to_wxid)
}

// optional int32 sync_key_id = 5;
inline bool new_send_app_msg_resp::has_sync_key_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void new_send_app_msg_resp::set_has_sync_key_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void new_send_app_msg_resp::clear_has_sync_key_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void new_send_app_msg_resp::clear_sync_key_id() {
  sync_key_id_ = 0;
  clear_has_sync_key_id();
}
inline ::google::protobuf::int32 new_send_app_msg_resp::sync_key_id() const {
  // @@protoc_insertion_point(field_get:new_send_app_msg_resp.sync_key_id)
  return sync_key_id_;
}
inline void new_send_app_msg_resp::set_sync_key_id(::google::protobuf::int32 value) {
  set_has_sync_key_id();
  sync_key_id_ = value;
  // @@protoc_insertion_point(field_set:new_send_app_msg_resp.sync_key_id)
}

// optional string client_id = 6;
inline bool new_send_app_msg_resp::has_client_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void new_send_app_msg_resp::set_has_client_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void new_send_app_msg_resp::clear_has_client_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void new_send_app_msg_resp::clear_client_id() {
  client_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_client_id();
}
inline const ::std::string& new_send_app_msg_resp::client_id() const {
  // @@protoc_insertion_point(field_get:new_send_app_msg_resp.client_id)
  return client_id_.GetNoArena();
}
inline void new_send_app_msg_resp::set_client_id(const ::std::string& value) {
  set_has_client_id();
  client_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:new_send_app_msg_resp.client_id)
}
#if LANG_CXX11
inline void new_send_app_msg_resp::set_client_id(::std::string&& value) {
  set_has_client_id();
  client_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:new_send_app_msg_resp.client_id)
}
#endif
inline void new_send_app_msg_resp::set_client_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_client_id();
  client_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:new_send_app_msg_resp.client_id)
}
inline void new_send_app_msg_resp::set_client_id(const char* value, size_t size) {
  set_has_client_id();
  client_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:new_send_app_msg_resp.client_id)
}
inline ::std::string* new_send_app_msg_resp::mutable_client_id() {
  set_has_client_id();
  // @@protoc_insertion_point(field_mutable:new_send_app_msg_resp.client_id)
  return client_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* new_send_app_msg_resp::release_client_id() {
  // @@protoc_insertion_point(field_release:new_send_app_msg_resp.client_id)
  clear_has_client_id();
  return client_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void new_send_app_msg_resp::set_allocated_client_id(::std::string* client_id) {
  if (client_id != NULL) {
    set_has_client_id();
  } else {
    clear_has_client_id();
  }
  client_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_id);
  // @@protoc_insertion_point(field_set_allocated:new_send_app_msg_resp.client_id)
}

// optional int32 utc = 7;
inline bool new_send_app_msg_resp::has_utc() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void new_send_app_msg_resp::set_has_utc() {
  _has_bits_[0] |= 0x00000020u;
}
inline void new_send_app_msg_resp::clear_has_utc() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void new_send_app_msg_resp::clear_utc() {
  utc_ = 0;
  clear_has_utc();
}
inline ::google::protobuf::int32 new_send_app_msg_resp::utc() const {
  // @@protoc_insertion_point(field_get:new_send_app_msg_resp.utc)
  return utc_;
}
inline void new_send_app_msg_resp::set_utc(::google::protobuf::int32 value) {
  set_has_utc();
  utc_ = value;
  // @@protoc_insertion_point(field_set:new_send_app_msg_resp.utc)
}

// optional int32 type = 8;
inline bool new_send_app_msg_resp::has_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void new_send_app_msg_resp::set_has_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void new_send_app_msg_resp::clear_has_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void new_send_app_msg_resp::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 new_send_app_msg_resp::type() const {
  // @@protoc_insertion_point(field_get:new_send_app_msg_resp.type)
  return type_;
}
inline void new_send_app_msg_resp::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:new_send_app_msg_resp.type)
}

// optional int64 svrid = 9;
inline bool new_send_app_msg_resp::has_svrid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void new_send_app_msg_resp::set_has_svrid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void new_send_app_msg_resp::clear_has_svrid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void new_send_app_msg_resp::clear_svrid() {
  svrid_ = GOOGLE_LONGLONG(0);
  clear_has_svrid();
}
inline ::google::protobuf::int64 new_send_app_msg_resp::svrid() const {
  // @@protoc_insertion_point(field_get:new_send_app_msg_resp.svrid)
  return svrid_;
}
inline void new_send_app_msg_resp::set_svrid(::google::protobuf::int64 value) {
  set_has_svrid();
  svrid_ = value;
  // @@protoc_insertion_point(field_set:new_send_app_msg_resp.svrid)
}

// -------------------------------------------------------------------

// verify_user_req_user_info

// optional string wxid = 1;
inline bool verify_user_req_user_info::has_wxid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void verify_user_req_user_info::set_has_wxid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void verify_user_req_user_info::clear_has_wxid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void verify_user_req_user_info::clear_wxid() {
  wxid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_wxid();
}
inline const ::std::string& verify_user_req_user_info::wxid() const {
  // @@protoc_insertion_point(field_get:verify_user_req.user_info.wxid)
  return wxid_.GetNoArena();
}
inline void verify_user_req_user_info::set_wxid(const ::std::string& value) {
  set_has_wxid();
  wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:verify_user_req.user_info.wxid)
}
#if LANG_CXX11
inline void verify_user_req_user_info::set_wxid(::std::string&& value) {
  set_has_wxid();
  wxid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:verify_user_req.user_info.wxid)
}
#endif
inline void verify_user_req_user_info::set_wxid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_wxid();
  wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:verify_user_req.user_info.wxid)
}
inline void verify_user_req_user_info::set_wxid(const char* value, size_t size) {
  set_has_wxid();
  wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:verify_user_req.user_info.wxid)
}
inline ::std::string* verify_user_req_user_info::mutable_wxid() {
  set_has_wxid();
  // @@protoc_insertion_point(field_mutable:verify_user_req.user_info.wxid)
  return wxid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* verify_user_req_user_info::release_wxid() {
  // @@protoc_insertion_point(field_release:verify_user_req.user_info.wxid)
  clear_has_wxid();
  return wxid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void verify_user_req_user_info::set_allocated_wxid(::std::string* wxid) {
  if (wxid != NULL) {
    set_has_wxid();
  } else {
    clear_has_wxid();
  }
  wxid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wxid);
  // @@protoc_insertion_point(field_set_allocated:verify_user_req.user_info.wxid)
}

// optional string ticket = 2;
inline bool verify_user_req_user_info::has_ticket() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void verify_user_req_user_info::set_has_ticket() {
  _has_bits_[0] |= 0x00000002u;
}
inline void verify_user_req_user_info::clear_has_ticket() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void verify_user_req_user_info::clear_ticket() {
  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ticket();
}
inline const ::std::string& verify_user_req_user_info::ticket() const {
  // @@protoc_insertion_point(field_get:verify_user_req.user_info.ticket)
  return ticket_.GetNoArena();
}
inline void verify_user_req_user_info::set_ticket(const ::std::string& value) {
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:verify_user_req.user_info.ticket)
}
#if LANG_CXX11
inline void verify_user_req_user_info::set_ticket(::std::string&& value) {
  set_has_ticket();
  ticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:verify_user_req.user_info.ticket)
}
#endif
inline void verify_user_req_user_info::set_ticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:verify_user_req.user_info.ticket)
}
inline void verify_user_req_user_info::set_ticket(const char* value, size_t size) {
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:verify_user_req.user_info.ticket)
}
inline ::std::string* verify_user_req_user_info::mutable_ticket() {
  set_has_ticket();
  // @@protoc_insertion_point(field_mutable:verify_user_req.user_info.ticket)
  return ticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* verify_user_req_user_info::release_ticket() {
  // @@protoc_insertion_point(field_release:verify_user_req.user_info.ticket)
  clear_has_ticket();
  return ticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void verify_user_req_user_info::set_allocated_ticket(::std::string* ticket) {
  if (ticket != NULL) {
    set_has_ticket();
  } else {
    clear_has_ticket();
  }
  ticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ticket);
  // @@protoc_insertion_point(field_set_allocated:verify_user_req.user_info.ticket)
}

// optional string anti_ticket = 3;
inline bool verify_user_req_user_info::has_anti_ticket() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void verify_user_req_user_info::set_has_anti_ticket() {
  _has_bits_[0] |= 0x00000004u;
}
inline void verify_user_req_user_info::clear_has_anti_ticket() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void verify_user_req_user_info::clear_anti_ticket() {
  anti_ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_anti_ticket();
}
inline const ::std::string& verify_user_req_user_info::anti_ticket() const {
  // @@protoc_insertion_point(field_get:verify_user_req.user_info.anti_ticket)
  return anti_ticket_.GetNoArena();
}
inline void verify_user_req_user_info::set_anti_ticket(const ::std::string& value) {
  set_has_anti_ticket();
  anti_ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:verify_user_req.user_info.anti_ticket)
}
#if LANG_CXX11
inline void verify_user_req_user_info::set_anti_ticket(::std::string&& value) {
  set_has_anti_ticket();
  anti_ticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:verify_user_req.user_info.anti_ticket)
}
#endif
inline void verify_user_req_user_info::set_anti_ticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_anti_ticket();
  anti_ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:verify_user_req.user_info.anti_ticket)
}
inline void verify_user_req_user_info::set_anti_ticket(const char* value, size_t size) {
  set_has_anti_ticket();
  anti_ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:verify_user_req.user_info.anti_ticket)
}
inline ::std::string* verify_user_req_user_info::mutable_anti_ticket() {
  set_has_anti_ticket();
  // @@protoc_insertion_point(field_mutable:verify_user_req.user_info.anti_ticket)
  return anti_ticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* verify_user_req_user_info::release_anti_ticket() {
  // @@protoc_insertion_point(field_release:verify_user_req.user_info.anti_ticket)
  clear_has_anti_ticket();
  return anti_ticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void verify_user_req_user_info::set_allocated_anti_ticket(::std::string* anti_ticket) {
  if (anti_ticket != NULL) {
    set_has_anti_ticket();
  } else {
    clear_has_anti_ticket();
  }
  anti_ticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), anti_ticket);
  // @@protoc_insertion_point(field_set_allocated:verify_user_req.user_info.anti_ticket)
}

// optional int32 tag4 = 4;
inline bool verify_user_req_user_info::has_tag4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void verify_user_req_user_info::set_has_tag4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void verify_user_req_user_info::clear_has_tag4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void verify_user_req_user_info::clear_tag4() {
  tag4_ = 0;
  clear_has_tag4();
}
inline ::google::protobuf::int32 verify_user_req_user_info::tag4() const {
  // @@protoc_insertion_point(field_get:verify_user_req.user_info.tag4)
  return tag4_;
}
inline void verify_user_req_user_info::set_tag4(::google::protobuf::int32 value) {
  set_has_tag4();
  tag4_ = value;
  // @@protoc_insertion_point(field_set:verify_user_req.user_info.tag4)
}

// optional int32 tag8 = 8;
inline bool verify_user_req_user_info::has_tag8() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void verify_user_req_user_info::set_has_tag8() {
  _has_bits_[0] |= 0x00000010u;
}
inline void verify_user_req_user_info::clear_has_tag8() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void verify_user_req_user_info::clear_tag8() {
  tag8_ = 0;
  clear_has_tag8();
}
inline ::google::protobuf::int32 verify_user_req_user_info::tag8() const {
  // @@protoc_insertion_point(field_get:verify_user_req.user_info.tag8)
  return tag8_;
}
inline void verify_user_req_user_info::set_tag8(::google::protobuf::int32 value) {
  set_has_tag8();
  tag8_ = value;
  // @@protoc_insertion_point(field_set:verify_user_req.user_info.tag8)
}

// -------------------------------------------------------------------

// verify_user_req

// optional .LoginInfo login = 1;
inline bool verify_user_req::has_login() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void verify_user_req::set_has_login() {
  _has_bits_[0] |= 0x00000004u;
}
inline void verify_user_req::clear_has_login() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void verify_user_req::clear_login() {
  if (login_ != NULL) login_->::LoginInfo::Clear();
  clear_has_login();
}
inline const ::LoginInfo& verify_user_req::login() const {
  // @@protoc_insertion_point(field_get:verify_user_req.login)
  return login_ != NULL ? *login_
                         : *::LoginInfo::internal_default_instance();
}
inline ::LoginInfo* verify_user_req::mutable_login() {
  set_has_login();
  if (login_ == NULL) {
    login_ = new ::LoginInfo;
  }
  // @@protoc_insertion_point(field_mutable:verify_user_req.login)
  return login_;
}
inline ::LoginInfo* verify_user_req::release_login() {
  // @@protoc_insertion_point(field_release:verify_user_req.login)
  clear_has_login();
  ::LoginInfo* temp = login_;
  login_ = NULL;
  return temp;
}
inline void verify_user_req::set_allocated_login(::LoginInfo* login) {
  delete login_;
  login_ = login;
  if (login) {
    set_has_login();
  } else {
    clear_has_login();
  }
  // @@protoc_insertion_point(field_set_allocated:verify_user_req.login)
}

// optional int32 op_code = 2;
inline bool verify_user_req::has_op_code() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void verify_user_req::set_has_op_code() {
  _has_bits_[0] |= 0x00000020u;
}
inline void verify_user_req::clear_has_op_code() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void verify_user_req::clear_op_code() {
  op_code_ = 0;
  clear_has_op_code();
}
inline ::google::protobuf::int32 verify_user_req::op_code() const {
  // @@protoc_insertion_point(field_get:verify_user_req.op_code)
  return op_code_;
}
inline void verify_user_req::set_op_code(::google::protobuf::int32 value) {
  set_has_op_code();
  op_code_ = value;
  // @@protoc_insertion_point(field_set:verify_user_req.op_code)
}

// optional int32 tag3 = 3;
inline bool verify_user_req::has_tag3() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void verify_user_req::set_has_tag3() {
  _has_bits_[0] |= 0x00000040u;
}
inline void verify_user_req::clear_has_tag3() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void verify_user_req::clear_tag3() {
  tag3_ = 0;
  clear_has_tag3();
}
inline ::google::protobuf::int32 verify_user_req::tag3() const {
  // @@protoc_insertion_point(field_get:verify_user_req.tag3)
  return tag3_;
}
inline void verify_user_req::set_tag3(::google::protobuf::int32 value) {
  set_has_tag3();
  tag3_ = value;
  // @@protoc_insertion_point(field_set:verify_user_req.tag3)
}

// optional .verify_user_req.user_info user = 4;
inline bool verify_user_req::has_user() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void verify_user_req::set_has_user() {
  _has_bits_[0] |= 0x00000008u;
}
inline void verify_user_req::clear_has_user() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void verify_user_req::clear_user() {
  if (user_ != NULL) user_->::verify_user_req_user_info::Clear();
  clear_has_user();
}
inline const ::verify_user_req_user_info& verify_user_req::user() const {
  // @@protoc_insertion_point(field_get:verify_user_req.user)
  return user_ != NULL ? *user_
                         : *::verify_user_req_user_info::internal_default_instance();
}
inline ::verify_user_req_user_info* verify_user_req::mutable_user() {
  set_has_user();
  if (user_ == NULL) {
    user_ = new ::verify_user_req_user_info;
  }
  // @@protoc_insertion_point(field_mutable:verify_user_req.user)
  return user_;
}
inline ::verify_user_req_user_info* verify_user_req::release_user() {
  // @@protoc_insertion_point(field_release:verify_user_req.user)
  clear_has_user();
  ::verify_user_req_user_info* temp = user_;
  user_ = NULL;
  return temp;
}
inline void verify_user_req::set_allocated_user(::verify_user_req_user_info* user) {
  delete user_;
  user_ = user;
  if (user) {
    set_has_user();
  } else {
    clear_has_user();
  }
  // @@protoc_insertion_point(field_set_allocated:verify_user_req.user)
}

// optional string content = 5;
inline bool verify_user_req::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void verify_user_req::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void verify_user_req::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void verify_user_req::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& verify_user_req::content() const {
  // @@protoc_insertion_point(field_get:verify_user_req.content)
  return content_.GetNoArena();
}
inline void verify_user_req::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:verify_user_req.content)
}
#if LANG_CXX11
inline void verify_user_req::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:verify_user_req.content)
}
#endif
inline void verify_user_req::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:verify_user_req.content)
}
inline void verify_user_req::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:verify_user_req.content)
}
inline ::std::string* verify_user_req::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:verify_user_req.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* verify_user_req::release_content() {
  // @@protoc_insertion_point(field_release:verify_user_req.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void verify_user_req::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:verify_user_req.content)
}

// optional int32 tag6 = 6;
inline bool verify_user_req::has_tag6() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void verify_user_req::set_has_tag6() {
  _has_bits_[0] |= 0x00000080u;
}
inline void verify_user_req::clear_has_tag6() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void verify_user_req::clear_tag6() {
  tag6_ = 0;
  clear_has_tag6();
}
inline ::google::protobuf::int32 verify_user_req::tag6() const {
  // @@protoc_insertion_point(field_get:verify_user_req.tag6)
  return tag6_;
}
inline void verify_user_req::set_tag6(::google::protobuf::int32 value) {
  set_has_tag6();
  tag6_ = value;
  // @@protoc_insertion_point(field_set:verify_user_req.tag6)
}

// optional string scene = 7;
inline bool verify_user_req::has_scene() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void verify_user_req::set_has_scene() {
  _has_bits_[0] |= 0x00000002u;
}
inline void verify_user_req::clear_has_scene() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void verify_user_req::clear_scene() {
  scene_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_scene();
}
inline const ::std::string& verify_user_req::scene() const {
  // @@protoc_insertion_point(field_get:verify_user_req.scene)
  return scene_.GetNoArena();
}
inline void verify_user_req::set_scene(const ::std::string& value) {
  set_has_scene();
  scene_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:verify_user_req.scene)
}
#if LANG_CXX11
inline void verify_user_req::set_scene(::std::string&& value) {
  set_has_scene();
  scene_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:verify_user_req.scene)
}
#endif
inline void verify_user_req::set_scene(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_scene();
  scene_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:verify_user_req.scene)
}
inline void verify_user_req::set_scene(const char* value, size_t size) {
  set_has_scene();
  scene_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:verify_user_req.scene)
}
inline ::std::string* verify_user_req::mutable_scene() {
  set_has_scene();
  // @@protoc_insertion_point(field_mutable:verify_user_req.scene)
  return scene_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* verify_user_req::release_scene() {
  // @@protoc_insertion_point(field_release:verify_user_req.scene)
  clear_has_scene();
  return scene_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void verify_user_req::set_allocated_scene(::std::string* scene) {
  if (scene != NULL) {
    set_has_scene();
  } else {
    clear_has_scene();
  }
  scene_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scene);
  // @@protoc_insertion_point(field_set_allocated:verify_user_req.scene)
}

// optional .mmStr device_info = 8;
inline bool verify_user_req::has_device_info() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void verify_user_req::set_has_device_info() {
  _has_bits_[0] |= 0x00000010u;
}
inline void verify_user_req::clear_has_device_info() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void verify_user_req::clear_device_info() {
  if (device_info_ != NULL) device_info_->::mmStr::Clear();
  clear_has_device_info();
}
inline const ::mmStr& verify_user_req::device_info() const {
  // @@protoc_insertion_point(field_get:verify_user_req.device_info)
  return device_info_ != NULL ? *device_info_
                         : *::mmStr::internal_default_instance();
}
inline ::mmStr* verify_user_req::mutable_device_info() {
  set_has_device_info();
  if (device_info_ == NULL) {
    device_info_ = new ::mmStr;
  }
  // @@protoc_insertion_point(field_mutable:verify_user_req.device_info)
  return device_info_;
}
inline ::mmStr* verify_user_req::release_device_info() {
  // @@protoc_insertion_point(field_release:verify_user_req.device_info)
  clear_has_device_info();
  ::mmStr* temp = device_info_;
  device_info_ = NULL;
  return temp;
}
inline void verify_user_req::set_allocated_device_info(::mmStr* device_info) {
  delete device_info_;
  device_info_ = device_info;
  if (device_info) {
    set_has_device_info();
  } else {
    clear_has_device_info();
  }
  // @@protoc_insertion_point(field_set_allocated:verify_user_req.device_info)
}

// -------------------------------------------------------------------

// verify_user_resp

// optional .mmRes res = 1;
inline bool verify_user_resp::has_res() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void verify_user_resp::set_has_res() {
  _has_bits_[0] |= 0x00000002u;
}
inline void verify_user_resp::clear_has_res() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void verify_user_resp::clear_res() {
  if (res_ != NULL) res_->::mmRes::Clear();
  clear_has_res();
}
inline const ::mmRes& verify_user_resp::res() const {
  // @@protoc_insertion_point(field_get:verify_user_resp.res)
  return res_ != NULL ? *res_
                         : *::mmRes::internal_default_instance();
}
inline ::mmRes* verify_user_resp::mutable_res() {
  set_has_res();
  if (res_ == NULL) {
    res_ = new ::mmRes;
  }
  // @@protoc_insertion_point(field_mutable:verify_user_resp.res)
  return res_;
}
inline ::mmRes* verify_user_resp::release_res() {
  // @@protoc_insertion_point(field_release:verify_user_resp.res)
  clear_has_res();
  ::mmRes* temp = res_;
  res_ = NULL;
  return temp;
}
inline void verify_user_resp::set_allocated_res(::mmRes* res) {
  delete res_;
  res_ = res;
  if (res) {
    set_has_res();
  } else {
    clear_has_res();
  }
  // @@protoc_insertion_point(field_set_allocated:verify_user_resp.res)
}

// optional string wxid = 2;
inline bool verify_user_resp::has_wxid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void verify_user_resp::set_has_wxid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void verify_user_resp::clear_has_wxid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void verify_user_resp::clear_wxid() {
  wxid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_wxid();
}
inline const ::std::string& verify_user_resp::wxid() const {
  // @@protoc_insertion_point(field_get:verify_user_resp.wxid)
  return wxid_.GetNoArena();
}
inline void verify_user_resp::set_wxid(const ::std::string& value) {
  set_has_wxid();
  wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:verify_user_resp.wxid)
}
#if LANG_CXX11
inline void verify_user_resp::set_wxid(::std::string&& value) {
  set_has_wxid();
  wxid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:verify_user_resp.wxid)
}
#endif
inline void verify_user_resp::set_wxid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_wxid();
  wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:verify_user_resp.wxid)
}
inline void verify_user_resp::set_wxid(const char* value, size_t size) {
  set_has_wxid();
  wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:verify_user_resp.wxid)
}
inline ::std::string* verify_user_resp::mutable_wxid() {
  set_has_wxid();
  // @@protoc_insertion_point(field_mutable:verify_user_resp.wxid)
  return wxid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* verify_user_resp::release_wxid() {
  // @@protoc_insertion_point(field_release:verify_user_resp.wxid)
  clear_has_wxid();
  return wxid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void verify_user_resp::set_allocated_wxid(::std::string* wxid) {
  if (wxid != NULL) {
    set_has_wxid();
  } else {
    clear_has_wxid();
  }
  wxid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wxid);
  // @@protoc_insertion_point(field_set_allocated:verify_user_resp.wxid)
}

// -------------------------------------------------------------------

// receive_wxhb_req

// optional .LoginInfo login = 1;
inline bool receive_wxhb_req::has_login() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void receive_wxhb_req::set_has_login() {
  _has_bits_[0] |= 0x00000001u;
}
inline void receive_wxhb_req::clear_has_login() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void receive_wxhb_req::clear_login() {
  if (login_ != NULL) login_->::LoginInfo::Clear();
  clear_has_login();
}
inline const ::LoginInfo& receive_wxhb_req::login() const {
  // @@protoc_insertion_point(field_get:receive_wxhb_req.login)
  return login_ != NULL ? *login_
                         : *::LoginInfo::internal_default_instance();
}
inline ::LoginInfo* receive_wxhb_req::mutable_login() {
  set_has_login();
  if (login_ == NULL) {
    login_ = new ::LoginInfo;
  }
  // @@protoc_insertion_point(field_mutable:receive_wxhb_req.login)
  return login_;
}
inline ::LoginInfo* receive_wxhb_req::release_login() {
  // @@protoc_insertion_point(field_release:receive_wxhb_req.login)
  clear_has_login();
  ::LoginInfo* temp = login_;
  login_ = NULL;
  return temp;
}
inline void receive_wxhb_req::set_allocated_login(::LoginInfo* login) {
  delete login_;
  login_ = login;
  if (login) {
    set_has_login();
  } else {
    clear_has_login();
  }
  // @@protoc_insertion_point(field_set_allocated:receive_wxhb_req.login)
}

// optional int32 cmd = 2;
inline bool receive_wxhb_req::has_cmd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void receive_wxhb_req::set_has_cmd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void receive_wxhb_req::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void receive_wxhb_req::clear_cmd() {
  cmd_ = 0;
  clear_has_cmd();
}
inline ::google::protobuf::int32 receive_wxhb_req::cmd() const {
  // @@protoc_insertion_point(field_get:receive_wxhb_req.cmd)
  return cmd_;
}
inline void receive_wxhb_req::set_cmd(::google::protobuf::int32 value) {
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:receive_wxhb_req.cmd)
}

// optional int32 tag3 = 3;
inline bool receive_wxhb_req::has_tag3() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void receive_wxhb_req::set_has_tag3() {
  _has_bits_[0] |= 0x00000008u;
}
inline void receive_wxhb_req::clear_has_tag3() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void receive_wxhb_req::clear_tag3() {
  tag3_ = 0;
  clear_has_tag3();
}
inline ::google::protobuf::int32 receive_wxhb_req::tag3() const {
  // @@protoc_insertion_point(field_get:receive_wxhb_req.tag3)
  return tag3_;
}
inline void receive_wxhb_req::set_tag3(::google::protobuf::int32 value) {
  set_has_tag3();
  tag3_ = value;
  // @@protoc_insertion_point(field_set:receive_wxhb_req.tag3)
}

// optional .mmStr info = 4;
inline bool receive_wxhb_req::has_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void receive_wxhb_req::set_has_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void receive_wxhb_req::clear_has_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void receive_wxhb_req::clear_info() {
  if (info_ != NULL) info_->::mmStr::Clear();
  clear_has_info();
}
inline const ::mmStr& receive_wxhb_req::info() const {
  // @@protoc_insertion_point(field_get:receive_wxhb_req.info)
  return info_ != NULL ? *info_
                         : *::mmStr::internal_default_instance();
}
inline ::mmStr* receive_wxhb_req::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::mmStr;
  }
  // @@protoc_insertion_point(field_mutable:receive_wxhb_req.info)
  return info_;
}
inline ::mmStr* receive_wxhb_req::release_info() {
  // @@protoc_insertion_point(field_release:receive_wxhb_req.info)
  clear_has_info();
  ::mmStr* temp = info_;
  info_ = NULL;
  return temp;
}
inline void receive_wxhb_req::set_allocated_info(::mmStr* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:receive_wxhb_req.info)
}

// -------------------------------------------------------------------

// receive_wxhb_resp_TAG1_TAG1

// optional string tag1 = 1;
inline bool receive_wxhb_resp_TAG1_TAG1::has_tag1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void receive_wxhb_resp_TAG1_TAG1::set_has_tag1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void receive_wxhb_resp_TAG1_TAG1::clear_has_tag1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void receive_wxhb_resp_TAG1_TAG1::clear_tag1() {
  tag1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag1();
}
inline const ::std::string& receive_wxhb_resp_TAG1_TAG1::tag1() const {
  // @@protoc_insertion_point(field_get:receive_wxhb_resp.TAG1.TAG1.tag1)
  return tag1_.GetNoArena();
}
inline void receive_wxhb_resp_TAG1_TAG1::set_tag1(const ::std::string& value) {
  set_has_tag1();
  tag1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:receive_wxhb_resp.TAG1.TAG1.tag1)
}
#if LANG_CXX11
inline void receive_wxhb_resp_TAG1_TAG1::set_tag1(::std::string&& value) {
  set_has_tag1();
  tag1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:receive_wxhb_resp.TAG1.TAG1.tag1)
}
#endif
inline void receive_wxhb_resp_TAG1_TAG1::set_tag1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag1();
  tag1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:receive_wxhb_resp.TAG1.TAG1.tag1)
}
inline void receive_wxhb_resp_TAG1_TAG1::set_tag1(const char* value, size_t size) {
  set_has_tag1();
  tag1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:receive_wxhb_resp.TAG1.TAG1.tag1)
}
inline ::std::string* receive_wxhb_resp_TAG1_TAG1::mutable_tag1() {
  set_has_tag1();
  // @@protoc_insertion_point(field_mutable:receive_wxhb_resp.TAG1.TAG1.tag1)
  return tag1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* receive_wxhb_resp_TAG1_TAG1::release_tag1() {
  // @@protoc_insertion_point(field_release:receive_wxhb_resp.TAG1.TAG1.tag1)
  clear_has_tag1();
  return tag1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void receive_wxhb_resp_TAG1_TAG1::set_allocated_tag1(::std::string* tag1) {
  if (tag1 != NULL) {
    set_has_tag1();
  } else {
    clear_has_tag1();
  }
  tag1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag1);
  // @@protoc_insertion_point(field_set_allocated:receive_wxhb_resp.TAG1.TAG1.tag1)
}

// -------------------------------------------------------------------

// receive_wxhb_resp_TAG1

// optional int32 tag1 = 1;
inline bool receive_wxhb_resp_TAG1::has_tag1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void receive_wxhb_resp_TAG1::set_has_tag1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void receive_wxhb_resp_TAG1::clear_has_tag1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void receive_wxhb_resp_TAG1::clear_tag1() {
  tag1_ = 0;
  clear_has_tag1();
}
inline ::google::protobuf::int32 receive_wxhb_resp_TAG1::tag1() const {
  // @@protoc_insertion_point(field_get:receive_wxhb_resp.TAG1.tag1)
  return tag1_;
}
inline void receive_wxhb_resp_TAG1::set_tag1(::google::protobuf::int32 value) {
  set_has_tag1();
  tag1_ = value;
  // @@protoc_insertion_point(field_set:receive_wxhb_resp.TAG1.tag1)
}

// -------------------------------------------------------------------

// receive_wxhb_resp

// optional .receive_wxhb_resp.TAG1 tag1 = 1;
inline bool receive_wxhb_resp::has_tag1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void receive_wxhb_resp::set_has_tag1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void receive_wxhb_resp::clear_has_tag1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void receive_wxhb_resp::clear_tag1() {
  if (tag1_ != NULL) tag1_->::receive_wxhb_resp_TAG1::Clear();
  clear_has_tag1();
}
inline const ::receive_wxhb_resp_TAG1& receive_wxhb_resp::tag1() const {
  // @@protoc_insertion_point(field_get:receive_wxhb_resp.tag1)
  return tag1_ != NULL ? *tag1_
                         : *::receive_wxhb_resp_TAG1::internal_default_instance();
}
inline ::receive_wxhb_resp_TAG1* receive_wxhb_resp::mutable_tag1() {
  set_has_tag1();
  if (tag1_ == NULL) {
    tag1_ = new ::receive_wxhb_resp_TAG1;
  }
  // @@protoc_insertion_point(field_mutable:receive_wxhb_resp.tag1)
  return tag1_;
}
inline ::receive_wxhb_resp_TAG1* receive_wxhb_resp::release_tag1() {
  // @@protoc_insertion_point(field_release:receive_wxhb_resp.tag1)
  clear_has_tag1();
  ::receive_wxhb_resp_TAG1* temp = tag1_;
  tag1_ = NULL;
  return temp;
}
inline void receive_wxhb_resp::set_allocated_tag1(::receive_wxhb_resp_TAG1* tag1) {
  delete tag1_;
  tag1_ = tag1;
  if (tag1) {
    set_has_tag1();
  } else {
    clear_has_tag1();
  }
  // @@protoc_insertion_point(field_set_allocated:receive_wxhb_resp.tag1)
}

// optional .mmStr hb_info = 2;
inline bool receive_wxhb_resp::has_hb_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void receive_wxhb_resp::set_has_hb_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void receive_wxhb_resp::clear_has_hb_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void receive_wxhb_resp::clear_hb_info() {
  if (hb_info_ != NULL) hb_info_->::mmStr::Clear();
  clear_has_hb_info();
}
inline const ::mmStr& receive_wxhb_resp::hb_info() const {
  // @@protoc_insertion_point(field_get:receive_wxhb_resp.hb_info)
  return hb_info_ != NULL ? *hb_info_
                         : *::mmStr::internal_default_instance();
}
inline ::mmStr* receive_wxhb_resp::mutable_hb_info() {
  set_has_hb_info();
  if (hb_info_ == NULL) {
    hb_info_ = new ::mmStr;
  }
  // @@protoc_insertion_point(field_mutable:receive_wxhb_resp.hb_info)
  return hb_info_;
}
inline ::mmStr* receive_wxhb_resp::release_hb_info() {
  // @@protoc_insertion_point(field_release:receive_wxhb_resp.hb_info)
  clear_has_hb_info();
  ::mmStr* temp = hb_info_;
  hb_info_ = NULL;
  return temp;
}
inline void receive_wxhb_resp::set_allocated_hb_info(::mmStr* hb_info) {
  delete hb_info_;
  hb_info_ = hb_info;
  if (hb_info) {
    set_has_hb_info();
  } else {
    clear_has_hb_info();
  }
  // @@protoc_insertion_point(field_set_allocated:receive_wxhb_resp.hb_info)
}

// optional int32 cmd = 5;
inline bool receive_wxhb_resp::has_cmd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void receive_wxhb_resp::set_has_cmd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void receive_wxhb_resp::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void receive_wxhb_resp::clear_cmd() {
  cmd_ = 0;
  clear_has_cmd();
}
inline ::google::protobuf::int32 receive_wxhb_resp::cmd() const {
  // @@protoc_insertion_point(field_get:receive_wxhb_resp.cmd)
  return cmd_;
}
inline void receive_wxhb_resp::set_cmd(::google::protobuf::int32 value) {
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:receive_wxhb_resp.cmd)
}

// optional int32 ret_code = 6;
inline bool receive_wxhb_resp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void receive_wxhb_resp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000010u;
}
inline void receive_wxhb_resp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void receive_wxhb_resp::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::google::protobuf::int32 receive_wxhb_resp::ret_code() const {
  // @@protoc_insertion_point(field_get:receive_wxhb_resp.ret_code)
  return ret_code_;
}
inline void receive_wxhb_resp::set_ret_code(::google::protobuf::int32 value) {
  set_has_ret_code();
  ret_code_ = value;
  // @@protoc_insertion_point(field_set:receive_wxhb_resp.ret_code)
}

// optional string ret_msg = 7;
inline bool receive_wxhb_resp::has_ret_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void receive_wxhb_resp::set_has_ret_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void receive_wxhb_resp::clear_has_ret_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void receive_wxhb_resp::clear_ret_msg() {
  ret_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ret_msg();
}
inline const ::std::string& receive_wxhb_resp::ret_msg() const {
  // @@protoc_insertion_point(field_get:receive_wxhb_resp.ret_msg)
  return ret_msg_.GetNoArena();
}
inline void receive_wxhb_resp::set_ret_msg(const ::std::string& value) {
  set_has_ret_msg();
  ret_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:receive_wxhb_resp.ret_msg)
}
#if LANG_CXX11
inline void receive_wxhb_resp::set_ret_msg(::std::string&& value) {
  set_has_ret_msg();
  ret_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:receive_wxhb_resp.ret_msg)
}
#endif
inline void receive_wxhb_resp::set_ret_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ret_msg();
  ret_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:receive_wxhb_resp.ret_msg)
}
inline void receive_wxhb_resp::set_ret_msg(const char* value, size_t size) {
  set_has_ret_msg();
  ret_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:receive_wxhb_resp.ret_msg)
}
inline ::std::string* receive_wxhb_resp::mutable_ret_msg() {
  set_has_ret_msg();
  // @@protoc_insertion_point(field_mutable:receive_wxhb_resp.ret_msg)
  return ret_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* receive_wxhb_resp::release_ret_msg() {
  // @@protoc_insertion_point(field_release:receive_wxhb_resp.ret_msg)
  clear_has_ret_msg();
  return ret_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void receive_wxhb_resp::set_allocated_ret_msg(::std::string* ret_msg) {
  if (ret_msg != NULL) {
    set_has_ret_msg();
  } else {
    clear_has_ret_msg();
  }
  ret_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ret_msg);
  // @@protoc_insertion_point(field_set_allocated:receive_wxhb_resp.ret_msg)
}

// -------------------------------------------------------------------

// open_wxhb_req

// optional .LoginInfo login = 1;
inline bool open_wxhb_req::has_login() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void open_wxhb_req::set_has_login() {
  _has_bits_[0] |= 0x00000001u;
}
inline void open_wxhb_req::clear_has_login() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void open_wxhb_req::clear_login() {
  if (login_ != NULL) login_->::LoginInfo::Clear();
  clear_has_login();
}
inline const ::LoginInfo& open_wxhb_req::login() const {
  // @@protoc_insertion_point(field_get:open_wxhb_req.login)
  return login_ != NULL ? *login_
                         : *::LoginInfo::internal_default_instance();
}
inline ::LoginInfo* open_wxhb_req::mutable_login() {
  set_has_login();
  if (login_ == NULL) {
    login_ = new ::LoginInfo;
  }
  // @@protoc_insertion_point(field_mutable:open_wxhb_req.login)
  return login_;
}
inline ::LoginInfo* open_wxhb_req::release_login() {
  // @@protoc_insertion_point(field_release:open_wxhb_req.login)
  clear_has_login();
  ::LoginInfo* temp = login_;
  login_ = NULL;
  return temp;
}
inline void open_wxhb_req::set_allocated_login(::LoginInfo* login) {
  delete login_;
  login_ = login;
  if (login) {
    set_has_login();
  } else {
    clear_has_login();
  }
  // @@protoc_insertion_point(field_set_allocated:open_wxhb_req.login)
}

// optional int32 cmd = 2;
inline bool open_wxhb_req::has_cmd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void open_wxhb_req::set_has_cmd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void open_wxhb_req::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void open_wxhb_req::clear_cmd() {
  cmd_ = 0;
  clear_has_cmd();
}
inline ::google::protobuf::int32 open_wxhb_req::cmd() const {
  // @@protoc_insertion_point(field_get:open_wxhb_req.cmd)
  return cmd_;
}
inline void open_wxhb_req::set_cmd(::google::protobuf::int32 value) {
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:open_wxhb_req.cmd)
}

// optional int32 tag3 = 3;
inline bool open_wxhb_req::has_tag3() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void open_wxhb_req::set_has_tag3() {
  _has_bits_[0] |= 0x00000008u;
}
inline void open_wxhb_req::clear_has_tag3() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void open_wxhb_req::clear_tag3() {
  tag3_ = 0;
  clear_has_tag3();
}
inline ::google::protobuf::int32 open_wxhb_req::tag3() const {
  // @@protoc_insertion_point(field_get:open_wxhb_req.tag3)
  return tag3_;
}
inline void open_wxhb_req::set_tag3(::google::protobuf::int32 value) {
  set_has_tag3();
  tag3_ = value;
  // @@protoc_insertion_point(field_set:open_wxhb_req.tag3)
}

// optional .mmStr info = 4;
inline bool open_wxhb_req::has_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void open_wxhb_req::set_has_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void open_wxhb_req::clear_has_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void open_wxhb_req::clear_info() {
  if (info_ != NULL) info_->::mmStr::Clear();
  clear_has_info();
}
inline const ::mmStr& open_wxhb_req::info() const {
  // @@protoc_insertion_point(field_get:open_wxhb_req.info)
  return info_ != NULL ? *info_
                         : *::mmStr::internal_default_instance();
}
inline ::mmStr* open_wxhb_req::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::mmStr;
  }
  // @@protoc_insertion_point(field_mutable:open_wxhb_req.info)
  return info_;
}
inline ::mmStr* open_wxhb_req::release_info() {
  // @@protoc_insertion_point(field_release:open_wxhb_req.info)
  clear_has_info();
  ::mmStr* temp = info_;
  info_ = NULL;
  return temp;
}
inline void open_wxhb_req::set_allocated_info(::mmStr* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:open_wxhb_req.info)
}

// -------------------------------------------------------------------

// open_wxhb_resp_TAG1_TAG1

// optional string tag1 = 1;
inline bool open_wxhb_resp_TAG1_TAG1::has_tag1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void open_wxhb_resp_TAG1_TAG1::set_has_tag1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void open_wxhb_resp_TAG1_TAG1::clear_has_tag1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void open_wxhb_resp_TAG1_TAG1::clear_tag1() {
  tag1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag1();
}
inline const ::std::string& open_wxhb_resp_TAG1_TAG1::tag1() const {
  // @@protoc_insertion_point(field_get:open_wxhb_resp.TAG1.TAG1.tag1)
  return tag1_.GetNoArena();
}
inline void open_wxhb_resp_TAG1_TAG1::set_tag1(const ::std::string& value) {
  set_has_tag1();
  tag1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:open_wxhb_resp.TAG1.TAG1.tag1)
}
#if LANG_CXX11
inline void open_wxhb_resp_TAG1_TAG1::set_tag1(::std::string&& value) {
  set_has_tag1();
  tag1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:open_wxhb_resp.TAG1.TAG1.tag1)
}
#endif
inline void open_wxhb_resp_TAG1_TAG1::set_tag1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag1();
  tag1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:open_wxhb_resp.TAG1.TAG1.tag1)
}
inline void open_wxhb_resp_TAG1_TAG1::set_tag1(const char* value, size_t size) {
  set_has_tag1();
  tag1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:open_wxhb_resp.TAG1.TAG1.tag1)
}
inline ::std::string* open_wxhb_resp_TAG1_TAG1::mutable_tag1() {
  set_has_tag1();
  // @@protoc_insertion_point(field_mutable:open_wxhb_resp.TAG1.TAG1.tag1)
  return tag1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* open_wxhb_resp_TAG1_TAG1::release_tag1() {
  // @@protoc_insertion_point(field_release:open_wxhb_resp.TAG1.TAG1.tag1)
  clear_has_tag1();
  return tag1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void open_wxhb_resp_TAG1_TAG1::set_allocated_tag1(::std::string* tag1) {
  if (tag1 != NULL) {
    set_has_tag1();
  } else {
    clear_has_tag1();
  }
  tag1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag1);
  // @@protoc_insertion_point(field_set_allocated:open_wxhb_resp.TAG1.TAG1.tag1)
}

// -------------------------------------------------------------------

// open_wxhb_resp_TAG1

// optional int32 tag1 = 1;
inline bool open_wxhb_resp_TAG1::has_tag1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void open_wxhb_resp_TAG1::set_has_tag1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void open_wxhb_resp_TAG1::clear_has_tag1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void open_wxhb_resp_TAG1::clear_tag1() {
  tag1_ = 0;
  clear_has_tag1();
}
inline ::google::protobuf::int32 open_wxhb_resp_TAG1::tag1() const {
  // @@protoc_insertion_point(field_get:open_wxhb_resp.TAG1.tag1)
  return tag1_;
}
inline void open_wxhb_resp_TAG1::set_tag1(::google::protobuf::int32 value) {
  set_has_tag1();
  tag1_ = value;
  // @@protoc_insertion_point(field_set:open_wxhb_resp.TAG1.tag1)
}

// -------------------------------------------------------------------

// open_wxhb_resp

// optional .open_wxhb_resp.TAG1 tag1 = 1;
inline bool open_wxhb_resp::has_tag1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void open_wxhb_resp::set_has_tag1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void open_wxhb_resp::clear_has_tag1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void open_wxhb_resp::clear_tag1() {
  if (tag1_ != NULL) tag1_->::open_wxhb_resp_TAG1::Clear();
  clear_has_tag1();
}
inline const ::open_wxhb_resp_TAG1& open_wxhb_resp::tag1() const {
  // @@protoc_insertion_point(field_get:open_wxhb_resp.tag1)
  return tag1_ != NULL ? *tag1_
                         : *::open_wxhb_resp_TAG1::internal_default_instance();
}
inline ::open_wxhb_resp_TAG1* open_wxhb_resp::mutable_tag1() {
  set_has_tag1();
  if (tag1_ == NULL) {
    tag1_ = new ::open_wxhb_resp_TAG1;
  }
  // @@protoc_insertion_point(field_mutable:open_wxhb_resp.tag1)
  return tag1_;
}
inline ::open_wxhb_resp_TAG1* open_wxhb_resp::release_tag1() {
  // @@protoc_insertion_point(field_release:open_wxhb_resp.tag1)
  clear_has_tag1();
  ::open_wxhb_resp_TAG1* temp = tag1_;
  tag1_ = NULL;
  return temp;
}
inline void open_wxhb_resp::set_allocated_tag1(::open_wxhb_resp_TAG1* tag1) {
  delete tag1_;
  tag1_ = tag1;
  if (tag1) {
    set_has_tag1();
  } else {
    clear_has_tag1();
  }
  // @@protoc_insertion_point(field_set_allocated:open_wxhb_resp.tag1)
}

// optional .mmStr res = 2;
inline bool open_wxhb_resp::has_res() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void open_wxhb_resp::set_has_res() {
  _has_bits_[0] |= 0x00000004u;
}
inline void open_wxhb_resp::clear_has_res() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void open_wxhb_resp::clear_res() {
  if (res_ != NULL) res_->::mmStr::Clear();
  clear_has_res();
}
inline const ::mmStr& open_wxhb_resp::res() const {
  // @@protoc_insertion_point(field_get:open_wxhb_resp.res)
  return res_ != NULL ? *res_
                         : *::mmStr::internal_default_instance();
}
inline ::mmStr* open_wxhb_resp::mutable_res() {
  set_has_res();
  if (res_ == NULL) {
    res_ = new ::mmStr;
  }
  // @@protoc_insertion_point(field_mutable:open_wxhb_resp.res)
  return res_;
}
inline ::mmStr* open_wxhb_resp::release_res() {
  // @@protoc_insertion_point(field_release:open_wxhb_resp.res)
  clear_has_res();
  ::mmStr* temp = res_;
  res_ = NULL;
  return temp;
}
inline void open_wxhb_resp::set_allocated_res(::mmStr* res) {
  delete res_;
  res_ = res;
  if (res) {
    set_has_res();
  } else {
    clear_has_res();
  }
  // @@protoc_insertion_point(field_set_allocated:open_wxhb_resp.res)
}

// optional int32 cmd = 5;
inline bool open_wxhb_resp::has_cmd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void open_wxhb_resp::set_has_cmd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void open_wxhb_resp::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void open_wxhb_resp::clear_cmd() {
  cmd_ = 0;
  clear_has_cmd();
}
inline ::google::protobuf::int32 open_wxhb_resp::cmd() const {
  // @@protoc_insertion_point(field_get:open_wxhb_resp.cmd)
  return cmd_;
}
inline void open_wxhb_resp::set_cmd(::google::protobuf::int32 value) {
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:open_wxhb_resp.cmd)
}

// optional int32 ret_code = 6;
inline bool open_wxhb_resp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void open_wxhb_resp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000010u;
}
inline void open_wxhb_resp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void open_wxhb_resp::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::google::protobuf::int32 open_wxhb_resp::ret_code() const {
  // @@protoc_insertion_point(field_get:open_wxhb_resp.ret_code)
  return ret_code_;
}
inline void open_wxhb_resp::set_ret_code(::google::protobuf::int32 value) {
  set_has_ret_code();
  ret_code_ = value;
  // @@protoc_insertion_point(field_set:open_wxhb_resp.ret_code)
}

// optional string ret_msg = 7;
inline bool open_wxhb_resp::has_ret_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void open_wxhb_resp::set_has_ret_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void open_wxhb_resp::clear_has_ret_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void open_wxhb_resp::clear_ret_msg() {
  ret_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ret_msg();
}
inline const ::std::string& open_wxhb_resp::ret_msg() const {
  // @@protoc_insertion_point(field_get:open_wxhb_resp.ret_msg)
  return ret_msg_.GetNoArena();
}
inline void open_wxhb_resp::set_ret_msg(const ::std::string& value) {
  set_has_ret_msg();
  ret_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:open_wxhb_resp.ret_msg)
}
#if LANG_CXX11
inline void open_wxhb_resp::set_ret_msg(::std::string&& value) {
  set_has_ret_msg();
  ret_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:open_wxhb_resp.ret_msg)
}
#endif
inline void open_wxhb_resp::set_ret_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ret_msg();
  ret_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:open_wxhb_resp.ret_msg)
}
inline void open_wxhb_resp::set_ret_msg(const char* value, size_t size) {
  set_has_ret_msg();
  ret_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:open_wxhb_resp.ret_msg)
}
inline ::std::string* open_wxhb_resp::mutable_ret_msg() {
  set_has_ret_msg();
  // @@protoc_insertion_point(field_mutable:open_wxhb_resp.ret_msg)
  return ret_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* open_wxhb_resp::release_ret_msg() {
  // @@protoc_insertion_point(field_release:open_wxhb_resp.ret_msg)
  clear_has_ret_msg();
  return ret_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void open_wxhb_resp::set_allocated_ret_msg(::std::string* ret_msg) {
  if (ret_msg != NULL) {
    set_has_ret_msg();
  } else {
    clear_has_ret_msg();
  }
  ret_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ret_msg);
  // @@protoc_insertion_point(field_set_allocated:open_wxhb_resp.ret_msg)
}

// -------------------------------------------------------------------

// qry_detail_wxhb_req

// optional .LoginInfo login = 1;
inline bool qry_detail_wxhb_req::has_login() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void qry_detail_wxhb_req::set_has_login() {
  _has_bits_[0] |= 0x00000001u;
}
inline void qry_detail_wxhb_req::clear_has_login() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void qry_detail_wxhb_req::clear_login() {
  if (login_ != NULL) login_->::LoginInfo::Clear();
  clear_has_login();
}
inline const ::LoginInfo& qry_detail_wxhb_req::login() const {
  // @@protoc_insertion_point(field_get:qry_detail_wxhb_req.login)
  return login_ != NULL ? *login_
                         : *::LoginInfo::internal_default_instance();
}
inline ::LoginInfo* qry_detail_wxhb_req::mutable_login() {
  set_has_login();
  if (login_ == NULL) {
    login_ = new ::LoginInfo;
  }
  // @@protoc_insertion_point(field_mutable:qry_detail_wxhb_req.login)
  return login_;
}
inline ::LoginInfo* qry_detail_wxhb_req::release_login() {
  // @@protoc_insertion_point(field_release:qry_detail_wxhb_req.login)
  clear_has_login();
  ::LoginInfo* temp = login_;
  login_ = NULL;
  return temp;
}
inline void qry_detail_wxhb_req::set_allocated_login(::LoginInfo* login) {
  delete login_;
  login_ = login;
  if (login) {
    set_has_login();
  } else {
    clear_has_login();
  }
  // @@protoc_insertion_point(field_set_allocated:qry_detail_wxhb_req.login)
}

// optional int32 cmd = 2;
inline bool qry_detail_wxhb_req::has_cmd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void qry_detail_wxhb_req::set_has_cmd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void qry_detail_wxhb_req::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void qry_detail_wxhb_req::clear_cmd() {
  cmd_ = 0;
  clear_has_cmd();
}
inline ::google::protobuf::int32 qry_detail_wxhb_req::cmd() const {
  // @@protoc_insertion_point(field_get:qry_detail_wxhb_req.cmd)
  return cmd_;
}
inline void qry_detail_wxhb_req::set_cmd(::google::protobuf::int32 value) {
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:qry_detail_wxhb_req.cmd)
}

// optional int32 tag3 = 3;
inline bool qry_detail_wxhb_req::has_tag3() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void qry_detail_wxhb_req::set_has_tag3() {
  _has_bits_[0] |= 0x00000008u;
}
inline void qry_detail_wxhb_req::clear_has_tag3() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void qry_detail_wxhb_req::clear_tag3() {
  tag3_ = 0;
  clear_has_tag3();
}
inline ::google::protobuf::int32 qry_detail_wxhb_req::tag3() const {
  // @@protoc_insertion_point(field_get:qry_detail_wxhb_req.tag3)
  return tag3_;
}
inline void qry_detail_wxhb_req::set_tag3(::google::protobuf::int32 value) {
  set_has_tag3();
  tag3_ = value;
  // @@protoc_insertion_point(field_set:qry_detail_wxhb_req.tag3)
}

// optional .mmStr info = 4;
inline bool qry_detail_wxhb_req::has_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void qry_detail_wxhb_req::set_has_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void qry_detail_wxhb_req::clear_has_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void qry_detail_wxhb_req::clear_info() {
  if (info_ != NULL) info_->::mmStr::Clear();
  clear_has_info();
}
inline const ::mmStr& qry_detail_wxhb_req::info() const {
  // @@protoc_insertion_point(field_get:qry_detail_wxhb_req.info)
  return info_ != NULL ? *info_
                         : *::mmStr::internal_default_instance();
}
inline ::mmStr* qry_detail_wxhb_req::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::mmStr;
  }
  // @@protoc_insertion_point(field_mutable:qry_detail_wxhb_req.info)
  return info_;
}
inline ::mmStr* qry_detail_wxhb_req::release_info() {
  // @@protoc_insertion_point(field_release:qry_detail_wxhb_req.info)
  clear_has_info();
  ::mmStr* temp = info_;
  info_ = NULL;
  return temp;
}
inline void qry_detail_wxhb_req::set_allocated_info(::mmStr* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:qry_detail_wxhb_req.info)
}

// -------------------------------------------------------------------

// qry_detail_wxhb_resp_TAG1_TAG1

// optional string tag1 = 1;
inline bool qry_detail_wxhb_resp_TAG1_TAG1::has_tag1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void qry_detail_wxhb_resp_TAG1_TAG1::set_has_tag1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void qry_detail_wxhb_resp_TAG1_TAG1::clear_has_tag1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void qry_detail_wxhb_resp_TAG1_TAG1::clear_tag1() {
  tag1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag1();
}
inline const ::std::string& qry_detail_wxhb_resp_TAG1_TAG1::tag1() const {
  // @@protoc_insertion_point(field_get:qry_detail_wxhb_resp.TAG1.TAG1.tag1)
  return tag1_.GetNoArena();
}
inline void qry_detail_wxhb_resp_TAG1_TAG1::set_tag1(const ::std::string& value) {
  set_has_tag1();
  tag1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qry_detail_wxhb_resp.TAG1.TAG1.tag1)
}
#if LANG_CXX11
inline void qry_detail_wxhb_resp_TAG1_TAG1::set_tag1(::std::string&& value) {
  set_has_tag1();
  tag1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qry_detail_wxhb_resp.TAG1.TAG1.tag1)
}
#endif
inline void qry_detail_wxhb_resp_TAG1_TAG1::set_tag1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag1();
  tag1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qry_detail_wxhb_resp.TAG1.TAG1.tag1)
}
inline void qry_detail_wxhb_resp_TAG1_TAG1::set_tag1(const char* value, size_t size) {
  set_has_tag1();
  tag1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qry_detail_wxhb_resp.TAG1.TAG1.tag1)
}
inline ::std::string* qry_detail_wxhb_resp_TAG1_TAG1::mutable_tag1() {
  set_has_tag1();
  // @@protoc_insertion_point(field_mutable:qry_detail_wxhb_resp.TAG1.TAG1.tag1)
  return tag1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* qry_detail_wxhb_resp_TAG1_TAG1::release_tag1() {
  // @@protoc_insertion_point(field_release:qry_detail_wxhb_resp.TAG1.TAG1.tag1)
  clear_has_tag1();
  return tag1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void qry_detail_wxhb_resp_TAG1_TAG1::set_allocated_tag1(::std::string* tag1) {
  if (tag1 != NULL) {
    set_has_tag1();
  } else {
    clear_has_tag1();
  }
  tag1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag1);
  // @@protoc_insertion_point(field_set_allocated:qry_detail_wxhb_resp.TAG1.TAG1.tag1)
}

// -------------------------------------------------------------------

// qry_detail_wxhb_resp_TAG1

// optional int32 tag1 = 1;
inline bool qry_detail_wxhb_resp_TAG1::has_tag1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void qry_detail_wxhb_resp_TAG1::set_has_tag1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void qry_detail_wxhb_resp_TAG1::clear_has_tag1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void qry_detail_wxhb_resp_TAG1::clear_tag1() {
  tag1_ = 0;
  clear_has_tag1();
}
inline ::google::protobuf::int32 qry_detail_wxhb_resp_TAG1::tag1() const {
  // @@protoc_insertion_point(field_get:qry_detail_wxhb_resp.TAG1.tag1)
  return tag1_;
}
inline void qry_detail_wxhb_resp_TAG1::set_tag1(::google::protobuf::int32 value) {
  set_has_tag1();
  tag1_ = value;
  // @@protoc_insertion_point(field_set:qry_detail_wxhb_resp.TAG1.tag1)
}

// -------------------------------------------------------------------

// qry_detail_wxhb_resp

// optional .qry_detail_wxhb_resp.TAG1 tag1 = 1;
inline bool qry_detail_wxhb_resp::has_tag1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void qry_detail_wxhb_resp::set_has_tag1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void qry_detail_wxhb_resp::clear_has_tag1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void qry_detail_wxhb_resp::clear_tag1() {
  if (tag1_ != NULL) tag1_->::qry_detail_wxhb_resp_TAG1::Clear();
  clear_has_tag1();
}
inline const ::qry_detail_wxhb_resp_TAG1& qry_detail_wxhb_resp::tag1() const {
  // @@protoc_insertion_point(field_get:qry_detail_wxhb_resp.tag1)
  return tag1_ != NULL ? *tag1_
                         : *::qry_detail_wxhb_resp_TAG1::internal_default_instance();
}
inline ::qry_detail_wxhb_resp_TAG1* qry_detail_wxhb_resp::mutable_tag1() {
  set_has_tag1();
  if (tag1_ == NULL) {
    tag1_ = new ::qry_detail_wxhb_resp_TAG1;
  }
  // @@protoc_insertion_point(field_mutable:qry_detail_wxhb_resp.tag1)
  return tag1_;
}
inline ::qry_detail_wxhb_resp_TAG1* qry_detail_wxhb_resp::release_tag1() {
  // @@protoc_insertion_point(field_release:qry_detail_wxhb_resp.tag1)
  clear_has_tag1();
  ::qry_detail_wxhb_resp_TAG1* temp = tag1_;
  tag1_ = NULL;
  return temp;
}
inline void qry_detail_wxhb_resp::set_allocated_tag1(::qry_detail_wxhb_resp_TAG1* tag1) {
  delete tag1_;
  tag1_ = tag1;
  if (tag1) {
    set_has_tag1();
  } else {
    clear_has_tag1();
  }
  // @@protoc_insertion_point(field_set_allocated:qry_detail_wxhb_resp.tag1)
}

// optional .mmStr res = 2;
inline bool qry_detail_wxhb_resp::has_res() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void qry_detail_wxhb_resp::set_has_res() {
  _has_bits_[0] |= 0x00000004u;
}
inline void qry_detail_wxhb_resp::clear_has_res() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void qry_detail_wxhb_resp::clear_res() {
  if (res_ != NULL) res_->::mmStr::Clear();
  clear_has_res();
}
inline const ::mmStr& qry_detail_wxhb_resp::res() const {
  // @@protoc_insertion_point(field_get:qry_detail_wxhb_resp.res)
  return res_ != NULL ? *res_
                         : *::mmStr::internal_default_instance();
}
inline ::mmStr* qry_detail_wxhb_resp::mutable_res() {
  set_has_res();
  if (res_ == NULL) {
    res_ = new ::mmStr;
  }
  // @@protoc_insertion_point(field_mutable:qry_detail_wxhb_resp.res)
  return res_;
}
inline ::mmStr* qry_detail_wxhb_resp::release_res() {
  // @@protoc_insertion_point(field_release:qry_detail_wxhb_resp.res)
  clear_has_res();
  ::mmStr* temp = res_;
  res_ = NULL;
  return temp;
}
inline void qry_detail_wxhb_resp::set_allocated_res(::mmStr* res) {
  delete res_;
  res_ = res;
  if (res) {
    set_has_res();
  } else {
    clear_has_res();
  }
  // @@protoc_insertion_point(field_set_allocated:qry_detail_wxhb_resp.res)
}

// optional int32 cmd = 5;
inline bool qry_detail_wxhb_resp::has_cmd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void qry_detail_wxhb_resp::set_has_cmd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void qry_detail_wxhb_resp::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void qry_detail_wxhb_resp::clear_cmd() {
  cmd_ = 0;
  clear_has_cmd();
}
inline ::google::protobuf::int32 qry_detail_wxhb_resp::cmd() const {
  // @@protoc_insertion_point(field_get:qry_detail_wxhb_resp.cmd)
  return cmd_;
}
inline void qry_detail_wxhb_resp::set_cmd(::google::protobuf::int32 value) {
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:qry_detail_wxhb_resp.cmd)
}

// optional int32 ret_code = 6;
inline bool qry_detail_wxhb_resp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void qry_detail_wxhb_resp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000010u;
}
inline void qry_detail_wxhb_resp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void qry_detail_wxhb_resp::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::google::protobuf::int32 qry_detail_wxhb_resp::ret_code() const {
  // @@protoc_insertion_point(field_get:qry_detail_wxhb_resp.ret_code)
  return ret_code_;
}
inline void qry_detail_wxhb_resp::set_ret_code(::google::protobuf::int32 value) {
  set_has_ret_code();
  ret_code_ = value;
  // @@protoc_insertion_point(field_set:qry_detail_wxhb_resp.ret_code)
}

// optional string ret_msg = 7;
inline bool qry_detail_wxhb_resp::has_ret_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void qry_detail_wxhb_resp::set_has_ret_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void qry_detail_wxhb_resp::clear_has_ret_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void qry_detail_wxhb_resp::clear_ret_msg() {
  ret_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ret_msg();
}
inline const ::std::string& qry_detail_wxhb_resp::ret_msg() const {
  // @@protoc_insertion_point(field_get:qry_detail_wxhb_resp.ret_msg)
  return ret_msg_.GetNoArena();
}
inline void qry_detail_wxhb_resp::set_ret_msg(const ::std::string& value) {
  set_has_ret_msg();
  ret_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qry_detail_wxhb_resp.ret_msg)
}
#if LANG_CXX11
inline void qry_detail_wxhb_resp::set_ret_msg(::std::string&& value) {
  set_has_ret_msg();
  ret_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qry_detail_wxhb_resp.ret_msg)
}
#endif
inline void qry_detail_wxhb_resp::set_ret_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ret_msg();
  ret_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qry_detail_wxhb_resp.ret_msg)
}
inline void qry_detail_wxhb_resp::set_ret_msg(const char* value, size_t size) {
  set_has_ret_msg();
  ret_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qry_detail_wxhb_resp.ret_msg)
}
inline ::std::string* qry_detail_wxhb_resp::mutable_ret_msg() {
  set_has_ret_msg();
  // @@protoc_insertion_point(field_mutable:qry_detail_wxhb_resp.ret_msg)
  return ret_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* qry_detail_wxhb_resp::release_ret_msg() {
  // @@protoc_insertion_point(field_release:qry_detail_wxhb_resp.ret_msg)
  clear_has_ret_msg();
  return ret_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void qry_detail_wxhb_resp::set_allocated_ret_msg(::std::string* ret_msg) {
  if (ret_msg != NULL) {
    set_has_ret_msg();
  } else {
    clear_has_ret_msg();
  }
  ret_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ret_msg);
  // @@protoc_insertion_point(field_set_allocated:qry_detail_wxhb_resp.ret_msg)
}

// -------------------------------------------------------------------

// send_emoji_req_emoji_info_TAG4

// optional int32 tag1 = 1;
inline bool send_emoji_req_emoji_info_TAG4::has_tag1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void send_emoji_req_emoji_info_TAG4::set_has_tag1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void send_emoji_req_emoji_info_TAG4::clear_has_tag1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void send_emoji_req_emoji_info_TAG4::clear_tag1() {
  tag1_ = 0;
  clear_has_tag1();
}
inline ::google::protobuf::int32 send_emoji_req_emoji_info_TAG4::tag1() const {
  // @@protoc_insertion_point(field_get:send_emoji_req.emoji_info.TAG4.tag1)
  return tag1_;
}
inline void send_emoji_req_emoji_info_TAG4::set_tag1(::google::protobuf::int32 value) {
  set_has_tag1();
  tag1_ = value;
  // @@protoc_insertion_point(field_set:send_emoji_req.emoji_info.TAG4.tag1)
}

// -------------------------------------------------------------------

// send_emoji_req_emoji_info

// optional string animation_id = 1;
inline bool send_emoji_req_emoji_info::has_animation_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void send_emoji_req_emoji_info::set_has_animation_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void send_emoji_req_emoji_info::clear_has_animation_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void send_emoji_req_emoji_info::clear_animation_id() {
  animation_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_animation_id();
}
inline const ::std::string& send_emoji_req_emoji_info::animation_id() const {
  // @@protoc_insertion_point(field_get:send_emoji_req.emoji_info.animation_id)
  return animation_id_.GetNoArena();
}
inline void send_emoji_req_emoji_info::set_animation_id(const ::std::string& value) {
  set_has_animation_id();
  animation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:send_emoji_req.emoji_info.animation_id)
}
#if LANG_CXX11
inline void send_emoji_req_emoji_info::set_animation_id(::std::string&& value) {
  set_has_animation_id();
  animation_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:send_emoji_req.emoji_info.animation_id)
}
#endif
inline void send_emoji_req_emoji_info::set_animation_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_animation_id();
  animation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:send_emoji_req.emoji_info.animation_id)
}
inline void send_emoji_req_emoji_info::set_animation_id(const char* value, size_t size) {
  set_has_animation_id();
  animation_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:send_emoji_req.emoji_info.animation_id)
}
inline ::std::string* send_emoji_req_emoji_info::mutable_animation_id() {
  set_has_animation_id();
  // @@protoc_insertion_point(field_mutable:send_emoji_req.emoji_info.animation_id)
  return animation_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* send_emoji_req_emoji_info::release_animation_id() {
  // @@protoc_insertion_point(field_release:send_emoji_req.emoji_info.animation_id)
  clear_has_animation_id();
  return animation_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void send_emoji_req_emoji_info::set_allocated_animation_id(::std::string* animation_id) {
  if (animation_id != NULL) {
    set_has_animation_id();
  } else {
    clear_has_animation_id();
  }
  animation_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), animation_id);
  // @@protoc_insertion_point(field_set_allocated:send_emoji_req.emoji_info.animation_id)
}

// optional int32 tag2 = 2;
inline bool send_emoji_req_emoji_info::has_tag2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void send_emoji_req_emoji_info::set_has_tag2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void send_emoji_req_emoji_info::clear_has_tag2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void send_emoji_req_emoji_info::clear_tag2() {
  tag2_ = 0;
  clear_has_tag2();
}
inline ::google::protobuf::int32 send_emoji_req_emoji_info::tag2() const {
  // @@protoc_insertion_point(field_get:send_emoji_req.emoji_info.tag2)
  return tag2_;
}
inline void send_emoji_req_emoji_info::set_tag2(::google::protobuf::int32 value) {
  set_has_tag2();
  tag2_ = value;
  // @@protoc_insertion_point(field_set:send_emoji_req.emoji_info.tag2)
}

// optional int32 tag3 = 3;
inline bool send_emoji_req_emoji_info::has_tag3() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void send_emoji_req_emoji_info::set_has_tag3() {
  _has_bits_[0] |= 0x00000080u;
}
inline void send_emoji_req_emoji_info::clear_has_tag3() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void send_emoji_req_emoji_info::clear_tag3() {
  tag3_ = 0;
  clear_has_tag3();
}
inline ::google::protobuf::int32 send_emoji_req_emoji_info::tag3() const {
  // @@protoc_insertion_point(field_get:send_emoji_req.emoji_info.tag3)
  return tag3_;
}
inline void send_emoji_req_emoji_info::set_tag3(::google::protobuf::int32 value) {
  set_has_tag3();
  tag3_ = value;
  // @@protoc_insertion_point(field_set:send_emoji_req.emoji_info.tag3)
}

// optional .send_emoji_req.emoji_info.TAG4 tag4 = 4;
inline bool send_emoji_req_emoji_info::has_tag4() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void send_emoji_req_emoji_info::set_has_tag4() {
  _has_bits_[0] |= 0x00000020u;
}
inline void send_emoji_req_emoji_info::clear_has_tag4() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void send_emoji_req_emoji_info::clear_tag4() {
  if (tag4_ != NULL) tag4_->::send_emoji_req_emoji_info_TAG4::Clear();
  clear_has_tag4();
}
inline const ::send_emoji_req_emoji_info_TAG4& send_emoji_req_emoji_info::tag4() const {
  // @@protoc_insertion_point(field_get:send_emoji_req.emoji_info.tag4)
  return tag4_ != NULL ? *tag4_
                         : *::send_emoji_req_emoji_info_TAG4::internal_default_instance();
}
inline ::send_emoji_req_emoji_info_TAG4* send_emoji_req_emoji_info::mutable_tag4() {
  set_has_tag4();
  if (tag4_ == NULL) {
    tag4_ = new ::send_emoji_req_emoji_info_TAG4;
  }
  // @@protoc_insertion_point(field_mutable:send_emoji_req.emoji_info.tag4)
  return tag4_;
}
inline ::send_emoji_req_emoji_info_TAG4* send_emoji_req_emoji_info::release_tag4() {
  // @@protoc_insertion_point(field_release:send_emoji_req.emoji_info.tag4)
  clear_has_tag4();
  ::send_emoji_req_emoji_info_TAG4* temp = tag4_;
  tag4_ = NULL;
  return temp;
}
inline void send_emoji_req_emoji_info::set_allocated_tag4(::send_emoji_req_emoji_info_TAG4* tag4) {
  delete tag4_;
  tag4_ = tag4;
  if (tag4) {
    set_has_tag4();
  } else {
    clear_has_tag4();
  }
  // @@protoc_insertion_point(field_set_allocated:send_emoji_req.emoji_info.tag4)
}

// optional int32 tag5 = 5;
inline bool send_emoji_req_emoji_info::has_tag5() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void send_emoji_req_emoji_info::set_has_tag5() {
  _has_bits_[0] |= 0x00000100u;
}
inline void send_emoji_req_emoji_info::clear_has_tag5() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void send_emoji_req_emoji_info::clear_tag5() {
  tag5_ = 0;
  clear_has_tag5();
}
inline ::google::protobuf::int32 send_emoji_req_emoji_info::tag5() const {
  // @@protoc_insertion_point(field_get:send_emoji_req.emoji_info.tag5)
  return tag5_;
}
inline void send_emoji_req_emoji_info::set_tag5(::google::protobuf::int32 value) {
  set_has_tag5();
  tag5_ = value;
  // @@protoc_insertion_point(field_set:send_emoji_req.emoji_info.tag5)
}

// optional string to_wxid = 6;
inline bool send_emoji_req_emoji_info::has_to_wxid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void send_emoji_req_emoji_info::set_has_to_wxid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void send_emoji_req_emoji_info::clear_has_to_wxid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void send_emoji_req_emoji_info::clear_to_wxid() {
  to_wxid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_to_wxid();
}
inline const ::std::string& send_emoji_req_emoji_info::to_wxid() const {
  // @@protoc_insertion_point(field_get:send_emoji_req.emoji_info.to_wxid)
  return to_wxid_.GetNoArena();
}
inline void send_emoji_req_emoji_info::set_to_wxid(const ::std::string& value) {
  set_has_to_wxid();
  to_wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:send_emoji_req.emoji_info.to_wxid)
}
#if LANG_CXX11
inline void send_emoji_req_emoji_info::set_to_wxid(::std::string&& value) {
  set_has_to_wxid();
  to_wxid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:send_emoji_req.emoji_info.to_wxid)
}
#endif
inline void send_emoji_req_emoji_info::set_to_wxid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_to_wxid();
  to_wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:send_emoji_req.emoji_info.to_wxid)
}
inline void send_emoji_req_emoji_info::set_to_wxid(const char* value, size_t size) {
  set_has_to_wxid();
  to_wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:send_emoji_req.emoji_info.to_wxid)
}
inline ::std::string* send_emoji_req_emoji_info::mutable_to_wxid() {
  set_has_to_wxid();
  // @@protoc_insertion_point(field_mutable:send_emoji_req.emoji_info.to_wxid)
  return to_wxid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* send_emoji_req_emoji_info::release_to_wxid() {
  // @@protoc_insertion_point(field_release:send_emoji_req.emoji_info.to_wxid)
  clear_has_to_wxid();
  return to_wxid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void send_emoji_req_emoji_info::set_allocated_to_wxid(::std::string* to_wxid) {
  if (to_wxid != NULL) {
    set_has_to_wxid();
  } else {
    clear_has_to_wxid();
  }
  to_wxid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_wxid);
  // @@protoc_insertion_point(field_set_allocated:send_emoji_req.emoji_info.to_wxid)
}

// optional string game_ext = 7;
inline bool send_emoji_req_emoji_info::has_game_ext() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void send_emoji_req_emoji_info::set_has_game_ext() {
  _has_bits_[0] |= 0x00000004u;
}
inline void send_emoji_req_emoji_info::clear_has_game_ext() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void send_emoji_req_emoji_info::clear_game_ext() {
  game_ext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_game_ext();
}
inline const ::std::string& send_emoji_req_emoji_info::game_ext() const {
  // @@protoc_insertion_point(field_get:send_emoji_req.emoji_info.game_ext)
  return game_ext_.GetNoArena();
}
inline void send_emoji_req_emoji_info::set_game_ext(const ::std::string& value) {
  set_has_game_ext();
  game_ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:send_emoji_req.emoji_info.game_ext)
}
#if LANG_CXX11
inline void send_emoji_req_emoji_info::set_game_ext(::std::string&& value) {
  set_has_game_ext();
  game_ext_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:send_emoji_req.emoji_info.game_ext)
}
#endif
inline void send_emoji_req_emoji_info::set_game_ext(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_game_ext();
  game_ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:send_emoji_req.emoji_info.game_ext)
}
inline void send_emoji_req_emoji_info::set_game_ext(const char* value, size_t size) {
  set_has_game_ext();
  game_ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:send_emoji_req.emoji_info.game_ext)
}
inline ::std::string* send_emoji_req_emoji_info::mutable_game_ext() {
  set_has_game_ext();
  // @@protoc_insertion_point(field_mutable:send_emoji_req.emoji_info.game_ext)
  return game_ext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* send_emoji_req_emoji_info::release_game_ext() {
  // @@protoc_insertion_point(field_release:send_emoji_req.emoji_info.game_ext)
  clear_has_game_ext();
  return game_ext_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void send_emoji_req_emoji_info::set_allocated_game_ext(::std::string* game_ext) {
  if (game_ext != NULL) {
    set_has_game_ext();
  } else {
    clear_has_game_ext();
  }
  game_ext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_ext);
  // @@protoc_insertion_point(field_set_allocated:send_emoji_req.emoji_info.game_ext)
}

// optional string tag8 = 8;
inline bool send_emoji_req_emoji_info::has_tag8() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void send_emoji_req_emoji_info::set_has_tag8() {
  _has_bits_[0] |= 0x00000008u;
}
inline void send_emoji_req_emoji_info::clear_has_tag8() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void send_emoji_req_emoji_info::clear_tag8() {
  tag8_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag8();
}
inline const ::std::string& send_emoji_req_emoji_info::tag8() const {
  // @@protoc_insertion_point(field_get:send_emoji_req.emoji_info.tag8)
  return tag8_.GetNoArena();
}
inline void send_emoji_req_emoji_info::set_tag8(const ::std::string& value) {
  set_has_tag8();
  tag8_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:send_emoji_req.emoji_info.tag8)
}
#if LANG_CXX11
inline void send_emoji_req_emoji_info::set_tag8(::std::string&& value) {
  set_has_tag8();
  tag8_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:send_emoji_req.emoji_info.tag8)
}
#endif
inline void send_emoji_req_emoji_info::set_tag8(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag8();
  tag8_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:send_emoji_req.emoji_info.tag8)
}
inline void send_emoji_req_emoji_info::set_tag8(const char* value, size_t size) {
  set_has_tag8();
  tag8_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:send_emoji_req.emoji_info.tag8)
}
inline ::std::string* send_emoji_req_emoji_info::mutable_tag8() {
  set_has_tag8();
  // @@protoc_insertion_point(field_mutable:send_emoji_req.emoji_info.tag8)
  return tag8_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* send_emoji_req_emoji_info::release_tag8() {
  // @@protoc_insertion_point(field_release:send_emoji_req.emoji_info.tag8)
  clear_has_tag8();
  return tag8_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void send_emoji_req_emoji_info::set_allocated_tag8(::std::string* tag8) {
  if (tag8 != NULL) {
    set_has_tag8();
  } else {
    clear_has_tag8();
  }
  tag8_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag8);
  // @@protoc_insertion_point(field_set_allocated:send_emoji_req.emoji_info.tag8)
}

// optional string utc = 9;
inline bool send_emoji_req_emoji_info::has_utc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void send_emoji_req_emoji_info::set_has_utc() {
  _has_bits_[0] |= 0x00000010u;
}
inline void send_emoji_req_emoji_info::clear_has_utc() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void send_emoji_req_emoji_info::clear_utc() {
  utc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_utc();
}
inline const ::std::string& send_emoji_req_emoji_info::utc() const {
  // @@protoc_insertion_point(field_get:send_emoji_req.emoji_info.utc)
  return utc_.GetNoArena();
}
inline void send_emoji_req_emoji_info::set_utc(const ::std::string& value) {
  set_has_utc();
  utc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:send_emoji_req.emoji_info.utc)
}
#if LANG_CXX11
inline void send_emoji_req_emoji_info::set_utc(::std::string&& value) {
  set_has_utc();
  utc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:send_emoji_req.emoji_info.utc)
}
#endif
inline void send_emoji_req_emoji_info::set_utc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_utc();
  utc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:send_emoji_req.emoji_info.utc)
}
inline void send_emoji_req_emoji_info::set_utc(const char* value, size_t size) {
  set_has_utc();
  utc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:send_emoji_req.emoji_info.utc)
}
inline ::std::string* send_emoji_req_emoji_info::mutable_utc() {
  set_has_utc();
  // @@protoc_insertion_point(field_mutable:send_emoji_req.emoji_info.utc)
  return utc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* send_emoji_req_emoji_info::release_utc() {
  // @@protoc_insertion_point(field_release:send_emoji_req.emoji_info.utc)
  clear_has_utc();
  return utc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void send_emoji_req_emoji_info::set_allocated_utc(::std::string* utc) {
  if (utc != NULL) {
    set_has_utc();
  } else {
    clear_has_utc();
  }
  utc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), utc);
  // @@protoc_insertion_point(field_set_allocated:send_emoji_req.emoji_info.utc)
}

// optional int32 tag11 = 11;
inline bool send_emoji_req_emoji_info::has_tag11() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void send_emoji_req_emoji_info::set_has_tag11() {
  _has_bits_[0] |= 0x00000200u;
}
inline void send_emoji_req_emoji_info::clear_has_tag11() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void send_emoji_req_emoji_info::clear_tag11() {
  tag11_ = 0;
  clear_has_tag11();
}
inline ::google::protobuf::int32 send_emoji_req_emoji_info::tag11() const {
  // @@protoc_insertion_point(field_get:send_emoji_req.emoji_info.tag11)
  return tag11_;
}
inline void send_emoji_req_emoji_info::set_tag11(::google::protobuf::int32 value) {
  set_has_tag11();
  tag11_ = value;
  // @@protoc_insertion_point(field_set:send_emoji_req.emoji_info.tag11)
}

// -------------------------------------------------------------------

// send_emoji_req

// optional .LoginInfo login = 1;
inline bool send_emoji_req::has_login() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void send_emoji_req::set_has_login() {
  _has_bits_[0] |= 0x00000001u;
}
inline void send_emoji_req::clear_has_login() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void send_emoji_req::clear_login() {
  if (login_ != NULL) login_->::LoginInfo::Clear();
  clear_has_login();
}
inline const ::LoginInfo& send_emoji_req::login() const {
  // @@protoc_insertion_point(field_get:send_emoji_req.login)
  return login_ != NULL ? *login_
                         : *::LoginInfo::internal_default_instance();
}
inline ::LoginInfo* send_emoji_req::mutable_login() {
  set_has_login();
  if (login_ == NULL) {
    login_ = new ::LoginInfo;
  }
  // @@protoc_insertion_point(field_mutable:send_emoji_req.login)
  return login_;
}
inline ::LoginInfo* send_emoji_req::release_login() {
  // @@protoc_insertion_point(field_release:send_emoji_req.login)
  clear_has_login();
  ::LoginInfo* temp = login_;
  login_ = NULL;
  return temp;
}
inline void send_emoji_req::set_allocated_login(::LoginInfo* login) {
  delete login_;
  login_ = login;
  if (login) {
    set_has_login();
  } else {
    clear_has_login();
  }
  // @@protoc_insertion_point(field_set_allocated:send_emoji_req.login)
}

// optional int32 tag2 = 2;
inline bool send_emoji_req::has_tag2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void send_emoji_req::set_has_tag2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void send_emoji_req::clear_has_tag2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void send_emoji_req::clear_tag2() {
  tag2_ = 0;
  clear_has_tag2();
}
inline ::google::protobuf::int32 send_emoji_req::tag2() const {
  // @@protoc_insertion_point(field_get:send_emoji_req.tag2)
  return tag2_;
}
inline void send_emoji_req::set_tag2(::google::protobuf::int32 value) {
  set_has_tag2();
  tag2_ = value;
  // @@protoc_insertion_point(field_set:send_emoji_req.tag2)
}

// optional .send_emoji_req.emoji_info emoji = 3;
inline bool send_emoji_req::has_emoji() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void send_emoji_req::set_has_emoji() {
  _has_bits_[0] |= 0x00000002u;
}
inline void send_emoji_req::clear_has_emoji() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void send_emoji_req::clear_emoji() {
  if (emoji_ != NULL) emoji_->::send_emoji_req_emoji_info::Clear();
  clear_has_emoji();
}
inline const ::send_emoji_req_emoji_info& send_emoji_req::emoji() const {
  // @@protoc_insertion_point(field_get:send_emoji_req.emoji)
  return emoji_ != NULL ? *emoji_
                         : *::send_emoji_req_emoji_info::internal_default_instance();
}
inline ::send_emoji_req_emoji_info* send_emoji_req::mutable_emoji() {
  set_has_emoji();
  if (emoji_ == NULL) {
    emoji_ = new ::send_emoji_req_emoji_info;
  }
  // @@protoc_insertion_point(field_mutable:send_emoji_req.emoji)
  return emoji_;
}
inline ::send_emoji_req_emoji_info* send_emoji_req::release_emoji() {
  // @@protoc_insertion_point(field_release:send_emoji_req.emoji)
  clear_has_emoji();
  ::send_emoji_req_emoji_info* temp = emoji_;
  emoji_ = NULL;
  return temp;
}
inline void send_emoji_req::set_allocated_emoji(::send_emoji_req_emoji_info* emoji) {
  delete emoji_;
  emoji_ = emoji;
  if (emoji) {
    set_has_emoji();
  } else {
    clear_has_emoji();
  }
  // @@protoc_insertion_point(field_set_allocated:send_emoji_req.emoji)
}

// optional int32 tag4 = 4;
inline bool send_emoji_req::has_tag4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void send_emoji_req::set_has_tag4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void send_emoji_req::clear_has_tag4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void send_emoji_req::clear_tag4() {
  tag4_ = 0;
  clear_has_tag4();
}
inline ::google::protobuf::int32 send_emoji_req::tag4() const {
  // @@protoc_insertion_point(field_get:send_emoji_req.tag4)
  return tag4_;
}
inline void send_emoji_req::set_tag4(::google::protobuf::int32 value) {
  set_has_tag4();
  tag4_ = value;
  // @@protoc_insertion_point(field_set:send_emoji_req.tag4)
}

// -------------------------------------------------------------------

// send_emoji_resp_result

// optional int32 code = 1;
inline bool send_emoji_resp_result::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void send_emoji_resp_result::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void send_emoji_resp_result::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void send_emoji_resp_result::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 send_emoji_resp_result::code() const {
  // @@protoc_insertion_point(field_get:send_emoji_resp.result.code)
  return code_;
}
inline void send_emoji_resp_result::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:send_emoji_resp.result.code)
}

// optional int32 tag2 = 2;
inline bool send_emoji_resp_result::has_tag2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void send_emoji_resp_result::set_has_tag2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void send_emoji_resp_result::clear_has_tag2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void send_emoji_resp_result::clear_tag2() {
  tag2_ = 0;
  clear_has_tag2();
}
inline ::google::protobuf::int32 send_emoji_resp_result::tag2() const {
  // @@protoc_insertion_point(field_get:send_emoji_resp.result.tag2)
  return tag2_;
}
inline void send_emoji_resp_result::set_tag2(::google::protobuf::int32 value) {
  set_has_tag2();
  tag2_ = value;
  // @@protoc_insertion_point(field_set:send_emoji_resp.result.tag2)
}

// optional int32 tag3 = 3;
inline bool send_emoji_resp_result::has_tag3() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void send_emoji_resp_result::set_has_tag3() {
  _has_bits_[0] |= 0x00000008u;
}
inline void send_emoji_resp_result::clear_has_tag3() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void send_emoji_resp_result::clear_tag3() {
  tag3_ = 0;
  clear_has_tag3();
}
inline ::google::protobuf::int32 send_emoji_resp_result::tag3() const {
  // @@protoc_insertion_point(field_get:send_emoji_resp.result.tag3)
  return tag3_;
}
inline void send_emoji_resp_result::set_tag3(::google::protobuf::int32 value) {
  set_has_tag3();
  tag3_ = value;
  // @@protoc_insertion_point(field_set:send_emoji_resp.result.tag3)
}

// optional string file_name = 4;
inline bool send_emoji_resp_result::has_file_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void send_emoji_resp_result::set_has_file_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void send_emoji_resp_result::clear_has_file_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void send_emoji_resp_result::clear_file_name() {
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_file_name();
}
inline const ::std::string& send_emoji_resp_result::file_name() const {
  // @@protoc_insertion_point(field_get:send_emoji_resp.result.file_name)
  return file_name_.GetNoArena();
}
inline void send_emoji_resp_result::set_file_name(const ::std::string& value) {
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:send_emoji_resp.result.file_name)
}
#if LANG_CXX11
inline void send_emoji_resp_result::set_file_name(::std::string&& value) {
  set_has_file_name();
  file_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:send_emoji_resp.result.file_name)
}
#endif
inline void send_emoji_resp_result::set_file_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:send_emoji_resp.result.file_name)
}
inline void send_emoji_resp_result::set_file_name(const char* value, size_t size) {
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:send_emoji_resp.result.file_name)
}
inline ::std::string* send_emoji_resp_result::mutable_file_name() {
  set_has_file_name();
  // @@protoc_insertion_point(field_mutable:send_emoji_resp.result.file_name)
  return file_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* send_emoji_resp_result::release_file_name() {
  // @@protoc_insertion_point(field_release:send_emoji_resp.result.file_name)
  clear_has_file_name();
  return file_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void send_emoji_resp_result::set_allocated_file_name(::std::string* file_name) {
  if (file_name != NULL) {
    set_has_file_name();
  } else {
    clear_has_file_name();
  }
  file_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_name);
  // @@protoc_insertion_point(field_set_allocated:send_emoji_resp.result.file_name)
}

// optional int32 svrid = 5;
inline bool send_emoji_resp_result::has_svrid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void send_emoji_resp_result::set_has_svrid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void send_emoji_resp_result::clear_has_svrid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void send_emoji_resp_result::clear_svrid() {
  svrid_ = 0;
  clear_has_svrid();
}
inline ::google::protobuf::int32 send_emoji_resp_result::svrid() const {
  // @@protoc_insertion_point(field_get:send_emoji_resp.result.svrid)
  return svrid_;
}
inline void send_emoji_resp_result::set_svrid(::google::protobuf::int32 value) {
  set_has_svrid();
  svrid_ = value;
  // @@protoc_insertion_point(field_set:send_emoji_resp.result.svrid)
}

// optional int32 tag6 = 6;
inline bool send_emoji_resp_result::has_tag6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void send_emoji_resp_result::set_has_tag6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void send_emoji_resp_result::clear_has_tag6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void send_emoji_resp_result::clear_tag6() {
  tag6_ = 0;
  clear_has_tag6();
}
inline ::google::protobuf::int32 send_emoji_resp_result::tag6() const {
  // @@protoc_insertion_point(field_get:send_emoji_resp.result.tag6)
  return tag6_;
}
inline void send_emoji_resp_result::set_tag6(::google::protobuf::int32 value) {
  set_has_tag6();
  tag6_ = value;
  // @@protoc_insertion_point(field_set:send_emoji_resp.result.tag6)
}

// -------------------------------------------------------------------

// send_emoji_resp

// optional .send_emoji_resp.result res = 3;
inline bool send_emoji_resp::has_res() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void send_emoji_resp::set_has_res() {
  _has_bits_[0] |= 0x00000001u;
}
inline void send_emoji_resp::clear_has_res() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void send_emoji_resp::clear_res() {
  if (res_ != NULL) res_->::send_emoji_resp_result::Clear();
  clear_has_res();
}
inline const ::send_emoji_resp_result& send_emoji_resp::res() const {
  // @@protoc_insertion_point(field_get:send_emoji_resp.res)
  return res_ != NULL ? *res_
                         : *::send_emoji_resp_result::internal_default_instance();
}
inline ::send_emoji_resp_result* send_emoji_resp::mutable_res() {
  set_has_res();
  if (res_ == NULL) {
    res_ = new ::send_emoji_resp_result;
  }
  // @@protoc_insertion_point(field_mutable:send_emoji_resp.res)
  return res_;
}
inline ::send_emoji_resp_result* send_emoji_resp::release_res() {
  // @@protoc_insertion_point(field_release:send_emoji_resp.res)
  clear_has_res();
  ::send_emoji_resp_result* temp = res_;
  res_ = NULL;
  return temp;
}
inline void send_emoji_resp::set_allocated_res(::send_emoji_resp_result* res) {
  delete res_;
  res_ = res;
  if (res) {
    set_has_res();
  } else {
    clear_has_res();
  }
  // @@protoc_insertion_point(field_set_allocated:send_emoji_resp.res)
}

// -------------------------------------------------------------------

// transfer_operation_req

// optional .LoginInfo login = 1;
inline bool transfer_operation_req::has_login() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void transfer_operation_req::set_has_login() {
  _has_bits_[0] |= 0x00000001u;
}
inline void transfer_operation_req::clear_has_login() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void transfer_operation_req::clear_login() {
  if (login_ != NULL) login_->::LoginInfo::Clear();
  clear_has_login();
}
inline const ::LoginInfo& transfer_operation_req::login() const {
  // @@protoc_insertion_point(field_get:transfer_operation_req.login)
  return login_ != NULL ? *login_
                         : *::LoginInfo::internal_default_instance();
}
inline ::LoginInfo* transfer_operation_req::mutable_login() {
  set_has_login();
  if (login_ == NULL) {
    login_ = new ::LoginInfo;
  }
  // @@protoc_insertion_point(field_mutable:transfer_operation_req.login)
  return login_;
}
inline ::LoginInfo* transfer_operation_req::release_login() {
  // @@protoc_insertion_point(field_release:transfer_operation_req.login)
  clear_has_login();
  ::LoginInfo* temp = login_;
  login_ = NULL;
  return temp;
}
inline void transfer_operation_req::set_allocated_login(::LoginInfo* login) {
  delete login_;
  login_ = login;
  if (login) {
    set_has_login();
  } else {
    clear_has_login();
  }
  // @@protoc_insertion_point(field_set_allocated:transfer_operation_req.login)
}

// optional int32 tag2 = 2;
inline bool transfer_operation_req::has_tag2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void transfer_operation_req::set_has_tag2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void transfer_operation_req::clear_has_tag2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void transfer_operation_req::clear_tag2() {
  tag2_ = 0;
  clear_has_tag2();
}
inline ::google::protobuf::int32 transfer_operation_req::tag2() const {
  // @@protoc_insertion_point(field_get:transfer_operation_req.tag2)
  return tag2_;
}
inline void transfer_operation_req::set_tag2(::google::protobuf::int32 value) {
  set_has_tag2();
  tag2_ = value;
  // @@protoc_insertion_point(field_set:transfer_operation_req.tag2)
}

// optional int32 tag3 = 3;
inline bool transfer_operation_req::has_tag3() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void transfer_operation_req::set_has_tag3() {
  _has_bits_[0] |= 0x00000008u;
}
inline void transfer_operation_req::clear_has_tag3() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void transfer_operation_req::clear_tag3() {
  tag3_ = 0;
  clear_has_tag3();
}
inline ::google::protobuf::int32 transfer_operation_req::tag3() const {
  // @@protoc_insertion_point(field_get:transfer_operation_req.tag3)
  return tag3_;
}
inline void transfer_operation_req::set_tag3(::google::protobuf::int32 value) {
  set_has_tag3();
  tag3_ = value;
  // @@protoc_insertion_point(field_set:transfer_operation_req.tag3)
}

// optional .mmStr info = 4;
inline bool transfer_operation_req::has_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void transfer_operation_req::set_has_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void transfer_operation_req::clear_has_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void transfer_operation_req::clear_info() {
  if (info_ != NULL) info_->::mmStr::Clear();
  clear_has_info();
}
inline const ::mmStr& transfer_operation_req::info() const {
  // @@protoc_insertion_point(field_get:transfer_operation_req.info)
  return info_ != NULL ? *info_
                         : *::mmStr::internal_default_instance();
}
inline ::mmStr* transfer_operation_req::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::mmStr;
  }
  // @@protoc_insertion_point(field_mutable:transfer_operation_req.info)
  return info_;
}
inline ::mmStr* transfer_operation_req::release_info() {
  // @@protoc_insertion_point(field_release:transfer_operation_req.info)
  clear_has_info();
  ::mmStr* temp = info_;
  info_ = NULL;
  return temp;
}
inline void transfer_operation_req::set_allocated_info(::mmStr* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:transfer_operation_req.info)
}

// -------------------------------------------------------------------

// transfer_operation_resp

// optional .mmStr res = 2;
inline bool transfer_operation_resp::has_res() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void transfer_operation_resp::set_has_res() {
  _has_bits_[0] |= 0x00000002u;
}
inline void transfer_operation_resp::clear_has_res() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void transfer_operation_resp::clear_res() {
  if (res_ != NULL) res_->::mmStr::Clear();
  clear_has_res();
}
inline const ::mmStr& transfer_operation_resp::res() const {
  // @@protoc_insertion_point(field_get:transfer_operation_resp.res)
  return res_ != NULL ? *res_
                         : *::mmStr::internal_default_instance();
}
inline ::mmStr* transfer_operation_resp::mutable_res() {
  set_has_res();
  if (res_ == NULL) {
    res_ = new ::mmStr;
  }
  // @@protoc_insertion_point(field_mutable:transfer_operation_resp.res)
  return res_;
}
inline ::mmStr* transfer_operation_resp::release_res() {
  // @@protoc_insertion_point(field_release:transfer_operation_resp.res)
  clear_has_res();
  ::mmStr* temp = res_;
  res_ = NULL;
  return temp;
}
inline void transfer_operation_resp::set_allocated_res(::mmStr* res) {
  delete res_;
  res_ = res;
  if (res) {
    set_has_res();
  } else {
    clear_has_res();
  }
  // @@protoc_insertion_point(field_set_allocated:transfer_operation_resp.res)
}

// optional int32 ret_code = 6;
inline bool transfer_operation_resp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void transfer_operation_resp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void transfer_operation_resp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void transfer_operation_resp::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::google::protobuf::int32 transfer_operation_resp::ret_code() const {
  // @@protoc_insertion_point(field_get:transfer_operation_resp.ret_code)
  return ret_code_;
}
inline void transfer_operation_resp::set_ret_code(::google::protobuf::int32 value) {
  set_has_ret_code();
  ret_code_ = value;
  // @@protoc_insertion_point(field_set:transfer_operation_resp.ret_code)
}

// optional string ret_msg = 7;
inline bool transfer_operation_resp::has_ret_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void transfer_operation_resp::set_has_ret_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void transfer_operation_resp::clear_has_ret_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void transfer_operation_resp::clear_ret_msg() {
  ret_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ret_msg();
}
inline const ::std::string& transfer_operation_resp::ret_msg() const {
  // @@protoc_insertion_point(field_get:transfer_operation_resp.ret_msg)
  return ret_msg_.GetNoArena();
}
inline void transfer_operation_resp::set_ret_msg(const ::std::string& value) {
  set_has_ret_msg();
  ret_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:transfer_operation_resp.ret_msg)
}
#if LANG_CXX11
inline void transfer_operation_resp::set_ret_msg(::std::string&& value) {
  set_has_ret_msg();
  ret_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:transfer_operation_resp.ret_msg)
}
#endif
inline void transfer_operation_resp::set_ret_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ret_msg();
  ret_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:transfer_operation_resp.ret_msg)
}
inline void transfer_operation_resp::set_ret_msg(const char* value, size_t size) {
  set_has_ret_msg();
  ret_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:transfer_operation_resp.ret_msg)
}
inline ::std::string* transfer_operation_resp::mutable_ret_msg() {
  set_has_ret_msg();
  // @@protoc_insertion_point(field_mutable:transfer_operation_resp.ret_msg)
  return ret_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* transfer_operation_resp::release_ret_msg() {
  // @@protoc_insertion_point(field_release:transfer_operation_resp.ret_msg)
  clear_has_ret_msg();
  return ret_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void transfer_operation_resp::set_allocated_ret_msg(::std::string* ret_msg) {
  if (ret_msg != NULL) {
    set_has_ret_msg();
  } else {
    clear_has_ret_msg();
  }
  ret_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ret_msg);
  // @@protoc_insertion_point(field_set_allocated:transfer_operation_resp.ret_msg)
}

// -------------------------------------------------------------------

// transfer_query_req

// optional .LoginInfo login = 1;
inline bool transfer_query_req::has_login() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void transfer_query_req::set_has_login() {
  _has_bits_[0] |= 0x00000001u;
}
inline void transfer_query_req::clear_has_login() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void transfer_query_req::clear_login() {
  if (login_ != NULL) login_->::LoginInfo::Clear();
  clear_has_login();
}
inline const ::LoginInfo& transfer_query_req::login() const {
  // @@protoc_insertion_point(field_get:transfer_query_req.login)
  return login_ != NULL ? *login_
                         : *::LoginInfo::internal_default_instance();
}
inline ::LoginInfo* transfer_query_req::mutable_login() {
  set_has_login();
  if (login_ == NULL) {
    login_ = new ::LoginInfo;
  }
  // @@protoc_insertion_point(field_mutable:transfer_query_req.login)
  return login_;
}
inline ::LoginInfo* transfer_query_req::release_login() {
  // @@protoc_insertion_point(field_release:transfer_query_req.login)
  clear_has_login();
  ::LoginInfo* temp = login_;
  login_ = NULL;
  return temp;
}
inline void transfer_query_req::set_allocated_login(::LoginInfo* login) {
  delete login_;
  login_ = login;
  if (login) {
    set_has_login();
  } else {
    clear_has_login();
  }
  // @@protoc_insertion_point(field_set_allocated:transfer_query_req.login)
}

// optional int32 tag2 = 2;
inline bool transfer_query_req::has_tag2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void transfer_query_req::set_has_tag2() {
  _has_bits_[0] |= 0x00000004u;
}
inline void transfer_query_req::clear_has_tag2() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void transfer_query_req::clear_tag2() {
  tag2_ = 0;
  clear_has_tag2();
}
inline ::google::protobuf::int32 transfer_query_req::tag2() const {
  // @@protoc_insertion_point(field_get:transfer_query_req.tag2)
  return tag2_;
}
inline void transfer_query_req::set_tag2(::google::protobuf::int32 value) {
  set_has_tag2();
  tag2_ = value;
  // @@protoc_insertion_point(field_set:transfer_query_req.tag2)
}

// optional int32 tag3 = 3;
inline bool transfer_query_req::has_tag3() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void transfer_query_req::set_has_tag3() {
  _has_bits_[0] |= 0x00000008u;
}
inline void transfer_query_req::clear_has_tag3() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void transfer_query_req::clear_tag3() {
  tag3_ = 0;
  clear_has_tag3();
}
inline ::google::protobuf::int32 transfer_query_req::tag3() const {
  // @@protoc_insertion_point(field_get:transfer_query_req.tag3)
  return tag3_;
}
inline void transfer_query_req::set_tag3(::google::protobuf::int32 value) {
  set_has_tag3();
  tag3_ = value;
  // @@protoc_insertion_point(field_set:transfer_query_req.tag3)
}

// optional .mmStr info = 4;
inline bool transfer_query_req::has_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void transfer_query_req::set_has_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void transfer_query_req::clear_has_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void transfer_query_req::clear_info() {
  if (info_ != NULL) info_->::mmStr::Clear();
  clear_has_info();
}
inline const ::mmStr& transfer_query_req::info() const {
  // @@protoc_insertion_point(field_get:transfer_query_req.info)
  return info_ != NULL ? *info_
                         : *::mmStr::internal_default_instance();
}
inline ::mmStr* transfer_query_req::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::mmStr;
  }
  // @@protoc_insertion_point(field_mutable:transfer_query_req.info)
  return info_;
}
inline ::mmStr* transfer_query_req::release_info() {
  // @@protoc_insertion_point(field_release:transfer_query_req.info)
  clear_has_info();
  ::mmStr* temp = info_;
  info_ = NULL;
  return temp;
}
inline void transfer_query_req::set_allocated_info(::mmStr* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:transfer_query_req.info)
}

// -------------------------------------------------------------------

// transfer_query_resp

// optional .mmStr res = 2;
inline bool transfer_query_resp::has_res() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void transfer_query_resp::set_has_res() {
  _has_bits_[0] |= 0x00000002u;
}
inline void transfer_query_resp::clear_has_res() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void transfer_query_resp::clear_res() {
  if (res_ != NULL) res_->::mmStr::Clear();
  clear_has_res();
}
inline const ::mmStr& transfer_query_resp::res() const {
  // @@protoc_insertion_point(field_get:transfer_query_resp.res)
  return res_ != NULL ? *res_
                         : *::mmStr::internal_default_instance();
}
inline ::mmStr* transfer_query_resp::mutable_res() {
  set_has_res();
  if (res_ == NULL) {
    res_ = new ::mmStr;
  }
  // @@protoc_insertion_point(field_mutable:transfer_query_resp.res)
  return res_;
}
inline ::mmStr* transfer_query_resp::release_res() {
  // @@protoc_insertion_point(field_release:transfer_query_resp.res)
  clear_has_res();
  ::mmStr* temp = res_;
  res_ = NULL;
  return temp;
}
inline void transfer_query_resp::set_allocated_res(::mmStr* res) {
  delete res_;
  res_ = res;
  if (res) {
    set_has_res();
  } else {
    clear_has_res();
  }
  // @@protoc_insertion_point(field_set_allocated:transfer_query_resp.res)
}

// optional int32 ret_code = 6;
inline bool transfer_query_resp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void transfer_query_resp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void transfer_query_resp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void transfer_query_resp::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::google::protobuf::int32 transfer_query_resp::ret_code() const {
  // @@protoc_insertion_point(field_get:transfer_query_resp.ret_code)
  return ret_code_;
}
inline void transfer_query_resp::set_ret_code(::google::protobuf::int32 value) {
  set_has_ret_code();
  ret_code_ = value;
  // @@protoc_insertion_point(field_set:transfer_query_resp.ret_code)
}

// optional string ret_msg = 7;
inline bool transfer_query_resp::has_ret_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void transfer_query_resp::set_has_ret_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void transfer_query_resp::clear_has_ret_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void transfer_query_resp::clear_ret_msg() {
  ret_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ret_msg();
}
inline const ::std::string& transfer_query_resp::ret_msg() const {
  // @@protoc_insertion_point(field_get:transfer_query_resp.ret_msg)
  return ret_msg_.GetNoArena();
}
inline void transfer_query_resp::set_ret_msg(const ::std::string& value) {
  set_has_ret_msg();
  ret_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:transfer_query_resp.ret_msg)
}
#if LANG_CXX11
inline void transfer_query_resp::set_ret_msg(::std::string&& value) {
  set_has_ret_msg();
  ret_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:transfer_query_resp.ret_msg)
}
#endif
inline void transfer_query_resp::set_ret_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ret_msg();
  ret_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:transfer_query_resp.ret_msg)
}
inline void transfer_query_resp::set_ret_msg(const char* value, size_t size) {
  set_has_ret_msg();
  ret_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:transfer_query_resp.ret_msg)
}
inline ::std::string* transfer_query_resp::mutable_ret_msg() {
  set_has_ret_msg();
  // @@protoc_insertion_point(field_mutable:transfer_query_resp.ret_msg)
  return ret_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* transfer_query_resp::release_ret_msg() {
  // @@protoc_insertion_point(field_release:transfer_query_resp.ret_msg)
  clear_has_ret_msg();
  return ret_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void transfer_query_resp::set_allocated_ret_msg(::std::string* ret_msg) {
  if (ret_msg != NULL) {
    set_has_ret_msg();
  } else {
    clear_has_ret_msg();
  }
  ret_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ret_msg);
  // @@protoc_insertion_point(field_set_allocated:transfer_query_resp.ret_msg)
}

// -------------------------------------------------------------------

// get_contact_req_TAG7

// optional string tag1 = 1;
inline bool get_contact_req_TAG7::has_tag1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void get_contact_req_TAG7::set_has_tag1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void get_contact_req_TAG7::clear_has_tag1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void get_contact_req_TAG7::clear_tag1() {
  tag1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag1();
}
inline const ::std::string& get_contact_req_TAG7::tag1() const {
  // @@protoc_insertion_point(field_get:get_contact_req.TAG7.tag1)
  return tag1_.GetNoArena();
}
inline void get_contact_req_TAG7::set_tag1(const ::std::string& value) {
  set_has_tag1();
  tag1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:get_contact_req.TAG7.tag1)
}
#if LANG_CXX11
inline void get_contact_req_TAG7::set_tag1(::std::string&& value) {
  set_has_tag1();
  tag1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:get_contact_req.TAG7.tag1)
}
#endif
inline void get_contact_req_TAG7::set_tag1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag1();
  tag1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:get_contact_req.TAG7.tag1)
}
inline void get_contact_req_TAG7::set_tag1(const char* value, size_t size) {
  set_has_tag1();
  tag1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:get_contact_req.TAG7.tag1)
}
inline ::std::string* get_contact_req_TAG7::mutable_tag1() {
  set_has_tag1();
  // @@protoc_insertion_point(field_mutable:get_contact_req.TAG7.tag1)
  return tag1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* get_contact_req_TAG7::release_tag1() {
  // @@protoc_insertion_point(field_release:get_contact_req.TAG7.tag1)
  clear_has_tag1();
  return tag1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void get_contact_req_TAG7::set_allocated_tag1(::std::string* tag1) {
  if (tag1 != NULL) {
    set_has_tag1();
  } else {
    clear_has_tag1();
  }
  tag1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag1);
  // @@protoc_insertion_point(field_set_allocated:get_contact_req.TAG7.tag1)
}

// -------------------------------------------------------------------

// get_contact_req

// optional .LoginInfo login = 1;
inline bool get_contact_req::has_login() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void get_contact_req::set_has_login() {
  _has_bits_[0] |= 0x00000001u;
}
inline void get_contact_req::clear_has_login() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void get_contact_req::clear_login() {
  if (login_ != NULL) login_->::LoginInfo::Clear();
  clear_has_login();
}
inline const ::LoginInfo& get_contact_req::login() const {
  // @@protoc_insertion_point(field_get:get_contact_req.login)
  return login_ != NULL ? *login_
                         : *::LoginInfo::internal_default_instance();
}
inline ::LoginInfo* get_contact_req::mutable_login() {
  set_has_login();
  if (login_ == NULL) {
    login_ = new ::LoginInfo;
  }
  // @@protoc_insertion_point(field_mutable:get_contact_req.login)
  return login_;
}
inline ::LoginInfo* get_contact_req::release_login() {
  // @@protoc_insertion_point(field_release:get_contact_req.login)
  clear_has_login();
  ::LoginInfo* temp = login_;
  login_ = NULL;
  return temp;
}
inline void get_contact_req::set_allocated_login(::LoginInfo* login) {
  delete login_;
  login_ = login;
  if (login) {
    set_has_login();
  } else {
    clear_has_login();
  }
  // @@protoc_insertion_point(field_set_allocated:get_contact_req.login)
}

// optional int32 tag2 = 2;
inline bool get_contact_req::has_tag2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void get_contact_req::set_has_tag2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void get_contact_req::clear_has_tag2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void get_contact_req::clear_tag2() {
  tag2_ = 0;
  clear_has_tag2();
}
inline ::google::protobuf::int32 get_contact_req::tag2() const {
  // @@protoc_insertion_point(field_get:get_contact_req.tag2)
  return tag2_;
}
inline void get_contact_req::set_tag2(::google::protobuf::int32 value) {
  set_has_tag2();
  tag2_ = value;
  // @@protoc_insertion_point(field_set:get_contact_req.tag2)
}

// optional .Wxid wxid = 3;
inline bool get_contact_req::has_wxid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void get_contact_req::set_has_wxid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void get_contact_req::clear_has_wxid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void get_contact_req::clear_wxid() {
  if (wxid_ != NULL) wxid_->::Wxid::Clear();
  clear_has_wxid();
}
inline const ::Wxid& get_contact_req::wxid() const {
  // @@protoc_insertion_point(field_get:get_contact_req.wxid)
  return wxid_ != NULL ? *wxid_
                         : *::Wxid::internal_default_instance();
}
inline ::Wxid* get_contact_req::mutable_wxid() {
  set_has_wxid();
  if (wxid_ == NULL) {
    wxid_ = new ::Wxid;
  }
  // @@protoc_insertion_point(field_mutable:get_contact_req.wxid)
  return wxid_;
}
inline ::Wxid* get_contact_req::release_wxid() {
  // @@protoc_insertion_point(field_release:get_contact_req.wxid)
  clear_has_wxid();
  ::Wxid* temp = wxid_;
  wxid_ = NULL;
  return temp;
}
inline void get_contact_req::set_allocated_wxid(::Wxid* wxid) {
  delete wxid_;
  wxid_ = wxid;
  if (wxid) {
    set_has_wxid();
  } else {
    clear_has_wxid();
  }
  // @@protoc_insertion_point(field_set_allocated:get_contact_req.wxid)
}

// optional int32 tag4 = 4;
inline bool get_contact_req::has_tag4() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void get_contact_req::set_has_tag4() {
  _has_bits_[0] |= 0x00000010u;
}
inline void get_contact_req::clear_has_tag4() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void get_contact_req::clear_tag4() {
  tag4_ = 0;
  clear_has_tag4();
}
inline ::google::protobuf::int32 get_contact_req::tag4() const {
  // @@protoc_insertion_point(field_get:get_contact_req.tag4)
  return tag4_;
}
inline void get_contact_req::set_tag4(::google::protobuf::int32 value) {
  set_has_tag4();
  tag4_ = value;
  // @@protoc_insertion_point(field_set:get_contact_req.tag4)
}

// optional int32 tag6 = 6;
inline bool get_contact_req::has_tag6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void get_contact_req::set_has_tag6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void get_contact_req::clear_has_tag6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void get_contact_req::clear_tag6() {
  tag6_ = 0;
  clear_has_tag6();
}
inline ::google::protobuf::int32 get_contact_req::tag6() const {
  // @@protoc_insertion_point(field_get:get_contact_req.tag6)
  return tag6_;
}
inline void get_contact_req::set_tag6(::google::protobuf::int32 value) {
  set_has_tag6();
  tag6_ = value;
  // @@protoc_insertion_point(field_set:get_contact_req.tag6)
}

// optional .get_contact_req.TAG7 tag7 = 7;
inline bool get_contact_req::has_tag7() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void get_contact_req::set_has_tag7() {
  _has_bits_[0] |= 0x00000004u;
}
inline void get_contact_req::clear_has_tag7() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void get_contact_req::clear_tag7() {
  if (tag7_ != NULL) tag7_->::get_contact_req_TAG7::Clear();
  clear_has_tag7();
}
inline const ::get_contact_req_TAG7& get_contact_req::tag7() const {
  // @@protoc_insertion_point(field_get:get_contact_req.tag7)
  return tag7_ != NULL ? *tag7_
                         : *::get_contact_req_TAG7::internal_default_instance();
}
inline ::get_contact_req_TAG7* get_contact_req::mutable_tag7() {
  set_has_tag7();
  if (tag7_ == NULL) {
    tag7_ = new ::get_contact_req_TAG7;
  }
  // @@protoc_insertion_point(field_mutable:get_contact_req.tag7)
  return tag7_;
}
inline ::get_contact_req_TAG7* get_contact_req::release_tag7() {
  // @@protoc_insertion_point(field_release:get_contact_req.tag7)
  clear_has_tag7();
  ::get_contact_req_TAG7* temp = tag7_;
  tag7_ = NULL;
  return temp;
}
inline void get_contact_req::set_allocated_tag7(::get_contact_req_TAG7* tag7) {
  delete tag7_;
  tag7_ = tag7;
  if (tag7) {
    set_has_tag7();
  } else {
    clear_has_tag7();
  }
  // @@protoc_insertion_point(field_set_allocated:get_contact_req.tag7)
}

// optional int32 tag8 = 8;
inline bool get_contact_req::has_tag8() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void get_contact_req::set_has_tag8() {
  _has_bits_[0] |= 0x00000040u;
}
inline void get_contact_req::clear_has_tag8() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void get_contact_req::clear_tag8() {
  tag8_ = 0;
  clear_has_tag8();
}
inline ::google::protobuf::int32 get_contact_req::tag8() const {
  // @@protoc_insertion_point(field_get:get_contact_req.tag8)
  return tag8_;
}
inline void get_contact_req::set_tag8(::google::protobuf::int32 value) {
  set_has_tag8();
  tag8_ = value;
  // @@protoc_insertion_point(field_set:get_contact_req.tag8)
}

// -------------------------------------------------------------------

// get_contact_resp_ticket_info

// optional string wxid = 1;
inline bool get_contact_resp_ticket_info::has_wxid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void get_contact_resp_ticket_info::set_has_wxid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void get_contact_resp_ticket_info::clear_has_wxid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void get_contact_resp_ticket_info::clear_wxid() {
  wxid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_wxid();
}
inline const ::std::string& get_contact_resp_ticket_info::wxid() const {
  // @@protoc_insertion_point(field_get:get_contact_resp.ticket_info.wxid)
  return wxid_.GetNoArena();
}
inline void get_contact_resp_ticket_info::set_wxid(const ::std::string& value) {
  set_has_wxid();
  wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:get_contact_resp.ticket_info.wxid)
}
#if LANG_CXX11
inline void get_contact_resp_ticket_info::set_wxid(::std::string&& value) {
  set_has_wxid();
  wxid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:get_contact_resp.ticket_info.wxid)
}
#endif
inline void get_contact_resp_ticket_info::set_wxid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_wxid();
  wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:get_contact_resp.ticket_info.wxid)
}
inline void get_contact_resp_ticket_info::set_wxid(const char* value, size_t size) {
  set_has_wxid();
  wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:get_contact_resp.ticket_info.wxid)
}
inline ::std::string* get_contact_resp_ticket_info::mutable_wxid() {
  set_has_wxid();
  // @@protoc_insertion_point(field_mutable:get_contact_resp.ticket_info.wxid)
  return wxid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* get_contact_resp_ticket_info::release_wxid() {
  // @@protoc_insertion_point(field_release:get_contact_resp.ticket_info.wxid)
  clear_has_wxid();
  return wxid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void get_contact_resp_ticket_info::set_allocated_wxid(::std::string* wxid) {
  if (wxid != NULL) {
    set_has_wxid();
  } else {
    clear_has_wxid();
  }
  wxid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wxid);
  // @@protoc_insertion_point(field_set_allocated:get_contact_resp.ticket_info.wxid)
}

// optional string ticket = 2;
inline bool get_contact_resp_ticket_info::has_ticket() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void get_contact_resp_ticket_info::set_has_ticket() {
  _has_bits_[0] |= 0x00000002u;
}
inline void get_contact_resp_ticket_info::clear_has_ticket() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void get_contact_resp_ticket_info::clear_ticket() {
  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ticket();
}
inline const ::std::string& get_contact_resp_ticket_info::ticket() const {
  // @@protoc_insertion_point(field_get:get_contact_resp.ticket_info.ticket)
  return ticket_.GetNoArena();
}
inline void get_contact_resp_ticket_info::set_ticket(const ::std::string& value) {
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:get_contact_resp.ticket_info.ticket)
}
#if LANG_CXX11
inline void get_contact_resp_ticket_info::set_ticket(::std::string&& value) {
  set_has_ticket();
  ticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:get_contact_resp.ticket_info.ticket)
}
#endif
inline void get_contact_resp_ticket_info::set_ticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:get_contact_resp.ticket_info.ticket)
}
inline void get_contact_resp_ticket_info::set_ticket(const char* value, size_t size) {
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:get_contact_resp.ticket_info.ticket)
}
inline ::std::string* get_contact_resp_ticket_info::mutable_ticket() {
  set_has_ticket();
  // @@protoc_insertion_point(field_mutable:get_contact_resp.ticket_info.ticket)
  return ticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* get_contact_resp_ticket_info::release_ticket() {
  // @@protoc_insertion_point(field_release:get_contact_resp.ticket_info.ticket)
  clear_has_ticket();
  return ticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void get_contact_resp_ticket_info::set_allocated_ticket(::std::string* ticket) {
  if (ticket != NULL) {
    set_has_ticket();
  } else {
    clear_has_ticket();
  }
  ticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ticket);
  // @@protoc_insertion_point(field_set_allocated:get_contact_resp.ticket_info.ticket)
}

// -------------------------------------------------------------------

// get_contact_resp

// optional .contact_info info = 3;
inline bool get_contact_resp::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void get_contact_resp::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void get_contact_resp::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void get_contact_resp::clear_info() {
  if (info_ != NULL) info_->::contact_info::Clear();
  clear_has_info();
}
inline const ::contact_info& get_contact_resp::info() const {
  // @@protoc_insertion_point(field_get:get_contact_resp.info)
  return info_ != NULL ? *info_
                         : *::contact_info::internal_default_instance();
}
inline ::contact_info* get_contact_resp::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::contact_info;
  }
  // @@protoc_insertion_point(field_mutable:get_contact_resp.info)
  return info_;
}
inline ::contact_info* get_contact_resp::release_info() {
  // @@protoc_insertion_point(field_release:get_contact_resp.info)
  clear_has_info();
  ::contact_info* temp = info_;
  info_ = NULL;
  return temp;
}
inline void get_contact_resp::set_allocated_info(::contact_info* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:get_contact_resp.info)
}

// optional .get_contact_resp.ticket_info ticket = 5;
inline bool get_contact_resp::has_ticket() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void get_contact_resp::set_has_ticket() {
  _has_bits_[0] |= 0x00000002u;
}
inline void get_contact_resp::clear_has_ticket() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void get_contact_resp::clear_ticket() {
  if (ticket_ != NULL) ticket_->::get_contact_resp_ticket_info::Clear();
  clear_has_ticket();
}
inline const ::get_contact_resp_ticket_info& get_contact_resp::ticket() const {
  // @@protoc_insertion_point(field_get:get_contact_resp.ticket)
  return ticket_ != NULL ? *ticket_
                         : *::get_contact_resp_ticket_info::internal_default_instance();
}
inline ::get_contact_resp_ticket_info* get_contact_resp::mutable_ticket() {
  set_has_ticket();
  if (ticket_ == NULL) {
    ticket_ = new ::get_contact_resp_ticket_info;
  }
  // @@protoc_insertion_point(field_mutable:get_contact_resp.ticket)
  return ticket_;
}
inline ::get_contact_resp_ticket_info* get_contact_resp::release_ticket() {
  // @@protoc_insertion_point(field_release:get_contact_resp.ticket)
  clear_has_ticket();
  ::get_contact_resp_ticket_info* temp = ticket_;
  ticket_ = NULL;
  return temp;
}
inline void get_contact_resp::set_allocated_ticket(::get_contact_resp_ticket_info* ticket) {
  delete ticket_;
  ticket_ = ticket;
  if (ticket) {
    set_has_ticket();
  } else {
    clear_has_ticket();
  }
  // @@protoc_insertion_point(field_set_allocated:get_contact_resp.ticket)
}

// -------------------------------------------------------------------

// create_chatroom_req_TAG2

// optional string tag1 = 1;
inline bool create_chatroom_req_TAG2::has_tag1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void create_chatroom_req_TAG2::set_has_tag1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void create_chatroom_req_TAG2::clear_has_tag1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void create_chatroom_req_TAG2::clear_tag1() {
  tag1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag1();
}
inline const ::std::string& create_chatroom_req_TAG2::tag1() const {
  // @@protoc_insertion_point(field_get:create_chatroom_req.TAG2.tag1)
  return tag1_.GetNoArena();
}
inline void create_chatroom_req_TAG2::set_tag1(const ::std::string& value) {
  set_has_tag1();
  tag1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:create_chatroom_req.TAG2.tag1)
}
#if LANG_CXX11
inline void create_chatroom_req_TAG2::set_tag1(::std::string&& value) {
  set_has_tag1();
  tag1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:create_chatroom_req.TAG2.tag1)
}
#endif
inline void create_chatroom_req_TAG2::set_tag1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag1();
  tag1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:create_chatroom_req.TAG2.tag1)
}
inline void create_chatroom_req_TAG2::set_tag1(const char* value, size_t size) {
  set_has_tag1();
  tag1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:create_chatroom_req.TAG2.tag1)
}
inline ::std::string* create_chatroom_req_TAG2::mutable_tag1() {
  set_has_tag1();
  // @@protoc_insertion_point(field_mutable:create_chatroom_req.TAG2.tag1)
  return tag1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* create_chatroom_req_TAG2::release_tag1() {
  // @@protoc_insertion_point(field_release:create_chatroom_req.TAG2.tag1)
  clear_has_tag1();
  return tag1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void create_chatroom_req_TAG2::set_allocated_tag1(::std::string* tag1) {
  if (tag1 != NULL) {
    set_has_tag1();
  } else {
    clear_has_tag1();
  }
  tag1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag1);
  // @@protoc_insertion_point(field_set_allocated:create_chatroom_req.TAG2.tag1)
}

// -------------------------------------------------------------------

// create_chatroom_req_member_info

// optional .Wxid wxid = 1;
inline bool create_chatroom_req_member_info::has_wxid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void create_chatroom_req_member_info::set_has_wxid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void create_chatroom_req_member_info::clear_has_wxid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void create_chatroom_req_member_info::clear_wxid() {
  if (wxid_ != NULL) wxid_->::Wxid::Clear();
  clear_has_wxid();
}
inline const ::Wxid& create_chatroom_req_member_info::wxid() const {
  // @@protoc_insertion_point(field_get:create_chatroom_req.member_info.wxid)
  return wxid_ != NULL ? *wxid_
                         : *::Wxid::internal_default_instance();
}
inline ::Wxid* create_chatroom_req_member_info::mutable_wxid() {
  set_has_wxid();
  if (wxid_ == NULL) {
    wxid_ = new ::Wxid;
  }
  // @@protoc_insertion_point(field_mutable:create_chatroom_req.member_info.wxid)
  return wxid_;
}
inline ::Wxid* create_chatroom_req_member_info::release_wxid() {
  // @@protoc_insertion_point(field_release:create_chatroom_req.member_info.wxid)
  clear_has_wxid();
  ::Wxid* temp = wxid_;
  wxid_ = NULL;
  return temp;
}
inline void create_chatroom_req_member_info::set_allocated_wxid(::Wxid* wxid) {
  delete wxid_;
  wxid_ = wxid;
  if (wxid) {
    set_has_wxid();
  } else {
    clear_has_wxid();
  }
  // @@protoc_insertion_point(field_set_allocated:create_chatroom_req.member_info.wxid)
}

// -------------------------------------------------------------------

// create_chatroom_req

// optional .LoginInfo login = 1;
inline bool create_chatroom_req::has_login() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void create_chatroom_req::set_has_login() {
  _has_bits_[0] |= 0x00000001u;
}
inline void create_chatroom_req::clear_has_login() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void create_chatroom_req::clear_login() {
  if (login_ != NULL) login_->::LoginInfo::Clear();
  clear_has_login();
}
inline const ::LoginInfo& create_chatroom_req::login() const {
  // @@protoc_insertion_point(field_get:create_chatroom_req.login)
  return login_ != NULL ? *login_
                         : *::LoginInfo::internal_default_instance();
}
inline ::LoginInfo* create_chatroom_req::mutable_login() {
  set_has_login();
  if (login_ == NULL) {
    login_ = new ::LoginInfo;
  }
  // @@protoc_insertion_point(field_mutable:create_chatroom_req.login)
  return login_;
}
inline ::LoginInfo* create_chatroom_req::release_login() {
  // @@protoc_insertion_point(field_release:create_chatroom_req.login)
  clear_has_login();
  ::LoginInfo* temp = login_;
  login_ = NULL;
  return temp;
}
inline void create_chatroom_req::set_allocated_login(::LoginInfo* login) {
  delete login_;
  login_ = login;
  if (login) {
    set_has_login();
  } else {
    clear_has_login();
  }
  // @@protoc_insertion_point(field_set_allocated:create_chatroom_req.login)
}

// optional .create_chatroom_req.TAG2 tag2 = 2;
inline bool create_chatroom_req::has_tag2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void create_chatroom_req::set_has_tag2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void create_chatroom_req::clear_has_tag2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void create_chatroom_req::clear_tag2() {
  if (tag2_ != NULL) tag2_->::create_chatroom_req_TAG2::Clear();
  clear_has_tag2();
}
inline const ::create_chatroom_req_TAG2& create_chatroom_req::tag2() const {
  // @@protoc_insertion_point(field_get:create_chatroom_req.tag2)
  return tag2_ != NULL ? *tag2_
                         : *::create_chatroom_req_TAG2::internal_default_instance();
}
inline ::create_chatroom_req_TAG2* create_chatroom_req::mutable_tag2() {
  set_has_tag2();
  if (tag2_ == NULL) {
    tag2_ = new ::create_chatroom_req_TAG2;
  }
  // @@protoc_insertion_point(field_mutable:create_chatroom_req.tag2)
  return tag2_;
}
inline ::create_chatroom_req_TAG2* create_chatroom_req::release_tag2() {
  // @@protoc_insertion_point(field_release:create_chatroom_req.tag2)
  clear_has_tag2();
  ::create_chatroom_req_TAG2* temp = tag2_;
  tag2_ = NULL;
  return temp;
}
inline void create_chatroom_req::set_allocated_tag2(::create_chatroom_req_TAG2* tag2) {
  delete tag2_;
  tag2_ = tag2;
  if (tag2) {
    set_has_tag2();
  } else {
    clear_has_tag2();
  }
  // @@protoc_insertion_point(field_set_allocated:create_chatroom_req.tag2)
}

// optional int32 member_cnt = 3;
inline bool create_chatroom_req::has_member_cnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void create_chatroom_req::set_has_member_cnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void create_chatroom_req::clear_has_member_cnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void create_chatroom_req::clear_member_cnt() {
  member_cnt_ = 0;
  clear_has_member_cnt();
}
inline ::google::protobuf::int32 create_chatroom_req::member_cnt() const {
  // @@protoc_insertion_point(field_get:create_chatroom_req.member_cnt)
  return member_cnt_;
}
inline void create_chatroom_req::set_member_cnt(::google::protobuf::int32 value) {
  set_has_member_cnt();
  member_cnt_ = value;
  // @@protoc_insertion_point(field_set:create_chatroom_req.member_cnt)
}

// repeated .create_chatroom_req.member_info member = 4;
inline int create_chatroom_req::member_size() const {
  return member_.size();
}
inline void create_chatroom_req::clear_member() {
  member_.Clear();
}
inline const ::create_chatroom_req_member_info& create_chatroom_req::member(int index) const {
  // @@protoc_insertion_point(field_get:create_chatroom_req.member)
  return member_.Get(index);
}
inline ::create_chatroom_req_member_info* create_chatroom_req::mutable_member(int index) {
  // @@protoc_insertion_point(field_mutable:create_chatroom_req.member)
  return member_.Mutable(index);
}
inline ::create_chatroom_req_member_info* create_chatroom_req::add_member() {
  // @@protoc_insertion_point(field_add:create_chatroom_req.member)
  return member_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::create_chatroom_req_member_info >*
create_chatroom_req::mutable_member() {
  // @@protoc_insertion_point(field_mutable_list:create_chatroom_req.member)
  return &member_;
}
inline const ::google::protobuf::RepeatedPtrField< ::create_chatroom_req_member_info >&
create_chatroom_req::member() const {
  // @@protoc_insertion_point(field_list:create_chatroom_req.member)
  return member_;
}

// optional int32 tag5 = 5;
inline bool create_chatroom_req::has_tag5() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void create_chatroom_req::set_has_tag5() {
  _has_bits_[0] |= 0x00000008u;
}
inline void create_chatroom_req::clear_has_tag5() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void create_chatroom_req::clear_tag5() {
  tag5_ = 0;
  clear_has_tag5();
}
inline ::google::protobuf::int32 create_chatroom_req::tag5() const {
  // @@protoc_insertion_point(field_get:create_chatroom_req.tag5)
  return tag5_;
}
inline void create_chatroom_req::set_tag5(::google::protobuf::int32 value) {
  set_has_tag5();
  tag5_ = value;
  // @@protoc_insertion_point(field_set:create_chatroom_req.tag5)
}

// -------------------------------------------------------------------

// create_chatroom_resp_result_err_msg

// optional string msg = 1;
inline bool create_chatroom_resp_result_err_msg::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void create_chatroom_resp_result_err_msg::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void create_chatroom_resp_result_err_msg::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void create_chatroom_resp_result_err_msg::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& create_chatroom_resp_result_err_msg::msg() const {
  // @@protoc_insertion_point(field_get:create_chatroom_resp.result.err_msg.msg)
  return msg_.GetNoArena();
}
inline void create_chatroom_resp_result_err_msg::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:create_chatroom_resp.result.err_msg.msg)
}
#if LANG_CXX11
inline void create_chatroom_resp_result_err_msg::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:create_chatroom_resp.result.err_msg.msg)
}
#endif
inline void create_chatroom_resp_result_err_msg::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:create_chatroom_resp.result.err_msg.msg)
}
inline void create_chatroom_resp_result_err_msg::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:create_chatroom_resp.result.err_msg.msg)
}
inline ::std::string* create_chatroom_resp_result_err_msg::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:create_chatroom_resp.result.err_msg.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* create_chatroom_resp_result_err_msg::release_msg() {
  // @@protoc_insertion_point(field_release:create_chatroom_resp.result.err_msg.msg)
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void create_chatroom_resp_result_err_msg::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:create_chatroom_resp.result.err_msg.msg)
}

// -------------------------------------------------------------------

// create_chatroom_resp_result

// optional int32 code = 1;
inline bool create_chatroom_resp_result::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void create_chatroom_resp_result::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void create_chatroom_resp_result::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void create_chatroom_resp_result::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 create_chatroom_resp_result::code() const {
  // @@protoc_insertion_point(field_get:create_chatroom_resp.result.code)
  return code_;
}
inline void create_chatroom_resp_result::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:create_chatroom_resp.result.code)
}

// optional .create_chatroom_resp.result.err_msg msg = 2;
inline bool create_chatroom_resp_result::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void create_chatroom_resp_result::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void create_chatroom_resp_result::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void create_chatroom_resp_result::clear_msg() {
  if (msg_ != NULL) msg_->::create_chatroom_resp_result_err_msg::Clear();
  clear_has_msg();
}
inline const ::create_chatroom_resp_result_err_msg& create_chatroom_resp_result::msg() const {
  // @@protoc_insertion_point(field_get:create_chatroom_resp.result.msg)
  return msg_ != NULL ? *msg_
                         : *::create_chatroom_resp_result_err_msg::internal_default_instance();
}
inline ::create_chatroom_resp_result_err_msg* create_chatroom_resp_result::mutable_msg() {
  set_has_msg();
  if (msg_ == NULL) {
    msg_ = new ::create_chatroom_resp_result_err_msg;
  }
  // @@protoc_insertion_point(field_mutable:create_chatroom_resp.result.msg)
  return msg_;
}
inline ::create_chatroom_resp_result_err_msg* create_chatroom_resp_result::release_msg() {
  // @@protoc_insertion_point(field_release:create_chatroom_resp.result.msg)
  clear_has_msg();
  ::create_chatroom_resp_result_err_msg* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline void create_chatroom_resp_result::set_allocated_msg(::create_chatroom_resp_result_err_msg* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  // @@protoc_insertion_point(field_set_allocated:create_chatroom_resp.result.msg)
}

// -------------------------------------------------------------------

// create_chatroom_resp_member_info_nick_name_info

// optional string name = 1;
inline bool create_chatroom_resp_member_info_nick_name_info::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void create_chatroom_resp_member_info_nick_name_info::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void create_chatroom_resp_member_info_nick_name_info::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void create_chatroom_resp_member_info_nick_name_info::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& create_chatroom_resp_member_info_nick_name_info::name() const {
  // @@protoc_insertion_point(field_get:create_chatroom_resp.member_info.nick_name_info.name)
  return name_.GetNoArena();
}
inline void create_chatroom_resp_member_info_nick_name_info::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:create_chatroom_resp.member_info.nick_name_info.name)
}
#if LANG_CXX11
inline void create_chatroom_resp_member_info_nick_name_info::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:create_chatroom_resp.member_info.nick_name_info.name)
}
#endif
inline void create_chatroom_resp_member_info_nick_name_info::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:create_chatroom_resp.member_info.nick_name_info.name)
}
inline void create_chatroom_resp_member_info_nick_name_info::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:create_chatroom_resp.member_info.nick_name_info.name)
}
inline ::std::string* create_chatroom_resp_member_info_nick_name_info::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:create_chatroom_resp.member_info.nick_name_info.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* create_chatroom_resp_member_info_nick_name_info::release_name() {
  // @@protoc_insertion_point(field_release:create_chatroom_resp.member_info.nick_name_info.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void create_chatroom_resp_member_info_nick_name_info::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:create_chatroom_resp.member_info.nick_name_info.name)
}

// -------------------------------------------------------------------

// create_chatroom_resp_member_info

// optional .Wxid wxid = 1;
inline bool create_chatroom_resp_member_info::has_wxid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void create_chatroom_resp_member_info::set_has_wxid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void create_chatroom_resp_member_info::clear_has_wxid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void create_chatroom_resp_member_info::clear_wxid() {
  if (wxid_ != NULL) wxid_->::Wxid::Clear();
  clear_has_wxid();
}
inline const ::Wxid& create_chatroom_resp_member_info::wxid() const {
  // @@protoc_insertion_point(field_get:create_chatroom_resp.member_info.wxid)
  return wxid_ != NULL ? *wxid_
                         : *::Wxid::internal_default_instance();
}
inline ::Wxid* create_chatroom_resp_member_info::mutable_wxid() {
  set_has_wxid();
  if (wxid_ == NULL) {
    wxid_ = new ::Wxid;
  }
  // @@protoc_insertion_point(field_mutable:create_chatroom_resp.member_info.wxid)
  return wxid_;
}
inline ::Wxid* create_chatroom_resp_member_info::release_wxid() {
  // @@protoc_insertion_point(field_release:create_chatroom_resp.member_info.wxid)
  clear_has_wxid();
  ::Wxid* temp = wxid_;
  wxid_ = NULL;
  return temp;
}
inline void create_chatroom_resp_member_info::set_allocated_wxid(::Wxid* wxid) {
  delete wxid_;
  wxid_ = wxid;
  if (wxid) {
    set_has_wxid();
  } else {
    clear_has_wxid();
  }
  // @@protoc_insertion_point(field_set_allocated:create_chatroom_resp.member_info.wxid)
}

// optional .create_chatroom_resp.member_info.nick_name_info nick_name = 3;
inline bool create_chatroom_resp_member_info::has_nick_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void create_chatroom_resp_member_info::set_has_nick_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void create_chatroom_resp_member_info::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void create_chatroom_resp_member_info::clear_nick_name() {
  if (nick_name_ != NULL) nick_name_->::create_chatroom_resp_member_info_nick_name_info::Clear();
  clear_has_nick_name();
}
inline const ::create_chatroom_resp_member_info_nick_name_info& create_chatroom_resp_member_info::nick_name() const {
  // @@protoc_insertion_point(field_get:create_chatroom_resp.member_info.nick_name)
  return nick_name_ != NULL ? *nick_name_
                         : *::create_chatroom_resp_member_info_nick_name_info::internal_default_instance();
}
inline ::create_chatroom_resp_member_info_nick_name_info* create_chatroom_resp_member_info::mutable_nick_name() {
  set_has_nick_name();
  if (nick_name_ == NULL) {
    nick_name_ = new ::create_chatroom_resp_member_info_nick_name_info;
  }
  // @@protoc_insertion_point(field_mutable:create_chatroom_resp.member_info.nick_name)
  return nick_name_;
}
inline ::create_chatroom_resp_member_info_nick_name_info* create_chatroom_resp_member_info::release_nick_name() {
  // @@protoc_insertion_point(field_release:create_chatroom_resp.member_info.nick_name)
  clear_has_nick_name();
  ::create_chatroom_resp_member_info_nick_name_info* temp = nick_name_;
  nick_name_ = NULL;
  return temp;
}
inline void create_chatroom_resp_member_info::set_allocated_nick_name(::create_chatroom_resp_member_info_nick_name_info* nick_name) {
  delete nick_name_;
  nick_name_ = nick_name;
  if (nick_name) {
    set_has_nick_name();
  } else {
    clear_has_nick_name();
  }
  // @@protoc_insertion_point(field_set_allocated:create_chatroom_resp.member_info.nick_name)
}

// optional string qianming = 15;
inline bool create_chatroom_resp_member_info::has_qianming() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void create_chatroom_resp_member_info::set_has_qianming() {
  _has_bits_[0] |= 0x00000001u;
}
inline void create_chatroom_resp_member_info::clear_has_qianming() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void create_chatroom_resp_member_info::clear_qianming() {
  qianming_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_qianming();
}
inline const ::std::string& create_chatroom_resp_member_info::qianming() const {
  // @@protoc_insertion_point(field_get:create_chatroom_resp.member_info.qianming)
  return qianming_.GetNoArena();
}
inline void create_chatroom_resp_member_info::set_qianming(const ::std::string& value) {
  set_has_qianming();
  qianming_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:create_chatroom_resp.member_info.qianming)
}
#if LANG_CXX11
inline void create_chatroom_resp_member_info::set_qianming(::std::string&& value) {
  set_has_qianming();
  qianming_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:create_chatroom_resp.member_info.qianming)
}
#endif
inline void create_chatroom_resp_member_info::set_qianming(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_qianming();
  qianming_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:create_chatroom_resp.member_info.qianming)
}
inline void create_chatroom_resp_member_info::set_qianming(const char* value, size_t size) {
  set_has_qianming();
  qianming_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:create_chatroom_resp.member_info.qianming)
}
inline ::std::string* create_chatroom_resp_member_info::mutable_qianming() {
  set_has_qianming();
  // @@protoc_insertion_point(field_mutable:create_chatroom_resp.member_info.qianming)
  return qianming_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* create_chatroom_resp_member_info::release_qianming() {
  // @@protoc_insertion_point(field_release:create_chatroom_resp.member_info.qianming)
  clear_has_qianming();
  return qianming_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void create_chatroom_resp_member_info::set_allocated_qianming(::std::string* qianming) {
  if (qianming != NULL) {
    set_has_qianming();
  } else {
    clear_has_qianming();
  }
  qianming_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), qianming);
  // @@protoc_insertion_point(field_set_allocated:create_chatroom_resp.member_info.qianming)
}

// -------------------------------------------------------------------

// create_chatroom_resp_chatroom_avatar

// optional int32 len = 1;
inline bool create_chatroom_resp_chatroom_avatar::has_len() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void create_chatroom_resp_chatroom_avatar::set_has_len() {
  _has_bits_[0] |= 0x00000002u;
}
inline void create_chatroom_resp_chatroom_avatar::clear_has_len() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void create_chatroom_resp_chatroom_avatar::clear_len() {
  len_ = 0;
  clear_has_len();
}
inline ::google::protobuf::int32 create_chatroom_resp_chatroom_avatar::len() const {
  // @@protoc_insertion_point(field_get:create_chatroom_resp.chatroom_avatar.len)
  return len_;
}
inline void create_chatroom_resp_chatroom_avatar::set_len(::google::protobuf::int32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:create_chatroom_resp.chatroom_avatar.len)
}

// optional bytes data = 2;
inline bool create_chatroom_resp_chatroom_avatar::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void create_chatroom_resp_chatroom_avatar::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void create_chatroom_resp_chatroom_avatar::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void create_chatroom_resp_chatroom_avatar::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& create_chatroom_resp_chatroom_avatar::data() const {
  // @@protoc_insertion_point(field_get:create_chatroom_resp.chatroom_avatar.data)
  return data_.GetNoArena();
}
inline void create_chatroom_resp_chatroom_avatar::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:create_chatroom_resp.chatroom_avatar.data)
}
#if LANG_CXX11
inline void create_chatroom_resp_chatroom_avatar::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:create_chatroom_resp.chatroom_avatar.data)
}
#endif
inline void create_chatroom_resp_chatroom_avatar::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:create_chatroom_resp.chatroom_avatar.data)
}
inline void create_chatroom_resp_chatroom_avatar::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:create_chatroom_resp.chatroom_avatar.data)
}
inline ::std::string* create_chatroom_resp_chatroom_avatar::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:create_chatroom_resp.chatroom_avatar.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* create_chatroom_resp_chatroom_avatar::release_data() {
  // @@protoc_insertion_point(field_release:create_chatroom_resp.chatroom_avatar.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void create_chatroom_resp_chatroom_avatar::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:create_chatroom_resp.chatroom_avatar.data)
}

// -------------------------------------------------------------------

// create_chatroom_resp

// optional .create_chatroom_resp.result res = 1;
inline bool create_chatroom_resp::has_res() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void create_chatroom_resp::set_has_res() {
  _has_bits_[0] |= 0x00000001u;
}
inline void create_chatroom_resp::clear_has_res() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void create_chatroom_resp::clear_res() {
  if (res_ != NULL) res_->::create_chatroom_resp_result::Clear();
  clear_has_res();
}
inline const ::create_chatroom_resp_result& create_chatroom_resp::res() const {
  // @@protoc_insertion_point(field_get:create_chatroom_resp.res)
  return res_ != NULL ? *res_
                         : *::create_chatroom_resp_result::internal_default_instance();
}
inline ::create_chatroom_resp_result* create_chatroom_resp::mutable_res() {
  set_has_res();
  if (res_ == NULL) {
    res_ = new ::create_chatroom_resp_result;
  }
  // @@protoc_insertion_point(field_mutable:create_chatroom_resp.res)
  return res_;
}
inline ::create_chatroom_resp_result* create_chatroom_resp::release_res() {
  // @@protoc_insertion_point(field_release:create_chatroom_resp.res)
  clear_has_res();
  ::create_chatroom_resp_result* temp = res_;
  res_ = NULL;
  return temp;
}
inline void create_chatroom_resp::set_allocated_res(::create_chatroom_resp_result* res) {
  delete res_;
  res_ = res;
  if (res) {
    set_has_res();
  } else {
    clear_has_res();
  }
  // @@protoc_insertion_point(field_set_allocated:create_chatroom_resp.res)
}

// optional int32 member_cnt = 5;
inline bool create_chatroom_resp::has_member_cnt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void create_chatroom_resp::set_has_member_cnt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void create_chatroom_resp::clear_has_member_cnt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void create_chatroom_resp::clear_member_cnt() {
  member_cnt_ = 0;
  clear_has_member_cnt();
}
inline ::google::protobuf::int32 create_chatroom_resp::member_cnt() const {
  // @@protoc_insertion_point(field_get:create_chatroom_resp.member_cnt)
  return member_cnt_;
}
inline void create_chatroom_resp::set_member_cnt(::google::protobuf::int32 value) {
  set_has_member_cnt();
  member_cnt_ = value;
  // @@protoc_insertion_point(field_set:create_chatroom_resp.member_cnt)
}

// repeated .create_chatroom_resp.member_info member = 6;
inline int create_chatroom_resp::member_size() const {
  return member_.size();
}
inline void create_chatroom_resp::clear_member() {
  member_.Clear();
}
inline const ::create_chatroom_resp_member_info& create_chatroom_resp::member(int index) const {
  // @@protoc_insertion_point(field_get:create_chatroom_resp.member)
  return member_.Get(index);
}
inline ::create_chatroom_resp_member_info* create_chatroom_resp::mutable_member(int index) {
  // @@protoc_insertion_point(field_mutable:create_chatroom_resp.member)
  return member_.Mutable(index);
}
inline ::create_chatroom_resp_member_info* create_chatroom_resp::add_member() {
  // @@protoc_insertion_point(field_add:create_chatroom_resp.member)
  return member_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::create_chatroom_resp_member_info >*
create_chatroom_resp::mutable_member() {
  // @@protoc_insertion_point(field_mutable_list:create_chatroom_resp.member)
  return &member_;
}
inline const ::google::protobuf::RepeatedPtrField< ::create_chatroom_resp_member_info >&
create_chatroom_resp::member() const {
  // @@protoc_insertion_point(field_list:create_chatroom_resp.member)
  return member_;
}

// optional .Wxid chatroom_wxid = 7;
inline bool create_chatroom_resp::has_chatroom_wxid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void create_chatroom_resp::set_has_chatroom_wxid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void create_chatroom_resp::clear_has_chatroom_wxid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void create_chatroom_resp::clear_chatroom_wxid() {
  if (chatroom_wxid_ != NULL) chatroom_wxid_->::Wxid::Clear();
  clear_has_chatroom_wxid();
}
inline const ::Wxid& create_chatroom_resp::chatroom_wxid() const {
  // @@protoc_insertion_point(field_get:create_chatroom_resp.chatroom_wxid)
  return chatroom_wxid_ != NULL ? *chatroom_wxid_
                         : *::Wxid::internal_default_instance();
}
inline ::Wxid* create_chatroom_resp::mutable_chatroom_wxid() {
  set_has_chatroom_wxid();
  if (chatroom_wxid_ == NULL) {
    chatroom_wxid_ = new ::Wxid;
  }
  // @@protoc_insertion_point(field_mutable:create_chatroom_resp.chatroom_wxid)
  return chatroom_wxid_;
}
inline ::Wxid* create_chatroom_resp::release_chatroom_wxid() {
  // @@protoc_insertion_point(field_release:create_chatroom_resp.chatroom_wxid)
  clear_has_chatroom_wxid();
  ::Wxid* temp = chatroom_wxid_;
  chatroom_wxid_ = NULL;
  return temp;
}
inline void create_chatroom_resp::set_allocated_chatroom_wxid(::Wxid* chatroom_wxid) {
  delete chatroom_wxid_;
  chatroom_wxid_ = chatroom_wxid;
  if (chatroom_wxid) {
    set_has_chatroom_wxid();
  } else {
    clear_has_chatroom_wxid();
  }
  // @@protoc_insertion_point(field_set_allocated:create_chatroom_resp.chatroom_wxid)
}

// optional .create_chatroom_resp.chatroom_avatar avatar = 8;
inline bool create_chatroom_resp::has_avatar() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void create_chatroom_resp::set_has_avatar() {
  _has_bits_[0] |= 0x00000004u;
}
inline void create_chatroom_resp::clear_has_avatar() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void create_chatroom_resp::clear_avatar() {
  if (avatar_ != NULL) avatar_->::create_chatroom_resp_chatroom_avatar::Clear();
  clear_has_avatar();
}
inline const ::create_chatroom_resp_chatroom_avatar& create_chatroom_resp::avatar() const {
  // @@protoc_insertion_point(field_get:create_chatroom_resp.avatar)
  return avatar_ != NULL ? *avatar_
                         : *::create_chatroom_resp_chatroom_avatar::internal_default_instance();
}
inline ::create_chatroom_resp_chatroom_avatar* create_chatroom_resp::mutable_avatar() {
  set_has_avatar();
  if (avatar_ == NULL) {
    avatar_ = new ::create_chatroom_resp_chatroom_avatar;
  }
  // @@protoc_insertion_point(field_mutable:create_chatroom_resp.avatar)
  return avatar_;
}
inline ::create_chatroom_resp_chatroom_avatar* create_chatroom_resp::release_avatar() {
  // @@protoc_insertion_point(field_release:create_chatroom_resp.avatar)
  clear_has_avatar();
  ::create_chatroom_resp_chatroom_avatar* temp = avatar_;
  avatar_ = NULL;
  return temp;
}
inline void create_chatroom_resp::set_allocated_avatar(::create_chatroom_resp_chatroom_avatar* avatar) {
  delete avatar_;
  avatar_ = avatar;
  if (avatar) {
    set_has_avatar();
  } else {
    clear_has_avatar();
  }
  // @@protoc_insertion_point(field_set_allocated:create_chatroom_resp.avatar)
}

// -------------------------------------------------------------------

// mm_facing_create_chatroom_req

// optional .LoginInfo login = 1;
inline bool mm_facing_create_chatroom_req::has_login() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mm_facing_create_chatroom_req::set_has_login() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mm_facing_create_chatroom_req::clear_has_login() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mm_facing_create_chatroom_req::clear_login() {
  if (login_ != NULL) login_->::LoginInfo::Clear();
  clear_has_login();
}
inline const ::LoginInfo& mm_facing_create_chatroom_req::login() const {
  // @@protoc_insertion_point(field_get:mm_facing_create_chatroom_req.login)
  return login_ != NULL ? *login_
                         : *::LoginInfo::internal_default_instance();
}
inline ::LoginInfo* mm_facing_create_chatroom_req::mutable_login() {
  set_has_login();
  if (login_ == NULL) {
    login_ = new ::LoginInfo;
  }
  // @@protoc_insertion_point(field_mutable:mm_facing_create_chatroom_req.login)
  return login_;
}
inline ::LoginInfo* mm_facing_create_chatroom_req::release_login() {
  // @@protoc_insertion_point(field_release:mm_facing_create_chatroom_req.login)
  clear_has_login();
  ::LoginInfo* temp = login_;
  login_ = NULL;
  return temp;
}
inline void mm_facing_create_chatroom_req::set_allocated_login(::LoginInfo* login) {
  delete login_;
  login_ = login;
  if (login) {
    set_has_login();
  } else {
    clear_has_login();
  }
  // @@protoc_insertion_point(field_set_allocated:mm_facing_create_chatroom_req.login)
}

// optional int32 op_code = 2;
inline bool mm_facing_create_chatroom_req::has_op_code() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void mm_facing_create_chatroom_req::set_has_op_code() {
  _has_bits_[0] |= 0x00000008u;
}
inline void mm_facing_create_chatroom_req::clear_has_op_code() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void mm_facing_create_chatroom_req::clear_op_code() {
  op_code_ = 0;
  clear_has_op_code();
}
inline ::google::protobuf::int32 mm_facing_create_chatroom_req::op_code() const {
  // @@protoc_insertion_point(field_get:mm_facing_create_chatroom_req.op_code)
  return op_code_;
}
inline void mm_facing_create_chatroom_req::set_op_code(::google::protobuf::int32 value) {
  set_has_op_code();
  op_code_ = value;
  // @@protoc_insertion_point(field_set:mm_facing_create_chatroom_req.op_code)
}

// optional string chatroom_pwd = 3;
inline bool mm_facing_create_chatroom_req::has_chatroom_pwd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mm_facing_create_chatroom_req::set_has_chatroom_pwd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mm_facing_create_chatroom_req::clear_has_chatroom_pwd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mm_facing_create_chatroom_req::clear_chatroom_pwd() {
  chatroom_pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chatroom_pwd();
}
inline const ::std::string& mm_facing_create_chatroom_req::chatroom_pwd() const {
  // @@protoc_insertion_point(field_get:mm_facing_create_chatroom_req.chatroom_pwd)
  return chatroom_pwd_.GetNoArena();
}
inline void mm_facing_create_chatroom_req::set_chatroom_pwd(const ::std::string& value) {
  set_has_chatroom_pwd();
  chatroom_pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mm_facing_create_chatroom_req.chatroom_pwd)
}
#if LANG_CXX11
inline void mm_facing_create_chatroom_req::set_chatroom_pwd(::std::string&& value) {
  set_has_chatroom_pwd();
  chatroom_pwd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mm_facing_create_chatroom_req.chatroom_pwd)
}
#endif
inline void mm_facing_create_chatroom_req::set_chatroom_pwd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chatroom_pwd();
  chatroom_pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mm_facing_create_chatroom_req.chatroom_pwd)
}
inline void mm_facing_create_chatroom_req::set_chatroom_pwd(const char* value, size_t size) {
  set_has_chatroom_pwd();
  chatroom_pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mm_facing_create_chatroom_req.chatroom_pwd)
}
inline ::std::string* mm_facing_create_chatroom_req::mutable_chatroom_pwd() {
  set_has_chatroom_pwd();
  // @@protoc_insertion_point(field_mutable:mm_facing_create_chatroom_req.chatroom_pwd)
  return chatroom_pwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mm_facing_create_chatroom_req::release_chatroom_pwd() {
  // @@protoc_insertion_point(field_release:mm_facing_create_chatroom_req.chatroom_pwd)
  clear_has_chatroom_pwd();
  return chatroom_pwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mm_facing_create_chatroom_req::set_allocated_chatroom_pwd(::std::string* chatroom_pwd) {
  if (chatroom_pwd != NULL) {
    set_has_chatroom_pwd();
  } else {
    clear_has_chatroom_pwd();
  }
  chatroom_pwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chatroom_pwd);
  // @@protoc_insertion_point(field_set_allocated:mm_facing_create_chatroom_req.chatroom_pwd)
}

// optional float lon = 4;
inline bool mm_facing_create_chatroom_req::has_lon() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void mm_facing_create_chatroom_req::set_has_lon() {
  _has_bits_[0] |= 0x00000010u;
}
inline void mm_facing_create_chatroom_req::clear_has_lon() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void mm_facing_create_chatroom_req::clear_lon() {
  lon_ = 0;
  clear_has_lon();
}
inline float mm_facing_create_chatroom_req::lon() const {
  // @@protoc_insertion_point(field_get:mm_facing_create_chatroom_req.lon)
  return lon_;
}
inline void mm_facing_create_chatroom_req::set_lon(float value) {
  set_has_lon();
  lon_ = value;
  // @@protoc_insertion_point(field_set:mm_facing_create_chatroom_req.lon)
}

// optional float lat = 5;
inline bool mm_facing_create_chatroom_req::has_lat() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void mm_facing_create_chatroom_req::set_has_lat() {
  _has_bits_[0] |= 0x00000020u;
}
inline void mm_facing_create_chatroom_req::clear_has_lat() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void mm_facing_create_chatroom_req::clear_lat() {
  lat_ = 0;
  clear_has_lat();
}
inline float mm_facing_create_chatroom_req::lat() const {
  // @@protoc_insertion_point(field_get:mm_facing_create_chatroom_req.lat)
  return lat_;
}
inline void mm_facing_create_chatroom_req::set_lat(float value) {
  set_has_lat();
  lat_ = value;
  // @@protoc_insertion_point(field_set:mm_facing_create_chatroom_req.lat)
}

// optional int32 tag6 = 6;
inline bool mm_facing_create_chatroom_req::has_tag6() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void mm_facing_create_chatroom_req::set_has_tag6() {
  _has_bits_[0] |= 0x00000040u;
}
inline void mm_facing_create_chatroom_req::clear_has_tag6() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void mm_facing_create_chatroom_req::clear_tag6() {
  tag6_ = 0;
  clear_has_tag6();
}
inline ::google::protobuf::int32 mm_facing_create_chatroom_req::tag6() const {
  // @@protoc_insertion_point(field_get:mm_facing_create_chatroom_req.tag6)
  return tag6_;
}
inline void mm_facing_create_chatroom_req::set_tag6(::google::protobuf::int32 value) {
  set_has_tag6();
  tag6_ = value;
  // @@protoc_insertion_point(field_set:mm_facing_create_chatroom_req.tag6)
}

// optional int32 tag9 = 9;
inline bool mm_facing_create_chatroom_req::has_tag9() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void mm_facing_create_chatroom_req::set_has_tag9() {
  _has_bits_[0] |= 0x00000080u;
}
inline void mm_facing_create_chatroom_req::clear_has_tag9() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void mm_facing_create_chatroom_req::clear_tag9() {
  tag9_ = 0;
  clear_has_tag9();
}
inline ::google::protobuf::int32 mm_facing_create_chatroom_req::tag9() const {
  // @@protoc_insertion_point(field_get:mm_facing_create_chatroom_req.tag9)
  return tag9_;
}
inline void mm_facing_create_chatroom_req::set_tag9(::google::protobuf::int32 value) {
  set_has_tag9();
  tag9_ = value;
  // @@protoc_insertion_point(field_set:mm_facing_create_chatroom_req.tag9)
}

// optional string tag10 = 10;
inline bool mm_facing_create_chatroom_req::has_tag10() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mm_facing_create_chatroom_req::set_has_tag10() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mm_facing_create_chatroom_req::clear_has_tag10() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mm_facing_create_chatroom_req::clear_tag10() {
  tag10_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag10();
}
inline const ::std::string& mm_facing_create_chatroom_req::tag10() const {
  // @@protoc_insertion_point(field_get:mm_facing_create_chatroom_req.tag10)
  return tag10_.GetNoArena();
}
inline void mm_facing_create_chatroom_req::set_tag10(const ::std::string& value) {
  set_has_tag10();
  tag10_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mm_facing_create_chatroom_req.tag10)
}
#if LANG_CXX11
inline void mm_facing_create_chatroom_req::set_tag10(::std::string&& value) {
  set_has_tag10();
  tag10_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mm_facing_create_chatroom_req.tag10)
}
#endif
inline void mm_facing_create_chatroom_req::set_tag10(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag10();
  tag10_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mm_facing_create_chatroom_req.tag10)
}
inline void mm_facing_create_chatroom_req::set_tag10(const char* value, size_t size) {
  set_has_tag10();
  tag10_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mm_facing_create_chatroom_req.tag10)
}
inline ::std::string* mm_facing_create_chatroom_req::mutable_tag10() {
  set_has_tag10();
  // @@protoc_insertion_point(field_mutable:mm_facing_create_chatroom_req.tag10)
  return tag10_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mm_facing_create_chatroom_req::release_tag10() {
  // @@protoc_insertion_point(field_release:mm_facing_create_chatroom_req.tag10)
  clear_has_tag10();
  return tag10_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mm_facing_create_chatroom_req::set_allocated_tag10(::std::string* tag10) {
  if (tag10 != NULL) {
    set_has_tag10();
  } else {
    clear_has_tag10();
  }
  tag10_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag10);
  // @@protoc_insertion_point(field_set_allocated:mm_facing_create_chatroom_req.tag10)
}

// -------------------------------------------------------------------

// mm_facing_create_chatroom_resp_result_err_msg

// optional string msg = 1;
inline bool mm_facing_create_chatroom_resp_result_err_msg::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mm_facing_create_chatroom_resp_result_err_msg::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mm_facing_create_chatroom_resp_result_err_msg::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mm_facing_create_chatroom_resp_result_err_msg::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& mm_facing_create_chatroom_resp_result_err_msg::msg() const {
  // @@protoc_insertion_point(field_get:mm_facing_create_chatroom_resp.result.err_msg.msg)
  return msg_.GetNoArena();
}
inline void mm_facing_create_chatroom_resp_result_err_msg::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mm_facing_create_chatroom_resp.result.err_msg.msg)
}
#if LANG_CXX11
inline void mm_facing_create_chatroom_resp_result_err_msg::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mm_facing_create_chatroom_resp.result.err_msg.msg)
}
#endif
inline void mm_facing_create_chatroom_resp_result_err_msg::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mm_facing_create_chatroom_resp.result.err_msg.msg)
}
inline void mm_facing_create_chatroom_resp_result_err_msg::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mm_facing_create_chatroom_resp.result.err_msg.msg)
}
inline ::std::string* mm_facing_create_chatroom_resp_result_err_msg::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:mm_facing_create_chatroom_resp.result.err_msg.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mm_facing_create_chatroom_resp_result_err_msg::release_msg() {
  // @@protoc_insertion_point(field_release:mm_facing_create_chatroom_resp.result.err_msg.msg)
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mm_facing_create_chatroom_resp_result_err_msg::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:mm_facing_create_chatroom_resp.result.err_msg.msg)
}

// -------------------------------------------------------------------

// mm_facing_create_chatroom_resp_result

// optional int32 code = 1;
inline bool mm_facing_create_chatroom_resp_result::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mm_facing_create_chatroom_resp_result::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mm_facing_create_chatroom_resp_result::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mm_facing_create_chatroom_resp_result::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 mm_facing_create_chatroom_resp_result::code() const {
  // @@protoc_insertion_point(field_get:mm_facing_create_chatroom_resp.result.code)
  return code_;
}
inline void mm_facing_create_chatroom_resp_result::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:mm_facing_create_chatroom_resp.result.code)
}

// optional .mm_facing_create_chatroom_resp.result.err_msg msg = 2;
inline bool mm_facing_create_chatroom_resp_result::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mm_facing_create_chatroom_resp_result::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mm_facing_create_chatroom_resp_result::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mm_facing_create_chatroom_resp_result::clear_msg() {
  if (msg_ != NULL) msg_->::mm_facing_create_chatroom_resp_result_err_msg::Clear();
  clear_has_msg();
}
inline const ::mm_facing_create_chatroom_resp_result_err_msg& mm_facing_create_chatroom_resp_result::msg() const {
  // @@protoc_insertion_point(field_get:mm_facing_create_chatroom_resp.result.msg)
  return msg_ != NULL ? *msg_
                         : *::mm_facing_create_chatroom_resp_result_err_msg::internal_default_instance();
}
inline ::mm_facing_create_chatroom_resp_result_err_msg* mm_facing_create_chatroom_resp_result::mutable_msg() {
  set_has_msg();
  if (msg_ == NULL) {
    msg_ = new ::mm_facing_create_chatroom_resp_result_err_msg;
  }
  // @@protoc_insertion_point(field_mutable:mm_facing_create_chatroom_resp.result.msg)
  return msg_;
}
inline ::mm_facing_create_chatroom_resp_result_err_msg* mm_facing_create_chatroom_resp_result::release_msg() {
  // @@protoc_insertion_point(field_release:mm_facing_create_chatroom_resp.result.msg)
  clear_has_msg();
  ::mm_facing_create_chatroom_resp_result_err_msg* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline void mm_facing_create_chatroom_resp_result::set_allocated_msg(::mm_facing_create_chatroom_resp_result_err_msg* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  // @@protoc_insertion_point(field_set_allocated:mm_facing_create_chatroom_resp.result.msg)
}

// -------------------------------------------------------------------

// mm_facing_create_chatroom_resp_member_info

// optional string msg = 1;
inline bool mm_facing_create_chatroom_resp_member_info::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mm_facing_create_chatroom_resp_member_info::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mm_facing_create_chatroom_resp_member_info::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mm_facing_create_chatroom_resp_member_info::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& mm_facing_create_chatroom_resp_member_info::msg() const {
  // @@protoc_insertion_point(field_get:mm_facing_create_chatroom_resp.member_info.msg)
  return msg_.GetNoArena();
}
inline void mm_facing_create_chatroom_resp_member_info::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mm_facing_create_chatroom_resp.member_info.msg)
}
#if LANG_CXX11
inline void mm_facing_create_chatroom_resp_member_info::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mm_facing_create_chatroom_resp.member_info.msg)
}
#endif
inline void mm_facing_create_chatroom_resp_member_info::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mm_facing_create_chatroom_resp.member_info.msg)
}
inline void mm_facing_create_chatroom_resp_member_info::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mm_facing_create_chatroom_resp.member_info.msg)
}
inline ::std::string* mm_facing_create_chatroom_resp_member_info::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:mm_facing_create_chatroom_resp.member_info.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mm_facing_create_chatroom_resp_member_info::release_msg() {
  // @@protoc_insertion_point(field_release:mm_facing_create_chatroom_resp.member_info.msg)
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mm_facing_create_chatroom_resp_member_info::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:mm_facing_create_chatroom_resp.member_info.msg)
}

// optional string nick_name = 3;
inline bool mm_facing_create_chatroom_resp_member_info::has_nick_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mm_facing_create_chatroom_resp_member_info::set_has_nick_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mm_facing_create_chatroom_resp_member_info::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mm_facing_create_chatroom_resp_member_info::clear_nick_name() {
  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nick_name();
}
inline const ::std::string& mm_facing_create_chatroom_resp_member_info::nick_name() const {
  // @@protoc_insertion_point(field_get:mm_facing_create_chatroom_resp.member_info.nick_name)
  return nick_name_.GetNoArena();
}
inline void mm_facing_create_chatroom_resp_member_info::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mm_facing_create_chatroom_resp.member_info.nick_name)
}
#if LANG_CXX11
inline void mm_facing_create_chatroom_resp_member_info::set_nick_name(::std::string&& value) {
  set_has_nick_name();
  nick_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mm_facing_create_chatroom_resp.member_info.nick_name)
}
#endif
inline void mm_facing_create_chatroom_resp_member_info::set_nick_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nick_name();
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mm_facing_create_chatroom_resp.member_info.nick_name)
}
inline void mm_facing_create_chatroom_resp_member_info::set_nick_name(const char* value, size_t size) {
  set_has_nick_name();
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mm_facing_create_chatroom_resp.member_info.nick_name)
}
inline ::std::string* mm_facing_create_chatroom_resp_member_info::mutable_nick_name() {
  set_has_nick_name();
  // @@protoc_insertion_point(field_mutable:mm_facing_create_chatroom_resp.member_info.nick_name)
  return nick_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mm_facing_create_chatroom_resp_member_info::release_nick_name() {
  // @@protoc_insertion_point(field_release:mm_facing_create_chatroom_resp.member_info.nick_name)
  clear_has_nick_name();
  return nick_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mm_facing_create_chatroom_resp_member_info::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name != NULL) {
    set_has_nick_name();
  } else {
    clear_has_nick_name();
  }
  nick_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nick_name);
  // @@protoc_insertion_point(field_set_allocated:mm_facing_create_chatroom_resp.member_info.nick_name)
}

// -------------------------------------------------------------------

// mm_facing_create_chatroom_resp

// optional .mm_facing_create_chatroom_resp.result res = 1;
inline bool mm_facing_create_chatroom_resp::has_res() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void mm_facing_create_chatroom_resp::set_has_res() {
  _has_bits_[0] |= 0x00000002u;
}
inline void mm_facing_create_chatroom_resp::clear_has_res() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void mm_facing_create_chatroom_resp::clear_res() {
  if (res_ != NULL) res_->::mm_facing_create_chatroom_resp_result::Clear();
  clear_has_res();
}
inline const ::mm_facing_create_chatroom_resp_result& mm_facing_create_chatroom_resp::res() const {
  // @@protoc_insertion_point(field_get:mm_facing_create_chatroom_resp.res)
  return res_ != NULL ? *res_
                         : *::mm_facing_create_chatroom_resp_result::internal_default_instance();
}
inline ::mm_facing_create_chatroom_resp_result* mm_facing_create_chatroom_resp::mutable_res() {
  set_has_res();
  if (res_ == NULL) {
    res_ = new ::mm_facing_create_chatroom_resp_result;
  }
  // @@protoc_insertion_point(field_mutable:mm_facing_create_chatroom_resp.res)
  return res_;
}
inline ::mm_facing_create_chatroom_resp_result* mm_facing_create_chatroom_resp::release_res() {
  // @@protoc_insertion_point(field_release:mm_facing_create_chatroom_resp.res)
  clear_has_res();
  ::mm_facing_create_chatroom_resp_result* temp = res_;
  res_ = NULL;
  return temp;
}
inline void mm_facing_create_chatroom_resp::set_allocated_res(::mm_facing_create_chatroom_resp_result* res) {
  delete res_;
  res_ = res;
  if (res) {
    set_has_res();
  } else {
    clear_has_res();
  }
  // @@protoc_insertion_point(field_set_allocated:mm_facing_create_chatroom_resp.res)
}

// optional int32 member_cnt = 3;
inline bool mm_facing_create_chatroom_resp::has_member_cnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void mm_facing_create_chatroom_resp::set_has_member_cnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void mm_facing_create_chatroom_resp::clear_has_member_cnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void mm_facing_create_chatroom_resp::clear_member_cnt() {
  member_cnt_ = 0;
  clear_has_member_cnt();
}
inline ::google::protobuf::int32 mm_facing_create_chatroom_resp::member_cnt() const {
  // @@protoc_insertion_point(field_get:mm_facing_create_chatroom_resp.member_cnt)
  return member_cnt_;
}
inline void mm_facing_create_chatroom_resp::set_member_cnt(::google::protobuf::int32 value) {
  set_has_member_cnt();
  member_cnt_ = value;
  // @@protoc_insertion_point(field_set:mm_facing_create_chatroom_resp.member_cnt)
}

// repeated .mm_facing_create_chatroom_resp.member_info member = 4;
inline int mm_facing_create_chatroom_resp::member_size() const {
  return member_.size();
}
inline void mm_facing_create_chatroom_resp::clear_member() {
  member_.Clear();
}
inline const ::mm_facing_create_chatroom_resp_member_info& mm_facing_create_chatroom_resp::member(int index) const {
  // @@protoc_insertion_point(field_get:mm_facing_create_chatroom_resp.member)
  return member_.Get(index);
}
inline ::mm_facing_create_chatroom_resp_member_info* mm_facing_create_chatroom_resp::mutable_member(int index) {
  // @@protoc_insertion_point(field_mutable:mm_facing_create_chatroom_resp.member)
  return member_.Mutable(index);
}
inline ::mm_facing_create_chatroom_resp_member_info* mm_facing_create_chatroom_resp::add_member() {
  // @@protoc_insertion_point(field_add:mm_facing_create_chatroom_resp.member)
  return member_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::mm_facing_create_chatroom_resp_member_info >*
mm_facing_create_chatroom_resp::mutable_member() {
  // @@protoc_insertion_point(field_mutable_list:mm_facing_create_chatroom_resp.member)
  return &member_;
}
inline const ::google::protobuf::RepeatedPtrField< ::mm_facing_create_chatroom_resp_member_info >&
mm_facing_create_chatroom_resp::member() const {
  // @@protoc_insertion_point(field_list:mm_facing_create_chatroom_resp.member)
  return member_;
}

// optional string wxid = 5;
inline bool mm_facing_create_chatroom_resp::has_wxid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void mm_facing_create_chatroom_resp::set_has_wxid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void mm_facing_create_chatroom_resp::clear_has_wxid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void mm_facing_create_chatroom_resp::clear_wxid() {
  wxid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_wxid();
}
inline const ::std::string& mm_facing_create_chatroom_resp::wxid() const {
  // @@protoc_insertion_point(field_get:mm_facing_create_chatroom_resp.wxid)
  return wxid_.GetNoArena();
}
inline void mm_facing_create_chatroom_resp::set_wxid(const ::std::string& value) {
  set_has_wxid();
  wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mm_facing_create_chatroom_resp.wxid)
}
#if LANG_CXX11
inline void mm_facing_create_chatroom_resp::set_wxid(::std::string&& value) {
  set_has_wxid();
  wxid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mm_facing_create_chatroom_resp.wxid)
}
#endif
inline void mm_facing_create_chatroom_resp::set_wxid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_wxid();
  wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mm_facing_create_chatroom_resp.wxid)
}
inline void mm_facing_create_chatroom_resp::set_wxid(const char* value, size_t size) {
  set_has_wxid();
  wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mm_facing_create_chatroom_resp.wxid)
}
inline ::std::string* mm_facing_create_chatroom_resp::mutable_wxid() {
  set_has_wxid();
  // @@protoc_insertion_point(field_mutable:mm_facing_create_chatroom_resp.wxid)
  return wxid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* mm_facing_create_chatroom_resp::release_wxid() {
  // @@protoc_insertion_point(field_release:mm_facing_create_chatroom_resp.wxid)
  clear_has_wxid();
  return wxid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void mm_facing_create_chatroom_resp::set_allocated_wxid(::std::string* wxid) {
  if (wxid != NULL) {
    set_has_wxid();
  } else {
    clear_has_wxid();
  }
  wxid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wxid);
  // @@protoc_insertion_point(field_set_allocated:mm_facing_create_chatroom_resp.wxid)
}

// -------------------------------------------------------------------

// add_chatroom_member_req_member_info

// optional .Wxid wxid = 1;
inline bool add_chatroom_member_req_member_info::has_wxid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void add_chatroom_member_req_member_info::set_has_wxid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void add_chatroom_member_req_member_info::clear_has_wxid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void add_chatroom_member_req_member_info::clear_wxid() {
  if (wxid_ != NULL) wxid_->::Wxid::Clear();
  clear_has_wxid();
}
inline const ::Wxid& add_chatroom_member_req_member_info::wxid() const {
  // @@protoc_insertion_point(field_get:add_chatroom_member_req.member_info.wxid)
  return wxid_ != NULL ? *wxid_
                         : *::Wxid::internal_default_instance();
}
inline ::Wxid* add_chatroom_member_req_member_info::mutable_wxid() {
  set_has_wxid();
  if (wxid_ == NULL) {
    wxid_ = new ::Wxid;
  }
  // @@protoc_insertion_point(field_mutable:add_chatroom_member_req.member_info.wxid)
  return wxid_;
}
inline ::Wxid* add_chatroom_member_req_member_info::release_wxid() {
  // @@protoc_insertion_point(field_release:add_chatroom_member_req.member_info.wxid)
  clear_has_wxid();
  ::Wxid* temp = wxid_;
  wxid_ = NULL;
  return temp;
}
inline void add_chatroom_member_req_member_info::set_allocated_wxid(::Wxid* wxid) {
  delete wxid_;
  wxid_ = wxid;
  if (wxid) {
    set_has_wxid();
  } else {
    clear_has_wxid();
  }
  // @@protoc_insertion_point(field_set_allocated:add_chatroom_member_req.member_info.wxid)
}

// -------------------------------------------------------------------

// add_chatroom_member_req_chatroom_info

// optional string wxid = 1;
inline bool add_chatroom_member_req_chatroom_info::has_wxid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void add_chatroom_member_req_chatroom_info::set_has_wxid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void add_chatroom_member_req_chatroom_info::clear_has_wxid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void add_chatroom_member_req_chatroom_info::clear_wxid() {
  wxid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_wxid();
}
inline const ::std::string& add_chatroom_member_req_chatroom_info::wxid() const {
  // @@protoc_insertion_point(field_get:add_chatroom_member_req.chatroom_info.wxid)
  return wxid_.GetNoArena();
}
inline void add_chatroom_member_req_chatroom_info::set_wxid(const ::std::string& value) {
  set_has_wxid();
  wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:add_chatroom_member_req.chatroom_info.wxid)
}
#if LANG_CXX11
inline void add_chatroom_member_req_chatroom_info::set_wxid(::std::string&& value) {
  set_has_wxid();
  wxid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:add_chatroom_member_req.chatroom_info.wxid)
}
#endif
inline void add_chatroom_member_req_chatroom_info::set_wxid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_wxid();
  wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:add_chatroom_member_req.chatroom_info.wxid)
}
inline void add_chatroom_member_req_chatroom_info::set_wxid(const char* value, size_t size) {
  set_has_wxid();
  wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:add_chatroom_member_req.chatroom_info.wxid)
}
inline ::std::string* add_chatroom_member_req_chatroom_info::mutable_wxid() {
  set_has_wxid();
  // @@protoc_insertion_point(field_mutable:add_chatroom_member_req.chatroom_info.wxid)
  return wxid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* add_chatroom_member_req_chatroom_info::release_wxid() {
  // @@protoc_insertion_point(field_release:add_chatroom_member_req.chatroom_info.wxid)
  clear_has_wxid();
  return wxid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void add_chatroom_member_req_chatroom_info::set_allocated_wxid(::std::string* wxid) {
  if (wxid != NULL) {
    set_has_wxid();
  } else {
    clear_has_wxid();
  }
  wxid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wxid);
  // @@protoc_insertion_point(field_set_allocated:add_chatroom_member_req.chatroom_info.wxid)
}

// -------------------------------------------------------------------

// add_chatroom_member_req

// optional .LoginInfo login = 1;
inline bool add_chatroom_member_req::has_login() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void add_chatroom_member_req::set_has_login() {
  _has_bits_[0] |= 0x00000001u;
}
inline void add_chatroom_member_req::clear_has_login() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void add_chatroom_member_req::clear_login() {
  if (login_ != NULL) login_->::LoginInfo::Clear();
  clear_has_login();
}
inline const ::LoginInfo& add_chatroom_member_req::login() const {
  // @@protoc_insertion_point(field_get:add_chatroom_member_req.login)
  return login_ != NULL ? *login_
                         : *::LoginInfo::internal_default_instance();
}
inline ::LoginInfo* add_chatroom_member_req::mutable_login() {
  set_has_login();
  if (login_ == NULL) {
    login_ = new ::LoginInfo;
  }
  // @@protoc_insertion_point(field_mutable:add_chatroom_member_req.login)
  return login_;
}
inline ::LoginInfo* add_chatroom_member_req::release_login() {
  // @@protoc_insertion_point(field_release:add_chatroom_member_req.login)
  clear_has_login();
  ::LoginInfo* temp = login_;
  login_ = NULL;
  return temp;
}
inline void add_chatroom_member_req::set_allocated_login(::LoginInfo* login) {
  delete login_;
  login_ = login;
  if (login) {
    set_has_login();
  } else {
    clear_has_login();
  }
  // @@protoc_insertion_point(field_set_allocated:add_chatroom_member_req.login)
}

// optional int32 member_cnt = 2;
inline bool add_chatroom_member_req::has_member_cnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void add_chatroom_member_req::set_has_member_cnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void add_chatroom_member_req::clear_has_member_cnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void add_chatroom_member_req::clear_member_cnt() {
  member_cnt_ = 0;
  clear_has_member_cnt();
}
inline ::google::protobuf::int32 add_chatroom_member_req::member_cnt() const {
  // @@protoc_insertion_point(field_get:add_chatroom_member_req.member_cnt)
  return member_cnt_;
}
inline void add_chatroom_member_req::set_member_cnt(::google::protobuf::int32 value) {
  set_has_member_cnt();
  member_cnt_ = value;
  // @@protoc_insertion_point(field_set:add_chatroom_member_req.member_cnt)
}

// repeated .add_chatroom_member_req.member_info member = 3;
inline int add_chatroom_member_req::member_size() const {
  return member_.size();
}
inline void add_chatroom_member_req::clear_member() {
  member_.Clear();
}
inline const ::add_chatroom_member_req_member_info& add_chatroom_member_req::member(int index) const {
  // @@protoc_insertion_point(field_get:add_chatroom_member_req.member)
  return member_.Get(index);
}
inline ::add_chatroom_member_req_member_info* add_chatroom_member_req::mutable_member(int index) {
  // @@protoc_insertion_point(field_mutable:add_chatroom_member_req.member)
  return member_.Mutable(index);
}
inline ::add_chatroom_member_req_member_info* add_chatroom_member_req::add_member() {
  // @@protoc_insertion_point(field_add:add_chatroom_member_req.member)
  return member_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::add_chatroom_member_req_member_info >*
add_chatroom_member_req::mutable_member() {
  // @@protoc_insertion_point(field_mutable_list:add_chatroom_member_req.member)
  return &member_;
}
inline const ::google::protobuf::RepeatedPtrField< ::add_chatroom_member_req_member_info >&
add_chatroom_member_req::member() const {
  // @@protoc_insertion_point(field_list:add_chatroom_member_req.member)
  return member_;
}

// optional .add_chatroom_member_req.chatroom_info chatroom_wxid = 4;
inline bool add_chatroom_member_req::has_chatroom_wxid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void add_chatroom_member_req::set_has_chatroom_wxid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void add_chatroom_member_req::clear_has_chatroom_wxid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void add_chatroom_member_req::clear_chatroom_wxid() {
  if (chatroom_wxid_ != NULL) chatroom_wxid_->::add_chatroom_member_req_chatroom_info::Clear();
  clear_has_chatroom_wxid();
}
inline const ::add_chatroom_member_req_chatroom_info& add_chatroom_member_req::chatroom_wxid() const {
  // @@protoc_insertion_point(field_get:add_chatroom_member_req.chatroom_wxid)
  return chatroom_wxid_ != NULL ? *chatroom_wxid_
                         : *::add_chatroom_member_req_chatroom_info::internal_default_instance();
}
inline ::add_chatroom_member_req_chatroom_info* add_chatroom_member_req::mutable_chatroom_wxid() {
  set_has_chatroom_wxid();
  if (chatroom_wxid_ == NULL) {
    chatroom_wxid_ = new ::add_chatroom_member_req_chatroom_info;
  }
  // @@protoc_insertion_point(field_mutable:add_chatroom_member_req.chatroom_wxid)
  return chatroom_wxid_;
}
inline ::add_chatroom_member_req_chatroom_info* add_chatroom_member_req::release_chatroom_wxid() {
  // @@protoc_insertion_point(field_release:add_chatroom_member_req.chatroom_wxid)
  clear_has_chatroom_wxid();
  ::add_chatroom_member_req_chatroom_info* temp = chatroom_wxid_;
  chatroom_wxid_ = NULL;
  return temp;
}
inline void add_chatroom_member_req::set_allocated_chatroom_wxid(::add_chatroom_member_req_chatroom_info* chatroom_wxid) {
  delete chatroom_wxid_;
  chatroom_wxid_ = chatroom_wxid;
  if (chatroom_wxid) {
    set_has_chatroom_wxid();
  } else {
    clear_has_chatroom_wxid();
  }
  // @@protoc_insertion_point(field_set_allocated:add_chatroom_member_req.chatroom_wxid)
}

// optional int32 tag5 = 5;
inline bool add_chatroom_member_req::has_tag5() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void add_chatroom_member_req::set_has_tag5() {
  _has_bits_[0] |= 0x00000008u;
}
inline void add_chatroom_member_req::clear_has_tag5() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void add_chatroom_member_req::clear_tag5() {
  tag5_ = 0;
  clear_has_tag5();
}
inline ::google::protobuf::int32 add_chatroom_member_req::tag5() const {
  // @@protoc_insertion_point(field_get:add_chatroom_member_req.tag5)
  return tag5_;
}
inline void add_chatroom_member_req::set_tag5(::google::protobuf::int32 value) {
  set_has_tag5();
  tag5_ = value;
  // @@protoc_insertion_point(field_set:add_chatroom_member_req.tag5)
}

// -------------------------------------------------------------------

// add_chatroom_member_resp_result_err_msg

// optional string msg = 1;
inline bool add_chatroom_member_resp_result_err_msg::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void add_chatroom_member_resp_result_err_msg::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void add_chatroom_member_resp_result_err_msg::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void add_chatroom_member_resp_result_err_msg::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& add_chatroom_member_resp_result_err_msg::msg() const {
  // @@protoc_insertion_point(field_get:add_chatroom_member_resp.result.err_msg.msg)
  return msg_.GetNoArena();
}
inline void add_chatroom_member_resp_result_err_msg::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:add_chatroom_member_resp.result.err_msg.msg)
}
#if LANG_CXX11
inline void add_chatroom_member_resp_result_err_msg::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:add_chatroom_member_resp.result.err_msg.msg)
}
#endif
inline void add_chatroom_member_resp_result_err_msg::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:add_chatroom_member_resp.result.err_msg.msg)
}
inline void add_chatroom_member_resp_result_err_msg::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:add_chatroom_member_resp.result.err_msg.msg)
}
inline ::std::string* add_chatroom_member_resp_result_err_msg::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:add_chatroom_member_resp.result.err_msg.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* add_chatroom_member_resp_result_err_msg::release_msg() {
  // @@protoc_insertion_point(field_release:add_chatroom_member_resp.result.err_msg.msg)
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void add_chatroom_member_resp_result_err_msg::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:add_chatroom_member_resp.result.err_msg.msg)
}

// -------------------------------------------------------------------

// add_chatroom_member_resp_result

// optional int32 code = 1;
inline bool add_chatroom_member_resp_result::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void add_chatroom_member_resp_result::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void add_chatroom_member_resp_result::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void add_chatroom_member_resp_result::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 add_chatroom_member_resp_result::code() const {
  // @@protoc_insertion_point(field_get:add_chatroom_member_resp.result.code)
  return code_;
}
inline void add_chatroom_member_resp_result::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:add_chatroom_member_resp.result.code)
}

// optional .add_chatroom_member_resp.result.err_msg msg = 2;
inline bool add_chatroom_member_resp_result::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void add_chatroom_member_resp_result::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void add_chatroom_member_resp_result::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void add_chatroom_member_resp_result::clear_msg() {
  if (msg_ != NULL) msg_->::add_chatroom_member_resp_result_err_msg::Clear();
  clear_has_msg();
}
inline const ::add_chatroom_member_resp_result_err_msg& add_chatroom_member_resp_result::msg() const {
  // @@protoc_insertion_point(field_get:add_chatroom_member_resp.result.msg)
  return msg_ != NULL ? *msg_
                         : *::add_chatroom_member_resp_result_err_msg::internal_default_instance();
}
inline ::add_chatroom_member_resp_result_err_msg* add_chatroom_member_resp_result::mutable_msg() {
  set_has_msg();
  if (msg_ == NULL) {
    msg_ = new ::add_chatroom_member_resp_result_err_msg;
  }
  // @@protoc_insertion_point(field_mutable:add_chatroom_member_resp.result.msg)
  return msg_;
}
inline ::add_chatroom_member_resp_result_err_msg* add_chatroom_member_resp_result::release_msg() {
  // @@protoc_insertion_point(field_release:add_chatroom_member_resp.result.msg)
  clear_has_msg();
  ::add_chatroom_member_resp_result_err_msg* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline void add_chatroom_member_resp_result::set_allocated_msg(::add_chatroom_member_resp_result_err_msg* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  // @@protoc_insertion_point(field_set_allocated:add_chatroom_member_resp.result.msg)
}

// -------------------------------------------------------------------

// add_chatroom_member_resp

// optional .add_chatroom_member_resp.result res = 1;
inline bool add_chatroom_member_resp::has_res() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void add_chatroom_member_resp::set_has_res() {
  _has_bits_[0] |= 0x00000001u;
}
inline void add_chatroom_member_resp::clear_has_res() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void add_chatroom_member_resp::clear_res() {
  if (res_ != NULL) res_->::add_chatroom_member_resp_result::Clear();
  clear_has_res();
}
inline const ::add_chatroom_member_resp_result& add_chatroom_member_resp::res() const {
  // @@protoc_insertion_point(field_get:add_chatroom_member_resp.res)
  return res_ != NULL ? *res_
                         : *::add_chatroom_member_resp_result::internal_default_instance();
}
inline ::add_chatroom_member_resp_result* add_chatroom_member_resp::mutable_res() {
  set_has_res();
  if (res_ == NULL) {
    res_ = new ::add_chatroom_member_resp_result;
  }
  // @@protoc_insertion_point(field_mutable:add_chatroom_member_resp.res)
  return res_;
}
inline ::add_chatroom_member_resp_result* add_chatroom_member_resp::release_res() {
  // @@protoc_insertion_point(field_release:add_chatroom_member_resp.res)
  clear_has_res();
  ::add_chatroom_member_resp_result* temp = res_;
  res_ = NULL;
  return temp;
}
inline void add_chatroom_member_resp::set_allocated_res(::add_chatroom_member_resp_result* res) {
  delete res_;
  res_ = res;
  if (res) {
    set_has_res();
  } else {
    clear_has_res();
  }
  // @@protoc_insertion_point(field_set_allocated:add_chatroom_member_resp.res)
}

// -------------------------------------------------------------------

// op_set_group_nick_name

// optional string tag1 = 1;
inline bool op_set_group_nick_name::has_tag1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void op_set_group_nick_name::set_has_tag1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void op_set_group_nick_name::clear_has_tag1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void op_set_group_nick_name::clear_tag1() {
  tag1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag1();
}
inline const ::std::string& op_set_group_nick_name::tag1() const {
  // @@protoc_insertion_point(field_get:op_set_group_nick_name.tag1)
  return tag1_.GetNoArena();
}
inline void op_set_group_nick_name::set_tag1(const ::std::string& value) {
  set_has_tag1();
  tag1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:op_set_group_nick_name.tag1)
}
#if LANG_CXX11
inline void op_set_group_nick_name::set_tag1(::std::string&& value) {
  set_has_tag1();
  tag1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:op_set_group_nick_name.tag1)
}
#endif
inline void op_set_group_nick_name::set_tag1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag1();
  tag1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:op_set_group_nick_name.tag1)
}
inline void op_set_group_nick_name::set_tag1(const char* value, size_t size) {
  set_has_tag1();
  tag1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:op_set_group_nick_name.tag1)
}
inline ::std::string* op_set_group_nick_name::mutable_tag1() {
  set_has_tag1();
  // @@protoc_insertion_point(field_mutable:op_set_group_nick_name.tag1)
  return tag1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* op_set_group_nick_name::release_tag1() {
  // @@protoc_insertion_point(field_release:op_set_group_nick_name.tag1)
  clear_has_tag1();
  return tag1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void op_set_group_nick_name::set_allocated_tag1(::std::string* tag1) {
  if (tag1 != NULL) {
    set_has_tag1();
  } else {
    clear_has_tag1();
  }
  tag1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag1);
  // @@protoc_insertion_point(field_set_allocated:op_set_group_nick_name.tag1)
}

// optional string tag2 = 2;
inline bool op_set_group_nick_name::has_tag2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void op_set_group_nick_name::set_has_tag2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void op_set_group_nick_name::clear_has_tag2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void op_set_group_nick_name::clear_tag2() {
  tag2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag2();
}
inline const ::std::string& op_set_group_nick_name::tag2() const {
  // @@protoc_insertion_point(field_get:op_set_group_nick_name.tag2)
  return tag2_.GetNoArena();
}
inline void op_set_group_nick_name::set_tag2(const ::std::string& value) {
  set_has_tag2();
  tag2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:op_set_group_nick_name.tag2)
}
#if LANG_CXX11
inline void op_set_group_nick_name::set_tag2(::std::string&& value) {
  set_has_tag2();
  tag2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:op_set_group_nick_name.tag2)
}
#endif
inline void op_set_group_nick_name::set_tag2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag2();
  tag2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:op_set_group_nick_name.tag2)
}
inline void op_set_group_nick_name::set_tag2(const char* value, size_t size) {
  set_has_tag2();
  tag2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:op_set_group_nick_name.tag2)
}
inline ::std::string* op_set_group_nick_name::mutable_tag2() {
  set_has_tag2();
  // @@protoc_insertion_point(field_mutable:op_set_group_nick_name.tag2)
  return tag2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* op_set_group_nick_name::release_tag2() {
  // @@protoc_insertion_point(field_release:op_set_group_nick_name.tag2)
  clear_has_tag2();
  return tag2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void op_set_group_nick_name::set_allocated_tag2(::std::string* tag2) {
  if (tag2 != NULL) {
    set_has_tag2();
  } else {
    clear_has_tag2();
  }
  tag2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag2);
  // @@protoc_insertion_point(field_set_allocated:op_set_group_nick_name.tag2)
}

// optional bytes tag3 = 3;
inline bool op_set_group_nick_name::has_tag3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void op_set_group_nick_name::set_has_tag3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void op_set_group_nick_name::clear_has_tag3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void op_set_group_nick_name::clear_tag3() {
  tag3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag3();
}
inline const ::std::string& op_set_group_nick_name::tag3() const {
  // @@protoc_insertion_point(field_get:op_set_group_nick_name.tag3)
  return tag3_.GetNoArena();
}
inline void op_set_group_nick_name::set_tag3(const ::std::string& value) {
  set_has_tag3();
  tag3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:op_set_group_nick_name.tag3)
}
#if LANG_CXX11
inline void op_set_group_nick_name::set_tag3(::std::string&& value) {
  set_has_tag3();
  tag3_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:op_set_group_nick_name.tag3)
}
#endif
inline void op_set_group_nick_name::set_tag3(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag3();
  tag3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:op_set_group_nick_name.tag3)
}
inline void op_set_group_nick_name::set_tag3(const void* value, size_t size) {
  set_has_tag3();
  tag3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:op_set_group_nick_name.tag3)
}
inline ::std::string* op_set_group_nick_name::mutable_tag3() {
  set_has_tag3();
  // @@protoc_insertion_point(field_mutable:op_set_group_nick_name.tag3)
  return tag3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* op_set_group_nick_name::release_tag3() {
  // @@protoc_insertion_point(field_release:op_set_group_nick_name.tag3)
  clear_has_tag3();
  return tag3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void op_set_group_nick_name::set_allocated_tag3(::std::string* tag3) {
  if (tag3 != NULL) {
    set_has_tag3();
  } else {
    clear_has_tag3();
  }
  tag3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag3);
  // @@protoc_insertion_point(field_set_allocated:op_set_group_nick_name.tag3)
}

// -------------------------------------------------------------------

// oplog_req_TAG1_CMD_OPTION

// optional int32 len = 1;
inline bool oplog_req_TAG1_CMD_OPTION::has_len() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void oplog_req_TAG1_CMD_OPTION::set_has_len() {
  _has_bits_[0] |= 0x00000002u;
}
inline void oplog_req_TAG1_CMD_OPTION::clear_has_len() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void oplog_req_TAG1_CMD_OPTION::clear_len() {
  len_ = 0;
  clear_has_len();
}
inline ::google::protobuf::int32 oplog_req_TAG1_CMD_OPTION::len() const {
  // @@protoc_insertion_point(field_get:oplog_req.TAG1.CMD.OPTION.len)
  return len_;
}
inline void oplog_req_TAG1_CMD_OPTION::set_len(::google::protobuf::int32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:oplog_req.TAG1.CMD.OPTION.len)
}

// optional bytes data = 2;
inline bool oplog_req_TAG1_CMD_OPTION::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void oplog_req_TAG1_CMD_OPTION::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void oplog_req_TAG1_CMD_OPTION::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void oplog_req_TAG1_CMD_OPTION::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& oplog_req_TAG1_CMD_OPTION::data() const {
  // @@protoc_insertion_point(field_get:oplog_req.TAG1.CMD.OPTION.data)
  return data_.GetNoArena();
}
inline void oplog_req_TAG1_CMD_OPTION::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oplog_req.TAG1.CMD.OPTION.data)
}
#if LANG_CXX11
inline void oplog_req_TAG1_CMD_OPTION::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oplog_req.TAG1.CMD.OPTION.data)
}
#endif
inline void oplog_req_TAG1_CMD_OPTION::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oplog_req.TAG1.CMD.OPTION.data)
}
inline void oplog_req_TAG1_CMD_OPTION::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oplog_req.TAG1.CMD.OPTION.data)
}
inline ::std::string* oplog_req_TAG1_CMD_OPTION::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:oplog_req.TAG1.CMD.OPTION.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* oplog_req_TAG1_CMD_OPTION::release_data() {
  // @@protoc_insertion_point(field_release:oplog_req.TAG1.CMD.OPTION.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void oplog_req_TAG1_CMD_OPTION::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:oplog_req.TAG1.CMD.OPTION.data)
}

// -------------------------------------------------------------------

// oplog_req_TAG1_CMD

// optional int32 cmd_id = 1;
inline bool oplog_req_TAG1_CMD::has_cmd_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void oplog_req_TAG1_CMD::set_has_cmd_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void oplog_req_TAG1_CMD::clear_has_cmd_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void oplog_req_TAG1_CMD::clear_cmd_id() {
  cmd_id_ = 0;
  clear_has_cmd_id();
}
inline ::google::protobuf::int32 oplog_req_TAG1_CMD::cmd_id() const {
  // @@protoc_insertion_point(field_get:oplog_req.TAG1.CMD.cmd_id)
  return cmd_id_;
}
inline void oplog_req_TAG1_CMD::set_cmd_id(::google::protobuf::int32 value) {
  set_has_cmd_id();
  cmd_id_ = value;
  // @@protoc_insertion_point(field_set:oplog_req.TAG1.CMD.cmd_id)
}

// optional .oplog_req.TAG1.CMD.OPTION option = 2;
inline bool oplog_req_TAG1_CMD::has_option() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void oplog_req_TAG1_CMD::set_has_option() {
  _has_bits_[0] |= 0x00000001u;
}
inline void oplog_req_TAG1_CMD::clear_has_option() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void oplog_req_TAG1_CMD::clear_option() {
  if (option_ != NULL) option_->::oplog_req_TAG1_CMD_OPTION::Clear();
  clear_has_option();
}
inline const ::oplog_req_TAG1_CMD_OPTION& oplog_req_TAG1_CMD::option() const {
  // @@protoc_insertion_point(field_get:oplog_req.TAG1.CMD.option)
  return option_ != NULL ? *option_
                         : *::oplog_req_TAG1_CMD_OPTION::internal_default_instance();
}
inline ::oplog_req_TAG1_CMD_OPTION* oplog_req_TAG1_CMD::mutable_option() {
  set_has_option();
  if (option_ == NULL) {
    option_ = new ::oplog_req_TAG1_CMD_OPTION;
  }
  // @@protoc_insertion_point(field_mutable:oplog_req.TAG1.CMD.option)
  return option_;
}
inline ::oplog_req_TAG1_CMD_OPTION* oplog_req_TAG1_CMD::release_option() {
  // @@protoc_insertion_point(field_release:oplog_req.TAG1.CMD.option)
  clear_has_option();
  ::oplog_req_TAG1_CMD_OPTION* temp = option_;
  option_ = NULL;
  return temp;
}
inline void oplog_req_TAG1_CMD::set_allocated_option(::oplog_req_TAG1_CMD_OPTION* option) {
  delete option_;
  option_ = option;
  if (option) {
    set_has_option();
  } else {
    clear_has_option();
  }
  // @@protoc_insertion_point(field_set_allocated:oplog_req.TAG1.CMD.option)
}

// -------------------------------------------------------------------

// oplog_req_TAG1

// optional int32 tag1 = 1;
inline bool oplog_req_TAG1::has_tag1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void oplog_req_TAG1::set_has_tag1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void oplog_req_TAG1::clear_has_tag1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void oplog_req_TAG1::clear_tag1() {
  tag1_ = 0;
  clear_has_tag1();
}
inline ::google::protobuf::int32 oplog_req_TAG1::tag1() const {
  // @@protoc_insertion_point(field_get:oplog_req.TAG1.tag1)
  return tag1_;
}
inline void oplog_req_TAG1::set_tag1(::google::protobuf::int32 value) {
  set_has_tag1();
  tag1_ = value;
  // @@protoc_insertion_point(field_set:oplog_req.TAG1.tag1)
}

// optional .oplog_req.TAG1.CMD cmd = 2;
inline bool oplog_req_TAG1::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void oplog_req_TAG1::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void oplog_req_TAG1::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void oplog_req_TAG1::clear_cmd() {
  if (cmd_ != NULL) cmd_->::oplog_req_TAG1_CMD::Clear();
  clear_has_cmd();
}
inline const ::oplog_req_TAG1_CMD& oplog_req_TAG1::cmd() const {
  // @@protoc_insertion_point(field_get:oplog_req.TAG1.cmd)
  return cmd_ != NULL ? *cmd_
                         : *::oplog_req_TAG1_CMD::internal_default_instance();
}
inline ::oplog_req_TAG1_CMD* oplog_req_TAG1::mutable_cmd() {
  set_has_cmd();
  if (cmd_ == NULL) {
    cmd_ = new ::oplog_req_TAG1_CMD;
  }
  // @@protoc_insertion_point(field_mutable:oplog_req.TAG1.cmd)
  return cmd_;
}
inline ::oplog_req_TAG1_CMD* oplog_req_TAG1::release_cmd() {
  // @@protoc_insertion_point(field_release:oplog_req.TAG1.cmd)
  clear_has_cmd();
  ::oplog_req_TAG1_CMD* temp = cmd_;
  cmd_ = NULL;
  return temp;
}
inline void oplog_req_TAG1::set_allocated_cmd(::oplog_req_TAG1_CMD* cmd) {
  delete cmd_;
  cmd_ = cmd;
  if (cmd) {
    set_has_cmd();
  } else {
    clear_has_cmd();
  }
  // @@protoc_insertion_point(field_set_allocated:oplog_req.TAG1.cmd)
}

// -------------------------------------------------------------------

// oplog_req

// optional .oplog_req.TAG1 tag1 = 1;
inline bool oplog_req::has_tag1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void oplog_req::set_has_tag1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void oplog_req::clear_has_tag1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void oplog_req::clear_tag1() {
  if (tag1_ != NULL) tag1_->::oplog_req_TAG1::Clear();
  clear_has_tag1();
}
inline const ::oplog_req_TAG1& oplog_req::tag1() const {
  // @@protoc_insertion_point(field_get:oplog_req.tag1)
  return tag1_ != NULL ? *tag1_
                         : *::oplog_req_TAG1::internal_default_instance();
}
inline ::oplog_req_TAG1* oplog_req::mutable_tag1() {
  set_has_tag1();
  if (tag1_ == NULL) {
    tag1_ = new ::oplog_req_TAG1;
  }
  // @@protoc_insertion_point(field_mutable:oplog_req.tag1)
  return tag1_;
}
inline ::oplog_req_TAG1* oplog_req::release_tag1() {
  // @@protoc_insertion_point(field_release:oplog_req.tag1)
  clear_has_tag1();
  ::oplog_req_TAG1* temp = tag1_;
  tag1_ = NULL;
  return temp;
}
inline void oplog_req::set_allocated_tag1(::oplog_req_TAG1* tag1) {
  delete tag1_;
  tag1_ = tag1;
  if (tag1) {
    set_has_tag1();
  } else {
    clear_has_tag1();
  }
  // @@protoc_insertion_point(field_set_allocated:oplog_req.tag1)
}

// -------------------------------------------------------------------

// oplog_resp_result

// optional bytes code = 2;
inline bool oplog_resp_result::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void oplog_resp_result::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void oplog_resp_result::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void oplog_resp_result::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_code();
}
inline const ::std::string& oplog_resp_result::code() const {
  // @@protoc_insertion_point(field_get:oplog_resp.result.code)
  return code_.GetNoArena();
}
inline void oplog_resp_result::set_code(const ::std::string& value) {
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oplog_resp.result.code)
}
#if LANG_CXX11
inline void oplog_resp_result::set_code(::std::string&& value) {
  set_has_code();
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oplog_resp.result.code)
}
#endif
inline void oplog_resp_result::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oplog_resp.result.code)
}
inline void oplog_resp_result::set_code(const void* value, size_t size) {
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oplog_resp.result.code)
}
inline ::std::string* oplog_resp_result::mutable_code() {
  set_has_code();
  // @@protoc_insertion_point(field_mutable:oplog_resp.result.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* oplog_resp_result::release_code() {
  // @@protoc_insertion_point(field_release:oplog_resp.result.code)
  clear_has_code();
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void oplog_resp_result::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    set_has_code();
  } else {
    clear_has_code();
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:oplog_resp.result.code)
}

// optional string msg = 3;
inline bool oplog_resp_result::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void oplog_resp_result::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void oplog_resp_result::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void oplog_resp_result::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& oplog_resp_result::msg() const {
  // @@protoc_insertion_point(field_get:oplog_resp.result.msg)
  return msg_.GetNoArena();
}
inline void oplog_resp_result::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oplog_resp.result.msg)
}
#if LANG_CXX11
inline void oplog_resp_result::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oplog_resp.result.msg)
}
#endif
inline void oplog_resp_result::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oplog_resp.result.msg)
}
inline void oplog_resp_result::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oplog_resp.result.msg)
}
inline ::std::string* oplog_resp_result::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:oplog_resp.result.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* oplog_resp_result::release_msg() {
  // @@protoc_insertion_point(field_release:oplog_resp.result.msg)
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void oplog_resp_result::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:oplog_resp.result.msg)
}

// -------------------------------------------------------------------

// oplog_resp

// optional .oplog_resp.result res = 2;
inline bool oplog_resp::has_res() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void oplog_resp::set_has_res() {
  _has_bits_[0] |= 0x00000001u;
}
inline void oplog_resp::clear_has_res() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void oplog_resp::clear_res() {
  if (res_ != NULL) res_->::oplog_resp_result::Clear();
  clear_has_res();
}
inline const ::oplog_resp_result& oplog_resp::res() const {
  // @@protoc_insertion_point(field_get:oplog_resp.res)
  return res_ != NULL ? *res_
                         : *::oplog_resp_result::internal_default_instance();
}
inline ::oplog_resp_result* oplog_resp::mutable_res() {
  set_has_res();
  if (res_ == NULL) {
    res_ = new ::oplog_resp_result;
  }
  // @@protoc_insertion_point(field_mutable:oplog_resp.res)
  return res_;
}
inline ::oplog_resp_result* oplog_resp::release_res() {
  // @@protoc_insertion_point(field_release:oplog_resp.res)
  clear_has_res();
  ::oplog_resp_result* temp = res_;
  res_ = NULL;
  return temp;
}
inline void oplog_resp::set_allocated_res(::oplog_resp_result* res) {
  delete res_;
  res_ = res;
  if (res) {
    set_has_res();
  } else {
    clear_has_res();
  }
  // @@protoc_insertion_point(field_set_allocated:oplog_resp.res)
}

// -------------------------------------------------------------------

// revoke_msg_req

// optional .LoginInfo login = 1;
inline bool revoke_msg_req::has_login() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void revoke_msg_req::set_has_login() {
  _has_bits_[0] |= 0x00000008u;
}
inline void revoke_msg_req::clear_has_login() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void revoke_msg_req::clear_login() {
  if (login_ != NULL) login_->::LoginInfo::Clear();
  clear_has_login();
}
inline const ::LoginInfo& revoke_msg_req::login() const {
  // @@protoc_insertion_point(field_get:revoke_msg_req.login)
  return login_ != NULL ? *login_
                         : *::LoginInfo::internal_default_instance();
}
inline ::LoginInfo* revoke_msg_req::mutable_login() {
  set_has_login();
  if (login_ == NULL) {
    login_ = new ::LoginInfo;
  }
  // @@protoc_insertion_point(field_mutable:revoke_msg_req.login)
  return login_;
}
inline ::LoginInfo* revoke_msg_req::release_login() {
  // @@protoc_insertion_point(field_release:revoke_msg_req.login)
  clear_has_login();
  ::LoginInfo* temp = login_;
  login_ = NULL;
  return temp;
}
inline void revoke_msg_req::set_allocated_login(::LoginInfo* login) {
  delete login_;
  login_ = login;
  if (login) {
    set_has_login();
  } else {
    clear_has_login();
  }
  // @@protoc_insertion_point(field_set_allocated:revoke_msg_req.login)
}

// optional string client_id = 2;
inline bool revoke_msg_req::has_client_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void revoke_msg_req::set_has_client_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void revoke_msg_req::clear_has_client_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void revoke_msg_req::clear_client_id() {
  client_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_client_id();
}
inline const ::std::string& revoke_msg_req::client_id() const {
  // @@protoc_insertion_point(field_get:revoke_msg_req.client_id)
  return client_id_.GetNoArena();
}
inline void revoke_msg_req::set_client_id(const ::std::string& value) {
  set_has_client_id();
  client_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:revoke_msg_req.client_id)
}
#if LANG_CXX11
inline void revoke_msg_req::set_client_id(::std::string&& value) {
  set_has_client_id();
  client_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:revoke_msg_req.client_id)
}
#endif
inline void revoke_msg_req::set_client_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_client_id();
  client_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:revoke_msg_req.client_id)
}
inline void revoke_msg_req::set_client_id(const char* value, size_t size) {
  set_has_client_id();
  client_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:revoke_msg_req.client_id)
}
inline ::std::string* revoke_msg_req::mutable_client_id() {
  set_has_client_id();
  // @@protoc_insertion_point(field_mutable:revoke_msg_req.client_id)
  return client_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* revoke_msg_req::release_client_id() {
  // @@protoc_insertion_point(field_release:revoke_msg_req.client_id)
  clear_has_client_id();
  return client_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void revoke_msg_req::set_allocated_client_id(::std::string* client_id) {
  if (client_id != NULL) {
    set_has_client_id();
  } else {
    clear_has_client_id();
  }
  client_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_id);
  // @@protoc_insertion_point(field_set_allocated:revoke_msg_req.client_id)
}

// optional int64 new_client_id = 3;
inline bool revoke_msg_req::has_new_client_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void revoke_msg_req::set_has_new_client_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void revoke_msg_req::clear_has_new_client_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void revoke_msg_req::clear_new_client_id() {
  new_client_id_ = GOOGLE_LONGLONG(0);
  clear_has_new_client_id();
}
inline ::google::protobuf::int64 revoke_msg_req::new_client_id() const {
  // @@protoc_insertion_point(field_get:revoke_msg_req.new_client_id)
  return new_client_id_;
}
inline void revoke_msg_req::set_new_client_id(::google::protobuf::int64 value) {
  set_has_new_client_id();
  new_client_id_ = value;
  // @@protoc_insertion_point(field_set:revoke_msg_req.new_client_id)
}

// optional int32 utc = 4;
inline bool revoke_msg_req::has_utc() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void revoke_msg_req::set_has_utc() {
  _has_bits_[0] |= 0x00000020u;
}
inline void revoke_msg_req::clear_has_utc() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void revoke_msg_req::clear_utc() {
  utc_ = 0;
  clear_has_utc();
}
inline ::google::protobuf::int32 revoke_msg_req::utc() const {
  // @@protoc_insertion_point(field_get:revoke_msg_req.utc)
  return utc_;
}
inline void revoke_msg_req::set_utc(::google::protobuf::int32 value) {
  set_has_utc();
  utc_ = value;
  // @@protoc_insertion_point(field_set:revoke_msg_req.utc)
}

// optional int32 tag5 = 5;
inline bool revoke_msg_req::has_tag5() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void revoke_msg_req::set_has_tag5() {
  _has_bits_[0] |= 0x00000040u;
}
inline void revoke_msg_req::clear_has_tag5() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void revoke_msg_req::clear_tag5() {
  tag5_ = 0;
  clear_has_tag5();
}
inline ::google::protobuf::int32 revoke_msg_req::tag5() const {
  // @@protoc_insertion_point(field_get:revoke_msg_req.tag5)
  return tag5_;
}
inline void revoke_msg_req::set_tag5(::google::protobuf::int32 value) {
  set_has_tag5();
  tag5_ = value;
  // @@protoc_insertion_point(field_set:revoke_msg_req.tag5)
}

// optional string from_wxid = 6;
inline bool revoke_msg_req::has_from_wxid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void revoke_msg_req::set_has_from_wxid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void revoke_msg_req::clear_has_from_wxid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void revoke_msg_req::clear_from_wxid() {
  from_wxid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_from_wxid();
}
inline const ::std::string& revoke_msg_req::from_wxid() const {
  // @@protoc_insertion_point(field_get:revoke_msg_req.from_wxid)
  return from_wxid_.GetNoArena();
}
inline void revoke_msg_req::set_from_wxid(const ::std::string& value) {
  set_has_from_wxid();
  from_wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:revoke_msg_req.from_wxid)
}
#if LANG_CXX11
inline void revoke_msg_req::set_from_wxid(::std::string&& value) {
  set_has_from_wxid();
  from_wxid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:revoke_msg_req.from_wxid)
}
#endif
inline void revoke_msg_req::set_from_wxid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_from_wxid();
  from_wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:revoke_msg_req.from_wxid)
}
inline void revoke_msg_req::set_from_wxid(const char* value, size_t size) {
  set_has_from_wxid();
  from_wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:revoke_msg_req.from_wxid)
}
inline ::std::string* revoke_msg_req::mutable_from_wxid() {
  set_has_from_wxid();
  // @@protoc_insertion_point(field_mutable:revoke_msg_req.from_wxid)
  return from_wxid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* revoke_msg_req::release_from_wxid() {
  // @@protoc_insertion_point(field_release:revoke_msg_req.from_wxid)
  clear_has_from_wxid();
  return from_wxid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void revoke_msg_req::set_allocated_from_wxid(::std::string* from_wxid) {
  if (from_wxid != NULL) {
    set_has_from_wxid();
  } else {
    clear_has_from_wxid();
  }
  from_wxid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_wxid);
  // @@protoc_insertion_point(field_set_allocated:revoke_msg_req.from_wxid)
}

// optional string to_wxid = 7;
inline bool revoke_msg_req::has_to_wxid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void revoke_msg_req::set_has_to_wxid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void revoke_msg_req::clear_has_to_wxid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void revoke_msg_req::clear_to_wxid() {
  to_wxid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_to_wxid();
}
inline const ::std::string& revoke_msg_req::to_wxid() const {
  // @@protoc_insertion_point(field_get:revoke_msg_req.to_wxid)
  return to_wxid_.GetNoArena();
}
inline void revoke_msg_req::set_to_wxid(const ::std::string& value) {
  set_has_to_wxid();
  to_wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:revoke_msg_req.to_wxid)
}
#if LANG_CXX11
inline void revoke_msg_req::set_to_wxid(::std::string&& value) {
  set_has_to_wxid();
  to_wxid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:revoke_msg_req.to_wxid)
}
#endif
inline void revoke_msg_req::set_to_wxid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_to_wxid();
  to_wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:revoke_msg_req.to_wxid)
}
inline void revoke_msg_req::set_to_wxid(const char* value, size_t size) {
  set_has_to_wxid();
  to_wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:revoke_msg_req.to_wxid)
}
inline ::std::string* revoke_msg_req::mutable_to_wxid() {
  set_has_to_wxid();
  // @@protoc_insertion_point(field_mutable:revoke_msg_req.to_wxid)
  return to_wxid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* revoke_msg_req::release_to_wxid() {
  // @@protoc_insertion_point(field_release:revoke_msg_req.to_wxid)
  clear_has_to_wxid();
  return to_wxid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void revoke_msg_req::set_allocated_to_wxid(::std::string* to_wxid) {
  if (to_wxid != NULL) {
    set_has_to_wxid();
  } else {
    clear_has_to_wxid();
  }
  to_wxid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_wxid);
  // @@protoc_insertion_point(field_set_allocated:revoke_msg_req.to_wxid)
}

// optional int32 index_of_request = 8;
inline bool revoke_msg_req::has_index_of_request() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void revoke_msg_req::set_has_index_of_request() {
  _has_bits_[0] |= 0x00000100u;
}
inline void revoke_msg_req::clear_has_index_of_request() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void revoke_msg_req::clear_index_of_request() {
  index_of_request_ = 0;
  clear_has_index_of_request();
}
inline ::google::protobuf::int32 revoke_msg_req::index_of_request() const {
  // @@protoc_insertion_point(field_get:revoke_msg_req.index_of_request)
  return index_of_request_;
}
inline void revoke_msg_req::set_index_of_request(::google::protobuf::int32 value) {
  set_has_index_of_request();
  index_of_request_ = value;
  // @@protoc_insertion_point(field_set:revoke_msg_req.index_of_request)
}

// optional int64 svrid = 9;
inline bool revoke_msg_req::has_svrid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void revoke_msg_req::set_has_svrid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void revoke_msg_req::clear_has_svrid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void revoke_msg_req::clear_svrid() {
  svrid_ = GOOGLE_LONGLONG(0);
  clear_has_svrid();
}
inline ::google::protobuf::int64 revoke_msg_req::svrid() const {
  // @@protoc_insertion_point(field_get:revoke_msg_req.svrid)
  return svrid_;
}
inline void revoke_msg_req::set_svrid(::google::protobuf::int64 value) {
  set_has_svrid();
  svrid_ = value;
  // @@protoc_insertion_point(field_set:revoke_msg_req.svrid)
}

// -------------------------------------------------------------------

// revoke_msg_resp

// optional .mmRes res = 1;
inline bool revoke_msg_resp::has_res() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void revoke_msg_resp::set_has_res() {
  _has_bits_[0] |= 0x00000002u;
}
inline void revoke_msg_resp::clear_has_res() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void revoke_msg_resp::clear_res() {
  if (res_ != NULL) res_->::mmRes::Clear();
  clear_has_res();
}
inline const ::mmRes& revoke_msg_resp::res() const {
  // @@protoc_insertion_point(field_get:revoke_msg_resp.res)
  return res_ != NULL ? *res_
                         : *::mmRes::internal_default_instance();
}
inline ::mmRes* revoke_msg_resp::mutable_res() {
  set_has_res();
  if (res_ == NULL) {
    res_ = new ::mmRes;
  }
  // @@protoc_insertion_point(field_mutable:revoke_msg_resp.res)
  return res_;
}
inline ::mmRes* revoke_msg_resp::release_res() {
  // @@protoc_insertion_point(field_release:revoke_msg_resp.res)
  clear_has_res();
  ::mmRes* temp = res_;
  res_ = NULL;
  return temp;
}
inline void revoke_msg_resp::set_allocated_res(::mmRes* res) {
  delete res_;
  res_ = res;
  if (res) {
    set_has_res();
  } else {
    clear_has_res();
  }
  // @@protoc_insertion_point(field_set_allocated:revoke_msg_resp.res)
}

// optional string response_sys_wording = 3;
inline bool revoke_msg_resp::has_response_sys_wording() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void revoke_msg_resp::set_has_response_sys_wording() {
  _has_bits_[0] |= 0x00000001u;
}
inline void revoke_msg_resp::clear_has_response_sys_wording() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void revoke_msg_resp::clear_response_sys_wording() {
  response_sys_wording_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_response_sys_wording();
}
inline const ::std::string& revoke_msg_resp::response_sys_wording() const {
  // @@protoc_insertion_point(field_get:revoke_msg_resp.response_sys_wording)
  return response_sys_wording_.GetNoArena();
}
inline void revoke_msg_resp::set_response_sys_wording(const ::std::string& value) {
  set_has_response_sys_wording();
  response_sys_wording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:revoke_msg_resp.response_sys_wording)
}
#if LANG_CXX11
inline void revoke_msg_resp::set_response_sys_wording(::std::string&& value) {
  set_has_response_sys_wording();
  response_sys_wording_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:revoke_msg_resp.response_sys_wording)
}
#endif
inline void revoke_msg_resp::set_response_sys_wording(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_response_sys_wording();
  response_sys_wording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:revoke_msg_resp.response_sys_wording)
}
inline void revoke_msg_resp::set_response_sys_wording(const char* value, size_t size) {
  set_has_response_sys_wording();
  response_sys_wording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:revoke_msg_resp.response_sys_wording)
}
inline ::std::string* revoke_msg_resp::mutable_response_sys_wording() {
  set_has_response_sys_wording();
  // @@protoc_insertion_point(field_mutable:revoke_msg_resp.response_sys_wording)
  return response_sys_wording_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* revoke_msg_resp::release_response_sys_wording() {
  // @@protoc_insertion_point(field_release:revoke_msg_resp.response_sys_wording)
  clear_has_response_sys_wording();
  return response_sys_wording_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void revoke_msg_resp::set_allocated_response_sys_wording(::std::string* response_sys_wording) {
  if (response_sys_wording != NULL) {
    set_has_response_sys_wording();
  } else {
    clear_has_response_sys_wording();
  }
  response_sys_wording_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response_sys_wording);
  // @@protoc_insertion_point(field_set_allocated:revoke_msg_resp.response_sys_wording)
}

// -------------------------------------------------------------------

// set_chatroom_announcement_req

// optional .LoginInfo login = 1;
inline bool set_chatroom_announcement_req::has_login() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void set_chatroom_announcement_req::set_has_login() {
  _has_bits_[0] |= 0x00000004u;
}
inline void set_chatroom_announcement_req::clear_has_login() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void set_chatroom_announcement_req::clear_login() {
  if (login_ != NULL) login_->::LoginInfo::Clear();
  clear_has_login();
}
inline const ::LoginInfo& set_chatroom_announcement_req::login() const {
  // @@protoc_insertion_point(field_get:set_chatroom_announcement_req.login)
  return login_ != NULL ? *login_
                         : *::LoginInfo::internal_default_instance();
}
inline ::LoginInfo* set_chatroom_announcement_req::mutable_login() {
  set_has_login();
  if (login_ == NULL) {
    login_ = new ::LoginInfo;
  }
  // @@protoc_insertion_point(field_mutable:set_chatroom_announcement_req.login)
  return login_;
}
inline ::LoginInfo* set_chatroom_announcement_req::release_login() {
  // @@protoc_insertion_point(field_release:set_chatroom_announcement_req.login)
  clear_has_login();
  ::LoginInfo* temp = login_;
  login_ = NULL;
  return temp;
}
inline void set_chatroom_announcement_req::set_allocated_login(::LoginInfo* login) {
  delete login_;
  login_ = login;
  if (login) {
    set_has_login();
  } else {
    clear_has_login();
  }
  // @@protoc_insertion_point(field_set_allocated:set_chatroom_announcement_req.login)
}

// optional string chatroom_wxid = 2;
inline bool set_chatroom_announcement_req::has_chatroom_wxid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void set_chatroom_announcement_req::set_has_chatroom_wxid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void set_chatroom_announcement_req::clear_has_chatroom_wxid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void set_chatroom_announcement_req::clear_chatroom_wxid() {
  chatroom_wxid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chatroom_wxid();
}
inline const ::std::string& set_chatroom_announcement_req::chatroom_wxid() const {
  // @@protoc_insertion_point(field_get:set_chatroom_announcement_req.chatroom_wxid)
  return chatroom_wxid_.GetNoArena();
}
inline void set_chatroom_announcement_req::set_chatroom_wxid(const ::std::string& value) {
  set_has_chatroom_wxid();
  chatroom_wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:set_chatroom_announcement_req.chatroom_wxid)
}
#if LANG_CXX11
inline void set_chatroom_announcement_req::set_chatroom_wxid(::std::string&& value) {
  set_has_chatroom_wxid();
  chatroom_wxid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:set_chatroom_announcement_req.chatroom_wxid)
}
#endif
inline void set_chatroom_announcement_req::set_chatroom_wxid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chatroom_wxid();
  chatroom_wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:set_chatroom_announcement_req.chatroom_wxid)
}
inline void set_chatroom_announcement_req::set_chatroom_wxid(const char* value, size_t size) {
  set_has_chatroom_wxid();
  chatroom_wxid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:set_chatroom_announcement_req.chatroom_wxid)
}
inline ::std::string* set_chatroom_announcement_req::mutable_chatroom_wxid() {
  set_has_chatroom_wxid();
  // @@protoc_insertion_point(field_mutable:set_chatroom_announcement_req.chatroom_wxid)
  return chatroom_wxid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* set_chatroom_announcement_req::release_chatroom_wxid() {
  // @@protoc_insertion_point(field_release:set_chatroom_announcement_req.chatroom_wxid)
  clear_has_chatroom_wxid();
  return chatroom_wxid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void set_chatroom_announcement_req::set_allocated_chatroom_wxid(::std::string* chatroom_wxid) {
  if (chatroom_wxid != NULL) {
    set_has_chatroom_wxid();
  } else {
    clear_has_chatroom_wxid();
  }
  chatroom_wxid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chatroom_wxid);
  // @@protoc_insertion_point(field_set_allocated:set_chatroom_announcement_req.chatroom_wxid)
}

// optional string content = 3;
inline bool set_chatroom_announcement_req::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void set_chatroom_announcement_req::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void set_chatroom_announcement_req::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void set_chatroom_announcement_req::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& set_chatroom_announcement_req::content() const {
  // @@protoc_insertion_point(field_get:set_chatroom_announcement_req.content)
  return content_.GetNoArena();
}
inline void set_chatroom_announcement_req::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:set_chatroom_announcement_req.content)
}
#if LANG_CXX11
inline void set_chatroom_announcement_req::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:set_chatroom_announcement_req.content)
}
#endif
inline void set_chatroom_announcement_req::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:set_chatroom_announcement_req.content)
}
inline void set_chatroom_announcement_req::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:set_chatroom_announcement_req.content)
}
inline ::std::string* set_chatroom_announcement_req::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:set_chatroom_announcement_req.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* set_chatroom_announcement_req::release_content() {
  // @@protoc_insertion_point(field_release:set_chatroom_announcement_req.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void set_chatroom_announcement_req::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:set_chatroom_announcement_req.content)
}

// -------------------------------------------------------------------

// set_chatroom_announcement_resp

// optional .mmRes res = 1;
inline bool set_chatroom_announcement_resp::has_res() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void set_chatroom_announcement_resp::set_has_res() {
  _has_bits_[0] |= 0x00000001u;
}
inline void set_chatroom_announcement_resp::clear_has_res() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void set_chatroom_announcement_resp::clear_res() {
  if (res_ != NULL) res_->::mmRes::Clear();
  clear_has_res();
}
inline const ::mmRes& set_chatroom_announcement_resp::res() const {
  // @@protoc_insertion_point(field_get:set_chatroom_announcement_resp.res)
  return res_ != NULL ? *res_
                         : *::mmRes::internal_default_instance();
}
inline ::mmRes* set_chatroom_announcement_resp::mutable_res() {
  set_has_res();
  if (res_ == NULL) {
    res_ = new ::mmRes;
  }
  // @@protoc_insertion_point(field_mutable:set_chatroom_announcement_resp.res)
  return res_;
}
inline ::mmRes* set_chatroom_announcement_resp::release_res() {
  // @@protoc_insertion_point(field_release:set_chatroom_announcement_resp.res)
  clear_has_res();
  ::mmRes* temp = res_;
  res_ = NULL;
  return temp;
}
inline void set_chatroom_announcement_resp::set_allocated_res(::mmRes* res) {
  delete res_;
  res_ = res;
  if (res) {
    set_has_res();
  } else {
    clear_has_res();
  }
  // @@protoc_insertion_point(field_set_allocated:set_chatroom_announcement_resp.res)
}

// -------------------------------------------------------------------

// GetLoginQRCodeRequest

// required .LoginInfo base = 1;
inline bool GetLoginQRCodeRequest::has_base() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetLoginQRCodeRequest::set_has_base() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetLoginQRCodeRequest::clear_has_base() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetLoginQRCodeRequest::clear_base() {
  if (base_ != NULL) base_->::LoginInfo::Clear();
  clear_has_base();
}
inline const ::LoginInfo& GetLoginQRCodeRequest::base() const {
  // @@protoc_insertion_point(field_get:GetLoginQRCodeRequest.base)
  return base_ != NULL ? *base_
                         : *::LoginInfo::internal_default_instance();
}
inline ::LoginInfo* GetLoginQRCodeRequest::mutable_base() {
  set_has_base();
  if (base_ == NULL) {
    base_ = new ::LoginInfo;
  }
  // @@protoc_insertion_point(field_mutable:GetLoginQRCodeRequest.base)
  return base_;
}
inline ::LoginInfo* GetLoginQRCodeRequest::release_base() {
  // @@protoc_insertion_point(field_release:GetLoginQRCodeRequest.base)
  clear_has_base();
  ::LoginInfo* temp = base_;
  base_ = NULL;
  return temp;
}
inline void GetLoginQRCodeRequest::set_allocated_base(::LoginInfo* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:GetLoginQRCodeRequest.base)
}

// required .sKBuiltinBufferT randomEncryKey = 2;
inline bool GetLoginQRCodeRequest::has_randomencrykey() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetLoginQRCodeRequest::set_has_randomencrykey() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetLoginQRCodeRequest::clear_has_randomencrykey() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetLoginQRCodeRequest::clear_randomencrykey() {
  if (randomencrykey_ != NULL) randomencrykey_->::sKBuiltinBufferT::Clear();
  clear_has_randomencrykey();
}
inline const ::sKBuiltinBufferT& GetLoginQRCodeRequest::randomencrykey() const {
  // @@protoc_insertion_point(field_get:GetLoginQRCodeRequest.randomEncryKey)
  return randomencrykey_ != NULL ? *randomencrykey_
                         : *::sKBuiltinBufferT::internal_default_instance();
}
inline ::sKBuiltinBufferT* GetLoginQRCodeRequest::mutable_randomencrykey() {
  set_has_randomencrykey();
  if (randomencrykey_ == NULL) {
    randomencrykey_ = new ::sKBuiltinBufferT;
  }
  // @@protoc_insertion_point(field_mutable:GetLoginQRCodeRequest.randomEncryKey)
  return randomencrykey_;
}
inline ::sKBuiltinBufferT* GetLoginQRCodeRequest::release_randomencrykey() {
  // @@protoc_insertion_point(field_release:GetLoginQRCodeRequest.randomEncryKey)
  clear_has_randomencrykey();
  ::sKBuiltinBufferT* temp = randomencrykey_;
  randomencrykey_ = NULL;
  return temp;
}
inline void GetLoginQRCodeRequest::set_allocated_randomencrykey(::sKBuiltinBufferT* randomencrykey) {
  delete randomencrykey_;
  randomencrykey_ = randomencrykey;
  if (randomencrykey) {
    set_has_randomencrykey();
  } else {
    clear_has_randomencrykey();
  }
  // @@protoc_insertion_point(field_set_allocated:GetLoginQRCodeRequest.randomEncryKey)
}

// required int32 opcode = 3;
inline bool GetLoginQRCodeRequest::has_opcode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetLoginQRCodeRequest::set_has_opcode() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetLoginQRCodeRequest::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetLoginQRCodeRequest::clear_opcode() {
  opcode_ = 0;
  clear_has_opcode();
}
inline ::google::protobuf::int32 GetLoginQRCodeRequest::opcode() const {
  // @@protoc_insertion_point(field_get:GetLoginQRCodeRequest.opcode)
  return opcode_;
}
inline void GetLoginQRCodeRequest::set_opcode(::google::protobuf::int32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:GetLoginQRCodeRequest.opcode)
}

// optional string deviceName = 4;
inline bool GetLoginQRCodeRequest::has_devicename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetLoginQRCodeRequest::set_has_devicename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetLoginQRCodeRequest::clear_has_devicename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetLoginQRCodeRequest::clear_devicename() {
  devicename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_devicename();
}
inline const ::std::string& GetLoginQRCodeRequest::devicename() const {
  // @@protoc_insertion_point(field_get:GetLoginQRCodeRequest.deviceName)
  return devicename_.GetNoArena();
}
inline void GetLoginQRCodeRequest::set_devicename(const ::std::string& value) {
  set_has_devicename();
  devicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GetLoginQRCodeRequest.deviceName)
}
#if LANG_CXX11
inline void GetLoginQRCodeRequest::set_devicename(::std::string&& value) {
  set_has_devicename();
  devicename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GetLoginQRCodeRequest.deviceName)
}
#endif
inline void GetLoginQRCodeRequest::set_devicename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_devicename();
  devicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GetLoginQRCodeRequest.deviceName)
}
inline void GetLoginQRCodeRequest::set_devicename(const char* value, size_t size) {
  set_has_devicename();
  devicename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GetLoginQRCodeRequest.deviceName)
}
inline ::std::string* GetLoginQRCodeRequest::mutable_devicename() {
  set_has_devicename();
  // @@protoc_insertion_point(field_mutable:GetLoginQRCodeRequest.deviceName)
  return devicename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetLoginQRCodeRequest::release_devicename() {
  // @@protoc_insertion_point(field_release:GetLoginQRCodeRequest.deviceName)
  clear_has_devicename();
  return devicename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetLoginQRCodeRequest::set_allocated_devicename(::std::string* devicename) {
  if (devicename != NULL) {
    set_has_devicename();
  } else {
    clear_has_devicename();
  }
  devicename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devicename);
  // @@protoc_insertion_point(field_set_allocated:GetLoginQRCodeRequest.deviceName)
}

// optional string username = 5;
inline bool GetLoginQRCodeRequest::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetLoginQRCodeRequest::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetLoginQRCodeRequest::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetLoginQRCodeRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& GetLoginQRCodeRequest::username() const {
  // @@protoc_insertion_point(field_get:GetLoginQRCodeRequest.username)
  return username_.GetNoArena();
}
inline void GetLoginQRCodeRequest::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GetLoginQRCodeRequest.username)
}
#if LANG_CXX11
inline void GetLoginQRCodeRequest::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GetLoginQRCodeRequest.username)
}
#endif
inline void GetLoginQRCodeRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GetLoginQRCodeRequest.username)
}
inline void GetLoginQRCodeRequest::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GetLoginQRCodeRequest.username)
}
inline ::std::string* GetLoginQRCodeRequest::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:GetLoginQRCodeRequest.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetLoginQRCodeRequest::release_username() {
  // @@protoc_insertion_point(field_release:GetLoginQRCodeRequest.username)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetLoginQRCodeRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:GetLoginQRCodeRequest.username)
}

// -------------------------------------------------------------------

// sKBuiltinBufferT

// optional int32 ILen = 1;
inline bool sKBuiltinBufferT::has_ilen() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void sKBuiltinBufferT::set_has_ilen() {
  _has_bits_[0] |= 0x00000002u;
}
inline void sKBuiltinBufferT::clear_has_ilen() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void sKBuiltinBufferT::clear_ilen() {
  ilen_ = 0;
  clear_has_ilen();
}
inline ::google::protobuf::int32 sKBuiltinBufferT::ilen() const {
  // @@protoc_insertion_point(field_get:sKBuiltinBufferT.ILen)
  return ilen_;
}
inline void sKBuiltinBufferT::set_ilen(::google::protobuf::int32 value) {
  set_has_ilen();
  ilen_ = value;
  // @@protoc_insertion_point(field_set:sKBuiltinBufferT.ILen)
}

// optional bytes Buffer = 2;
inline bool sKBuiltinBufferT::has_buffer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void sKBuiltinBufferT::set_has_buffer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void sKBuiltinBufferT::clear_has_buffer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void sKBuiltinBufferT::clear_buffer() {
  buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_buffer();
}
inline const ::std::string& sKBuiltinBufferT::buffer() const {
  // @@protoc_insertion_point(field_get:sKBuiltinBufferT.Buffer)
  return buffer_.GetNoArena();
}
inline void sKBuiltinBufferT::set_buffer(const ::std::string& value) {
  set_has_buffer();
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:sKBuiltinBufferT.Buffer)
}
#if LANG_CXX11
inline void sKBuiltinBufferT::set_buffer(::std::string&& value) {
  set_has_buffer();
  buffer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:sKBuiltinBufferT.Buffer)
}
#endif
inline void sKBuiltinBufferT::set_buffer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_buffer();
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:sKBuiltinBufferT.Buffer)
}
inline void sKBuiltinBufferT::set_buffer(const void* value, size_t size) {
  set_has_buffer();
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:sKBuiltinBufferT.Buffer)
}
inline ::std::string* sKBuiltinBufferT::mutable_buffer() {
  set_has_buffer();
  // @@protoc_insertion_point(field_mutable:sKBuiltinBufferT.Buffer)
  return buffer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* sKBuiltinBufferT::release_buffer() {
  // @@protoc_insertion_point(field_release:sKBuiltinBufferT.Buffer)
  clear_has_buffer();
  return buffer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void sKBuiltinBufferT::set_allocated_buffer(::std::string* buffer) {
  if (buffer != NULL) {
    set_has_buffer();
  } else {
    clear_has_buffer();
  }
  buffer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buffer);
  // @@protoc_insertion_point(field_set_allocated:sKBuiltinBufferT.Buffer)
}

// -------------------------------------------------------------------

// GetLoginQRCodeResponse

// required .mmRes Base = 1;
inline bool GetLoginQRCodeResponse::has_base() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetLoginQRCodeResponse::set_has_base() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetLoginQRCodeResponse::clear_has_base() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetLoginQRCodeResponse::clear_base() {
  if (base_ != NULL) base_->::mmRes::Clear();
  clear_has_base();
}
inline const ::mmRes& GetLoginQRCodeResponse::base() const {
  // @@protoc_insertion_point(field_get:GetLoginQRCodeResponse.Base)
  return base_ != NULL ? *base_
                         : *::mmRes::internal_default_instance();
}
inline ::mmRes* GetLoginQRCodeResponse::mutable_base() {
  set_has_base();
  if (base_ == NULL) {
    base_ = new ::mmRes;
  }
  // @@protoc_insertion_point(field_mutable:GetLoginQRCodeResponse.Base)
  return base_;
}
inline ::mmRes* GetLoginQRCodeResponse::release_base() {
  // @@protoc_insertion_point(field_release:GetLoginQRCodeResponse.Base)
  clear_has_base();
  ::mmRes* temp = base_;
  base_ = NULL;
  return temp;
}
inline void GetLoginQRCodeResponse::set_allocated_base(::mmRes* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:GetLoginQRCodeResponse.Base)
}

// required .sKBuiltinBufferT QRCode = 2;
inline bool GetLoginQRCodeResponse::has_qrcode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetLoginQRCodeResponse::set_has_qrcode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetLoginQRCodeResponse::clear_has_qrcode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetLoginQRCodeResponse::clear_qrcode() {
  if (qrcode_ != NULL) qrcode_->::sKBuiltinBufferT::Clear();
  clear_has_qrcode();
}
inline const ::sKBuiltinBufferT& GetLoginQRCodeResponse::qrcode() const {
  // @@protoc_insertion_point(field_get:GetLoginQRCodeResponse.QRCode)
  return qrcode_ != NULL ? *qrcode_
                         : *::sKBuiltinBufferT::internal_default_instance();
}
inline ::sKBuiltinBufferT* GetLoginQRCodeResponse::mutable_qrcode() {
  set_has_qrcode();
  if (qrcode_ == NULL) {
    qrcode_ = new ::sKBuiltinBufferT;
  }
  // @@protoc_insertion_point(field_mutable:GetLoginQRCodeResponse.QRCode)
  return qrcode_;
}
inline ::sKBuiltinBufferT* GetLoginQRCodeResponse::release_qrcode() {
  // @@protoc_insertion_point(field_release:GetLoginQRCodeResponse.QRCode)
  clear_has_qrcode();
  ::sKBuiltinBufferT* temp = qrcode_;
  qrcode_ = NULL;
  return temp;
}
inline void GetLoginQRCodeResponse::set_allocated_qrcode(::sKBuiltinBufferT* qrcode) {
  delete qrcode_;
  qrcode_ = qrcode;
  if (qrcode) {
    set_has_qrcode();
  } else {
    clear_has_qrcode();
  }
  // @@protoc_insertion_point(field_set_allocated:GetLoginQRCodeResponse.QRCode)
}

// required string UUID = 3;
inline bool GetLoginQRCodeResponse::has_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetLoginQRCodeResponse::set_has_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetLoginQRCodeResponse::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetLoginQRCodeResponse::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uuid();
}
inline const ::std::string& GetLoginQRCodeResponse::uuid() const {
  // @@protoc_insertion_point(field_get:GetLoginQRCodeResponse.UUID)
  return uuid_.GetNoArena();
}
inline void GetLoginQRCodeResponse::set_uuid(const ::std::string& value) {
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GetLoginQRCodeResponse.UUID)
}
#if LANG_CXX11
inline void GetLoginQRCodeResponse::set_uuid(::std::string&& value) {
  set_has_uuid();
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GetLoginQRCodeResponse.UUID)
}
#endif
inline void GetLoginQRCodeResponse::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GetLoginQRCodeResponse.UUID)
}
inline void GetLoginQRCodeResponse::set_uuid(const char* value, size_t size) {
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GetLoginQRCodeResponse.UUID)
}
inline ::std::string* GetLoginQRCodeResponse::mutable_uuid() {
  set_has_uuid();
  // @@protoc_insertion_point(field_mutable:GetLoginQRCodeResponse.UUID)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetLoginQRCodeResponse::release_uuid() {
  // @@protoc_insertion_point(field_release:GetLoginQRCodeResponse.UUID)
  clear_has_uuid();
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetLoginQRCodeResponse::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    set_has_uuid();
  } else {
    clear_has_uuid();
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:GetLoginQRCodeResponse.UUID)
}

// required int32 CheckTime = 4;
inline bool GetLoginQRCodeResponse::has_checktime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GetLoginQRCodeResponse::set_has_checktime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GetLoginQRCodeResponse::clear_has_checktime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GetLoginQRCodeResponse::clear_checktime() {
  checktime_ = 0;
  clear_has_checktime();
}
inline ::google::protobuf::int32 GetLoginQRCodeResponse::checktime() const {
  // @@protoc_insertion_point(field_get:GetLoginQRCodeResponse.CheckTime)
  return checktime_;
}
inline void GetLoginQRCodeResponse::set_checktime(::google::protobuf::int32 value) {
  set_has_checktime();
  checktime_ = value;
  // @@protoc_insertion_point(field_set:GetLoginQRCodeResponse.CheckTime)
}

// optional .sKBuiltinBufferT NotifyKey = 5;
inline bool GetLoginQRCodeResponse::has_notifykey() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetLoginQRCodeResponse::set_has_notifykey() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetLoginQRCodeResponse::clear_has_notifykey() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetLoginQRCodeResponse::clear_notifykey() {
  if (notifykey_ != NULL) notifykey_->::sKBuiltinBufferT::Clear();
  clear_has_notifykey();
}
inline const ::sKBuiltinBufferT& GetLoginQRCodeResponse::notifykey() const {
  // @@protoc_insertion_point(field_get:GetLoginQRCodeResponse.NotifyKey)
  return notifykey_ != NULL ? *notifykey_
                         : *::sKBuiltinBufferT::internal_default_instance();
}
inline ::sKBuiltinBufferT* GetLoginQRCodeResponse::mutable_notifykey() {
  set_has_notifykey();
  if (notifykey_ == NULL) {
    notifykey_ = new ::sKBuiltinBufferT;
  }
  // @@protoc_insertion_point(field_mutable:GetLoginQRCodeResponse.NotifyKey)
  return notifykey_;
}
inline ::sKBuiltinBufferT* GetLoginQRCodeResponse::release_notifykey() {
  // @@protoc_insertion_point(field_release:GetLoginQRCodeResponse.NotifyKey)
  clear_has_notifykey();
  ::sKBuiltinBufferT* temp = notifykey_;
  notifykey_ = NULL;
  return temp;
}
inline void GetLoginQRCodeResponse::set_allocated_notifykey(::sKBuiltinBufferT* notifykey) {
  delete notifykey_;
  notifykey_ = notifykey;
  if (notifykey) {
    set_has_notifykey();
  } else {
    clear_has_notifykey();
  }
  // @@protoc_insertion_point(field_set_allocated:GetLoginQRCodeResponse.NotifyKey)
}

// optional int32 ExpiredTime = 6;
inline bool GetLoginQRCodeResponse::has_expiredtime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GetLoginQRCodeResponse::set_has_expiredtime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GetLoginQRCodeResponse::clear_has_expiredtime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GetLoginQRCodeResponse::clear_expiredtime() {
  expiredtime_ = 0;
  clear_has_expiredtime();
}
inline ::google::protobuf::int32 GetLoginQRCodeResponse::expiredtime() const {
  // @@protoc_insertion_point(field_get:GetLoginQRCodeResponse.ExpiredTime)
  return expiredtime_;
}
inline void GetLoginQRCodeResponse::set_expiredtime(::google::protobuf::int32 value) {
  set_has_expiredtime();
  expiredtime_ = value;
  // @@protoc_insertion_point(field_set:GetLoginQRCodeResponse.ExpiredTime)
}

// optional string BlueToothBroadCastUuid = 7;
inline bool GetLoginQRCodeResponse::has_bluetoothbroadcastuuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetLoginQRCodeResponse::set_has_bluetoothbroadcastuuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetLoginQRCodeResponse::clear_has_bluetoothbroadcastuuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetLoginQRCodeResponse::clear_bluetoothbroadcastuuid() {
  bluetoothbroadcastuuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bluetoothbroadcastuuid();
}
inline const ::std::string& GetLoginQRCodeResponse::bluetoothbroadcastuuid() const {
  // @@protoc_insertion_point(field_get:GetLoginQRCodeResponse.BlueToothBroadCastUuid)
  return bluetoothbroadcastuuid_.GetNoArena();
}
inline void GetLoginQRCodeResponse::set_bluetoothbroadcastuuid(const ::std::string& value) {
  set_has_bluetoothbroadcastuuid();
  bluetoothbroadcastuuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GetLoginQRCodeResponse.BlueToothBroadCastUuid)
}
#if LANG_CXX11
inline void GetLoginQRCodeResponse::set_bluetoothbroadcastuuid(::std::string&& value) {
  set_has_bluetoothbroadcastuuid();
  bluetoothbroadcastuuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GetLoginQRCodeResponse.BlueToothBroadCastUuid)
}
#endif
inline void GetLoginQRCodeResponse::set_bluetoothbroadcastuuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bluetoothbroadcastuuid();
  bluetoothbroadcastuuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GetLoginQRCodeResponse.BlueToothBroadCastUuid)
}
inline void GetLoginQRCodeResponse::set_bluetoothbroadcastuuid(const char* value, size_t size) {
  set_has_bluetoothbroadcastuuid();
  bluetoothbroadcastuuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GetLoginQRCodeResponse.BlueToothBroadCastUuid)
}
inline ::std::string* GetLoginQRCodeResponse::mutable_bluetoothbroadcastuuid() {
  set_has_bluetoothbroadcastuuid();
  // @@protoc_insertion_point(field_mutable:GetLoginQRCodeResponse.BlueToothBroadCastUuid)
  return bluetoothbroadcastuuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetLoginQRCodeResponse::release_bluetoothbroadcastuuid() {
  // @@protoc_insertion_point(field_release:GetLoginQRCodeResponse.BlueToothBroadCastUuid)
  clear_has_bluetoothbroadcastuuid();
  return bluetoothbroadcastuuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetLoginQRCodeResponse::set_allocated_bluetoothbroadcastuuid(::std::string* bluetoothbroadcastuuid) {
  if (bluetoothbroadcastuuid != NULL) {
    set_has_bluetoothbroadcastuuid();
  } else {
    clear_has_bluetoothbroadcastuuid();
  }
  bluetoothbroadcastuuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bluetoothbroadcastuuid);
  // @@protoc_insertion_point(field_set_allocated:GetLoginQRCodeResponse.BlueToothBroadCastUuid)
}

// optional .sKBuiltinBufferT BlueToothBroadCastContent = 8;
inline bool GetLoginQRCodeResponse::has_bluetoothbroadcastcontent() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetLoginQRCodeResponse::set_has_bluetoothbroadcastcontent() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetLoginQRCodeResponse::clear_has_bluetoothbroadcastcontent() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetLoginQRCodeResponse::clear_bluetoothbroadcastcontent() {
  if (bluetoothbroadcastcontent_ != NULL) bluetoothbroadcastcontent_->::sKBuiltinBufferT::Clear();
  clear_has_bluetoothbroadcastcontent();
}
inline const ::sKBuiltinBufferT& GetLoginQRCodeResponse::bluetoothbroadcastcontent() const {
  // @@protoc_insertion_point(field_get:GetLoginQRCodeResponse.BlueToothBroadCastContent)
  return bluetoothbroadcastcontent_ != NULL ? *bluetoothbroadcastcontent_
                         : *::sKBuiltinBufferT::internal_default_instance();
}
inline ::sKBuiltinBufferT* GetLoginQRCodeResponse::mutable_bluetoothbroadcastcontent() {
  set_has_bluetoothbroadcastcontent();
  if (bluetoothbroadcastcontent_ == NULL) {
    bluetoothbroadcastcontent_ = new ::sKBuiltinBufferT;
  }
  // @@protoc_insertion_point(field_mutable:GetLoginQRCodeResponse.BlueToothBroadCastContent)
  return bluetoothbroadcastcontent_;
}
inline ::sKBuiltinBufferT* GetLoginQRCodeResponse::release_bluetoothbroadcastcontent() {
  // @@protoc_insertion_point(field_release:GetLoginQRCodeResponse.BlueToothBroadCastContent)
  clear_has_bluetoothbroadcastcontent();
  ::sKBuiltinBufferT* temp = bluetoothbroadcastcontent_;
  bluetoothbroadcastcontent_ = NULL;
  return temp;
}
inline void GetLoginQRCodeResponse::set_allocated_bluetoothbroadcastcontent(::sKBuiltinBufferT* bluetoothbroadcastcontent) {
  delete bluetoothbroadcastcontent_;
  bluetoothbroadcastcontent_ = bluetoothbroadcastcontent;
  if (bluetoothbroadcastcontent) {
    set_has_bluetoothbroadcastcontent();
  } else {
    clear_has_bluetoothbroadcastcontent();
  }
  // @@protoc_insertion_point(field_set_allocated:GetLoginQRCodeResponse.BlueToothBroadCastContent)
}

// -------------------------------------------------------------------

// CheckLoginQRCodeRequest

// required .LoginInfo base = 1;
inline bool CheckLoginQRCodeRequest::has_base() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CheckLoginQRCodeRequest::set_has_base() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CheckLoginQRCodeRequest::clear_has_base() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CheckLoginQRCodeRequest::clear_base() {
  if (base_ != NULL) base_->::LoginInfo::Clear();
  clear_has_base();
}
inline const ::LoginInfo& CheckLoginQRCodeRequest::base() const {
  // @@protoc_insertion_point(field_get:CheckLoginQRCodeRequest.base)
  return base_ != NULL ? *base_
                         : *::LoginInfo::internal_default_instance();
}
inline ::LoginInfo* CheckLoginQRCodeRequest::mutable_base() {
  set_has_base();
  if (base_ == NULL) {
    base_ = new ::LoginInfo;
  }
  // @@protoc_insertion_point(field_mutable:CheckLoginQRCodeRequest.base)
  return base_;
}
inline ::LoginInfo* CheckLoginQRCodeRequest::release_base() {
  // @@protoc_insertion_point(field_release:CheckLoginQRCodeRequest.base)
  clear_has_base();
  ::LoginInfo* temp = base_;
  base_ = NULL;
  return temp;
}
inline void CheckLoginQRCodeRequest::set_allocated_base(::LoginInfo* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:CheckLoginQRCodeRequest.base)
}

// required .sKBuiltinBufferT randomEncryKey = 2;
inline bool CheckLoginQRCodeRequest::has_randomencrykey() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CheckLoginQRCodeRequest::set_has_randomencrykey() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CheckLoginQRCodeRequest::clear_has_randomencrykey() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CheckLoginQRCodeRequest::clear_randomencrykey() {
  if (randomencrykey_ != NULL) randomencrykey_->::sKBuiltinBufferT::Clear();
  clear_has_randomencrykey();
}
inline const ::sKBuiltinBufferT& CheckLoginQRCodeRequest::randomencrykey() const {
  // @@protoc_insertion_point(field_get:CheckLoginQRCodeRequest.randomEncryKey)
  return randomencrykey_ != NULL ? *randomencrykey_
                         : *::sKBuiltinBufferT::internal_default_instance();
}
inline ::sKBuiltinBufferT* CheckLoginQRCodeRequest::mutable_randomencrykey() {
  set_has_randomencrykey();
  if (randomencrykey_ == NULL) {
    randomencrykey_ = new ::sKBuiltinBufferT;
  }
  // @@protoc_insertion_point(field_mutable:CheckLoginQRCodeRequest.randomEncryKey)
  return randomencrykey_;
}
inline ::sKBuiltinBufferT* CheckLoginQRCodeRequest::release_randomencrykey() {
  // @@protoc_insertion_point(field_release:CheckLoginQRCodeRequest.randomEncryKey)
  clear_has_randomencrykey();
  ::sKBuiltinBufferT* temp = randomencrykey_;
  randomencrykey_ = NULL;
  return temp;
}
inline void CheckLoginQRCodeRequest::set_allocated_randomencrykey(::sKBuiltinBufferT* randomencrykey) {
  delete randomencrykey_;
  randomencrykey_ = randomencrykey;
  if (randomencrykey) {
    set_has_randomencrykey();
  } else {
    clear_has_randomencrykey();
  }
  // @@protoc_insertion_point(field_set_allocated:CheckLoginQRCodeRequest.randomEncryKey)
}

// required string uuid = 3;
inline bool CheckLoginQRCodeRequest::has_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CheckLoginQRCodeRequest::set_has_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CheckLoginQRCodeRequest::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CheckLoginQRCodeRequest::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uuid();
}
inline const ::std::string& CheckLoginQRCodeRequest::uuid() const {
  // @@protoc_insertion_point(field_get:CheckLoginQRCodeRequest.uuid)
  return uuid_.GetNoArena();
}
inline void CheckLoginQRCodeRequest::set_uuid(const ::std::string& value) {
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:CheckLoginQRCodeRequest.uuid)
}
#if LANG_CXX11
inline void CheckLoginQRCodeRequest::set_uuid(::std::string&& value) {
  set_has_uuid();
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:CheckLoginQRCodeRequest.uuid)
}
#endif
inline void CheckLoginQRCodeRequest::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:CheckLoginQRCodeRequest.uuid)
}
inline void CheckLoginQRCodeRequest::set_uuid(const char* value, size_t size) {
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:CheckLoginQRCodeRequest.uuid)
}
inline ::std::string* CheckLoginQRCodeRequest::mutable_uuid() {
  set_has_uuid();
  // @@protoc_insertion_point(field_mutable:CheckLoginQRCodeRequest.uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckLoginQRCodeRequest::release_uuid() {
  // @@protoc_insertion_point(field_release:CheckLoginQRCodeRequest.uuid)
  clear_has_uuid();
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckLoginQRCodeRequest::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    set_has_uuid();
  } else {
    clear_has_uuid();
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:CheckLoginQRCodeRequest.uuid)
}

// required int32 timeStamp = 4;
inline bool CheckLoginQRCodeRequest::has_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CheckLoginQRCodeRequest::set_has_timestamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CheckLoginQRCodeRequest::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CheckLoginQRCodeRequest::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline ::google::protobuf::int32 CheckLoginQRCodeRequest::timestamp() const {
  // @@protoc_insertion_point(field_get:CheckLoginQRCodeRequest.timeStamp)
  return timestamp_;
}
inline void CheckLoginQRCodeRequest::set_timestamp(::google::protobuf::int32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:CheckLoginQRCodeRequest.timeStamp)
}

// required int32 opcode = 5;
inline bool CheckLoginQRCodeRequest::has_opcode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CheckLoginQRCodeRequest::set_has_opcode() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CheckLoginQRCodeRequest::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CheckLoginQRCodeRequest::clear_opcode() {
  opcode_ = 0;
  clear_has_opcode();
}
inline ::google::protobuf::int32 CheckLoginQRCodeRequest::opcode() const {
  // @@protoc_insertion_point(field_get:CheckLoginQRCodeRequest.opcode)
  return opcode_;
}
inline void CheckLoginQRCodeRequest::set_opcode(::google::protobuf::int32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:CheckLoginQRCodeRequest.opcode)
}

// -------------------------------------------------------------------

// CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg

// optional .sKBuiltinBufferT NotifyData = 1;
inline bool CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg::has_notifydata() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg::set_has_notifydata() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg::clear_has_notifydata() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg::clear_notifydata() {
  if (notifydata_ != NULL) notifydata_->::sKBuiltinBufferT::Clear();
  clear_has_notifydata();
}
inline const ::sKBuiltinBufferT& CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg::notifydata() const {
  // @@protoc_insertion_point(field_get:CheckLoginQRCodeResponse.LoginQRCodeNotifyPkg.NotifyData)
  return notifydata_ != NULL ? *notifydata_
                         : *::sKBuiltinBufferT::internal_default_instance();
}
inline ::sKBuiltinBufferT* CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg::mutable_notifydata() {
  set_has_notifydata();
  if (notifydata_ == NULL) {
    notifydata_ = new ::sKBuiltinBufferT;
  }
  // @@protoc_insertion_point(field_mutable:CheckLoginQRCodeResponse.LoginQRCodeNotifyPkg.NotifyData)
  return notifydata_;
}
inline ::sKBuiltinBufferT* CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg::release_notifydata() {
  // @@protoc_insertion_point(field_release:CheckLoginQRCodeResponse.LoginQRCodeNotifyPkg.NotifyData)
  clear_has_notifydata();
  ::sKBuiltinBufferT* temp = notifydata_;
  notifydata_ = NULL;
  return temp;
}
inline void CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg::set_allocated_notifydata(::sKBuiltinBufferT* notifydata) {
  delete notifydata_;
  notifydata_ = notifydata;
  if (notifydata) {
    set_has_notifydata();
  } else {
    clear_has_notifydata();
  }
  // @@protoc_insertion_point(field_set_allocated:CheckLoginQRCodeResponse.LoginQRCodeNotifyPkg.NotifyData)
}

// optional int32 Opcode = 2;
inline bool CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg::has_opcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg::set_has_opcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg::clear_opcode() {
  opcode_ = 0;
  clear_has_opcode();
}
inline ::google::protobuf::int32 CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg::opcode() const {
  // @@protoc_insertion_point(field_get:CheckLoginQRCodeResponse.LoginQRCodeNotifyPkg.Opcode)
  return opcode_;
}
inline void CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg::set_opcode(::google::protobuf::int32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:CheckLoginQRCodeResponse.LoginQRCodeNotifyPkg.Opcode)
}

// -------------------------------------------------------------------

// CheckLoginQRCodeResponse

// required .mmRes base = 1;
inline bool CheckLoginQRCodeResponse::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CheckLoginQRCodeResponse::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CheckLoginQRCodeResponse::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CheckLoginQRCodeResponse::clear_base() {
  if (base_ != NULL) base_->::mmRes::Clear();
  clear_has_base();
}
inline const ::mmRes& CheckLoginQRCodeResponse::base() const {
  // @@protoc_insertion_point(field_get:CheckLoginQRCodeResponse.base)
  return base_ != NULL ? *base_
                         : *::mmRes::internal_default_instance();
}
inline ::mmRes* CheckLoginQRCodeResponse::mutable_base() {
  set_has_base();
  if (base_ == NULL) {
    base_ = new ::mmRes;
  }
  // @@protoc_insertion_point(field_mutable:CheckLoginQRCodeResponse.base)
  return base_;
}
inline ::mmRes* CheckLoginQRCodeResponse::release_base() {
  // @@protoc_insertion_point(field_release:CheckLoginQRCodeResponse.base)
  clear_has_base();
  ::mmRes* temp = base_;
  base_ = NULL;
  return temp;
}
inline void CheckLoginQRCodeResponse::set_allocated_base(::mmRes* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:CheckLoginQRCodeResponse.base)
}

// optional .CheckLoginQRCodeResponse.LoginQRCodeNotifyPkg notifyPkg = 3;
inline bool CheckLoginQRCodeResponse::has_notifypkg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CheckLoginQRCodeResponse::set_has_notifypkg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CheckLoginQRCodeResponse::clear_has_notifypkg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CheckLoginQRCodeResponse::clear_notifypkg() {
  if (notifypkg_ != NULL) notifypkg_->::CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg::Clear();
  clear_has_notifypkg();
}
inline const ::CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg& CheckLoginQRCodeResponse::notifypkg() const {
  // @@protoc_insertion_point(field_get:CheckLoginQRCodeResponse.notifyPkg)
  return notifypkg_ != NULL ? *notifypkg_
                         : *::CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg::internal_default_instance();
}
inline ::CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg* CheckLoginQRCodeResponse::mutable_notifypkg() {
  set_has_notifypkg();
  if (notifypkg_ == NULL) {
    notifypkg_ = new ::CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg;
  }
  // @@protoc_insertion_point(field_mutable:CheckLoginQRCodeResponse.notifyPkg)
  return notifypkg_;
}
inline ::CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg* CheckLoginQRCodeResponse::release_notifypkg() {
  // @@protoc_insertion_point(field_release:CheckLoginQRCodeResponse.notifyPkg)
  clear_has_notifypkg();
  ::CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg* temp = notifypkg_;
  notifypkg_ = NULL;
  return temp;
}
inline void CheckLoginQRCodeResponse::set_allocated_notifypkg(::CheckLoginQRCodeResponse_LoginQRCodeNotifyPkg* notifypkg) {
  delete notifypkg_;
  notifypkg_ = notifypkg;
  if (notifypkg) {
    set_has_notifypkg();
  } else {
    clear_has_notifypkg();
  }
  // @@protoc_insertion_point(field_set_allocated:CheckLoginQRCodeResponse.notifyPkg)
}

// -------------------------------------------------------------------

// NotifyMsg

// optional string Uuid = 1;
inline bool NotifyMsg::has_uuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NotifyMsg::set_has_uuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NotifyMsg::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NotifyMsg::clear_uuid() {
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_uuid();
}
inline const ::std::string& NotifyMsg::uuid() const {
  // @@protoc_insertion_point(field_get:NotifyMsg.Uuid)
  return uuid_.GetNoArena();
}
inline void NotifyMsg::set_uuid(const ::std::string& value) {
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NotifyMsg.Uuid)
}
#if LANG_CXX11
inline void NotifyMsg::set_uuid(::std::string&& value) {
  set_has_uuid();
  uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NotifyMsg.Uuid)
}
#endif
inline void NotifyMsg::set_uuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NotifyMsg.Uuid)
}
inline void NotifyMsg::set_uuid(const char* value, size_t size) {
  set_has_uuid();
  uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NotifyMsg.Uuid)
}
inline ::std::string* NotifyMsg::mutable_uuid() {
  set_has_uuid();
  // @@protoc_insertion_point(field_mutable:NotifyMsg.Uuid)
  return uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NotifyMsg::release_uuid() {
  // @@protoc_insertion_point(field_release:NotifyMsg.Uuid)
  clear_has_uuid();
  return uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotifyMsg::set_allocated_uuid(::std::string* uuid) {
  if (uuid != NULL) {
    set_has_uuid();
  } else {
    clear_has_uuid();
  }
  uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uuid);
  // @@protoc_insertion_point(field_set_allocated:NotifyMsg.Uuid)
}

// optional int32 Opcode = 2;
inline bool NotifyMsg::has_opcode() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void NotifyMsg::set_has_opcode() {
  _has_bits_[0] |= 0x00000040u;
}
inline void NotifyMsg::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void NotifyMsg::clear_opcode() {
  opcode_ = 0;
  clear_has_opcode();
}
inline ::google::protobuf::int32 NotifyMsg::opcode() const {
  // @@protoc_insertion_point(field_get:NotifyMsg.Opcode)
  return opcode_;
}
inline void NotifyMsg::set_opcode(::google::protobuf::int32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:NotifyMsg.Opcode)
}

// optional string Username = 3;
inline bool NotifyMsg::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NotifyMsg::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NotifyMsg::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NotifyMsg::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& NotifyMsg::username() const {
  // @@protoc_insertion_point(field_get:NotifyMsg.Username)
  return username_.GetNoArena();
}
inline void NotifyMsg::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NotifyMsg.Username)
}
#if LANG_CXX11
inline void NotifyMsg::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NotifyMsg.Username)
}
#endif
inline void NotifyMsg::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NotifyMsg.Username)
}
inline void NotifyMsg::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NotifyMsg.Username)
}
inline ::std::string* NotifyMsg::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:NotifyMsg.Username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NotifyMsg::release_username() {
  // @@protoc_insertion_point(field_release:NotifyMsg.Username)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotifyMsg::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:NotifyMsg.Username)
}

// optional string Pass = 4;
inline bool NotifyMsg::has_pass() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NotifyMsg::set_has_pass() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NotifyMsg::clear_has_pass() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NotifyMsg::clear_pass() {
  pass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pass();
}
inline const ::std::string& NotifyMsg::pass() const {
  // @@protoc_insertion_point(field_get:NotifyMsg.Pass)
  return pass_.GetNoArena();
}
inline void NotifyMsg::set_pass(const ::std::string& value) {
  set_has_pass();
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NotifyMsg.Pass)
}
#if LANG_CXX11
inline void NotifyMsg::set_pass(::std::string&& value) {
  set_has_pass();
  pass_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NotifyMsg.Pass)
}
#endif
inline void NotifyMsg::set_pass(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pass();
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NotifyMsg.Pass)
}
inline void NotifyMsg::set_pass(const char* value, size_t size) {
  set_has_pass();
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NotifyMsg.Pass)
}
inline ::std::string* NotifyMsg::mutable_pass() {
  set_has_pass();
  // @@protoc_insertion_point(field_mutable:NotifyMsg.Pass)
  return pass_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NotifyMsg::release_pass() {
  // @@protoc_insertion_point(field_release:NotifyMsg.Pass)
  clear_has_pass();
  return pass_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotifyMsg::set_allocated_pass(::std::string* pass) {
  if (pass != NULL) {
    set_has_pass();
  } else {
    clear_has_pass();
  }
  pass_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pass);
  // @@protoc_insertion_point(field_set_allocated:NotifyMsg.Pass)
}

// optional string Imgurl = 5;
inline bool NotifyMsg::has_imgurl() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NotifyMsg::set_has_imgurl() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NotifyMsg::clear_has_imgurl() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NotifyMsg::clear_imgurl() {
  imgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_imgurl();
}
inline const ::std::string& NotifyMsg::imgurl() const {
  // @@protoc_insertion_point(field_get:NotifyMsg.Imgurl)
  return imgurl_.GetNoArena();
}
inline void NotifyMsg::set_imgurl(const ::std::string& value) {
  set_has_imgurl();
  imgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NotifyMsg.Imgurl)
}
#if LANG_CXX11
inline void NotifyMsg::set_imgurl(::std::string&& value) {
  set_has_imgurl();
  imgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NotifyMsg.Imgurl)
}
#endif
inline void NotifyMsg::set_imgurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_imgurl();
  imgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NotifyMsg.Imgurl)
}
inline void NotifyMsg::set_imgurl(const char* value, size_t size) {
  set_has_imgurl();
  imgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NotifyMsg.Imgurl)
}
inline ::std::string* NotifyMsg::mutable_imgurl() {
  set_has_imgurl();
  // @@protoc_insertion_point(field_mutable:NotifyMsg.Imgurl)
  return imgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NotifyMsg::release_imgurl() {
  // @@protoc_insertion_point(field_release:NotifyMsg.Imgurl)
  clear_has_imgurl();
  return imgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotifyMsg::set_allocated_imgurl(::std::string* imgurl) {
  if (imgurl != NULL) {
    set_has_imgurl();
  } else {
    clear_has_imgurl();
  }
  imgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imgurl);
  // @@protoc_insertion_point(field_set_allocated:NotifyMsg.Imgurl)
}

// optional int32 Unkownint6 = 6;
inline bool NotifyMsg::has_unkownint6() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void NotifyMsg::set_has_unkownint6() {
  _has_bits_[0] |= 0x00000080u;
}
inline void NotifyMsg::clear_has_unkownint6() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void NotifyMsg::clear_unkownint6() {
  unkownint6_ = 0;
  clear_has_unkownint6();
}
inline ::google::protobuf::int32 NotifyMsg::unkownint6() const {
  // @@protoc_insertion_point(field_get:NotifyMsg.Unkownint6)
  return unkownint6_;
}
inline void NotifyMsg::set_unkownint6(::google::protobuf::int32 value) {
  set_has_unkownint6();
  unkownint6_ = value;
  // @@protoc_insertion_point(field_set:NotifyMsg.Unkownint6)
}

// optional string Nickname = 7;
inline bool NotifyMsg::has_nickname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NotifyMsg::set_has_nickname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NotifyMsg::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NotifyMsg::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& NotifyMsg::nickname() const {
  // @@protoc_insertion_point(field_get:NotifyMsg.Nickname)
  return nickname_.GetNoArena();
}
inline void NotifyMsg::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NotifyMsg.Nickname)
}
#if LANG_CXX11
inline void NotifyMsg::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NotifyMsg.Nickname)
}
#endif
inline void NotifyMsg::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NotifyMsg.Nickname)
}
inline void NotifyMsg::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NotifyMsg.Nickname)
}
inline ::std::string* NotifyMsg::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:NotifyMsg.Nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NotifyMsg::release_nickname() {
  // @@protoc_insertion_point(field_release:NotifyMsg.Nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotifyMsg::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:NotifyMsg.Nickname)
}

// optional int32 Unkownint8 = 8;
inline bool NotifyMsg::has_unkownint8() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void NotifyMsg::set_has_unkownint8() {
  _has_bits_[0] |= 0x00000100u;
}
inline void NotifyMsg::clear_has_unkownint8() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void NotifyMsg::clear_unkownint8() {
  unkownint8_ = 0;
  clear_has_unkownint8();
}
inline ::google::protobuf::int32 NotifyMsg::unkownint8() const {
  // @@protoc_insertion_point(field_get:NotifyMsg.Unkownint8)
  return unkownint8_;
}
inline void NotifyMsg::set_unkownint8(::google::protobuf::int32 value) {
  set_has_unkownint8();
  unkownint8_ = value;
  // @@protoc_insertion_point(field_set:NotifyMsg.Unkownint8)
}

// optional int32 Unkownint10 = 10;
inline bool NotifyMsg::has_unkownint10() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void NotifyMsg::set_has_unkownint10() {
  _has_bits_[0] |= 0x00000200u;
}
inline void NotifyMsg::clear_has_unkownint10() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void NotifyMsg::clear_unkownint10() {
  unkownint10_ = 0;
  clear_has_unkownint10();
}
inline ::google::protobuf::int32 NotifyMsg::unkownint10() const {
  // @@protoc_insertion_point(field_get:NotifyMsg.Unkownint10)
  return unkownint10_;
}
inline void NotifyMsg::set_unkownint10(::google::protobuf::int32 value) {
  set_has_unkownint10();
  unkownint10_ = value;
  // @@protoc_insertion_point(field_set:NotifyMsg.Unkownint10)
}

// optional string Platform = 11;
inline bool NotifyMsg::has_platform() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NotifyMsg::set_has_platform() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NotifyMsg::clear_has_platform() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NotifyMsg::clear_platform() {
  platform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_platform();
}
inline const ::std::string& NotifyMsg::platform() const {
  // @@protoc_insertion_point(field_get:NotifyMsg.Platform)
  return platform_.GetNoArena();
}
inline void NotifyMsg::set_platform(const ::std::string& value) {
  set_has_platform();
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:NotifyMsg.Platform)
}
#if LANG_CXX11
inline void NotifyMsg::set_platform(::std::string&& value) {
  set_has_platform();
  platform_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:NotifyMsg.Platform)
}
#endif
inline void NotifyMsg::set_platform(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_platform();
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:NotifyMsg.Platform)
}
inline void NotifyMsg::set_platform(const char* value, size_t size) {
  set_has_platform();
  platform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:NotifyMsg.Platform)
}
inline ::std::string* NotifyMsg::mutable_platform() {
  set_has_platform();
  // @@protoc_insertion_point(field_mutable:NotifyMsg.Platform)
  return platform_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NotifyMsg::release_platform() {
  // @@protoc_insertion_point(field_release:NotifyMsg.Platform)
  clear_has_platform();
  return platform_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotifyMsg::set_allocated_platform(::std::string* platform) {
  if (platform != NULL) {
    set_has_platform();
  } else {
    clear_has_platform();
  }
  platform_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platform);
  // @@protoc_insertion_point(field_set_allocated:NotifyMsg.Platform)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mm_2eproto__INCLUDED
