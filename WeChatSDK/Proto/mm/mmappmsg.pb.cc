// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mmappmsg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mmappmsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace micromsg {
class AppMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AppMsg> {
} _AppMsg_default_instance_;
class SendAppMsgRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SendAppMsgRequest> {
} _SendAppMsgRequest_default_instance_;
class SendAppMsgResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SendAppMsgResponse> {
} _SendAppMsgResponse_default_instance_;
class DownloadAppAttachRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DownloadAppAttachRequest> {
} _DownloadAppAttachRequest_default_instance_;
class DownloadAppAttachResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DownloadAppAttachResponse> {
} _DownloadAppAttachResponse_default_instance_;
class OpenAppInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OpenAppInfo> {
} _OpenAppInfo_default_instance_;
class GetAppInfoRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetAppInfoRequest> {
} _GetAppInfoRequest_default_instance_;
class GetAppInfoResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetAppInfoResponse> {
} _GetAppInfoResponse_default_instance_;
class GetRecommendAppListRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetRecommendAppListRequest> {
} _GetRecommendAppListRequest_default_instance_;
class GetRecommendAppListResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetRecommendAppListResponse> {
} _GetRecommendAppListResponse_default_instance_;
class CheckPCWechatFileRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CheckPCWechatFileRequest> {
} _CheckPCWechatFileRequest_default_instance_;
class CheckPCWechatFileResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CheckPCWechatFileResponse> {
} _CheckPCWechatFileResponse_default_instance_;

namespace protobuf_mmappmsg_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[12];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppMsg, fromusername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppMsg, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppMsg, sdkversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppMsg, tousername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppMsg, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppMsg, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppMsg, createtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppMsg, clientmsgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppMsg, thumb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppMsg, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppMsg, remindid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppMsg, msgsource_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppMsg, shareurloriginal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppMsg, shareurlopen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppMsg, jsappid_),
  0,
  1,
  10,
  2,
  11,
  3,
  12,
  4,
  9,
  13,
  14,
  5,
  6,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendAppMsgRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendAppMsgRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendAppMsgRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendAppMsgRequest, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendAppMsgRequest, commenturl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendAppMsgRequest, reqtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendAppMsgRequest, md5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendAppMsgRequest, filetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendAppMsgRequest, signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendAppMsgRequest, fromsence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendAppMsgRequest, hitmd5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendAppMsgRequest, crc32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendAppMsgRequest, msgforwardtype_),
  4,
  5,
  0,
  6,
  1,
  7,
  2,
  3,
  8,
  9,
  10,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendAppMsgResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendAppMsgResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendAppMsgResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendAppMsgResponse, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendAppMsgResponse, fromusername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendAppMsgResponse, tousername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendAppMsgResponse, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendAppMsgResponse, clientmsgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendAppMsgResponse, createtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendAppMsgResponse, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendAppMsgResponse, newmsgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendAppMsgResponse, aeskey_),
  5,
  0,
  1,
  2,
  6,
  3,
  7,
  9,
  8,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadAppAttachRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadAppAttachRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadAppAttachRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadAppAttachRequest, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadAppAttachRequest, sdkversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadAppAttachRequest, mediaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadAppAttachRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadAppAttachRequest, totallen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadAppAttachRequest, startpos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadAppAttachRequest, datalen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadAppAttachRequest, outfmt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadAppAttachRequest, rotation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadAppAttachRequest, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadAppAttachRequest, cdntype_),
  4,
  0,
  5,
  1,
  2,
  6,
  7,
  8,
  3,
  9,
  10,
  11,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadAppAttachResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadAppAttachResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadAppAttachResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadAppAttachResponse, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadAppAttachResponse, mediaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadAppAttachResponse, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadAppAttachResponse, totallen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadAppAttachResponse, startpos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadAppAttachResponse, datalen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DownloadAppAttachResponse, data_),
  3,
  0,
  1,
  2,
  5,
  6,
  7,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenAppInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenAppInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenAppInfo, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenAppInfo, appname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenAppInfo, appdescription_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenAppInfo, appiconurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenAppInfo, appstoreurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenAppInfo, appversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenAppInfo, appwatermarkurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenAppInfo, androidpackagename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenAppInfo, androidsignature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenAppInfo, appname4enus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenAppInfo, appdescription4enus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenAppInfo, appname4zhtw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenAppInfo, appdescription4zhtw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OpenAppInfo, appinfoflag_),
  0,
  1,
  2,
  3,
  4,
  12,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  13,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppInfoRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppInfoRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppInfoRequest, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppInfoRequest, icontype_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppInfoResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppInfoResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppInfoResponse, appinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppInfoResponse, nouse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppInfoResponse, devinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppInfoResponse, apptype_),
  2,
  3,
  4,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRecommendAppListRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRecommendAppListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRecommendAppListRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRecommendAppListRequest, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRecommendAppListRequest, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRecommendAppListRequest, installedlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRecommendAppListRequest, icontype_),
  1,
  2,
  3,
  0,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRecommendAppListResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRecommendAppListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRecommendAppListResponse, total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRecommendAppListResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRecommendAppListResponse, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRecommendAppListResponse, applist_),
  1,
  0,
  2,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckPCWechatFileRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckPCWechatFileRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckPCWechatFileRequest, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckPCWechatFileRequest, md5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckPCWechatFileRequest, fileid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckPCWechatFileRequest, aeskey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckPCWechatFileRequest, fromusername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckPCWechatFileRequest, tousername_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckPCWechatFileResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckPCWechatFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckPCWechatFileResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckPCWechatFileResponse, blockstatus_),
  0,
  1,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 20, sizeof(AppMsg)},
  { 35, 51, sizeof(SendAppMsgRequest)},
  { 62, 77, sizeof(SendAppMsgResponse)},
  { 87, 104, sizeof(DownloadAppAttachRequest)},
  { 116, 129, sizeof(DownloadAppAttachResponse)},
  { 137, 156, sizeof(OpenAppInfo)},
  { 170, 178, sizeof(GetAppInfoRequest)},
  { 181, 191, sizeof(GetAppInfoResponse)},
  { 196, 206, sizeof(GetRecommendAppListRequest)},
  { 211, 220, sizeof(GetRecommendAppListResponse)},
  { 224, 235, sizeof(CheckPCWechatFileRequest)},
  { 241, 248, sizeof(CheckPCWechatFileResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_AppMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SendAppMsgRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SendAppMsgResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DownloadAppAttachRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DownloadAppAttachResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OpenAppInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetAppInfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetAppInfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetRecommendAppListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetRecommendAppListResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CheckPCWechatFileRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CheckPCWechatFileResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "mmappmsg.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
}

}  // namespace

void TableStruct::Shutdown() {
  _AppMsg_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _SendAppMsgRequest_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _SendAppMsgResponse_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _DownloadAppAttachRequest_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _DownloadAppAttachResponse_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _OpenAppInfo_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _GetAppInfoRequest_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _GetAppInfoResponse_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _GetRecommendAppListRequest_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _GetRecommendAppListResponse_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _CheckPCWechatFileRequest_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _CheckPCWechatFileResponse_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::micromsg::protobuf_mmbuiltintype_2eproto::InitDefaults();
  ::micromsg::protobuf_mmbase_2eproto::InitDefaults();
  _AppMsg_default_instance_.DefaultConstruct();
  _SendAppMsgRequest_default_instance_.DefaultConstruct();
  _SendAppMsgResponse_default_instance_.DefaultConstruct();
  _DownloadAppAttachRequest_default_instance_.DefaultConstruct();
  _DownloadAppAttachResponse_default_instance_.DefaultConstruct();
  _OpenAppInfo_default_instance_.DefaultConstruct();
  _GetAppInfoRequest_default_instance_.DefaultConstruct();
  _GetAppInfoResponse_default_instance_.DefaultConstruct();
  _GetRecommendAppListRequest_default_instance_.DefaultConstruct();
  _GetRecommendAppListResponse_default_instance_.DefaultConstruct();
  _CheckPCWechatFileRequest_default_instance_.DefaultConstruct();
  _CheckPCWechatFileResponse_default_instance_.DefaultConstruct();
  _AppMsg_default_instance_.get_mutable()->thumb_ = const_cast< ::micromsg::SKBuiltinBuffer_t*>(
      ::micromsg::SKBuiltinBuffer_t::internal_default_instance());
  _SendAppMsgRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _SendAppMsgRequest_default_instance_.get_mutable()->msg_ = const_cast< ::micromsg::AppMsg*>(
      ::micromsg::AppMsg::internal_default_instance());
  _SendAppMsgResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _DownloadAppAttachRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _DownloadAppAttachResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _DownloadAppAttachResponse_default_instance_.get_mutable()->data_ = const_cast< ::micromsg::SKBuiltinBuffer_t*>(
      ::micromsg::SKBuiltinBuffer_t::internal_default_instance());
  _GetAppInfoRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _GetAppInfoResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _GetAppInfoResponse_default_instance_.get_mutable()->appinfo_ = const_cast< ::micromsg::OpenAppInfo*>(
      ::micromsg::OpenAppInfo::internal_default_instance());
  _GetRecommendAppListRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _GetRecommendAppListResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _CheckPCWechatFileResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\016mmappmsg.proto\022\010micromsg\032\023mmbuiltintyp"
      "e.proto\032\014mmbase.proto\"\277\002\n\006AppMsg\022\024\n\014From"
      "UserName\030\001 \001(\t\022\r\n\005AppId\030\002 \001(\t\022\022\n\nSdkVers"
      "ion\030\003 \002(\r\022\022\n\nToUserName\030\004 \001(\t\022\014\n\004Type\030\005 "
      "\002(\r\022\017\n\007Content\030\006 \001(\t\022\022\n\nCreateTime\030\007 \002(\r"
      "\022\023\n\013ClientMsgId\030\010 \001(\t\022*\n\005Thumb\030\t \001(\0132\033.m"
      "icromsg.SKBuiltinBuffer_t\022\016\n\006Source\030\n \001("
      "\005\022\020\n\010RemindId\030\013 \001(\005\022\021\n\tMsgSource\030\014 \001(\t\022\030"
      "\n\020ShareUrlOriginal\030\r \001(\t\022\024\n\014ShareUrlOpen"
      "\030\016 \001(\t\022\017\n\007JsAppId\030\017 \001(\t\"\377\001\n\021SendAppMsgRe"
      "quest\022*\n\013BaseRequest\030\001 \002(\0132\025.micromsg.Ba"
      "seRequest\022\035\n\003Msg\030\002 \002(\0132\020.micromsg.AppMsg"
      "\022\022\n\nCommentUrl\030\003 \001(\t\022\017\n\007ReqTime\030\004 \001(\r\022\013\n"
      "\003Md5\030\005 \001(\t\022\020\n\010FileType\030\006 \001(\r\022\021\n\tSignatur"
      "e\030\007 \001(\t\022\021\n\tFromSence\030\010 \001(\t\022\016\n\006HitMd5\030\t \001"
      "(\r\022\r\n\005CRC32\030\n \001(\r\022\026\n\016MsgForwardType\030\013 \001("
      "\r\"\343\001\n\022SendAppMsgResponse\022,\n\014BaseResponse"
      "\030\001 \002(\0132\026.micromsg.BaseResponse\022\r\n\005AppId\030"
      "\002 \001(\t\022\024\n\014FromUserName\030\003 \001(\t\022\022\n\nToUserNam"
      "e\030\004 \001(\t\022\r\n\005MsgId\030\005 \002(\r\022\023\n\013ClientMsgId\030\006 "
      "\001(\t\022\022\n\nCreateTime\030\007 \002(\r\022\014\n\004Type\030\010 \001(\r\022\020\n"
      "\010NewMsgId\030\t \001(\004\022\016\n\006AESKey\030\n \001(\t\"\202\002\n\030Down"
      "loadAppAttachRequest\022*\n\013BaseRequest\030\001 \002("
      "\0132\025.micromsg.BaseRequest\022\r\n\005AppId\030\002 \001(\t\022"
      "\022\n\nSdkVersion\030\003 \002(\r\022\017\n\007MediaId\030\004 \001(\t\022\020\n\010"
      "UserName\030\005 \001(\t\022\020\n\010TotalLen\030\006 \002(\r\022\020\n\010Star"
      "tPos\030\007 \002(\r\022\017\n\007DataLen\030\010 \002(\r\022\016\n\006OutFmt\030\t "
      "\001(\t\022\020\n\010Rotation\030\n \001(\005\022\014\n\004Type\030\013 \001(\r\022\017\n\007C"
      "DNType\030\014 \001(\r\"\333\001\n\031DownloadAppAttachRespon"
      "se\022,\n\014BaseResponse\030\001 \002(\0132\026.micromsg.Base"
      "Response\022\r\n\005AppId\030\002 \001(\t\022\017\n\007MediaId\030\003 \001(\t"
      "\022\020\n\010UserName\030\004 \001(\t\022\020\n\010TotalLen\030\005 \002(\r\022\020\n\010"
      "StartPos\030\006 \002(\r\022\017\n\007DataLen\030\007 \002(\r\022)\n\004Data\030"
      "\010 \002(\0132\033.micromsg.SKBuiltinBuffer_t\"\314\002\n\013O"
      "penAppInfo\022\r\n\005AppID\030\001 \001(\t\022\017\n\007AppName\030\002 \001"
      "(\t\022\026\n\016AppDescription\030\003 \001(\t\022\022\n\nAppIconUrl"
      "\030\004 \001(\t\022\023\n\013AppStoreUrl\030\005 \001(\t\022\022\n\nAppVersio"
      "n\030\006 \002(\r\022\027\n\017AppWatermarkUrl\030\007 \001(\t\022\032\n\022Andr"
      "oidPackageName\030\010 \001(\t\022\030\n\020AndroidSignature"
      "\030\t \001(\t\022\024\n\014AppName4EnUS\030\n \001(\t\022\033\n\023AppDescr"
      "iption4EnUS\030\013 \001(\t\022\024\n\014AppName4ZhTW\030\014 \001(\t\022"
      "\033\n\023AppDescription4ZhTW\030\r \001(\t\022\023\n\013AppInfoF"
      "lag\030\016 \001(\r\"`\n\021GetAppInfoRequest\022*\n\013BaseRe"
      "quest\030\001 \002(\0132\025.micromsg.BaseRequest\022\r\n\005Ap"
      "pID\030\002 \001(\t\022\020\n\010IconType\030\003 \002(\r\"\233\001\n\022GetAppIn"
      "foResponse\022,\n\014BaseResponse\030\001 \002(\0132\026.micro"
      "msg.BaseResponse\022&\n\007AppInfo\030\002 \002(\0132\025.micr"
      "omsg.OpenAppInfo\022\r\n\005NoUse\030\003 \001(\r\022\017\n\007DevIn"
      "fo\030\004 \001(\t\022\017\n\007AppType\030\005 \001(\t\"\217\001\n\032GetRecomme"
      "ndAppListRequest\022*\n\013BaseRequest\030\001 \002(\0132\025."
      "micromsg.BaseRequest\022\r\n\005Start\030\002 \002(\r\022\r\n\005C"
      "ount\030\003 \002(\r\022\025\n\rInstalledList\030\004 \001(\t\022\020\n\010Ico"
      "nType\030\005 \002(\r\"\221\001\n\033GetRecommendAppListRespo"
      "nse\022\r\n\005Total\030\001 \002(\r\022,\n\014BaseResponse\030\002 \002(\013"
      "2\026.micromsg.BaseResponse\022\r\n\005Count\030\003 \002(\r\022"
      "&\n\007AppList\030\004 \003(\0132\025.micromsg.OpenAppInfo\""
      "\203\001\n\030CheckPCWechatFileRequest\022\020\n\010FileName"
      "\030\001 \001(\t\022\013\n\003MD5\030\002 \001(\t\022\016\n\006FileId\030\003 \001(\t\022\016\n\006A"
      "esKey\030\004 \001(\t\022\024\n\014FromUsername\030\005 \001(\t\022\022\n\nToU"
      "sername\030\006 \001(\t\"^\n\031CheckPCWechatFileRespon"
      "se\022,\n\014BaseResponse\030\001 \002(\0132\026.micromsg.Base"
      "Response\022\023\n\013BlockStatus\030\002 \001(\005"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2469);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mmappmsg.proto", &protobuf_RegisterTypes);
  ::micromsg::protobuf_mmbuiltintype_2eproto::AddDescriptors();
  ::micromsg::protobuf_mmbase_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_mmappmsg_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppMsg::kFromUserNameFieldNumber;
const int AppMsg::kAppIdFieldNumber;
const int AppMsg::kSdkVersionFieldNumber;
const int AppMsg::kToUserNameFieldNumber;
const int AppMsg::kTypeFieldNumber;
const int AppMsg::kContentFieldNumber;
const int AppMsg::kCreateTimeFieldNumber;
const int AppMsg::kClientMsgIdFieldNumber;
const int AppMsg::kThumbFieldNumber;
const int AppMsg::kSourceFieldNumber;
const int AppMsg::kRemindIdFieldNumber;
const int AppMsg::kMsgSourceFieldNumber;
const int AppMsg::kShareUrlOriginalFieldNumber;
const int AppMsg::kShareUrlOpenFieldNumber;
const int AppMsg::kJsAppIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppMsg::AppMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmappmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.AppMsg)
}
AppMsg::AppMsg(const AppMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fromusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_fromusername()) {
    fromusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fromusername_);
  }
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appid()) {
    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  tousername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tousername()) {
    tousername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tousername_);
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_content()) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  clientmsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_clientmsgid()) {
    clientmsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientmsgid_);
  }
  msgsource_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msgsource()) {
    msgsource_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgsource_);
  }
  shareurloriginal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_shareurloriginal()) {
    shareurloriginal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shareurloriginal_);
  }
  shareurlopen_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_shareurlopen()) {
    shareurlopen_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shareurlopen_);
  }
  jsappid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_jsappid()) {
    jsappid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jsappid_);
  }
  if (from.has_thumb()) {
    thumb_ = new ::micromsg::SKBuiltinBuffer_t(*from.thumb_);
  } else {
    thumb_ = NULL;
  }
  ::memcpy(&sdkversion_, &from.sdkversion_,
    reinterpret_cast<char*>(&remindid_) -
    reinterpret_cast<char*>(&sdkversion_) + sizeof(remindid_));
  // @@protoc_insertion_point(copy_constructor:micromsg.AppMsg)
}

void AppMsg::SharedCtor() {
  _cached_size_ = 0;
  fromusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tousername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientmsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgsource_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shareurloriginal_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shareurlopen_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jsappid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&thumb_, 0, reinterpret_cast<char*>(&remindid_) -
    reinterpret_cast<char*>(&thumb_) + sizeof(remindid_));
}

AppMsg::~AppMsg() {
  // @@protoc_insertion_point(destructor:micromsg.AppMsg)
  SharedDtor();
}

void AppMsg::SharedDtor() {
  fromusername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tousername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientmsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgsource_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shareurloriginal_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shareurlopen_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jsappid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete thumb_;
  }
}

void AppMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppMsg::descriptor() {
  protobuf_mmappmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmappmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AppMsg& AppMsg::default_instance() {
  protobuf_mmappmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

AppMsg* AppMsg::New(::google::protobuf::Arena* arena) const {
  AppMsg* n = new AppMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AppMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.AppMsg)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_fromusername()) {
      GOOGLE_DCHECK(!fromusername_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*fromusername_.UnsafeRawStringPointer())->clear();
    }
    if (has_appid()) {
      GOOGLE_DCHECK(!appid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appid_.UnsafeRawStringPointer())->clear();
    }
    if (has_tousername()) {
      GOOGLE_DCHECK(!tousername_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*tousername_.UnsafeRawStringPointer())->clear();
    }
    if (has_content()) {
      GOOGLE_DCHECK(!content_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*content_.UnsafeRawStringPointer())->clear();
    }
    if (has_clientmsgid()) {
      GOOGLE_DCHECK(!clientmsgid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*clientmsgid_.UnsafeRawStringPointer())->clear();
    }
    if (has_msgsource()) {
      GOOGLE_DCHECK(!msgsource_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*msgsource_.UnsafeRawStringPointer())->clear();
    }
    if (has_shareurloriginal()) {
      GOOGLE_DCHECK(!shareurloriginal_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*shareurloriginal_.UnsafeRawStringPointer())->clear();
    }
    if (has_shareurlopen()) {
      GOOGLE_DCHECK(!shareurlopen_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*shareurlopen_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[8 / 32] & 768u) {
    if (has_jsappid()) {
      GOOGLE_DCHECK(!jsappid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*jsappid_.UnsafeRawStringPointer())->clear();
    }
    if (has_thumb()) {
      GOOGLE_DCHECK(thumb_ != NULL);
      thumb_->::micromsg::SKBuiltinBuffer_t::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 31744u) {
    ::memset(&sdkversion_, 0, reinterpret_cast<char*>(&remindid_) -
      reinterpret_cast<char*>(&sdkversion_) + sizeof(remindid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AppMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.AppMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string FromUserName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fromusername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fromusername().data(), this->fromusername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.AppMsg.FromUserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appid().data(), this->appid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.AppMsg.AppId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 SdkVersion = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_sdkversion();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sdkversion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ToUserName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tousername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tousername().data(), this->tousername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.AppMsg.ToUserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Content = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.AppMsg.Content");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 CreateTime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_createtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &createtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ClientMsgId = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientmsgid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->clientmsgid().data(), this->clientmsgid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.AppMsg.ClientMsgId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .micromsg.SKBuiltinBuffer_t Thumb = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_thumb()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 Source = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has_source();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &source_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 RemindId = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {
          set_has_remindid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &remindid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string MsgSource = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msgsource()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msgsource().data(), this->msgsource().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.AppMsg.MsgSource");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ShareUrlOriginal = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shareurloriginal()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->shareurloriginal().data(), this->shareurloriginal().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.AppMsg.ShareUrlOriginal");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ShareUrlOpen = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shareurlopen()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->shareurlopen().data(), this->shareurlopen().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.AppMsg.ShareUrlOpen");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string JsAppId = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_jsappid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->jsappid().data(), this->jsappid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.AppMsg.JsAppId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.AppMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.AppMsg)
  return false;
#undef DO_
}

void AppMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.AppMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string FromUserName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fromusername().data(), this->fromusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AppMsg.FromUserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->fromusername(), output);
  }

  // optional string AppId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AppMsg.AppId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appid(), output);
  }

  // required uint32 SdkVersion = 3;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->sdkversion(), output);
  }

  // optional string ToUserName = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tousername().data(), this->tousername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AppMsg.ToUserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->tousername(), output);
  }

  // required uint32 Type = 5;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->type(), output);
  }

  // optional string Content = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AppMsg.Content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->content(), output);
  }

  // required uint32 CreateTime = 7;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->createtime(), output);
  }

  // optional string ClientMsgId = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clientmsgid().data(), this->clientmsgid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AppMsg.ClientMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->clientmsgid(), output);
  }

  // optional .micromsg.SKBuiltinBuffer_t Thumb = 9;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->thumb_, output);
  }

  // optional int32 Source = 10;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->source(), output);
  }

  // optional int32 RemindId = 11;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->remindid(), output);
  }

  // optional string MsgSource = 12;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msgsource().data(), this->msgsource().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AppMsg.MsgSource");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->msgsource(), output);
  }

  // optional string ShareUrlOriginal = 13;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->shareurloriginal().data(), this->shareurloriginal().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AppMsg.ShareUrlOriginal");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->shareurloriginal(), output);
  }

  // optional string ShareUrlOpen = 14;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->shareurlopen().data(), this->shareurlopen().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AppMsg.ShareUrlOpen");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->shareurlopen(), output);
  }

  // optional string JsAppId = 15;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->jsappid().data(), this->jsappid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AppMsg.JsAppId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->jsappid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.AppMsg)
}

::google::protobuf::uint8* AppMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.AppMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string FromUserName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fromusername().data(), this->fromusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AppMsg.FromUserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->fromusername(), target);
  }

  // optional string AppId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AppMsg.AppId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appid(), target);
  }

  // required uint32 SdkVersion = 3;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->sdkversion(), target);
  }

  // optional string ToUserName = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tousername().data(), this->tousername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AppMsg.ToUserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->tousername(), target);
  }

  // required uint32 Type = 5;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->type(), target);
  }

  // optional string Content = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AppMsg.Content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->content(), target);
  }

  // required uint32 CreateTime = 7;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->createtime(), target);
  }

  // optional string ClientMsgId = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clientmsgid().data(), this->clientmsgid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AppMsg.ClientMsgId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->clientmsgid(), target);
  }

  // optional .micromsg.SKBuiltinBuffer_t Thumb = 9;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->thumb_, deterministic, target);
  }

  // optional int32 Source = 10;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->source(), target);
  }

  // optional int32 RemindId = 11;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->remindid(), target);
  }

  // optional string MsgSource = 12;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msgsource().data(), this->msgsource().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AppMsg.MsgSource");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->msgsource(), target);
  }

  // optional string ShareUrlOriginal = 13;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->shareurloriginal().data(), this->shareurloriginal().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AppMsg.ShareUrlOriginal");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->shareurloriginal(), target);
  }

  // optional string ShareUrlOpen = 14;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->shareurlopen().data(), this->shareurlopen().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AppMsg.ShareUrlOpen");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->shareurlopen(), target);
  }

  // optional string JsAppId = 15;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->jsappid().data(), this->jsappid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AppMsg.JsAppId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->jsappid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.AppMsg)
  return target;
}

size_t AppMsg::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.AppMsg)
  size_t total_size = 0;

  if (has_sdkversion()) {
    // required uint32 SdkVersion = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sdkversion());
  }

  if (has_type()) {
    // required uint32 Type = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  if (has_createtime()) {
    // required uint32 CreateTime = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->createtime());
  }

  return total_size;
}
size_t AppMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.AppMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00001c00) ^ 0x00001c00) == 0) {  // All required fields are present.
    // required uint32 SdkVersion = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sdkversion());

    // required uint32 Type = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());

    // required uint32 CreateTime = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->createtime());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string FromUserName = 1;
    if (has_fromusername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fromusername());
    }

    // optional string AppId = 2;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appid());
    }

    // optional string ToUserName = 4;
    if (has_tousername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tousername());
    }

    // optional string Content = 6;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }

    // optional string ClientMsgId = 8;
    if (has_clientmsgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->clientmsgid());
    }

    // optional string MsgSource = 12;
    if (has_msgsource()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msgsource());
    }

    // optional string ShareUrlOriginal = 13;
    if (has_shareurloriginal()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->shareurloriginal());
    }

    // optional string ShareUrlOpen = 14;
    if (has_shareurlopen()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->shareurlopen());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional string JsAppId = 15;
    if (has_jsappid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->jsappid());
    }

    // optional .micromsg.SKBuiltinBuffer_t Thumb = 9;
    if (has_thumb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->thumb_);
    }

  }
  if (_has_bits_[8 / 32] & 24576u) {
    // optional int32 Source = 10;
    if (has_source()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->source());
    }

    // optional int32 RemindId = 11;
    if (has_remindid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->remindid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.AppMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const AppMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.AppMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.AppMsg)
    MergeFrom(*source);
  }
}

void AppMsg::MergeFrom(const AppMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.AppMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_fromusername();
      fromusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fromusername_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_appid();
      appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_tousername();
      tousername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tousername_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_content();
      content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_clientmsgid();
      clientmsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientmsgid_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_msgsource();
      msgsource_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgsource_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_shareurloriginal();
      shareurloriginal_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shareurloriginal_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_shareurlopen();
      shareurlopen_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shareurlopen_);
    }
  }
  if (cached_has_bits & 32512u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_jsappid();
      jsappid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jsappid_);
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_thumb()->::micromsg::SKBuiltinBuffer_t::MergeFrom(from.thumb());
    }
    if (cached_has_bits & 0x00000400u) {
      sdkversion_ = from.sdkversion_;
    }
    if (cached_has_bits & 0x00000800u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00001000u) {
      createtime_ = from.createtime_;
    }
    if (cached_has_bits & 0x00002000u) {
      source_ = from.source_;
    }
    if (cached_has_bits & 0x00004000u) {
      remindid_ = from.remindid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AppMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.AppMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppMsg::CopyFrom(const AppMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.AppMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00001c00) != 0x00001c00) return false;
  if (has_thumb()) {
    if (!this->thumb_->IsInitialized()) return false;
  }
  return true;
}

void AppMsg::Swap(AppMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppMsg::InternalSwap(AppMsg* other) {
  fromusername_.Swap(&other->fromusername_);
  appid_.Swap(&other->appid_);
  tousername_.Swap(&other->tousername_);
  content_.Swap(&other->content_);
  clientmsgid_.Swap(&other->clientmsgid_);
  msgsource_.Swap(&other->msgsource_);
  shareurloriginal_.Swap(&other->shareurloriginal_);
  shareurlopen_.Swap(&other->shareurlopen_);
  jsappid_.Swap(&other->jsappid_);
  std::swap(thumb_, other->thumb_);
  std::swap(sdkversion_, other->sdkversion_);
  std::swap(type_, other->type_);
  std::swap(createtime_, other->createtime_);
  std::swap(source_, other->source_);
  std::swap(remindid_, other->remindid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AppMsg::GetMetadata() const {
  protobuf_mmappmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmappmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AppMsg

// optional string FromUserName = 1;
bool AppMsg::has_fromusername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AppMsg::set_has_fromusername() {
  _has_bits_[0] |= 0x00000001u;
}
void AppMsg::clear_has_fromusername() {
  _has_bits_[0] &= ~0x00000001u;
}
void AppMsg::clear_fromusername() {
  fromusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fromusername();
}
const ::std::string& AppMsg::fromusername() const {
  // @@protoc_insertion_point(field_get:micromsg.AppMsg.FromUserName)
  return fromusername_.GetNoArena();
}
void AppMsg::set_fromusername(const ::std::string& value) {
  set_has_fromusername();
  fromusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AppMsg.FromUserName)
}
#if LANG_CXX11
void AppMsg::set_fromusername(::std::string&& value) {
  set_has_fromusername();
  fromusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AppMsg.FromUserName)
}
#endif
void AppMsg::set_fromusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_fromusername();
  fromusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AppMsg.FromUserName)
}
void AppMsg::set_fromusername(const char* value, size_t size) {
  set_has_fromusername();
  fromusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AppMsg.FromUserName)
}
::std::string* AppMsg::mutable_fromusername() {
  set_has_fromusername();
  // @@protoc_insertion_point(field_mutable:micromsg.AppMsg.FromUserName)
  return fromusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppMsg::release_fromusername() {
  // @@protoc_insertion_point(field_release:micromsg.AppMsg.FromUserName)
  clear_has_fromusername();
  return fromusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppMsg::set_allocated_fromusername(::std::string* fromusername) {
  if (fromusername != NULL) {
    set_has_fromusername();
  } else {
    clear_has_fromusername();
  }
  fromusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromusername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppMsg.FromUserName)
}

// optional string AppId = 2;
bool AppMsg::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AppMsg::set_has_appid() {
  _has_bits_[0] |= 0x00000002u;
}
void AppMsg::clear_has_appid() {
  _has_bits_[0] &= ~0x00000002u;
}
void AppMsg::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
const ::std::string& AppMsg::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.AppMsg.AppId)
  return appid_.GetNoArena();
}
void AppMsg::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AppMsg.AppId)
}
#if LANG_CXX11
void AppMsg::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AppMsg.AppId)
}
#endif
void AppMsg::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AppMsg.AppId)
}
void AppMsg::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AppMsg.AppId)
}
::std::string* AppMsg::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.AppMsg.AppId)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppMsg::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.AppMsg.AppId)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppMsg::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppMsg.AppId)
}

// required uint32 SdkVersion = 3;
bool AppMsg::has_sdkversion() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void AppMsg::set_has_sdkversion() {
  _has_bits_[0] |= 0x00000400u;
}
void AppMsg::clear_has_sdkversion() {
  _has_bits_[0] &= ~0x00000400u;
}
void AppMsg::clear_sdkversion() {
  sdkversion_ = 0u;
  clear_has_sdkversion();
}
::google::protobuf::uint32 AppMsg::sdkversion() const {
  // @@protoc_insertion_point(field_get:micromsg.AppMsg.SdkVersion)
  return sdkversion_;
}
void AppMsg::set_sdkversion(::google::protobuf::uint32 value) {
  set_has_sdkversion();
  sdkversion_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AppMsg.SdkVersion)
}

// optional string ToUserName = 4;
bool AppMsg::has_tousername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AppMsg::set_has_tousername() {
  _has_bits_[0] |= 0x00000004u;
}
void AppMsg::clear_has_tousername() {
  _has_bits_[0] &= ~0x00000004u;
}
void AppMsg::clear_tousername() {
  tousername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tousername();
}
const ::std::string& AppMsg::tousername() const {
  // @@protoc_insertion_point(field_get:micromsg.AppMsg.ToUserName)
  return tousername_.GetNoArena();
}
void AppMsg::set_tousername(const ::std::string& value) {
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AppMsg.ToUserName)
}
#if LANG_CXX11
void AppMsg::set_tousername(::std::string&& value) {
  set_has_tousername();
  tousername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AppMsg.ToUserName)
}
#endif
void AppMsg::set_tousername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AppMsg.ToUserName)
}
void AppMsg::set_tousername(const char* value, size_t size) {
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AppMsg.ToUserName)
}
::std::string* AppMsg::mutable_tousername() {
  set_has_tousername();
  // @@protoc_insertion_point(field_mutable:micromsg.AppMsg.ToUserName)
  return tousername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppMsg::release_tousername() {
  // @@protoc_insertion_point(field_release:micromsg.AppMsg.ToUserName)
  clear_has_tousername();
  return tousername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppMsg::set_allocated_tousername(::std::string* tousername) {
  if (tousername != NULL) {
    set_has_tousername();
  } else {
    clear_has_tousername();
  }
  tousername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tousername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppMsg.ToUserName)
}

// required uint32 Type = 5;
bool AppMsg::has_type() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void AppMsg::set_has_type() {
  _has_bits_[0] |= 0x00000800u;
}
void AppMsg::clear_has_type() {
  _has_bits_[0] &= ~0x00000800u;
}
void AppMsg::clear_type() {
  type_ = 0u;
  clear_has_type();
}
::google::protobuf::uint32 AppMsg::type() const {
  // @@protoc_insertion_point(field_get:micromsg.AppMsg.Type)
  return type_;
}
void AppMsg::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AppMsg.Type)
}

// optional string Content = 6;
bool AppMsg::has_content() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void AppMsg::set_has_content() {
  _has_bits_[0] |= 0x00000008u;
}
void AppMsg::clear_has_content() {
  _has_bits_[0] &= ~0x00000008u;
}
void AppMsg::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
const ::std::string& AppMsg::content() const {
  // @@protoc_insertion_point(field_get:micromsg.AppMsg.Content)
  return content_.GetNoArena();
}
void AppMsg::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AppMsg.Content)
}
#if LANG_CXX11
void AppMsg::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AppMsg.Content)
}
#endif
void AppMsg::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AppMsg.Content)
}
void AppMsg::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AppMsg.Content)
}
::std::string* AppMsg::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:micromsg.AppMsg.Content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppMsg::release_content() {
  // @@protoc_insertion_point(field_release:micromsg.AppMsg.Content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppMsg::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppMsg.Content)
}

// required uint32 CreateTime = 7;
bool AppMsg::has_createtime() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void AppMsg::set_has_createtime() {
  _has_bits_[0] |= 0x00001000u;
}
void AppMsg::clear_has_createtime() {
  _has_bits_[0] &= ~0x00001000u;
}
void AppMsg::clear_createtime() {
  createtime_ = 0u;
  clear_has_createtime();
}
::google::protobuf::uint32 AppMsg::createtime() const {
  // @@protoc_insertion_point(field_get:micromsg.AppMsg.CreateTime)
  return createtime_;
}
void AppMsg::set_createtime(::google::protobuf::uint32 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AppMsg.CreateTime)
}

// optional string ClientMsgId = 8;
bool AppMsg::has_clientmsgid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void AppMsg::set_has_clientmsgid() {
  _has_bits_[0] |= 0x00000010u;
}
void AppMsg::clear_has_clientmsgid() {
  _has_bits_[0] &= ~0x00000010u;
}
void AppMsg::clear_clientmsgid() {
  clientmsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_clientmsgid();
}
const ::std::string& AppMsg::clientmsgid() const {
  // @@protoc_insertion_point(field_get:micromsg.AppMsg.ClientMsgId)
  return clientmsgid_.GetNoArena();
}
void AppMsg::set_clientmsgid(const ::std::string& value) {
  set_has_clientmsgid();
  clientmsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AppMsg.ClientMsgId)
}
#if LANG_CXX11
void AppMsg::set_clientmsgid(::std::string&& value) {
  set_has_clientmsgid();
  clientmsgid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AppMsg.ClientMsgId)
}
#endif
void AppMsg::set_clientmsgid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_clientmsgid();
  clientmsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AppMsg.ClientMsgId)
}
void AppMsg::set_clientmsgid(const char* value, size_t size) {
  set_has_clientmsgid();
  clientmsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AppMsg.ClientMsgId)
}
::std::string* AppMsg::mutable_clientmsgid() {
  set_has_clientmsgid();
  // @@protoc_insertion_point(field_mutable:micromsg.AppMsg.ClientMsgId)
  return clientmsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppMsg::release_clientmsgid() {
  // @@protoc_insertion_point(field_release:micromsg.AppMsg.ClientMsgId)
  clear_has_clientmsgid();
  return clientmsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppMsg::set_allocated_clientmsgid(::std::string* clientmsgid) {
  if (clientmsgid != NULL) {
    set_has_clientmsgid();
  } else {
    clear_has_clientmsgid();
  }
  clientmsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientmsgid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppMsg.ClientMsgId)
}

// optional .micromsg.SKBuiltinBuffer_t Thumb = 9;
bool AppMsg::has_thumb() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void AppMsg::set_has_thumb() {
  _has_bits_[0] |= 0x00000200u;
}
void AppMsg::clear_has_thumb() {
  _has_bits_[0] &= ~0x00000200u;
}
void AppMsg::clear_thumb() {
  if (thumb_ != NULL) thumb_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_thumb();
}
const ::micromsg::SKBuiltinBuffer_t& AppMsg::thumb() const {
  // @@protoc_insertion_point(field_get:micromsg.AppMsg.Thumb)
  return thumb_ != NULL ? *thumb_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
::micromsg::SKBuiltinBuffer_t* AppMsg::mutable_thumb() {
  set_has_thumb();
  if (thumb_ == NULL) {
    thumb_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.AppMsg.Thumb)
  return thumb_;
}
::micromsg::SKBuiltinBuffer_t* AppMsg::release_thumb() {
  // @@protoc_insertion_point(field_release:micromsg.AppMsg.Thumb)
  clear_has_thumb();
  ::micromsg::SKBuiltinBuffer_t* temp = thumb_;
  thumb_ = NULL;
  return temp;
}
void AppMsg::set_allocated_thumb(::micromsg::SKBuiltinBuffer_t* thumb) {
  delete thumb_;
  thumb_ = thumb;
  if (thumb) {
    set_has_thumb();
  } else {
    clear_has_thumb();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppMsg.Thumb)
}

// optional int32 Source = 10;
bool AppMsg::has_source() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void AppMsg::set_has_source() {
  _has_bits_[0] |= 0x00002000u;
}
void AppMsg::clear_has_source() {
  _has_bits_[0] &= ~0x00002000u;
}
void AppMsg::clear_source() {
  source_ = 0;
  clear_has_source();
}
::google::protobuf::int32 AppMsg::source() const {
  // @@protoc_insertion_point(field_get:micromsg.AppMsg.Source)
  return source_;
}
void AppMsg::set_source(::google::protobuf::int32 value) {
  set_has_source();
  source_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AppMsg.Source)
}

// optional int32 RemindId = 11;
bool AppMsg::has_remindid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void AppMsg::set_has_remindid() {
  _has_bits_[0] |= 0x00004000u;
}
void AppMsg::clear_has_remindid() {
  _has_bits_[0] &= ~0x00004000u;
}
void AppMsg::clear_remindid() {
  remindid_ = 0;
  clear_has_remindid();
}
::google::protobuf::int32 AppMsg::remindid() const {
  // @@protoc_insertion_point(field_get:micromsg.AppMsg.RemindId)
  return remindid_;
}
void AppMsg::set_remindid(::google::protobuf::int32 value) {
  set_has_remindid();
  remindid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AppMsg.RemindId)
}

// optional string MsgSource = 12;
bool AppMsg::has_msgsource() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void AppMsg::set_has_msgsource() {
  _has_bits_[0] |= 0x00000020u;
}
void AppMsg::clear_has_msgsource() {
  _has_bits_[0] &= ~0x00000020u;
}
void AppMsg::clear_msgsource() {
  msgsource_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msgsource();
}
const ::std::string& AppMsg::msgsource() const {
  // @@protoc_insertion_point(field_get:micromsg.AppMsg.MsgSource)
  return msgsource_.GetNoArena();
}
void AppMsg::set_msgsource(const ::std::string& value) {
  set_has_msgsource();
  msgsource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AppMsg.MsgSource)
}
#if LANG_CXX11
void AppMsg::set_msgsource(::std::string&& value) {
  set_has_msgsource();
  msgsource_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AppMsg.MsgSource)
}
#endif
void AppMsg::set_msgsource(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msgsource();
  msgsource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AppMsg.MsgSource)
}
void AppMsg::set_msgsource(const char* value, size_t size) {
  set_has_msgsource();
  msgsource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AppMsg.MsgSource)
}
::std::string* AppMsg::mutable_msgsource() {
  set_has_msgsource();
  // @@protoc_insertion_point(field_mutable:micromsg.AppMsg.MsgSource)
  return msgsource_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppMsg::release_msgsource() {
  // @@protoc_insertion_point(field_release:micromsg.AppMsg.MsgSource)
  clear_has_msgsource();
  return msgsource_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppMsg::set_allocated_msgsource(::std::string* msgsource) {
  if (msgsource != NULL) {
    set_has_msgsource();
  } else {
    clear_has_msgsource();
  }
  msgsource_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgsource);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppMsg.MsgSource)
}

// optional string ShareUrlOriginal = 13;
bool AppMsg::has_shareurloriginal() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void AppMsg::set_has_shareurloriginal() {
  _has_bits_[0] |= 0x00000040u;
}
void AppMsg::clear_has_shareurloriginal() {
  _has_bits_[0] &= ~0x00000040u;
}
void AppMsg::clear_shareurloriginal() {
  shareurloriginal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_shareurloriginal();
}
const ::std::string& AppMsg::shareurloriginal() const {
  // @@protoc_insertion_point(field_get:micromsg.AppMsg.ShareUrlOriginal)
  return shareurloriginal_.GetNoArena();
}
void AppMsg::set_shareurloriginal(const ::std::string& value) {
  set_has_shareurloriginal();
  shareurloriginal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AppMsg.ShareUrlOriginal)
}
#if LANG_CXX11
void AppMsg::set_shareurloriginal(::std::string&& value) {
  set_has_shareurloriginal();
  shareurloriginal_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AppMsg.ShareUrlOriginal)
}
#endif
void AppMsg::set_shareurloriginal(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_shareurloriginal();
  shareurloriginal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AppMsg.ShareUrlOriginal)
}
void AppMsg::set_shareurloriginal(const char* value, size_t size) {
  set_has_shareurloriginal();
  shareurloriginal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AppMsg.ShareUrlOriginal)
}
::std::string* AppMsg::mutable_shareurloriginal() {
  set_has_shareurloriginal();
  // @@protoc_insertion_point(field_mutable:micromsg.AppMsg.ShareUrlOriginal)
  return shareurloriginal_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppMsg::release_shareurloriginal() {
  // @@protoc_insertion_point(field_release:micromsg.AppMsg.ShareUrlOriginal)
  clear_has_shareurloriginal();
  return shareurloriginal_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppMsg::set_allocated_shareurloriginal(::std::string* shareurloriginal) {
  if (shareurloriginal != NULL) {
    set_has_shareurloriginal();
  } else {
    clear_has_shareurloriginal();
  }
  shareurloriginal_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shareurloriginal);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppMsg.ShareUrlOriginal)
}

// optional string ShareUrlOpen = 14;
bool AppMsg::has_shareurlopen() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void AppMsg::set_has_shareurlopen() {
  _has_bits_[0] |= 0x00000080u;
}
void AppMsg::clear_has_shareurlopen() {
  _has_bits_[0] &= ~0x00000080u;
}
void AppMsg::clear_shareurlopen() {
  shareurlopen_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_shareurlopen();
}
const ::std::string& AppMsg::shareurlopen() const {
  // @@protoc_insertion_point(field_get:micromsg.AppMsg.ShareUrlOpen)
  return shareurlopen_.GetNoArena();
}
void AppMsg::set_shareurlopen(const ::std::string& value) {
  set_has_shareurlopen();
  shareurlopen_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AppMsg.ShareUrlOpen)
}
#if LANG_CXX11
void AppMsg::set_shareurlopen(::std::string&& value) {
  set_has_shareurlopen();
  shareurlopen_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AppMsg.ShareUrlOpen)
}
#endif
void AppMsg::set_shareurlopen(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_shareurlopen();
  shareurlopen_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AppMsg.ShareUrlOpen)
}
void AppMsg::set_shareurlopen(const char* value, size_t size) {
  set_has_shareurlopen();
  shareurlopen_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AppMsg.ShareUrlOpen)
}
::std::string* AppMsg::mutable_shareurlopen() {
  set_has_shareurlopen();
  // @@protoc_insertion_point(field_mutable:micromsg.AppMsg.ShareUrlOpen)
  return shareurlopen_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppMsg::release_shareurlopen() {
  // @@protoc_insertion_point(field_release:micromsg.AppMsg.ShareUrlOpen)
  clear_has_shareurlopen();
  return shareurlopen_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppMsg::set_allocated_shareurlopen(::std::string* shareurlopen) {
  if (shareurlopen != NULL) {
    set_has_shareurlopen();
  } else {
    clear_has_shareurlopen();
  }
  shareurlopen_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shareurlopen);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppMsg.ShareUrlOpen)
}

// optional string JsAppId = 15;
bool AppMsg::has_jsappid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void AppMsg::set_has_jsappid() {
  _has_bits_[0] |= 0x00000100u;
}
void AppMsg::clear_has_jsappid() {
  _has_bits_[0] &= ~0x00000100u;
}
void AppMsg::clear_jsappid() {
  jsappid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_jsappid();
}
const ::std::string& AppMsg::jsappid() const {
  // @@protoc_insertion_point(field_get:micromsg.AppMsg.JsAppId)
  return jsappid_.GetNoArena();
}
void AppMsg::set_jsappid(const ::std::string& value) {
  set_has_jsappid();
  jsappid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AppMsg.JsAppId)
}
#if LANG_CXX11
void AppMsg::set_jsappid(::std::string&& value) {
  set_has_jsappid();
  jsappid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AppMsg.JsAppId)
}
#endif
void AppMsg::set_jsappid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_jsappid();
  jsappid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AppMsg.JsAppId)
}
void AppMsg::set_jsappid(const char* value, size_t size) {
  set_has_jsappid();
  jsappid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AppMsg.JsAppId)
}
::std::string* AppMsg::mutable_jsappid() {
  set_has_jsappid();
  // @@protoc_insertion_point(field_mutable:micromsg.AppMsg.JsAppId)
  return jsappid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppMsg::release_jsappid() {
  // @@protoc_insertion_point(field_release:micromsg.AppMsg.JsAppId)
  clear_has_jsappid();
  return jsappid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppMsg::set_allocated_jsappid(::std::string* jsappid) {
  if (jsappid != NULL) {
    set_has_jsappid();
  } else {
    clear_has_jsappid();
  }
  jsappid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), jsappid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppMsg.JsAppId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendAppMsgRequest::kBaseRequestFieldNumber;
const int SendAppMsgRequest::kMsgFieldNumber;
const int SendAppMsgRequest::kCommentUrlFieldNumber;
const int SendAppMsgRequest::kReqTimeFieldNumber;
const int SendAppMsgRequest::kMd5FieldNumber;
const int SendAppMsgRequest::kFileTypeFieldNumber;
const int SendAppMsgRequest::kSignatureFieldNumber;
const int SendAppMsgRequest::kFromSenceFieldNumber;
const int SendAppMsgRequest::kHitMd5FieldNumber;
const int SendAppMsgRequest::kCRC32FieldNumber;
const int SendAppMsgRequest::kMsgForwardTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendAppMsgRequest::SendAppMsgRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmappmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.SendAppMsgRequest)
}
SendAppMsgRequest::SendAppMsgRequest(const SendAppMsgRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  commenturl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_commenturl()) {
    commenturl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commenturl_);
  }
  md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_md5()) {
    md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.md5_);
  }
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_signature()) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  fromsence_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_fromsence()) {
    fromsence_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fromsence_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  if (from.has_msg()) {
    msg_ = new ::micromsg::AppMsg(*from.msg_);
  } else {
    msg_ = NULL;
  }
  ::memcpy(&reqtime_, &from.reqtime_,
    reinterpret_cast<char*>(&msgforwardtype_) -
    reinterpret_cast<char*>(&reqtime_) + sizeof(msgforwardtype_));
  // @@protoc_insertion_point(copy_constructor:micromsg.SendAppMsgRequest)
}

void SendAppMsgRequest::SharedCtor() {
  _cached_size_ = 0;
  commenturl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fromsence_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&msgforwardtype_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(msgforwardtype_));
}

SendAppMsgRequest::~SendAppMsgRequest() {
  // @@protoc_insertion_point(destructor:micromsg.SendAppMsgRequest)
  SharedDtor();
}

void SendAppMsgRequest::SharedDtor() {
  commenturl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fromsence_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
  if (this != internal_default_instance()) {
    delete msg_;
  }
}

void SendAppMsgRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendAppMsgRequest::descriptor() {
  protobuf_mmappmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmappmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendAppMsgRequest& SendAppMsgRequest::default_instance() {
  protobuf_mmappmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SendAppMsgRequest* SendAppMsgRequest::New(::google::protobuf::Arena* arena) const {
  SendAppMsgRequest* n = new SendAppMsgRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendAppMsgRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.SendAppMsgRequest)
  if (_has_bits_[0 / 32] & 63u) {
    if (has_commenturl()) {
      GOOGLE_DCHECK(!commenturl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*commenturl_.UnsafeRawStringPointer())->clear();
    }
    if (has_md5()) {
      GOOGLE_DCHECK(!md5_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*md5_.UnsafeRawStringPointer())->clear();
    }
    if (has_signature()) {
      GOOGLE_DCHECK(!signature_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*signature_.UnsafeRawStringPointer())->clear();
    }
    if (has_fromsence()) {
      GOOGLE_DCHECK(!fromsence_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*fromsence_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
    if (has_msg()) {
      GOOGLE_DCHECK(msg_ != NULL);
      msg_->::micromsg::AppMsg::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 192u) {
    ::memset(&reqtime_, 0, reinterpret_cast<char*>(&filetype_) -
      reinterpret_cast<char*>(&reqtime_) + sizeof(filetype_));
  }
  if (_has_bits_[8 / 32] & 1792u) {
    ::memset(&hitmd5_, 0, reinterpret_cast<char*>(&msgforwardtype_) -
      reinterpret_cast<char*>(&hitmd5_) + sizeof(msgforwardtype_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SendAppMsgRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.SendAppMsgRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.AppMsg Msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string CommentUrl = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_commenturl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->commenturl().data(), this->commenturl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.SendAppMsgRequest.CommentUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ReqTime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_reqtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reqtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Md5 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_md5()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->md5().data(), this->md5().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.SendAppMsgRequest.Md5");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 FileType = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_filetype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &filetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Signature = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signature()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->signature().data(), this->signature().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.SendAppMsgRequest.Signature");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string FromSence = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fromsence()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fromsence().data(), this->fromsence().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.SendAppMsgRequest.FromSence");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 HitMd5 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_hitmd5();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hitmd5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 CRC32 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has_crc32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &crc32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 MsgForwardType = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {
          set_has_msgforwardtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgforwardtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.SendAppMsgRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.SendAppMsgRequest)
  return false;
#undef DO_
}

void SendAppMsgRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.SendAppMsgRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required .micromsg.AppMsg Msg = 2;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->msg_, output);
  }

  // optional string CommentUrl = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->commenturl().data(), this->commenturl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SendAppMsgRequest.CommentUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->commenturl(), output);
  }

  // optional uint32 ReqTime = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->reqtime(), output);
  }

  // optional string Md5 = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->md5().data(), this->md5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SendAppMsgRequest.Md5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->md5(), output);
  }

  // optional uint32 FileType = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->filetype(), output);
  }

  // optional string Signature = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->signature().data(), this->signature().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SendAppMsgRequest.Signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->signature(), output);
  }

  // optional string FromSence = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fromsence().data(), this->fromsence().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SendAppMsgRequest.FromSence");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->fromsence(), output);
  }

  // optional uint32 HitMd5 = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->hitmd5(), output);
  }

  // optional uint32 CRC32 = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->crc32(), output);
  }

  // optional uint32 MsgForwardType = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->msgforwardtype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.SendAppMsgRequest)
}

::google::protobuf::uint8* SendAppMsgRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.SendAppMsgRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required .micromsg.AppMsg Msg = 2;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->msg_, deterministic, target);
  }

  // optional string CommentUrl = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->commenturl().data(), this->commenturl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SendAppMsgRequest.CommentUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->commenturl(), target);
  }

  // optional uint32 ReqTime = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->reqtime(), target);
  }

  // optional string Md5 = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->md5().data(), this->md5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SendAppMsgRequest.Md5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->md5(), target);
  }

  // optional uint32 FileType = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->filetype(), target);
  }

  // optional string Signature = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->signature().data(), this->signature().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SendAppMsgRequest.Signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->signature(), target);
  }

  // optional string FromSence = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fromsence().data(), this->fromsence().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SendAppMsgRequest.FromSence");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->fromsence(), target);
  }

  // optional uint32 HitMd5 = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->hitmd5(), target);
  }

  // optional uint32 CRC32 = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->crc32(), target);
  }

  // optional uint32 MsgForwardType = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->msgforwardtype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.SendAppMsgRequest)
  return target;
}

size_t SendAppMsgRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.SendAppMsgRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_msg()) {
    // required .micromsg.AppMsg Msg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_);
  }

  return total_size;
}
size_t SendAppMsgRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.SendAppMsgRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000030) ^ 0x00000030) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required .micromsg.AppMsg Msg = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string CommentUrl = 3;
    if (has_commenturl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->commenturl());
    }

    // optional string Md5 = 5;
    if (has_md5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->md5());
    }

    // optional string Signature = 7;
    if (has_signature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->signature());
    }

    // optional string FromSence = 8;
    if (has_fromsence()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fromsence());
    }

  }
  if (_has_bits_[0 / 32] & 192u) {
    // optional uint32 ReqTime = 4;
    if (has_reqtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->reqtime());
    }

    // optional uint32 FileType = 6;
    if (has_filetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->filetype());
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional uint32 HitMd5 = 9;
    if (has_hitmd5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hitmd5());
    }

    // optional uint32 CRC32 = 10;
    if (has_crc32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->crc32());
    }

    // optional uint32 MsgForwardType = 11;
    if (has_msgforwardtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msgforwardtype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendAppMsgRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.SendAppMsgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SendAppMsgRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendAppMsgRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.SendAppMsgRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.SendAppMsgRequest)
    MergeFrom(*source);
  }
}

void SendAppMsgRequest::MergeFrom(const SendAppMsgRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.SendAppMsgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_commenturl();
      commenturl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commenturl_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_md5();
      md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.md5_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_signature();
      signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_fromsence();
      fromsence_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fromsence_);
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_msg()->::micromsg::AppMsg::MergeFrom(from.msg());
    }
    if (cached_has_bits & 0x00000040u) {
      reqtime_ = from.reqtime_;
    }
    if (cached_has_bits & 0x00000080u) {
      filetype_ = from.filetype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      hitmd5_ = from.hitmd5_;
    }
    if (cached_has_bits & 0x00000200u) {
      crc32_ = from.crc32_;
    }
    if (cached_has_bits & 0x00000400u) {
      msgforwardtype_ = from.msgforwardtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SendAppMsgRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.SendAppMsgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendAppMsgRequest::CopyFrom(const SendAppMsgRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.SendAppMsgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendAppMsgRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000030) != 0x00000030) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  if (has_msg()) {
    if (!this->msg_->IsInitialized()) return false;
  }
  return true;
}

void SendAppMsgRequest::Swap(SendAppMsgRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendAppMsgRequest::InternalSwap(SendAppMsgRequest* other) {
  commenturl_.Swap(&other->commenturl_);
  md5_.Swap(&other->md5_);
  signature_.Swap(&other->signature_);
  fromsence_.Swap(&other->fromsence_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(msg_, other->msg_);
  std::swap(reqtime_, other->reqtime_);
  std::swap(filetype_, other->filetype_);
  std::swap(hitmd5_, other->hitmd5_);
  std::swap(crc32_, other->crc32_);
  std::swap(msgforwardtype_, other->msgforwardtype_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendAppMsgRequest::GetMetadata() const {
  protobuf_mmappmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmappmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SendAppMsgRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool SendAppMsgRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SendAppMsgRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000010u;
}
void SendAppMsgRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000010u;
}
void SendAppMsgRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& SendAppMsgRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* SendAppMsgRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SendAppMsgRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* SendAppMsgRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SendAppMsgRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void SendAppMsgRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendAppMsgRequest.BaseRequest)
}

// required .micromsg.AppMsg Msg = 2;
bool SendAppMsgRequest::has_msg() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void SendAppMsgRequest::set_has_msg() {
  _has_bits_[0] |= 0x00000020u;
}
void SendAppMsgRequest::clear_has_msg() {
  _has_bits_[0] &= ~0x00000020u;
}
void SendAppMsgRequest::clear_msg() {
  if (msg_ != NULL) msg_->::micromsg::AppMsg::Clear();
  clear_has_msg();
}
const ::micromsg::AppMsg& SendAppMsgRequest::msg() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgRequest.Msg)
  return msg_ != NULL ? *msg_
                         : *::micromsg::AppMsg::internal_default_instance();
}
::micromsg::AppMsg* SendAppMsgRequest::mutable_msg() {
  set_has_msg();
  if (msg_ == NULL) {
    msg_ = new ::micromsg::AppMsg;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SendAppMsgRequest.Msg)
  return msg_;
}
::micromsg::AppMsg* SendAppMsgRequest::release_msg() {
  // @@protoc_insertion_point(field_release:micromsg.SendAppMsgRequest.Msg)
  clear_has_msg();
  ::micromsg::AppMsg* temp = msg_;
  msg_ = NULL;
  return temp;
}
void SendAppMsgRequest::set_allocated_msg(::micromsg::AppMsg* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendAppMsgRequest.Msg)
}

// optional string CommentUrl = 3;
bool SendAppMsgRequest::has_commenturl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SendAppMsgRequest::set_has_commenturl() {
  _has_bits_[0] |= 0x00000001u;
}
void SendAppMsgRequest::clear_has_commenturl() {
  _has_bits_[0] &= ~0x00000001u;
}
void SendAppMsgRequest::clear_commenturl() {
  commenturl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_commenturl();
}
const ::std::string& SendAppMsgRequest::commenturl() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgRequest.CommentUrl)
  return commenturl_.GetNoArena();
}
void SendAppMsgRequest::set_commenturl(const ::std::string& value) {
  set_has_commenturl();
  commenturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgRequest.CommentUrl)
}
#if LANG_CXX11
void SendAppMsgRequest::set_commenturl(::std::string&& value) {
  set_has_commenturl();
  commenturl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendAppMsgRequest.CommentUrl)
}
#endif
void SendAppMsgRequest::set_commenturl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_commenturl();
  commenturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendAppMsgRequest.CommentUrl)
}
void SendAppMsgRequest::set_commenturl(const char* value, size_t size) {
  set_has_commenturl();
  commenturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendAppMsgRequest.CommentUrl)
}
::std::string* SendAppMsgRequest::mutable_commenturl() {
  set_has_commenturl();
  // @@protoc_insertion_point(field_mutable:micromsg.SendAppMsgRequest.CommentUrl)
  return commenturl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendAppMsgRequest::release_commenturl() {
  // @@protoc_insertion_point(field_release:micromsg.SendAppMsgRequest.CommentUrl)
  clear_has_commenturl();
  return commenturl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendAppMsgRequest::set_allocated_commenturl(::std::string* commenturl) {
  if (commenturl != NULL) {
    set_has_commenturl();
  } else {
    clear_has_commenturl();
  }
  commenturl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commenturl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendAppMsgRequest.CommentUrl)
}

// optional uint32 ReqTime = 4;
bool SendAppMsgRequest::has_reqtime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void SendAppMsgRequest::set_has_reqtime() {
  _has_bits_[0] |= 0x00000040u;
}
void SendAppMsgRequest::clear_has_reqtime() {
  _has_bits_[0] &= ~0x00000040u;
}
void SendAppMsgRequest::clear_reqtime() {
  reqtime_ = 0u;
  clear_has_reqtime();
}
::google::protobuf::uint32 SendAppMsgRequest::reqtime() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgRequest.ReqTime)
  return reqtime_;
}
void SendAppMsgRequest::set_reqtime(::google::protobuf::uint32 value) {
  set_has_reqtime();
  reqtime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgRequest.ReqTime)
}

// optional string Md5 = 5;
bool SendAppMsgRequest::has_md5() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SendAppMsgRequest::set_has_md5() {
  _has_bits_[0] |= 0x00000002u;
}
void SendAppMsgRequest::clear_has_md5() {
  _has_bits_[0] &= ~0x00000002u;
}
void SendAppMsgRequest::clear_md5() {
  md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_md5();
}
const ::std::string& SendAppMsgRequest::md5() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgRequest.Md5)
  return md5_.GetNoArena();
}
void SendAppMsgRequest::set_md5(const ::std::string& value) {
  set_has_md5();
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgRequest.Md5)
}
#if LANG_CXX11
void SendAppMsgRequest::set_md5(::std::string&& value) {
  set_has_md5();
  md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendAppMsgRequest.Md5)
}
#endif
void SendAppMsgRequest::set_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_md5();
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendAppMsgRequest.Md5)
}
void SendAppMsgRequest::set_md5(const char* value, size_t size) {
  set_has_md5();
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendAppMsgRequest.Md5)
}
::std::string* SendAppMsgRequest::mutable_md5() {
  set_has_md5();
  // @@protoc_insertion_point(field_mutable:micromsg.SendAppMsgRequest.Md5)
  return md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendAppMsgRequest::release_md5() {
  // @@protoc_insertion_point(field_release:micromsg.SendAppMsgRequest.Md5)
  clear_has_md5();
  return md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendAppMsgRequest::set_allocated_md5(::std::string* md5) {
  if (md5 != NULL) {
    set_has_md5();
  } else {
    clear_has_md5();
  }
  md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), md5);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendAppMsgRequest.Md5)
}

// optional uint32 FileType = 6;
bool SendAppMsgRequest::has_filetype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void SendAppMsgRequest::set_has_filetype() {
  _has_bits_[0] |= 0x00000080u;
}
void SendAppMsgRequest::clear_has_filetype() {
  _has_bits_[0] &= ~0x00000080u;
}
void SendAppMsgRequest::clear_filetype() {
  filetype_ = 0u;
  clear_has_filetype();
}
::google::protobuf::uint32 SendAppMsgRequest::filetype() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgRequest.FileType)
  return filetype_;
}
void SendAppMsgRequest::set_filetype(::google::protobuf::uint32 value) {
  set_has_filetype();
  filetype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgRequest.FileType)
}

// optional string Signature = 7;
bool SendAppMsgRequest::has_signature() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SendAppMsgRequest::set_has_signature() {
  _has_bits_[0] |= 0x00000004u;
}
void SendAppMsgRequest::clear_has_signature() {
  _has_bits_[0] &= ~0x00000004u;
}
void SendAppMsgRequest::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_signature();
}
const ::std::string& SendAppMsgRequest::signature() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgRequest.Signature)
  return signature_.GetNoArena();
}
void SendAppMsgRequest::set_signature(const ::std::string& value) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgRequest.Signature)
}
#if LANG_CXX11
void SendAppMsgRequest::set_signature(::std::string&& value) {
  set_has_signature();
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendAppMsgRequest.Signature)
}
#endif
void SendAppMsgRequest::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendAppMsgRequest.Signature)
}
void SendAppMsgRequest::set_signature(const char* value, size_t size) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendAppMsgRequest.Signature)
}
::std::string* SendAppMsgRequest::mutable_signature() {
  set_has_signature();
  // @@protoc_insertion_point(field_mutable:micromsg.SendAppMsgRequest.Signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendAppMsgRequest::release_signature() {
  // @@protoc_insertion_point(field_release:micromsg.SendAppMsgRequest.Signature)
  clear_has_signature();
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendAppMsgRequest::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    set_has_signature();
  } else {
    clear_has_signature();
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendAppMsgRequest.Signature)
}

// optional string FromSence = 8;
bool SendAppMsgRequest::has_fromsence() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SendAppMsgRequest::set_has_fromsence() {
  _has_bits_[0] |= 0x00000008u;
}
void SendAppMsgRequest::clear_has_fromsence() {
  _has_bits_[0] &= ~0x00000008u;
}
void SendAppMsgRequest::clear_fromsence() {
  fromsence_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fromsence();
}
const ::std::string& SendAppMsgRequest::fromsence() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgRequest.FromSence)
  return fromsence_.GetNoArena();
}
void SendAppMsgRequest::set_fromsence(const ::std::string& value) {
  set_has_fromsence();
  fromsence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgRequest.FromSence)
}
#if LANG_CXX11
void SendAppMsgRequest::set_fromsence(::std::string&& value) {
  set_has_fromsence();
  fromsence_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendAppMsgRequest.FromSence)
}
#endif
void SendAppMsgRequest::set_fromsence(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_fromsence();
  fromsence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendAppMsgRequest.FromSence)
}
void SendAppMsgRequest::set_fromsence(const char* value, size_t size) {
  set_has_fromsence();
  fromsence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendAppMsgRequest.FromSence)
}
::std::string* SendAppMsgRequest::mutable_fromsence() {
  set_has_fromsence();
  // @@protoc_insertion_point(field_mutable:micromsg.SendAppMsgRequest.FromSence)
  return fromsence_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendAppMsgRequest::release_fromsence() {
  // @@protoc_insertion_point(field_release:micromsg.SendAppMsgRequest.FromSence)
  clear_has_fromsence();
  return fromsence_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendAppMsgRequest::set_allocated_fromsence(::std::string* fromsence) {
  if (fromsence != NULL) {
    set_has_fromsence();
  } else {
    clear_has_fromsence();
  }
  fromsence_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromsence);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendAppMsgRequest.FromSence)
}

// optional uint32 HitMd5 = 9;
bool SendAppMsgRequest::has_hitmd5() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void SendAppMsgRequest::set_has_hitmd5() {
  _has_bits_[0] |= 0x00000100u;
}
void SendAppMsgRequest::clear_has_hitmd5() {
  _has_bits_[0] &= ~0x00000100u;
}
void SendAppMsgRequest::clear_hitmd5() {
  hitmd5_ = 0u;
  clear_has_hitmd5();
}
::google::protobuf::uint32 SendAppMsgRequest::hitmd5() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgRequest.HitMd5)
  return hitmd5_;
}
void SendAppMsgRequest::set_hitmd5(::google::protobuf::uint32 value) {
  set_has_hitmd5();
  hitmd5_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgRequest.HitMd5)
}

// optional uint32 CRC32 = 10;
bool SendAppMsgRequest::has_crc32() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void SendAppMsgRequest::set_has_crc32() {
  _has_bits_[0] |= 0x00000200u;
}
void SendAppMsgRequest::clear_has_crc32() {
  _has_bits_[0] &= ~0x00000200u;
}
void SendAppMsgRequest::clear_crc32() {
  crc32_ = 0u;
  clear_has_crc32();
}
::google::protobuf::uint32 SendAppMsgRequest::crc32() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgRequest.CRC32)
  return crc32_;
}
void SendAppMsgRequest::set_crc32(::google::protobuf::uint32 value) {
  set_has_crc32();
  crc32_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgRequest.CRC32)
}

// optional uint32 MsgForwardType = 11;
bool SendAppMsgRequest::has_msgforwardtype() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void SendAppMsgRequest::set_has_msgforwardtype() {
  _has_bits_[0] |= 0x00000400u;
}
void SendAppMsgRequest::clear_has_msgforwardtype() {
  _has_bits_[0] &= ~0x00000400u;
}
void SendAppMsgRequest::clear_msgforwardtype() {
  msgforwardtype_ = 0u;
  clear_has_msgforwardtype();
}
::google::protobuf::uint32 SendAppMsgRequest::msgforwardtype() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgRequest.MsgForwardType)
  return msgforwardtype_;
}
void SendAppMsgRequest::set_msgforwardtype(::google::protobuf::uint32 value) {
  set_has_msgforwardtype();
  msgforwardtype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgRequest.MsgForwardType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendAppMsgResponse::kBaseResponseFieldNumber;
const int SendAppMsgResponse::kAppIdFieldNumber;
const int SendAppMsgResponse::kFromUserNameFieldNumber;
const int SendAppMsgResponse::kToUserNameFieldNumber;
const int SendAppMsgResponse::kMsgIdFieldNumber;
const int SendAppMsgResponse::kClientMsgIdFieldNumber;
const int SendAppMsgResponse::kCreateTimeFieldNumber;
const int SendAppMsgResponse::kTypeFieldNumber;
const int SendAppMsgResponse::kNewMsgIdFieldNumber;
const int SendAppMsgResponse::kAESKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendAppMsgResponse::SendAppMsgResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmappmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.SendAppMsgResponse)
}
SendAppMsgResponse::SendAppMsgResponse(const SendAppMsgResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appid()) {
    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  fromusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_fromusername()) {
    fromusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fromusername_);
  }
  tousername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tousername()) {
    tousername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tousername_);
  }
  clientmsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_clientmsgid()) {
    clientmsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientmsgid_);
  }
  aeskey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_aeskey()) {
    aeskey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.aeskey_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  ::memcpy(&msgid_, &from.msgid_,
    reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&msgid_) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:micromsg.SendAppMsgResponse)
}

void SendAppMsgResponse::SharedCtor() {
  _cached_size_ = 0;
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fromusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tousername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientmsgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  aeskey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(type_));
}

SendAppMsgResponse::~SendAppMsgResponse() {
  // @@protoc_insertion_point(destructor:micromsg.SendAppMsgResponse)
  SharedDtor();
}

void SendAppMsgResponse::SharedDtor() {
  appid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fromusername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tousername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientmsgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  aeskey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void SendAppMsgResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendAppMsgResponse::descriptor() {
  protobuf_mmappmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmappmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendAppMsgResponse& SendAppMsgResponse::default_instance() {
  protobuf_mmappmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

SendAppMsgResponse* SendAppMsgResponse::New(::google::protobuf::Arena* arena) const {
  SendAppMsgResponse* n = new SendAppMsgResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendAppMsgResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.SendAppMsgResponse)
  if (_has_bits_[0 / 32] & 63u) {
    if (has_appid()) {
      GOOGLE_DCHECK(!appid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appid_.UnsafeRawStringPointer())->clear();
    }
    if (has_fromusername()) {
      GOOGLE_DCHECK(!fromusername_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*fromusername_.UnsafeRawStringPointer())->clear();
    }
    if (has_tousername()) {
      GOOGLE_DCHECK(!tousername_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*tousername_.UnsafeRawStringPointer())->clear();
    }
    if (has_clientmsgid()) {
      GOOGLE_DCHECK(!clientmsgid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*clientmsgid_.UnsafeRawStringPointer())->clear();
    }
    if (has_aeskey()) {
      GOOGLE_DCHECK(!aeskey_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*aeskey_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 192u) {
    ::memset(&msgid_, 0, reinterpret_cast<char*>(&createtime_) -
      reinterpret_cast<char*>(&msgid_) + sizeof(createtime_));
  }
  if (_has_bits_[8 / 32] & 768u) {
    ::memset(&newmsgid_, 0, reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&newmsgid_) + sizeof(type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SendAppMsgResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.SendAppMsgResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appid().data(), this->appid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.SendAppMsgResponse.AppId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string FromUserName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fromusername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fromusername().data(), this->fromusername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.SendAppMsgResponse.FromUserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ToUserName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tousername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tousername().data(), this->tousername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.SendAppMsgResponse.ToUserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 MsgId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_msgid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ClientMsgId = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientmsgid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->clientmsgid().data(), this->clientmsgid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.SendAppMsgResponse.ClientMsgId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 CreateTime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_createtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &createtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 Type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 NewMsgId = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_newmsgid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &newmsgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AESKey = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_aeskey()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->aeskey().data(), this->aeskey().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.SendAppMsgResponse.AESKey");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.SendAppMsgResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.SendAppMsgResponse)
  return false;
#undef DO_
}

void SendAppMsgResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.SendAppMsgResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // optional string AppId = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SendAppMsgResponse.AppId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appid(), output);
  }

  // optional string FromUserName = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fromusername().data(), this->fromusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SendAppMsgResponse.FromUserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->fromusername(), output);
  }

  // optional string ToUserName = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tousername().data(), this->tousername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SendAppMsgResponse.ToUserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->tousername(), output);
  }

  // required uint32 MsgId = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->msgid(), output);
  }

  // optional string ClientMsgId = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clientmsgid().data(), this->clientmsgid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SendAppMsgResponse.ClientMsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->clientmsgid(), output);
  }

  // required uint32 CreateTime = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->createtime(), output);
  }

  // optional uint32 Type = 8;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->type(), output);
  }

  // optional uint64 NewMsgId = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->newmsgid(), output);
  }

  // optional string AESKey = 10;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->aeskey().data(), this->aeskey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SendAppMsgResponse.AESKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->aeskey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.SendAppMsgResponse)
}

::google::protobuf::uint8* SendAppMsgResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.SendAppMsgResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // optional string AppId = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SendAppMsgResponse.AppId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appid(), target);
  }

  // optional string FromUserName = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fromusername().data(), this->fromusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SendAppMsgResponse.FromUserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->fromusername(), target);
  }

  // optional string ToUserName = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tousername().data(), this->tousername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SendAppMsgResponse.ToUserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->tousername(), target);
  }

  // required uint32 MsgId = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->msgid(), target);
  }

  // optional string ClientMsgId = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clientmsgid().data(), this->clientmsgid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SendAppMsgResponse.ClientMsgId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->clientmsgid(), target);
  }

  // required uint32 CreateTime = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->createtime(), target);
  }

  // optional uint32 Type = 8;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->type(), target);
  }

  // optional uint64 NewMsgId = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->newmsgid(), target);
  }

  // optional string AESKey = 10;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->aeskey().data(), this->aeskey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SendAppMsgResponse.AESKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->aeskey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.SendAppMsgResponse)
  return target;
}

size_t SendAppMsgResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.SendAppMsgResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_msgid()) {
    // required uint32 MsgId = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  if (has_createtime()) {
    // required uint32 CreateTime = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->createtime());
  }

  return total_size;
}
size_t SendAppMsgResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.SendAppMsgResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x000000e0) ^ 0x000000e0) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required uint32 MsgId = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());

    // required uint32 CreateTime = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->createtime());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string AppId = 2;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appid());
    }

    // optional string FromUserName = 3;
    if (has_fromusername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fromusername());
    }

    // optional string ToUserName = 4;
    if (has_tousername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tousername());
    }

    // optional string ClientMsgId = 6;
    if (has_clientmsgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->clientmsgid());
    }

    // optional string AESKey = 10;
    if (has_aeskey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->aeskey());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional uint64 NewMsgId = 9;
    if (has_newmsgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->newmsgid());
    }

    // optional uint32 Type = 8;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendAppMsgResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.SendAppMsgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SendAppMsgResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendAppMsgResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.SendAppMsgResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.SendAppMsgResponse)
    MergeFrom(*source);
  }
}

void SendAppMsgResponse::MergeFrom(const SendAppMsgResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.SendAppMsgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_appid();
      appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_fromusername();
      fromusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fromusername_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_tousername();
      tousername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tousername_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_clientmsgid();
      clientmsgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientmsgid_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_aeskey();
      aeskey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.aeskey_);
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000040u) {
      msgid_ = from.msgid_;
    }
    if (cached_has_bits & 0x00000080u) {
      createtime_ = from.createtime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      newmsgid_ = from.newmsgid_;
    }
    if (cached_has_bits & 0x00000200u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SendAppMsgResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.SendAppMsgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendAppMsgResponse::CopyFrom(const SendAppMsgResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.SendAppMsgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendAppMsgResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000e0) != 0x000000e0) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void SendAppMsgResponse::Swap(SendAppMsgResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendAppMsgResponse::InternalSwap(SendAppMsgResponse* other) {
  appid_.Swap(&other->appid_);
  fromusername_.Swap(&other->fromusername_);
  tousername_.Swap(&other->tousername_);
  clientmsgid_.Swap(&other->clientmsgid_);
  aeskey_.Swap(&other->aeskey_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(msgid_, other->msgid_);
  std::swap(createtime_, other->createtime_);
  std::swap(newmsgid_, other->newmsgid_);
  std::swap(type_, other->type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendAppMsgResponse::GetMetadata() const {
  protobuf_mmappmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmappmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SendAppMsgResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool SendAppMsgResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void SendAppMsgResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000020u;
}
void SendAppMsgResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000020u;
}
void SendAppMsgResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& SendAppMsgResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* SendAppMsgResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SendAppMsgResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* SendAppMsgResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.SendAppMsgResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void SendAppMsgResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendAppMsgResponse.BaseResponse)
}

// optional string AppId = 2;
bool SendAppMsgResponse::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SendAppMsgResponse::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
void SendAppMsgResponse::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
void SendAppMsgResponse::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
const ::std::string& SendAppMsgResponse::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgResponse.AppId)
  return appid_.GetNoArena();
}
void SendAppMsgResponse::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgResponse.AppId)
}
#if LANG_CXX11
void SendAppMsgResponse::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendAppMsgResponse.AppId)
}
#endif
void SendAppMsgResponse::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendAppMsgResponse.AppId)
}
void SendAppMsgResponse::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendAppMsgResponse.AppId)
}
::std::string* SendAppMsgResponse::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.SendAppMsgResponse.AppId)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendAppMsgResponse::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.SendAppMsgResponse.AppId)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendAppMsgResponse::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendAppMsgResponse.AppId)
}

// optional string FromUserName = 3;
bool SendAppMsgResponse::has_fromusername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SendAppMsgResponse::set_has_fromusername() {
  _has_bits_[0] |= 0x00000002u;
}
void SendAppMsgResponse::clear_has_fromusername() {
  _has_bits_[0] &= ~0x00000002u;
}
void SendAppMsgResponse::clear_fromusername() {
  fromusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fromusername();
}
const ::std::string& SendAppMsgResponse::fromusername() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgResponse.FromUserName)
  return fromusername_.GetNoArena();
}
void SendAppMsgResponse::set_fromusername(const ::std::string& value) {
  set_has_fromusername();
  fromusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgResponse.FromUserName)
}
#if LANG_CXX11
void SendAppMsgResponse::set_fromusername(::std::string&& value) {
  set_has_fromusername();
  fromusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendAppMsgResponse.FromUserName)
}
#endif
void SendAppMsgResponse::set_fromusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_fromusername();
  fromusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendAppMsgResponse.FromUserName)
}
void SendAppMsgResponse::set_fromusername(const char* value, size_t size) {
  set_has_fromusername();
  fromusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendAppMsgResponse.FromUserName)
}
::std::string* SendAppMsgResponse::mutable_fromusername() {
  set_has_fromusername();
  // @@protoc_insertion_point(field_mutable:micromsg.SendAppMsgResponse.FromUserName)
  return fromusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendAppMsgResponse::release_fromusername() {
  // @@protoc_insertion_point(field_release:micromsg.SendAppMsgResponse.FromUserName)
  clear_has_fromusername();
  return fromusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendAppMsgResponse::set_allocated_fromusername(::std::string* fromusername) {
  if (fromusername != NULL) {
    set_has_fromusername();
  } else {
    clear_has_fromusername();
  }
  fromusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromusername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendAppMsgResponse.FromUserName)
}

// optional string ToUserName = 4;
bool SendAppMsgResponse::has_tousername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SendAppMsgResponse::set_has_tousername() {
  _has_bits_[0] |= 0x00000004u;
}
void SendAppMsgResponse::clear_has_tousername() {
  _has_bits_[0] &= ~0x00000004u;
}
void SendAppMsgResponse::clear_tousername() {
  tousername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tousername();
}
const ::std::string& SendAppMsgResponse::tousername() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgResponse.ToUserName)
  return tousername_.GetNoArena();
}
void SendAppMsgResponse::set_tousername(const ::std::string& value) {
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgResponse.ToUserName)
}
#if LANG_CXX11
void SendAppMsgResponse::set_tousername(::std::string&& value) {
  set_has_tousername();
  tousername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendAppMsgResponse.ToUserName)
}
#endif
void SendAppMsgResponse::set_tousername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendAppMsgResponse.ToUserName)
}
void SendAppMsgResponse::set_tousername(const char* value, size_t size) {
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendAppMsgResponse.ToUserName)
}
::std::string* SendAppMsgResponse::mutable_tousername() {
  set_has_tousername();
  // @@protoc_insertion_point(field_mutable:micromsg.SendAppMsgResponse.ToUserName)
  return tousername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendAppMsgResponse::release_tousername() {
  // @@protoc_insertion_point(field_release:micromsg.SendAppMsgResponse.ToUserName)
  clear_has_tousername();
  return tousername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendAppMsgResponse::set_allocated_tousername(::std::string* tousername) {
  if (tousername != NULL) {
    set_has_tousername();
  } else {
    clear_has_tousername();
  }
  tousername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tousername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendAppMsgResponse.ToUserName)
}

// required uint32 MsgId = 5;
bool SendAppMsgResponse::has_msgid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void SendAppMsgResponse::set_has_msgid() {
  _has_bits_[0] |= 0x00000040u;
}
void SendAppMsgResponse::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000040u;
}
void SendAppMsgResponse::clear_msgid() {
  msgid_ = 0u;
  clear_has_msgid();
}
::google::protobuf::uint32 SendAppMsgResponse::msgid() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgResponse.MsgId)
  return msgid_;
}
void SendAppMsgResponse::set_msgid(::google::protobuf::uint32 value) {
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgResponse.MsgId)
}

// optional string ClientMsgId = 6;
bool SendAppMsgResponse::has_clientmsgid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SendAppMsgResponse::set_has_clientmsgid() {
  _has_bits_[0] |= 0x00000008u;
}
void SendAppMsgResponse::clear_has_clientmsgid() {
  _has_bits_[0] &= ~0x00000008u;
}
void SendAppMsgResponse::clear_clientmsgid() {
  clientmsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_clientmsgid();
}
const ::std::string& SendAppMsgResponse::clientmsgid() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgResponse.ClientMsgId)
  return clientmsgid_.GetNoArena();
}
void SendAppMsgResponse::set_clientmsgid(const ::std::string& value) {
  set_has_clientmsgid();
  clientmsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgResponse.ClientMsgId)
}
#if LANG_CXX11
void SendAppMsgResponse::set_clientmsgid(::std::string&& value) {
  set_has_clientmsgid();
  clientmsgid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendAppMsgResponse.ClientMsgId)
}
#endif
void SendAppMsgResponse::set_clientmsgid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_clientmsgid();
  clientmsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendAppMsgResponse.ClientMsgId)
}
void SendAppMsgResponse::set_clientmsgid(const char* value, size_t size) {
  set_has_clientmsgid();
  clientmsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendAppMsgResponse.ClientMsgId)
}
::std::string* SendAppMsgResponse::mutable_clientmsgid() {
  set_has_clientmsgid();
  // @@protoc_insertion_point(field_mutable:micromsg.SendAppMsgResponse.ClientMsgId)
  return clientmsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendAppMsgResponse::release_clientmsgid() {
  // @@protoc_insertion_point(field_release:micromsg.SendAppMsgResponse.ClientMsgId)
  clear_has_clientmsgid();
  return clientmsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendAppMsgResponse::set_allocated_clientmsgid(::std::string* clientmsgid) {
  if (clientmsgid != NULL) {
    set_has_clientmsgid();
  } else {
    clear_has_clientmsgid();
  }
  clientmsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientmsgid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendAppMsgResponse.ClientMsgId)
}

// required uint32 CreateTime = 7;
bool SendAppMsgResponse::has_createtime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void SendAppMsgResponse::set_has_createtime() {
  _has_bits_[0] |= 0x00000080u;
}
void SendAppMsgResponse::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000080u;
}
void SendAppMsgResponse::clear_createtime() {
  createtime_ = 0u;
  clear_has_createtime();
}
::google::protobuf::uint32 SendAppMsgResponse::createtime() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgResponse.CreateTime)
  return createtime_;
}
void SendAppMsgResponse::set_createtime(::google::protobuf::uint32 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgResponse.CreateTime)
}

// optional uint32 Type = 8;
bool SendAppMsgResponse::has_type() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void SendAppMsgResponse::set_has_type() {
  _has_bits_[0] |= 0x00000200u;
}
void SendAppMsgResponse::clear_has_type() {
  _has_bits_[0] &= ~0x00000200u;
}
void SendAppMsgResponse::clear_type() {
  type_ = 0u;
  clear_has_type();
}
::google::protobuf::uint32 SendAppMsgResponse::type() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgResponse.Type)
  return type_;
}
void SendAppMsgResponse::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgResponse.Type)
}

// optional uint64 NewMsgId = 9;
bool SendAppMsgResponse::has_newmsgid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void SendAppMsgResponse::set_has_newmsgid() {
  _has_bits_[0] |= 0x00000100u;
}
void SendAppMsgResponse::clear_has_newmsgid() {
  _has_bits_[0] &= ~0x00000100u;
}
void SendAppMsgResponse::clear_newmsgid() {
  newmsgid_ = GOOGLE_ULONGLONG(0);
  clear_has_newmsgid();
}
::google::protobuf::uint64 SendAppMsgResponse::newmsgid() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgResponse.NewMsgId)
  return newmsgid_;
}
void SendAppMsgResponse::set_newmsgid(::google::protobuf::uint64 value) {
  set_has_newmsgid();
  newmsgid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgResponse.NewMsgId)
}

// optional string AESKey = 10;
bool SendAppMsgResponse::has_aeskey() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SendAppMsgResponse::set_has_aeskey() {
  _has_bits_[0] |= 0x00000010u;
}
void SendAppMsgResponse::clear_has_aeskey() {
  _has_bits_[0] &= ~0x00000010u;
}
void SendAppMsgResponse::clear_aeskey() {
  aeskey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_aeskey();
}
const ::std::string& SendAppMsgResponse::aeskey() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgResponse.AESKey)
  return aeskey_.GetNoArena();
}
void SendAppMsgResponse::set_aeskey(const ::std::string& value) {
  set_has_aeskey();
  aeskey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgResponse.AESKey)
}
#if LANG_CXX11
void SendAppMsgResponse::set_aeskey(::std::string&& value) {
  set_has_aeskey();
  aeskey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendAppMsgResponse.AESKey)
}
#endif
void SendAppMsgResponse::set_aeskey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_aeskey();
  aeskey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendAppMsgResponse.AESKey)
}
void SendAppMsgResponse::set_aeskey(const char* value, size_t size) {
  set_has_aeskey();
  aeskey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendAppMsgResponse.AESKey)
}
::std::string* SendAppMsgResponse::mutable_aeskey() {
  set_has_aeskey();
  // @@protoc_insertion_point(field_mutable:micromsg.SendAppMsgResponse.AESKey)
  return aeskey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendAppMsgResponse::release_aeskey() {
  // @@protoc_insertion_point(field_release:micromsg.SendAppMsgResponse.AESKey)
  clear_has_aeskey();
  return aeskey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendAppMsgResponse::set_allocated_aeskey(::std::string* aeskey) {
  if (aeskey != NULL) {
    set_has_aeskey();
  } else {
    clear_has_aeskey();
  }
  aeskey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), aeskey);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendAppMsgResponse.AESKey)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DownloadAppAttachRequest::kBaseRequestFieldNumber;
const int DownloadAppAttachRequest::kAppIdFieldNumber;
const int DownloadAppAttachRequest::kSdkVersionFieldNumber;
const int DownloadAppAttachRequest::kMediaIdFieldNumber;
const int DownloadAppAttachRequest::kUserNameFieldNumber;
const int DownloadAppAttachRequest::kTotalLenFieldNumber;
const int DownloadAppAttachRequest::kStartPosFieldNumber;
const int DownloadAppAttachRequest::kDataLenFieldNumber;
const int DownloadAppAttachRequest::kOutFmtFieldNumber;
const int DownloadAppAttachRequest::kRotationFieldNumber;
const int DownloadAppAttachRequest::kTypeFieldNumber;
const int DownloadAppAttachRequest::kCDNTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DownloadAppAttachRequest::DownloadAppAttachRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmappmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.DownloadAppAttachRequest)
}
DownloadAppAttachRequest::DownloadAppAttachRequest(const DownloadAppAttachRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appid()) {
    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  mediaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mediaid()) {
    mediaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mediaid_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  outfmt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_outfmt()) {
    outfmt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.outfmt_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  ::memcpy(&sdkversion_, &from.sdkversion_,
    reinterpret_cast<char*>(&cdntype_) -
    reinterpret_cast<char*>(&sdkversion_) + sizeof(cdntype_));
  // @@protoc_insertion_point(copy_constructor:micromsg.DownloadAppAttachRequest)
}

void DownloadAppAttachRequest::SharedCtor() {
  _cached_size_ = 0;
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mediaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  outfmt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&cdntype_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(cdntype_));
}

DownloadAppAttachRequest::~DownloadAppAttachRequest() {
  // @@protoc_insertion_point(destructor:micromsg.DownloadAppAttachRequest)
  SharedDtor();
}

void DownloadAppAttachRequest::SharedDtor() {
  appid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mediaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  outfmt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void DownloadAppAttachRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DownloadAppAttachRequest::descriptor() {
  protobuf_mmappmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmappmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DownloadAppAttachRequest& DownloadAppAttachRequest::default_instance() {
  protobuf_mmappmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

DownloadAppAttachRequest* DownloadAppAttachRequest::New(::google::protobuf::Arena* arena) const {
  DownloadAppAttachRequest* n = new DownloadAppAttachRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DownloadAppAttachRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.DownloadAppAttachRequest)
  if (_has_bits_[0 / 32] & 31u) {
    if (has_appid()) {
      GOOGLE_DCHECK(!appid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appid_.UnsafeRawStringPointer())->clear();
    }
    if (has_mediaid()) {
      GOOGLE_DCHECK(!mediaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*mediaid_.UnsafeRawStringPointer())->clear();
    }
    if (has_username()) {
      GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*username_.UnsafeRawStringPointer())->clear();
    }
    if (has_outfmt()) {
      GOOGLE_DCHECK(!outfmt_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*outfmt_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 224u) {
    ::memset(&sdkversion_, 0, reinterpret_cast<char*>(&startpos_) -
      reinterpret_cast<char*>(&sdkversion_) + sizeof(startpos_));
  }
  if (_has_bits_[8 / 32] & 3840u) {
    ::memset(&datalen_, 0, reinterpret_cast<char*>(&cdntype_) -
      reinterpret_cast<char*>(&datalen_) + sizeof(cdntype_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DownloadAppAttachRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.DownloadAppAttachRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appid().data(), this->appid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.DownloadAppAttachRequest.AppId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 SdkVersion = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_sdkversion();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sdkversion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string MediaId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mediaid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mediaid().data(), this->mediaid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.DownloadAppAttachRequest.MediaId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string UserName = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.DownloadAppAttachRequest.UserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 TotalLen = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_totallen();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &totallen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 StartPos = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_startpos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &startpos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 DataLen = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_datalen();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &datalen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string OutFmt = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_outfmt()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->outfmt().data(), this->outfmt().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.DownloadAppAttachRequest.OutFmt");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 Rotation = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has_rotation();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rotation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 Type = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 CDNType = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {
          set_has_cdntype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cdntype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.DownloadAppAttachRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.DownloadAppAttachRequest)
  return false;
#undef DO_
}

void DownloadAppAttachRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.DownloadAppAttachRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // optional string AppId = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.DownloadAppAttachRequest.AppId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appid(), output);
  }

  // required uint32 SdkVersion = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->sdkversion(), output);
  }

  // optional string MediaId = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mediaid().data(), this->mediaid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.DownloadAppAttachRequest.MediaId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->mediaid(), output);
  }

  // optional string UserName = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.DownloadAppAttachRequest.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->username(), output);
  }

  // required uint32 TotalLen = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->totallen(), output);
  }

  // required uint32 StartPos = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->startpos(), output);
  }

  // required uint32 DataLen = 8;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->datalen(), output);
  }

  // optional string OutFmt = 9;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->outfmt().data(), this->outfmt().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.DownloadAppAttachRequest.OutFmt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->outfmt(), output);
  }

  // optional int32 Rotation = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->rotation(), output);
  }

  // optional uint32 Type = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->type(), output);
  }

  // optional uint32 CDNType = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->cdntype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.DownloadAppAttachRequest)
}

::google::protobuf::uint8* DownloadAppAttachRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.DownloadAppAttachRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // optional string AppId = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.DownloadAppAttachRequest.AppId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appid(), target);
  }

  // required uint32 SdkVersion = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->sdkversion(), target);
  }

  // optional string MediaId = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mediaid().data(), this->mediaid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.DownloadAppAttachRequest.MediaId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->mediaid(), target);
  }

  // optional string UserName = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.DownloadAppAttachRequest.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->username(), target);
  }

  // required uint32 TotalLen = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->totallen(), target);
  }

  // required uint32 StartPos = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->startpos(), target);
  }

  // required uint32 DataLen = 8;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->datalen(), target);
  }

  // optional string OutFmt = 9;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->outfmt().data(), this->outfmt().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.DownloadAppAttachRequest.OutFmt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->outfmt(), target);
  }

  // optional int32 Rotation = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->rotation(), target);
  }

  // optional uint32 Type = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->type(), target);
  }

  // optional uint32 CDNType = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->cdntype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.DownloadAppAttachRequest)
  return target;
}

size_t DownloadAppAttachRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.DownloadAppAttachRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_sdkversion()) {
    // required uint32 SdkVersion = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sdkversion());
  }

  if (has_totallen()) {
    // required uint32 TotalLen = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->totallen());
  }

  if (has_startpos()) {
    // required uint32 StartPos = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->startpos());
  }

  if (has_datalen()) {
    // required uint32 DataLen = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->datalen());
  }

  return total_size;
}
size_t DownloadAppAttachRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.DownloadAppAttachRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x000001f0) ^ 0x000001f0) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required uint32 SdkVersion = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sdkversion());

    // required uint32 TotalLen = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->totallen());

    // required uint32 StartPos = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->startpos());

    // required uint32 DataLen = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->datalen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string AppId = 2;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appid());
    }

    // optional string MediaId = 4;
    if (has_mediaid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mediaid());
    }

    // optional string UserName = 5;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional string OutFmt = 9;
    if (has_outfmt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->outfmt());
    }

  }
  if (_has_bits_[8 / 32] & 3584u) {
    // optional int32 Rotation = 10;
    if (has_rotation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rotation());
    }

    // optional uint32 Type = 11;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // optional uint32 CDNType = 12;
    if (has_cdntype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cdntype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DownloadAppAttachRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.DownloadAppAttachRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DownloadAppAttachRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DownloadAppAttachRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.DownloadAppAttachRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.DownloadAppAttachRequest)
    MergeFrom(*source);
  }
}

void DownloadAppAttachRequest::MergeFrom(const DownloadAppAttachRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.DownloadAppAttachRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_appid();
      appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_mediaid();
      mediaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mediaid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_outfmt();
      outfmt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.outfmt_);
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000020u) {
      sdkversion_ = from.sdkversion_;
    }
    if (cached_has_bits & 0x00000040u) {
      totallen_ = from.totallen_;
    }
    if (cached_has_bits & 0x00000080u) {
      startpos_ = from.startpos_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      datalen_ = from.datalen_;
    }
    if (cached_has_bits & 0x00000200u) {
      rotation_ = from.rotation_;
    }
    if (cached_has_bits & 0x00000400u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000800u) {
      cdntype_ = from.cdntype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DownloadAppAttachRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.DownloadAppAttachRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DownloadAppAttachRequest::CopyFrom(const DownloadAppAttachRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.DownloadAppAttachRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DownloadAppAttachRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001f0) != 0x000001f0) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void DownloadAppAttachRequest::Swap(DownloadAppAttachRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DownloadAppAttachRequest::InternalSwap(DownloadAppAttachRequest* other) {
  appid_.Swap(&other->appid_);
  mediaid_.Swap(&other->mediaid_);
  username_.Swap(&other->username_);
  outfmt_.Swap(&other->outfmt_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(sdkversion_, other->sdkversion_);
  std::swap(totallen_, other->totallen_);
  std::swap(startpos_, other->startpos_);
  std::swap(datalen_, other->datalen_);
  std::swap(rotation_, other->rotation_);
  std::swap(type_, other->type_);
  std::swap(cdntype_, other->cdntype_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DownloadAppAttachRequest::GetMetadata() const {
  protobuf_mmappmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmappmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DownloadAppAttachRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool DownloadAppAttachRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void DownloadAppAttachRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000010u;
}
void DownloadAppAttachRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000010u;
}
void DownloadAppAttachRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& DownloadAppAttachRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* DownloadAppAttachRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.DownloadAppAttachRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* DownloadAppAttachRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.DownloadAppAttachRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void DownloadAppAttachRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.DownloadAppAttachRequest.BaseRequest)
}

// optional string AppId = 2;
bool DownloadAppAttachRequest::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DownloadAppAttachRequest::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
void DownloadAppAttachRequest::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
void DownloadAppAttachRequest::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
const ::std::string& DownloadAppAttachRequest::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachRequest.AppId)
  return appid_.GetNoArena();
}
void DownloadAppAttachRequest::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.DownloadAppAttachRequest.AppId)
}
#if LANG_CXX11
void DownloadAppAttachRequest::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.DownloadAppAttachRequest.AppId)
}
#endif
void DownloadAppAttachRequest::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.DownloadAppAttachRequest.AppId)
}
void DownloadAppAttachRequest::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.DownloadAppAttachRequest.AppId)
}
::std::string* DownloadAppAttachRequest::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.DownloadAppAttachRequest.AppId)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DownloadAppAttachRequest::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.DownloadAppAttachRequest.AppId)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DownloadAppAttachRequest::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.DownloadAppAttachRequest.AppId)
}

// required uint32 SdkVersion = 3;
bool DownloadAppAttachRequest::has_sdkversion() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void DownloadAppAttachRequest::set_has_sdkversion() {
  _has_bits_[0] |= 0x00000020u;
}
void DownloadAppAttachRequest::clear_has_sdkversion() {
  _has_bits_[0] &= ~0x00000020u;
}
void DownloadAppAttachRequest::clear_sdkversion() {
  sdkversion_ = 0u;
  clear_has_sdkversion();
}
::google::protobuf::uint32 DownloadAppAttachRequest::sdkversion() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachRequest.SdkVersion)
  return sdkversion_;
}
void DownloadAppAttachRequest::set_sdkversion(::google::protobuf::uint32 value) {
  set_has_sdkversion();
  sdkversion_ = value;
  // @@protoc_insertion_point(field_set:micromsg.DownloadAppAttachRequest.SdkVersion)
}

// optional string MediaId = 4;
bool DownloadAppAttachRequest::has_mediaid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DownloadAppAttachRequest::set_has_mediaid() {
  _has_bits_[0] |= 0x00000002u;
}
void DownloadAppAttachRequest::clear_has_mediaid() {
  _has_bits_[0] &= ~0x00000002u;
}
void DownloadAppAttachRequest::clear_mediaid() {
  mediaid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mediaid();
}
const ::std::string& DownloadAppAttachRequest::mediaid() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachRequest.MediaId)
  return mediaid_.GetNoArena();
}
void DownloadAppAttachRequest::set_mediaid(const ::std::string& value) {
  set_has_mediaid();
  mediaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.DownloadAppAttachRequest.MediaId)
}
#if LANG_CXX11
void DownloadAppAttachRequest::set_mediaid(::std::string&& value) {
  set_has_mediaid();
  mediaid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.DownloadAppAttachRequest.MediaId)
}
#endif
void DownloadAppAttachRequest::set_mediaid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mediaid();
  mediaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.DownloadAppAttachRequest.MediaId)
}
void DownloadAppAttachRequest::set_mediaid(const char* value, size_t size) {
  set_has_mediaid();
  mediaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.DownloadAppAttachRequest.MediaId)
}
::std::string* DownloadAppAttachRequest::mutable_mediaid() {
  set_has_mediaid();
  // @@protoc_insertion_point(field_mutable:micromsg.DownloadAppAttachRequest.MediaId)
  return mediaid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DownloadAppAttachRequest::release_mediaid() {
  // @@protoc_insertion_point(field_release:micromsg.DownloadAppAttachRequest.MediaId)
  clear_has_mediaid();
  return mediaid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DownloadAppAttachRequest::set_allocated_mediaid(::std::string* mediaid) {
  if (mediaid != NULL) {
    set_has_mediaid();
  } else {
    clear_has_mediaid();
  }
  mediaid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mediaid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.DownloadAppAttachRequest.MediaId)
}

// optional string UserName = 5;
bool DownloadAppAttachRequest::has_username() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DownloadAppAttachRequest::set_has_username() {
  _has_bits_[0] |= 0x00000004u;
}
void DownloadAppAttachRequest::clear_has_username() {
  _has_bits_[0] &= ~0x00000004u;
}
void DownloadAppAttachRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& DownloadAppAttachRequest::username() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachRequest.UserName)
  return username_.GetNoArena();
}
void DownloadAppAttachRequest::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.DownloadAppAttachRequest.UserName)
}
#if LANG_CXX11
void DownloadAppAttachRequest::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.DownloadAppAttachRequest.UserName)
}
#endif
void DownloadAppAttachRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.DownloadAppAttachRequest.UserName)
}
void DownloadAppAttachRequest::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.DownloadAppAttachRequest.UserName)
}
::std::string* DownloadAppAttachRequest::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.DownloadAppAttachRequest.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DownloadAppAttachRequest::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.DownloadAppAttachRequest.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DownloadAppAttachRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.DownloadAppAttachRequest.UserName)
}

// required uint32 TotalLen = 6;
bool DownloadAppAttachRequest::has_totallen() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void DownloadAppAttachRequest::set_has_totallen() {
  _has_bits_[0] |= 0x00000040u;
}
void DownloadAppAttachRequest::clear_has_totallen() {
  _has_bits_[0] &= ~0x00000040u;
}
void DownloadAppAttachRequest::clear_totallen() {
  totallen_ = 0u;
  clear_has_totallen();
}
::google::protobuf::uint32 DownloadAppAttachRequest::totallen() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachRequest.TotalLen)
  return totallen_;
}
void DownloadAppAttachRequest::set_totallen(::google::protobuf::uint32 value) {
  set_has_totallen();
  totallen_ = value;
  // @@protoc_insertion_point(field_set:micromsg.DownloadAppAttachRequest.TotalLen)
}

// required uint32 StartPos = 7;
bool DownloadAppAttachRequest::has_startpos() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void DownloadAppAttachRequest::set_has_startpos() {
  _has_bits_[0] |= 0x00000080u;
}
void DownloadAppAttachRequest::clear_has_startpos() {
  _has_bits_[0] &= ~0x00000080u;
}
void DownloadAppAttachRequest::clear_startpos() {
  startpos_ = 0u;
  clear_has_startpos();
}
::google::protobuf::uint32 DownloadAppAttachRequest::startpos() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachRequest.StartPos)
  return startpos_;
}
void DownloadAppAttachRequest::set_startpos(::google::protobuf::uint32 value) {
  set_has_startpos();
  startpos_ = value;
  // @@protoc_insertion_point(field_set:micromsg.DownloadAppAttachRequest.StartPos)
}

// required uint32 DataLen = 8;
bool DownloadAppAttachRequest::has_datalen() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void DownloadAppAttachRequest::set_has_datalen() {
  _has_bits_[0] |= 0x00000100u;
}
void DownloadAppAttachRequest::clear_has_datalen() {
  _has_bits_[0] &= ~0x00000100u;
}
void DownloadAppAttachRequest::clear_datalen() {
  datalen_ = 0u;
  clear_has_datalen();
}
::google::protobuf::uint32 DownloadAppAttachRequest::datalen() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachRequest.DataLen)
  return datalen_;
}
void DownloadAppAttachRequest::set_datalen(::google::protobuf::uint32 value) {
  set_has_datalen();
  datalen_ = value;
  // @@protoc_insertion_point(field_set:micromsg.DownloadAppAttachRequest.DataLen)
}

// optional string OutFmt = 9;
bool DownloadAppAttachRequest::has_outfmt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void DownloadAppAttachRequest::set_has_outfmt() {
  _has_bits_[0] |= 0x00000008u;
}
void DownloadAppAttachRequest::clear_has_outfmt() {
  _has_bits_[0] &= ~0x00000008u;
}
void DownloadAppAttachRequest::clear_outfmt() {
  outfmt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_outfmt();
}
const ::std::string& DownloadAppAttachRequest::outfmt() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachRequest.OutFmt)
  return outfmt_.GetNoArena();
}
void DownloadAppAttachRequest::set_outfmt(const ::std::string& value) {
  set_has_outfmt();
  outfmt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.DownloadAppAttachRequest.OutFmt)
}
#if LANG_CXX11
void DownloadAppAttachRequest::set_outfmt(::std::string&& value) {
  set_has_outfmt();
  outfmt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.DownloadAppAttachRequest.OutFmt)
}
#endif
void DownloadAppAttachRequest::set_outfmt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_outfmt();
  outfmt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.DownloadAppAttachRequest.OutFmt)
}
void DownloadAppAttachRequest::set_outfmt(const char* value, size_t size) {
  set_has_outfmt();
  outfmt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.DownloadAppAttachRequest.OutFmt)
}
::std::string* DownloadAppAttachRequest::mutable_outfmt() {
  set_has_outfmt();
  // @@protoc_insertion_point(field_mutable:micromsg.DownloadAppAttachRequest.OutFmt)
  return outfmt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DownloadAppAttachRequest::release_outfmt() {
  // @@protoc_insertion_point(field_release:micromsg.DownloadAppAttachRequest.OutFmt)
  clear_has_outfmt();
  return outfmt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DownloadAppAttachRequest::set_allocated_outfmt(::std::string* outfmt) {
  if (outfmt != NULL) {
    set_has_outfmt();
  } else {
    clear_has_outfmt();
  }
  outfmt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), outfmt);
  // @@protoc_insertion_point(field_set_allocated:micromsg.DownloadAppAttachRequest.OutFmt)
}

// optional int32 Rotation = 10;
bool DownloadAppAttachRequest::has_rotation() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void DownloadAppAttachRequest::set_has_rotation() {
  _has_bits_[0] |= 0x00000200u;
}
void DownloadAppAttachRequest::clear_has_rotation() {
  _has_bits_[0] &= ~0x00000200u;
}
void DownloadAppAttachRequest::clear_rotation() {
  rotation_ = 0;
  clear_has_rotation();
}
::google::protobuf::int32 DownloadAppAttachRequest::rotation() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachRequest.Rotation)
  return rotation_;
}
void DownloadAppAttachRequest::set_rotation(::google::protobuf::int32 value) {
  set_has_rotation();
  rotation_ = value;
  // @@protoc_insertion_point(field_set:micromsg.DownloadAppAttachRequest.Rotation)
}

// optional uint32 Type = 11;
bool DownloadAppAttachRequest::has_type() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void DownloadAppAttachRequest::set_has_type() {
  _has_bits_[0] |= 0x00000400u;
}
void DownloadAppAttachRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000400u;
}
void DownloadAppAttachRequest::clear_type() {
  type_ = 0u;
  clear_has_type();
}
::google::protobuf::uint32 DownloadAppAttachRequest::type() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachRequest.Type)
  return type_;
}
void DownloadAppAttachRequest::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.DownloadAppAttachRequest.Type)
}

// optional uint32 CDNType = 12;
bool DownloadAppAttachRequest::has_cdntype() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void DownloadAppAttachRequest::set_has_cdntype() {
  _has_bits_[0] |= 0x00000800u;
}
void DownloadAppAttachRequest::clear_has_cdntype() {
  _has_bits_[0] &= ~0x00000800u;
}
void DownloadAppAttachRequest::clear_cdntype() {
  cdntype_ = 0u;
  clear_has_cdntype();
}
::google::protobuf::uint32 DownloadAppAttachRequest::cdntype() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachRequest.CDNType)
  return cdntype_;
}
void DownloadAppAttachRequest::set_cdntype(::google::protobuf::uint32 value) {
  set_has_cdntype();
  cdntype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.DownloadAppAttachRequest.CDNType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DownloadAppAttachResponse::kBaseResponseFieldNumber;
const int DownloadAppAttachResponse::kAppIdFieldNumber;
const int DownloadAppAttachResponse::kMediaIdFieldNumber;
const int DownloadAppAttachResponse::kUserNameFieldNumber;
const int DownloadAppAttachResponse::kTotalLenFieldNumber;
const int DownloadAppAttachResponse::kStartPosFieldNumber;
const int DownloadAppAttachResponse::kDataLenFieldNumber;
const int DownloadAppAttachResponse::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DownloadAppAttachResponse::DownloadAppAttachResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmappmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.DownloadAppAttachResponse)
}
DownloadAppAttachResponse::DownloadAppAttachResponse(const DownloadAppAttachResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appid()) {
    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  mediaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mediaid()) {
    mediaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mediaid_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  if (from.has_data()) {
    data_ = new ::micromsg::SKBuiltinBuffer_t(*from.data_);
  } else {
    data_ = NULL;
  }
  ::memcpy(&totallen_, &from.totallen_,
    reinterpret_cast<char*>(&datalen_) -
    reinterpret_cast<char*>(&totallen_) + sizeof(datalen_));
  // @@protoc_insertion_point(copy_constructor:micromsg.DownloadAppAttachResponse)
}

void DownloadAppAttachResponse::SharedCtor() {
  _cached_size_ = 0;
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mediaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&datalen_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(datalen_));
}

DownloadAppAttachResponse::~DownloadAppAttachResponse() {
  // @@protoc_insertion_point(destructor:micromsg.DownloadAppAttachResponse)
  SharedDtor();
}

void DownloadAppAttachResponse::SharedDtor() {
  appid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mediaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
  if (this != internal_default_instance()) {
    delete data_;
  }
}

void DownloadAppAttachResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DownloadAppAttachResponse::descriptor() {
  protobuf_mmappmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmappmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DownloadAppAttachResponse& DownloadAppAttachResponse::default_instance() {
  protobuf_mmappmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

DownloadAppAttachResponse* DownloadAppAttachResponse::New(::google::protobuf::Arena* arena) const {
  DownloadAppAttachResponse* n = new DownloadAppAttachResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DownloadAppAttachResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.DownloadAppAttachResponse)
  if (_has_bits_[0 / 32] & 31u) {
    if (has_appid()) {
      GOOGLE_DCHECK(!appid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appid_.UnsafeRawStringPointer())->clear();
    }
    if (has_mediaid()) {
      GOOGLE_DCHECK(!mediaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*mediaid_.UnsafeRawStringPointer())->clear();
    }
    if (has_username()) {
      GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*username_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
    if (has_data()) {
      GOOGLE_DCHECK(data_ != NULL);
      data_->::micromsg::SKBuiltinBuffer_t::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 224u) {
    ::memset(&totallen_, 0, reinterpret_cast<char*>(&datalen_) -
      reinterpret_cast<char*>(&totallen_) + sizeof(datalen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DownloadAppAttachResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.DownloadAppAttachResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appid().data(), this->appid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.DownloadAppAttachResponse.AppId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string MediaId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mediaid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mediaid().data(), this->mediaid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.DownloadAppAttachResponse.MediaId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string UserName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.DownloadAppAttachResponse.UserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 TotalLen = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_totallen();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &totallen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 StartPos = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_startpos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &startpos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 DataLen = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_datalen();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &datalen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.SKBuiltinBuffer_t Data = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.DownloadAppAttachResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.DownloadAppAttachResponse)
  return false;
#undef DO_
}

void DownloadAppAttachResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.DownloadAppAttachResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // optional string AppId = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.DownloadAppAttachResponse.AppId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appid(), output);
  }

  // optional string MediaId = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mediaid().data(), this->mediaid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.DownloadAppAttachResponse.MediaId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->mediaid(), output);
  }

  // optional string UserName = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.DownloadAppAttachResponse.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->username(), output);
  }

  // required uint32 TotalLen = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->totallen(), output);
  }

  // required uint32 StartPos = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->startpos(), output);
  }

  // required uint32 DataLen = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->datalen(), output);
  }

  // required .micromsg.SKBuiltinBuffer_t Data = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->data_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.DownloadAppAttachResponse)
}

::google::protobuf::uint8* DownloadAppAttachResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.DownloadAppAttachResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // optional string AppId = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.DownloadAppAttachResponse.AppId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appid(), target);
  }

  // optional string MediaId = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mediaid().data(), this->mediaid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.DownloadAppAttachResponse.MediaId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->mediaid(), target);
  }

  // optional string UserName = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.DownloadAppAttachResponse.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->username(), target);
  }

  // required uint32 TotalLen = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->totallen(), target);
  }

  // required uint32 StartPos = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->startpos(), target);
  }

  // required uint32 DataLen = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->datalen(), target);
  }

  // required .micromsg.SKBuiltinBuffer_t Data = 8;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->data_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.DownloadAppAttachResponse)
  return target;
}

size_t DownloadAppAttachResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.DownloadAppAttachResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_data()) {
    // required .micromsg.SKBuiltinBuffer_t Data = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  if (has_totallen()) {
    // required uint32 TotalLen = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->totallen());
  }

  if (has_startpos()) {
    // required uint32 StartPos = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->startpos());
  }

  if (has_datalen()) {
    // required uint32 DataLen = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->datalen());
  }

  return total_size;
}
size_t DownloadAppAttachResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.DownloadAppAttachResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x000000f8) ^ 0x000000f8) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required .micromsg.SKBuiltinBuffer_t Data = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);

    // required uint32 TotalLen = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->totallen());

    // required uint32 StartPos = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->startpos());

    // required uint32 DataLen = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->datalen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string AppId = 2;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appid());
    }

    // optional string MediaId = 3;
    if (has_mediaid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mediaid());
    }

    // optional string UserName = 4;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DownloadAppAttachResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.DownloadAppAttachResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DownloadAppAttachResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DownloadAppAttachResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.DownloadAppAttachResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.DownloadAppAttachResponse)
    MergeFrom(*source);
  }
}

void DownloadAppAttachResponse::MergeFrom(const DownloadAppAttachResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.DownloadAppAttachResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_appid();
      appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_mediaid();
      mediaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mediaid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_data()->::micromsg::SKBuiltinBuffer_t::MergeFrom(from.data());
    }
    if (cached_has_bits & 0x00000020u) {
      totallen_ = from.totallen_;
    }
    if (cached_has_bits & 0x00000040u) {
      startpos_ = from.startpos_;
    }
    if (cached_has_bits & 0x00000080u) {
      datalen_ = from.datalen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DownloadAppAttachResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.DownloadAppAttachResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DownloadAppAttachResponse::CopyFrom(const DownloadAppAttachResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.DownloadAppAttachResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DownloadAppAttachResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000f8) != 0x000000f8) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  if (has_data()) {
    if (!this->data_->IsInitialized()) return false;
  }
  return true;
}

void DownloadAppAttachResponse::Swap(DownloadAppAttachResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DownloadAppAttachResponse::InternalSwap(DownloadAppAttachResponse* other) {
  appid_.Swap(&other->appid_);
  mediaid_.Swap(&other->mediaid_);
  username_.Swap(&other->username_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(data_, other->data_);
  std::swap(totallen_, other->totallen_);
  std::swap(startpos_, other->startpos_);
  std::swap(datalen_, other->datalen_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DownloadAppAttachResponse::GetMetadata() const {
  protobuf_mmappmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmappmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DownloadAppAttachResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool DownloadAppAttachResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void DownloadAppAttachResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000008u;
}
void DownloadAppAttachResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000008u;
}
void DownloadAppAttachResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& DownloadAppAttachResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* DownloadAppAttachResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.DownloadAppAttachResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* DownloadAppAttachResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.DownloadAppAttachResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void DownloadAppAttachResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.DownloadAppAttachResponse.BaseResponse)
}

// optional string AppId = 2;
bool DownloadAppAttachResponse::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DownloadAppAttachResponse::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
void DownloadAppAttachResponse::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
void DownloadAppAttachResponse::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
const ::std::string& DownloadAppAttachResponse::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachResponse.AppId)
  return appid_.GetNoArena();
}
void DownloadAppAttachResponse::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.DownloadAppAttachResponse.AppId)
}
#if LANG_CXX11
void DownloadAppAttachResponse::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.DownloadAppAttachResponse.AppId)
}
#endif
void DownloadAppAttachResponse::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.DownloadAppAttachResponse.AppId)
}
void DownloadAppAttachResponse::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.DownloadAppAttachResponse.AppId)
}
::std::string* DownloadAppAttachResponse::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.DownloadAppAttachResponse.AppId)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DownloadAppAttachResponse::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.DownloadAppAttachResponse.AppId)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DownloadAppAttachResponse::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.DownloadAppAttachResponse.AppId)
}

// optional string MediaId = 3;
bool DownloadAppAttachResponse::has_mediaid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DownloadAppAttachResponse::set_has_mediaid() {
  _has_bits_[0] |= 0x00000002u;
}
void DownloadAppAttachResponse::clear_has_mediaid() {
  _has_bits_[0] &= ~0x00000002u;
}
void DownloadAppAttachResponse::clear_mediaid() {
  mediaid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mediaid();
}
const ::std::string& DownloadAppAttachResponse::mediaid() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachResponse.MediaId)
  return mediaid_.GetNoArena();
}
void DownloadAppAttachResponse::set_mediaid(const ::std::string& value) {
  set_has_mediaid();
  mediaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.DownloadAppAttachResponse.MediaId)
}
#if LANG_CXX11
void DownloadAppAttachResponse::set_mediaid(::std::string&& value) {
  set_has_mediaid();
  mediaid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.DownloadAppAttachResponse.MediaId)
}
#endif
void DownloadAppAttachResponse::set_mediaid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mediaid();
  mediaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.DownloadAppAttachResponse.MediaId)
}
void DownloadAppAttachResponse::set_mediaid(const char* value, size_t size) {
  set_has_mediaid();
  mediaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.DownloadAppAttachResponse.MediaId)
}
::std::string* DownloadAppAttachResponse::mutable_mediaid() {
  set_has_mediaid();
  // @@protoc_insertion_point(field_mutable:micromsg.DownloadAppAttachResponse.MediaId)
  return mediaid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DownloadAppAttachResponse::release_mediaid() {
  // @@protoc_insertion_point(field_release:micromsg.DownloadAppAttachResponse.MediaId)
  clear_has_mediaid();
  return mediaid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DownloadAppAttachResponse::set_allocated_mediaid(::std::string* mediaid) {
  if (mediaid != NULL) {
    set_has_mediaid();
  } else {
    clear_has_mediaid();
  }
  mediaid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mediaid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.DownloadAppAttachResponse.MediaId)
}

// optional string UserName = 4;
bool DownloadAppAttachResponse::has_username() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DownloadAppAttachResponse::set_has_username() {
  _has_bits_[0] |= 0x00000004u;
}
void DownloadAppAttachResponse::clear_has_username() {
  _has_bits_[0] &= ~0x00000004u;
}
void DownloadAppAttachResponse::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& DownloadAppAttachResponse::username() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachResponse.UserName)
  return username_.GetNoArena();
}
void DownloadAppAttachResponse::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.DownloadAppAttachResponse.UserName)
}
#if LANG_CXX11
void DownloadAppAttachResponse::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.DownloadAppAttachResponse.UserName)
}
#endif
void DownloadAppAttachResponse::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.DownloadAppAttachResponse.UserName)
}
void DownloadAppAttachResponse::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.DownloadAppAttachResponse.UserName)
}
::std::string* DownloadAppAttachResponse::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.DownloadAppAttachResponse.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DownloadAppAttachResponse::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.DownloadAppAttachResponse.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DownloadAppAttachResponse::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.DownloadAppAttachResponse.UserName)
}

// required uint32 TotalLen = 5;
bool DownloadAppAttachResponse::has_totallen() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void DownloadAppAttachResponse::set_has_totallen() {
  _has_bits_[0] |= 0x00000020u;
}
void DownloadAppAttachResponse::clear_has_totallen() {
  _has_bits_[0] &= ~0x00000020u;
}
void DownloadAppAttachResponse::clear_totallen() {
  totallen_ = 0u;
  clear_has_totallen();
}
::google::protobuf::uint32 DownloadAppAttachResponse::totallen() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachResponse.TotalLen)
  return totallen_;
}
void DownloadAppAttachResponse::set_totallen(::google::protobuf::uint32 value) {
  set_has_totallen();
  totallen_ = value;
  // @@protoc_insertion_point(field_set:micromsg.DownloadAppAttachResponse.TotalLen)
}

// required uint32 StartPos = 6;
bool DownloadAppAttachResponse::has_startpos() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void DownloadAppAttachResponse::set_has_startpos() {
  _has_bits_[0] |= 0x00000040u;
}
void DownloadAppAttachResponse::clear_has_startpos() {
  _has_bits_[0] &= ~0x00000040u;
}
void DownloadAppAttachResponse::clear_startpos() {
  startpos_ = 0u;
  clear_has_startpos();
}
::google::protobuf::uint32 DownloadAppAttachResponse::startpos() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachResponse.StartPos)
  return startpos_;
}
void DownloadAppAttachResponse::set_startpos(::google::protobuf::uint32 value) {
  set_has_startpos();
  startpos_ = value;
  // @@protoc_insertion_point(field_set:micromsg.DownloadAppAttachResponse.StartPos)
}

// required uint32 DataLen = 7;
bool DownloadAppAttachResponse::has_datalen() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void DownloadAppAttachResponse::set_has_datalen() {
  _has_bits_[0] |= 0x00000080u;
}
void DownloadAppAttachResponse::clear_has_datalen() {
  _has_bits_[0] &= ~0x00000080u;
}
void DownloadAppAttachResponse::clear_datalen() {
  datalen_ = 0u;
  clear_has_datalen();
}
::google::protobuf::uint32 DownloadAppAttachResponse::datalen() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachResponse.DataLen)
  return datalen_;
}
void DownloadAppAttachResponse::set_datalen(::google::protobuf::uint32 value) {
  set_has_datalen();
  datalen_ = value;
  // @@protoc_insertion_point(field_set:micromsg.DownloadAppAttachResponse.DataLen)
}

// required .micromsg.SKBuiltinBuffer_t Data = 8;
bool DownloadAppAttachResponse::has_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void DownloadAppAttachResponse::set_has_data() {
  _has_bits_[0] |= 0x00000010u;
}
void DownloadAppAttachResponse::clear_has_data() {
  _has_bits_[0] &= ~0x00000010u;
}
void DownloadAppAttachResponse::clear_data() {
  if (data_ != NULL) data_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_data();
}
const ::micromsg::SKBuiltinBuffer_t& DownloadAppAttachResponse::data() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachResponse.Data)
  return data_ != NULL ? *data_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
::micromsg::SKBuiltinBuffer_t* DownloadAppAttachResponse::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.DownloadAppAttachResponse.Data)
  return data_;
}
::micromsg::SKBuiltinBuffer_t* DownloadAppAttachResponse::release_data() {
  // @@protoc_insertion_point(field_release:micromsg.DownloadAppAttachResponse.Data)
  clear_has_data();
  ::micromsg::SKBuiltinBuffer_t* temp = data_;
  data_ = NULL;
  return temp;
}
void DownloadAppAttachResponse::set_allocated_data(::micromsg::SKBuiltinBuffer_t* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.DownloadAppAttachResponse.Data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpenAppInfo::kAppIDFieldNumber;
const int OpenAppInfo::kAppNameFieldNumber;
const int OpenAppInfo::kAppDescriptionFieldNumber;
const int OpenAppInfo::kAppIconUrlFieldNumber;
const int OpenAppInfo::kAppStoreUrlFieldNumber;
const int OpenAppInfo::kAppVersionFieldNumber;
const int OpenAppInfo::kAppWatermarkUrlFieldNumber;
const int OpenAppInfo::kAndroidPackageNameFieldNumber;
const int OpenAppInfo::kAndroidSignatureFieldNumber;
const int OpenAppInfo::kAppName4EnUSFieldNumber;
const int OpenAppInfo::kAppDescription4EnUSFieldNumber;
const int OpenAppInfo::kAppName4ZhTWFieldNumber;
const int OpenAppInfo::kAppDescription4ZhTWFieldNumber;
const int OpenAppInfo::kAppInfoFlagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpenAppInfo::OpenAppInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmappmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.OpenAppInfo)
}
OpenAppInfo::OpenAppInfo(const OpenAppInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appid()) {
    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  appname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appname()) {
    appname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appname_);
  }
  appdescription_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appdescription()) {
    appdescription_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appdescription_);
  }
  appiconurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appiconurl()) {
    appiconurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appiconurl_);
  }
  appstoreurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appstoreurl()) {
    appstoreurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appstoreurl_);
  }
  appwatermarkurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appwatermarkurl()) {
    appwatermarkurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appwatermarkurl_);
  }
  androidpackagename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_androidpackagename()) {
    androidpackagename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.androidpackagename_);
  }
  androidsignature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_androidsignature()) {
    androidsignature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.androidsignature_);
  }
  appname4enus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appname4enus()) {
    appname4enus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appname4enus_);
  }
  appdescription4enus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appdescription4enus()) {
    appdescription4enus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appdescription4enus_);
  }
  appname4zhtw_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appname4zhtw()) {
    appname4zhtw_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appname4zhtw_);
  }
  appdescription4zhtw_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appdescription4zhtw()) {
    appdescription4zhtw_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appdescription4zhtw_);
  }
  ::memcpy(&appversion_, &from.appversion_,
    reinterpret_cast<char*>(&appinfoflag_) -
    reinterpret_cast<char*>(&appversion_) + sizeof(appinfoflag_));
  // @@protoc_insertion_point(copy_constructor:micromsg.OpenAppInfo)
}

void OpenAppInfo::SharedCtor() {
  _cached_size_ = 0;
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appdescription_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appiconurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appstoreurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appwatermarkurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  androidpackagename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  androidsignature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appname4enus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appdescription4enus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appname4zhtw_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appdescription4zhtw_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&appversion_, 0, reinterpret_cast<char*>(&appinfoflag_) -
    reinterpret_cast<char*>(&appversion_) + sizeof(appinfoflag_));
}

OpenAppInfo::~OpenAppInfo() {
  // @@protoc_insertion_point(destructor:micromsg.OpenAppInfo)
  SharedDtor();
}

void OpenAppInfo::SharedDtor() {
  appid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appdescription_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appiconurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appstoreurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appwatermarkurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  androidpackagename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  androidsignature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appname4enus_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appdescription4enus_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appname4zhtw_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appdescription4zhtw_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OpenAppInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpenAppInfo::descriptor() {
  protobuf_mmappmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmappmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpenAppInfo& OpenAppInfo::default_instance() {
  protobuf_mmappmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

OpenAppInfo* OpenAppInfo::New(::google::protobuf::Arena* arena) const {
  OpenAppInfo* n = new OpenAppInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpenAppInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.OpenAppInfo)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_appid()) {
      GOOGLE_DCHECK(!appid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appid_.UnsafeRawStringPointer())->clear();
    }
    if (has_appname()) {
      GOOGLE_DCHECK(!appname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appname_.UnsafeRawStringPointer())->clear();
    }
    if (has_appdescription()) {
      GOOGLE_DCHECK(!appdescription_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appdescription_.UnsafeRawStringPointer())->clear();
    }
    if (has_appiconurl()) {
      GOOGLE_DCHECK(!appiconurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appiconurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_appstoreurl()) {
      GOOGLE_DCHECK(!appstoreurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appstoreurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_appwatermarkurl()) {
      GOOGLE_DCHECK(!appwatermarkurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appwatermarkurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_androidpackagename()) {
      GOOGLE_DCHECK(!androidpackagename_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*androidpackagename_.UnsafeRawStringPointer())->clear();
    }
    if (has_androidsignature()) {
      GOOGLE_DCHECK(!androidsignature_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*androidsignature_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[8 / 32] & 3840u) {
    if (has_appname4enus()) {
      GOOGLE_DCHECK(!appname4enus_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appname4enus_.UnsafeRawStringPointer())->clear();
    }
    if (has_appdescription4enus()) {
      GOOGLE_DCHECK(!appdescription4enus_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appdescription4enus_.UnsafeRawStringPointer())->clear();
    }
    if (has_appname4zhtw()) {
      GOOGLE_DCHECK(!appname4zhtw_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appname4zhtw_.UnsafeRawStringPointer())->clear();
    }
    if (has_appdescription4zhtw()) {
      GOOGLE_DCHECK(!appdescription4zhtw_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appdescription4zhtw_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[8 / 32] & 12288u) {
    ::memset(&appversion_, 0, reinterpret_cast<char*>(&appinfoflag_) -
      reinterpret_cast<char*>(&appversion_) + sizeof(appinfoflag_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OpenAppInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.OpenAppInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string AppID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appid().data(), this->appid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.OpenAppInfo.AppID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appname().data(), this->appname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.OpenAppInfo.AppName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppDescription = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appdescription()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appdescription().data(), this->appdescription().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.OpenAppInfo.AppDescription");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppIconUrl = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appiconurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appiconurl().data(), this->appiconurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.OpenAppInfo.AppIconUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppStoreUrl = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appstoreurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appstoreurl().data(), this->appstoreurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.OpenAppInfo.AppStoreUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 AppVersion = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_appversion();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appversion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppWatermarkUrl = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appwatermarkurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appwatermarkurl().data(), this->appwatermarkurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.OpenAppInfo.AppWatermarkUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AndroidPackageName = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_androidpackagename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->androidpackagename().data(), this->androidpackagename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.OpenAppInfo.AndroidPackageName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AndroidSignature = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_androidsignature()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->androidsignature().data(), this->androidsignature().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.OpenAppInfo.AndroidSignature");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppName4EnUS = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appname4enus()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appname4enus().data(), this->appname4enus().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.OpenAppInfo.AppName4EnUS");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppDescription4EnUS = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appdescription4enus()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appdescription4enus().data(), this->appdescription4enus().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.OpenAppInfo.AppDescription4EnUS");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppName4ZhTW = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appname4zhtw()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appname4zhtw().data(), this->appname4zhtw().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.OpenAppInfo.AppName4ZhTW");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppDescription4ZhTW = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appdescription4zhtw()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appdescription4zhtw().data(), this->appdescription4zhtw().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.OpenAppInfo.AppDescription4ZhTW");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 AppInfoFlag = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {
          set_has_appinfoflag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appinfoflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.OpenAppInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.OpenAppInfo)
  return false;
#undef DO_
}

void OpenAppInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.OpenAppInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string AppID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.OpenAppInfo.AppID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appid(), output);
  }

  // optional string AppName = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appname().data(), this->appname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.OpenAppInfo.AppName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appname(), output);
  }

  // optional string AppDescription = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appdescription().data(), this->appdescription().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.OpenAppInfo.AppDescription");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->appdescription(), output);
  }

  // optional string AppIconUrl = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appiconurl().data(), this->appiconurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.OpenAppInfo.AppIconUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->appiconurl(), output);
  }

  // optional string AppStoreUrl = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appstoreurl().data(), this->appstoreurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.OpenAppInfo.AppStoreUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->appstoreurl(), output);
  }

  // required uint32 AppVersion = 6;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->appversion(), output);
  }

  // optional string AppWatermarkUrl = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appwatermarkurl().data(), this->appwatermarkurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.OpenAppInfo.AppWatermarkUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->appwatermarkurl(), output);
  }

  // optional string AndroidPackageName = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->androidpackagename().data(), this->androidpackagename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.OpenAppInfo.AndroidPackageName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->androidpackagename(), output);
  }

  // optional string AndroidSignature = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->androidsignature().data(), this->androidsignature().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.OpenAppInfo.AndroidSignature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->androidsignature(), output);
  }

  // optional string AppName4EnUS = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appname4enus().data(), this->appname4enus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.OpenAppInfo.AppName4EnUS");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->appname4enus(), output);
  }

  // optional string AppDescription4EnUS = 11;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appdescription4enus().data(), this->appdescription4enus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.OpenAppInfo.AppDescription4EnUS");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->appdescription4enus(), output);
  }

  // optional string AppName4ZhTW = 12;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appname4zhtw().data(), this->appname4zhtw().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.OpenAppInfo.AppName4ZhTW");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->appname4zhtw(), output);
  }

  // optional string AppDescription4ZhTW = 13;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appdescription4zhtw().data(), this->appdescription4zhtw().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.OpenAppInfo.AppDescription4ZhTW");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->appdescription4zhtw(), output);
  }

  // optional uint32 AppInfoFlag = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->appinfoflag(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.OpenAppInfo)
}

::google::protobuf::uint8* OpenAppInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.OpenAppInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string AppID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.OpenAppInfo.AppID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appid(), target);
  }

  // optional string AppName = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appname().data(), this->appname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.OpenAppInfo.AppName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appname(), target);
  }

  // optional string AppDescription = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appdescription().data(), this->appdescription().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.OpenAppInfo.AppDescription");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->appdescription(), target);
  }

  // optional string AppIconUrl = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appiconurl().data(), this->appiconurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.OpenAppInfo.AppIconUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->appiconurl(), target);
  }

  // optional string AppStoreUrl = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appstoreurl().data(), this->appstoreurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.OpenAppInfo.AppStoreUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->appstoreurl(), target);
  }

  // required uint32 AppVersion = 6;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->appversion(), target);
  }

  // optional string AppWatermarkUrl = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appwatermarkurl().data(), this->appwatermarkurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.OpenAppInfo.AppWatermarkUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->appwatermarkurl(), target);
  }

  // optional string AndroidPackageName = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->androidpackagename().data(), this->androidpackagename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.OpenAppInfo.AndroidPackageName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->androidpackagename(), target);
  }

  // optional string AndroidSignature = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->androidsignature().data(), this->androidsignature().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.OpenAppInfo.AndroidSignature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->androidsignature(), target);
  }

  // optional string AppName4EnUS = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appname4enus().data(), this->appname4enus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.OpenAppInfo.AppName4EnUS");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->appname4enus(), target);
  }

  // optional string AppDescription4EnUS = 11;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appdescription4enus().data(), this->appdescription4enus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.OpenAppInfo.AppDescription4EnUS");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->appdescription4enus(), target);
  }

  // optional string AppName4ZhTW = 12;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appname4zhtw().data(), this->appname4zhtw().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.OpenAppInfo.AppName4ZhTW");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->appname4zhtw(), target);
  }

  // optional string AppDescription4ZhTW = 13;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appdescription4zhtw().data(), this->appdescription4zhtw().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.OpenAppInfo.AppDescription4ZhTW");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->appdescription4zhtw(), target);
  }

  // optional uint32 AppInfoFlag = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->appinfoflag(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.OpenAppInfo)
  return target;
}

size_t OpenAppInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.OpenAppInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint32 AppVersion = 6;
  if (has_appversion()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->appversion());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string AppID = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appid());
    }

    // optional string AppName = 2;
    if (has_appname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appname());
    }

    // optional string AppDescription = 3;
    if (has_appdescription()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appdescription());
    }

    // optional string AppIconUrl = 4;
    if (has_appiconurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appiconurl());
    }

    // optional string AppStoreUrl = 5;
    if (has_appstoreurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appstoreurl());
    }

    // optional string AppWatermarkUrl = 7;
    if (has_appwatermarkurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appwatermarkurl());
    }

    // optional string AndroidPackageName = 8;
    if (has_androidpackagename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->androidpackagename());
    }

    // optional string AndroidSignature = 9;
    if (has_androidsignature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->androidsignature());
    }

  }
  if (_has_bits_[8 / 32] & 3840u) {
    // optional string AppName4EnUS = 10;
    if (has_appname4enus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appname4enus());
    }

    // optional string AppDescription4EnUS = 11;
    if (has_appdescription4enus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appdescription4enus());
    }

    // optional string AppName4ZhTW = 12;
    if (has_appname4zhtw()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appname4zhtw());
    }

    // optional string AppDescription4ZhTW = 13;
    if (has_appdescription4zhtw()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appdescription4zhtw());
    }

  }
  // optional uint32 AppInfoFlag = 14;
  if (has_appinfoflag()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->appinfoflag());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpenAppInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.OpenAppInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const OpenAppInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpenAppInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.OpenAppInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.OpenAppInfo)
    MergeFrom(*source);
  }
}

void OpenAppInfo::MergeFrom(const OpenAppInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.OpenAppInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_appid();
      appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_appname();
      appname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appname_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_appdescription();
      appdescription_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appdescription_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_appiconurl();
      appiconurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appiconurl_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_appstoreurl();
      appstoreurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appstoreurl_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_appwatermarkurl();
      appwatermarkurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appwatermarkurl_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_androidpackagename();
      androidpackagename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.androidpackagename_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_androidsignature();
      androidsignature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.androidsignature_);
    }
  }
  if (cached_has_bits & 16128u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_appname4enus();
      appname4enus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appname4enus_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has_appdescription4enus();
      appdescription4enus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appdescription4enus_);
    }
    if (cached_has_bits & 0x00000400u) {
      set_has_appname4zhtw();
      appname4zhtw_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appname4zhtw_);
    }
    if (cached_has_bits & 0x00000800u) {
      set_has_appdescription4zhtw();
      appdescription4zhtw_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appdescription4zhtw_);
    }
    if (cached_has_bits & 0x00001000u) {
      appversion_ = from.appversion_;
    }
    if (cached_has_bits & 0x00002000u) {
      appinfoflag_ = from.appinfoflag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OpenAppInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.OpenAppInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenAppInfo::CopyFrom(const OpenAppInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.OpenAppInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenAppInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00001000) != 0x00001000) return false;
  return true;
}

void OpenAppInfo::Swap(OpenAppInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpenAppInfo::InternalSwap(OpenAppInfo* other) {
  appid_.Swap(&other->appid_);
  appname_.Swap(&other->appname_);
  appdescription_.Swap(&other->appdescription_);
  appiconurl_.Swap(&other->appiconurl_);
  appstoreurl_.Swap(&other->appstoreurl_);
  appwatermarkurl_.Swap(&other->appwatermarkurl_);
  androidpackagename_.Swap(&other->androidpackagename_);
  androidsignature_.Swap(&other->androidsignature_);
  appname4enus_.Swap(&other->appname4enus_);
  appdescription4enus_.Swap(&other->appdescription4enus_);
  appname4zhtw_.Swap(&other->appname4zhtw_);
  appdescription4zhtw_.Swap(&other->appdescription4zhtw_);
  std::swap(appversion_, other->appversion_);
  std::swap(appinfoflag_, other->appinfoflag_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpenAppInfo::GetMetadata() const {
  protobuf_mmappmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmappmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OpenAppInfo

// optional string AppID = 1;
bool OpenAppInfo::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OpenAppInfo::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
void OpenAppInfo::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
void OpenAppInfo::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
const ::std::string& OpenAppInfo::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.OpenAppInfo.AppID)
  return appid_.GetNoArena();
}
void OpenAppInfo::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.OpenAppInfo.AppID)
}
#if LANG_CXX11
void OpenAppInfo::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.OpenAppInfo.AppID)
}
#endif
void OpenAppInfo::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.OpenAppInfo.AppID)
}
void OpenAppInfo::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.OpenAppInfo.AppID)
}
::std::string* OpenAppInfo::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.OpenAppInfo.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpenAppInfo::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.OpenAppInfo.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpenAppInfo::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.OpenAppInfo.AppID)
}

// optional string AppName = 2;
bool OpenAppInfo::has_appname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OpenAppInfo::set_has_appname() {
  _has_bits_[0] |= 0x00000002u;
}
void OpenAppInfo::clear_has_appname() {
  _has_bits_[0] &= ~0x00000002u;
}
void OpenAppInfo::clear_appname() {
  appname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appname();
}
const ::std::string& OpenAppInfo::appname() const {
  // @@protoc_insertion_point(field_get:micromsg.OpenAppInfo.AppName)
  return appname_.GetNoArena();
}
void OpenAppInfo::set_appname(const ::std::string& value) {
  set_has_appname();
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.OpenAppInfo.AppName)
}
#if LANG_CXX11
void OpenAppInfo::set_appname(::std::string&& value) {
  set_has_appname();
  appname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.OpenAppInfo.AppName)
}
#endif
void OpenAppInfo::set_appname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appname();
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.OpenAppInfo.AppName)
}
void OpenAppInfo::set_appname(const char* value, size_t size) {
  set_has_appname();
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.OpenAppInfo.AppName)
}
::std::string* OpenAppInfo::mutable_appname() {
  set_has_appname();
  // @@protoc_insertion_point(field_mutable:micromsg.OpenAppInfo.AppName)
  return appname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpenAppInfo::release_appname() {
  // @@protoc_insertion_point(field_release:micromsg.OpenAppInfo.AppName)
  clear_has_appname();
  return appname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpenAppInfo::set_allocated_appname(::std::string* appname) {
  if (appname != NULL) {
    set_has_appname();
  } else {
    clear_has_appname();
  }
  appname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.OpenAppInfo.AppName)
}

// optional string AppDescription = 3;
bool OpenAppInfo::has_appdescription() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void OpenAppInfo::set_has_appdescription() {
  _has_bits_[0] |= 0x00000004u;
}
void OpenAppInfo::clear_has_appdescription() {
  _has_bits_[0] &= ~0x00000004u;
}
void OpenAppInfo::clear_appdescription() {
  appdescription_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appdescription();
}
const ::std::string& OpenAppInfo::appdescription() const {
  // @@protoc_insertion_point(field_get:micromsg.OpenAppInfo.AppDescription)
  return appdescription_.GetNoArena();
}
void OpenAppInfo::set_appdescription(const ::std::string& value) {
  set_has_appdescription();
  appdescription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.OpenAppInfo.AppDescription)
}
#if LANG_CXX11
void OpenAppInfo::set_appdescription(::std::string&& value) {
  set_has_appdescription();
  appdescription_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.OpenAppInfo.AppDescription)
}
#endif
void OpenAppInfo::set_appdescription(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appdescription();
  appdescription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.OpenAppInfo.AppDescription)
}
void OpenAppInfo::set_appdescription(const char* value, size_t size) {
  set_has_appdescription();
  appdescription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.OpenAppInfo.AppDescription)
}
::std::string* OpenAppInfo::mutable_appdescription() {
  set_has_appdescription();
  // @@protoc_insertion_point(field_mutable:micromsg.OpenAppInfo.AppDescription)
  return appdescription_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpenAppInfo::release_appdescription() {
  // @@protoc_insertion_point(field_release:micromsg.OpenAppInfo.AppDescription)
  clear_has_appdescription();
  return appdescription_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpenAppInfo::set_allocated_appdescription(::std::string* appdescription) {
  if (appdescription != NULL) {
    set_has_appdescription();
  } else {
    clear_has_appdescription();
  }
  appdescription_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appdescription);
  // @@protoc_insertion_point(field_set_allocated:micromsg.OpenAppInfo.AppDescription)
}

// optional string AppIconUrl = 4;
bool OpenAppInfo::has_appiconurl() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void OpenAppInfo::set_has_appiconurl() {
  _has_bits_[0] |= 0x00000008u;
}
void OpenAppInfo::clear_has_appiconurl() {
  _has_bits_[0] &= ~0x00000008u;
}
void OpenAppInfo::clear_appiconurl() {
  appiconurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appiconurl();
}
const ::std::string& OpenAppInfo::appiconurl() const {
  // @@protoc_insertion_point(field_get:micromsg.OpenAppInfo.AppIconUrl)
  return appiconurl_.GetNoArena();
}
void OpenAppInfo::set_appiconurl(const ::std::string& value) {
  set_has_appiconurl();
  appiconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.OpenAppInfo.AppIconUrl)
}
#if LANG_CXX11
void OpenAppInfo::set_appiconurl(::std::string&& value) {
  set_has_appiconurl();
  appiconurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.OpenAppInfo.AppIconUrl)
}
#endif
void OpenAppInfo::set_appiconurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appiconurl();
  appiconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.OpenAppInfo.AppIconUrl)
}
void OpenAppInfo::set_appiconurl(const char* value, size_t size) {
  set_has_appiconurl();
  appiconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.OpenAppInfo.AppIconUrl)
}
::std::string* OpenAppInfo::mutable_appiconurl() {
  set_has_appiconurl();
  // @@protoc_insertion_point(field_mutable:micromsg.OpenAppInfo.AppIconUrl)
  return appiconurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpenAppInfo::release_appiconurl() {
  // @@protoc_insertion_point(field_release:micromsg.OpenAppInfo.AppIconUrl)
  clear_has_appiconurl();
  return appiconurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpenAppInfo::set_allocated_appiconurl(::std::string* appiconurl) {
  if (appiconurl != NULL) {
    set_has_appiconurl();
  } else {
    clear_has_appiconurl();
  }
  appiconurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appiconurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.OpenAppInfo.AppIconUrl)
}

// optional string AppStoreUrl = 5;
bool OpenAppInfo::has_appstoreurl() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void OpenAppInfo::set_has_appstoreurl() {
  _has_bits_[0] |= 0x00000010u;
}
void OpenAppInfo::clear_has_appstoreurl() {
  _has_bits_[0] &= ~0x00000010u;
}
void OpenAppInfo::clear_appstoreurl() {
  appstoreurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appstoreurl();
}
const ::std::string& OpenAppInfo::appstoreurl() const {
  // @@protoc_insertion_point(field_get:micromsg.OpenAppInfo.AppStoreUrl)
  return appstoreurl_.GetNoArena();
}
void OpenAppInfo::set_appstoreurl(const ::std::string& value) {
  set_has_appstoreurl();
  appstoreurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.OpenAppInfo.AppStoreUrl)
}
#if LANG_CXX11
void OpenAppInfo::set_appstoreurl(::std::string&& value) {
  set_has_appstoreurl();
  appstoreurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.OpenAppInfo.AppStoreUrl)
}
#endif
void OpenAppInfo::set_appstoreurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appstoreurl();
  appstoreurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.OpenAppInfo.AppStoreUrl)
}
void OpenAppInfo::set_appstoreurl(const char* value, size_t size) {
  set_has_appstoreurl();
  appstoreurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.OpenAppInfo.AppStoreUrl)
}
::std::string* OpenAppInfo::mutable_appstoreurl() {
  set_has_appstoreurl();
  // @@protoc_insertion_point(field_mutable:micromsg.OpenAppInfo.AppStoreUrl)
  return appstoreurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpenAppInfo::release_appstoreurl() {
  // @@protoc_insertion_point(field_release:micromsg.OpenAppInfo.AppStoreUrl)
  clear_has_appstoreurl();
  return appstoreurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpenAppInfo::set_allocated_appstoreurl(::std::string* appstoreurl) {
  if (appstoreurl != NULL) {
    set_has_appstoreurl();
  } else {
    clear_has_appstoreurl();
  }
  appstoreurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appstoreurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.OpenAppInfo.AppStoreUrl)
}

// required uint32 AppVersion = 6;
bool OpenAppInfo::has_appversion() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void OpenAppInfo::set_has_appversion() {
  _has_bits_[0] |= 0x00001000u;
}
void OpenAppInfo::clear_has_appversion() {
  _has_bits_[0] &= ~0x00001000u;
}
void OpenAppInfo::clear_appversion() {
  appversion_ = 0u;
  clear_has_appversion();
}
::google::protobuf::uint32 OpenAppInfo::appversion() const {
  // @@protoc_insertion_point(field_get:micromsg.OpenAppInfo.AppVersion)
  return appversion_;
}
void OpenAppInfo::set_appversion(::google::protobuf::uint32 value) {
  set_has_appversion();
  appversion_ = value;
  // @@protoc_insertion_point(field_set:micromsg.OpenAppInfo.AppVersion)
}

// optional string AppWatermarkUrl = 7;
bool OpenAppInfo::has_appwatermarkurl() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void OpenAppInfo::set_has_appwatermarkurl() {
  _has_bits_[0] |= 0x00000020u;
}
void OpenAppInfo::clear_has_appwatermarkurl() {
  _has_bits_[0] &= ~0x00000020u;
}
void OpenAppInfo::clear_appwatermarkurl() {
  appwatermarkurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appwatermarkurl();
}
const ::std::string& OpenAppInfo::appwatermarkurl() const {
  // @@protoc_insertion_point(field_get:micromsg.OpenAppInfo.AppWatermarkUrl)
  return appwatermarkurl_.GetNoArena();
}
void OpenAppInfo::set_appwatermarkurl(const ::std::string& value) {
  set_has_appwatermarkurl();
  appwatermarkurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.OpenAppInfo.AppWatermarkUrl)
}
#if LANG_CXX11
void OpenAppInfo::set_appwatermarkurl(::std::string&& value) {
  set_has_appwatermarkurl();
  appwatermarkurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.OpenAppInfo.AppWatermarkUrl)
}
#endif
void OpenAppInfo::set_appwatermarkurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appwatermarkurl();
  appwatermarkurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.OpenAppInfo.AppWatermarkUrl)
}
void OpenAppInfo::set_appwatermarkurl(const char* value, size_t size) {
  set_has_appwatermarkurl();
  appwatermarkurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.OpenAppInfo.AppWatermarkUrl)
}
::std::string* OpenAppInfo::mutable_appwatermarkurl() {
  set_has_appwatermarkurl();
  // @@protoc_insertion_point(field_mutable:micromsg.OpenAppInfo.AppWatermarkUrl)
  return appwatermarkurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpenAppInfo::release_appwatermarkurl() {
  // @@protoc_insertion_point(field_release:micromsg.OpenAppInfo.AppWatermarkUrl)
  clear_has_appwatermarkurl();
  return appwatermarkurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpenAppInfo::set_allocated_appwatermarkurl(::std::string* appwatermarkurl) {
  if (appwatermarkurl != NULL) {
    set_has_appwatermarkurl();
  } else {
    clear_has_appwatermarkurl();
  }
  appwatermarkurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appwatermarkurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.OpenAppInfo.AppWatermarkUrl)
}

// optional string AndroidPackageName = 8;
bool OpenAppInfo::has_androidpackagename() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void OpenAppInfo::set_has_androidpackagename() {
  _has_bits_[0] |= 0x00000040u;
}
void OpenAppInfo::clear_has_androidpackagename() {
  _has_bits_[0] &= ~0x00000040u;
}
void OpenAppInfo::clear_androidpackagename() {
  androidpackagename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_androidpackagename();
}
const ::std::string& OpenAppInfo::androidpackagename() const {
  // @@protoc_insertion_point(field_get:micromsg.OpenAppInfo.AndroidPackageName)
  return androidpackagename_.GetNoArena();
}
void OpenAppInfo::set_androidpackagename(const ::std::string& value) {
  set_has_androidpackagename();
  androidpackagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.OpenAppInfo.AndroidPackageName)
}
#if LANG_CXX11
void OpenAppInfo::set_androidpackagename(::std::string&& value) {
  set_has_androidpackagename();
  androidpackagename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.OpenAppInfo.AndroidPackageName)
}
#endif
void OpenAppInfo::set_androidpackagename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_androidpackagename();
  androidpackagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.OpenAppInfo.AndroidPackageName)
}
void OpenAppInfo::set_androidpackagename(const char* value, size_t size) {
  set_has_androidpackagename();
  androidpackagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.OpenAppInfo.AndroidPackageName)
}
::std::string* OpenAppInfo::mutable_androidpackagename() {
  set_has_androidpackagename();
  // @@protoc_insertion_point(field_mutable:micromsg.OpenAppInfo.AndroidPackageName)
  return androidpackagename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpenAppInfo::release_androidpackagename() {
  // @@protoc_insertion_point(field_release:micromsg.OpenAppInfo.AndroidPackageName)
  clear_has_androidpackagename();
  return androidpackagename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpenAppInfo::set_allocated_androidpackagename(::std::string* androidpackagename) {
  if (androidpackagename != NULL) {
    set_has_androidpackagename();
  } else {
    clear_has_androidpackagename();
  }
  androidpackagename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), androidpackagename);
  // @@protoc_insertion_point(field_set_allocated:micromsg.OpenAppInfo.AndroidPackageName)
}

// optional string AndroidSignature = 9;
bool OpenAppInfo::has_androidsignature() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void OpenAppInfo::set_has_androidsignature() {
  _has_bits_[0] |= 0x00000080u;
}
void OpenAppInfo::clear_has_androidsignature() {
  _has_bits_[0] &= ~0x00000080u;
}
void OpenAppInfo::clear_androidsignature() {
  androidsignature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_androidsignature();
}
const ::std::string& OpenAppInfo::androidsignature() const {
  // @@protoc_insertion_point(field_get:micromsg.OpenAppInfo.AndroidSignature)
  return androidsignature_.GetNoArena();
}
void OpenAppInfo::set_androidsignature(const ::std::string& value) {
  set_has_androidsignature();
  androidsignature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.OpenAppInfo.AndroidSignature)
}
#if LANG_CXX11
void OpenAppInfo::set_androidsignature(::std::string&& value) {
  set_has_androidsignature();
  androidsignature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.OpenAppInfo.AndroidSignature)
}
#endif
void OpenAppInfo::set_androidsignature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_androidsignature();
  androidsignature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.OpenAppInfo.AndroidSignature)
}
void OpenAppInfo::set_androidsignature(const char* value, size_t size) {
  set_has_androidsignature();
  androidsignature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.OpenAppInfo.AndroidSignature)
}
::std::string* OpenAppInfo::mutable_androidsignature() {
  set_has_androidsignature();
  // @@protoc_insertion_point(field_mutable:micromsg.OpenAppInfo.AndroidSignature)
  return androidsignature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpenAppInfo::release_androidsignature() {
  // @@protoc_insertion_point(field_release:micromsg.OpenAppInfo.AndroidSignature)
  clear_has_androidsignature();
  return androidsignature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpenAppInfo::set_allocated_androidsignature(::std::string* androidsignature) {
  if (androidsignature != NULL) {
    set_has_androidsignature();
  } else {
    clear_has_androidsignature();
  }
  androidsignature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), androidsignature);
  // @@protoc_insertion_point(field_set_allocated:micromsg.OpenAppInfo.AndroidSignature)
}

// optional string AppName4EnUS = 10;
bool OpenAppInfo::has_appname4enus() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void OpenAppInfo::set_has_appname4enus() {
  _has_bits_[0] |= 0x00000100u;
}
void OpenAppInfo::clear_has_appname4enus() {
  _has_bits_[0] &= ~0x00000100u;
}
void OpenAppInfo::clear_appname4enus() {
  appname4enus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appname4enus();
}
const ::std::string& OpenAppInfo::appname4enus() const {
  // @@protoc_insertion_point(field_get:micromsg.OpenAppInfo.AppName4EnUS)
  return appname4enus_.GetNoArena();
}
void OpenAppInfo::set_appname4enus(const ::std::string& value) {
  set_has_appname4enus();
  appname4enus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.OpenAppInfo.AppName4EnUS)
}
#if LANG_CXX11
void OpenAppInfo::set_appname4enus(::std::string&& value) {
  set_has_appname4enus();
  appname4enus_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.OpenAppInfo.AppName4EnUS)
}
#endif
void OpenAppInfo::set_appname4enus(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appname4enus();
  appname4enus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.OpenAppInfo.AppName4EnUS)
}
void OpenAppInfo::set_appname4enus(const char* value, size_t size) {
  set_has_appname4enus();
  appname4enus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.OpenAppInfo.AppName4EnUS)
}
::std::string* OpenAppInfo::mutable_appname4enus() {
  set_has_appname4enus();
  // @@protoc_insertion_point(field_mutable:micromsg.OpenAppInfo.AppName4EnUS)
  return appname4enus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpenAppInfo::release_appname4enus() {
  // @@protoc_insertion_point(field_release:micromsg.OpenAppInfo.AppName4EnUS)
  clear_has_appname4enus();
  return appname4enus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpenAppInfo::set_allocated_appname4enus(::std::string* appname4enus) {
  if (appname4enus != NULL) {
    set_has_appname4enus();
  } else {
    clear_has_appname4enus();
  }
  appname4enus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appname4enus);
  // @@protoc_insertion_point(field_set_allocated:micromsg.OpenAppInfo.AppName4EnUS)
}

// optional string AppDescription4EnUS = 11;
bool OpenAppInfo::has_appdescription4enus() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void OpenAppInfo::set_has_appdescription4enus() {
  _has_bits_[0] |= 0x00000200u;
}
void OpenAppInfo::clear_has_appdescription4enus() {
  _has_bits_[0] &= ~0x00000200u;
}
void OpenAppInfo::clear_appdescription4enus() {
  appdescription4enus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appdescription4enus();
}
const ::std::string& OpenAppInfo::appdescription4enus() const {
  // @@protoc_insertion_point(field_get:micromsg.OpenAppInfo.AppDescription4EnUS)
  return appdescription4enus_.GetNoArena();
}
void OpenAppInfo::set_appdescription4enus(const ::std::string& value) {
  set_has_appdescription4enus();
  appdescription4enus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.OpenAppInfo.AppDescription4EnUS)
}
#if LANG_CXX11
void OpenAppInfo::set_appdescription4enus(::std::string&& value) {
  set_has_appdescription4enus();
  appdescription4enus_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.OpenAppInfo.AppDescription4EnUS)
}
#endif
void OpenAppInfo::set_appdescription4enus(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appdescription4enus();
  appdescription4enus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.OpenAppInfo.AppDescription4EnUS)
}
void OpenAppInfo::set_appdescription4enus(const char* value, size_t size) {
  set_has_appdescription4enus();
  appdescription4enus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.OpenAppInfo.AppDescription4EnUS)
}
::std::string* OpenAppInfo::mutable_appdescription4enus() {
  set_has_appdescription4enus();
  // @@protoc_insertion_point(field_mutable:micromsg.OpenAppInfo.AppDescription4EnUS)
  return appdescription4enus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpenAppInfo::release_appdescription4enus() {
  // @@protoc_insertion_point(field_release:micromsg.OpenAppInfo.AppDescription4EnUS)
  clear_has_appdescription4enus();
  return appdescription4enus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpenAppInfo::set_allocated_appdescription4enus(::std::string* appdescription4enus) {
  if (appdescription4enus != NULL) {
    set_has_appdescription4enus();
  } else {
    clear_has_appdescription4enus();
  }
  appdescription4enus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appdescription4enus);
  // @@protoc_insertion_point(field_set_allocated:micromsg.OpenAppInfo.AppDescription4EnUS)
}

// optional string AppName4ZhTW = 12;
bool OpenAppInfo::has_appname4zhtw() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void OpenAppInfo::set_has_appname4zhtw() {
  _has_bits_[0] |= 0x00000400u;
}
void OpenAppInfo::clear_has_appname4zhtw() {
  _has_bits_[0] &= ~0x00000400u;
}
void OpenAppInfo::clear_appname4zhtw() {
  appname4zhtw_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appname4zhtw();
}
const ::std::string& OpenAppInfo::appname4zhtw() const {
  // @@protoc_insertion_point(field_get:micromsg.OpenAppInfo.AppName4ZhTW)
  return appname4zhtw_.GetNoArena();
}
void OpenAppInfo::set_appname4zhtw(const ::std::string& value) {
  set_has_appname4zhtw();
  appname4zhtw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.OpenAppInfo.AppName4ZhTW)
}
#if LANG_CXX11
void OpenAppInfo::set_appname4zhtw(::std::string&& value) {
  set_has_appname4zhtw();
  appname4zhtw_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.OpenAppInfo.AppName4ZhTW)
}
#endif
void OpenAppInfo::set_appname4zhtw(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appname4zhtw();
  appname4zhtw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.OpenAppInfo.AppName4ZhTW)
}
void OpenAppInfo::set_appname4zhtw(const char* value, size_t size) {
  set_has_appname4zhtw();
  appname4zhtw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.OpenAppInfo.AppName4ZhTW)
}
::std::string* OpenAppInfo::mutable_appname4zhtw() {
  set_has_appname4zhtw();
  // @@protoc_insertion_point(field_mutable:micromsg.OpenAppInfo.AppName4ZhTW)
  return appname4zhtw_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpenAppInfo::release_appname4zhtw() {
  // @@protoc_insertion_point(field_release:micromsg.OpenAppInfo.AppName4ZhTW)
  clear_has_appname4zhtw();
  return appname4zhtw_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpenAppInfo::set_allocated_appname4zhtw(::std::string* appname4zhtw) {
  if (appname4zhtw != NULL) {
    set_has_appname4zhtw();
  } else {
    clear_has_appname4zhtw();
  }
  appname4zhtw_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appname4zhtw);
  // @@protoc_insertion_point(field_set_allocated:micromsg.OpenAppInfo.AppName4ZhTW)
}

// optional string AppDescription4ZhTW = 13;
bool OpenAppInfo::has_appdescription4zhtw() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void OpenAppInfo::set_has_appdescription4zhtw() {
  _has_bits_[0] |= 0x00000800u;
}
void OpenAppInfo::clear_has_appdescription4zhtw() {
  _has_bits_[0] &= ~0x00000800u;
}
void OpenAppInfo::clear_appdescription4zhtw() {
  appdescription4zhtw_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appdescription4zhtw();
}
const ::std::string& OpenAppInfo::appdescription4zhtw() const {
  // @@protoc_insertion_point(field_get:micromsg.OpenAppInfo.AppDescription4ZhTW)
  return appdescription4zhtw_.GetNoArena();
}
void OpenAppInfo::set_appdescription4zhtw(const ::std::string& value) {
  set_has_appdescription4zhtw();
  appdescription4zhtw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.OpenAppInfo.AppDescription4ZhTW)
}
#if LANG_CXX11
void OpenAppInfo::set_appdescription4zhtw(::std::string&& value) {
  set_has_appdescription4zhtw();
  appdescription4zhtw_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.OpenAppInfo.AppDescription4ZhTW)
}
#endif
void OpenAppInfo::set_appdescription4zhtw(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appdescription4zhtw();
  appdescription4zhtw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.OpenAppInfo.AppDescription4ZhTW)
}
void OpenAppInfo::set_appdescription4zhtw(const char* value, size_t size) {
  set_has_appdescription4zhtw();
  appdescription4zhtw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.OpenAppInfo.AppDescription4ZhTW)
}
::std::string* OpenAppInfo::mutable_appdescription4zhtw() {
  set_has_appdescription4zhtw();
  // @@protoc_insertion_point(field_mutable:micromsg.OpenAppInfo.AppDescription4ZhTW)
  return appdescription4zhtw_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OpenAppInfo::release_appdescription4zhtw() {
  // @@protoc_insertion_point(field_release:micromsg.OpenAppInfo.AppDescription4ZhTW)
  clear_has_appdescription4zhtw();
  return appdescription4zhtw_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OpenAppInfo::set_allocated_appdescription4zhtw(::std::string* appdescription4zhtw) {
  if (appdescription4zhtw != NULL) {
    set_has_appdescription4zhtw();
  } else {
    clear_has_appdescription4zhtw();
  }
  appdescription4zhtw_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appdescription4zhtw);
  // @@protoc_insertion_point(field_set_allocated:micromsg.OpenAppInfo.AppDescription4ZhTW)
}

// optional uint32 AppInfoFlag = 14;
bool OpenAppInfo::has_appinfoflag() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void OpenAppInfo::set_has_appinfoflag() {
  _has_bits_[0] |= 0x00002000u;
}
void OpenAppInfo::clear_has_appinfoflag() {
  _has_bits_[0] &= ~0x00002000u;
}
void OpenAppInfo::clear_appinfoflag() {
  appinfoflag_ = 0u;
  clear_has_appinfoflag();
}
::google::protobuf::uint32 OpenAppInfo::appinfoflag() const {
  // @@protoc_insertion_point(field_get:micromsg.OpenAppInfo.AppInfoFlag)
  return appinfoflag_;
}
void OpenAppInfo::set_appinfoflag(::google::protobuf::uint32 value) {
  set_has_appinfoflag();
  appinfoflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.OpenAppInfo.AppInfoFlag)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAppInfoRequest::kBaseRequestFieldNumber;
const int GetAppInfoRequest::kAppIDFieldNumber;
const int GetAppInfoRequest::kIconTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAppInfoRequest::GetAppInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmappmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetAppInfoRequest)
}
GetAppInfoRequest::GetAppInfoRequest(const GetAppInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appid()) {
    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  icontype_ = from.icontype_;
  // @@protoc_insertion_point(copy_constructor:micromsg.GetAppInfoRequest)
}

void GetAppInfoRequest::SharedCtor() {
  _cached_size_ = 0;
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&icontype_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(icontype_));
}

GetAppInfoRequest::~GetAppInfoRequest() {
  // @@protoc_insertion_point(destructor:micromsg.GetAppInfoRequest)
  SharedDtor();
}

void GetAppInfoRequest::SharedDtor() {
  appid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void GetAppInfoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAppInfoRequest::descriptor() {
  protobuf_mmappmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmappmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAppInfoRequest& GetAppInfoRequest::default_instance() {
  protobuf_mmappmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetAppInfoRequest* GetAppInfoRequest::New(::google::protobuf::Arena* arena) const {
  GetAppInfoRequest* n = new GetAppInfoRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAppInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetAppInfoRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_appid()) {
      GOOGLE_DCHECK(!appid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appid_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  icontype_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetAppInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetAppInfoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appid().data(), this->appid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetAppInfoRequest.AppID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 IconType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_icontype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &icontype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetAppInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetAppInfoRequest)
  return false;
#undef DO_
}

void GetAppInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetAppInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // optional string AppID = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetAppInfoRequest.AppID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appid(), output);
  }

  // required uint32 IconType = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->icontype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetAppInfoRequest)
}

::google::protobuf::uint8* GetAppInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetAppInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // optional string AppID = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetAppInfoRequest.AppID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appid(), target);
  }

  // required uint32 IconType = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->icontype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetAppInfoRequest)
  return target;
}

size_t GetAppInfoRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetAppInfoRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_icontype()) {
    // required uint32 IconType = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->icontype());
  }

  return total_size;
}
size_t GetAppInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetAppInfoRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required uint32 IconType = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->icontype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string AppID = 2;
  if (has_appid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAppInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetAppInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAppInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAppInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetAppInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetAppInfoRequest)
    MergeFrom(*source);
  }
}

void GetAppInfoRequest::MergeFrom(const GetAppInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetAppInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_appid();
      appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000004u) {
      icontype_ = from.icontype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetAppInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetAppInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAppInfoRequest::CopyFrom(const GetAppInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetAppInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAppInfoRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void GetAppInfoRequest::Swap(GetAppInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAppInfoRequest::InternalSwap(GetAppInfoRequest* other) {
  appid_.Swap(&other->appid_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(icontype_, other->icontype_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAppInfoRequest::GetMetadata() const {
  protobuf_mmappmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmappmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetAppInfoRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool GetAppInfoRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetAppInfoRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
void GetAppInfoRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetAppInfoRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& GetAppInfoRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppInfoRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* GetAppInfoRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppInfoRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* GetAppInfoRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetAppInfoRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void GetAppInfoRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAppInfoRequest.BaseRequest)
}

// optional string AppID = 2;
bool GetAppInfoRequest::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetAppInfoRequest::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
void GetAppInfoRequest::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetAppInfoRequest::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
const ::std::string& GetAppInfoRequest::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppInfoRequest.AppID)
  return appid_.GetNoArena();
}
void GetAppInfoRequest::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetAppInfoRequest.AppID)
}
#if LANG_CXX11
void GetAppInfoRequest::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetAppInfoRequest.AppID)
}
#endif
void GetAppInfoRequest::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetAppInfoRequest.AppID)
}
void GetAppInfoRequest::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetAppInfoRequest.AppID)
}
::std::string* GetAppInfoRequest::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppInfoRequest.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetAppInfoRequest::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.GetAppInfoRequest.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetAppInfoRequest::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAppInfoRequest.AppID)
}

// required uint32 IconType = 3;
bool GetAppInfoRequest::has_icontype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetAppInfoRequest::set_has_icontype() {
  _has_bits_[0] |= 0x00000004u;
}
void GetAppInfoRequest::clear_has_icontype() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetAppInfoRequest::clear_icontype() {
  icontype_ = 0u;
  clear_has_icontype();
}
::google::protobuf::uint32 GetAppInfoRequest::icontype() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppInfoRequest.IconType)
  return icontype_;
}
void GetAppInfoRequest::set_icontype(::google::protobuf::uint32 value) {
  set_has_icontype();
  icontype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetAppInfoRequest.IconType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAppInfoResponse::kBaseResponseFieldNumber;
const int GetAppInfoResponse::kAppInfoFieldNumber;
const int GetAppInfoResponse::kNoUseFieldNumber;
const int GetAppInfoResponse::kDevInfoFieldNumber;
const int GetAppInfoResponse::kAppTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAppInfoResponse::GetAppInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmappmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetAppInfoResponse)
}
GetAppInfoResponse::GetAppInfoResponse(const GetAppInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  devinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_devinfo()) {
    devinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devinfo_);
  }
  apptype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_apptype()) {
    apptype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apptype_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  if (from.has_appinfo()) {
    appinfo_ = new ::micromsg::OpenAppInfo(*from.appinfo_);
  } else {
    appinfo_ = NULL;
  }
  nouse_ = from.nouse_;
  // @@protoc_insertion_point(copy_constructor:micromsg.GetAppInfoResponse)
}

void GetAppInfoResponse::SharedCtor() {
  _cached_size_ = 0;
  devinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apptype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&nouse_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(nouse_));
}

GetAppInfoResponse::~GetAppInfoResponse() {
  // @@protoc_insertion_point(destructor:micromsg.GetAppInfoResponse)
  SharedDtor();
}

void GetAppInfoResponse::SharedDtor() {
  devinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apptype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
  if (this != internal_default_instance()) {
    delete appinfo_;
  }
}

void GetAppInfoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAppInfoResponse::descriptor() {
  protobuf_mmappmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmappmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAppInfoResponse& GetAppInfoResponse::default_instance() {
  protobuf_mmappmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetAppInfoResponse* GetAppInfoResponse::New(::google::protobuf::Arena* arena) const {
  GetAppInfoResponse* n = new GetAppInfoResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAppInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetAppInfoResponse)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_devinfo()) {
      GOOGLE_DCHECK(!devinfo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*devinfo_.UnsafeRawStringPointer())->clear();
    }
    if (has_apptype()) {
      GOOGLE_DCHECK(!apptype_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*apptype_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
    if (has_appinfo()) {
      GOOGLE_DCHECK(appinfo_ != NULL);
      appinfo_->::micromsg::OpenAppInfo::Clear();
    }
  }
  nouse_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetAppInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetAppInfoResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.OpenAppInfo AppInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_appinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 NoUse = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_nouse();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nouse_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string DevInfo = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->devinfo().data(), this->devinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetAppInfoResponse.DevInfo");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppType = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apptype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->apptype().data(), this->apptype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetAppInfoResponse.AppType");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetAppInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetAppInfoResponse)
  return false;
#undef DO_
}

void GetAppInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetAppInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // required .micromsg.OpenAppInfo AppInfo = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->appinfo_, output);
  }

  // optional uint32 NoUse = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->nouse(), output);
  }

  // optional string DevInfo = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->devinfo().data(), this->devinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetAppInfoResponse.DevInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->devinfo(), output);
  }

  // optional string AppType = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->apptype().data(), this->apptype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetAppInfoResponse.AppType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->apptype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetAppInfoResponse)
}

::google::protobuf::uint8* GetAppInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetAppInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // required .micromsg.OpenAppInfo AppInfo = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->appinfo_, deterministic, target);
  }

  // optional uint32 NoUse = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->nouse(), target);
  }

  // optional string DevInfo = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->devinfo().data(), this->devinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetAppInfoResponse.DevInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->devinfo(), target);
  }

  // optional string AppType = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->apptype().data(), this->apptype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetAppInfoResponse.AppType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->apptype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetAppInfoResponse)
  return target;
}

size_t GetAppInfoResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetAppInfoResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_appinfo()) {
    // required .micromsg.OpenAppInfo AppInfo = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->appinfo_);
  }

  return total_size;
}
size_t GetAppInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetAppInfoResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000c) ^ 0x0000000c) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required .micromsg.OpenAppInfo AppInfo = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->appinfo_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string DevInfo = 4;
    if (has_devinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->devinfo());
    }

    // optional string AppType = 5;
    if (has_apptype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->apptype());
    }

  }
  // optional uint32 NoUse = 3;
  if (has_nouse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nouse());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAppInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetAppInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAppInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAppInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetAppInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetAppInfoResponse)
    MergeFrom(*source);
  }
}

void GetAppInfoResponse::MergeFrom(const GetAppInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetAppInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_devinfo();
      devinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devinfo_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_apptype();
      apptype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apptype_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_appinfo()->::micromsg::OpenAppInfo::MergeFrom(from.appinfo());
    }
    if (cached_has_bits & 0x00000010u) {
      nouse_ = from.nouse_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetAppInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetAppInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAppInfoResponse::CopyFrom(const GetAppInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetAppInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAppInfoResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  if (has_appinfo()) {
    if (!this->appinfo_->IsInitialized()) return false;
  }
  return true;
}

void GetAppInfoResponse::Swap(GetAppInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAppInfoResponse::InternalSwap(GetAppInfoResponse* other) {
  devinfo_.Swap(&other->devinfo_);
  apptype_.Swap(&other->apptype_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(appinfo_, other->appinfo_);
  std::swap(nouse_, other->nouse_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAppInfoResponse::GetMetadata() const {
  protobuf_mmappmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmappmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetAppInfoResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool GetAppInfoResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetAppInfoResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000004u;
}
void GetAppInfoResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetAppInfoResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& GetAppInfoResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppInfoResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* GetAppInfoResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppInfoResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* GetAppInfoResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetAppInfoResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void GetAppInfoResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAppInfoResponse.BaseResponse)
}

// required .micromsg.OpenAppInfo AppInfo = 2;
bool GetAppInfoResponse::has_appinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GetAppInfoResponse::set_has_appinfo() {
  _has_bits_[0] |= 0x00000008u;
}
void GetAppInfoResponse::clear_has_appinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
void GetAppInfoResponse::clear_appinfo() {
  if (appinfo_ != NULL) appinfo_->::micromsg::OpenAppInfo::Clear();
  clear_has_appinfo();
}
const ::micromsg::OpenAppInfo& GetAppInfoResponse::appinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppInfoResponse.AppInfo)
  return appinfo_ != NULL ? *appinfo_
                         : *::micromsg::OpenAppInfo::internal_default_instance();
}
::micromsg::OpenAppInfo* GetAppInfoResponse::mutable_appinfo() {
  set_has_appinfo();
  if (appinfo_ == NULL) {
    appinfo_ = new ::micromsg::OpenAppInfo;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppInfoResponse.AppInfo)
  return appinfo_;
}
::micromsg::OpenAppInfo* GetAppInfoResponse::release_appinfo() {
  // @@protoc_insertion_point(field_release:micromsg.GetAppInfoResponse.AppInfo)
  clear_has_appinfo();
  ::micromsg::OpenAppInfo* temp = appinfo_;
  appinfo_ = NULL;
  return temp;
}
void GetAppInfoResponse::set_allocated_appinfo(::micromsg::OpenAppInfo* appinfo) {
  delete appinfo_;
  appinfo_ = appinfo;
  if (appinfo) {
    set_has_appinfo();
  } else {
    clear_has_appinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAppInfoResponse.AppInfo)
}

// optional uint32 NoUse = 3;
bool GetAppInfoResponse::has_nouse() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GetAppInfoResponse::set_has_nouse() {
  _has_bits_[0] |= 0x00000010u;
}
void GetAppInfoResponse::clear_has_nouse() {
  _has_bits_[0] &= ~0x00000010u;
}
void GetAppInfoResponse::clear_nouse() {
  nouse_ = 0u;
  clear_has_nouse();
}
::google::protobuf::uint32 GetAppInfoResponse::nouse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppInfoResponse.NoUse)
  return nouse_;
}
void GetAppInfoResponse::set_nouse(::google::protobuf::uint32 value) {
  set_has_nouse();
  nouse_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetAppInfoResponse.NoUse)
}

// optional string DevInfo = 4;
bool GetAppInfoResponse::has_devinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetAppInfoResponse::set_has_devinfo() {
  _has_bits_[0] |= 0x00000001u;
}
void GetAppInfoResponse::clear_has_devinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetAppInfoResponse::clear_devinfo() {
  devinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_devinfo();
}
const ::std::string& GetAppInfoResponse::devinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppInfoResponse.DevInfo)
  return devinfo_.GetNoArena();
}
void GetAppInfoResponse::set_devinfo(const ::std::string& value) {
  set_has_devinfo();
  devinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetAppInfoResponse.DevInfo)
}
#if LANG_CXX11
void GetAppInfoResponse::set_devinfo(::std::string&& value) {
  set_has_devinfo();
  devinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetAppInfoResponse.DevInfo)
}
#endif
void GetAppInfoResponse::set_devinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_devinfo();
  devinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetAppInfoResponse.DevInfo)
}
void GetAppInfoResponse::set_devinfo(const char* value, size_t size) {
  set_has_devinfo();
  devinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetAppInfoResponse.DevInfo)
}
::std::string* GetAppInfoResponse::mutable_devinfo() {
  set_has_devinfo();
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppInfoResponse.DevInfo)
  return devinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetAppInfoResponse::release_devinfo() {
  // @@protoc_insertion_point(field_release:micromsg.GetAppInfoResponse.DevInfo)
  clear_has_devinfo();
  return devinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetAppInfoResponse::set_allocated_devinfo(::std::string* devinfo) {
  if (devinfo != NULL) {
    set_has_devinfo();
  } else {
    clear_has_devinfo();
  }
  devinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devinfo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAppInfoResponse.DevInfo)
}

// optional string AppType = 5;
bool GetAppInfoResponse::has_apptype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetAppInfoResponse::set_has_apptype() {
  _has_bits_[0] |= 0x00000002u;
}
void GetAppInfoResponse::clear_has_apptype() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetAppInfoResponse::clear_apptype() {
  apptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_apptype();
}
const ::std::string& GetAppInfoResponse::apptype() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppInfoResponse.AppType)
  return apptype_.GetNoArena();
}
void GetAppInfoResponse::set_apptype(const ::std::string& value) {
  set_has_apptype();
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetAppInfoResponse.AppType)
}
#if LANG_CXX11
void GetAppInfoResponse::set_apptype(::std::string&& value) {
  set_has_apptype();
  apptype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetAppInfoResponse.AppType)
}
#endif
void GetAppInfoResponse::set_apptype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_apptype();
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetAppInfoResponse.AppType)
}
void GetAppInfoResponse::set_apptype(const char* value, size_t size) {
  set_has_apptype();
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetAppInfoResponse.AppType)
}
::std::string* GetAppInfoResponse::mutable_apptype() {
  set_has_apptype();
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppInfoResponse.AppType)
  return apptype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetAppInfoResponse::release_apptype() {
  // @@protoc_insertion_point(field_release:micromsg.GetAppInfoResponse.AppType)
  clear_has_apptype();
  return apptype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetAppInfoResponse::set_allocated_apptype(::std::string* apptype) {
  if (apptype != NULL) {
    set_has_apptype();
  } else {
    clear_has_apptype();
  }
  apptype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), apptype);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAppInfoResponse.AppType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRecommendAppListRequest::kBaseRequestFieldNumber;
const int GetRecommendAppListRequest::kStartFieldNumber;
const int GetRecommendAppListRequest::kCountFieldNumber;
const int GetRecommendAppListRequest::kInstalledListFieldNumber;
const int GetRecommendAppListRequest::kIconTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRecommendAppListRequest::GetRecommendAppListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmappmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetRecommendAppListRequest)
}
GetRecommendAppListRequest::GetRecommendAppListRequest(const GetRecommendAppListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  installedlist_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_installedlist()) {
    installedlist_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.installedlist_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  ::memcpy(&start_, &from.start_,
    reinterpret_cast<char*>(&icontype_) -
    reinterpret_cast<char*>(&start_) + sizeof(icontype_));
  // @@protoc_insertion_point(copy_constructor:micromsg.GetRecommendAppListRequest)
}

void GetRecommendAppListRequest::SharedCtor() {
  _cached_size_ = 0;
  installedlist_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&icontype_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(icontype_));
}

GetRecommendAppListRequest::~GetRecommendAppListRequest() {
  // @@protoc_insertion_point(destructor:micromsg.GetRecommendAppListRequest)
  SharedDtor();
}

void GetRecommendAppListRequest::SharedDtor() {
  installedlist_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void GetRecommendAppListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRecommendAppListRequest::descriptor() {
  protobuf_mmappmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmappmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetRecommendAppListRequest& GetRecommendAppListRequest::default_instance() {
  protobuf_mmappmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetRecommendAppListRequest* GetRecommendAppListRequest::New(::google::protobuf::Arena* arena) const {
  GetRecommendAppListRequest* n = new GetRecommendAppListRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetRecommendAppListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetRecommendAppListRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_installedlist()) {
      GOOGLE_DCHECK(!installedlist_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*installedlist_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 28u) {
    ::memset(&start_, 0, reinterpret_cast<char*>(&icontype_) -
      reinterpret_cast<char*>(&start_) + sizeof(icontype_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetRecommendAppListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetRecommendAppListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Start = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_start();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string InstalledList = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_installedlist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->installedlist().data(), this->installedlist().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetRecommendAppListRequest.InstalledList");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 IconType = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_icontype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &icontype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetRecommendAppListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetRecommendAppListRequest)
  return false;
#undef DO_
}

void GetRecommendAppListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetRecommendAppListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required uint32 Start = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->start(), output);
  }

  // required uint32 Count = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->count(), output);
  }

  // optional string InstalledList = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->installedlist().data(), this->installedlist().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetRecommendAppListRequest.InstalledList");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->installedlist(), output);
  }

  // required uint32 IconType = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->icontype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetRecommendAppListRequest)
}

::google::protobuf::uint8* GetRecommendAppListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetRecommendAppListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required uint32 Start = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->start(), target);
  }

  // required uint32 Count = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->count(), target);
  }

  // optional string InstalledList = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->installedlist().data(), this->installedlist().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetRecommendAppListRequest.InstalledList");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->installedlist(), target);
  }

  // required uint32 IconType = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->icontype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetRecommendAppListRequest)
  return target;
}

size_t GetRecommendAppListRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetRecommendAppListRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_start()) {
    // required uint32 Start = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->start());
  }

  if (has_count()) {
    // required uint32 Count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  if (has_icontype()) {
    // required uint32 IconType = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->icontype());
  }

  return total_size;
}
size_t GetRecommendAppListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetRecommendAppListRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001e) ^ 0x0000001e) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required uint32 Start = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->start());

    // required uint32 Count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());

    // required uint32 IconType = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->icontype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string InstalledList = 4;
  if (has_installedlist()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->installedlist());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetRecommendAppListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetRecommendAppListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRecommendAppListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRecommendAppListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetRecommendAppListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetRecommendAppListRequest)
    MergeFrom(*source);
  }
}

void GetRecommendAppListRequest::MergeFrom(const GetRecommendAppListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetRecommendAppListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_installedlist();
      installedlist_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.installedlist_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000004u) {
      start_ = from.start_;
    }
    if (cached_has_bits & 0x00000008u) {
      count_ = from.count_;
    }
    if (cached_has_bits & 0x00000010u) {
      icontype_ = from.icontype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetRecommendAppListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetRecommendAppListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRecommendAppListRequest::CopyFrom(const GetRecommendAppListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetRecommendAppListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRecommendAppListRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001e) != 0x0000001e) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void GetRecommendAppListRequest::Swap(GetRecommendAppListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRecommendAppListRequest::InternalSwap(GetRecommendAppListRequest* other) {
  installedlist_.Swap(&other->installedlist_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(start_, other->start_);
  std::swap(count_, other->count_);
  std::swap(icontype_, other->icontype_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetRecommendAppListRequest::GetMetadata() const {
  protobuf_mmappmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmappmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetRecommendAppListRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool GetRecommendAppListRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetRecommendAppListRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
void GetRecommendAppListRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetRecommendAppListRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& GetRecommendAppListRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetRecommendAppListRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* GetRecommendAppListRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetRecommendAppListRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* GetRecommendAppListRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetRecommendAppListRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void GetRecommendAppListRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetRecommendAppListRequest.BaseRequest)
}

// required uint32 Start = 2;
bool GetRecommendAppListRequest::has_start() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetRecommendAppListRequest::set_has_start() {
  _has_bits_[0] |= 0x00000004u;
}
void GetRecommendAppListRequest::clear_has_start() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetRecommendAppListRequest::clear_start() {
  start_ = 0u;
  clear_has_start();
}
::google::protobuf::uint32 GetRecommendAppListRequest::start() const {
  // @@protoc_insertion_point(field_get:micromsg.GetRecommendAppListRequest.Start)
  return start_;
}
void GetRecommendAppListRequest::set_start(::google::protobuf::uint32 value) {
  set_has_start();
  start_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetRecommendAppListRequest.Start)
}

// required uint32 Count = 3;
bool GetRecommendAppListRequest::has_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GetRecommendAppListRequest::set_has_count() {
  _has_bits_[0] |= 0x00000008u;
}
void GetRecommendAppListRequest::clear_has_count() {
  _has_bits_[0] &= ~0x00000008u;
}
void GetRecommendAppListRequest::clear_count() {
  count_ = 0u;
  clear_has_count();
}
::google::protobuf::uint32 GetRecommendAppListRequest::count() const {
  // @@protoc_insertion_point(field_get:micromsg.GetRecommendAppListRequest.Count)
  return count_;
}
void GetRecommendAppListRequest::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetRecommendAppListRequest.Count)
}

// optional string InstalledList = 4;
bool GetRecommendAppListRequest::has_installedlist() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetRecommendAppListRequest::set_has_installedlist() {
  _has_bits_[0] |= 0x00000001u;
}
void GetRecommendAppListRequest::clear_has_installedlist() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetRecommendAppListRequest::clear_installedlist() {
  installedlist_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_installedlist();
}
const ::std::string& GetRecommendAppListRequest::installedlist() const {
  // @@protoc_insertion_point(field_get:micromsg.GetRecommendAppListRequest.InstalledList)
  return installedlist_.GetNoArena();
}
void GetRecommendAppListRequest::set_installedlist(const ::std::string& value) {
  set_has_installedlist();
  installedlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetRecommendAppListRequest.InstalledList)
}
#if LANG_CXX11
void GetRecommendAppListRequest::set_installedlist(::std::string&& value) {
  set_has_installedlist();
  installedlist_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetRecommendAppListRequest.InstalledList)
}
#endif
void GetRecommendAppListRequest::set_installedlist(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_installedlist();
  installedlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetRecommendAppListRequest.InstalledList)
}
void GetRecommendAppListRequest::set_installedlist(const char* value, size_t size) {
  set_has_installedlist();
  installedlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetRecommendAppListRequest.InstalledList)
}
::std::string* GetRecommendAppListRequest::mutable_installedlist() {
  set_has_installedlist();
  // @@protoc_insertion_point(field_mutable:micromsg.GetRecommendAppListRequest.InstalledList)
  return installedlist_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetRecommendAppListRequest::release_installedlist() {
  // @@protoc_insertion_point(field_release:micromsg.GetRecommendAppListRequest.InstalledList)
  clear_has_installedlist();
  return installedlist_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetRecommendAppListRequest::set_allocated_installedlist(::std::string* installedlist) {
  if (installedlist != NULL) {
    set_has_installedlist();
  } else {
    clear_has_installedlist();
  }
  installedlist_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), installedlist);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetRecommendAppListRequest.InstalledList)
}

// required uint32 IconType = 5;
bool GetRecommendAppListRequest::has_icontype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GetRecommendAppListRequest::set_has_icontype() {
  _has_bits_[0] |= 0x00000010u;
}
void GetRecommendAppListRequest::clear_has_icontype() {
  _has_bits_[0] &= ~0x00000010u;
}
void GetRecommendAppListRequest::clear_icontype() {
  icontype_ = 0u;
  clear_has_icontype();
}
::google::protobuf::uint32 GetRecommendAppListRequest::icontype() const {
  // @@protoc_insertion_point(field_get:micromsg.GetRecommendAppListRequest.IconType)
  return icontype_;
}
void GetRecommendAppListRequest::set_icontype(::google::protobuf::uint32 value) {
  set_has_icontype();
  icontype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetRecommendAppListRequest.IconType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRecommendAppListResponse::kTotalFieldNumber;
const int GetRecommendAppListResponse::kBaseResponseFieldNumber;
const int GetRecommendAppListResponse::kCountFieldNumber;
const int GetRecommendAppListResponse::kAppListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRecommendAppListResponse::GetRecommendAppListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmappmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetRecommendAppListResponse)
}
GetRecommendAppListResponse::GetRecommendAppListResponse(const GetRecommendAppListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      applist_(from.applist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  ::memcpy(&total_, &from.total_,
    reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&total_) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:micromsg.GetRecommendAppListResponse)
}

void GetRecommendAppListResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(count_));
}

GetRecommendAppListResponse::~GetRecommendAppListResponse() {
  // @@protoc_insertion_point(destructor:micromsg.GetRecommendAppListResponse)
  SharedDtor();
}

void GetRecommendAppListResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void GetRecommendAppListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRecommendAppListResponse::descriptor() {
  protobuf_mmappmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmappmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetRecommendAppListResponse& GetRecommendAppListResponse::default_instance() {
  protobuf_mmappmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetRecommendAppListResponse* GetRecommendAppListResponse::New(::google::protobuf::Arena* arena) const {
  GetRecommendAppListResponse* n = new GetRecommendAppListResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetRecommendAppListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetRecommendAppListResponse)
  applist_.Clear();
  if (has_baseresponse()) {
    GOOGLE_DCHECK(baseresponse_ != NULL);
    baseresponse_->::micromsg::BaseResponse::Clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&total_, 0, reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&total_) + sizeof(count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetRecommendAppListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetRecommendAppListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 Total = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_total();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.BaseResponse BaseResponse = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.OpenAppInfo AppList = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_applist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetRecommendAppListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetRecommendAppListResponse)
  return false;
#undef DO_
}

void GetRecommendAppListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetRecommendAppListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 Total = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->total(), output);
  }

  // required .micromsg.BaseResponse BaseResponse = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->baseresponse_, output);
  }

  // required uint32 Count = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->count(), output);
  }

  // repeated .micromsg.OpenAppInfo AppList = 4;
  for (unsigned int i = 0, n = this->applist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->applist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetRecommendAppListResponse)
}

::google::protobuf::uint8* GetRecommendAppListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetRecommendAppListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 Total = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->total(), target);
  }

  // required .micromsg.BaseResponse BaseResponse = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->baseresponse_, deterministic, target);
  }

  // required uint32 Count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->count(), target);
  }

  // repeated .micromsg.OpenAppInfo AppList = 4;
  for (unsigned int i = 0, n = this->applist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->applist(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetRecommendAppListResponse)
  return target;
}

size_t GetRecommendAppListResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetRecommendAppListResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_total()) {
    // required uint32 Total = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->total());
  }

  if (has_count()) {
    // required uint32 Count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  return total_size;
}
size_t GetRecommendAppListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetRecommendAppListResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required uint32 Total = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->total());

    // required uint32 Count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.OpenAppInfo AppList = 4;
  {
    unsigned int count = this->applist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->applist(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetRecommendAppListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetRecommendAppListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRecommendAppListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRecommendAppListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetRecommendAppListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetRecommendAppListResponse)
    MergeFrom(*source);
  }
}

void GetRecommendAppListResponse::MergeFrom(const GetRecommendAppListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetRecommendAppListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  applist_.MergeFrom(from.applist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000002u) {
      total_ = from.total_;
    }
    if (cached_has_bits & 0x00000004u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetRecommendAppListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetRecommendAppListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRecommendAppListResponse::CopyFrom(const GetRecommendAppListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetRecommendAppListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRecommendAppListResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->applist())) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void GetRecommendAppListResponse::Swap(GetRecommendAppListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRecommendAppListResponse::InternalSwap(GetRecommendAppListResponse* other) {
  applist_.InternalSwap(&other->applist_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(total_, other->total_);
  std::swap(count_, other->count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetRecommendAppListResponse::GetMetadata() const {
  protobuf_mmappmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmappmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetRecommendAppListResponse

// required uint32 Total = 1;
bool GetRecommendAppListResponse::has_total() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetRecommendAppListResponse::set_has_total() {
  _has_bits_[0] |= 0x00000002u;
}
void GetRecommendAppListResponse::clear_has_total() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetRecommendAppListResponse::clear_total() {
  total_ = 0u;
  clear_has_total();
}
::google::protobuf::uint32 GetRecommendAppListResponse::total() const {
  // @@protoc_insertion_point(field_get:micromsg.GetRecommendAppListResponse.Total)
  return total_;
}
void GetRecommendAppListResponse::set_total(::google::protobuf::uint32 value) {
  set_has_total();
  total_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetRecommendAppListResponse.Total)
}

// required .micromsg.BaseResponse BaseResponse = 2;
bool GetRecommendAppListResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetRecommendAppListResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
void GetRecommendAppListResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetRecommendAppListResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& GetRecommendAppListResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetRecommendAppListResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* GetRecommendAppListResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetRecommendAppListResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* GetRecommendAppListResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetRecommendAppListResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void GetRecommendAppListResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetRecommendAppListResponse.BaseResponse)
}

// required uint32 Count = 3;
bool GetRecommendAppListResponse::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetRecommendAppListResponse::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
void GetRecommendAppListResponse::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetRecommendAppListResponse::clear_count() {
  count_ = 0u;
  clear_has_count();
}
::google::protobuf::uint32 GetRecommendAppListResponse::count() const {
  // @@protoc_insertion_point(field_get:micromsg.GetRecommendAppListResponse.Count)
  return count_;
}
void GetRecommendAppListResponse::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetRecommendAppListResponse.Count)
}

// repeated .micromsg.OpenAppInfo AppList = 4;
int GetRecommendAppListResponse::applist_size() const {
  return applist_.size();
}
void GetRecommendAppListResponse::clear_applist() {
  applist_.Clear();
}
const ::micromsg::OpenAppInfo& GetRecommendAppListResponse::applist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetRecommendAppListResponse.AppList)
  return applist_.Get(index);
}
::micromsg::OpenAppInfo* GetRecommendAppListResponse::mutable_applist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetRecommendAppListResponse.AppList)
  return applist_.Mutable(index);
}
::micromsg::OpenAppInfo* GetRecommendAppListResponse::add_applist() {
  // @@protoc_insertion_point(field_add:micromsg.GetRecommendAppListResponse.AppList)
  return applist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::OpenAppInfo >*
GetRecommendAppListResponse::mutable_applist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetRecommendAppListResponse.AppList)
  return &applist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::OpenAppInfo >&
GetRecommendAppListResponse::applist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetRecommendAppListResponse.AppList)
  return applist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckPCWechatFileRequest::kFileNameFieldNumber;
const int CheckPCWechatFileRequest::kMD5FieldNumber;
const int CheckPCWechatFileRequest::kFileIdFieldNumber;
const int CheckPCWechatFileRequest::kAesKeyFieldNumber;
const int CheckPCWechatFileRequest::kFromUsernameFieldNumber;
const int CheckPCWechatFileRequest::kToUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckPCWechatFileRequest::CheckPCWechatFileRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmappmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.CheckPCWechatFileRequest)
}
CheckPCWechatFileRequest::CheckPCWechatFileRequest(const CheckPCWechatFileRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_md5()) {
    md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.md5_);
  }
  fileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_fileid()) {
    fileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fileid_);
  }
  aeskey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_aeskey()) {
    aeskey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.aeskey_);
  }
  fromusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_fromusername()) {
    fromusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fromusername_);
  }
  tousername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tousername()) {
    tousername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tousername_);
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.CheckPCWechatFileRequest)
}

void CheckPCWechatFileRequest::SharedCtor() {
  _cached_size_ = 0;
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fileid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  aeskey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fromusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tousername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CheckPCWechatFileRequest::~CheckPCWechatFileRequest() {
  // @@protoc_insertion_point(destructor:micromsg.CheckPCWechatFileRequest)
  SharedDtor();
}

void CheckPCWechatFileRequest::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fileid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  aeskey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fromusername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tousername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CheckPCWechatFileRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckPCWechatFileRequest::descriptor() {
  protobuf_mmappmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmappmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckPCWechatFileRequest& CheckPCWechatFileRequest::default_instance() {
  protobuf_mmappmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CheckPCWechatFileRequest* CheckPCWechatFileRequest::New(::google::protobuf::Arena* arena) const {
  CheckPCWechatFileRequest* n = new CheckPCWechatFileRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckPCWechatFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.CheckPCWechatFileRequest)
  if (_has_bits_[0 / 32] & 63u) {
    if (has_filename()) {
      GOOGLE_DCHECK(!filename_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*filename_.UnsafeRawStringPointer())->clear();
    }
    if (has_md5()) {
      GOOGLE_DCHECK(!md5_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*md5_.UnsafeRawStringPointer())->clear();
    }
    if (has_fileid()) {
      GOOGLE_DCHECK(!fileid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*fileid_.UnsafeRawStringPointer())->clear();
    }
    if (has_aeskey()) {
      GOOGLE_DCHECK(!aeskey_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*aeskey_.UnsafeRawStringPointer())->clear();
    }
    if (has_fromusername()) {
      GOOGLE_DCHECK(!fromusername_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*fromusername_.UnsafeRawStringPointer())->clear();
    }
    if (has_tousername()) {
      GOOGLE_DCHECK(!tousername_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*tousername_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CheckPCWechatFileRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.CheckPCWechatFileRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string FileName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), this->filename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.CheckPCWechatFileRequest.FileName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string MD5 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_md5()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->md5().data(), this->md5().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.CheckPCWechatFileRequest.MD5");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string FileId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fileid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fileid().data(), this->fileid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.CheckPCWechatFileRequest.FileId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AesKey = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_aeskey()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->aeskey().data(), this->aeskey().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.CheckPCWechatFileRequest.AesKey");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string FromUsername = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fromusername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fromusername().data(), this->fromusername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.CheckPCWechatFileRequest.FromUsername");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ToUsername = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tousername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tousername().data(), this->tousername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.CheckPCWechatFileRequest.ToUsername");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.CheckPCWechatFileRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.CheckPCWechatFileRequest)
  return false;
#undef DO_
}

void CheckPCWechatFileRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.CheckPCWechatFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string FileName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CheckPCWechatFileRequest.FileName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // optional string MD5 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->md5().data(), this->md5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CheckPCWechatFileRequest.MD5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->md5(), output);
  }

  // optional string FileId = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fileid().data(), this->fileid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CheckPCWechatFileRequest.FileId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->fileid(), output);
  }

  // optional string AesKey = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->aeskey().data(), this->aeskey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CheckPCWechatFileRequest.AesKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->aeskey(), output);
  }

  // optional string FromUsername = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fromusername().data(), this->fromusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CheckPCWechatFileRequest.FromUsername");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->fromusername(), output);
  }

  // optional string ToUsername = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tousername().data(), this->tousername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CheckPCWechatFileRequest.ToUsername");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->tousername(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.CheckPCWechatFileRequest)
}

::google::protobuf::uint8* CheckPCWechatFileRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.CheckPCWechatFileRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string FileName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CheckPCWechatFileRequest.FileName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // optional string MD5 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->md5().data(), this->md5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CheckPCWechatFileRequest.MD5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->md5(), target);
  }

  // optional string FileId = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fileid().data(), this->fileid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CheckPCWechatFileRequest.FileId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->fileid(), target);
  }

  // optional string AesKey = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->aeskey().data(), this->aeskey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CheckPCWechatFileRequest.AesKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->aeskey(), target);
  }

  // optional string FromUsername = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fromusername().data(), this->fromusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CheckPCWechatFileRequest.FromUsername");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->fromusername(), target);
  }

  // optional string ToUsername = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tousername().data(), this->tousername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CheckPCWechatFileRequest.ToUsername");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->tousername(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.CheckPCWechatFileRequest)
  return target;
}

size_t CheckPCWechatFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.CheckPCWechatFileRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string FileName = 1;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional string MD5 = 2;
    if (has_md5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->md5());
    }

    // optional string FileId = 3;
    if (has_fileid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fileid());
    }

    // optional string AesKey = 4;
    if (has_aeskey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->aeskey());
    }

    // optional string FromUsername = 5;
    if (has_fromusername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fromusername());
    }

    // optional string ToUsername = 6;
    if (has_tousername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tousername());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckPCWechatFileRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.CheckPCWechatFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckPCWechatFileRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckPCWechatFileRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.CheckPCWechatFileRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.CheckPCWechatFileRequest)
    MergeFrom(*source);
  }
}

void CheckPCWechatFileRequest::MergeFrom(const CheckPCWechatFileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.CheckPCWechatFileRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_filename();
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_md5();
      md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.md5_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_fileid();
      fileid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fileid_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_aeskey();
      aeskey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.aeskey_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_fromusername();
      fromusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fromusername_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_tousername();
      tousername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tousername_);
    }
  }
}

void CheckPCWechatFileRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.CheckPCWechatFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckPCWechatFileRequest::CopyFrom(const CheckPCWechatFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.CheckPCWechatFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckPCWechatFileRequest::IsInitialized() const {
  return true;
}

void CheckPCWechatFileRequest::Swap(CheckPCWechatFileRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckPCWechatFileRequest::InternalSwap(CheckPCWechatFileRequest* other) {
  filename_.Swap(&other->filename_);
  md5_.Swap(&other->md5_);
  fileid_.Swap(&other->fileid_);
  aeskey_.Swap(&other->aeskey_);
  fromusername_.Swap(&other->fromusername_);
  tousername_.Swap(&other->tousername_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckPCWechatFileRequest::GetMetadata() const {
  protobuf_mmappmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmappmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckPCWechatFileRequest

// optional string FileName = 1;
bool CheckPCWechatFileRequest::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CheckPCWechatFileRequest::set_has_filename() {
  _has_bits_[0] |= 0x00000001u;
}
void CheckPCWechatFileRequest::clear_has_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
void CheckPCWechatFileRequest::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_filename();
}
const ::std::string& CheckPCWechatFileRequest::filename() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckPCWechatFileRequest.FileName)
  return filename_.GetNoArena();
}
void CheckPCWechatFileRequest::set_filename(const ::std::string& value) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckPCWechatFileRequest.FileName)
}
#if LANG_CXX11
void CheckPCWechatFileRequest::set_filename(::std::string&& value) {
  set_has_filename();
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckPCWechatFileRequest.FileName)
}
#endif
void CheckPCWechatFileRequest::set_filename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckPCWechatFileRequest.FileName)
}
void CheckPCWechatFileRequest::set_filename(const char* value, size_t size) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckPCWechatFileRequest.FileName)
}
::std::string* CheckPCWechatFileRequest::mutable_filename() {
  set_has_filename();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckPCWechatFileRequest.FileName)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckPCWechatFileRequest::release_filename() {
  // @@protoc_insertion_point(field_release:micromsg.CheckPCWechatFileRequest.FileName)
  clear_has_filename();
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckPCWechatFileRequest::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    set_has_filename();
  } else {
    clear_has_filename();
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckPCWechatFileRequest.FileName)
}

// optional string MD5 = 2;
bool CheckPCWechatFileRequest::has_md5() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CheckPCWechatFileRequest::set_has_md5() {
  _has_bits_[0] |= 0x00000002u;
}
void CheckPCWechatFileRequest::clear_has_md5() {
  _has_bits_[0] &= ~0x00000002u;
}
void CheckPCWechatFileRequest::clear_md5() {
  md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_md5();
}
const ::std::string& CheckPCWechatFileRequest::md5() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckPCWechatFileRequest.MD5)
  return md5_.GetNoArena();
}
void CheckPCWechatFileRequest::set_md5(const ::std::string& value) {
  set_has_md5();
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckPCWechatFileRequest.MD5)
}
#if LANG_CXX11
void CheckPCWechatFileRequest::set_md5(::std::string&& value) {
  set_has_md5();
  md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckPCWechatFileRequest.MD5)
}
#endif
void CheckPCWechatFileRequest::set_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_md5();
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckPCWechatFileRequest.MD5)
}
void CheckPCWechatFileRequest::set_md5(const char* value, size_t size) {
  set_has_md5();
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckPCWechatFileRequest.MD5)
}
::std::string* CheckPCWechatFileRequest::mutable_md5() {
  set_has_md5();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckPCWechatFileRequest.MD5)
  return md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckPCWechatFileRequest::release_md5() {
  // @@protoc_insertion_point(field_release:micromsg.CheckPCWechatFileRequest.MD5)
  clear_has_md5();
  return md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckPCWechatFileRequest::set_allocated_md5(::std::string* md5) {
  if (md5 != NULL) {
    set_has_md5();
  } else {
    clear_has_md5();
  }
  md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), md5);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckPCWechatFileRequest.MD5)
}

// optional string FileId = 3;
bool CheckPCWechatFileRequest::has_fileid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CheckPCWechatFileRequest::set_has_fileid() {
  _has_bits_[0] |= 0x00000004u;
}
void CheckPCWechatFileRequest::clear_has_fileid() {
  _has_bits_[0] &= ~0x00000004u;
}
void CheckPCWechatFileRequest::clear_fileid() {
  fileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fileid();
}
const ::std::string& CheckPCWechatFileRequest::fileid() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckPCWechatFileRequest.FileId)
  return fileid_.GetNoArena();
}
void CheckPCWechatFileRequest::set_fileid(const ::std::string& value) {
  set_has_fileid();
  fileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckPCWechatFileRequest.FileId)
}
#if LANG_CXX11
void CheckPCWechatFileRequest::set_fileid(::std::string&& value) {
  set_has_fileid();
  fileid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckPCWechatFileRequest.FileId)
}
#endif
void CheckPCWechatFileRequest::set_fileid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_fileid();
  fileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckPCWechatFileRequest.FileId)
}
void CheckPCWechatFileRequest::set_fileid(const char* value, size_t size) {
  set_has_fileid();
  fileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckPCWechatFileRequest.FileId)
}
::std::string* CheckPCWechatFileRequest::mutable_fileid() {
  set_has_fileid();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckPCWechatFileRequest.FileId)
  return fileid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckPCWechatFileRequest::release_fileid() {
  // @@protoc_insertion_point(field_release:micromsg.CheckPCWechatFileRequest.FileId)
  clear_has_fileid();
  return fileid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckPCWechatFileRequest::set_allocated_fileid(::std::string* fileid) {
  if (fileid != NULL) {
    set_has_fileid();
  } else {
    clear_has_fileid();
  }
  fileid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fileid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckPCWechatFileRequest.FileId)
}

// optional string AesKey = 4;
bool CheckPCWechatFileRequest::has_aeskey() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CheckPCWechatFileRequest::set_has_aeskey() {
  _has_bits_[0] |= 0x00000008u;
}
void CheckPCWechatFileRequest::clear_has_aeskey() {
  _has_bits_[0] &= ~0x00000008u;
}
void CheckPCWechatFileRequest::clear_aeskey() {
  aeskey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_aeskey();
}
const ::std::string& CheckPCWechatFileRequest::aeskey() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckPCWechatFileRequest.AesKey)
  return aeskey_.GetNoArena();
}
void CheckPCWechatFileRequest::set_aeskey(const ::std::string& value) {
  set_has_aeskey();
  aeskey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckPCWechatFileRequest.AesKey)
}
#if LANG_CXX11
void CheckPCWechatFileRequest::set_aeskey(::std::string&& value) {
  set_has_aeskey();
  aeskey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckPCWechatFileRequest.AesKey)
}
#endif
void CheckPCWechatFileRequest::set_aeskey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_aeskey();
  aeskey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckPCWechatFileRequest.AesKey)
}
void CheckPCWechatFileRequest::set_aeskey(const char* value, size_t size) {
  set_has_aeskey();
  aeskey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckPCWechatFileRequest.AesKey)
}
::std::string* CheckPCWechatFileRequest::mutable_aeskey() {
  set_has_aeskey();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckPCWechatFileRequest.AesKey)
  return aeskey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckPCWechatFileRequest::release_aeskey() {
  // @@protoc_insertion_point(field_release:micromsg.CheckPCWechatFileRequest.AesKey)
  clear_has_aeskey();
  return aeskey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckPCWechatFileRequest::set_allocated_aeskey(::std::string* aeskey) {
  if (aeskey != NULL) {
    set_has_aeskey();
  } else {
    clear_has_aeskey();
  }
  aeskey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), aeskey);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckPCWechatFileRequest.AesKey)
}

// optional string FromUsername = 5;
bool CheckPCWechatFileRequest::has_fromusername() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CheckPCWechatFileRequest::set_has_fromusername() {
  _has_bits_[0] |= 0x00000010u;
}
void CheckPCWechatFileRequest::clear_has_fromusername() {
  _has_bits_[0] &= ~0x00000010u;
}
void CheckPCWechatFileRequest::clear_fromusername() {
  fromusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fromusername();
}
const ::std::string& CheckPCWechatFileRequest::fromusername() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckPCWechatFileRequest.FromUsername)
  return fromusername_.GetNoArena();
}
void CheckPCWechatFileRequest::set_fromusername(const ::std::string& value) {
  set_has_fromusername();
  fromusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckPCWechatFileRequest.FromUsername)
}
#if LANG_CXX11
void CheckPCWechatFileRequest::set_fromusername(::std::string&& value) {
  set_has_fromusername();
  fromusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckPCWechatFileRequest.FromUsername)
}
#endif
void CheckPCWechatFileRequest::set_fromusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_fromusername();
  fromusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckPCWechatFileRequest.FromUsername)
}
void CheckPCWechatFileRequest::set_fromusername(const char* value, size_t size) {
  set_has_fromusername();
  fromusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckPCWechatFileRequest.FromUsername)
}
::std::string* CheckPCWechatFileRequest::mutable_fromusername() {
  set_has_fromusername();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckPCWechatFileRequest.FromUsername)
  return fromusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckPCWechatFileRequest::release_fromusername() {
  // @@protoc_insertion_point(field_release:micromsg.CheckPCWechatFileRequest.FromUsername)
  clear_has_fromusername();
  return fromusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckPCWechatFileRequest::set_allocated_fromusername(::std::string* fromusername) {
  if (fromusername != NULL) {
    set_has_fromusername();
  } else {
    clear_has_fromusername();
  }
  fromusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromusername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckPCWechatFileRequest.FromUsername)
}

// optional string ToUsername = 6;
bool CheckPCWechatFileRequest::has_tousername() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CheckPCWechatFileRequest::set_has_tousername() {
  _has_bits_[0] |= 0x00000020u;
}
void CheckPCWechatFileRequest::clear_has_tousername() {
  _has_bits_[0] &= ~0x00000020u;
}
void CheckPCWechatFileRequest::clear_tousername() {
  tousername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tousername();
}
const ::std::string& CheckPCWechatFileRequest::tousername() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckPCWechatFileRequest.ToUsername)
  return tousername_.GetNoArena();
}
void CheckPCWechatFileRequest::set_tousername(const ::std::string& value) {
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckPCWechatFileRequest.ToUsername)
}
#if LANG_CXX11
void CheckPCWechatFileRequest::set_tousername(::std::string&& value) {
  set_has_tousername();
  tousername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckPCWechatFileRequest.ToUsername)
}
#endif
void CheckPCWechatFileRequest::set_tousername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckPCWechatFileRequest.ToUsername)
}
void CheckPCWechatFileRequest::set_tousername(const char* value, size_t size) {
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckPCWechatFileRequest.ToUsername)
}
::std::string* CheckPCWechatFileRequest::mutable_tousername() {
  set_has_tousername();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckPCWechatFileRequest.ToUsername)
  return tousername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckPCWechatFileRequest::release_tousername() {
  // @@protoc_insertion_point(field_release:micromsg.CheckPCWechatFileRequest.ToUsername)
  clear_has_tousername();
  return tousername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckPCWechatFileRequest::set_allocated_tousername(::std::string* tousername) {
  if (tousername != NULL) {
    set_has_tousername();
  } else {
    clear_has_tousername();
  }
  tousername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tousername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckPCWechatFileRequest.ToUsername)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckPCWechatFileResponse::kBaseResponseFieldNumber;
const int CheckPCWechatFileResponse::kBlockStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckPCWechatFileResponse::CheckPCWechatFileResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmappmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.CheckPCWechatFileResponse)
}
CheckPCWechatFileResponse::CheckPCWechatFileResponse(const CheckPCWechatFileResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  blockstatus_ = from.blockstatus_;
  // @@protoc_insertion_point(copy_constructor:micromsg.CheckPCWechatFileResponse)
}

void CheckPCWechatFileResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&blockstatus_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(blockstatus_));
}

CheckPCWechatFileResponse::~CheckPCWechatFileResponse() {
  // @@protoc_insertion_point(destructor:micromsg.CheckPCWechatFileResponse)
  SharedDtor();
}

void CheckPCWechatFileResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void CheckPCWechatFileResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckPCWechatFileResponse::descriptor() {
  protobuf_mmappmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmappmsg_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckPCWechatFileResponse& CheckPCWechatFileResponse::default_instance() {
  protobuf_mmappmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

CheckPCWechatFileResponse* CheckPCWechatFileResponse::New(::google::protobuf::Arena* arena) const {
  CheckPCWechatFileResponse* n = new CheckPCWechatFileResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckPCWechatFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.CheckPCWechatFileResponse)
  if (has_baseresponse()) {
    GOOGLE_DCHECK(baseresponse_ != NULL);
    baseresponse_->::micromsg::BaseResponse::Clear();
  }
  blockstatus_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CheckPCWechatFileResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.CheckPCWechatFileResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 BlockStatus = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_blockstatus();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &blockstatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.CheckPCWechatFileResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.CheckPCWechatFileResponse)
  return false;
#undef DO_
}

void CheckPCWechatFileResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.CheckPCWechatFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // optional int32 BlockStatus = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->blockstatus(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.CheckPCWechatFileResponse)
}

::google::protobuf::uint8* CheckPCWechatFileResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.CheckPCWechatFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // optional int32 BlockStatus = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->blockstatus(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.CheckPCWechatFileResponse)
  return target;
}

size_t CheckPCWechatFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.CheckPCWechatFileResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (has_baseresponse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }
  // optional int32 BlockStatus = 2;
  if (has_blockstatus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->blockstatus());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckPCWechatFileResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.CheckPCWechatFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckPCWechatFileResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckPCWechatFileResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.CheckPCWechatFileResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.CheckPCWechatFileResponse)
    MergeFrom(*source);
  }
}

void CheckPCWechatFileResponse::MergeFrom(const CheckPCWechatFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.CheckPCWechatFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000002u) {
      blockstatus_ = from.blockstatus_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CheckPCWechatFileResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.CheckPCWechatFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckPCWechatFileResponse::CopyFrom(const CheckPCWechatFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.CheckPCWechatFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckPCWechatFileResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void CheckPCWechatFileResponse::Swap(CheckPCWechatFileResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckPCWechatFileResponse::InternalSwap(CheckPCWechatFileResponse* other) {
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(blockstatus_, other->blockstatus_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckPCWechatFileResponse::GetMetadata() const {
  protobuf_mmappmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmappmsg_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckPCWechatFileResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool CheckPCWechatFileResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CheckPCWechatFileResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
void CheckPCWechatFileResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
void CheckPCWechatFileResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& CheckPCWechatFileResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckPCWechatFileResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* CheckPCWechatFileResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.CheckPCWechatFileResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* CheckPCWechatFileResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.CheckPCWechatFileResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void CheckPCWechatFileResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckPCWechatFileResponse.BaseResponse)
}

// optional int32 BlockStatus = 2;
bool CheckPCWechatFileResponse::has_blockstatus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CheckPCWechatFileResponse::set_has_blockstatus() {
  _has_bits_[0] |= 0x00000002u;
}
void CheckPCWechatFileResponse::clear_has_blockstatus() {
  _has_bits_[0] &= ~0x00000002u;
}
void CheckPCWechatFileResponse::clear_blockstatus() {
  blockstatus_ = 0;
  clear_has_blockstatus();
}
::google::protobuf::int32 CheckPCWechatFileResponse::blockstatus() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckPCWechatFileResponse.BlockStatus)
  return blockstatus_;
}
void CheckPCWechatFileResponse::set_blockstatus(::google::protobuf::int32 value) {
  set_has_blockstatus();
  blockstatus_ = value;
  // @@protoc_insertion_point(field_set:micromsg.CheckPCWechatFileResponse.BlockStatus)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace micromsg

// @@protoc_insertion_point(global_scope)
