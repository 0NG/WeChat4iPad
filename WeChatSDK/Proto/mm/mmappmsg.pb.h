// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mmappmsg.proto

#ifndef PROTOBUF_mmappmsg_2eproto__INCLUDED
#define PROTOBUF_mmappmsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "mmbuiltintype.pb.h"
#include "mmbase.pb.h"
// @@protoc_insertion_point(includes)
namespace micromsg {
class AdditionalContactList;
class AdditionalContactListDefaultTypeInternal;
extern AdditionalContactListDefaultTypeInternal _AdditionalContactList_default_instance_;
class AppMsg;
class AppMsgDefaultTypeInternal;
extern AppMsgDefaultTypeInternal _AppMsg_default_instance_;
class BaseRequest;
class BaseRequestDefaultTypeInternal;
extern BaseRequestDefaultTypeInternal _BaseRequest_default_instance_;
class BaseResponse;
class BaseResponseDefaultTypeInternal;
extern BaseResponseDefaultTypeInternal _BaseResponse_default_instance_;
class BindEmailRequest;
class BindEmailRequestDefaultTypeInternal;
extern BindEmailRequestDefaultTypeInternal _BindEmailRequest_default_instance_;
class BindEmailResponse;
class BindEmailResponseDefaultTypeInternal;
extern BindEmailResponseDefaultTypeInternal _BindEmailResponse_default_instance_;
class BuiltinIP;
class BuiltinIPDefaultTypeInternal;
extern BuiltinIPDefaultTypeInternal _BuiltinIP_default_instance_;
class BuiltinIPList;
class BuiltinIPListDefaultTypeInternal;
extern BuiltinIPListDefaultTypeInternal _BuiltinIPList_default_instance_;
class CDNDnsInfo;
class CDNDnsInfoDefaultTypeInternal;
extern CDNDnsInfoDefaultTypeInternal _CDNDnsInfo_default_instance_;
class ChatRoomMemberData;
class ChatRoomMemberDataDefaultTypeInternal;
extern ChatRoomMemberDataDefaultTypeInternal _ChatRoomMemberData_default_instance_;
class ChatRoomMemberInfo;
class ChatRoomMemberInfoDefaultTypeInternal;
extern ChatRoomMemberInfoDefaultTypeInternal _ChatRoomMemberInfo_default_instance_;
class CheckPCWechatFileRequest;
class CheckPCWechatFileRequestDefaultTypeInternal;
extern CheckPCWechatFileRequestDefaultTypeInternal _CheckPCWechatFileRequest_default_instance_;
class CheckPCWechatFileResponse;
class CheckPCWechatFileResponseDefaultTypeInternal;
extern CheckPCWechatFileResponseDefaultTypeInternal _CheckPCWechatFileResponse_default_instance_;
class CmdItem;
class CmdItemDefaultTypeInternal;
extern CmdItemDefaultTypeInternal _CmdItem_default_instance_;
class CmdList;
class CmdListDefaultTypeInternal;
extern CmdListDefaultTypeInternal _CmdList_default_instance_;
class CustomizedInfo;
class CustomizedInfoDefaultTypeInternal;
extern CustomizedInfoDefaultTypeInternal _CustomizedInfo_default_instance_;
class DelMemberReq;
class DelMemberReqDefaultTypeInternal;
extern DelMemberReqDefaultTypeInternal _DelMemberReq_default_instance_;
class DelMemberResp;
class DelMemberRespDefaultTypeInternal;
extern DelMemberRespDefaultTypeInternal _DelMemberResp_default_instance_;
class DisturbSetting;
class DisturbSettingDefaultTypeInternal;
extern DisturbSettingDefaultTypeInternal _DisturbSetting_default_instance_;
class DisturbTimeSpan;
class DisturbTimeSpanDefaultTypeInternal;
extern DisturbTimeSpanDefaultTypeInternal _DisturbTimeSpan_default_instance_;
class DownloadAppAttachRequest;
class DownloadAppAttachRequestDefaultTypeInternal;
extern DownloadAppAttachRequestDefaultTypeInternal _DownloadAppAttachRequest_default_instance_;
class DownloadAppAttachResponse;
class DownloadAppAttachResponseDefaultTypeInternal;
extern DownloadAppAttachResponseDefaultTypeInternal _DownloadAppAttachResponse_default_instance_;
class GetAppInfoRequest;
class GetAppInfoRequestDefaultTypeInternal;
extern GetAppInfoRequestDefaultTypeInternal _GetAppInfoRequest_default_instance_;
class GetAppInfoResponse;
class GetAppInfoResponseDefaultTypeInternal;
extern GetAppInfoResponseDefaultTypeInternal _GetAppInfoResponse_default_instance_;
class GetLocationRequest;
class GetLocationRequestDefaultTypeInternal;
extern GetLocationRequestDefaultTypeInternal _GetLocationRequest_default_instance_;
class GetLocationResponse;
class GetLocationResponseDefaultTypeInternal;
extern GetLocationResponseDefaultTypeInternal _GetLocationResponse_default_instance_;
class GetRecommendAppListRequest;
class GetRecommendAppListRequestDefaultTypeInternal;
extern GetRecommendAppListRequestDefaultTypeInternal _GetRecommendAppListRequest_default_instance_;
class GetRecommendAppListResponse;
class GetRecommendAppListResponseDefaultTypeInternal;
extern GetRecommendAppListResponseDefaultTypeInternal _GetRecommendAppListResponse_default_instance_;
class GmailInfo;
class GmailInfoDefaultTypeInternal;
extern GmailInfoDefaultTypeInternal _GmailInfo_default_instance_;
class GmailList;
class GmailListDefaultTypeInternal;
extern GmailListDefaultTypeInternal _GmailList_default_instance_;
class HardDevice;
class HardDeviceDefaultTypeInternal;
extern HardDeviceDefaultTypeInternal _HardDevice_default_instance_;
class Host;
class HostDefaultTypeInternal;
extern HostDefaultTypeInternal _Host_default_instance_;
class HostList;
class HostListDefaultTypeInternal;
extern HostListDefaultTypeInternal _HostList_default_instance_;
class LinkedinContactItem;
class LinkedinContactItemDefaultTypeInternal;
extern LinkedinContactItemDefaultTypeInternal _LinkedinContactItem_default_instance_;
class MemberReq;
class MemberReqDefaultTypeInternal;
extern MemberReqDefaultTypeInternal _MemberReq_default_instance_;
class MemberResp;
class MemberRespDefaultTypeInternal;
extern MemberRespDefaultTypeInternal _MemberResp_default_instance_;
class ModContact;
class ModContactDefaultTypeInternal;
extern ModContactDefaultTypeInternal _ModContact_default_instance_;
class ModUserInfo;
class ModUserInfoDefaultTypeInternal;
extern ModUserInfoDefaultTypeInternal _ModUserInfo_default_instance_;
class NetworkControl;
class NetworkControlDefaultTypeInternal;
extern NetworkControlDefaultTypeInternal _NetworkControl_default_instance_;
class OpenAppInfo;
class OpenAppInfoDefaultTypeInternal;
extern OpenAppInfoDefaultTypeInternal _OpenAppInfo_default_instance_;
class PatternLockInfo;
class PatternLockInfoDefaultTypeInternal;
extern PatternLockInfoDefaultTypeInternal _PatternLockInfo_default_instance_;
class PluginKey;
class PluginKeyDefaultTypeInternal;
extern PluginKeyDefaultTypeInternal _PluginKey_default_instance_;
class PluginKeyList;
class PluginKeyListDefaultTypeInternal;
extern PluginKeyListDefaultTypeInternal _PluginKeyList_default_instance_;
class PositionInfo;
class PositionInfoDefaultTypeInternal;
extern PositionInfoDefaultTypeInternal _PositionInfo_default_instance_;
class RoomInfo;
class RoomInfoDefaultTypeInternal;
extern RoomInfoDefaultTypeInternal _RoomInfo_default_instance_;
class SKBuiltinBuffer_t;
class SKBuiltinBuffer_tDefaultTypeInternal;
extern SKBuiltinBuffer_tDefaultTypeInternal _SKBuiltinBuffer_t_default_instance_;
class SKBuiltinChar_t;
class SKBuiltinChar_tDefaultTypeInternal;
extern SKBuiltinChar_tDefaultTypeInternal _SKBuiltinChar_t_default_instance_;
class SKBuiltinDouble64_t;
class SKBuiltinDouble64_tDefaultTypeInternal;
extern SKBuiltinDouble64_tDefaultTypeInternal _SKBuiltinDouble64_t_default_instance_;
class SKBuiltinFloat32_t;
class SKBuiltinFloat32_tDefaultTypeInternal;
extern SKBuiltinFloat32_tDefaultTypeInternal _SKBuiltinFloat32_t_default_instance_;
class SKBuiltinInt16_t;
class SKBuiltinInt16_tDefaultTypeInternal;
extern SKBuiltinInt16_tDefaultTypeInternal _SKBuiltinInt16_t_default_instance_;
class SKBuiltinInt32_t;
class SKBuiltinInt32_tDefaultTypeInternal;
extern SKBuiltinInt32_tDefaultTypeInternal _SKBuiltinInt32_t_default_instance_;
class SKBuiltinInt64_t;
class SKBuiltinInt64_tDefaultTypeInternal;
extern SKBuiltinInt64_tDefaultTypeInternal _SKBuiltinInt64_t_default_instance_;
class SKBuiltinInt8_t;
class SKBuiltinInt8_tDefaultTypeInternal;
extern SKBuiltinInt8_tDefaultTypeInternal _SKBuiltinInt8_t_default_instance_;
class SKBuiltinString_t;
class SKBuiltinString_tDefaultTypeInternal;
extern SKBuiltinString_tDefaultTypeInternal _SKBuiltinString_t_default_instance_;
class SKBuiltinUchar_t;
class SKBuiltinUchar_tDefaultTypeInternal;
extern SKBuiltinUchar_tDefaultTypeInternal _SKBuiltinUchar_t_default_instance_;
class SKBuiltinUint16_t;
class SKBuiltinUint16_tDefaultTypeInternal;
extern SKBuiltinUint16_tDefaultTypeInternal _SKBuiltinUint16_t_default_instance_;
class SKBuiltinUint32_t;
class SKBuiltinUint32_tDefaultTypeInternal;
extern SKBuiltinUint32_tDefaultTypeInternal _SKBuiltinUint32_t_default_instance_;
class SKBuiltinUint64_t;
class SKBuiltinUint64_tDefaultTypeInternal;
extern SKBuiltinUint64_tDefaultTypeInternal _SKBuiltinUint64_t_default_instance_;
class SKBuiltinUint8_t;
class SKBuiltinUint8_tDefaultTypeInternal;
extern SKBuiltinUint8_tDefaultTypeInternal _SKBuiltinUint8_t_default_instance_;
class SafeDevice;
class SafeDeviceDefaultTypeInternal;
extern SafeDeviceDefaultTypeInternal _SafeDevice_default_instance_;
class SafeDeviceList;
class SafeDeviceListDefaultTypeInternal;
extern SafeDeviceListDefaultTypeInternal _SafeDeviceList_default_instance_;
class SendAppMsgRequest;
class SendAppMsgRequestDefaultTypeInternal;
extern SendAppMsgRequestDefaultTypeInternal _SendAppMsgRequest_default_instance_;
class SendAppMsgResponse;
class SendAppMsgResponseDefaultTypeInternal;
extern SendAppMsgResponseDefaultTypeInternal _SendAppMsgResponse_default_instance_;
class ShakeSyncRequest;
class ShakeSyncRequestDefaultTypeInternal;
extern ShakeSyncRequestDefaultTypeInternal _ShakeSyncRequest_default_instance_;
class ShakeSyncResponse;
class ShakeSyncResponseDefaultTypeInternal;
extern ShakeSyncResponseDefaultTypeInternal _ShakeSyncResponse_default_instance_;
class ShowStyleKey;
class ShowStyleKeyDefaultTypeInternal;
extern ShowStyleKeyDefaultTypeInternal _ShowStyleKey_default_instance_;
class SnsUserInfo;
class SnsUserInfoDefaultTypeInternal;
extern SnsUserInfoDefaultTypeInternal _SnsUserInfo_default_instance_;
class StyleKeyVal;
class StyleKeyValDefaultTypeInternal;
extern StyleKeyValDefaultTypeInternal _StyleKeyVal_default_instance_;
class UserInfoExt;
class UserInfoExtDefaultTypeInternal;
extern UserInfoExtDefaultTypeInternal _UserInfoExt_default_instance_;
}  // namespace micromsg

namespace micromsg {

namespace protobuf_mmappmsg_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_mmappmsg_2eproto

// ===================================================================

class AppMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.AppMsg) */ {
 public:
  AppMsg();
  virtual ~AppMsg();

  AppMsg(const AppMsg& from);

  inline AppMsg& operator=(const AppMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppMsg& default_instance();

  static inline const AppMsg* internal_default_instance() {
    return reinterpret_cast<const AppMsg*>(
               &_AppMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(AppMsg* other);

  // implements Message ----------------------------------------------

  inline AppMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  AppMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AppMsg& from);
  void MergeFrom(const AppMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AppMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string FromUserName = 1;
  bool has_fromusername() const;
  void clear_fromusername();
  static const int kFromUserNameFieldNumber = 1;
  const ::std::string& fromusername() const;
  void set_fromusername(const ::std::string& value);
  #if LANG_CXX11
  void set_fromusername(::std::string&& value);
  #endif
  void set_fromusername(const char* value);
  void set_fromusername(const char* value, size_t size);
  ::std::string* mutable_fromusername();
  ::std::string* release_fromusername();
  void set_allocated_fromusername(::std::string* fromusername);

  // optional string AppId = 2;
  bool has_appid() const;
  void clear_appid();
  static const int kAppIdFieldNumber = 2;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // optional string ToUserName = 4;
  bool has_tousername() const;
  void clear_tousername();
  static const int kToUserNameFieldNumber = 4;
  const ::std::string& tousername() const;
  void set_tousername(const ::std::string& value);
  #if LANG_CXX11
  void set_tousername(::std::string&& value);
  #endif
  void set_tousername(const char* value);
  void set_tousername(const char* value, size_t size);
  ::std::string* mutable_tousername();
  ::std::string* release_tousername();
  void set_allocated_tousername(::std::string* tousername);

  // optional string Content = 6;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 6;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // optional string ClientMsgId = 8;
  bool has_clientmsgid() const;
  void clear_clientmsgid();
  static const int kClientMsgIdFieldNumber = 8;
  const ::std::string& clientmsgid() const;
  void set_clientmsgid(const ::std::string& value);
  #if LANG_CXX11
  void set_clientmsgid(::std::string&& value);
  #endif
  void set_clientmsgid(const char* value);
  void set_clientmsgid(const char* value, size_t size);
  ::std::string* mutable_clientmsgid();
  ::std::string* release_clientmsgid();
  void set_allocated_clientmsgid(::std::string* clientmsgid);

  // optional string MsgSource = 12;
  bool has_msgsource() const;
  void clear_msgsource();
  static const int kMsgSourceFieldNumber = 12;
  const ::std::string& msgsource() const;
  void set_msgsource(const ::std::string& value);
  #if LANG_CXX11
  void set_msgsource(::std::string&& value);
  #endif
  void set_msgsource(const char* value);
  void set_msgsource(const char* value, size_t size);
  ::std::string* mutable_msgsource();
  ::std::string* release_msgsource();
  void set_allocated_msgsource(::std::string* msgsource);

  // optional string ShareUrlOriginal = 13;
  bool has_shareurloriginal() const;
  void clear_shareurloriginal();
  static const int kShareUrlOriginalFieldNumber = 13;
  const ::std::string& shareurloriginal() const;
  void set_shareurloriginal(const ::std::string& value);
  #if LANG_CXX11
  void set_shareurloriginal(::std::string&& value);
  #endif
  void set_shareurloriginal(const char* value);
  void set_shareurloriginal(const char* value, size_t size);
  ::std::string* mutable_shareurloriginal();
  ::std::string* release_shareurloriginal();
  void set_allocated_shareurloriginal(::std::string* shareurloriginal);

  // optional string ShareUrlOpen = 14;
  bool has_shareurlopen() const;
  void clear_shareurlopen();
  static const int kShareUrlOpenFieldNumber = 14;
  const ::std::string& shareurlopen() const;
  void set_shareurlopen(const ::std::string& value);
  #if LANG_CXX11
  void set_shareurlopen(::std::string&& value);
  #endif
  void set_shareurlopen(const char* value);
  void set_shareurlopen(const char* value, size_t size);
  ::std::string* mutable_shareurlopen();
  ::std::string* release_shareurlopen();
  void set_allocated_shareurlopen(::std::string* shareurlopen);

  // optional string JsAppId = 15;
  bool has_jsappid() const;
  void clear_jsappid();
  static const int kJsAppIdFieldNumber = 15;
  const ::std::string& jsappid() const;
  void set_jsappid(const ::std::string& value);
  #if LANG_CXX11
  void set_jsappid(::std::string&& value);
  #endif
  void set_jsappid(const char* value);
  void set_jsappid(const char* value, size_t size);
  ::std::string* mutable_jsappid();
  ::std::string* release_jsappid();
  void set_allocated_jsappid(::std::string* jsappid);

  // optional .micromsg.SKBuiltinBuffer_t Thumb = 9;
  bool has_thumb() const;
  void clear_thumb();
  static const int kThumbFieldNumber = 9;
  const ::micromsg::SKBuiltinBuffer_t& thumb() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_thumb();
  ::micromsg::SKBuiltinBuffer_t* release_thumb();
  void set_allocated_thumb(::micromsg::SKBuiltinBuffer_t* thumb);

  // required uint32 SdkVersion = 3;
  bool has_sdkversion() const;
  void clear_sdkversion();
  static const int kSdkVersionFieldNumber = 3;
  ::google::protobuf::uint32 sdkversion() const;
  void set_sdkversion(::google::protobuf::uint32 value);

  // required uint32 Type = 5;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 5;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // required uint32 CreateTime = 7;
  bool has_createtime() const;
  void clear_createtime();
  static const int kCreateTimeFieldNumber = 7;
  ::google::protobuf::uint32 createtime() const;
  void set_createtime(::google::protobuf::uint32 value);

  // optional int32 Source = 10;
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 10;
  ::google::protobuf::int32 source() const;
  void set_source(::google::protobuf::int32 value);

  // optional int32 RemindId = 11;
  bool has_remindid() const;
  void clear_remindid();
  static const int kRemindIdFieldNumber = 11;
  ::google::protobuf::int32 remindid() const;
  void set_remindid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.AppMsg)
 private:
  void set_has_fromusername();
  void clear_has_fromusername();
  void set_has_appid();
  void clear_has_appid();
  void set_has_sdkversion();
  void clear_has_sdkversion();
  void set_has_tousername();
  void clear_has_tousername();
  void set_has_type();
  void clear_has_type();
  void set_has_content();
  void clear_has_content();
  void set_has_createtime();
  void clear_has_createtime();
  void set_has_clientmsgid();
  void clear_has_clientmsgid();
  void set_has_thumb();
  void clear_has_thumb();
  void set_has_source();
  void clear_has_source();
  void set_has_remindid();
  void clear_has_remindid();
  void set_has_msgsource();
  void clear_has_msgsource();
  void set_has_shareurloriginal();
  void clear_has_shareurloriginal();
  void set_has_shareurlopen();
  void clear_has_shareurlopen();
  void set_has_jsappid();
  void clear_has_jsappid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr fromusername_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::google::protobuf::internal::ArenaStringPtr tousername_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::internal::ArenaStringPtr clientmsgid_;
  ::google::protobuf::internal::ArenaStringPtr msgsource_;
  ::google::protobuf::internal::ArenaStringPtr shareurloriginal_;
  ::google::protobuf::internal::ArenaStringPtr shareurlopen_;
  ::google::protobuf::internal::ArenaStringPtr jsappid_;
  ::micromsg::SKBuiltinBuffer_t* thumb_;
  ::google::protobuf::uint32 sdkversion_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 createtime_;
  ::google::protobuf::int32 source_;
  ::google::protobuf::int32 remindid_;
  friend struct protobuf_mmappmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendAppMsgRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SendAppMsgRequest) */ {
 public:
  SendAppMsgRequest();
  virtual ~SendAppMsgRequest();

  SendAppMsgRequest(const SendAppMsgRequest& from);

  inline SendAppMsgRequest& operator=(const SendAppMsgRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendAppMsgRequest& default_instance();

  static inline const SendAppMsgRequest* internal_default_instance() {
    return reinterpret_cast<const SendAppMsgRequest*>(
               &_SendAppMsgRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(SendAppMsgRequest* other);

  // implements Message ----------------------------------------------

  inline SendAppMsgRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SendAppMsgRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SendAppMsgRequest& from);
  void MergeFrom(const SendAppMsgRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SendAppMsgRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string CommentUrl = 3;
  bool has_commenturl() const;
  void clear_commenturl();
  static const int kCommentUrlFieldNumber = 3;
  const ::std::string& commenturl() const;
  void set_commenturl(const ::std::string& value);
  #if LANG_CXX11
  void set_commenturl(::std::string&& value);
  #endif
  void set_commenturl(const char* value);
  void set_commenturl(const char* value, size_t size);
  ::std::string* mutable_commenturl();
  ::std::string* release_commenturl();
  void set_allocated_commenturl(::std::string* commenturl);

  // optional string Md5 = 5;
  bool has_md5() const;
  void clear_md5();
  static const int kMd5FieldNumber = 5;
  const ::std::string& md5() const;
  void set_md5(const ::std::string& value);
  #if LANG_CXX11
  void set_md5(::std::string&& value);
  #endif
  void set_md5(const char* value);
  void set_md5(const char* value, size_t size);
  ::std::string* mutable_md5();
  ::std::string* release_md5();
  void set_allocated_md5(::std::string* md5);

  // optional string Signature = 7;
  bool has_signature() const;
  void clear_signature();
  static const int kSignatureFieldNumber = 7;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const char* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // optional string FromSence = 8;
  bool has_fromsence() const;
  void clear_fromsence();
  static const int kFromSenceFieldNumber = 8;
  const ::std::string& fromsence() const;
  void set_fromsence(const ::std::string& value);
  #if LANG_CXX11
  void set_fromsence(::std::string&& value);
  #endif
  void set_fromsence(const char* value);
  void set_fromsence(const char* value, size_t size);
  ::std::string* mutable_fromsence();
  ::std::string* release_fromsence();
  void set_allocated_fromsence(::std::string* fromsence);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.AppMsg Msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::micromsg::AppMsg& msg() const;
  ::micromsg::AppMsg* mutable_msg();
  ::micromsg::AppMsg* release_msg();
  void set_allocated_msg(::micromsg::AppMsg* msg);

  // optional uint32 ReqTime = 4;
  bool has_reqtime() const;
  void clear_reqtime();
  static const int kReqTimeFieldNumber = 4;
  ::google::protobuf::uint32 reqtime() const;
  void set_reqtime(::google::protobuf::uint32 value);

  // optional uint32 FileType = 6;
  bool has_filetype() const;
  void clear_filetype();
  static const int kFileTypeFieldNumber = 6;
  ::google::protobuf::uint32 filetype() const;
  void set_filetype(::google::protobuf::uint32 value);

  // optional uint32 HitMd5 = 9;
  bool has_hitmd5() const;
  void clear_hitmd5();
  static const int kHitMd5FieldNumber = 9;
  ::google::protobuf::uint32 hitmd5() const;
  void set_hitmd5(::google::protobuf::uint32 value);

  // optional uint32 CRC32 = 10;
  bool has_crc32() const;
  void clear_crc32();
  static const int kCRC32FieldNumber = 10;
  ::google::protobuf::uint32 crc32() const;
  void set_crc32(::google::protobuf::uint32 value);

  // optional uint32 MsgForwardType = 11;
  bool has_msgforwardtype() const;
  void clear_msgforwardtype();
  static const int kMsgForwardTypeFieldNumber = 11;
  ::google::protobuf::uint32 msgforwardtype() const;
  void set_msgforwardtype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SendAppMsgRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_msg();
  void clear_has_msg();
  void set_has_commenturl();
  void clear_has_commenturl();
  void set_has_reqtime();
  void clear_has_reqtime();
  void set_has_md5();
  void clear_has_md5();
  void set_has_filetype();
  void clear_has_filetype();
  void set_has_signature();
  void clear_has_signature();
  void set_has_fromsence();
  void clear_has_fromsence();
  void set_has_hitmd5();
  void clear_has_hitmd5();
  void set_has_crc32();
  void clear_has_crc32();
  void set_has_msgforwardtype();
  void clear_has_msgforwardtype();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr commenturl_;
  ::google::protobuf::internal::ArenaStringPtr md5_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  ::google::protobuf::internal::ArenaStringPtr fromsence_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::AppMsg* msg_;
  ::google::protobuf::uint32 reqtime_;
  ::google::protobuf::uint32 filetype_;
  ::google::protobuf::uint32 hitmd5_;
  ::google::protobuf::uint32 crc32_;
  ::google::protobuf::uint32 msgforwardtype_;
  friend struct protobuf_mmappmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendAppMsgResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SendAppMsgResponse) */ {
 public:
  SendAppMsgResponse();
  virtual ~SendAppMsgResponse();

  SendAppMsgResponse(const SendAppMsgResponse& from);

  inline SendAppMsgResponse& operator=(const SendAppMsgResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendAppMsgResponse& default_instance();

  static inline const SendAppMsgResponse* internal_default_instance() {
    return reinterpret_cast<const SendAppMsgResponse*>(
               &_SendAppMsgResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(SendAppMsgResponse* other);

  // implements Message ----------------------------------------------

  inline SendAppMsgResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SendAppMsgResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SendAppMsgResponse& from);
  void MergeFrom(const SendAppMsgResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SendAppMsgResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string AppId = 2;
  bool has_appid() const;
  void clear_appid();
  static const int kAppIdFieldNumber = 2;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // optional string FromUserName = 3;
  bool has_fromusername() const;
  void clear_fromusername();
  static const int kFromUserNameFieldNumber = 3;
  const ::std::string& fromusername() const;
  void set_fromusername(const ::std::string& value);
  #if LANG_CXX11
  void set_fromusername(::std::string&& value);
  #endif
  void set_fromusername(const char* value);
  void set_fromusername(const char* value, size_t size);
  ::std::string* mutable_fromusername();
  ::std::string* release_fromusername();
  void set_allocated_fromusername(::std::string* fromusername);

  // optional string ToUserName = 4;
  bool has_tousername() const;
  void clear_tousername();
  static const int kToUserNameFieldNumber = 4;
  const ::std::string& tousername() const;
  void set_tousername(const ::std::string& value);
  #if LANG_CXX11
  void set_tousername(::std::string&& value);
  #endif
  void set_tousername(const char* value);
  void set_tousername(const char* value, size_t size);
  ::std::string* mutable_tousername();
  ::std::string* release_tousername();
  void set_allocated_tousername(::std::string* tousername);

  // optional string ClientMsgId = 6;
  bool has_clientmsgid() const;
  void clear_clientmsgid();
  static const int kClientMsgIdFieldNumber = 6;
  const ::std::string& clientmsgid() const;
  void set_clientmsgid(const ::std::string& value);
  #if LANG_CXX11
  void set_clientmsgid(::std::string&& value);
  #endif
  void set_clientmsgid(const char* value);
  void set_clientmsgid(const char* value, size_t size);
  ::std::string* mutable_clientmsgid();
  ::std::string* release_clientmsgid();
  void set_allocated_clientmsgid(::std::string* clientmsgid);

  // optional string AESKey = 10;
  bool has_aeskey() const;
  void clear_aeskey();
  static const int kAESKeyFieldNumber = 10;
  const ::std::string& aeskey() const;
  void set_aeskey(const ::std::string& value);
  #if LANG_CXX11
  void set_aeskey(::std::string&& value);
  #endif
  void set_aeskey(const char* value);
  void set_aeskey(const char* value, size_t size);
  ::std::string* mutable_aeskey();
  ::std::string* release_aeskey();
  void set_allocated_aeskey(::std::string* aeskey);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 MsgId = 5;
  bool has_msgid() const;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 5;
  ::google::protobuf::uint32 msgid() const;
  void set_msgid(::google::protobuf::uint32 value);

  // required uint32 CreateTime = 7;
  bool has_createtime() const;
  void clear_createtime();
  static const int kCreateTimeFieldNumber = 7;
  ::google::protobuf::uint32 createtime() const;
  void set_createtime(::google::protobuf::uint32 value);

  // optional uint64 NewMsgId = 9;
  bool has_newmsgid() const;
  void clear_newmsgid();
  static const int kNewMsgIdFieldNumber = 9;
  ::google::protobuf::uint64 newmsgid() const;
  void set_newmsgid(::google::protobuf::uint64 value);

  // optional uint32 Type = 8;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 8;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SendAppMsgResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_appid();
  void clear_has_appid();
  void set_has_fromusername();
  void clear_has_fromusername();
  void set_has_tousername();
  void clear_has_tousername();
  void set_has_msgid();
  void clear_has_msgid();
  void set_has_clientmsgid();
  void clear_has_clientmsgid();
  void set_has_createtime();
  void clear_has_createtime();
  void set_has_type();
  void clear_has_type();
  void set_has_newmsgid();
  void clear_has_newmsgid();
  void set_has_aeskey();
  void clear_has_aeskey();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::google::protobuf::internal::ArenaStringPtr fromusername_;
  ::google::protobuf::internal::ArenaStringPtr tousername_;
  ::google::protobuf::internal::ArenaStringPtr clientmsgid_;
  ::google::protobuf::internal::ArenaStringPtr aeskey_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 msgid_;
  ::google::protobuf::uint32 createtime_;
  ::google::protobuf::uint64 newmsgid_;
  ::google::protobuf::uint32 type_;
  friend struct protobuf_mmappmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DownloadAppAttachRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.DownloadAppAttachRequest) */ {
 public:
  DownloadAppAttachRequest();
  virtual ~DownloadAppAttachRequest();

  DownloadAppAttachRequest(const DownloadAppAttachRequest& from);

  inline DownloadAppAttachRequest& operator=(const DownloadAppAttachRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DownloadAppAttachRequest& default_instance();

  static inline const DownloadAppAttachRequest* internal_default_instance() {
    return reinterpret_cast<const DownloadAppAttachRequest*>(
               &_DownloadAppAttachRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(DownloadAppAttachRequest* other);

  // implements Message ----------------------------------------------

  inline DownloadAppAttachRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DownloadAppAttachRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DownloadAppAttachRequest& from);
  void MergeFrom(const DownloadAppAttachRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DownloadAppAttachRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string AppId = 2;
  bool has_appid() const;
  void clear_appid();
  static const int kAppIdFieldNumber = 2;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // optional string MediaId = 4;
  bool has_mediaid() const;
  void clear_mediaid();
  static const int kMediaIdFieldNumber = 4;
  const ::std::string& mediaid() const;
  void set_mediaid(const ::std::string& value);
  #if LANG_CXX11
  void set_mediaid(::std::string&& value);
  #endif
  void set_mediaid(const char* value);
  void set_mediaid(const char* value, size_t size);
  ::std::string* mutable_mediaid();
  ::std::string* release_mediaid();
  void set_allocated_mediaid(::std::string* mediaid);

  // optional string UserName = 5;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 5;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string OutFmt = 9;
  bool has_outfmt() const;
  void clear_outfmt();
  static const int kOutFmtFieldNumber = 9;
  const ::std::string& outfmt() const;
  void set_outfmt(const ::std::string& value);
  #if LANG_CXX11
  void set_outfmt(::std::string&& value);
  #endif
  void set_outfmt(const char* value);
  void set_outfmt(const char* value, size_t size);
  ::std::string* mutable_outfmt();
  ::std::string* release_outfmt();
  void set_allocated_outfmt(::std::string* outfmt);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 SdkVersion = 3;
  bool has_sdkversion() const;
  void clear_sdkversion();
  static const int kSdkVersionFieldNumber = 3;
  ::google::protobuf::uint32 sdkversion() const;
  void set_sdkversion(::google::protobuf::uint32 value);

  // required uint32 TotalLen = 6;
  bool has_totallen() const;
  void clear_totallen();
  static const int kTotalLenFieldNumber = 6;
  ::google::protobuf::uint32 totallen() const;
  void set_totallen(::google::protobuf::uint32 value);

  // required uint32 StartPos = 7;
  bool has_startpos() const;
  void clear_startpos();
  static const int kStartPosFieldNumber = 7;
  ::google::protobuf::uint32 startpos() const;
  void set_startpos(::google::protobuf::uint32 value);

  // required uint32 DataLen = 8;
  bool has_datalen() const;
  void clear_datalen();
  static const int kDataLenFieldNumber = 8;
  ::google::protobuf::uint32 datalen() const;
  void set_datalen(::google::protobuf::uint32 value);

  // optional int32 Rotation = 10;
  bool has_rotation() const;
  void clear_rotation();
  static const int kRotationFieldNumber = 10;
  ::google::protobuf::int32 rotation() const;
  void set_rotation(::google::protobuf::int32 value);

  // optional uint32 Type = 11;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 11;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional uint32 CDNType = 12;
  bool has_cdntype() const;
  void clear_cdntype();
  static const int kCDNTypeFieldNumber = 12;
  ::google::protobuf::uint32 cdntype() const;
  void set_cdntype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.DownloadAppAttachRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_appid();
  void clear_has_appid();
  void set_has_sdkversion();
  void clear_has_sdkversion();
  void set_has_mediaid();
  void clear_has_mediaid();
  void set_has_username();
  void clear_has_username();
  void set_has_totallen();
  void clear_has_totallen();
  void set_has_startpos();
  void clear_has_startpos();
  void set_has_datalen();
  void clear_has_datalen();
  void set_has_outfmt();
  void clear_has_outfmt();
  void set_has_rotation();
  void clear_has_rotation();
  void set_has_type();
  void clear_has_type();
  void set_has_cdntype();
  void clear_has_cdntype();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::google::protobuf::internal::ArenaStringPtr mediaid_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr outfmt_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 sdkversion_;
  ::google::protobuf::uint32 totallen_;
  ::google::protobuf::uint32 startpos_;
  ::google::protobuf::uint32 datalen_;
  ::google::protobuf::int32 rotation_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 cdntype_;
  friend struct protobuf_mmappmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DownloadAppAttachResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.DownloadAppAttachResponse) */ {
 public:
  DownloadAppAttachResponse();
  virtual ~DownloadAppAttachResponse();

  DownloadAppAttachResponse(const DownloadAppAttachResponse& from);

  inline DownloadAppAttachResponse& operator=(const DownloadAppAttachResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DownloadAppAttachResponse& default_instance();

  static inline const DownloadAppAttachResponse* internal_default_instance() {
    return reinterpret_cast<const DownloadAppAttachResponse*>(
               &_DownloadAppAttachResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(DownloadAppAttachResponse* other);

  // implements Message ----------------------------------------------

  inline DownloadAppAttachResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  DownloadAppAttachResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DownloadAppAttachResponse& from);
  void MergeFrom(const DownloadAppAttachResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DownloadAppAttachResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string AppId = 2;
  bool has_appid() const;
  void clear_appid();
  static const int kAppIdFieldNumber = 2;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // optional string MediaId = 3;
  bool has_mediaid() const;
  void clear_mediaid();
  static const int kMediaIdFieldNumber = 3;
  const ::std::string& mediaid() const;
  void set_mediaid(const ::std::string& value);
  #if LANG_CXX11
  void set_mediaid(::std::string&& value);
  #endif
  void set_mediaid(const char* value);
  void set_mediaid(const char* value, size_t size);
  ::std::string* mutable_mediaid();
  ::std::string* release_mediaid();
  void set_allocated_mediaid(::std::string* mediaid);

  // optional string UserName = 4;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 4;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.SKBuiltinBuffer_t Data = 8;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 8;
  const ::micromsg::SKBuiltinBuffer_t& data() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_data();
  ::micromsg::SKBuiltinBuffer_t* release_data();
  void set_allocated_data(::micromsg::SKBuiltinBuffer_t* data);

  // required uint32 TotalLen = 5;
  bool has_totallen() const;
  void clear_totallen();
  static const int kTotalLenFieldNumber = 5;
  ::google::protobuf::uint32 totallen() const;
  void set_totallen(::google::protobuf::uint32 value);

  // required uint32 StartPos = 6;
  bool has_startpos() const;
  void clear_startpos();
  static const int kStartPosFieldNumber = 6;
  ::google::protobuf::uint32 startpos() const;
  void set_startpos(::google::protobuf::uint32 value);

  // required uint32 DataLen = 7;
  bool has_datalen() const;
  void clear_datalen();
  static const int kDataLenFieldNumber = 7;
  ::google::protobuf::uint32 datalen() const;
  void set_datalen(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.DownloadAppAttachResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_appid();
  void clear_has_appid();
  void set_has_mediaid();
  void clear_has_mediaid();
  void set_has_username();
  void clear_has_username();
  void set_has_totallen();
  void clear_has_totallen();
  void set_has_startpos();
  void clear_has_startpos();
  void set_has_datalen();
  void clear_has_datalen();
  void set_has_data();
  void clear_has_data();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::google::protobuf::internal::ArenaStringPtr mediaid_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::SKBuiltinBuffer_t* data_;
  ::google::protobuf::uint32 totallen_;
  ::google::protobuf::uint32 startpos_;
  ::google::protobuf::uint32 datalen_;
  friend struct protobuf_mmappmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OpenAppInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.OpenAppInfo) */ {
 public:
  OpenAppInfo();
  virtual ~OpenAppInfo();

  OpenAppInfo(const OpenAppInfo& from);

  inline OpenAppInfo& operator=(const OpenAppInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpenAppInfo& default_instance();

  static inline const OpenAppInfo* internal_default_instance() {
    return reinterpret_cast<const OpenAppInfo*>(
               &_OpenAppInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(OpenAppInfo* other);

  // implements Message ----------------------------------------------

  inline OpenAppInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  OpenAppInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpenAppInfo& from);
  void MergeFrom(const OpenAppInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpenAppInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string AppID = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppIDFieldNumber = 1;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // optional string AppName = 2;
  bool has_appname() const;
  void clear_appname();
  static const int kAppNameFieldNumber = 2;
  const ::std::string& appname() const;
  void set_appname(const ::std::string& value);
  #if LANG_CXX11
  void set_appname(::std::string&& value);
  #endif
  void set_appname(const char* value);
  void set_appname(const char* value, size_t size);
  ::std::string* mutable_appname();
  ::std::string* release_appname();
  void set_allocated_appname(::std::string* appname);

  // optional string AppDescription = 3;
  bool has_appdescription() const;
  void clear_appdescription();
  static const int kAppDescriptionFieldNumber = 3;
  const ::std::string& appdescription() const;
  void set_appdescription(const ::std::string& value);
  #if LANG_CXX11
  void set_appdescription(::std::string&& value);
  #endif
  void set_appdescription(const char* value);
  void set_appdescription(const char* value, size_t size);
  ::std::string* mutable_appdescription();
  ::std::string* release_appdescription();
  void set_allocated_appdescription(::std::string* appdescription);

  // optional string AppIconUrl = 4;
  bool has_appiconurl() const;
  void clear_appiconurl();
  static const int kAppIconUrlFieldNumber = 4;
  const ::std::string& appiconurl() const;
  void set_appiconurl(const ::std::string& value);
  #if LANG_CXX11
  void set_appiconurl(::std::string&& value);
  #endif
  void set_appiconurl(const char* value);
  void set_appiconurl(const char* value, size_t size);
  ::std::string* mutable_appiconurl();
  ::std::string* release_appiconurl();
  void set_allocated_appiconurl(::std::string* appiconurl);

  // optional string AppStoreUrl = 5;
  bool has_appstoreurl() const;
  void clear_appstoreurl();
  static const int kAppStoreUrlFieldNumber = 5;
  const ::std::string& appstoreurl() const;
  void set_appstoreurl(const ::std::string& value);
  #if LANG_CXX11
  void set_appstoreurl(::std::string&& value);
  #endif
  void set_appstoreurl(const char* value);
  void set_appstoreurl(const char* value, size_t size);
  ::std::string* mutable_appstoreurl();
  ::std::string* release_appstoreurl();
  void set_allocated_appstoreurl(::std::string* appstoreurl);

  // optional string AppWatermarkUrl = 7;
  bool has_appwatermarkurl() const;
  void clear_appwatermarkurl();
  static const int kAppWatermarkUrlFieldNumber = 7;
  const ::std::string& appwatermarkurl() const;
  void set_appwatermarkurl(const ::std::string& value);
  #if LANG_CXX11
  void set_appwatermarkurl(::std::string&& value);
  #endif
  void set_appwatermarkurl(const char* value);
  void set_appwatermarkurl(const char* value, size_t size);
  ::std::string* mutable_appwatermarkurl();
  ::std::string* release_appwatermarkurl();
  void set_allocated_appwatermarkurl(::std::string* appwatermarkurl);

  // optional string AndroidPackageName = 8;
  bool has_androidpackagename() const;
  void clear_androidpackagename();
  static const int kAndroidPackageNameFieldNumber = 8;
  const ::std::string& androidpackagename() const;
  void set_androidpackagename(const ::std::string& value);
  #if LANG_CXX11
  void set_androidpackagename(::std::string&& value);
  #endif
  void set_androidpackagename(const char* value);
  void set_androidpackagename(const char* value, size_t size);
  ::std::string* mutable_androidpackagename();
  ::std::string* release_androidpackagename();
  void set_allocated_androidpackagename(::std::string* androidpackagename);

  // optional string AndroidSignature = 9;
  bool has_androidsignature() const;
  void clear_androidsignature();
  static const int kAndroidSignatureFieldNumber = 9;
  const ::std::string& androidsignature() const;
  void set_androidsignature(const ::std::string& value);
  #if LANG_CXX11
  void set_androidsignature(::std::string&& value);
  #endif
  void set_androidsignature(const char* value);
  void set_androidsignature(const char* value, size_t size);
  ::std::string* mutable_androidsignature();
  ::std::string* release_androidsignature();
  void set_allocated_androidsignature(::std::string* androidsignature);

  // optional string AppName4EnUS = 10;
  bool has_appname4enus() const;
  void clear_appname4enus();
  static const int kAppName4EnUSFieldNumber = 10;
  const ::std::string& appname4enus() const;
  void set_appname4enus(const ::std::string& value);
  #if LANG_CXX11
  void set_appname4enus(::std::string&& value);
  #endif
  void set_appname4enus(const char* value);
  void set_appname4enus(const char* value, size_t size);
  ::std::string* mutable_appname4enus();
  ::std::string* release_appname4enus();
  void set_allocated_appname4enus(::std::string* appname4enus);

  // optional string AppDescription4EnUS = 11;
  bool has_appdescription4enus() const;
  void clear_appdescription4enus();
  static const int kAppDescription4EnUSFieldNumber = 11;
  const ::std::string& appdescription4enus() const;
  void set_appdescription4enus(const ::std::string& value);
  #if LANG_CXX11
  void set_appdescription4enus(::std::string&& value);
  #endif
  void set_appdescription4enus(const char* value);
  void set_appdescription4enus(const char* value, size_t size);
  ::std::string* mutable_appdescription4enus();
  ::std::string* release_appdescription4enus();
  void set_allocated_appdescription4enus(::std::string* appdescription4enus);

  // optional string AppName4ZhTW = 12;
  bool has_appname4zhtw() const;
  void clear_appname4zhtw();
  static const int kAppName4ZhTWFieldNumber = 12;
  const ::std::string& appname4zhtw() const;
  void set_appname4zhtw(const ::std::string& value);
  #if LANG_CXX11
  void set_appname4zhtw(::std::string&& value);
  #endif
  void set_appname4zhtw(const char* value);
  void set_appname4zhtw(const char* value, size_t size);
  ::std::string* mutable_appname4zhtw();
  ::std::string* release_appname4zhtw();
  void set_allocated_appname4zhtw(::std::string* appname4zhtw);

  // optional string AppDescription4ZhTW = 13;
  bool has_appdescription4zhtw() const;
  void clear_appdescription4zhtw();
  static const int kAppDescription4ZhTWFieldNumber = 13;
  const ::std::string& appdescription4zhtw() const;
  void set_appdescription4zhtw(const ::std::string& value);
  #if LANG_CXX11
  void set_appdescription4zhtw(::std::string&& value);
  #endif
  void set_appdescription4zhtw(const char* value);
  void set_appdescription4zhtw(const char* value, size_t size);
  ::std::string* mutable_appdescription4zhtw();
  ::std::string* release_appdescription4zhtw();
  void set_allocated_appdescription4zhtw(::std::string* appdescription4zhtw);

  // required uint32 AppVersion = 6;
  bool has_appversion() const;
  void clear_appversion();
  static const int kAppVersionFieldNumber = 6;
  ::google::protobuf::uint32 appversion() const;
  void set_appversion(::google::protobuf::uint32 value);

  // optional uint32 AppInfoFlag = 14;
  bool has_appinfoflag() const;
  void clear_appinfoflag();
  static const int kAppInfoFlagFieldNumber = 14;
  ::google::protobuf::uint32 appinfoflag() const;
  void set_appinfoflag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.OpenAppInfo)
 private:
  void set_has_appid();
  void clear_has_appid();
  void set_has_appname();
  void clear_has_appname();
  void set_has_appdescription();
  void clear_has_appdescription();
  void set_has_appiconurl();
  void clear_has_appiconurl();
  void set_has_appstoreurl();
  void clear_has_appstoreurl();
  void set_has_appversion();
  void clear_has_appversion();
  void set_has_appwatermarkurl();
  void clear_has_appwatermarkurl();
  void set_has_androidpackagename();
  void clear_has_androidpackagename();
  void set_has_androidsignature();
  void clear_has_androidsignature();
  void set_has_appname4enus();
  void clear_has_appname4enus();
  void set_has_appdescription4enus();
  void clear_has_appdescription4enus();
  void set_has_appname4zhtw();
  void clear_has_appname4zhtw();
  void set_has_appdescription4zhtw();
  void clear_has_appdescription4zhtw();
  void set_has_appinfoflag();
  void clear_has_appinfoflag();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::google::protobuf::internal::ArenaStringPtr appname_;
  ::google::protobuf::internal::ArenaStringPtr appdescription_;
  ::google::protobuf::internal::ArenaStringPtr appiconurl_;
  ::google::protobuf::internal::ArenaStringPtr appstoreurl_;
  ::google::protobuf::internal::ArenaStringPtr appwatermarkurl_;
  ::google::protobuf::internal::ArenaStringPtr androidpackagename_;
  ::google::protobuf::internal::ArenaStringPtr androidsignature_;
  ::google::protobuf::internal::ArenaStringPtr appname4enus_;
  ::google::protobuf::internal::ArenaStringPtr appdescription4enus_;
  ::google::protobuf::internal::ArenaStringPtr appname4zhtw_;
  ::google::protobuf::internal::ArenaStringPtr appdescription4zhtw_;
  ::google::protobuf::uint32 appversion_;
  ::google::protobuf::uint32 appinfoflag_;
  friend struct protobuf_mmappmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetAppInfoRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetAppInfoRequest) */ {
 public:
  GetAppInfoRequest();
  virtual ~GetAppInfoRequest();

  GetAppInfoRequest(const GetAppInfoRequest& from);

  inline GetAppInfoRequest& operator=(const GetAppInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAppInfoRequest& default_instance();

  static inline const GetAppInfoRequest* internal_default_instance() {
    return reinterpret_cast<const GetAppInfoRequest*>(
               &_GetAppInfoRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(GetAppInfoRequest* other);

  // implements Message ----------------------------------------------

  inline GetAppInfoRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetAppInfoRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetAppInfoRequest& from);
  void MergeFrom(const GetAppInfoRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetAppInfoRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string AppID = 2;
  bool has_appid() const;
  void clear_appid();
  static const int kAppIDFieldNumber = 2;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 IconType = 3;
  bool has_icontype() const;
  void clear_icontype();
  static const int kIconTypeFieldNumber = 3;
  ::google::protobuf::uint32 icontype() const;
  void set_icontype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetAppInfoRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_appid();
  void clear_has_appid();
  void set_has_icontype();
  void clear_has_icontype();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 icontype_;
  friend struct protobuf_mmappmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetAppInfoResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetAppInfoResponse) */ {
 public:
  GetAppInfoResponse();
  virtual ~GetAppInfoResponse();

  GetAppInfoResponse(const GetAppInfoResponse& from);

  inline GetAppInfoResponse& operator=(const GetAppInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAppInfoResponse& default_instance();

  static inline const GetAppInfoResponse* internal_default_instance() {
    return reinterpret_cast<const GetAppInfoResponse*>(
               &_GetAppInfoResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(GetAppInfoResponse* other);

  // implements Message ----------------------------------------------

  inline GetAppInfoResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetAppInfoResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetAppInfoResponse& from);
  void MergeFrom(const GetAppInfoResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetAppInfoResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string DevInfo = 4;
  bool has_devinfo() const;
  void clear_devinfo();
  static const int kDevInfoFieldNumber = 4;
  const ::std::string& devinfo() const;
  void set_devinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_devinfo(::std::string&& value);
  #endif
  void set_devinfo(const char* value);
  void set_devinfo(const char* value, size_t size);
  ::std::string* mutable_devinfo();
  ::std::string* release_devinfo();
  void set_allocated_devinfo(::std::string* devinfo);

  // optional string AppType = 5;
  bool has_apptype() const;
  void clear_apptype();
  static const int kAppTypeFieldNumber = 5;
  const ::std::string& apptype() const;
  void set_apptype(const ::std::string& value);
  #if LANG_CXX11
  void set_apptype(::std::string&& value);
  #endif
  void set_apptype(const char* value);
  void set_apptype(const char* value, size_t size);
  ::std::string* mutable_apptype();
  ::std::string* release_apptype();
  void set_allocated_apptype(::std::string* apptype);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.OpenAppInfo AppInfo = 2;
  bool has_appinfo() const;
  void clear_appinfo();
  static const int kAppInfoFieldNumber = 2;
  const ::micromsg::OpenAppInfo& appinfo() const;
  ::micromsg::OpenAppInfo* mutable_appinfo();
  ::micromsg::OpenAppInfo* release_appinfo();
  void set_allocated_appinfo(::micromsg::OpenAppInfo* appinfo);

  // optional uint32 NoUse = 3;
  bool has_nouse() const;
  void clear_nouse();
  static const int kNoUseFieldNumber = 3;
  ::google::protobuf::uint32 nouse() const;
  void set_nouse(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetAppInfoResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_appinfo();
  void clear_has_appinfo();
  void set_has_nouse();
  void clear_has_nouse();
  void set_has_devinfo();
  void clear_has_devinfo();
  void set_has_apptype();
  void clear_has_apptype();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr devinfo_;
  ::google::protobuf::internal::ArenaStringPtr apptype_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::OpenAppInfo* appinfo_;
  ::google::protobuf::uint32 nouse_;
  friend struct protobuf_mmappmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetRecommendAppListRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetRecommendAppListRequest) */ {
 public:
  GetRecommendAppListRequest();
  virtual ~GetRecommendAppListRequest();

  GetRecommendAppListRequest(const GetRecommendAppListRequest& from);

  inline GetRecommendAppListRequest& operator=(const GetRecommendAppListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRecommendAppListRequest& default_instance();

  static inline const GetRecommendAppListRequest* internal_default_instance() {
    return reinterpret_cast<const GetRecommendAppListRequest*>(
               &_GetRecommendAppListRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(GetRecommendAppListRequest* other);

  // implements Message ----------------------------------------------

  inline GetRecommendAppListRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetRecommendAppListRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetRecommendAppListRequest& from);
  void MergeFrom(const GetRecommendAppListRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetRecommendAppListRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string InstalledList = 4;
  bool has_installedlist() const;
  void clear_installedlist();
  static const int kInstalledListFieldNumber = 4;
  const ::std::string& installedlist() const;
  void set_installedlist(const ::std::string& value);
  #if LANG_CXX11
  void set_installedlist(::std::string&& value);
  #endif
  void set_installedlist(const char* value);
  void set_installedlist(const char* value, size_t size);
  ::std::string* mutable_installedlist();
  ::std::string* release_installedlist();
  void set_allocated_installedlist(::std::string* installedlist);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 Start = 2;
  bool has_start() const;
  void clear_start();
  static const int kStartFieldNumber = 2;
  ::google::protobuf::uint32 start() const;
  void set_start(::google::protobuf::uint32 value);

  // required uint32 Count = 3;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // required uint32 IconType = 5;
  bool has_icontype() const;
  void clear_icontype();
  static const int kIconTypeFieldNumber = 5;
  ::google::protobuf::uint32 icontype() const;
  void set_icontype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetRecommendAppListRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_start();
  void clear_has_start();
  void set_has_count();
  void clear_has_count();
  void set_has_installedlist();
  void clear_has_installedlist();
  void set_has_icontype();
  void clear_has_icontype();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr installedlist_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 start_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 icontype_;
  friend struct protobuf_mmappmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetRecommendAppListResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetRecommendAppListResponse) */ {
 public:
  GetRecommendAppListResponse();
  virtual ~GetRecommendAppListResponse();

  GetRecommendAppListResponse(const GetRecommendAppListResponse& from);

  inline GetRecommendAppListResponse& operator=(const GetRecommendAppListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRecommendAppListResponse& default_instance();

  static inline const GetRecommendAppListResponse* internal_default_instance() {
    return reinterpret_cast<const GetRecommendAppListResponse*>(
               &_GetRecommendAppListResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(GetRecommendAppListResponse* other);

  // implements Message ----------------------------------------------

  inline GetRecommendAppListResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetRecommendAppListResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetRecommendAppListResponse& from);
  void MergeFrom(const GetRecommendAppListResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetRecommendAppListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.OpenAppInfo AppList = 4;
  int applist_size() const;
  void clear_applist();
  static const int kAppListFieldNumber = 4;
  const ::micromsg::OpenAppInfo& applist(int index) const;
  ::micromsg::OpenAppInfo* mutable_applist(int index);
  ::micromsg::OpenAppInfo* add_applist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::OpenAppInfo >*
      mutable_applist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::OpenAppInfo >&
      applist() const;

  // required .micromsg.BaseResponse BaseResponse = 2;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 2;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 Total = 1;
  bool has_total() const;
  void clear_total();
  static const int kTotalFieldNumber = 1;
  ::google::protobuf::uint32 total() const;
  void set_total(::google::protobuf::uint32 value);

  // required uint32 Count = 3;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetRecommendAppListResponse)
 private:
  void set_has_total();
  void clear_has_total();
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_count();
  void clear_has_count();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::OpenAppInfo > applist_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 total_;
  ::google::protobuf::uint32 count_;
  friend struct protobuf_mmappmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckPCWechatFileRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.CheckPCWechatFileRequest) */ {
 public:
  CheckPCWechatFileRequest();
  virtual ~CheckPCWechatFileRequest();

  CheckPCWechatFileRequest(const CheckPCWechatFileRequest& from);

  inline CheckPCWechatFileRequest& operator=(const CheckPCWechatFileRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckPCWechatFileRequest& default_instance();

  static inline const CheckPCWechatFileRequest* internal_default_instance() {
    return reinterpret_cast<const CheckPCWechatFileRequest*>(
               &_CheckPCWechatFileRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(CheckPCWechatFileRequest* other);

  // implements Message ----------------------------------------------

  inline CheckPCWechatFileRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckPCWechatFileRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckPCWechatFileRequest& from);
  void MergeFrom(const CheckPCWechatFileRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckPCWechatFileRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string FileName = 1;
  bool has_filename() const;
  void clear_filename();
  static const int kFileNameFieldNumber = 1;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // optional string MD5 = 2;
  bool has_md5() const;
  void clear_md5();
  static const int kMD5FieldNumber = 2;
  const ::std::string& md5() const;
  void set_md5(const ::std::string& value);
  #if LANG_CXX11
  void set_md5(::std::string&& value);
  #endif
  void set_md5(const char* value);
  void set_md5(const char* value, size_t size);
  ::std::string* mutable_md5();
  ::std::string* release_md5();
  void set_allocated_md5(::std::string* md5);

  // optional string FileId = 3;
  bool has_fileid() const;
  void clear_fileid();
  static const int kFileIdFieldNumber = 3;
  const ::std::string& fileid() const;
  void set_fileid(const ::std::string& value);
  #if LANG_CXX11
  void set_fileid(::std::string&& value);
  #endif
  void set_fileid(const char* value);
  void set_fileid(const char* value, size_t size);
  ::std::string* mutable_fileid();
  ::std::string* release_fileid();
  void set_allocated_fileid(::std::string* fileid);

  // optional string AesKey = 4;
  bool has_aeskey() const;
  void clear_aeskey();
  static const int kAesKeyFieldNumber = 4;
  const ::std::string& aeskey() const;
  void set_aeskey(const ::std::string& value);
  #if LANG_CXX11
  void set_aeskey(::std::string&& value);
  #endif
  void set_aeskey(const char* value);
  void set_aeskey(const char* value, size_t size);
  ::std::string* mutable_aeskey();
  ::std::string* release_aeskey();
  void set_allocated_aeskey(::std::string* aeskey);

  // optional string FromUsername = 5;
  bool has_fromusername() const;
  void clear_fromusername();
  static const int kFromUsernameFieldNumber = 5;
  const ::std::string& fromusername() const;
  void set_fromusername(const ::std::string& value);
  #if LANG_CXX11
  void set_fromusername(::std::string&& value);
  #endif
  void set_fromusername(const char* value);
  void set_fromusername(const char* value, size_t size);
  ::std::string* mutable_fromusername();
  ::std::string* release_fromusername();
  void set_allocated_fromusername(::std::string* fromusername);

  // optional string ToUsername = 6;
  bool has_tousername() const;
  void clear_tousername();
  static const int kToUsernameFieldNumber = 6;
  const ::std::string& tousername() const;
  void set_tousername(const ::std::string& value);
  #if LANG_CXX11
  void set_tousername(::std::string&& value);
  #endif
  void set_tousername(const char* value);
  void set_tousername(const char* value, size_t size);
  ::std::string* mutable_tousername();
  ::std::string* release_tousername();
  void set_allocated_tousername(::std::string* tousername);

  // @@protoc_insertion_point(class_scope:micromsg.CheckPCWechatFileRequest)
 private:
  void set_has_filename();
  void clear_has_filename();
  void set_has_md5();
  void clear_has_md5();
  void set_has_fileid();
  void clear_has_fileid();
  void set_has_aeskey();
  void clear_has_aeskey();
  void set_has_fromusername();
  void clear_has_fromusername();
  void set_has_tousername();
  void clear_has_tousername();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::internal::ArenaStringPtr md5_;
  ::google::protobuf::internal::ArenaStringPtr fileid_;
  ::google::protobuf::internal::ArenaStringPtr aeskey_;
  ::google::protobuf::internal::ArenaStringPtr fromusername_;
  ::google::protobuf::internal::ArenaStringPtr tousername_;
  friend struct protobuf_mmappmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckPCWechatFileResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.CheckPCWechatFileResponse) */ {
 public:
  CheckPCWechatFileResponse();
  virtual ~CheckPCWechatFileResponse();

  CheckPCWechatFileResponse(const CheckPCWechatFileResponse& from);

  inline CheckPCWechatFileResponse& operator=(const CheckPCWechatFileResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckPCWechatFileResponse& default_instance();

  static inline const CheckPCWechatFileResponse* internal_default_instance() {
    return reinterpret_cast<const CheckPCWechatFileResponse*>(
               &_CheckPCWechatFileResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(CheckPCWechatFileResponse* other);

  // implements Message ----------------------------------------------

  inline CheckPCWechatFileResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckPCWechatFileResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckPCWechatFileResponse& from);
  void MergeFrom(const CheckPCWechatFileResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckPCWechatFileResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // optional int32 BlockStatus = 2;
  bool has_blockstatus() const;
  void clear_blockstatus();
  static const int kBlockStatusFieldNumber = 2;
  ::google::protobuf::int32 blockstatus() const;
  void set_blockstatus(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.CheckPCWechatFileResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_blockstatus();
  void clear_has_blockstatus();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::int32 blockstatus_;
  friend struct protobuf_mmappmsg_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// AppMsg

// optional string FromUserName = 1;
inline bool AppMsg::has_fromusername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppMsg::set_has_fromusername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppMsg::clear_has_fromusername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppMsg::clear_fromusername() {
  fromusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fromusername();
}
inline const ::std::string& AppMsg::fromusername() const {
  // @@protoc_insertion_point(field_get:micromsg.AppMsg.FromUserName)
  return fromusername_.GetNoArena();
}
inline void AppMsg::set_fromusername(const ::std::string& value) {
  set_has_fromusername();
  fromusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AppMsg.FromUserName)
}
#if LANG_CXX11
inline void AppMsg::set_fromusername(::std::string&& value) {
  set_has_fromusername();
  fromusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AppMsg.FromUserName)
}
#endif
inline void AppMsg::set_fromusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_fromusername();
  fromusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AppMsg.FromUserName)
}
inline void AppMsg::set_fromusername(const char* value, size_t size) {
  set_has_fromusername();
  fromusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AppMsg.FromUserName)
}
inline ::std::string* AppMsg::mutable_fromusername() {
  set_has_fromusername();
  // @@protoc_insertion_point(field_mutable:micromsg.AppMsg.FromUserName)
  return fromusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppMsg::release_fromusername() {
  // @@protoc_insertion_point(field_release:micromsg.AppMsg.FromUserName)
  clear_has_fromusername();
  return fromusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppMsg::set_allocated_fromusername(::std::string* fromusername) {
  if (fromusername != NULL) {
    set_has_fromusername();
  } else {
    clear_has_fromusername();
  }
  fromusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromusername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppMsg.FromUserName)
}

// optional string AppId = 2;
inline bool AppMsg::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppMsg::set_has_appid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppMsg::clear_has_appid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppMsg::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
inline const ::std::string& AppMsg::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.AppMsg.AppId)
  return appid_.GetNoArena();
}
inline void AppMsg::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AppMsg.AppId)
}
#if LANG_CXX11
inline void AppMsg::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AppMsg.AppId)
}
#endif
inline void AppMsg::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AppMsg.AppId)
}
inline void AppMsg::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AppMsg.AppId)
}
inline ::std::string* AppMsg::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.AppMsg.AppId)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppMsg::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.AppMsg.AppId)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppMsg::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppMsg.AppId)
}

// required uint32 SdkVersion = 3;
inline bool AppMsg::has_sdkversion() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void AppMsg::set_has_sdkversion() {
  _has_bits_[0] |= 0x00000400u;
}
inline void AppMsg::clear_has_sdkversion() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void AppMsg::clear_sdkversion() {
  sdkversion_ = 0u;
  clear_has_sdkversion();
}
inline ::google::protobuf::uint32 AppMsg::sdkversion() const {
  // @@protoc_insertion_point(field_get:micromsg.AppMsg.SdkVersion)
  return sdkversion_;
}
inline void AppMsg::set_sdkversion(::google::protobuf::uint32 value) {
  set_has_sdkversion();
  sdkversion_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AppMsg.SdkVersion)
}

// optional string ToUserName = 4;
inline bool AppMsg::has_tousername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AppMsg::set_has_tousername() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AppMsg::clear_has_tousername() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AppMsg::clear_tousername() {
  tousername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tousername();
}
inline const ::std::string& AppMsg::tousername() const {
  // @@protoc_insertion_point(field_get:micromsg.AppMsg.ToUserName)
  return tousername_.GetNoArena();
}
inline void AppMsg::set_tousername(const ::std::string& value) {
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AppMsg.ToUserName)
}
#if LANG_CXX11
inline void AppMsg::set_tousername(::std::string&& value) {
  set_has_tousername();
  tousername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AppMsg.ToUserName)
}
#endif
inline void AppMsg::set_tousername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AppMsg.ToUserName)
}
inline void AppMsg::set_tousername(const char* value, size_t size) {
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AppMsg.ToUserName)
}
inline ::std::string* AppMsg::mutable_tousername() {
  set_has_tousername();
  // @@protoc_insertion_point(field_mutable:micromsg.AppMsg.ToUserName)
  return tousername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppMsg::release_tousername() {
  // @@protoc_insertion_point(field_release:micromsg.AppMsg.ToUserName)
  clear_has_tousername();
  return tousername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppMsg::set_allocated_tousername(::std::string* tousername) {
  if (tousername != NULL) {
    set_has_tousername();
  } else {
    clear_has_tousername();
  }
  tousername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tousername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppMsg.ToUserName)
}

// required uint32 Type = 5;
inline bool AppMsg::has_type() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void AppMsg::set_has_type() {
  _has_bits_[0] |= 0x00000800u;
}
inline void AppMsg::clear_has_type() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void AppMsg::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 AppMsg::type() const {
  // @@protoc_insertion_point(field_get:micromsg.AppMsg.Type)
  return type_;
}
inline void AppMsg::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AppMsg.Type)
}

// optional string Content = 6;
inline bool AppMsg::has_content() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AppMsg::set_has_content() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AppMsg::clear_has_content() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AppMsg::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& AppMsg::content() const {
  // @@protoc_insertion_point(field_get:micromsg.AppMsg.Content)
  return content_.GetNoArena();
}
inline void AppMsg::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AppMsg.Content)
}
#if LANG_CXX11
inline void AppMsg::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AppMsg.Content)
}
#endif
inline void AppMsg::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AppMsg.Content)
}
inline void AppMsg::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AppMsg.Content)
}
inline ::std::string* AppMsg::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:micromsg.AppMsg.Content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppMsg::release_content() {
  // @@protoc_insertion_point(field_release:micromsg.AppMsg.Content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppMsg::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppMsg.Content)
}

// required uint32 CreateTime = 7;
inline bool AppMsg::has_createtime() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void AppMsg::set_has_createtime() {
  _has_bits_[0] |= 0x00001000u;
}
inline void AppMsg::clear_has_createtime() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void AppMsg::clear_createtime() {
  createtime_ = 0u;
  clear_has_createtime();
}
inline ::google::protobuf::uint32 AppMsg::createtime() const {
  // @@protoc_insertion_point(field_get:micromsg.AppMsg.CreateTime)
  return createtime_;
}
inline void AppMsg::set_createtime(::google::protobuf::uint32 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AppMsg.CreateTime)
}

// optional string ClientMsgId = 8;
inline bool AppMsg::has_clientmsgid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AppMsg::set_has_clientmsgid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AppMsg::clear_has_clientmsgid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AppMsg::clear_clientmsgid() {
  clientmsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_clientmsgid();
}
inline const ::std::string& AppMsg::clientmsgid() const {
  // @@protoc_insertion_point(field_get:micromsg.AppMsg.ClientMsgId)
  return clientmsgid_.GetNoArena();
}
inline void AppMsg::set_clientmsgid(const ::std::string& value) {
  set_has_clientmsgid();
  clientmsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AppMsg.ClientMsgId)
}
#if LANG_CXX11
inline void AppMsg::set_clientmsgid(::std::string&& value) {
  set_has_clientmsgid();
  clientmsgid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AppMsg.ClientMsgId)
}
#endif
inline void AppMsg::set_clientmsgid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_clientmsgid();
  clientmsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AppMsg.ClientMsgId)
}
inline void AppMsg::set_clientmsgid(const char* value, size_t size) {
  set_has_clientmsgid();
  clientmsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AppMsg.ClientMsgId)
}
inline ::std::string* AppMsg::mutable_clientmsgid() {
  set_has_clientmsgid();
  // @@protoc_insertion_point(field_mutable:micromsg.AppMsg.ClientMsgId)
  return clientmsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppMsg::release_clientmsgid() {
  // @@protoc_insertion_point(field_release:micromsg.AppMsg.ClientMsgId)
  clear_has_clientmsgid();
  return clientmsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppMsg::set_allocated_clientmsgid(::std::string* clientmsgid) {
  if (clientmsgid != NULL) {
    set_has_clientmsgid();
  } else {
    clear_has_clientmsgid();
  }
  clientmsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientmsgid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppMsg.ClientMsgId)
}

// optional .micromsg.SKBuiltinBuffer_t Thumb = 9;
inline bool AppMsg::has_thumb() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void AppMsg::set_has_thumb() {
  _has_bits_[0] |= 0x00000200u;
}
inline void AppMsg::clear_has_thumb() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void AppMsg::clear_thumb() {
  if (thumb_ != NULL) thumb_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_thumb();
}
inline const ::micromsg::SKBuiltinBuffer_t& AppMsg::thumb() const {
  // @@protoc_insertion_point(field_get:micromsg.AppMsg.Thumb)
  return thumb_ != NULL ? *thumb_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* AppMsg::mutable_thumb() {
  set_has_thumb();
  if (thumb_ == NULL) {
    thumb_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.AppMsg.Thumb)
  return thumb_;
}
inline ::micromsg::SKBuiltinBuffer_t* AppMsg::release_thumb() {
  // @@protoc_insertion_point(field_release:micromsg.AppMsg.Thumb)
  clear_has_thumb();
  ::micromsg::SKBuiltinBuffer_t* temp = thumb_;
  thumb_ = NULL;
  return temp;
}
inline void AppMsg::set_allocated_thumb(::micromsg::SKBuiltinBuffer_t* thumb) {
  delete thumb_;
  thumb_ = thumb;
  if (thumb) {
    set_has_thumb();
  } else {
    clear_has_thumb();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppMsg.Thumb)
}

// optional int32 Source = 10;
inline bool AppMsg::has_source() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void AppMsg::set_has_source() {
  _has_bits_[0] |= 0x00002000u;
}
inline void AppMsg::clear_has_source() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void AppMsg::clear_source() {
  source_ = 0;
  clear_has_source();
}
inline ::google::protobuf::int32 AppMsg::source() const {
  // @@protoc_insertion_point(field_get:micromsg.AppMsg.Source)
  return source_;
}
inline void AppMsg::set_source(::google::protobuf::int32 value) {
  set_has_source();
  source_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AppMsg.Source)
}

// optional int32 RemindId = 11;
inline bool AppMsg::has_remindid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void AppMsg::set_has_remindid() {
  _has_bits_[0] |= 0x00004000u;
}
inline void AppMsg::clear_has_remindid() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void AppMsg::clear_remindid() {
  remindid_ = 0;
  clear_has_remindid();
}
inline ::google::protobuf::int32 AppMsg::remindid() const {
  // @@protoc_insertion_point(field_get:micromsg.AppMsg.RemindId)
  return remindid_;
}
inline void AppMsg::set_remindid(::google::protobuf::int32 value) {
  set_has_remindid();
  remindid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AppMsg.RemindId)
}

// optional string MsgSource = 12;
inline bool AppMsg::has_msgsource() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AppMsg::set_has_msgsource() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AppMsg::clear_has_msgsource() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AppMsg::clear_msgsource() {
  msgsource_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msgsource();
}
inline const ::std::string& AppMsg::msgsource() const {
  // @@protoc_insertion_point(field_get:micromsg.AppMsg.MsgSource)
  return msgsource_.GetNoArena();
}
inline void AppMsg::set_msgsource(const ::std::string& value) {
  set_has_msgsource();
  msgsource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AppMsg.MsgSource)
}
#if LANG_CXX11
inline void AppMsg::set_msgsource(::std::string&& value) {
  set_has_msgsource();
  msgsource_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AppMsg.MsgSource)
}
#endif
inline void AppMsg::set_msgsource(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msgsource();
  msgsource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AppMsg.MsgSource)
}
inline void AppMsg::set_msgsource(const char* value, size_t size) {
  set_has_msgsource();
  msgsource_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AppMsg.MsgSource)
}
inline ::std::string* AppMsg::mutable_msgsource() {
  set_has_msgsource();
  // @@protoc_insertion_point(field_mutable:micromsg.AppMsg.MsgSource)
  return msgsource_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppMsg::release_msgsource() {
  // @@protoc_insertion_point(field_release:micromsg.AppMsg.MsgSource)
  clear_has_msgsource();
  return msgsource_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppMsg::set_allocated_msgsource(::std::string* msgsource) {
  if (msgsource != NULL) {
    set_has_msgsource();
  } else {
    clear_has_msgsource();
  }
  msgsource_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgsource);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppMsg.MsgSource)
}

// optional string ShareUrlOriginal = 13;
inline bool AppMsg::has_shareurloriginal() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AppMsg::set_has_shareurloriginal() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AppMsg::clear_has_shareurloriginal() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AppMsg::clear_shareurloriginal() {
  shareurloriginal_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_shareurloriginal();
}
inline const ::std::string& AppMsg::shareurloriginal() const {
  // @@protoc_insertion_point(field_get:micromsg.AppMsg.ShareUrlOriginal)
  return shareurloriginal_.GetNoArena();
}
inline void AppMsg::set_shareurloriginal(const ::std::string& value) {
  set_has_shareurloriginal();
  shareurloriginal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AppMsg.ShareUrlOriginal)
}
#if LANG_CXX11
inline void AppMsg::set_shareurloriginal(::std::string&& value) {
  set_has_shareurloriginal();
  shareurloriginal_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AppMsg.ShareUrlOriginal)
}
#endif
inline void AppMsg::set_shareurloriginal(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_shareurloriginal();
  shareurloriginal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AppMsg.ShareUrlOriginal)
}
inline void AppMsg::set_shareurloriginal(const char* value, size_t size) {
  set_has_shareurloriginal();
  shareurloriginal_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AppMsg.ShareUrlOriginal)
}
inline ::std::string* AppMsg::mutable_shareurloriginal() {
  set_has_shareurloriginal();
  // @@protoc_insertion_point(field_mutable:micromsg.AppMsg.ShareUrlOriginal)
  return shareurloriginal_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppMsg::release_shareurloriginal() {
  // @@protoc_insertion_point(field_release:micromsg.AppMsg.ShareUrlOriginal)
  clear_has_shareurloriginal();
  return shareurloriginal_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppMsg::set_allocated_shareurloriginal(::std::string* shareurloriginal) {
  if (shareurloriginal != NULL) {
    set_has_shareurloriginal();
  } else {
    clear_has_shareurloriginal();
  }
  shareurloriginal_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shareurloriginal);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppMsg.ShareUrlOriginal)
}

// optional string ShareUrlOpen = 14;
inline bool AppMsg::has_shareurlopen() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AppMsg::set_has_shareurlopen() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AppMsg::clear_has_shareurlopen() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AppMsg::clear_shareurlopen() {
  shareurlopen_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_shareurlopen();
}
inline const ::std::string& AppMsg::shareurlopen() const {
  // @@protoc_insertion_point(field_get:micromsg.AppMsg.ShareUrlOpen)
  return shareurlopen_.GetNoArena();
}
inline void AppMsg::set_shareurlopen(const ::std::string& value) {
  set_has_shareurlopen();
  shareurlopen_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AppMsg.ShareUrlOpen)
}
#if LANG_CXX11
inline void AppMsg::set_shareurlopen(::std::string&& value) {
  set_has_shareurlopen();
  shareurlopen_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AppMsg.ShareUrlOpen)
}
#endif
inline void AppMsg::set_shareurlopen(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_shareurlopen();
  shareurlopen_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AppMsg.ShareUrlOpen)
}
inline void AppMsg::set_shareurlopen(const char* value, size_t size) {
  set_has_shareurlopen();
  shareurlopen_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AppMsg.ShareUrlOpen)
}
inline ::std::string* AppMsg::mutable_shareurlopen() {
  set_has_shareurlopen();
  // @@protoc_insertion_point(field_mutable:micromsg.AppMsg.ShareUrlOpen)
  return shareurlopen_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppMsg::release_shareurlopen() {
  // @@protoc_insertion_point(field_release:micromsg.AppMsg.ShareUrlOpen)
  clear_has_shareurlopen();
  return shareurlopen_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppMsg::set_allocated_shareurlopen(::std::string* shareurlopen) {
  if (shareurlopen != NULL) {
    set_has_shareurlopen();
  } else {
    clear_has_shareurlopen();
  }
  shareurlopen_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shareurlopen);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppMsg.ShareUrlOpen)
}

// optional string JsAppId = 15;
inline bool AppMsg::has_jsappid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AppMsg::set_has_jsappid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AppMsg::clear_has_jsappid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AppMsg::clear_jsappid() {
  jsappid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_jsappid();
}
inline const ::std::string& AppMsg::jsappid() const {
  // @@protoc_insertion_point(field_get:micromsg.AppMsg.JsAppId)
  return jsappid_.GetNoArena();
}
inline void AppMsg::set_jsappid(const ::std::string& value) {
  set_has_jsappid();
  jsappid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AppMsg.JsAppId)
}
#if LANG_CXX11
inline void AppMsg::set_jsappid(::std::string&& value) {
  set_has_jsappid();
  jsappid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AppMsg.JsAppId)
}
#endif
inline void AppMsg::set_jsappid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_jsappid();
  jsappid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AppMsg.JsAppId)
}
inline void AppMsg::set_jsappid(const char* value, size_t size) {
  set_has_jsappid();
  jsappid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AppMsg.JsAppId)
}
inline ::std::string* AppMsg::mutable_jsappid() {
  set_has_jsappid();
  // @@protoc_insertion_point(field_mutable:micromsg.AppMsg.JsAppId)
  return jsappid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppMsg::release_jsappid() {
  // @@protoc_insertion_point(field_release:micromsg.AppMsg.JsAppId)
  clear_has_jsappid();
  return jsappid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppMsg::set_allocated_jsappid(::std::string* jsappid) {
  if (jsappid != NULL) {
    set_has_jsappid();
  } else {
    clear_has_jsappid();
  }
  jsappid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), jsappid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppMsg.JsAppId)
}

// -------------------------------------------------------------------

// SendAppMsgRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool SendAppMsgRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SendAppMsgRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SendAppMsgRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SendAppMsgRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& SendAppMsgRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* SendAppMsgRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SendAppMsgRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* SendAppMsgRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SendAppMsgRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void SendAppMsgRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendAppMsgRequest.BaseRequest)
}

// required .micromsg.AppMsg Msg = 2;
inline bool SendAppMsgRequest::has_msg() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SendAppMsgRequest::set_has_msg() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SendAppMsgRequest::clear_has_msg() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SendAppMsgRequest::clear_msg() {
  if (msg_ != NULL) msg_->::micromsg::AppMsg::Clear();
  clear_has_msg();
}
inline const ::micromsg::AppMsg& SendAppMsgRequest::msg() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgRequest.Msg)
  return msg_ != NULL ? *msg_
                         : *::micromsg::AppMsg::internal_default_instance();
}
inline ::micromsg::AppMsg* SendAppMsgRequest::mutable_msg() {
  set_has_msg();
  if (msg_ == NULL) {
    msg_ = new ::micromsg::AppMsg;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SendAppMsgRequest.Msg)
  return msg_;
}
inline ::micromsg::AppMsg* SendAppMsgRequest::release_msg() {
  // @@protoc_insertion_point(field_release:micromsg.SendAppMsgRequest.Msg)
  clear_has_msg();
  ::micromsg::AppMsg* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline void SendAppMsgRequest::set_allocated_msg(::micromsg::AppMsg* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendAppMsgRequest.Msg)
}

// optional string CommentUrl = 3;
inline bool SendAppMsgRequest::has_commenturl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendAppMsgRequest::set_has_commenturl() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendAppMsgRequest::clear_has_commenturl() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendAppMsgRequest::clear_commenturl() {
  commenturl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_commenturl();
}
inline const ::std::string& SendAppMsgRequest::commenturl() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgRequest.CommentUrl)
  return commenturl_.GetNoArena();
}
inline void SendAppMsgRequest::set_commenturl(const ::std::string& value) {
  set_has_commenturl();
  commenturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgRequest.CommentUrl)
}
#if LANG_CXX11
inline void SendAppMsgRequest::set_commenturl(::std::string&& value) {
  set_has_commenturl();
  commenturl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendAppMsgRequest.CommentUrl)
}
#endif
inline void SendAppMsgRequest::set_commenturl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_commenturl();
  commenturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendAppMsgRequest.CommentUrl)
}
inline void SendAppMsgRequest::set_commenturl(const char* value, size_t size) {
  set_has_commenturl();
  commenturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendAppMsgRequest.CommentUrl)
}
inline ::std::string* SendAppMsgRequest::mutable_commenturl() {
  set_has_commenturl();
  // @@protoc_insertion_point(field_mutable:micromsg.SendAppMsgRequest.CommentUrl)
  return commenturl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendAppMsgRequest::release_commenturl() {
  // @@protoc_insertion_point(field_release:micromsg.SendAppMsgRequest.CommentUrl)
  clear_has_commenturl();
  return commenturl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendAppMsgRequest::set_allocated_commenturl(::std::string* commenturl) {
  if (commenturl != NULL) {
    set_has_commenturl();
  } else {
    clear_has_commenturl();
  }
  commenturl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commenturl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendAppMsgRequest.CommentUrl)
}

// optional uint32 ReqTime = 4;
inline bool SendAppMsgRequest::has_reqtime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SendAppMsgRequest::set_has_reqtime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SendAppMsgRequest::clear_has_reqtime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SendAppMsgRequest::clear_reqtime() {
  reqtime_ = 0u;
  clear_has_reqtime();
}
inline ::google::protobuf::uint32 SendAppMsgRequest::reqtime() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgRequest.ReqTime)
  return reqtime_;
}
inline void SendAppMsgRequest::set_reqtime(::google::protobuf::uint32 value) {
  set_has_reqtime();
  reqtime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgRequest.ReqTime)
}

// optional string Md5 = 5;
inline bool SendAppMsgRequest::has_md5() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendAppMsgRequest::set_has_md5() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendAppMsgRequest::clear_has_md5() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendAppMsgRequest::clear_md5() {
  md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_md5();
}
inline const ::std::string& SendAppMsgRequest::md5() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgRequest.Md5)
  return md5_.GetNoArena();
}
inline void SendAppMsgRequest::set_md5(const ::std::string& value) {
  set_has_md5();
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgRequest.Md5)
}
#if LANG_CXX11
inline void SendAppMsgRequest::set_md5(::std::string&& value) {
  set_has_md5();
  md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendAppMsgRequest.Md5)
}
#endif
inline void SendAppMsgRequest::set_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_md5();
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendAppMsgRequest.Md5)
}
inline void SendAppMsgRequest::set_md5(const char* value, size_t size) {
  set_has_md5();
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendAppMsgRequest.Md5)
}
inline ::std::string* SendAppMsgRequest::mutable_md5() {
  set_has_md5();
  // @@protoc_insertion_point(field_mutable:micromsg.SendAppMsgRequest.Md5)
  return md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendAppMsgRequest::release_md5() {
  // @@protoc_insertion_point(field_release:micromsg.SendAppMsgRequest.Md5)
  clear_has_md5();
  return md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendAppMsgRequest::set_allocated_md5(::std::string* md5) {
  if (md5 != NULL) {
    set_has_md5();
  } else {
    clear_has_md5();
  }
  md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), md5);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendAppMsgRequest.Md5)
}

// optional uint32 FileType = 6;
inline bool SendAppMsgRequest::has_filetype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SendAppMsgRequest::set_has_filetype() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SendAppMsgRequest::clear_has_filetype() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SendAppMsgRequest::clear_filetype() {
  filetype_ = 0u;
  clear_has_filetype();
}
inline ::google::protobuf::uint32 SendAppMsgRequest::filetype() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgRequest.FileType)
  return filetype_;
}
inline void SendAppMsgRequest::set_filetype(::google::protobuf::uint32 value) {
  set_has_filetype();
  filetype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgRequest.FileType)
}

// optional string Signature = 7;
inline bool SendAppMsgRequest::has_signature() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendAppMsgRequest::set_has_signature() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendAppMsgRequest::clear_has_signature() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendAppMsgRequest::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_signature();
}
inline const ::std::string& SendAppMsgRequest::signature() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgRequest.Signature)
  return signature_.GetNoArena();
}
inline void SendAppMsgRequest::set_signature(const ::std::string& value) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgRequest.Signature)
}
#if LANG_CXX11
inline void SendAppMsgRequest::set_signature(::std::string&& value) {
  set_has_signature();
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendAppMsgRequest.Signature)
}
#endif
inline void SendAppMsgRequest::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendAppMsgRequest.Signature)
}
inline void SendAppMsgRequest::set_signature(const char* value, size_t size) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendAppMsgRequest.Signature)
}
inline ::std::string* SendAppMsgRequest::mutable_signature() {
  set_has_signature();
  // @@protoc_insertion_point(field_mutable:micromsg.SendAppMsgRequest.Signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendAppMsgRequest::release_signature() {
  // @@protoc_insertion_point(field_release:micromsg.SendAppMsgRequest.Signature)
  clear_has_signature();
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendAppMsgRequest::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    set_has_signature();
  } else {
    clear_has_signature();
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendAppMsgRequest.Signature)
}

// optional string FromSence = 8;
inline bool SendAppMsgRequest::has_fromsence() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SendAppMsgRequest::set_has_fromsence() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SendAppMsgRequest::clear_has_fromsence() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SendAppMsgRequest::clear_fromsence() {
  fromsence_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fromsence();
}
inline const ::std::string& SendAppMsgRequest::fromsence() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgRequest.FromSence)
  return fromsence_.GetNoArena();
}
inline void SendAppMsgRequest::set_fromsence(const ::std::string& value) {
  set_has_fromsence();
  fromsence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgRequest.FromSence)
}
#if LANG_CXX11
inline void SendAppMsgRequest::set_fromsence(::std::string&& value) {
  set_has_fromsence();
  fromsence_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendAppMsgRequest.FromSence)
}
#endif
inline void SendAppMsgRequest::set_fromsence(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_fromsence();
  fromsence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendAppMsgRequest.FromSence)
}
inline void SendAppMsgRequest::set_fromsence(const char* value, size_t size) {
  set_has_fromsence();
  fromsence_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendAppMsgRequest.FromSence)
}
inline ::std::string* SendAppMsgRequest::mutable_fromsence() {
  set_has_fromsence();
  // @@protoc_insertion_point(field_mutable:micromsg.SendAppMsgRequest.FromSence)
  return fromsence_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendAppMsgRequest::release_fromsence() {
  // @@protoc_insertion_point(field_release:micromsg.SendAppMsgRequest.FromSence)
  clear_has_fromsence();
  return fromsence_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendAppMsgRequest::set_allocated_fromsence(::std::string* fromsence) {
  if (fromsence != NULL) {
    set_has_fromsence();
  } else {
    clear_has_fromsence();
  }
  fromsence_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromsence);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendAppMsgRequest.FromSence)
}

// optional uint32 HitMd5 = 9;
inline bool SendAppMsgRequest::has_hitmd5() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SendAppMsgRequest::set_has_hitmd5() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SendAppMsgRequest::clear_has_hitmd5() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SendAppMsgRequest::clear_hitmd5() {
  hitmd5_ = 0u;
  clear_has_hitmd5();
}
inline ::google::protobuf::uint32 SendAppMsgRequest::hitmd5() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgRequest.HitMd5)
  return hitmd5_;
}
inline void SendAppMsgRequest::set_hitmd5(::google::protobuf::uint32 value) {
  set_has_hitmd5();
  hitmd5_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgRequest.HitMd5)
}

// optional uint32 CRC32 = 10;
inline bool SendAppMsgRequest::has_crc32() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SendAppMsgRequest::set_has_crc32() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SendAppMsgRequest::clear_has_crc32() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SendAppMsgRequest::clear_crc32() {
  crc32_ = 0u;
  clear_has_crc32();
}
inline ::google::protobuf::uint32 SendAppMsgRequest::crc32() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgRequest.CRC32)
  return crc32_;
}
inline void SendAppMsgRequest::set_crc32(::google::protobuf::uint32 value) {
  set_has_crc32();
  crc32_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgRequest.CRC32)
}

// optional uint32 MsgForwardType = 11;
inline bool SendAppMsgRequest::has_msgforwardtype() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void SendAppMsgRequest::set_has_msgforwardtype() {
  _has_bits_[0] |= 0x00000400u;
}
inline void SendAppMsgRequest::clear_has_msgforwardtype() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void SendAppMsgRequest::clear_msgforwardtype() {
  msgforwardtype_ = 0u;
  clear_has_msgforwardtype();
}
inline ::google::protobuf::uint32 SendAppMsgRequest::msgforwardtype() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgRequest.MsgForwardType)
  return msgforwardtype_;
}
inline void SendAppMsgRequest::set_msgforwardtype(::google::protobuf::uint32 value) {
  set_has_msgforwardtype();
  msgforwardtype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgRequest.MsgForwardType)
}

// -------------------------------------------------------------------

// SendAppMsgResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool SendAppMsgResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SendAppMsgResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SendAppMsgResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SendAppMsgResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& SendAppMsgResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* SendAppMsgResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SendAppMsgResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* SendAppMsgResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.SendAppMsgResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void SendAppMsgResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendAppMsgResponse.BaseResponse)
}

// optional string AppId = 2;
inline bool SendAppMsgResponse::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendAppMsgResponse::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendAppMsgResponse::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendAppMsgResponse::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
inline const ::std::string& SendAppMsgResponse::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgResponse.AppId)
  return appid_.GetNoArena();
}
inline void SendAppMsgResponse::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgResponse.AppId)
}
#if LANG_CXX11
inline void SendAppMsgResponse::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendAppMsgResponse.AppId)
}
#endif
inline void SendAppMsgResponse::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendAppMsgResponse.AppId)
}
inline void SendAppMsgResponse::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendAppMsgResponse.AppId)
}
inline ::std::string* SendAppMsgResponse::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.SendAppMsgResponse.AppId)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendAppMsgResponse::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.SendAppMsgResponse.AppId)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendAppMsgResponse::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendAppMsgResponse.AppId)
}

// optional string FromUserName = 3;
inline bool SendAppMsgResponse::has_fromusername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendAppMsgResponse::set_has_fromusername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendAppMsgResponse::clear_has_fromusername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendAppMsgResponse::clear_fromusername() {
  fromusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fromusername();
}
inline const ::std::string& SendAppMsgResponse::fromusername() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgResponse.FromUserName)
  return fromusername_.GetNoArena();
}
inline void SendAppMsgResponse::set_fromusername(const ::std::string& value) {
  set_has_fromusername();
  fromusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgResponse.FromUserName)
}
#if LANG_CXX11
inline void SendAppMsgResponse::set_fromusername(::std::string&& value) {
  set_has_fromusername();
  fromusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendAppMsgResponse.FromUserName)
}
#endif
inline void SendAppMsgResponse::set_fromusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_fromusername();
  fromusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendAppMsgResponse.FromUserName)
}
inline void SendAppMsgResponse::set_fromusername(const char* value, size_t size) {
  set_has_fromusername();
  fromusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendAppMsgResponse.FromUserName)
}
inline ::std::string* SendAppMsgResponse::mutable_fromusername() {
  set_has_fromusername();
  // @@protoc_insertion_point(field_mutable:micromsg.SendAppMsgResponse.FromUserName)
  return fromusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendAppMsgResponse::release_fromusername() {
  // @@protoc_insertion_point(field_release:micromsg.SendAppMsgResponse.FromUserName)
  clear_has_fromusername();
  return fromusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendAppMsgResponse::set_allocated_fromusername(::std::string* fromusername) {
  if (fromusername != NULL) {
    set_has_fromusername();
  } else {
    clear_has_fromusername();
  }
  fromusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromusername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendAppMsgResponse.FromUserName)
}

// optional string ToUserName = 4;
inline bool SendAppMsgResponse::has_tousername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendAppMsgResponse::set_has_tousername() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendAppMsgResponse::clear_has_tousername() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendAppMsgResponse::clear_tousername() {
  tousername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tousername();
}
inline const ::std::string& SendAppMsgResponse::tousername() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgResponse.ToUserName)
  return tousername_.GetNoArena();
}
inline void SendAppMsgResponse::set_tousername(const ::std::string& value) {
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgResponse.ToUserName)
}
#if LANG_CXX11
inline void SendAppMsgResponse::set_tousername(::std::string&& value) {
  set_has_tousername();
  tousername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendAppMsgResponse.ToUserName)
}
#endif
inline void SendAppMsgResponse::set_tousername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendAppMsgResponse.ToUserName)
}
inline void SendAppMsgResponse::set_tousername(const char* value, size_t size) {
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendAppMsgResponse.ToUserName)
}
inline ::std::string* SendAppMsgResponse::mutable_tousername() {
  set_has_tousername();
  // @@protoc_insertion_point(field_mutable:micromsg.SendAppMsgResponse.ToUserName)
  return tousername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendAppMsgResponse::release_tousername() {
  // @@protoc_insertion_point(field_release:micromsg.SendAppMsgResponse.ToUserName)
  clear_has_tousername();
  return tousername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendAppMsgResponse::set_allocated_tousername(::std::string* tousername) {
  if (tousername != NULL) {
    set_has_tousername();
  } else {
    clear_has_tousername();
  }
  tousername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tousername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendAppMsgResponse.ToUserName)
}

// required uint32 MsgId = 5;
inline bool SendAppMsgResponse::has_msgid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SendAppMsgResponse::set_has_msgid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SendAppMsgResponse::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SendAppMsgResponse::clear_msgid() {
  msgid_ = 0u;
  clear_has_msgid();
}
inline ::google::protobuf::uint32 SendAppMsgResponse::msgid() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgResponse.MsgId)
  return msgid_;
}
inline void SendAppMsgResponse::set_msgid(::google::protobuf::uint32 value) {
  set_has_msgid();
  msgid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgResponse.MsgId)
}

// optional string ClientMsgId = 6;
inline bool SendAppMsgResponse::has_clientmsgid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SendAppMsgResponse::set_has_clientmsgid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SendAppMsgResponse::clear_has_clientmsgid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SendAppMsgResponse::clear_clientmsgid() {
  clientmsgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_clientmsgid();
}
inline const ::std::string& SendAppMsgResponse::clientmsgid() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgResponse.ClientMsgId)
  return clientmsgid_.GetNoArena();
}
inline void SendAppMsgResponse::set_clientmsgid(const ::std::string& value) {
  set_has_clientmsgid();
  clientmsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgResponse.ClientMsgId)
}
#if LANG_CXX11
inline void SendAppMsgResponse::set_clientmsgid(::std::string&& value) {
  set_has_clientmsgid();
  clientmsgid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendAppMsgResponse.ClientMsgId)
}
#endif
inline void SendAppMsgResponse::set_clientmsgid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_clientmsgid();
  clientmsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendAppMsgResponse.ClientMsgId)
}
inline void SendAppMsgResponse::set_clientmsgid(const char* value, size_t size) {
  set_has_clientmsgid();
  clientmsgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendAppMsgResponse.ClientMsgId)
}
inline ::std::string* SendAppMsgResponse::mutable_clientmsgid() {
  set_has_clientmsgid();
  // @@protoc_insertion_point(field_mutable:micromsg.SendAppMsgResponse.ClientMsgId)
  return clientmsgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendAppMsgResponse::release_clientmsgid() {
  // @@protoc_insertion_point(field_release:micromsg.SendAppMsgResponse.ClientMsgId)
  clear_has_clientmsgid();
  return clientmsgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendAppMsgResponse::set_allocated_clientmsgid(::std::string* clientmsgid) {
  if (clientmsgid != NULL) {
    set_has_clientmsgid();
  } else {
    clear_has_clientmsgid();
  }
  clientmsgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientmsgid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendAppMsgResponse.ClientMsgId)
}

// required uint32 CreateTime = 7;
inline bool SendAppMsgResponse::has_createtime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SendAppMsgResponse::set_has_createtime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SendAppMsgResponse::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SendAppMsgResponse::clear_createtime() {
  createtime_ = 0u;
  clear_has_createtime();
}
inline ::google::protobuf::uint32 SendAppMsgResponse::createtime() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgResponse.CreateTime)
  return createtime_;
}
inline void SendAppMsgResponse::set_createtime(::google::protobuf::uint32 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgResponse.CreateTime)
}

// optional uint32 Type = 8;
inline bool SendAppMsgResponse::has_type() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SendAppMsgResponse::set_has_type() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SendAppMsgResponse::clear_has_type() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SendAppMsgResponse::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 SendAppMsgResponse::type() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgResponse.Type)
  return type_;
}
inline void SendAppMsgResponse::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgResponse.Type)
}

// optional uint64 NewMsgId = 9;
inline bool SendAppMsgResponse::has_newmsgid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SendAppMsgResponse::set_has_newmsgid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SendAppMsgResponse::clear_has_newmsgid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SendAppMsgResponse::clear_newmsgid() {
  newmsgid_ = GOOGLE_ULONGLONG(0);
  clear_has_newmsgid();
}
inline ::google::protobuf::uint64 SendAppMsgResponse::newmsgid() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgResponse.NewMsgId)
  return newmsgid_;
}
inline void SendAppMsgResponse::set_newmsgid(::google::protobuf::uint64 value) {
  set_has_newmsgid();
  newmsgid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgResponse.NewMsgId)
}

// optional string AESKey = 10;
inline bool SendAppMsgResponse::has_aeskey() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SendAppMsgResponse::set_has_aeskey() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SendAppMsgResponse::clear_has_aeskey() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SendAppMsgResponse::clear_aeskey() {
  aeskey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_aeskey();
}
inline const ::std::string& SendAppMsgResponse::aeskey() const {
  // @@protoc_insertion_point(field_get:micromsg.SendAppMsgResponse.AESKey)
  return aeskey_.GetNoArena();
}
inline void SendAppMsgResponse::set_aeskey(const ::std::string& value) {
  set_has_aeskey();
  aeskey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendAppMsgResponse.AESKey)
}
#if LANG_CXX11
inline void SendAppMsgResponse::set_aeskey(::std::string&& value) {
  set_has_aeskey();
  aeskey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendAppMsgResponse.AESKey)
}
#endif
inline void SendAppMsgResponse::set_aeskey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_aeskey();
  aeskey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendAppMsgResponse.AESKey)
}
inline void SendAppMsgResponse::set_aeskey(const char* value, size_t size) {
  set_has_aeskey();
  aeskey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendAppMsgResponse.AESKey)
}
inline ::std::string* SendAppMsgResponse::mutable_aeskey() {
  set_has_aeskey();
  // @@protoc_insertion_point(field_mutable:micromsg.SendAppMsgResponse.AESKey)
  return aeskey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendAppMsgResponse::release_aeskey() {
  // @@protoc_insertion_point(field_release:micromsg.SendAppMsgResponse.AESKey)
  clear_has_aeskey();
  return aeskey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendAppMsgResponse::set_allocated_aeskey(::std::string* aeskey) {
  if (aeskey != NULL) {
    set_has_aeskey();
  } else {
    clear_has_aeskey();
  }
  aeskey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), aeskey);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendAppMsgResponse.AESKey)
}

// -------------------------------------------------------------------

// DownloadAppAttachRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool DownloadAppAttachRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DownloadAppAttachRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DownloadAppAttachRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DownloadAppAttachRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& DownloadAppAttachRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* DownloadAppAttachRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.DownloadAppAttachRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* DownloadAppAttachRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.DownloadAppAttachRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void DownloadAppAttachRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.DownloadAppAttachRequest.BaseRequest)
}

// optional string AppId = 2;
inline bool DownloadAppAttachRequest::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DownloadAppAttachRequest::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DownloadAppAttachRequest::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DownloadAppAttachRequest::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
inline const ::std::string& DownloadAppAttachRequest::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachRequest.AppId)
  return appid_.GetNoArena();
}
inline void DownloadAppAttachRequest::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.DownloadAppAttachRequest.AppId)
}
#if LANG_CXX11
inline void DownloadAppAttachRequest::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.DownloadAppAttachRequest.AppId)
}
#endif
inline void DownloadAppAttachRequest::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.DownloadAppAttachRequest.AppId)
}
inline void DownloadAppAttachRequest::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.DownloadAppAttachRequest.AppId)
}
inline ::std::string* DownloadAppAttachRequest::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.DownloadAppAttachRequest.AppId)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DownloadAppAttachRequest::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.DownloadAppAttachRequest.AppId)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DownloadAppAttachRequest::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.DownloadAppAttachRequest.AppId)
}

// required uint32 SdkVersion = 3;
inline bool DownloadAppAttachRequest::has_sdkversion() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DownloadAppAttachRequest::set_has_sdkversion() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DownloadAppAttachRequest::clear_has_sdkversion() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DownloadAppAttachRequest::clear_sdkversion() {
  sdkversion_ = 0u;
  clear_has_sdkversion();
}
inline ::google::protobuf::uint32 DownloadAppAttachRequest::sdkversion() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachRequest.SdkVersion)
  return sdkversion_;
}
inline void DownloadAppAttachRequest::set_sdkversion(::google::protobuf::uint32 value) {
  set_has_sdkversion();
  sdkversion_ = value;
  // @@protoc_insertion_point(field_set:micromsg.DownloadAppAttachRequest.SdkVersion)
}

// optional string MediaId = 4;
inline bool DownloadAppAttachRequest::has_mediaid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DownloadAppAttachRequest::set_has_mediaid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DownloadAppAttachRequest::clear_has_mediaid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DownloadAppAttachRequest::clear_mediaid() {
  mediaid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mediaid();
}
inline const ::std::string& DownloadAppAttachRequest::mediaid() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachRequest.MediaId)
  return mediaid_.GetNoArena();
}
inline void DownloadAppAttachRequest::set_mediaid(const ::std::string& value) {
  set_has_mediaid();
  mediaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.DownloadAppAttachRequest.MediaId)
}
#if LANG_CXX11
inline void DownloadAppAttachRequest::set_mediaid(::std::string&& value) {
  set_has_mediaid();
  mediaid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.DownloadAppAttachRequest.MediaId)
}
#endif
inline void DownloadAppAttachRequest::set_mediaid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mediaid();
  mediaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.DownloadAppAttachRequest.MediaId)
}
inline void DownloadAppAttachRequest::set_mediaid(const char* value, size_t size) {
  set_has_mediaid();
  mediaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.DownloadAppAttachRequest.MediaId)
}
inline ::std::string* DownloadAppAttachRequest::mutable_mediaid() {
  set_has_mediaid();
  // @@protoc_insertion_point(field_mutable:micromsg.DownloadAppAttachRequest.MediaId)
  return mediaid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DownloadAppAttachRequest::release_mediaid() {
  // @@protoc_insertion_point(field_release:micromsg.DownloadAppAttachRequest.MediaId)
  clear_has_mediaid();
  return mediaid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DownloadAppAttachRequest::set_allocated_mediaid(::std::string* mediaid) {
  if (mediaid != NULL) {
    set_has_mediaid();
  } else {
    clear_has_mediaid();
  }
  mediaid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mediaid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.DownloadAppAttachRequest.MediaId)
}

// optional string UserName = 5;
inline bool DownloadAppAttachRequest::has_username() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DownloadAppAttachRequest::set_has_username() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DownloadAppAttachRequest::clear_has_username() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DownloadAppAttachRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& DownloadAppAttachRequest::username() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachRequest.UserName)
  return username_.GetNoArena();
}
inline void DownloadAppAttachRequest::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.DownloadAppAttachRequest.UserName)
}
#if LANG_CXX11
inline void DownloadAppAttachRequest::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.DownloadAppAttachRequest.UserName)
}
#endif
inline void DownloadAppAttachRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.DownloadAppAttachRequest.UserName)
}
inline void DownloadAppAttachRequest::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.DownloadAppAttachRequest.UserName)
}
inline ::std::string* DownloadAppAttachRequest::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.DownloadAppAttachRequest.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DownloadAppAttachRequest::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.DownloadAppAttachRequest.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DownloadAppAttachRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.DownloadAppAttachRequest.UserName)
}

// required uint32 TotalLen = 6;
inline bool DownloadAppAttachRequest::has_totallen() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DownloadAppAttachRequest::set_has_totallen() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DownloadAppAttachRequest::clear_has_totallen() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DownloadAppAttachRequest::clear_totallen() {
  totallen_ = 0u;
  clear_has_totallen();
}
inline ::google::protobuf::uint32 DownloadAppAttachRequest::totallen() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachRequest.TotalLen)
  return totallen_;
}
inline void DownloadAppAttachRequest::set_totallen(::google::protobuf::uint32 value) {
  set_has_totallen();
  totallen_ = value;
  // @@protoc_insertion_point(field_set:micromsg.DownloadAppAttachRequest.TotalLen)
}

// required uint32 StartPos = 7;
inline bool DownloadAppAttachRequest::has_startpos() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DownloadAppAttachRequest::set_has_startpos() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DownloadAppAttachRequest::clear_has_startpos() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DownloadAppAttachRequest::clear_startpos() {
  startpos_ = 0u;
  clear_has_startpos();
}
inline ::google::protobuf::uint32 DownloadAppAttachRequest::startpos() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachRequest.StartPos)
  return startpos_;
}
inline void DownloadAppAttachRequest::set_startpos(::google::protobuf::uint32 value) {
  set_has_startpos();
  startpos_ = value;
  // @@protoc_insertion_point(field_set:micromsg.DownloadAppAttachRequest.StartPos)
}

// required uint32 DataLen = 8;
inline bool DownloadAppAttachRequest::has_datalen() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void DownloadAppAttachRequest::set_has_datalen() {
  _has_bits_[0] |= 0x00000100u;
}
inline void DownloadAppAttachRequest::clear_has_datalen() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void DownloadAppAttachRequest::clear_datalen() {
  datalen_ = 0u;
  clear_has_datalen();
}
inline ::google::protobuf::uint32 DownloadAppAttachRequest::datalen() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachRequest.DataLen)
  return datalen_;
}
inline void DownloadAppAttachRequest::set_datalen(::google::protobuf::uint32 value) {
  set_has_datalen();
  datalen_ = value;
  // @@protoc_insertion_point(field_set:micromsg.DownloadAppAttachRequest.DataLen)
}

// optional string OutFmt = 9;
inline bool DownloadAppAttachRequest::has_outfmt() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DownloadAppAttachRequest::set_has_outfmt() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DownloadAppAttachRequest::clear_has_outfmt() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DownloadAppAttachRequest::clear_outfmt() {
  outfmt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_outfmt();
}
inline const ::std::string& DownloadAppAttachRequest::outfmt() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachRequest.OutFmt)
  return outfmt_.GetNoArena();
}
inline void DownloadAppAttachRequest::set_outfmt(const ::std::string& value) {
  set_has_outfmt();
  outfmt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.DownloadAppAttachRequest.OutFmt)
}
#if LANG_CXX11
inline void DownloadAppAttachRequest::set_outfmt(::std::string&& value) {
  set_has_outfmt();
  outfmt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.DownloadAppAttachRequest.OutFmt)
}
#endif
inline void DownloadAppAttachRequest::set_outfmt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_outfmt();
  outfmt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.DownloadAppAttachRequest.OutFmt)
}
inline void DownloadAppAttachRequest::set_outfmt(const char* value, size_t size) {
  set_has_outfmt();
  outfmt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.DownloadAppAttachRequest.OutFmt)
}
inline ::std::string* DownloadAppAttachRequest::mutable_outfmt() {
  set_has_outfmt();
  // @@protoc_insertion_point(field_mutable:micromsg.DownloadAppAttachRequest.OutFmt)
  return outfmt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DownloadAppAttachRequest::release_outfmt() {
  // @@protoc_insertion_point(field_release:micromsg.DownloadAppAttachRequest.OutFmt)
  clear_has_outfmt();
  return outfmt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DownloadAppAttachRequest::set_allocated_outfmt(::std::string* outfmt) {
  if (outfmt != NULL) {
    set_has_outfmt();
  } else {
    clear_has_outfmt();
  }
  outfmt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), outfmt);
  // @@protoc_insertion_point(field_set_allocated:micromsg.DownloadAppAttachRequest.OutFmt)
}

// optional int32 Rotation = 10;
inline bool DownloadAppAttachRequest::has_rotation() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void DownloadAppAttachRequest::set_has_rotation() {
  _has_bits_[0] |= 0x00000200u;
}
inline void DownloadAppAttachRequest::clear_has_rotation() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void DownloadAppAttachRequest::clear_rotation() {
  rotation_ = 0;
  clear_has_rotation();
}
inline ::google::protobuf::int32 DownloadAppAttachRequest::rotation() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachRequest.Rotation)
  return rotation_;
}
inline void DownloadAppAttachRequest::set_rotation(::google::protobuf::int32 value) {
  set_has_rotation();
  rotation_ = value;
  // @@protoc_insertion_point(field_set:micromsg.DownloadAppAttachRequest.Rotation)
}

// optional uint32 Type = 11;
inline bool DownloadAppAttachRequest::has_type() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void DownloadAppAttachRequest::set_has_type() {
  _has_bits_[0] |= 0x00000400u;
}
inline void DownloadAppAttachRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void DownloadAppAttachRequest::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 DownloadAppAttachRequest::type() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachRequest.Type)
  return type_;
}
inline void DownloadAppAttachRequest::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.DownloadAppAttachRequest.Type)
}

// optional uint32 CDNType = 12;
inline bool DownloadAppAttachRequest::has_cdntype() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void DownloadAppAttachRequest::set_has_cdntype() {
  _has_bits_[0] |= 0x00000800u;
}
inline void DownloadAppAttachRequest::clear_has_cdntype() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void DownloadAppAttachRequest::clear_cdntype() {
  cdntype_ = 0u;
  clear_has_cdntype();
}
inline ::google::protobuf::uint32 DownloadAppAttachRequest::cdntype() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachRequest.CDNType)
  return cdntype_;
}
inline void DownloadAppAttachRequest::set_cdntype(::google::protobuf::uint32 value) {
  set_has_cdntype();
  cdntype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.DownloadAppAttachRequest.CDNType)
}

// -------------------------------------------------------------------

// DownloadAppAttachResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool DownloadAppAttachResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DownloadAppAttachResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DownloadAppAttachResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DownloadAppAttachResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& DownloadAppAttachResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* DownloadAppAttachResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.DownloadAppAttachResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* DownloadAppAttachResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.DownloadAppAttachResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void DownloadAppAttachResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.DownloadAppAttachResponse.BaseResponse)
}

// optional string AppId = 2;
inline bool DownloadAppAttachResponse::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DownloadAppAttachResponse::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DownloadAppAttachResponse::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DownloadAppAttachResponse::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
inline const ::std::string& DownloadAppAttachResponse::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachResponse.AppId)
  return appid_.GetNoArena();
}
inline void DownloadAppAttachResponse::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.DownloadAppAttachResponse.AppId)
}
#if LANG_CXX11
inline void DownloadAppAttachResponse::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.DownloadAppAttachResponse.AppId)
}
#endif
inline void DownloadAppAttachResponse::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.DownloadAppAttachResponse.AppId)
}
inline void DownloadAppAttachResponse::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.DownloadAppAttachResponse.AppId)
}
inline ::std::string* DownloadAppAttachResponse::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.DownloadAppAttachResponse.AppId)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DownloadAppAttachResponse::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.DownloadAppAttachResponse.AppId)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DownloadAppAttachResponse::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.DownloadAppAttachResponse.AppId)
}

// optional string MediaId = 3;
inline bool DownloadAppAttachResponse::has_mediaid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DownloadAppAttachResponse::set_has_mediaid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DownloadAppAttachResponse::clear_has_mediaid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DownloadAppAttachResponse::clear_mediaid() {
  mediaid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mediaid();
}
inline const ::std::string& DownloadAppAttachResponse::mediaid() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachResponse.MediaId)
  return mediaid_.GetNoArena();
}
inline void DownloadAppAttachResponse::set_mediaid(const ::std::string& value) {
  set_has_mediaid();
  mediaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.DownloadAppAttachResponse.MediaId)
}
#if LANG_CXX11
inline void DownloadAppAttachResponse::set_mediaid(::std::string&& value) {
  set_has_mediaid();
  mediaid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.DownloadAppAttachResponse.MediaId)
}
#endif
inline void DownloadAppAttachResponse::set_mediaid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mediaid();
  mediaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.DownloadAppAttachResponse.MediaId)
}
inline void DownloadAppAttachResponse::set_mediaid(const char* value, size_t size) {
  set_has_mediaid();
  mediaid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.DownloadAppAttachResponse.MediaId)
}
inline ::std::string* DownloadAppAttachResponse::mutable_mediaid() {
  set_has_mediaid();
  // @@protoc_insertion_point(field_mutable:micromsg.DownloadAppAttachResponse.MediaId)
  return mediaid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DownloadAppAttachResponse::release_mediaid() {
  // @@protoc_insertion_point(field_release:micromsg.DownloadAppAttachResponse.MediaId)
  clear_has_mediaid();
  return mediaid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DownloadAppAttachResponse::set_allocated_mediaid(::std::string* mediaid) {
  if (mediaid != NULL) {
    set_has_mediaid();
  } else {
    clear_has_mediaid();
  }
  mediaid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mediaid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.DownloadAppAttachResponse.MediaId)
}

// optional string UserName = 4;
inline bool DownloadAppAttachResponse::has_username() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DownloadAppAttachResponse::set_has_username() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DownloadAppAttachResponse::clear_has_username() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DownloadAppAttachResponse::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& DownloadAppAttachResponse::username() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachResponse.UserName)
  return username_.GetNoArena();
}
inline void DownloadAppAttachResponse::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.DownloadAppAttachResponse.UserName)
}
#if LANG_CXX11
inline void DownloadAppAttachResponse::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.DownloadAppAttachResponse.UserName)
}
#endif
inline void DownloadAppAttachResponse::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.DownloadAppAttachResponse.UserName)
}
inline void DownloadAppAttachResponse::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.DownloadAppAttachResponse.UserName)
}
inline ::std::string* DownloadAppAttachResponse::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.DownloadAppAttachResponse.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DownloadAppAttachResponse::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.DownloadAppAttachResponse.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DownloadAppAttachResponse::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.DownloadAppAttachResponse.UserName)
}

// required uint32 TotalLen = 5;
inline bool DownloadAppAttachResponse::has_totallen() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DownloadAppAttachResponse::set_has_totallen() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DownloadAppAttachResponse::clear_has_totallen() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DownloadAppAttachResponse::clear_totallen() {
  totallen_ = 0u;
  clear_has_totallen();
}
inline ::google::protobuf::uint32 DownloadAppAttachResponse::totallen() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachResponse.TotalLen)
  return totallen_;
}
inline void DownloadAppAttachResponse::set_totallen(::google::protobuf::uint32 value) {
  set_has_totallen();
  totallen_ = value;
  // @@protoc_insertion_point(field_set:micromsg.DownloadAppAttachResponse.TotalLen)
}

// required uint32 StartPos = 6;
inline bool DownloadAppAttachResponse::has_startpos() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void DownloadAppAttachResponse::set_has_startpos() {
  _has_bits_[0] |= 0x00000040u;
}
inline void DownloadAppAttachResponse::clear_has_startpos() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void DownloadAppAttachResponse::clear_startpos() {
  startpos_ = 0u;
  clear_has_startpos();
}
inline ::google::protobuf::uint32 DownloadAppAttachResponse::startpos() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachResponse.StartPos)
  return startpos_;
}
inline void DownloadAppAttachResponse::set_startpos(::google::protobuf::uint32 value) {
  set_has_startpos();
  startpos_ = value;
  // @@protoc_insertion_point(field_set:micromsg.DownloadAppAttachResponse.StartPos)
}

// required uint32 DataLen = 7;
inline bool DownloadAppAttachResponse::has_datalen() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void DownloadAppAttachResponse::set_has_datalen() {
  _has_bits_[0] |= 0x00000080u;
}
inline void DownloadAppAttachResponse::clear_has_datalen() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void DownloadAppAttachResponse::clear_datalen() {
  datalen_ = 0u;
  clear_has_datalen();
}
inline ::google::protobuf::uint32 DownloadAppAttachResponse::datalen() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachResponse.DataLen)
  return datalen_;
}
inline void DownloadAppAttachResponse::set_datalen(::google::protobuf::uint32 value) {
  set_has_datalen();
  datalen_ = value;
  // @@protoc_insertion_point(field_set:micromsg.DownloadAppAttachResponse.DataLen)
}

// required .micromsg.SKBuiltinBuffer_t Data = 8;
inline bool DownloadAppAttachResponse::has_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DownloadAppAttachResponse::set_has_data() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DownloadAppAttachResponse::clear_has_data() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DownloadAppAttachResponse::clear_data() {
  if (data_ != NULL) data_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_data();
}
inline const ::micromsg::SKBuiltinBuffer_t& DownloadAppAttachResponse::data() const {
  // @@protoc_insertion_point(field_get:micromsg.DownloadAppAttachResponse.Data)
  return data_ != NULL ? *data_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* DownloadAppAttachResponse::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.DownloadAppAttachResponse.Data)
  return data_;
}
inline ::micromsg::SKBuiltinBuffer_t* DownloadAppAttachResponse::release_data() {
  // @@protoc_insertion_point(field_release:micromsg.DownloadAppAttachResponse.Data)
  clear_has_data();
  ::micromsg::SKBuiltinBuffer_t* temp = data_;
  data_ = NULL;
  return temp;
}
inline void DownloadAppAttachResponse::set_allocated_data(::micromsg::SKBuiltinBuffer_t* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.DownloadAppAttachResponse.Data)
}

// -------------------------------------------------------------------

// OpenAppInfo

// optional string AppID = 1;
inline bool OpenAppInfo::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OpenAppInfo::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OpenAppInfo::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OpenAppInfo::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
inline const ::std::string& OpenAppInfo::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.OpenAppInfo.AppID)
  return appid_.GetNoArena();
}
inline void OpenAppInfo::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.OpenAppInfo.AppID)
}
#if LANG_CXX11
inline void OpenAppInfo::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.OpenAppInfo.AppID)
}
#endif
inline void OpenAppInfo::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.OpenAppInfo.AppID)
}
inline void OpenAppInfo::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.OpenAppInfo.AppID)
}
inline ::std::string* OpenAppInfo::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.OpenAppInfo.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpenAppInfo::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.OpenAppInfo.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpenAppInfo::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.OpenAppInfo.AppID)
}

// optional string AppName = 2;
inline bool OpenAppInfo::has_appname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OpenAppInfo::set_has_appname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OpenAppInfo::clear_has_appname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OpenAppInfo::clear_appname() {
  appname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appname();
}
inline const ::std::string& OpenAppInfo::appname() const {
  // @@protoc_insertion_point(field_get:micromsg.OpenAppInfo.AppName)
  return appname_.GetNoArena();
}
inline void OpenAppInfo::set_appname(const ::std::string& value) {
  set_has_appname();
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.OpenAppInfo.AppName)
}
#if LANG_CXX11
inline void OpenAppInfo::set_appname(::std::string&& value) {
  set_has_appname();
  appname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.OpenAppInfo.AppName)
}
#endif
inline void OpenAppInfo::set_appname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appname();
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.OpenAppInfo.AppName)
}
inline void OpenAppInfo::set_appname(const char* value, size_t size) {
  set_has_appname();
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.OpenAppInfo.AppName)
}
inline ::std::string* OpenAppInfo::mutable_appname() {
  set_has_appname();
  // @@protoc_insertion_point(field_mutable:micromsg.OpenAppInfo.AppName)
  return appname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpenAppInfo::release_appname() {
  // @@protoc_insertion_point(field_release:micromsg.OpenAppInfo.AppName)
  clear_has_appname();
  return appname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpenAppInfo::set_allocated_appname(::std::string* appname) {
  if (appname != NULL) {
    set_has_appname();
  } else {
    clear_has_appname();
  }
  appname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.OpenAppInfo.AppName)
}

// optional string AppDescription = 3;
inline bool OpenAppInfo::has_appdescription() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OpenAppInfo::set_has_appdescription() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OpenAppInfo::clear_has_appdescription() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OpenAppInfo::clear_appdescription() {
  appdescription_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appdescription();
}
inline const ::std::string& OpenAppInfo::appdescription() const {
  // @@protoc_insertion_point(field_get:micromsg.OpenAppInfo.AppDescription)
  return appdescription_.GetNoArena();
}
inline void OpenAppInfo::set_appdescription(const ::std::string& value) {
  set_has_appdescription();
  appdescription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.OpenAppInfo.AppDescription)
}
#if LANG_CXX11
inline void OpenAppInfo::set_appdescription(::std::string&& value) {
  set_has_appdescription();
  appdescription_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.OpenAppInfo.AppDescription)
}
#endif
inline void OpenAppInfo::set_appdescription(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appdescription();
  appdescription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.OpenAppInfo.AppDescription)
}
inline void OpenAppInfo::set_appdescription(const char* value, size_t size) {
  set_has_appdescription();
  appdescription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.OpenAppInfo.AppDescription)
}
inline ::std::string* OpenAppInfo::mutable_appdescription() {
  set_has_appdescription();
  // @@protoc_insertion_point(field_mutable:micromsg.OpenAppInfo.AppDescription)
  return appdescription_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpenAppInfo::release_appdescription() {
  // @@protoc_insertion_point(field_release:micromsg.OpenAppInfo.AppDescription)
  clear_has_appdescription();
  return appdescription_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpenAppInfo::set_allocated_appdescription(::std::string* appdescription) {
  if (appdescription != NULL) {
    set_has_appdescription();
  } else {
    clear_has_appdescription();
  }
  appdescription_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appdescription);
  // @@protoc_insertion_point(field_set_allocated:micromsg.OpenAppInfo.AppDescription)
}

// optional string AppIconUrl = 4;
inline bool OpenAppInfo::has_appiconurl() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OpenAppInfo::set_has_appiconurl() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OpenAppInfo::clear_has_appiconurl() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OpenAppInfo::clear_appiconurl() {
  appiconurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appiconurl();
}
inline const ::std::string& OpenAppInfo::appiconurl() const {
  // @@protoc_insertion_point(field_get:micromsg.OpenAppInfo.AppIconUrl)
  return appiconurl_.GetNoArena();
}
inline void OpenAppInfo::set_appiconurl(const ::std::string& value) {
  set_has_appiconurl();
  appiconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.OpenAppInfo.AppIconUrl)
}
#if LANG_CXX11
inline void OpenAppInfo::set_appiconurl(::std::string&& value) {
  set_has_appiconurl();
  appiconurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.OpenAppInfo.AppIconUrl)
}
#endif
inline void OpenAppInfo::set_appiconurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appiconurl();
  appiconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.OpenAppInfo.AppIconUrl)
}
inline void OpenAppInfo::set_appiconurl(const char* value, size_t size) {
  set_has_appiconurl();
  appiconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.OpenAppInfo.AppIconUrl)
}
inline ::std::string* OpenAppInfo::mutable_appiconurl() {
  set_has_appiconurl();
  // @@protoc_insertion_point(field_mutable:micromsg.OpenAppInfo.AppIconUrl)
  return appiconurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpenAppInfo::release_appiconurl() {
  // @@protoc_insertion_point(field_release:micromsg.OpenAppInfo.AppIconUrl)
  clear_has_appiconurl();
  return appiconurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpenAppInfo::set_allocated_appiconurl(::std::string* appiconurl) {
  if (appiconurl != NULL) {
    set_has_appiconurl();
  } else {
    clear_has_appiconurl();
  }
  appiconurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appiconurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.OpenAppInfo.AppIconUrl)
}

// optional string AppStoreUrl = 5;
inline bool OpenAppInfo::has_appstoreurl() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OpenAppInfo::set_has_appstoreurl() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OpenAppInfo::clear_has_appstoreurl() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OpenAppInfo::clear_appstoreurl() {
  appstoreurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appstoreurl();
}
inline const ::std::string& OpenAppInfo::appstoreurl() const {
  // @@protoc_insertion_point(field_get:micromsg.OpenAppInfo.AppStoreUrl)
  return appstoreurl_.GetNoArena();
}
inline void OpenAppInfo::set_appstoreurl(const ::std::string& value) {
  set_has_appstoreurl();
  appstoreurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.OpenAppInfo.AppStoreUrl)
}
#if LANG_CXX11
inline void OpenAppInfo::set_appstoreurl(::std::string&& value) {
  set_has_appstoreurl();
  appstoreurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.OpenAppInfo.AppStoreUrl)
}
#endif
inline void OpenAppInfo::set_appstoreurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appstoreurl();
  appstoreurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.OpenAppInfo.AppStoreUrl)
}
inline void OpenAppInfo::set_appstoreurl(const char* value, size_t size) {
  set_has_appstoreurl();
  appstoreurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.OpenAppInfo.AppStoreUrl)
}
inline ::std::string* OpenAppInfo::mutable_appstoreurl() {
  set_has_appstoreurl();
  // @@protoc_insertion_point(field_mutable:micromsg.OpenAppInfo.AppStoreUrl)
  return appstoreurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpenAppInfo::release_appstoreurl() {
  // @@protoc_insertion_point(field_release:micromsg.OpenAppInfo.AppStoreUrl)
  clear_has_appstoreurl();
  return appstoreurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpenAppInfo::set_allocated_appstoreurl(::std::string* appstoreurl) {
  if (appstoreurl != NULL) {
    set_has_appstoreurl();
  } else {
    clear_has_appstoreurl();
  }
  appstoreurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appstoreurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.OpenAppInfo.AppStoreUrl)
}

// required uint32 AppVersion = 6;
inline bool OpenAppInfo::has_appversion() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void OpenAppInfo::set_has_appversion() {
  _has_bits_[0] |= 0x00001000u;
}
inline void OpenAppInfo::clear_has_appversion() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void OpenAppInfo::clear_appversion() {
  appversion_ = 0u;
  clear_has_appversion();
}
inline ::google::protobuf::uint32 OpenAppInfo::appversion() const {
  // @@protoc_insertion_point(field_get:micromsg.OpenAppInfo.AppVersion)
  return appversion_;
}
inline void OpenAppInfo::set_appversion(::google::protobuf::uint32 value) {
  set_has_appversion();
  appversion_ = value;
  // @@protoc_insertion_point(field_set:micromsg.OpenAppInfo.AppVersion)
}

// optional string AppWatermarkUrl = 7;
inline bool OpenAppInfo::has_appwatermarkurl() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OpenAppInfo::set_has_appwatermarkurl() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OpenAppInfo::clear_has_appwatermarkurl() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OpenAppInfo::clear_appwatermarkurl() {
  appwatermarkurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appwatermarkurl();
}
inline const ::std::string& OpenAppInfo::appwatermarkurl() const {
  // @@protoc_insertion_point(field_get:micromsg.OpenAppInfo.AppWatermarkUrl)
  return appwatermarkurl_.GetNoArena();
}
inline void OpenAppInfo::set_appwatermarkurl(const ::std::string& value) {
  set_has_appwatermarkurl();
  appwatermarkurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.OpenAppInfo.AppWatermarkUrl)
}
#if LANG_CXX11
inline void OpenAppInfo::set_appwatermarkurl(::std::string&& value) {
  set_has_appwatermarkurl();
  appwatermarkurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.OpenAppInfo.AppWatermarkUrl)
}
#endif
inline void OpenAppInfo::set_appwatermarkurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appwatermarkurl();
  appwatermarkurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.OpenAppInfo.AppWatermarkUrl)
}
inline void OpenAppInfo::set_appwatermarkurl(const char* value, size_t size) {
  set_has_appwatermarkurl();
  appwatermarkurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.OpenAppInfo.AppWatermarkUrl)
}
inline ::std::string* OpenAppInfo::mutable_appwatermarkurl() {
  set_has_appwatermarkurl();
  // @@protoc_insertion_point(field_mutable:micromsg.OpenAppInfo.AppWatermarkUrl)
  return appwatermarkurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpenAppInfo::release_appwatermarkurl() {
  // @@protoc_insertion_point(field_release:micromsg.OpenAppInfo.AppWatermarkUrl)
  clear_has_appwatermarkurl();
  return appwatermarkurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpenAppInfo::set_allocated_appwatermarkurl(::std::string* appwatermarkurl) {
  if (appwatermarkurl != NULL) {
    set_has_appwatermarkurl();
  } else {
    clear_has_appwatermarkurl();
  }
  appwatermarkurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appwatermarkurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.OpenAppInfo.AppWatermarkUrl)
}

// optional string AndroidPackageName = 8;
inline bool OpenAppInfo::has_androidpackagename() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OpenAppInfo::set_has_androidpackagename() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OpenAppInfo::clear_has_androidpackagename() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OpenAppInfo::clear_androidpackagename() {
  androidpackagename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_androidpackagename();
}
inline const ::std::string& OpenAppInfo::androidpackagename() const {
  // @@protoc_insertion_point(field_get:micromsg.OpenAppInfo.AndroidPackageName)
  return androidpackagename_.GetNoArena();
}
inline void OpenAppInfo::set_androidpackagename(const ::std::string& value) {
  set_has_androidpackagename();
  androidpackagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.OpenAppInfo.AndroidPackageName)
}
#if LANG_CXX11
inline void OpenAppInfo::set_androidpackagename(::std::string&& value) {
  set_has_androidpackagename();
  androidpackagename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.OpenAppInfo.AndroidPackageName)
}
#endif
inline void OpenAppInfo::set_androidpackagename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_androidpackagename();
  androidpackagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.OpenAppInfo.AndroidPackageName)
}
inline void OpenAppInfo::set_androidpackagename(const char* value, size_t size) {
  set_has_androidpackagename();
  androidpackagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.OpenAppInfo.AndroidPackageName)
}
inline ::std::string* OpenAppInfo::mutable_androidpackagename() {
  set_has_androidpackagename();
  // @@protoc_insertion_point(field_mutable:micromsg.OpenAppInfo.AndroidPackageName)
  return androidpackagename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpenAppInfo::release_androidpackagename() {
  // @@protoc_insertion_point(field_release:micromsg.OpenAppInfo.AndroidPackageName)
  clear_has_androidpackagename();
  return androidpackagename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpenAppInfo::set_allocated_androidpackagename(::std::string* androidpackagename) {
  if (androidpackagename != NULL) {
    set_has_androidpackagename();
  } else {
    clear_has_androidpackagename();
  }
  androidpackagename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), androidpackagename);
  // @@protoc_insertion_point(field_set_allocated:micromsg.OpenAppInfo.AndroidPackageName)
}

// optional string AndroidSignature = 9;
inline bool OpenAppInfo::has_androidsignature() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OpenAppInfo::set_has_androidsignature() {
  _has_bits_[0] |= 0x00000080u;
}
inline void OpenAppInfo::clear_has_androidsignature() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void OpenAppInfo::clear_androidsignature() {
  androidsignature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_androidsignature();
}
inline const ::std::string& OpenAppInfo::androidsignature() const {
  // @@protoc_insertion_point(field_get:micromsg.OpenAppInfo.AndroidSignature)
  return androidsignature_.GetNoArena();
}
inline void OpenAppInfo::set_androidsignature(const ::std::string& value) {
  set_has_androidsignature();
  androidsignature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.OpenAppInfo.AndroidSignature)
}
#if LANG_CXX11
inline void OpenAppInfo::set_androidsignature(::std::string&& value) {
  set_has_androidsignature();
  androidsignature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.OpenAppInfo.AndroidSignature)
}
#endif
inline void OpenAppInfo::set_androidsignature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_androidsignature();
  androidsignature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.OpenAppInfo.AndroidSignature)
}
inline void OpenAppInfo::set_androidsignature(const char* value, size_t size) {
  set_has_androidsignature();
  androidsignature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.OpenAppInfo.AndroidSignature)
}
inline ::std::string* OpenAppInfo::mutable_androidsignature() {
  set_has_androidsignature();
  // @@protoc_insertion_point(field_mutable:micromsg.OpenAppInfo.AndroidSignature)
  return androidsignature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpenAppInfo::release_androidsignature() {
  // @@protoc_insertion_point(field_release:micromsg.OpenAppInfo.AndroidSignature)
  clear_has_androidsignature();
  return androidsignature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpenAppInfo::set_allocated_androidsignature(::std::string* androidsignature) {
  if (androidsignature != NULL) {
    set_has_androidsignature();
  } else {
    clear_has_androidsignature();
  }
  androidsignature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), androidsignature);
  // @@protoc_insertion_point(field_set_allocated:micromsg.OpenAppInfo.AndroidSignature)
}

// optional string AppName4EnUS = 10;
inline bool OpenAppInfo::has_appname4enus() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void OpenAppInfo::set_has_appname4enus() {
  _has_bits_[0] |= 0x00000100u;
}
inline void OpenAppInfo::clear_has_appname4enus() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void OpenAppInfo::clear_appname4enus() {
  appname4enus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appname4enus();
}
inline const ::std::string& OpenAppInfo::appname4enus() const {
  // @@protoc_insertion_point(field_get:micromsg.OpenAppInfo.AppName4EnUS)
  return appname4enus_.GetNoArena();
}
inline void OpenAppInfo::set_appname4enus(const ::std::string& value) {
  set_has_appname4enus();
  appname4enus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.OpenAppInfo.AppName4EnUS)
}
#if LANG_CXX11
inline void OpenAppInfo::set_appname4enus(::std::string&& value) {
  set_has_appname4enus();
  appname4enus_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.OpenAppInfo.AppName4EnUS)
}
#endif
inline void OpenAppInfo::set_appname4enus(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appname4enus();
  appname4enus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.OpenAppInfo.AppName4EnUS)
}
inline void OpenAppInfo::set_appname4enus(const char* value, size_t size) {
  set_has_appname4enus();
  appname4enus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.OpenAppInfo.AppName4EnUS)
}
inline ::std::string* OpenAppInfo::mutable_appname4enus() {
  set_has_appname4enus();
  // @@protoc_insertion_point(field_mutable:micromsg.OpenAppInfo.AppName4EnUS)
  return appname4enus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpenAppInfo::release_appname4enus() {
  // @@protoc_insertion_point(field_release:micromsg.OpenAppInfo.AppName4EnUS)
  clear_has_appname4enus();
  return appname4enus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpenAppInfo::set_allocated_appname4enus(::std::string* appname4enus) {
  if (appname4enus != NULL) {
    set_has_appname4enus();
  } else {
    clear_has_appname4enus();
  }
  appname4enus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appname4enus);
  // @@protoc_insertion_point(field_set_allocated:micromsg.OpenAppInfo.AppName4EnUS)
}

// optional string AppDescription4EnUS = 11;
inline bool OpenAppInfo::has_appdescription4enus() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void OpenAppInfo::set_has_appdescription4enus() {
  _has_bits_[0] |= 0x00000200u;
}
inline void OpenAppInfo::clear_has_appdescription4enus() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void OpenAppInfo::clear_appdescription4enus() {
  appdescription4enus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appdescription4enus();
}
inline const ::std::string& OpenAppInfo::appdescription4enus() const {
  // @@protoc_insertion_point(field_get:micromsg.OpenAppInfo.AppDescription4EnUS)
  return appdescription4enus_.GetNoArena();
}
inline void OpenAppInfo::set_appdescription4enus(const ::std::string& value) {
  set_has_appdescription4enus();
  appdescription4enus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.OpenAppInfo.AppDescription4EnUS)
}
#if LANG_CXX11
inline void OpenAppInfo::set_appdescription4enus(::std::string&& value) {
  set_has_appdescription4enus();
  appdescription4enus_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.OpenAppInfo.AppDescription4EnUS)
}
#endif
inline void OpenAppInfo::set_appdescription4enus(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appdescription4enus();
  appdescription4enus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.OpenAppInfo.AppDescription4EnUS)
}
inline void OpenAppInfo::set_appdescription4enus(const char* value, size_t size) {
  set_has_appdescription4enus();
  appdescription4enus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.OpenAppInfo.AppDescription4EnUS)
}
inline ::std::string* OpenAppInfo::mutable_appdescription4enus() {
  set_has_appdescription4enus();
  // @@protoc_insertion_point(field_mutable:micromsg.OpenAppInfo.AppDescription4EnUS)
  return appdescription4enus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpenAppInfo::release_appdescription4enus() {
  // @@protoc_insertion_point(field_release:micromsg.OpenAppInfo.AppDescription4EnUS)
  clear_has_appdescription4enus();
  return appdescription4enus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpenAppInfo::set_allocated_appdescription4enus(::std::string* appdescription4enus) {
  if (appdescription4enus != NULL) {
    set_has_appdescription4enus();
  } else {
    clear_has_appdescription4enus();
  }
  appdescription4enus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appdescription4enus);
  // @@protoc_insertion_point(field_set_allocated:micromsg.OpenAppInfo.AppDescription4EnUS)
}

// optional string AppName4ZhTW = 12;
inline bool OpenAppInfo::has_appname4zhtw() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void OpenAppInfo::set_has_appname4zhtw() {
  _has_bits_[0] |= 0x00000400u;
}
inline void OpenAppInfo::clear_has_appname4zhtw() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void OpenAppInfo::clear_appname4zhtw() {
  appname4zhtw_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appname4zhtw();
}
inline const ::std::string& OpenAppInfo::appname4zhtw() const {
  // @@protoc_insertion_point(field_get:micromsg.OpenAppInfo.AppName4ZhTW)
  return appname4zhtw_.GetNoArena();
}
inline void OpenAppInfo::set_appname4zhtw(const ::std::string& value) {
  set_has_appname4zhtw();
  appname4zhtw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.OpenAppInfo.AppName4ZhTW)
}
#if LANG_CXX11
inline void OpenAppInfo::set_appname4zhtw(::std::string&& value) {
  set_has_appname4zhtw();
  appname4zhtw_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.OpenAppInfo.AppName4ZhTW)
}
#endif
inline void OpenAppInfo::set_appname4zhtw(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appname4zhtw();
  appname4zhtw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.OpenAppInfo.AppName4ZhTW)
}
inline void OpenAppInfo::set_appname4zhtw(const char* value, size_t size) {
  set_has_appname4zhtw();
  appname4zhtw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.OpenAppInfo.AppName4ZhTW)
}
inline ::std::string* OpenAppInfo::mutable_appname4zhtw() {
  set_has_appname4zhtw();
  // @@protoc_insertion_point(field_mutable:micromsg.OpenAppInfo.AppName4ZhTW)
  return appname4zhtw_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpenAppInfo::release_appname4zhtw() {
  // @@protoc_insertion_point(field_release:micromsg.OpenAppInfo.AppName4ZhTW)
  clear_has_appname4zhtw();
  return appname4zhtw_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpenAppInfo::set_allocated_appname4zhtw(::std::string* appname4zhtw) {
  if (appname4zhtw != NULL) {
    set_has_appname4zhtw();
  } else {
    clear_has_appname4zhtw();
  }
  appname4zhtw_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appname4zhtw);
  // @@protoc_insertion_point(field_set_allocated:micromsg.OpenAppInfo.AppName4ZhTW)
}

// optional string AppDescription4ZhTW = 13;
inline bool OpenAppInfo::has_appdescription4zhtw() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void OpenAppInfo::set_has_appdescription4zhtw() {
  _has_bits_[0] |= 0x00000800u;
}
inline void OpenAppInfo::clear_has_appdescription4zhtw() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void OpenAppInfo::clear_appdescription4zhtw() {
  appdescription4zhtw_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appdescription4zhtw();
}
inline const ::std::string& OpenAppInfo::appdescription4zhtw() const {
  // @@protoc_insertion_point(field_get:micromsg.OpenAppInfo.AppDescription4ZhTW)
  return appdescription4zhtw_.GetNoArena();
}
inline void OpenAppInfo::set_appdescription4zhtw(const ::std::string& value) {
  set_has_appdescription4zhtw();
  appdescription4zhtw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.OpenAppInfo.AppDescription4ZhTW)
}
#if LANG_CXX11
inline void OpenAppInfo::set_appdescription4zhtw(::std::string&& value) {
  set_has_appdescription4zhtw();
  appdescription4zhtw_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.OpenAppInfo.AppDescription4ZhTW)
}
#endif
inline void OpenAppInfo::set_appdescription4zhtw(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appdescription4zhtw();
  appdescription4zhtw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.OpenAppInfo.AppDescription4ZhTW)
}
inline void OpenAppInfo::set_appdescription4zhtw(const char* value, size_t size) {
  set_has_appdescription4zhtw();
  appdescription4zhtw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.OpenAppInfo.AppDescription4ZhTW)
}
inline ::std::string* OpenAppInfo::mutable_appdescription4zhtw() {
  set_has_appdescription4zhtw();
  // @@protoc_insertion_point(field_mutable:micromsg.OpenAppInfo.AppDescription4ZhTW)
  return appdescription4zhtw_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpenAppInfo::release_appdescription4zhtw() {
  // @@protoc_insertion_point(field_release:micromsg.OpenAppInfo.AppDescription4ZhTW)
  clear_has_appdescription4zhtw();
  return appdescription4zhtw_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpenAppInfo::set_allocated_appdescription4zhtw(::std::string* appdescription4zhtw) {
  if (appdescription4zhtw != NULL) {
    set_has_appdescription4zhtw();
  } else {
    clear_has_appdescription4zhtw();
  }
  appdescription4zhtw_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appdescription4zhtw);
  // @@protoc_insertion_point(field_set_allocated:micromsg.OpenAppInfo.AppDescription4ZhTW)
}

// optional uint32 AppInfoFlag = 14;
inline bool OpenAppInfo::has_appinfoflag() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void OpenAppInfo::set_has_appinfoflag() {
  _has_bits_[0] |= 0x00002000u;
}
inline void OpenAppInfo::clear_has_appinfoflag() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void OpenAppInfo::clear_appinfoflag() {
  appinfoflag_ = 0u;
  clear_has_appinfoflag();
}
inline ::google::protobuf::uint32 OpenAppInfo::appinfoflag() const {
  // @@protoc_insertion_point(field_get:micromsg.OpenAppInfo.AppInfoFlag)
  return appinfoflag_;
}
inline void OpenAppInfo::set_appinfoflag(::google::protobuf::uint32 value) {
  set_has_appinfoflag();
  appinfoflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.OpenAppInfo.AppInfoFlag)
}

// -------------------------------------------------------------------

// GetAppInfoRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetAppInfoRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetAppInfoRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetAppInfoRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetAppInfoRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetAppInfoRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppInfoRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetAppInfoRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppInfoRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetAppInfoRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetAppInfoRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetAppInfoRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAppInfoRequest.BaseRequest)
}

// optional string AppID = 2;
inline bool GetAppInfoRequest::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAppInfoRequest::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAppInfoRequest::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAppInfoRequest::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
inline const ::std::string& GetAppInfoRequest::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppInfoRequest.AppID)
  return appid_.GetNoArena();
}
inline void GetAppInfoRequest::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetAppInfoRequest.AppID)
}
#if LANG_CXX11
inline void GetAppInfoRequest::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetAppInfoRequest.AppID)
}
#endif
inline void GetAppInfoRequest::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetAppInfoRequest.AppID)
}
inline void GetAppInfoRequest::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetAppInfoRequest.AppID)
}
inline ::std::string* GetAppInfoRequest::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppInfoRequest.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAppInfoRequest::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.GetAppInfoRequest.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAppInfoRequest::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAppInfoRequest.AppID)
}

// required uint32 IconType = 3;
inline bool GetAppInfoRequest::has_icontype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetAppInfoRequest::set_has_icontype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetAppInfoRequest::clear_has_icontype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetAppInfoRequest::clear_icontype() {
  icontype_ = 0u;
  clear_has_icontype();
}
inline ::google::protobuf::uint32 GetAppInfoRequest::icontype() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppInfoRequest.IconType)
  return icontype_;
}
inline void GetAppInfoRequest::set_icontype(::google::protobuf::uint32 value) {
  set_has_icontype();
  icontype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetAppInfoRequest.IconType)
}

// -------------------------------------------------------------------

// GetAppInfoResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetAppInfoResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetAppInfoResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetAppInfoResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetAppInfoResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetAppInfoResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppInfoResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetAppInfoResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppInfoResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetAppInfoResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetAppInfoResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetAppInfoResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAppInfoResponse.BaseResponse)
}

// required .micromsg.OpenAppInfo AppInfo = 2;
inline bool GetAppInfoResponse::has_appinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetAppInfoResponse::set_has_appinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetAppInfoResponse::clear_has_appinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetAppInfoResponse::clear_appinfo() {
  if (appinfo_ != NULL) appinfo_->::micromsg::OpenAppInfo::Clear();
  clear_has_appinfo();
}
inline const ::micromsg::OpenAppInfo& GetAppInfoResponse::appinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppInfoResponse.AppInfo)
  return appinfo_ != NULL ? *appinfo_
                         : *::micromsg::OpenAppInfo::internal_default_instance();
}
inline ::micromsg::OpenAppInfo* GetAppInfoResponse::mutable_appinfo() {
  set_has_appinfo();
  if (appinfo_ == NULL) {
    appinfo_ = new ::micromsg::OpenAppInfo;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppInfoResponse.AppInfo)
  return appinfo_;
}
inline ::micromsg::OpenAppInfo* GetAppInfoResponse::release_appinfo() {
  // @@protoc_insertion_point(field_release:micromsg.GetAppInfoResponse.AppInfo)
  clear_has_appinfo();
  ::micromsg::OpenAppInfo* temp = appinfo_;
  appinfo_ = NULL;
  return temp;
}
inline void GetAppInfoResponse::set_allocated_appinfo(::micromsg::OpenAppInfo* appinfo) {
  delete appinfo_;
  appinfo_ = appinfo;
  if (appinfo) {
    set_has_appinfo();
  } else {
    clear_has_appinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAppInfoResponse.AppInfo)
}

// optional uint32 NoUse = 3;
inline bool GetAppInfoResponse::has_nouse() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetAppInfoResponse::set_has_nouse() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetAppInfoResponse::clear_has_nouse() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetAppInfoResponse::clear_nouse() {
  nouse_ = 0u;
  clear_has_nouse();
}
inline ::google::protobuf::uint32 GetAppInfoResponse::nouse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppInfoResponse.NoUse)
  return nouse_;
}
inline void GetAppInfoResponse::set_nouse(::google::protobuf::uint32 value) {
  set_has_nouse();
  nouse_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetAppInfoResponse.NoUse)
}

// optional string DevInfo = 4;
inline bool GetAppInfoResponse::has_devinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAppInfoResponse::set_has_devinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAppInfoResponse::clear_has_devinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAppInfoResponse::clear_devinfo() {
  devinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_devinfo();
}
inline const ::std::string& GetAppInfoResponse::devinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppInfoResponse.DevInfo)
  return devinfo_.GetNoArena();
}
inline void GetAppInfoResponse::set_devinfo(const ::std::string& value) {
  set_has_devinfo();
  devinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetAppInfoResponse.DevInfo)
}
#if LANG_CXX11
inline void GetAppInfoResponse::set_devinfo(::std::string&& value) {
  set_has_devinfo();
  devinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetAppInfoResponse.DevInfo)
}
#endif
inline void GetAppInfoResponse::set_devinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_devinfo();
  devinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetAppInfoResponse.DevInfo)
}
inline void GetAppInfoResponse::set_devinfo(const char* value, size_t size) {
  set_has_devinfo();
  devinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetAppInfoResponse.DevInfo)
}
inline ::std::string* GetAppInfoResponse::mutable_devinfo() {
  set_has_devinfo();
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppInfoResponse.DevInfo)
  return devinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAppInfoResponse::release_devinfo() {
  // @@protoc_insertion_point(field_release:micromsg.GetAppInfoResponse.DevInfo)
  clear_has_devinfo();
  return devinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAppInfoResponse::set_allocated_devinfo(::std::string* devinfo) {
  if (devinfo != NULL) {
    set_has_devinfo();
  } else {
    clear_has_devinfo();
  }
  devinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devinfo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAppInfoResponse.DevInfo)
}

// optional string AppType = 5;
inline bool GetAppInfoResponse::has_apptype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetAppInfoResponse::set_has_apptype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetAppInfoResponse::clear_has_apptype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetAppInfoResponse::clear_apptype() {
  apptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_apptype();
}
inline const ::std::string& GetAppInfoResponse::apptype() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppInfoResponse.AppType)
  return apptype_.GetNoArena();
}
inline void GetAppInfoResponse::set_apptype(const ::std::string& value) {
  set_has_apptype();
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetAppInfoResponse.AppType)
}
#if LANG_CXX11
inline void GetAppInfoResponse::set_apptype(::std::string&& value) {
  set_has_apptype();
  apptype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetAppInfoResponse.AppType)
}
#endif
inline void GetAppInfoResponse::set_apptype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_apptype();
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetAppInfoResponse.AppType)
}
inline void GetAppInfoResponse::set_apptype(const char* value, size_t size) {
  set_has_apptype();
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetAppInfoResponse.AppType)
}
inline ::std::string* GetAppInfoResponse::mutable_apptype() {
  set_has_apptype();
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppInfoResponse.AppType)
  return apptype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAppInfoResponse::release_apptype() {
  // @@protoc_insertion_point(field_release:micromsg.GetAppInfoResponse.AppType)
  clear_has_apptype();
  return apptype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAppInfoResponse::set_allocated_apptype(::std::string* apptype) {
  if (apptype != NULL) {
    set_has_apptype();
  } else {
    clear_has_apptype();
  }
  apptype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), apptype);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAppInfoResponse.AppType)
}

// -------------------------------------------------------------------

// GetRecommendAppListRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetRecommendAppListRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetRecommendAppListRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetRecommendAppListRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetRecommendAppListRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetRecommendAppListRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetRecommendAppListRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetRecommendAppListRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetRecommendAppListRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetRecommendAppListRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetRecommendAppListRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetRecommendAppListRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetRecommendAppListRequest.BaseRequest)
}

// required uint32 Start = 2;
inline bool GetRecommendAppListRequest::has_start() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetRecommendAppListRequest::set_has_start() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetRecommendAppListRequest::clear_has_start() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetRecommendAppListRequest::clear_start() {
  start_ = 0u;
  clear_has_start();
}
inline ::google::protobuf::uint32 GetRecommendAppListRequest::start() const {
  // @@protoc_insertion_point(field_get:micromsg.GetRecommendAppListRequest.Start)
  return start_;
}
inline void GetRecommendAppListRequest::set_start(::google::protobuf::uint32 value) {
  set_has_start();
  start_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetRecommendAppListRequest.Start)
}

// required uint32 Count = 3;
inline bool GetRecommendAppListRequest::has_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetRecommendAppListRequest::set_has_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetRecommendAppListRequest::clear_has_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetRecommendAppListRequest::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 GetRecommendAppListRequest::count() const {
  // @@protoc_insertion_point(field_get:micromsg.GetRecommendAppListRequest.Count)
  return count_;
}
inline void GetRecommendAppListRequest::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetRecommendAppListRequest.Count)
}

// optional string InstalledList = 4;
inline bool GetRecommendAppListRequest::has_installedlist() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRecommendAppListRequest::set_has_installedlist() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRecommendAppListRequest::clear_has_installedlist() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRecommendAppListRequest::clear_installedlist() {
  installedlist_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_installedlist();
}
inline const ::std::string& GetRecommendAppListRequest::installedlist() const {
  // @@protoc_insertion_point(field_get:micromsg.GetRecommendAppListRequest.InstalledList)
  return installedlist_.GetNoArena();
}
inline void GetRecommendAppListRequest::set_installedlist(const ::std::string& value) {
  set_has_installedlist();
  installedlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetRecommendAppListRequest.InstalledList)
}
#if LANG_CXX11
inline void GetRecommendAppListRequest::set_installedlist(::std::string&& value) {
  set_has_installedlist();
  installedlist_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetRecommendAppListRequest.InstalledList)
}
#endif
inline void GetRecommendAppListRequest::set_installedlist(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_installedlist();
  installedlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetRecommendAppListRequest.InstalledList)
}
inline void GetRecommendAppListRequest::set_installedlist(const char* value, size_t size) {
  set_has_installedlist();
  installedlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetRecommendAppListRequest.InstalledList)
}
inline ::std::string* GetRecommendAppListRequest::mutable_installedlist() {
  set_has_installedlist();
  // @@protoc_insertion_point(field_mutable:micromsg.GetRecommendAppListRequest.InstalledList)
  return installedlist_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetRecommendAppListRequest::release_installedlist() {
  // @@protoc_insertion_point(field_release:micromsg.GetRecommendAppListRequest.InstalledList)
  clear_has_installedlist();
  return installedlist_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetRecommendAppListRequest::set_allocated_installedlist(::std::string* installedlist) {
  if (installedlist != NULL) {
    set_has_installedlist();
  } else {
    clear_has_installedlist();
  }
  installedlist_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), installedlist);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetRecommendAppListRequest.InstalledList)
}

// required uint32 IconType = 5;
inline bool GetRecommendAppListRequest::has_icontype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetRecommendAppListRequest::set_has_icontype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetRecommendAppListRequest::clear_has_icontype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetRecommendAppListRequest::clear_icontype() {
  icontype_ = 0u;
  clear_has_icontype();
}
inline ::google::protobuf::uint32 GetRecommendAppListRequest::icontype() const {
  // @@protoc_insertion_point(field_get:micromsg.GetRecommendAppListRequest.IconType)
  return icontype_;
}
inline void GetRecommendAppListRequest::set_icontype(::google::protobuf::uint32 value) {
  set_has_icontype();
  icontype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetRecommendAppListRequest.IconType)
}

// -------------------------------------------------------------------

// GetRecommendAppListResponse

// required uint32 Total = 1;
inline bool GetRecommendAppListResponse::has_total() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetRecommendAppListResponse::set_has_total() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetRecommendAppListResponse::clear_has_total() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetRecommendAppListResponse::clear_total() {
  total_ = 0u;
  clear_has_total();
}
inline ::google::protobuf::uint32 GetRecommendAppListResponse::total() const {
  // @@protoc_insertion_point(field_get:micromsg.GetRecommendAppListResponse.Total)
  return total_;
}
inline void GetRecommendAppListResponse::set_total(::google::protobuf::uint32 value) {
  set_has_total();
  total_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetRecommendAppListResponse.Total)
}

// required .micromsg.BaseResponse BaseResponse = 2;
inline bool GetRecommendAppListResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetRecommendAppListResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetRecommendAppListResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetRecommendAppListResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetRecommendAppListResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetRecommendAppListResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetRecommendAppListResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetRecommendAppListResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetRecommendAppListResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetRecommendAppListResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetRecommendAppListResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetRecommendAppListResponse.BaseResponse)
}

// required uint32 Count = 3;
inline bool GetRecommendAppListResponse::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetRecommendAppListResponse::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetRecommendAppListResponse::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetRecommendAppListResponse::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 GetRecommendAppListResponse::count() const {
  // @@protoc_insertion_point(field_get:micromsg.GetRecommendAppListResponse.Count)
  return count_;
}
inline void GetRecommendAppListResponse::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetRecommendAppListResponse.Count)
}

// repeated .micromsg.OpenAppInfo AppList = 4;
inline int GetRecommendAppListResponse::applist_size() const {
  return applist_.size();
}
inline void GetRecommendAppListResponse::clear_applist() {
  applist_.Clear();
}
inline const ::micromsg::OpenAppInfo& GetRecommendAppListResponse::applist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetRecommendAppListResponse.AppList)
  return applist_.Get(index);
}
inline ::micromsg::OpenAppInfo* GetRecommendAppListResponse::mutable_applist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetRecommendAppListResponse.AppList)
  return applist_.Mutable(index);
}
inline ::micromsg::OpenAppInfo* GetRecommendAppListResponse::add_applist() {
  // @@protoc_insertion_point(field_add:micromsg.GetRecommendAppListResponse.AppList)
  return applist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::OpenAppInfo >*
GetRecommendAppListResponse::mutable_applist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetRecommendAppListResponse.AppList)
  return &applist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::OpenAppInfo >&
GetRecommendAppListResponse::applist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetRecommendAppListResponse.AppList)
  return applist_;
}

// -------------------------------------------------------------------

// CheckPCWechatFileRequest

// optional string FileName = 1;
inline bool CheckPCWechatFileRequest::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CheckPCWechatFileRequest::set_has_filename() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CheckPCWechatFileRequest::clear_has_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CheckPCWechatFileRequest::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_filename();
}
inline const ::std::string& CheckPCWechatFileRequest::filename() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckPCWechatFileRequest.FileName)
  return filename_.GetNoArena();
}
inline void CheckPCWechatFileRequest::set_filename(const ::std::string& value) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckPCWechatFileRequest.FileName)
}
#if LANG_CXX11
inline void CheckPCWechatFileRequest::set_filename(::std::string&& value) {
  set_has_filename();
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckPCWechatFileRequest.FileName)
}
#endif
inline void CheckPCWechatFileRequest::set_filename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckPCWechatFileRequest.FileName)
}
inline void CheckPCWechatFileRequest::set_filename(const char* value, size_t size) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckPCWechatFileRequest.FileName)
}
inline ::std::string* CheckPCWechatFileRequest::mutable_filename() {
  set_has_filename();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckPCWechatFileRequest.FileName)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckPCWechatFileRequest::release_filename() {
  // @@protoc_insertion_point(field_release:micromsg.CheckPCWechatFileRequest.FileName)
  clear_has_filename();
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckPCWechatFileRequest::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    set_has_filename();
  } else {
    clear_has_filename();
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckPCWechatFileRequest.FileName)
}

// optional string MD5 = 2;
inline bool CheckPCWechatFileRequest::has_md5() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CheckPCWechatFileRequest::set_has_md5() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CheckPCWechatFileRequest::clear_has_md5() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CheckPCWechatFileRequest::clear_md5() {
  md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_md5();
}
inline const ::std::string& CheckPCWechatFileRequest::md5() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckPCWechatFileRequest.MD5)
  return md5_.GetNoArena();
}
inline void CheckPCWechatFileRequest::set_md5(const ::std::string& value) {
  set_has_md5();
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckPCWechatFileRequest.MD5)
}
#if LANG_CXX11
inline void CheckPCWechatFileRequest::set_md5(::std::string&& value) {
  set_has_md5();
  md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckPCWechatFileRequest.MD5)
}
#endif
inline void CheckPCWechatFileRequest::set_md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_md5();
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckPCWechatFileRequest.MD5)
}
inline void CheckPCWechatFileRequest::set_md5(const char* value, size_t size) {
  set_has_md5();
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckPCWechatFileRequest.MD5)
}
inline ::std::string* CheckPCWechatFileRequest::mutable_md5() {
  set_has_md5();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckPCWechatFileRequest.MD5)
  return md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckPCWechatFileRequest::release_md5() {
  // @@protoc_insertion_point(field_release:micromsg.CheckPCWechatFileRequest.MD5)
  clear_has_md5();
  return md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckPCWechatFileRequest::set_allocated_md5(::std::string* md5) {
  if (md5 != NULL) {
    set_has_md5();
  } else {
    clear_has_md5();
  }
  md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), md5);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckPCWechatFileRequest.MD5)
}

// optional string FileId = 3;
inline bool CheckPCWechatFileRequest::has_fileid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CheckPCWechatFileRequest::set_has_fileid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CheckPCWechatFileRequest::clear_has_fileid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CheckPCWechatFileRequest::clear_fileid() {
  fileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fileid();
}
inline const ::std::string& CheckPCWechatFileRequest::fileid() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckPCWechatFileRequest.FileId)
  return fileid_.GetNoArena();
}
inline void CheckPCWechatFileRequest::set_fileid(const ::std::string& value) {
  set_has_fileid();
  fileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckPCWechatFileRequest.FileId)
}
#if LANG_CXX11
inline void CheckPCWechatFileRequest::set_fileid(::std::string&& value) {
  set_has_fileid();
  fileid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckPCWechatFileRequest.FileId)
}
#endif
inline void CheckPCWechatFileRequest::set_fileid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_fileid();
  fileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckPCWechatFileRequest.FileId)
}
inline void CheckPCWechatFileRequest::set_fileid(const char* value, size_t size) {
  set_has_fileid();
  fileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckPCWechatFileRequest.FileId)
}
inline ::std::string* CheckPCWechatFileRequest::mutable_fileid() {
  set_has_fileid();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckPCWechatFileRequest.FileId)
  return fileid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckPCWechatFileRequest::release_fileid() {
  // @@protoc_insertion_point(field_release:micromsg.CheckPCWechatFileRequest.FileId)
  clear_has_fileid();
  return fileid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckPCWechatFileRequest::set_allocated_fileid(::std::string* fileid) {
  if (fileid != NULL) {
    set_has_fileid();
  } else {
    clear_has_fileid();
  }
  fileid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fileid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckPCWechatFileRequest.FileId)
}

// optional string AesKey = 4;
inline bool CheckPCWechatFileRequest::has_aeskey() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CheckPCWechatFileRequest::set_has_aeskey() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CheckPCWechatFileRequest::clear_has_aeskey() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CheckPCWechatFileRequest::clear_aeskey() {
  aeskey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_aeskey();
}
inline const ::std::string& CheckPCWechatFileRequest::aeskey() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckPCWechatFileRequest.AesKey)
  return aeskey_.GetNoArena();
}
inline void CheckPCWechatFileRequest::set_aeskey(const ::std::string& value) {
  set_has_aeskey();
  aeskey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckPCWechatFileRequest.AesKey)
}
#if LANG_CXX11
inline void CheckPCWechatFileRequest::set_aeskey(::std::string&& value) {
  set_has_aeskey();
  aeskey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckPCWechatFileRequest.AesKey)
}
#endif
inline void CheckPCWechatFileRequest::set_aeskey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_aeskey();
  aeskey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckPCWechatFileRequest.AesKey)
}
inline void CheckPCWechatFileRequest::set_aeskey(const char* value, size_t size) {
  set_has_aeskey();
  aeskey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckPCWechatFileRequest.AesKey)
}
inline ::std::string* CheckPCWechatFileRequest::mutable_aeskey() {
  set_has_aeskey();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckPCWechatFileRequest.AesKey)
  return aeskey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckPCWechatFileRequest::release_aeskey() {
  // @@protoc_insertion_point(field_release:micromsg.CheckPCWechatFileRequest.AesKey)
  clear_has_aeskey();
  return aeskey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckPCWechatFileRequest::set_allocated_aeskey(::std::string* aeskey) {
  if (aeskey != NULL) {
    set_has_aeskey();
  } else {
    clear_has_aeskey();
  }
  aeskey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), aeskey);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckPCWechatFileRequest.AesKey)
}

// optional string FromUsername = 5;
inline bool CheckPCWechatFileRequest::has_fromusername() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CheckPCWechatFileRequest::set_has_fromusername() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CheckPCWechatFileRequest::clear_has_fromusername() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CheckPCWechatFileRequest::clear_fromusername() {
  fromusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fromusername();
}
inline const ::std::string& CheckPCWechatFileRequest::fromusername() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckPCWechatFileRequest.FromUsername)
  return fromusername_.GetNoArena();
}
inline void CheckPCWechatFileRequest::set_fromusername(const ::std::string& value) {
  set_has_fromusername();
  fromusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckPCWechatFileRequest.FromUsername)
}
#if LANG_CXX11
inline void CheckPCWechatFileRequest::set_fromusername(::std::string&& value) {
  set_has_fromusername();
  fromusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckPCWechatFileRequest.FromUsername)
}
#endif
inline void CheckPCWechatFileRequest::set_fromusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_fromusername();
  fromusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckPCWechatFileRequest.FromUsername)
}
inline void CheckPCWechatFileRequest::set_fromusername(const char* value, size_t size) {
  set_has_fromusername();
  fromusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckPCWechatFileRequest.FromUsername)
}
inline ::std::string* CheckPCWechatFileRequest::mutable_fromusername() {
  set_has_fromusername();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckPCWechatFileRequest.FromUsername)
  return fromusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckPCWechatFileRequest::release_fromusername() {
  // @@protoc_insertion_point(field_release:micromsg.CheckPCWechatFileRequest.FromUsername)
  clear_has_fromusername();
  return fromusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckPCWechatFileRequest::set_allocated_fromusername(::std::string* fromusername) {
  if (fromusername != NULL) {
    set_has_fromusername();
  } else {
    clear_has_fromusername();
  }
  fromusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromusername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckPCWechatFileRequest.FromUsername)
}

// optional string ToUsername = 6;
inline bool CheckPCWechatFileRequest::has_tousername() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CheckPCWechatFileRequest::set_has_tousername() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CheckPCWechatFileRequest::clear_has_tousername() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CheckPCWechatFileRequest::clear_tousername() {
  tousername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tousername();
}
inline const ::std::string& CheckPCWechatFileRequest::tousername() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckPCWechatFileRequest.ToUsername)
  return tousername_.GetNoArena();
}
inline void CheckPCWechatFileRequest::set_tousername(const ::std::string& value) {
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckPCWechatFileRequest.ToUsername)
}
#if LANG_CXX11
inline void CheckPCWechatFileRequest::set_tousername(::std::string&& value) {
  set_has_tousername();
  tousername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckPCWechatFileRequest.ToUsername)
}
#endif
inline void CheckPCWechatFileRequest::set_tousername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckPCWechatFileRequest.ToUsername)
}
inline void CheckPCWechatFileRequest::set_tousername(const char* value, size_t size) {
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckPCWechatFileRequest.ToUsername)
}
inline ::std::string* CheckPCWechatFileRequest::mutable_tousername() {
  set_has_tousername();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckPCWechatFileRequest.ToUsername)
  return tousername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckPCWechatFileRequest::release_tousername() {
  // @@protoc_insertion_point(field_release:micromsg.CheckPCWechatFileRequest.ToUsername)
  clear_has_tousername();
  return tousername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckPCWechatFileRequest::set_allocated_tousername(::std::string* tousername) {
  if (tousername != NULL) {
    set_has_tousername();
  } else {
    clear_has_tousername();
  }
  tousername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tousername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckPCWechatFileRequest.ToUsername)
}

// -------------------------------------------------------------------

// CheckPCWechatFileResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool CheckPCWechatFileResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CheckPCWechatFileResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CheckPCWechatFileResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CheckPCWechatFileResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& CheckPCWechatFileResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckPCWechatFileResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* CheckPCWechatFileResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.CheckPCWechatFileResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* CheckPCWechatFileResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.CheckPCWechatFileResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void CheckPCWechatFileResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckPCWechatFileResponse.BaseResponse)
}

// optional int32 BlockStatus = 2;
inline bool CheckPCWechatFileResponse::has_blockstatus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CheckPCWechatFileResponse::set_has_blockstatus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CheckPCWechatFileResponse::clear_has_blockstatus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CheckPCWechatFileResponse::clear_blockstatus() {
  blockstatus_ = 0;
  clear_has_blockstatus();
}
inline ::google::protobuf::int32 CheckPCWechatFileResponse::blockstatus() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckPCWechatFileResponse.BlockStatus)
  return blockstatus_;
}
inline void CheckPCWechatFileResponse::set_blockstatus(::google::protobuf::int32 value) {
  set_has_blockstatus();
  blockstatus_ = value;
  // @@protoc_insertion_point(field_set:micromsg.CheckPCWechatFileResponse.BlockStatus)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace micromsg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mmappmsg_2eproto__INCLUDED
