// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mmbuiltintype.proto

#ifndef PROTOBUF_mmbuiltintype_2eproto__INCLUDED
#define PROTOBUF_mmbuiltintype_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace micromsg {
class BaseRequest;
class BaseRequestDefaultTypeInternal;
extern BaseRequestDefaultTypeInternal _BaseRequest_default_instance_;
class BaseResponse;
class BaseResponseDefaultTypeInternal;
extern BaseResponseDefaultTypeInternal _BaseResponse_default_instance_;
class SKBuiltinBuffer_t;
class SKBuiltinBuffer_tDefaultTypeInternal;
extern SKBuiltinBuffer_tDefaultTypeInternal _SKBuiltinBuffer_t_default_instance_;
class SKBuiltinChar_t;
class SKBuiltinChar_tDefaultTypeInternal;
extern SKBuiltinChar_tDefaultTypeInternal _SKBuiltinChar_t_default_instance_;
class SKBuiltinDouble64_t;
class SKBuiltinDouble64_tDefaultTypeInternal;
extern SKBuiltinDouble64_tDefaultTypeInternal _SKBuiltinDouble64_t_default_instance_;
class SKBuiltinFloat32_t;
class SKBuiltinFloat32_tDefaultTypeInternal;
extern SKBuiltinFloat32_tDefaultTypeInternal _SKBuiltinFloat32_t_default_instance_;
class SKBuiltinInt16_t;
class SKBuiltinInt16_tDefaultTypeInternal;
extern SKBuiltinInt16_tDefaultTypeInternal _SKBuiltinInt16_t_default_instance_;
class SKBuiltinInt32_t;
class SKBuiltinInt32_tDefaultTypeInternal;
extern SKBuiltinInt32_tDefaultTypeInternal _SKBuiltinInt32_t_default_instance_;
class SKBuiltinInt64_t;
class SKBuiltinInt64_tDefaultTypeInternal;
extern SKBuiltinInt64_tDefaultTypeInternal _SKBuiltinInt64_t_default_instance_;
class SKBuiltinInt8_t;
class SKBuiltinInt8_tDefaultTypeInternal;
extern SKBuiltinInt8_tDefaultTypeInternal _SKBuiltinInt8_t_default_instance_;
class SKBuiltinString_t;
class SKBuiltinString_tDefaultTypeInternal;
extern SKBuiltinString_tDefaultTypeInternal _SKBuiltinString_t_default_instance_;
class SKBuiltinUchar_t;
class SKBuiltinUchar_tDefaultTypeInternal;
extern SKBuiltinUchar_tDefaultTypeInternal _SKBuiltinUchar_t_default_instance_;
class SKBuiltinUint16_t;
class SKBuiltinUint16_tDefaultTypeInternal;
extern SKBuiltinUint16_tDefaultTypeInternal _SKBuiltinUint16_t_default_instance_;
class SKBuiltinUint32_t;
class SKBuiltinUint32_tDefaultTypeInternal;
extern SKBuiltinUint32_tDefaultTypeInternal _SKBuiltinUint32_t_default_instance_;
class SKBuiltinUint64_t;
class SKBuiltinUint64_tDefaultTypeInternal;
extern SKBuiltinUint64_tDefaultTypeInternal _SKBuiltinUint64_t_default_instance_;
class SKBuiltinUint8_t;
class SKBuiltinUint8_tDefaultTypeInternal;
extern SKBuiltinUint8_tDefaultTypeInternal _SKBuiltinUint8_t_default_instance_;
}  // namespace micromsg

namespace micromsg {

namespace protobuf_mmbuiltintype_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_mmbuiltintype_2eproto

// ===================================================================

class BaseRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.BaseRequest) */ {
 public:
  BaseRequest();
  virtual ~BaseRequest();

  BaseRequest(const BaseRequest& from);

  inline BaseRequest& operator=(const BaseRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BaseRequest& default_instance();

  static inline const BaseRequest* internal_default_instance() {
    return reinterpret_cast<const BaseRequest*>(
               &_BaseRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(BaseRequest* other);

  // implements Message ----------------------------------------------

  inline BaseRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  BaseRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BaseRequest& from);
  void MergeFrom(const BaseRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BaseRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes SessionKey = 1;
  bool has_sessionkey() const;
  void clear_sessionkey();
  static const int kSessionKeyFieldNumber = 1;
  const ::std::string& sessionkey() const;
  void set_sessionkey(const ::std::string& value);
  #if LANG_CXX11
  void set_sessionkey(::std::string&& value);
  #endif
  void set_sessionkey(const char* value);
  void set_sessionkey(const void* value, size_t size);
  ::std::string* mutable_sessionkey();
  ::std::string* release_sessionkey();
  void set_allocated_sessionkey(::std::string* sessionkey);

  // required bytes DeviceID = 3;
  bool has_deviceid() const;
  void clear_deviceid();
  static const int kDeviceIDFieldNumber = 3;
  const ::std::string& deviceid() const;
  void set_deviceid(const ::std::string& value);
  #if LANG_CXX11
  void set_deviceid(::std::string&& value);
  #endif
  void set_deviceid(const char* value);
  void set_deviceid(const void* value, size_t size);
  ::std::string* mutable_deviceid();
  ::std::string* release_deviceid();
  void set_allocated_deviceid(::std::string* deviceid);

  // required bytes DeviceType = 5;
  bool has_devicetype() const;
  void clear_devicetype();
  static const int kDeviceTypeFieldNumber = 5;
  const ::std::string& devicetype() const;
  void set_devicetype(const ::std::string& value);
  #if LANG_CXX11
  void set_devicetype(::std::string&& value);
  #endif
  void set_devicetype(const char* value);
  void set_devicetype(const void* value, size_t size);
  ::std::string* mutable_devicetype();
  ::std::string* release_devicetype();
  void set_allocated_devicetype(::std::string* devicetype);

  // required uint32 Uin = 2;
  bool has_uin() const;
  void clear_uin();
  static const int kUinFieldNumber = 2;
  ::google::protobuf::uint32 uin() const;
  void set_uin(::google::protobuf::uint32 value);

  // required int32 ClientVersion = 4;
  bool has_clientversion() const;
  void clear_clientversion();
  static const int kClientVersionFieldNumber = 4;
  ::google::protobuf::int32 clientversion() const;
  void set_clientversion(::google::protobuf::int32 value);

  // optional uint32 Scene = 6;
  bool has_scene() const;
  void clear_scene();
  static const int kSceneFieldNumber = 6;
  ::google::protobuf::uint32 scene() const;
  void set_scene(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.BaseRequest)
 private:
  void set_has_sessionkey();
  void clear_has_sessionkey();
  void set_has_uin();
  void clear_has_uin();
  void set_has_deviceid();
  void clear_has_deviceid();
  void set_has_clientversion();
  void clear_has_clientversion();
  void set_has_devicetype();
  void clear_has_devicetype();
  void set_has_scene();
  void clear_has_scene();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr sessionkey_;
  ::google::protobuf::internal::ArenaStringPtr deviceid_;
  ::google::protobuf::internal::ArenaStringPtr devicetype_;
  ::google::protobuf::uint32 uin_;
  ::google::protobuf::int32 clientversion_;
  ::google::protobuf::uint32 scene_;
  friend struct protobuf_mmbuiltintype_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BaseResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.BaseResponse) */ {
 public:
  BaseResponse();
  virtual ~BaseResponse();

  BaseResponse(const BaseResponse& from);

  inline BaseResponse& operator=(const BaseResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BaseResponse& default_instance();

  static inline const BaseResponse* internal_default_instance() {
    return reinterpret_cast<const BaseResponse*>(
               &_BaseResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(BaseResponse* other);

  // implements Message ----------------------------------------------

  inline BaseResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  BaseResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BaseResponse& from);
  void MergeFrom(const BaseResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BaseResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.SKBuiltinString_t ErrMsg = 2;
  bool has_errmsg() const;
  void clear_errmsg();
  static const int kErrMsgFieldNumber = 2;
  const ::micromsg::SKBuiltinString_t& errmsg() const;
  ::micromsg::SKBuiltinString_t* mutable_errmsg();
  ::micromsg::SKBuiltinString_t* release_errmsg();
  void set_allocated_errmsg(::micromsg::SKBuiltinString_t* errmsg);

  // required int32 Ret = 1;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.BaseResponse)
 private:
  void set_has_ret();
  void clear_has_ret();
  void set_has_errmsg();
  void clear_has_errmsg();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::SKBuiltinString_t* errmsg_;
  ::google::protobuf::int32 ret_;
  friend struct protobuf_mmbuiltintype_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SKBuiltinInt32_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SKBuiltinInt32_t) */ {
 public:
  SKBuiltinInt32_t();
  virtual ~SKBuiltinInt32_t();

  SKBuiltinInt32_t(const SKBuiltinInt32_t& from);

  inline SKBuiltinInt32_t& operator=(const SKBuiltinInt32_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SKBuiltinInt32_t& default_instance();

  static inline const SKBuiltinInt32_t* internal_default_instance() {
    return reinterpret_cast<const SKBuiltinInt32_t*>(
               &_SKBuiltinInt32_t_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(SKBuiltinInt32_t* other);

  // implements Message ----------------------------------------------

  inline SKBuiltinInt32_t* New() const PROTOBUF_FINAL { return New(NULL); }

  SKBuiltinInt32_t* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SKBuiltinInt32_t& from);
  void MergeFrom(const SKBuiltinInt32_t& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SKBuiltinInt32_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 iVal = 1;
  bool has_ival() const;
  void clear_ival();
  static const int kIValFieldNumber = 1;
  ::google::protobuf::uint32 ival() const;
  void set_ival(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SKBuiltinInt32_t)
 private:
  void set_has_ival();
  void clear_has_ival();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 ival_;
  friend struct protobuf_mmbuiltintype_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SKBuiltinUint32_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SKBuiltinUint32_t) */ {
 public:
  SKBuiltinUint32_t();
  virtual ~SKBuiltinUint32_t();

  SKBuiltinUint32_t(const SKBuiltinUint32_t& from);

  inline SKBuiltinUint32_t& operator=(const SKBuiltinUint32_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SKBuiltinUint32_t& default_instance();

  static inline const SKBuiltinUint32_t* internal_default_instance() {
    return reinterpret_cast<const SKBuiltinUint32_t*>(
               &_SKBuiltinUint32_t_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(SKBuiltinUint32_t* other);

  // implements Message ----------------------------------------------

  inline SKBuiltinUint32_t* New() const PROTOBUF_FINAL { return New(NULL); }

  SKBuiltinUint32_t* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SKBuiltinUint32_t& from);
  void MergeFrom(const SKBuiltinUint32_t& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SKBuiltinUint32_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiVal = 1;
  bool has_uival() const;
  void clear_uival();
  static const int kUiValFieldNumber = 1;
  ::google::protobuf::uint32 uival() const;
  void set_uival(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SKBuiltinUint32_t)
 private:
  void set_has_uival();
  void clear_has_uival();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 uival_;
  friend struct protobuf_mmbuiltintype_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SKBuiltinChar_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SKBuiltinChar_t) */ {
 public:
  SKBuiltinChar_t();
  virtual ~SKBuiltinChar_t();

  SKBuiltinChar_t(const SKBuiltinChar_t& from);

  inline SKBuiltinChar_t& operator=(const SKBuiltinChar_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SKBuiltinChar_t& default_instance();

  static inline const SKBuiltinChar_t* internal_default_instance() {
    return reinterpret_cast<const SKBuiltinChar_t*>(
               &_SKBuiltinChar_t_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(SKBuiltinChar_t* other);

  // implements Message ----------------------------------------------

  inline SKBuiltinChar_t* New() const PROTOBUF_FINAL { return New(NULL); }

  SKBuiltinChar_t* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SKBuiltinChar_t& from);
  void MergeFrom(const SKBuiltinChar_t& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SKBuiltinChar_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iVal = 1;
  bool has_ival() const;
  void clear_ival();
  static const int kIValFieldNumber = 1;
  ::google::protobuf::int32 ival() const;
  void set_ival(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SKBuiltinChar_t)
 private:
  void set_has_ival();
  void clear_has_ival();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 ival_;
  friend struct protobuf_mmbuiltintype_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SKBuiltinUchar_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SKBuiltinUchar_t) */ {
 public:
  SKBuiltinUchar_t();
  virtual ~SKBuiltinUchar_t();

  SKBuiltinUchar_t(const SKBuiltinUchar_t& from);

  inline SKBuiltinUchar_t& operator=(const SKBuiltinUchar_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SKBuiltinUchar_t& default_instance();

  static inline const SKBuiltinUchar_t* internal_default_instance() {
    return reinterpret_cast<const SKBuiltinUchar_t*>(
               &_SKBuiltinUchar_t_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(SKBuiltinUchar_t* other);

  // implements Message ----------------------------------------------

  inline SKBuiltinUchar_t* New() const PROTOBUF_FINAL { return New(NULL); }

  SKBuiltinUchar_t* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SKBuiltinUchar_t& from);
  void MergeFrom(const SKBuiltinUchar_t& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SKBuiltinUchar_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiVal = 1;
  bool has_uival() const;
  void clear_uival();
  static const int kUiValFieldNumber = 1;
  ::google::protobuf::uint32 uival() const;
  void set_uival(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SKBuiltinUchar_t)
 private:
  void set_has_uival();
  void clear_has_uival();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 uival_;
  friend struct protobuf_mmbuiltintype_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SKBuiltinInt8_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SKBuiltinInt8_t) */ {
 public:
  SKBuiltinInt8_t();
  virtual ~SKBuiltinInt8_t();

  SKBuiltinInt8_t(const SKBuiltinInt8_t& from);

  inline SKBuiltinInt8_t& operator=(const SKBuiltinInt8_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SKBuiltinInt8_t& default_instance();

  static inline const SKBuiltinInt8_t* internal_default_instance() {
    return reinterpret_cast<const SKBuiltinInt8_t*>(
               &_SKBuiltinInt8_t_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(SKBuiltinInt8_t* other);

  // implements Message ----------------------------------------------

  inline SKBuiltinInt8_t* New() const PROTOBUF_FINAL { return New(NULL); }

  SKBuiltinInt8_t* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SKBuiltinInt8_t& from);
  void MergeFrom(const SKBuiltinInt8_t& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SKBuiltinInt8_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iVal = 1;
  bool has_ival() const;
  void clear_ival();
  static const int kIValFieldNumber = 1;
  ::google::protobuf::int32 ival() const;
  void set_ival(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SKBuiltinInt8_t)
 private:
  void set_has_ival();
  void clear_has_ival();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 ival_;
  friend struct protobuf_mmbuiltintype_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SKBuiltinUint8_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SKBuiltinUint8_t) */ {
 public:
  SKBuiltinUint8_t();
  virtual ~SKBuiltinUint8_t();

  SKBuiltinUint8_t(const SKBuiltinUint8_t& from);

  inline SKBuiltinUint8_t& operator=(const SKBuiltinUint8_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SKBuiltinUint8_t& default_instance();

  static inline const SKBuiltinUint8_t* internal_default_instance() {
    return reinterpret_cast<const SKBuiltinUint8_t*>(
               &_SKBuiltinUint8_t_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(SKBuiltinUint8_t* other);

  // implements Message ----------------------------------------------

  inline SKBuiltinUint8_t* New() const PROTOBUF_FINAL { return New(NULL); }

  SKBuiltinUint8_t* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SKBuiltinUint8_t& from);
  void MergeFrom(const SKBuiltinUint8_t& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SKBuiltinUint8_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiVal = 1;
  bool has_uival() const;
  void clear_uival();
  static const int kUiValFieldNumber = 1;
  ::google::protobuf::uint32 uival() const;
  void set_uival(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SKBuiltinUint8_t)
 private:
  void set_has_uival();
  void clear_has_uival();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 uival_;
  friend struct protobuf_mmbuiltintype_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SKBuiltinInt16_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SKBuiltinInt16_t) */ {
 public:
  SKBuiltinInt16_t();
  virtual ~SKBuiltinInt16_t();

  SKBuiltinInt16_t(const SKBuiltinInt16_t& from);

  inline SKBuiltinInt16_t& operator=(const SKBuiltinInt16_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SKBuiltinInt16_t& default_instance();

  static inline const SKBuiltinInt16_t* internal_default_instance() {
    return reinterpret_cast<const SKBuiltinInt16_t*>(
               &_SKBuiltinInt16_t_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(SKBuiltinInt16_t* other);

  // implements Message ----------------------------------------------

  inline SKBuiltinInt16_t* New() const PROTOBUF_FINAL { return New(NULL); }

  SKBuiltinInt16_t* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SKBuiltinInt16_t& from);
  void MergeFrom(const SKBuiltinInt16_t& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SKBuiltinInt16_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 iVal = 1;
  bool has_ival() const;
  void clear_ival();
  static const int kIValFieldNumber = 1;
  ::google::protobuf::int32 ival() const;
  void set_ival(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SKBuiltinInt16_t)
 private:
  void set_has_ival();
  void clear_has_ival();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 ival_;
  friend struct protobuf_mmbuiltintype_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SKBuiltinUint16_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SKBuiltinUint16_t) */ {
 public:
  SKBuiltinUint16_t();
  virtual ~SKBuiltinUint16_t();

  SKBuiltinUint16_t(const SKBuiltinUint16_t& from);

  inline SKBuiltinUint16_t& operator=(const SKBuiltinUint16_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SKBuiltinUint16_t& default_instance();

  static inline const SKBuiltinUint16_t* internal_default_instance() {
    return reinterpret_cast<const SKBuiltinUint16_t*>(
               &_SKBuiltinUint16_t_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(SKBuiltinUint16_t* other);

  // implements Message ----------------------------------------------

  inline SKBuiltinUint16_t* New() const PROTOBUF_FINAL { return New(NULL); }

  SKBuiltinUint16_t* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SKBuiltinUint16_t& from);
  void MergeFrom(const SKBuiltinUint16_t& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SKBuiltinUint16_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uiVal = 1;
  bool has_uival() const;
  void clear_uival();
  static const int kUiValFieldNumber = 1;
  ::google::protobuf::uint32 uival() const;
  void set_uival(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SKBuiltinUint16_t)
 private:
  void set_has_uival();
  void clear_has_uival();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 uival_;
  friend struct protobuf_mmbuiltintype_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SKBuiltinInt64_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SKBuiltinInt64_t) */ {
 public:
  SKBuiltinInt64_t();
  virtual ~SKBuiltinInt64_t();

  SKBuiltinInt64_t(const SKBuiltinInt64_t& from);

  inline SKBuiltinInt64_t& operator=(const SKBuiltinInt64_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SKBuiltinInt64_t& default_instance();

  static inline const SKBuiltinInt64_t* internal_default_instance() {
    return reinterpret_cast<const SKBuiltinInt64_t*>(
               &_SKBuiltinInt64_t_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(SKBuiltinInt64_t* other);

  // implements Message ----------------------------------------------

  inline SKBuiltinInt64_t* New() const PROTOBUF_FINAL { return New(NULL); }

  SKBuiltinInt64_t* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SKBuiltinInt64_t& from);
  void MergeFrom(const SKBuiltinInt64_t& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SKBuiltinInt64_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 llVal = 1;
  bool has_llval() const;
  void clear_llval();
  static const int kLlValFieldNumber = 1;
  ::google::protobuf::int64 llval() const;
  void set_llval(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:micromsg.SKBuiltinInt64_t)
 private:
  void set_has_llval();
  void clear_has_llval();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 llval_;
  friend struct protobuf_mmbuiltintype_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SKBuiltinUint64_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SKBuiltinUint64_t) */ {
 public:
  SKBuiltinUint64_t();
  virtual ~SKBuiltinUint64_t();

  SKBuiltinUint64_t(const SKBuiltinUint64_t& from);

  inline SKBuiltinUint64_t& operator=(const SKBuiltinUint64_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SKBuiltinUint64_t& default_instance();

  static inline const SKBuiltinUint64_t* internal_default_instance() {
    return reinterpret_cast<const SKBuiltinUint64_t*>(
               &_SKBuiltinUint64_t_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(SKBuiltinUint64_t* other);

  // implements Message ----------------------------------------------

  inline SKBuiltinUint64_t* New() const PROTOBUF_FINAL { return New(NULL); }

  SKBuiltinUint64_t* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SKBuiltinUint64_t& from);
  void MergeFrom(const SKBuiltinUint64_t& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SKBuiltinUint64_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 ullVal = 1;
  bool has_ullval() const;
  void clear_ullval();
  static const int kUllValFieldNumber = 1;
  ::google::protobuf::uint64 ullval() const;
  void set_ullval(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:micromsg.SKBuiltinUint64_t)
 private:
  void set_has_ullval();
  void clear_has_ullval();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 ullval_;
  friend struct protobuf_mmbuiltintype_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SKBuiltinFloat32_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SKBuiltinFloat32_t) */ {
 public:
  SKBuiltinFloat32_t();
  virtual ~SKBuiltinFloat32_t();

  SKBuiltinFloat32_t(const SKBuiltinFloat32_t& from);

  inline SKBuiltinFloat32_t& operator=(const SKBuiltinFloat32_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SKBuiltinFloat32_t& default_instance();

  static inline const SKBuiltinFloat32_t* internal_default_instance() {
    return reinterpret_cast<const SKBuiltinFloat32_t*>(
               &_SKBuiltinFloat32_t_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(SKBuiltinFloat32_t* other);

  // implements Message ----------------------------------------------

  inline SKBuiltinFloat32_t* New() const PROTOBUF_FINAL { return New(NULL); }

  SKBuiltinFloat32_t* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SKBuiltinFloat32_t& from);
  void MergeFrom(const SKBuiltinFloat32_t& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SKBuiltinFloat32_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float fVal = 1;
  bool has_fval() const;
  void clear_fval();
  static const int kFValFieldNumber = 1;
  float fval() const;
  void set_fval(float value);

  // @@protoc_insertion_point(class_scope:micromsg.SKBuiltinFloat32_t)
 private:
  void set_has_fval();
  void clear_has_fval();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  float fval_;
  friend struct protobuf_mmbuiltintype_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SKBuiltinDouble64_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SKBuiltinDouble64_t) */ {
 public:
  SKBuiltinDouble64_t();
  virtual ~SKBuiltinDouble64_t();

  SKBuiltinDouble64_t(const SKBuiltinDouble64_t& from);

  inline SKBuiltinDouble64_t& operator=(const SKBuiltinDouble64_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SKBuiltinDouble64_t& default_instance();

  static inline const SKBuiltinDouble64_t* internal_default_instance() {
    return reinterpret_cast<const SKBuiltinDouble64_t*>(
               &_SKBuiltinDouble64_t_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(SKBuiltinDouble64_t* other);

  // implements Message ----------------------------------------------

  inline SKBuiltinDouble64_t* New() const PROTOBUF_FINAL { return New(NULL); }

  SKBuiltinDouble64_t* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SKBuiltinDouble64_t& from);
  void MergeFrom(const SKBuiltinDouble64_t& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SKBuiltinDouble64_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double dVal = 1;
  bool has_dval() const;
  void clear_dval();
  static const int kDValFieldNumber = 1;
  double dval() const;
  void set_dval(double value);

  // @@protoc_insertion_point(class_scope:micromsg.SKBuiltinDouble64_t)
 private:
  void set_has_dval();
  void clear_has_dval();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  double dval_;
  friend struct protobuf_mmbuiltintype_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SKBuiltinBuffer_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SKBuiltinBuffer_t) */ {
 public:
  SKBuiltinBuffer_t();
  virtual ~SKBuiltinBuffer_t();

  SKBuiltinBuffer_t(const SKBuiltinBuffer_t& from);

  inline SKBuiltinBuffer_t& operator=(const SKBuiltinBuffer_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SKBuiltinBuffer_t& default_instance();

  static inline const SKBuiltinBuffer_t* internal_default_instance() {
    return reinterpret_cast<const SKBuiltinBuffer_t*>(
               &_SKBuiltinBuffer_t_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(SKBuiltinBuffer_t* other);

  // implements Message ----------------------------------------------

  inline SKBuiltinBuffer_t* New() const PROTOBUF_FINAL { return New(NULL); }

  SKBuiltinBuffer_t* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SKBuiltinBuffer_t& from);
  void MergeFrom(const SKBuiltinBuffer_t& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SKBuiltinBuffer_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes Buffer = 2;
  bool has_buffer() const;
  void clear_buffer();
  static const int kBufferFieldNumber = 2;
  const ::std::string& buffer() const;
  void set_buffer(const ::std::string& value);
  #if LANG_CXX11
  void set_buffer(::std::string&& value);
  #endif
  void set_buffer(const char* value);
  void set_buffer(const void* value, size_t size);
  ::std::string* mutable_buffer();
  ::std::string* release_buffer();
  void set_allocated_buffer(::std::string* buffer);

  // required uint32 iLen = 1;
  bool has_ilen() const;
  void clear_ilen();
  static const int kILenFieldNumber = 1;
  ::google::protobuf::uint32 ilen() const;
  void set_ilen(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SKBuiltinBuffer_t)
 private:
  void set_has_ilen();
  void clear_has_ilen();
  void set_has_buffer();
  void clear_has_buffer();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr buffer_;
  ::google::protobuf::uint32 ilen_;
  friend struct protobuf_mmbuiltintype_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SKBuiltinString_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SKBuiltinString_t) */ {
 public:
  SKBuiltinString_t();
  virtual ~SKBuiltinString_t();

  SKBuiltinString_t(const SKBuiltinString_t& from);

  inline SKBuiltinString_t& operator=(const SKBuiltinString_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SKBuiltinString_t& default_instance();

  static inline const SKBuiltinString_t* internal_default_instance() {
    return reinterpret_cast<const SKBuiltinString_t*>(
               &_SKBuiltinString_t_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(SKBuiltinString_t* other);

  // implements Message ----------------------------------------------

  inline SKBuiltinString_t* New() const PROTOBUF_FINAL { return New(NULL); }

  SKBuiltinString_t* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SKBuiltinString_t& from);
  void MergeFrom(const SKBuiltinString_t& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SKBuiltinString_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string String = 1;
  bool has_string() const;
  void clear_string();
  static const int kStringFieldNumber = 1;
  const ::std::string& string() const;
  void set_string(const ::std::string& value);
  #if LANG_CXX11
  void set_string(::std::string&& value);
  #endif
  void set_string(const char* value);
  void set_string(const char* value, size_t size);
  ::std::string* mutable_string();
  ::std::string* release_string();
  void set_allocated_string(::std::string* string);

  // @@protoc_insertion_point(class_scope:micromsg.SKBuiltinString_t)
 private:
  void set_has_string();
  void clear_has_string();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr string_;
  friend struct protobuf_mmbuiltintype_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseRequest

// required bytes SessionKey = 1;
inline bool BaseRequest::has_sessionkey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BaseRequest::set_has_sessionkey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BaseRequest::clear_has_sessionkey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BaseRequest::clear_sessionkey() {
  sessionkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sessionkey();
}
inline const ::std::string& BaseRequest::sessionkey() const {
  // @@protoc_insertion_point(field_get:micromsg.BaseRequest.SessionKey)
  return sessionkey_.GetNoArena();
}
inline void BaseRequest::set_sessionkey(const ::std::string& value) {
  set_has_sessionkey();
  sessionkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BaseRequest.SessionKey)
}
#if LANG_CXX11
inline void BaseRequest::set_sessionkey(::std::string&& value) {
  set_has_sessionkey();
  sessionkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BaseRequest.SessionKey)
}
#endif
inline void BaseRequest::set_sessionkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sessionkey();
  sessionkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BaseRequest.SessionKey)
}
inline void BaseRequest::set_sessionkey(const void* value, size_t size) {
  set_has_sessionkey();
  sessionkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BaseRequest.SessionKey)
}
inline ::std::string* BaseRequest::mutable_sessionkey() {
  set_has_sessionkey();
  // @@protoc_insertion_point(field_mutable:micromsg.BaseRequest.SessionKey)
  return sessionkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BaseRequest::release_sessionkey() {
  // @@protoc_insertion_point(field_release:micromsg.BaseRequest.SessionKey)
  clear_has_sessionkey();
  return sessionkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BaseRequest::set_allocated_sessionkey(::std::string* sessionkey) {
  if (sessionkey != NULL) {
    set_has_sessionkey();
  } else {
    clear_has_sessionkey();
  }
  sessionkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sessionkey);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BaseRequest.SessionKey)
}

// required uint32 Uin = 2;
inline bool BaseRequest::has_uin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BaseRequest::set_has_uin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BaseRequest::clear_has_uin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BaseRequest::clear_uin() {
  uin_ = 0u;
  clear_has_uin();
}
inline ::google::protobuf::uint32 BaseRequest::uin() const {
  // @@protoc_insertion_point(field_get:micromsg.BaseRequest.Uin)
  return uin_;
}
inline void BaseRequest::set_uin(::google::protobuf::uint32 value) {
  set_has_uin();
  uin_ = value;
  // @@protoc_insertion_point(field_set:micromsg.BaseRequest.Uin)
}

// required bytes DeviceID = 3;
inline bool BaseRequest::has_deviceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BaseRequest::set_has_deviceid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BaseRequest::clear_has_deviceid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BaseRequest::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deviceid();
}
inline const ::std::string& BaseRequest::deviceid() const {
  // @@protoc_insertion_point(field_get:micromsg.BaseRequest.DeviceID)
  return deviceid_.GetNoArena();
}
inline void BaseRequest::set_deviceid(const ::std::string& value) {
  set_has_deviceid();
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BaseRequest.DeviceID)
}
#if LANG_CXX11
inline void BaseRequest::set_deviceid(::std::string&& value) {
  set_has_deviceid();
  deviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BaseRequest.DeviceID)
}
#endif
inline void BaseRequest::set_deviceid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_deviceid();
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BaseRequest.DeviceID)
}
inline void BaseRequest::set_deviceid(const void* value, size_t size) {
  set_has_deviceid();
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BaseRequest.DeviceID)
}
inline ::std::string* BaseRequest::mutable_deviceid() {
  set_has_deviceid();
  // @@protoc_insertion_point(field_mutable:micromsg.BaseRequest.DeviceID)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BaseRequest::release_deviceid() {
  // @@protoc_insertion_point(field_release:micromsg.BaseRequest.DeviceID)
  clear_has_deviceid();
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BaseRequest::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != NULL) {
    set_has_deviceid();
  } else {
    clear_has_deviceid();
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BaseRequest.DeviceID)
}

// required int32 ClientVersion = 4;
inline bool BaseRequest::has_clientversion() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BaseRequest::set_has_clientversion() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BaseRequest::clear_has_clientversion() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BaseRequest::clear_clientversion() {
  clientversion_ = 0;
  clear_has_clientversion();
}
inline ::google::protobuf::int32 BaseRequest::clientversion() const {
  // @@protoc_insertion_point(field_get:micromsg.BaseRequest.ClientVersion)
  return clientversion_;
}
inline void BaseRequest::set_clientversion(::google::protobuf::int32 value) {
  set_has_clientversion();
  clientversion_ = value;
  // @@protoc_insertion_point(field_set:micromsg.BaseRequest.ClientVersion)
}

// required bytes DeviceType = 5;
inline bool BaseRequest::has_devicetype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BaseRequest::set_has_devicetype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BaseRequest::clear_has_devicetype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BaseRequest::clear_devicetype() {
  devicetype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_devicetype();
}
inline const ::std::string& BaseRequest::devicetype() const {
  // @@protoc_insertion_point(field_get:micromsg.BaseRequest.DeviceType)
  return devicetype_.GetNoArena();
}
inline void BaseRequest::set_devicetype(const ::std::string& value) {
  set_has_devicetype();
  devicetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BaseRequest.DeviceType)
}
#if LANG_CXX11
inline void BaseRequest::set_devicetype(::std::string&& value) {
  set_has_devicetype();
  devicetype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BaseRequest.DeviceType)
}
#endif
inline void BaseRequest::set_devicetype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_devicetype();
  devicetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BaseRequest.DeviceType)
}
inline void BaseRequest::set_devicetype(const void* value, size_t size) {
  set_has_devicetype();
  devicetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BaseRequest.DeviceType)
}
inline ::std::string* BaseRequest::mutable_devicetype() {
  set_has_devicetype();
  // @@protoc_insertion_point(field_mutable:micromsg.BaseRequest.DeviceType)
  return devicetype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BaseRequest::release_devicetype() {
  // @@protoc_insertion_point(field_release:micromsg.BaseRequest.DeviceType)
  clear_has_devicetype();
  return devicetype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BaseRequest::set_allocated_devicetype(::std::string* devicetype) {
  if (devicetype != NULL) {
    set_has_devicetype();
  } else {
    clear_has_devicetype();
  }
  devicetype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devicetype);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BaseRequest.DeviceType)
}

// optional uint32 Scene = 6;
inline bool BaseRequest::has_scene() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BaseRequest::set_has_scene() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BaseRequest::clear_has_scene() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BaseRequest::clear_scene() {
  scene_ = 0u;
  clear_has_scene();
}
inline ::google::protobuf::uint32 BaseRequest::scene() const {
  // @@protoc_insertion_point(field_get:micromsg.BaseRequest.Scene)
  return scene_;
}
inline void BaseRequest::set_scene(::google::protobuf::uint32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.BaseRequest.Scene)
}

// -------------------------------------------------------------------

// BaseResponse

// required int32 Ret = 1;
inline bool BaseResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BaseResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BaseResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BaseResponse::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 BaseResponse::ret() const {
  // @@protoc_insertion_point(field_get:micromsg.BaseResponse.Ret)
  return ret_;
}
inline void BaseResponse::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:micromsg.BaseResponse.Ret)
}

// required .micromsg.SKBuiltinString_t ErrMsg = 2;
inline bool BaseResponse::has_errmsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BaseResponse::set_has_errmsg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BaseResponse::clear_has_errmsg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BaseResponse::clear_errmsg() {
  if (errmsg_ != NULL) errmsg_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_errmsg();
}
inline const ::micromsg::SKBuiltinString_t& BaseResponse::errmsg() const {
  // @@protoc_insertion_point(field_get:micromsg.BaseResponse.ErrMsg)
  return errmsg_ != NULL ? *errmsg_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* BaseResponse::mutable_errmsg() {
  set_has_errmsg();
  if (errmsg_ == NULL) {
    errmsg_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.BaseResponse.ErrMsg)
  return errmsg_;
}
inline ::micromsg::SKBuiltinString_t* BaseResponse::release_errmsg() {
  // @@protoc_insertion_point(field_release:micromsg.BaseResponse.ErrMsg)
  clear_has_errmsg();
  ::micromsg::SKBuiltinString_t* temp = errmsg_;
  errmsg_ = NULL;
  return temp;
}
inline void BaseResponse::set_allocated_errmsg(::micromsg::SKBuiltinString_t* errmsg) {
  delete errmsg_;
  errmsg_ = errmsg;
  if (errmsg) {
    set_has_errmsg();
  } else {
    clear_has_errmsg();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.BaseResponse.ErrMsg)
}

// -------------------------------------------------------------------

// SKBuiltinInt32_t

// required uint32 iVal = 1;
inline bool SKBuiltinInt32_t::has_ival() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SKBuiltinInt32_t::set_has_ival() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SKBuiltinInt32_t::clear_has_ival() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SKBuiltinInt32_t::clear_ival() {
  ival_ = 0u;
  clear_has_ival();
}
inline ::google::protobuf::uint32 SKBuiltinInt32_t::ival() const {
  // @@protoc_insertion_point(field_get:micromsg.SKBuiltinInt32_t.iVal)
  return ival_;
}
inline void SKBuiltinInt32_t::set_ival(::google::protobuf::uint32 value) {
  set_has_ival();
  ival_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SKBuiltinInt32_t.iVal)
}

// -------------------------------------------------------------------

// SKBuiltinUint32_t

// required uint32 uiVal = 1;
inline bool SKBuiltinUint32_t::has_uival() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SKBuiltinUint32_t::set_has_uival() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SKBuiltinUint32_t::clear_has_uival() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SKBuiltinUint32_t::clear_uival() {
  uival_ = 0u;
  clear_has_uival();
}
inline ::google::protobuf::uint32 SKBuiltinUint32_t::uival() const {
  // @@protoc_insertion_point(field_get:micromsg.SKBuiltinUint32_t.uiVal)
  return uival_;
}
inline void SKBuiltinUint32_t::set_uival(::google::protobuf::uint32 value) {
  set_has_uival();
  uival_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SKBuiltinUint32_t.uiVal)
}

// -------------------------------------------------------------------

// SKBuiltinChar_t

// required int32 iVal = 1;
inline bool SKBuiltinChar_t::has_ival() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SKBuiltinChar_t::set_has_ival() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SKBuiltinChar_t::clear_has_ival() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SKBuiltinChar_t::clear_ival() {
  ival_ = 0;
  clear_has_ival();
}
inline ::google::protobuf::int32 SKBuiltinChar_t::ival() const {
  // @@protoc_insertion_point(field_get:micromsg.SKBuiltinChar_t.iVal)
  return ival_;
}
inline void SKBuiltinChar_t::set_ival(::google::protobuf::int32 value) {
  set_has_ival();
  ival_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SKBuiltinChar_t.iVal)
}

// -------------------------------------------------------------------

// SKBuiltinUchar_t

// required uint32 uiVal = 1;
inline bool SKBuiltinUchar_t::has_uival() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SKBuiltinUchar_t::set_has_uival() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SKBuiltinUchar_t::clear_has_uival() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SKBuiltinUchar_t::clear_uival() {
  uival_ = 0u;
  clear_has_uival();
}
inline ::google::protobuf::uint32 SKBuiltinUchar_t::uival() const {
  // @@protoc_insertion_point(field_get:micromsg.SKBuiltinUchar_t.uiVal)
  return uival_;
}
inline void SKBuiltinUchar_t::set_uival(::google::protobuf::uint32 value) {
  set_has_uival();
  uival_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SKBuiltinUchar_t.uiVal)
}

// -------------------------------------------------------------------

// SKBuiltinInt8_t

// required int32 iVal = 1;
inline bool SKBuiltinInt8_t::has_ival() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SKBuiltinInt8_t::set_has_ival() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SKBuiltinInt8_t::clear_has_ival() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SKBuiltinInt8_t::clear_ival() {
  ival_ = 0;
  clear_has_ival();
}
inline ::google::protobuf::int32 SKBuiltinInt8_t::ival() const {
  // @@protoc_insertion_point(field_get:micromsg.SKBuiltinInt8_t.iVal)
  return ival_;
}
inline void SKBuiltinInt8_t::set_ival(::google::protobuf::int32 value) {
  set_has_ival();
  ival_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SKBuiltinInt8_t.iVal)
}

// -------------------------------------------------------------------

// SKBuiltinUint8_t

// required uint32 uiVal = 1;
inline bool SKBuiltinUint8_t::has_uival() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SKBuiltinUint8_t::set_has_uival() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SKBuiltinUint8_t::clear_has_uival() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SKBuiltinUint8_t::clear_uival() {
  uival_ = 0u;
  clear_has_uival();
}
inline ::google::protobuf::uint32 SKBuiltinUint8_t::uival() const {
  // @@protoc_insertion_point(field_get:micromsg.SKBuiltinUint8_t.uiVal)
  return uival_;
}
inline void SKBuiltinUint8_t::set_uival(::google::protobuf::uint32 value) {
  set_has_uival();
  uival_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SKBuiltinUint8_t.uiVal)
}

// -------------------------------------------------------------------

// SKBuiltinInt16_t

// required int32 iVal = 1;
inline bool SKBuiltinInt16_t::has_ival() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SKBuiltinInt16_t::set_has_ival() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SKBuiltinInt16_t::clear_has_ival() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SKBuiltinInt16_t::clear_ival() {
  ival_ = 0;
  clear_has_ival();
}
inline ::google::protobuf::int32 SKBuiltinInt16_t::ival() const {
  // @@protoc_insertion_point(field_get:micromsg.SKBuiltinInt16_t.iVal)
  return ival_;
}
inline void SKBuiltinInt16_t::set_ival(::google::protobuf::int32 value) {
  set_has_ival();
  ival_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SKBuiltinInt16_t.iVal)
}

// -------------------------------------------------------------------

// SKBuiltinUint16_t

// required uint32 uiVal = 1;
inline bool SKBuiltinUint16_t::has_uival() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SKBuiltinUint16_t::set_has_uival() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SKBuiltinUint16_t::clear_has_uival() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SKBuiltinUint16_t::clear_uival() {
  uival_ = 0u;
  clear_has_uival();
}
inline ::google::protobuf::uint32 SKBuiltinUint16_t::uival() const {
  // @@protoc_insertion_point(field_get:micromsg.SKBuiltinUint16_t.uiVal)
  return uival_;
}
inline void SKBuiltinUint16_t::set_uival(::google::protobuf::uint32 value) {
  set_has_uival();
  uival_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SKBuiltinUint16_t.uiVal)
}

// -------------------------------------------------------------------

// SKBuiltinInt64_t

// required int64 llVal = 1;
inline bool SKBuiltinInt64_t::has_llval() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SKBuiltinInt64_t::set_has_llval() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SKBuiltinInt64_t::clear_has_llval() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SKBuiltinInt64_t::clear_llval() {
  llval_ = GOOGLE_LONGLONG(0);
  clear_has_llval();
}
inline ::google::protobuf::int64 SKBuiltinInt64_t::llval() const {
  // @@protoc_insertion_point(field_get:micromsg.SKBuiltinInt64_t.llVal)
  return llval_;
}
inline void SKBuiltinInt64_t::set_llval(::google::protobuf::int64 value) {
  set_has_llval();
  llval_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SKBuiltinInt64_t.llVal)
}

// -------------------------------------------------------------------

// SKBuiltinUint64_t

// required uint64 ullVal = 1;
inline bool SKBuiltinUint64_t::has_ullval() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SKBuiltinUint64_t::set_has_ullval() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SKBuiltinUint64_t::clear_has_ullval() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SKBuiltinUint64_t::clear_ullval() {
  ullval_ = GOOGLE_ULONGLONG(0);
  clear_has_ullval();
}
inline ::google::protobuf::uint64 SKBuiltinUint64_t::ullval() const {
  // @@protoc_insertion_point(field_get:micromsg.SKBuiltinUint64_t.ullVal)
  return ullval_;
}
inline void SKBuiltinUint64_t::set_ullval(::google::protobuf::uint64 value) {
  set_has_ullval();
  ullval_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SKBuiltinUint64_t.ullVal)
}

// -------------------------------------------------------------------

// SKBuiltinFloat32_t

// required float fVal = 1;
inline bool SKBuiltinFloat32_t::has_fval() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SKBuiltinFloat32_t::set_has_fval() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SKBuiltinFloat32_t::clear_has_fval() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SKBuiltinFloat32_t::clear_fval() {
  fval_ = 0;
  clear_has_fval();
}
inline float SKBuiltinFloat32_t::fval() const {
  // @@protoc_insertion_point(field_get:micromsg.SKBuiltinFloat32_t.fVal)
  return fval_;
}
inline void SKBuiltinFloat32_t::set_fval(float value) {
  set_has_fval();
  fval_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SKBuiltinFloat32_t.fVal)
}

// -------------------------------------------------------------------

// SKBuiltinDouble64_t

// required double dVal = 1;
inline bool SKBuiltinDouble64_t::has_dval() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SKBuiltinDouble64_t::set_has_dval() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SKBuiltinDouble64_t::clear_has_dval() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SKBuiltinDouble64_t::clear_dval() {
  dval_ = 0;
  clear_has_dval();
}
inline double SKBuiltinDouble64_t::dval() const {
  // @@protoc_insertion_point(field_get:micromsg.SKBuiltinDouble64_t.dVal)
  return dval_;
}
inline void SKBuiltinDouble64_t::set_dval(double value) {
  set_has_dval();
  dval_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SKBuiltinDouble64_t.dVal)
}

// -------------------------------------------------------------------

// SKBuiltinBuffer_t

// required uint32 iLen = 1;
inline bool SKBuiltinBuffer_t::has_ilen() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SKBuiltinBuffer_t::set_has_ilen() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SKBuiltinBuffer_t::clear_has_ilen() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SKBuiltinBuffer_t::clear_ilen() {
  ilen_ = 0u;
  clear_has_ilen();
}
inline ::google::protobuf::uint32 SKBuiltinBuffer_t::ilen() const {
  // @@protoc_insertion_point(field_get:micromsg.SKBuiltinBuffer_t.iLen)
  return ilen_;
}
inline void SKBuiltinBuffer_t::set_ilen(::google::protobuf::uint32 value) {
  set_has_ilen();
  ilen_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SKBuiltinBuffer_t.iLen)
}

// optional bytes Buffer = 2;
inline bool SKBuiltinBuffer_t::has_buffer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SKBuiltinBuffer_t::set_has_buffer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SKBuiltinBuffer_t::clear_has_buffer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SKBuiltinBuffer_t::clear_buffer() {
  buffer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_buffer();
}
inline const ::std::string& SKBuiltinBuffer_t::buffer() const {
  // @@protoc_insertion_point(field_get:micromsg.SKBuiltinBuffer_t.Buffer)
  return buffer_.GetNoArena();
}
inline void SKBuiltinBuffer_t::set_buffer(const ::std::string& value) {
  set_has_buffer();
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SKBuiltinBuffer_t.Buffer)
}
#if LANG_CXX11
inline void SKBuiltinBuffer_t::set_buffer(::std::string&& value) {
  set_has_buffer();
  buffer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SKBuiltinBuffer_t.Buffer)
}
#endif
inline void SKBuiltinBuffer_t::set_buffer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_buffer();
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SKBuiltinBuffer_t.Buffer)
}
inline void SKBuiltinBuffer_t::set_buffer(const void* value, size_t size) {
  set_has_buffer();
  buffer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SKBuiltinBuffer_t.Buffer)
}
inline ::std::string* SKBuiltinBuffer_t::mutable_buffer() {
  set_has_buffer();
  // @@protoc_insertion_point(field_mutable:micromsg.SKBuiltinBuffer_t.Buffer)
  return buffer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SKBuiltinBuffer_t::release_buffer() {
  // @@protoc_insertion_point(field_release:micromsg.SKBuiltinBuffer_t.Buffer)
  clear_has_buffer();
  return buffer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SKBuiltinBuffer_t::set_allocated_buffer(::std::string* buffer) {
  if (buffer != NULL) {
    set_has_buffer();
  } else {
    clear_has_buffer();
  }
  buffer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buffer);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SKBuiltinBuffer_t.Buffer)
}

// -------------------------------------------------------------------

// SKBuiltinString_t

// optional string String = 1;
inline bool SKBuiltinString_t::has_string() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SKBuiltinString_t::set_has_string() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SKBuiltinString_t::clear_has_string() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SKBuiltinString_t::clear_string() {
  string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_string();
}
inline const ::std::string& SKBuiltinString_t::string() const {
  // @@protoc_insertion_point(field_get:micromsg.SKBuiltinString_t.String)
  return string_.GetNoArena();
}
inline void SKBuiltinString_t::set_string(const ::std::string& value) {
  set_has_string();
  string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SKBuiltinString_t.String)
}
#if LANG_CXX11
inline void SKBuiltinString_t::set_string(::std::string&& value) {
  set_has_string();
  string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SKBuiltinString_t.String)
}
#endif
inline void SKBuiltinString_t::set_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_string();
  string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SKBuiltinString_t.String)
}
inline void SKBuiltinString_t::set_string(const char* value, size_t size) {
  set_has_string();
  string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SKBuiltinString_t.String)
}
inline ::std::string* SKBuiltinString_t::mutable_string() {
  set_has_string();
  // @@protoc_insertion_point(field_mutable:micromsg.SKBuiltinString_t.String)
  return string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SKBuiltinString_t::release_string() {
  // @@protoc_insertion_point(field_release:micromsg.SKBuiltinString_t.String)
  clear_has_string();
  return string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SKBuiltinString_t::set_allocated_string(::std::string* string) {
  if (string != NULL) {
    set_has_string();
  } else {
    clear_has_string();
  }
  string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SKBuiltinString_t.String)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace micromsg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mmbuiltintype_2eproto__INCLUDED
