// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mmcard.proto

#ifndef PROTOBUF_mmcard_2eproto__INCLUDED
#define PROTOBUF_mmcard_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "mmbuiltintype.pb.h"
#include "mmbase.pb.h"
// @@protoc_insertion_point(includes)
namespace micromsg {
class AcceptCardItemRequest;
class AcceptCardItemRequestDefaultTypeInternal;
extern AcceptCardItemRequestDefaultTypeInternal _AcceptCardItemRequest_default_instance_;
class AcceptCardItemResponse;
class AcceptCardItemResponseDefaultTypeInternal;
extern AcceptCardItemResponseDefaultTypeInternal _AcceptCardItemResponse_default_instance_;
class AcceptCardListFromAppRequest;
class AcceptCardListFromAppRequestDefaultTypeInternal;
extern AcceptCardListFromAppRequestDefaultTypeInternal _AcceptCardListFromAppRequest_default_instance_;
class AcceptCardListFromAppResponse;
class AcceptCardListFromAppResponseDefaultTypeInternal;
extern AcceptCardListFromAppResponseDefaultTypeInternal _AcceptCardListFromAppResponse_default_instance_;
class AdditionalContactList;
class AdditionalContactListDefaultTypeInternal;
extern AdditionalContactListDefaultTypeInternal _AdditionalContactList_default_instance_;
class BaseRequest;
class BaseRequestDefaultTypeInternal;
extern BaseRequestDefaultTypeInternal _BaseRequest_default_instance_;
class BaseResponse;
class BaseResponseDefaultTypeInternal;
extern BaseResponseDefaultTypeInternal _BaseResponse_default_instance_;
class BatchDelCardItemRequest;
class BatchDelCardItemRequestDefaultTypeInternal;
extern BatchDelCardItemRequestDefaultTypeInternal _BatchDelCardItemRequest_default_instance_;
class BatchDelCardItemResponse;
class BatchDelCardItemResponseDefaultTypeInternal;
extern BatchDelCardItemResponseDefaultTypeInternal _BatchDelCardItemResponse_default_instance_;
class BatchGetCardArray;
class BatchGetCardArrayDefaultTypeInternal;
extern BatchGetCardArrayDefaultTypeInternal _BatchGetCardArray_default_instance_;
class BatchGetCardItem;
class BatchGetCardItemDefaultTypeInternal;
extern BatchGetCardItemDefaultTypeInternal _BatchGetCardItem_default_instance_;
class BatchGetCardItemByTpInfoRequest;
class BatchGetCardItemByTpInfoRequestDefaultTypeInternal;
extern BatchGetCardItemByTpInfoRequestDefaultTypeInternal _BatchGetCardItemByTpInfoRequest_default_instance_;
class BatchGetCardItemByTpInfoResponse;
class BatchGetCardItemByTpInfoResponseDefaultTypeInternal;
extern BatchGetCardItemByTpInfoResponseDefaultTypeInternal _BatchGetCardItemByTpInfoResponse_default_instance_;
class BatchGetCardItemRequest;
class BatchGetCardItemRequestDefaultTypeInternal;
extern BatchGetCardItemRequestDefaultTypeInternal _BatchGetCardItemRequest_default_instance_;
class BatchGetCardItemResponse;
class BatchGetCardItemResponseDefaultTypeInternal;
extern BatchGetCardItemResponseDefaultTypeInternal _BatchGetCardItemResponse_default_instance_;
class BindEmailRequest;
class BindEmailRequestDefaultTypeInternal;
extern BindEmailRequestDefaultTypeInternal _BindEmailRequest_default_instance_;
class BindEmailResponse;
class BindEmailResponseDefaultTypeInternal;
extern BindEmailResponseDefaultTypeInternal _BindEmailResponse_default_instance_;
class BuiltinIP;
class BuiltinIPDefaultTypeInternal;
extern BuiltinIPDefaultTypeInternal _BuiltinIP_default_instance_;
class BuiltinIPList;
class BuiltinIPListDefaultTypeInternal;
extern BuiltinIPListDefaultTypeInternal _BuiltinIPList_default_instance_;
class CDNDnsInfo;
class CDNDnsInfoDefaultTypeInternal;
extern CDNDnsInfoDefaultTypeInternal _CDNDnsInfo_default_instance_;
class CardDataInfo;
class CardDataInfoDefaultTypeInternal;
extern CardDataInfoDefaultTypeInternal _CardDataInfo_default_instance_;
class CardListItem;
class CardListItemDefaultTypeInternal;
extern CardListItemDefaultTypeInternal _CardListItem_default_instance_;
class CardListItems;
class CardListItemsDefaultTypeInternal;
extern CardListItemsDefaultTypeInternal _CardListItems_default_instance_;
class CardShopLBSRequest;
class CardShopLBSRequestDefaultTypeInternal;
extern CardShopLBSRequestDefaultTypeInternal _CardShopLBSRequest_default_instance_;
class CardShopLBSResponse;
class CardShopLBSResponseDefaultTypeInternal;
extern CardShopLBSResponseDefaultTypeInternal _CardShopLBSResponse_default_instance_;
class CardSyncRequest;
class CardSyncRequestDefaultTypeInternal;
extern CardSyncRequestDefaultTypeInternal _CardSyncRequest_default_instance_;
class CardSyncResponse;
class CardSyncResponseDefaultTypeInternal;
extern CardSyncResponseDefaultTypeInternal _CardSyncResponse_default_instance_;
class CardTpInfoItem;
class CardTpInfoItemDefaultTypeInternal;
extern CardTpInfoItemDefaultTypeInternal _CardTpInfoItem_default_instance_;
class CardUserItem;
class CardUserItemDefaultTypeInternal;
extern CardUserItemDefaultTypeInternal _CardUserItem_default_instance_;
class ChatRoomMemberData;
class ChatRoomMemberDataDefaultTypeInternal;
extern ChatRoomMemberDataDefaultTypeInternal _ChatRoomMemberData_default_instance_;
class ChatRoomMemberInfo;
class ChatRoomMemberInfoDefaultTypeInternal;
extern ChatRoomMemberInfoDefaultTypeInternal _ChatRoomMemberInfo_default_instance_;
class CmdItem;
class CmdItemDefaultTypeInternal;
extern CmdItemDefaultTypeInternal _CmdItem_default_instance_;
class CmdList;
class CmdListDefaultTypeInternal;
extern CmdListDefaultTypeInternal _CmdList_default_instance_;
class CustomizedInfo;
class CustomizedInfoDefaultTypeInternal;
extern CustomizedInfoDefaultTypeInternal _CustomizedInfo_default_instance_;
class DelMemberReq;
class DelMemberReqDefaultTypeInternal;
extern DelMemberReqDefaultTypeInternal _DelMemberReq_default_instance_;
class DelMemberResp;
class DelMemberRespDefaultTypeInternal;
extern DelMemberRespDefaultTypeInternal _DelMemberResp_default_instance_;
class DisturbSetting;
class DisturbSettingDefaultTypeInternal;
extern DisturbSettingDefaultTypeInternal _DisturbSetting_default_instance_;
class DisturbTimeSpan;
class DisturbTimeSpanDefaultTypeInternal;
extern DisturbTimeSpanDefaultTypeInternal _DisturbTimeSpan_default_instance_;
class GetAvailableCardRequest;
class GetAvailableCardRequestDefaultTypeInternal;
extern GetAvailableCardRequestDefaultTypeInternal _GetAvailableCardRequest_default_instance_;
class GetAvailableCardResponse;
class GetAvailableCardResponseDefaultTypeInternal;
extern GetAvailableCardResponseDefaultTypeInternal _GetAvailableCardResponse_default_instance_;
class GetCardConfigInfoRequest;
class GetCardConfigInfoRequestDefaultTypeInternal;
extern GetCardConfigInfoRequestDefaultTypeInternal _GetCardConfigInfoRequest_default_instance_;
class GetCardConfigInfoResponse;
class GetCardConfigInfoResponseDefaultTypeInternal;
extern GetCardConfigInfoResponseDefaultTypeInternal _GetCardConfigInfoResponse_default_instance_;
class GetCardCountRequest;
class GetCardCountRequestDefaultTypeInternal;
extern GetCardCountRequestDefaultTypeInternal _GetCardCountRequest_default_instance_;
class GetCardCountResponse;
class GetCardCountResponseDefaultTypeInternal;
extern GetCardCountResponseDefaultTypeInternal _GetCardCountResponse_default_instance_;
class GetCardItemInfoRequest;
class GetCardItemInfoRequestDefaultTypeInternal;
extern GetCardItemInfoRequestDefaultTypeInternal _GetCardItemInfoRequest_default_instance_;
class GetCardItemInfoResponse;
class GetCardItemInfoResponseDefaultTypeInternal;
extern GetCardItemInfoResponseDefaultTypeInternal _GetCardItemInfoResponse_default_instance_;
class GetCardListFromAppRequest;
class GetCardListFromAppRequestDefaultTypeInternal;
extern GetCardListFromAppRequestDefaultTypeInternal _GetCardListFromAppRequest_default_instance_;
class GetCardListFromAppResponse;
class GetCardListFromAppResponseDefaultTypeInternal;
extern GetCardListFromAppResponseDefaultTypeInternal _GetCardListFromAppResponse_default_instance_;
class GetCardSerialRequest;
class GetCardSerialRequestDefaultTypeInternal;
extern GetCardSerialRequestDefaultTypeInternal _GetCardSerialRequest_default_instance_;
class GetCardSerialResponse;
class GetCardSerialResponseDefaultTypeInternal;
extern GetCardSerialResponseDefaultTypeInternal _GetCardSerialResponse_default_instance_;
class GetLocationRequest;
class GetLocationRequestDefaultTypeInternal;
extern GetLocationRequestDefaultTypeInternal _GetLocationRequest_default_instance_;
class GetLocationResponse;
class GetLocationResponseDefaultTypeInternal;
extern GetLocationResponseDefaultTypeInternal _GetLocationResponse_default_instance_;
class GiftCardItemRequest;
class GiftCardItemRequestDefaultTypeInternal;
extern GiftCardItemRequestDefaultTypeInternal _GiftCardItemRequest_default_instance_;
class GiftCardItemResponse;
class GiftCardItemResponseDefaultTypeInternal;
extern GiftCardItemResponseDefaultTypeInternal _GiftCardItemResponse_default_instance_;
class GmailInfo;
class GmailInfoDefaultTypeInternal;
extern GmailInfoDefaultTypeInternal _GmailInfo_default_instance_;
class GmailList;
class GmailListDefaultTypeInternal;
extern GmailListDefaultTypeInternal _GmailList_default_instance_;
class HardDevice;
class HardDeviceDefaultTypeInternal;
extern HardDeviceDefaultTypeInternal _HardDevice_default_instance_;
class Host;
class HostDefaultTypeInternal;
extern HostDefaultTypeInternal _Host_default_instance_;
class HostList;
class HostListDefaultTypeInternal;
extern HostListDefaultTypeInternal _HostList_default_instance_;
class LinkedinContactItem;
class LinkedinContactItemDefaultTypeInternal;
extern LinkedinContactItemDefaultTypeInternal _LinkedinContactItem_default_instance_;
class MemberReq;
class MemberReqDefaultTypeInternal;
extern MemberReqDefaultTypeInternal _MemberReq_default_instance_;
class MemberResp;
class MemberRespDefaultTypeInternal;
extern MemberRespDefaultTypeInternal _MemberResp_default_instance_;
class ModContact;
class ModContactDefaultTypeInternal;
extern ModContactDefaultTypeInternal _ModContact_default_instance_;
class ModUserInfo;
class ModUserInfoDefaultTypeInternal;
extern ModUserInfoDefaultTypeInternal _ModUserInfo_default_instance_;
class NetworkControl;
class NetworkControlDefaultTypeInternal;
extern NetworkControlDefaultTypeInternal _NetworkControl_default_instance_;
class PatternLockInfo;
class PatternLockInfoDefaultTypeInternal;
extern PatternLockInfoDefaultTypeInternal _PatternLockInfo_default_instance_;
class PluginKey;
class PluginKeyDefaultTypeInternal;
extern PluginKeyDefaultTypeInternal _PluginKey_default_instance_;
class PluginKeyList;
class PluginKeyListDefaultTypeInternal;
extern PluginKeyListDefaultTypeInternal _PluginKeyList_default_instance_;
class PositionInfo;
class PositionInfoDefaultTypeInternal;
extern PositionInfoDefaultTypeInternal _PositionInfo_default_instance_;
class RoomInfo;
class RoomInfoDefaultTypeInternal;
extern RoomInfoDefaultTypeInternal _RoomInfo_default_instance_;
class SKBuiltinBuffer_t;
class SKBuiltinBuffer_tDefaultTypeInternal;
extern SKBuiltinBuffer_tDefaultTypeInternal _SKBuiltinBuffer_t_default_instance_;
class SKBuiltinChar_t;
class SKBuiltinChar_tDefaultTypeInternal;
extern SKBuiltinChar_tDefaultTypeInternal _SKBuiltinChar_t_default_instance_;
class SKBuiltinDouble64_t;
class SKBuiltinDouble64_tDefaultTypeInternal;
extern SKBuiltinDouble64_tDefaultTypeInternal _SKBuiltinDouble64_t_default_instance_;
class SKBuiltinFloat32_t;
class SKBuiltinFloat32_tDefaultTypeInternal;
extern SKBuiltinFloat32_tDefaultTypeInternal _SKBuiltinFloat32_t_default_instance_;
class SKBuiltinInt16_t;
class SKBuiltinInt16_tDefaultTypeInternal;
extern SKBuiltinInt16_tDefaultTypeInternal _SKBuiltinInt16_t_default_instance_;
class SKBuiltinInt32_t;
class SKBuiltinInt32_tDefaultTypeInternal;
extern SKBuiltinInt32_tDefaultTypeInternal _SKBuiltinInt32_t_default_instance_;
class SKBuiltinInt64_t;
class SKBuiltinInt64_tDefaultTypeInternal;
extern SKBuiltinInt64_tDefaultTypeInternal _SKBuiltinInt64_t_default_instance_;
class SKBuiltinInt8_t;
class SKBuiltinInt8_tDefaultTypeInternal;
extern SKBuiltinInt8_tDefaultTypeInternal _SKBuiltinInt8_t_default_instance_;
class SKBuiltinString_t;
class SKBuiltinString_tDefaultTypeInternal;
extern SKBuiltinString_tDefaultTypeInternal _SKBuiltinString_t_default_instance_;
class SKBuiltinUchar_t;
class SKBuiltinUchar_tDefaultTypeInternal;
extern SKBuiltinUchar_tDefaultTypeInternal _SKBuiltinUchar_t_default_instance_;
class SKBuiltinUint16_t;
class SKBuiltinUint16_tDefaultTypeInternal;
extern SKBuiltinUint16_tDefaultTypeInternal _SKBuiltinUint16_t_default_instance_;
class SKBuiltinUint32_t;
class SKBuiltinUint32_tDefaultTypeInternal;
extern SKBuiltinUint32_tDefaultTypeInternal _SKBuiltinUint32_t_default_instance_;
class SKBuiltinUint64_t;
class SKBuiltinUint64_tDefaultTypeInternal;
extern SKBuiltinUint64_tDefaultTypeInternal _SKBuiltinUint64_t_default_instance_;
class SKBuiltinUint8_t;
class SKBuiltinUint8_tDefaultTypeInternal;
extern SKBuiltinUint8_tDefaultTypeInternal _SKBuiltinUint8_t_default_instance_;
class SafeDevice;
class SafeDeviceDefaultTypeInternal;
extern SafeDeviceDefaultTypeInternal _SafeDevice_default_instance_;
class SafeDeviceList;
class SafeDeviceListDefaultTypeInternal;
extern SafeDeviceListDefaultTypeInternal _SafeDeviceList_default_instance_;
class ShakeSyncRequest;
class ShakeSyncRequestDefaultTypeInternal;
extern ShakeSyncRequestDefaultTypeInternal _ShakeSyncRequest_default_instance_;
class ShakeSyncResponse;
class ShakeSyncResponseDefaultTypeInternal;
extern ShakeSyncResponseDefaultTypeInternal _ShakeSyncResponse_default_instance_;
class ShowStyleKey;
class ShowStyleKeyDefaultTypeInternal;
extern ShowStyleKeyDefaultTypeInternal _ShowStyleKey_default_instance_;
class SnsUserInfo;
class SnsUserInfoDefaultTypeInternal;
extern SnsUserInfoDefaultTypeInternal _SnsUserInfo_default_instance_;
class StyleKeyVal;
class StyleKeyValDefaultTypeInternal;
extern StyleKeyValDefaultTypeInternal _StyleKeyVal_default_instance_;
class UserInfoExt;
class UserInfoExtDefaultTypeInternal;
extern UserInfoExtDefaultTypeInternal _UserInfoExt_default_instance_;
}  // namespace micromsg

namespace micromsg {

namespace protobuf_mmcard_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_mmcard_2eproto

// ===================================================================

class CardUserItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.CardUserItem) */ {
 public:
  CardUserItem();
  virtual ~CardUserItem();

  CardUserItem(const CardUserItem& from);

  inline CardUserItem& operator=(const CardUserItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CardUserItem& default_instance();

  static inline const CardUserItem* internal_default_instance() {
    return reinterpret_cast<const CardUserItem*>(
               &_CardUserItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CardUserItem* other);

  // implements Message ----------------------------------------------

  inline CardUserItem* New() const PROTOBUF_FINAL { return New(NULL); }

  CardUserItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CardUserItem& from);
  void MergeFrom(const CardUserItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CardUserItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string CardId = 1;
  bool has_cardid() const;
  void clear_cardid();
  static const int kCardIdFieldNumber = 1;
  const ::std::string& cardid() const;
  void set_cardid(const ::std::string& value);
  #if LANG_CXX11
  void set_cardid(::std::string&& value);
  #endif
  void set_cardid(const char* value);
  void set_cardid(const char* value, size_t size);
  ::std::string* mutable_cardid();
  ::std::string* release_cardid();
  void set_allocated_cardid(::std::string* cardid);

  // optional uint64 UpdateSequence = 2;
  bool has_updatesequence() const;
  void clear_updatesequence();
  static const int kUpdateSequenceFieldNumber = 2;
  ::google::protobuf::uint64 updatesequence() const;
  void set_updatesequence(::google::protobuf::uint64 value);

  // optional uint32 StateFlag = 3;
  bool has_stateflag() const;
  void clear_stateflag();
  static const int kStateFlagFieldNumber = 3;
  ::google::protobuf::uint32 stateflag() const;
  void set_stateflag(::google::protobuf::uint32 value);

  // optional uint32 UpdateTime = 4;
  bool has_updatetime() const;
  void clear_updatetime();
  static const int kUpdateTimeFieldNumber = 4;
  ::google::protobuf::uint32 updatetime() const;
  void set_updatetime(::google::protobuf::uint32 value);

  // optional uint32 Status = 5;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 5;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.CardUserItem)
 private:
  void set_has_cardid();
  void clear_has_cardid();
  void set_has_updatesequence();
  void clear_has_updatesequence();
  void set_has_stateflag();
  void clear_has_stateflag();
  void set_has_updatetime();
  void clear_has_updatetime();
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr cardid_;
  ::google::protobuf::uint64 updatesequence_;
  ::google::protobuf::uint32 stateflag_;
  ::google::protobuf::uint32 updatetime_;
  ::google::protobuf::uint32 status_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BatchDelCardItemRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.BatchDelCardItemRequest) */ {
 public:
  BatchDelCardItemRequest();
  virtual ~BatchDelCardItemRequest();

  BatchDelCardItemRequest(const BatchDelCardItemRequest& from);

  inline BatchDelCardItemRequest& operator=(const BatchDelCardItemRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchDelCardItemRequest& default_instance();

  static inline const BatchDelCardItemRequest* internal_default_instance() {
    return reinterpret_cast<const BatchDelCardItemRequest*>(
               &_BatchDelCardItemRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(BatchDelCardItemRequest* other);

  // implements Message ----------------------------------------------

  inline BatchDelCardItemRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  BatchDelCardItemRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BatchDelCardItemRequest& from);
  void MergeFrom(const BatchDelCardItemRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BatchDelCardItemRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string card_ids = 2;
  int card_ids_size() const;
  void clear_card_ids();
  static const int kCardIdsFieldNumber = 2;
  const ::std::string& card_ids(int index) const;
  ::std::string* mutable_card_ids(int index);
  void set_card_ids(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_card_ids(int index, ::std::string&& value);
  #endif
  void set_card_ids(int index, const char* value);
  void set_card_ids(int index, const char* value, size_t size);
  ::std::string* add_card_ids();
  void add_card_ids(const ::std::string& value);
  #if LANG_CXX11
  void add_card_ids(::std::string&& value);
  #endif
  void add_card_ids(const char* value);
  void add_card_ids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& card_ids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_card_ids();

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // @@protoc_insertion_point(class_scope:micromsg.BatchDelCardItemRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> card_ids_;
  ::micromsg::BaseRequest* baserequest_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BatchDelCardItemResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.BatchDelCardItemResponse) */ {
 public:
  BatchDelCardItemResponse();
  virtual ~BatchDelCardItemResponse();

  BatchDelCardItemResponse(const BatchDelCardItemResponse& from);

  inline BatchDelCardItemResponse& operator=(const BatchDelCardItemResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchDelCardItemResponse& default_instance();

  static inline const BatchDelCardItemResponse* internal_default_instance() {
    return reinterpret_cast<const BatchDelCardItemResponse*>(
               &_BatchDelCardItemResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(BatchDelCardItemResponse* other);

  // implements Message ----------------------------------------------

  inline BatchDelCardItemResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  BatchDelCardItemResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BatchDelCardItemResponse& from);
  void MergeFrom(const BatchDelCardItemResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BatchDelCardItemResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string succ_card_ids = 2;
  int succ_card_ids_size() const;
  void clear_succ_card_ids();
  static const int kSuccCardIdsFieldNumber = 2;
  const ::std::string& succ_card_ids(int index) const;
  ::std::string* mutable_succ_card_ids(int index);
  void set_succ_card_ids(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_succ_card_ids(int index, ::std::string&& value);
  #endif
  void set_succ_card_ids(int index, const char* value);
  void set_succ_card_ids(int index, const char* value, size_t size);
  ::std::string* add_succ_card_ids();
  void add_succ_card_ids(const ::std::string& value);
  #if LANG_CXX11
  void add_succ_card_ids(::std::string&& value);
  #endif
  void add_succ_card_ids(const char* value);
  void add_succ_card_ids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& succ_card_ids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_succ_card_ids();

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // @@protoc_insertion_point(class_scope:micromsg.BatchDelCardItemResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> succ_card_ids_;
  ::micromsg::BaseResponse* baseresponse_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BatchGetCardItemRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.BatchGetCardItemRequest) */ {
 public:
  BatchGetCardItemRequest();
  virtual ~BatchGetCardItemRequest();

  BatchGetCardItemRequest(const BatchGetCardItemRequest& from);

  inline BatchGetCardItemRequest& operator=(const BatchGetCardItemRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchGetCardItemRequest& default_instance();

  static inline const BatchGetCardItemRequest* internal_default_instance() {
    return reinterpret_cast<const BatchGetCardItemRequest*>(
               &_BatchGetCardItemRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(BatchGetCardItemRequest* other);

  // implements Message ----------------------------------------------

  inline BatchGetCardItemRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  BatchGetCardItemRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BatchGetCardItemRequest& from);
  void MergeFrom(const BatchGetCardItemRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BatchGetCardItemRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string card_ids = 2;
  int card_ids_size() const;
  void clear_card_ids();
  static const int kCardIdsFieldNumber = 2;
  const ::std::string& card_ids(int index) const;
  ::std::string* mutable_card_ids(int index);
  void set_card_ids(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_card_ids(int index, ::std::string&& value);
  #endif
  void set_card_ids(int index, const char* value);
  void set_card_ids(int index, const char* value, size_t size);
  ::std::string* add_card_ids();
  void add_card_ids(const ::std::string& value);
  #if LANG_CXX11
  void add_card_ids(::std::string&& value);
  #endif
  void add_card_ids(const char* value);
  void add_card_ids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& card_ids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_card_ids();

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // @@protoc_insertion_point(class_scope:micromsg.BatchGetCardItemRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> card_ids_;
  ::micromsg::BaseRequest* baserequest_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BatchGetCardItemResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.BatchGetCardItemResponse) */ {
 public:
  BatchGetCardItemResponse();
  virtual ~BatchGetCardItemResponse();

  BatchGetCardItemResponse(const BatchGetCardItemResponse& from);

  inline BatchGetCardItemResponse& operator=(const BatchGetCardItemResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchGetCardItemResponse& default_instance();

  static inline const BatchGetCardItemResponse* internal_default_instance() {
    return reinterpret_cast<const BatchGetCardItemResponse*>(
               &_BatchGetCardItemResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(BatchGetCardItemResponse* other);

  // implements Message ----------------------------------------------

  inline BatchGetCardItemResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  BatchGetCardItemResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BatchGetCardItemResponse& from);
  void MergeFrom(const BatchGetCardItemResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BatchGetCardItemResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string json_ret = 2;
  bool has_json_ret() const;
  void clear_json_ret();
  static const int kJsonRetFieldNumber = 2;
  const ::std::string& json_ret() const;
  void set_json_ret(const ::std::string& value);
  #if LANG_CXX11
  void set_json_ret(::std::string&& value);
  #endif
  void set_json_ret(const char* value);
  void set_json_ret(const char* value, size_t size);
  ::std::string* mutable_json_ret();
  ::std::string* release_json_ret();
  void set_allocated_json_ret(::std::string* json_ret);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // @@protoc_insertion_point(class_scope:micromsg.BatchGetCardItemResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_json_ret();
  void clear_has_json_ret();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr json_ret_;
  ::micromsg::BaseResponse* baseresponse_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CardSyncRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.CardSyncRequest) */ {
 public:
  CardSyncRequest();
  virtual ~CardSyncRequest();

  CardSyncRequest(const CardSyncRequest& from);

  inline CardSyncRequest& operator=(const CardSyncRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CardSyncRequest& default_instance();

  static inline const CardSyncRequest* internal_default_instance() {
    return reinterpret_cast<const CardSyncRequest*>(
               &_CardSyncRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(CardSyncRequest* other);

  // implements Message ----------------------------------------------

  inline CardSyncRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CardSyncRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CardSyncRequest& from);
  void MergeFrom(const CardSyncRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CardSyncRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.SKBuiltinBuffer_t KeyBuf = 3;
  bool has_keybuf() const;
  void clear_keybuf();
  static const int kKeyBufFieldNumber = 3;
  const ::micromsg::SKBuiltinBuffer_t& keybuf() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_keybuf();
  ::micromsg::SKBuiltinBuffer_t* release_keybuf();
  void set_allocated_keybuf(::micromsg::SKBuiltinBuffer_t* keybuf);

  // required uint32 Selector = 2;
  bool has_selector() const;
  void clear_selector();
  static const int kSelectorFieldNumber = 2;
  ::google::protobuf::uint32 selector() const;
  void set_selector(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.CardSyncRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_selector();
  void clear_has_selector();
  void set_has_keybuf();
  void clear_has_keybuf();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::SKBuiltinBuffer_t* keybuf_;
  ::google::protobuf::uint32 selector_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CardSyncResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.CardSyncResponse) */ {
 public:
  CardSyncResponse();
  virtual ~CardSyncResponse();

  CardSyncResponse(const CardSyncResponse& from);

  inline CardSyncResponse& operator=(const CardSyncResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CardSyncResponse& default_instance();

  static inline const CardSyncResponse* internal_default_instance() {
    return reinterpret_cast<const CardSyncResponse*>(
               &_CardSyncResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(CardSyncResponse* other);

  // implements Message ----------------------------------------------

  inline CardSyncResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CardSyncResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CardSyncResponse& from);
  void MergeFrom(const CardSyncResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CardSyncResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.CmdList CmdList = 2;
  bool has_cmdlist() const;
  void clear_cmdlist();
  static const int kCmdListFieldNumber = 2;
  const ::micromsg::CmdList& cmdlist() const;
  ::micromsg::CmdList* mutable_cmdlist();
  ::micromsg::CmdList* release_cmdlist();
  void set_allocated_cmdlist(::micromsg::CmdList* cmdlist);

  // required .micromsg.SKBuiltinBuffer_t KeyBuf = 3;
  bool has_keybuf() const;
  void clear_keybuf();
  static const int kKeyBufFieldNumber = 3;
  const ::micromsg::SKBuiltinBuffer_t& keybuf() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_keybuf();
  ::micromsg::SKBuiltinBuffer_t* release_keybuf();
  void set_allocated_keybuf(::micromsg::SKBuiltinBuffer_t* keybuf);

  // required uint32 ContinueFlag = 4;
  bool has_continueflag() const;
  void clear_continueflag();
  static const int kContinueFlagFieldNumber = 4;
  ::google::protobuf::uint32 continueflag() const;
  void set_continueflag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.CardSyncResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_cmdlist();
  void clear_has_cmdlist();
  void set_has_keybuf();
  void clear_has_keybuf();
  void set_has_continueflag();
  void clear_has_continueflag();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::CmdList* cmdlist_;
  ::micromsg::SKBuiltinBuffer_t* keybuf_;
  ::google::protobuf::uint32 continueflag_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CardShopLBSRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.CardShopLBSRequest) */ {
 public:
  CardShopLBSRequest();
  virtual ~CardShopLBSRequest();

  CardShopLBSRequest(const CardShopLBSRequest& from);

  inline CardShopLBSRequest& operator=(const CardShopLBSRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CardShopLBSRequest& default_instance();

  static inline const CardShopLBSRequest* internal_default_instance() {
    return reinterpret_cast<const CardShopLBSRequest*>(
               &_CardShopLBSRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(CardShopLBSRequest* other);

  // implements Message ----------------------------------------------

  inline CardShopLBSRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CardShopLBSRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CardShopLBSRequest& from);
  void MergeFrom(const CardShopLBSRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CardShopLBSRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string card_tp_id = 2;
  bool has_card_tp_id() const;
  void clear_card_tp_id();
  static const int kCardTpIdFieldNumber = 2;
  const ::std::string& card_tp_id() const;
  void set_card_tp_id(const ::std::string& value);
  #if LANG_CXX11
  void set_card_tp_id(::std::string&& value);
  #endif
  void set_card_tp_id(const char* value);
  void set_card_tp_id(const char* value, size_t size);
  ::std::string* mutable_card_tp_id();
  ::std::string* release_card_tp_id();
  void set_allocated_card_tp_id(::std::string* card_tp_id);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required float longitude = 3;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 3;
  float longitude() const;
  void set_longitude(float value);

  // required float latitude = 4;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 4;
  float latitude() const;
  void set_latitude(float value);

  // @@protoc_insertion_point(class_scope:micromsg.CardShopLBSRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_card_tp_id();
  void clear_has_card_tp_id();
  void set_has_longitude();
  void clear_has_longitude();
  void set_has_latitude();
  void clear_has_latitude();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr card_tp_id_;
  ::micromsg::BaseRequest* baserequest_;
  float longitude_;
  float latitude_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CardShopLBSResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.CardShopLBSResponse) */ {
 public:
  CardShopLBSResponse();
  virtual ~CardShopLBSResponse();

  CardShopLBSResponse(const CardShopLBSResponse& from);

  inline CardShopLBSResponse& operator=(const CardShopLBSResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CardShopLBSResponse& default_instance();

  static inline const CardShopLBSResponse* internal_default_instance() {
    return reinterpret_cast<const CardShopLBSResponse*>(
               &_CardShopLBSResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(CardShopLBSResponse* other);

  // implements Message ----------------------------------------------

  inline CardShopLBSResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CardShopLBSResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CardShopLBSResponse& from);
  void MergeFrom(const CardShopLBSResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CardShopLBSResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string json_ret = 2;
  bool has_json_ret() const;
  void clear_json_ret();
  static const int kJsonRetFieldNumber = 2;
  const ::std::string& json_ret() const;
  void set_json_ret(const ::std::string& value);
  #if LANG_CXX11
  void set_json_ret(::std::string&& value);
  #endif
  void set_json_ret(const char* value);
  void set_json_ret(const char* value, size_t size);
  ::std::string* mutable_json_ret();
  ::std::string* release_json_ret();
  void set_allocated_json_ret(::std::string* json_ret);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // @@protoc_insertion_point(class_scope:micromsg.CardShopLBSResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_json_ret();
  void clear_has_json_ret();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr json_ret_;
  ::micromsg::BaseResponse* baseresponse_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetCardSerialRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetCardSerialRequest) */ {
 public:
  GetCardSerialRequest();
  virtual ~GetCardSerialRequest();

  GetCardSerialRequest(const GetCardSerialRequest& from);

  inline GetCardSerialRequest& operator=(const GetCardSerialRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCardSerialRequest& default_instance();

  static inline const GetCardSerialRequest* internal_default_instance() {
    return reinterpret_cast<const GetCardSerialRequest*>(
               &_GetCardSerialRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(GetCardSerialRequest* other);

  // implements Message ----------------------------------------------

  inline GetCardSerialRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetCardSerialRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetCardSerialRequest& from);
  void MergeFrom(const GetCardSerialRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetCardSerialRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string card_id = 2;
  bool has_card_id() const;
  void clear_card_id();
  static const int kCardIdFieldNumber = 2;
  const ::std::string& card_id() const;
  void set_card_id(const ::std::string& value);
  #if LANG_CXX11
  void set_card_id(::std::string&& value);
  #endif
  void set_card_id(const char* value);
  void set_card_id(const char* value, size_t size);
  ::std::string* mutable_card_id();
  ::std::string* release_card_id();
  void set_allocated_card_id(::std::string* card_id);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // @@protoc_insertion_point(class_scope:micromsg.GetCardSerialRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_card_id();
  void clear_has_card_id();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr card_id_;
  ::micromsg::BaseRequest* baserequest_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetCardSerialResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetCardSerialResponse) */ {
 public:
  GetCardSerialResponse();
  virtual ~GetCardSerialResponse();

  GetCardSerialResponse(const GetCardSerialResponse& from);

  inline GetCardSerialResponse& operator=(const GetCardSerialResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCardSerialResponse& default_instance();

  static inline const GetCardSerialResponse* internal_default_instance() {
    return reinterpret_cast<const GetCardSerialResponse*>(
               &_GetCardSerialResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(GetCardSerialResponse* other);

  // implements Message ----------------------------------------------

  inline GetCardSerialResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetCardSerialResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetCardSerialResponse& from);
  void MergeFrom(const GetCardSerialResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetCardSerialResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string serial_number = 2;
  bool has_serial_number() const;
  void clear_serial_number();
  static const int kSerialNumberFieldNumber = 2;
  const ::std::string& serial_number() const;
  void set_serial_number(const ::std::string& value);
  #if LANG_CXX11
  void set_serial_number(::std::string&& value);
  #endif
  void set_serial_number(const char* value);
  void set_serial_number(const char* value, size_t size);
  ::std::string* mutable_serial_number();
  ::std::string* release_serial_number();
  void set_allocated_serial_number(::std::string* serial_number);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // @@protoc_insertion_point(class_scope:micromsg.GetCardSerialResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_serial_number();
  void clear_has_serial_number();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr serial_number_;
  ::micromsg::BaseResponse* baseresponse_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetCardItemInfoRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetCardItemInfoRequest) */ {
 public:
  GetCardItemInfoRequest();
  virtual ~GetCardItemInfoRequest();

  GetCardItemInfoRequest(const GetCardItemInfoRequest& from);

  inline GetCardItemInfoRequest& operator=(const GetCardItemInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCardItemInfoRequest& default_instance();

  static inline const GetCardItemInfoRequest* internal_default_instance() {
    return reinterpret_cast<const GetCardItemInfoRequest*>(
               &_GetCardItemInfoRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(GetCardItemInfoRequest* other);

  // implements Message ----------------------------------------------

  inline GetCardItemInfoRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetCardItemInfoRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetCardItemInfoRequest& from);
  void MergeFrom(const GetCardItemInfoRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetCardItemInfoRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string card_id = 2;
  bool has_card_id() const;
  void clear_card_id();
  static const int kCardIdFieldNumber = 2;
  const ::std::string& card_id() const;
  void set_card_id(const ::std::string& value);
  #if LANG_CXX11
  void set_card_id(::std::string&& value);
  #endif
  void set_card_id(const char* value);
  void set_card_id(const char* value, size_t size);
  ::std::string* mutable_card_id();
  ::std::string* release_card_id();
  void set_allocated_card_id(::std::string* card_id);

  // optional string from_username = 4;
  bool has_from_username() const;
  void clear_from_username();
  static const int kFromUsernameFieldNumber = 4;
  const ::std::string& from_username() const;
  void set_from_username(const ::std::string& value);
  #if LANG_CXX11
  void set_from_username(::std::string&& value);
  #endif
  void set_from_username(const char* value);
  void set_from_username(const char* value, size_t size);
  ::std::string* mutable_from_username();
  ::std::string* release_from_username();
  void set_allocated_from_username(::std::string* from_username);

  // optional string card_ext = 5;
  bool has_card_ext() const;
  void clear_card_ext();
  static const int kCardExtFieldNumber = 5;
  const ::std::string& card_ext() const;
  void set_card_ext(const ::std::string& value);
  #if LANG_CXX11
  void set_card_ext(::std::string&& value);
  #endif
  void set_card_ext(const char* value);
  void set_card_ext(const char* value, size_t size);
  ::std::string* mutable_card_ext();
  ::std::string* release_card_ext();
  void set_allocated_card_ext(::std::string* card_ext);

  // optional string js_checkinfo_url = 6;
  bool has_js_checkinfo_url() const;
  void clear_js_checkinfo_url();
  static const int kJsCheckinfoUrlFieldNumber = 6;
  const ::std::string& js_checkinfo_url() const;
  void set_js_checkinfo_url(const ::std::string& value);
  #if LANG_CXX11
  void set_js_checkinfo_url(::std::string&& value);
  #endif
  void set_js_checkinfo_url(const char* value);
  void set_js_checkinfo_url(const char* value, size_t size);
  ::std::string* mutable_js_checkinfo_url();
  ::std::string* release_js_checkinfo_url();
  void set_allocated_js_checkinfo_url(::std::string* js_checkinfo_url);

  // optional string js_checkinfo_session_username = 7;
  bool has_js_checkinfo_session_username() const;
  void clear_js_checkinfo_session_username();
  static const int kJsCheckinfoSessionUsernameFieldNumber = 7;
  const ::std::string& js_checkinfo_session_username() const;
  void set_js_checkinfo_session_username(const ::std::string& value);
  #if LANG_CXX11
  void set_js_checkinfo_session_username(::std::string&& value);
  #endif
  void set_js_checkinfo_session_username(const char* value);
  void set_js_checkinfo_session_username(const char* value, size_t size);
  ::std::string* mutable_js_checkinfo_session_username();
  ::std::string* release_js_checkinfo_session_username();
  void set_allocated_js_checkinfo_session_username(::std::string* js_checkinfo_session_username);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 from_scene = 3;
  bool has_from_scene() const;
  void clear_from_scene();
  static const int kFromSceneFieldNumber = 3;
  ::google::protobuf::uint32 from_scene() const;
  void set_from_scene(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetCardItemInfoRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_card_id();
  void clear_has_card_id();
  void set_has_from_scene();
  void clear_has_from_scene();
  void set_has_from_username();
  void clear_has_from_username();
  void set_has_card_ext();
  void clear_has_card_ext();
  void set_has_js_checkinfo_url();
  void clear_has_js_checkinfo_url();
  void set_has_js_checkinfo_session_username();
  void clear_has_js_checkinfo_session_username();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr card_id_;
  ::google::protobuf::internal::ArenaStringPtr from_username_;
  ::google::protobuf::internal::ArenaStringPtr card_ext_;
  ::google::protobuf::internal::ArenaStringPtr js_checkinfo_url_;
  ::google::protobuf::internal::ArenaStringPtr js_checkinfo_session_username_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 from_scene_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetCardItemInfoResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetCardItemInfoResponse) */ {
 public:
  GetCardItemInfoResponse();
  virtual ~GetCardItemInfoResponse();

  GetCardItemInfoResponse(const GetCardItemInfoResponse& from);

  inline GetCardItemInfoResponse& operator=(const GetCardItemInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCardItemInfoResponse& default_instance();

  static inline const GetCardItemInfoResponse* internal_default_instance() {
    return reinterpret_cast<const GetCardItemInfoResponse*>(
               &_GetCardItemInfoResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(GetCardItemInfoResponse* other);

  // implements Message ----------------------------------------------

  inline GetCardItemInfoResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetCardItemInfoResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetCardItemInfoResponse& from);
  void MergeFrom(const GetCardItemInfoResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetCardItemInfoResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string json_ret = 2;
  bool has_json_ret() const;
  void clear_json_ret();
  static const int kJsonRetFieldNumber = 2;
  const ::std::string& json_ret() const;
  void set_json_ret(const ::std::string& value);
  #if LANG_CXX11
  void set_json_ret(::std::string&& value);
  #endif
  void set_json_ret(const char* value);
  void set_json_ret(const char* value, size_t size);
  ::std::string* mutable_json_ret();
  ::std::string* release_json_ret();
  void set_allocated_json_ret(::std::string* json_ret);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // @@protoc_insertion_point(class_scope:micromsg.GetCardItemInfoResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_json_ret();
  void clear_has_json_ret();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr json_ret_;
  ::micromsg::BaseResponse* baseresponse_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GiftCardItemRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GiftCardItemRequest) */ {
 public:
  GiftCardItemRequest();
  virtual ~GiftCardItemRequest();

  GiftCardItemRequest(const GiftCardItemRequest& from);

  inline GiftCardItemRequest& operator=(const GiftCardItemRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GiftCardItemRequest& default_instance();

  static inline const GiftCardItemRequest* internal_default_instance() {
    return reinterpret_cast<const GiftCardItemRequest*>(
               &_GiftCardItemRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(GiftCardItemRequest* other);

  // implements Message ----------------------------------------------

  inline GiftCardItemRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GiftCardItemRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GiftCardItemRequest& from);
  void MergeFrom(const GiftCardItemRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GiftCardItemRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string card_id = 2;
  bool has_card_id() const;
  void clear_card_id();
  static const int kCardIdFieldNumber = 2;
  const ::std::string& card_id() const;
  void set_card_id(const ::std::string& value);
  #if LANG_CXX11
  void set_card_id(::std::string&& value);
  #endif
  void set_card_id(const char* value);
  void set_card_id(const char* value, size_t size);
  ::std::string* mutable_card_id();
  ::std::string* release_card_id();
  void set_allocated_card_id(::std::string* card_id);

  // required string to_username = 3;
  bool has_to_username() const;
  void clear_to_username();
  static const int kToUsernameFieldNumber = 3;
  const ::std::string& to_username() const;
  void set_to_username(const ::std::string& value);
  #if LANG_CXX11
  void set_to_username(::std::string&& value);
  #endif
  void set_to_username(const char* value);
  void set_to_username(const char* value, size_t size);
  ::std::string* mutable_to_username();
  ::std::string* release_to_username();
  void set_allocated_to_username(::std::string* to_username);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // @@protoc_insertion_point(class_scope:micromsg.GiftCardItemRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_card_id();
  void clear_has_card_id();
  void set_has_to_username();
  void clear_has_to_username();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr card_id_;
  ::google::protobuf::internal::ArenaStringPtr to_username_;
  ::micromsg::BaseRequest* baserequest_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GiftCardItemResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GiftCardItemResponse) */ {
 public:
  GiftCardItemResponse();
  virtual ~GiftCardItemResponse();

  GiftCardItemResponse(const GiftCardItemResponse& from);

  inline GiftCardItemResponse& operator=(const GiftCardItemResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GiftCardItemResponse& default_instance();

  static inline const GiftCardItemResponse* internal_default_instance() {
    return reinterpret_cast<const GiftCardItemResponse*>(
               &_GiftCardItemResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(GiftCardItemResponse* other);

  // implements Message ----------------------------------------------

  inline GiftCardItemResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GiftCardItemResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GiftCardItemResponse& from);
  void MergeFrom(const GiftCardItemResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GiftCardItemResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string card_ext = 2;
  bool has_card_ext() const;
  void clear_card_ext();
  static const int kCardExtFieldNumber = 2;
  const ::std::string& card_ext() const;
  void set_card_ext(const ::std::string& value);
  #if LANG_CXX11
  void set_card_ext(::std::string&& value);
  #endif
  void set_card_ext(const char* value);
  void set_card_ext(const char* value, size_t size);
  ::std::string* mutable_card_ext();
  ::std::string* release_card_ext();
  void set_allocated_card_ext(::std::string* card_ext);

  // optional string ret_msg = 4;
  bool has_ret_msg() const;
  void clear_ret_msg();
  static const int kRetMsgFieldNumber = 4;
  const ::std::string& ret_msg() const;
  void set_ret_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_ret_msg(::std::string&& value);
  #endif
  void set_ret_msg(const char* value);
  void set_ret_msg(const char* value, size_t size);
  ::std::string* mutable_ret_msg();
  ::std::string* release_ret_msg();
  void set_allocated_ret_msg(::std::string* ret_msg);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // optional int32 ret_code = 3;
  bool has_ret_code() const;
  void clear_ret_code();
  static const int kRetCodeFieldNumber = 3;
  ::google::protobuf::int32 ret_code() const;
  void set_ret_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GiftCardItemResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_card_ext();
  void clear_has_card_ext();
  void set_has_ret_code();
  void clear_has_ret_code();
  void set_has_ret_msg();
  void clear_has_ret_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr card_ext_;
  ::google::protobuf::internal::ArenaStringPtr ret_msg_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::int32 ret_code_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AcceptCardItemRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.AcceptCardItemRequest) */ {
 public:
  AcceptCardItemRequest();
  virtual ~AcceptCardItemRequest();

  AcceptCardItemRequest(const AcceptCardItemRequest& from);

  inline AcceptCardItemRequest& operator=(const AcceptCardItemRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AcceptCardItemRequest& default_instance();

  static inline const AcceptCardItemRequest* internal_default_instance() {
    return reinterpret_cast<const AcceptCardItemRequest*>(
               &_AcceptCardItemRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(AcceptCardItemRequest* other);

  // implements Message ----------------------------------------------

  inline AcceptCardItemRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  AcceptCardItemRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AcceptCardItemRequest& from);
  void MergeFrom(const AcceptCardItemRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AcceptCardItemRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string from_username = 2;
  bool has_from_username() const;
  void clear_from_username();
  static const int kFromUsernameFieldNumber = 2;
  const ::std::string& from_username() const;
  void set_from_username(const ::std::string& value);
  #if LANG_CXX11
  void set_from_username(::std::string&& value);
  #endif
  void set_from_username(const char* value);
  void set_from_username(const char* value, size_t size);
  ::std::string* mutable_from_username();
  ::std::string* release_from_username();
  void set_allocated_from_username(::std::string* from_username);

  // required string card_id = 4;
  bool has_card_id() const;
  void clear_card_id();
  static const int kCardIdFieldNumber = 4;
  const ::std::string& card_id() const;
  void set_card_id(const ::std::string& value);
  #if LANG_CXX11
  void set_card_id(::std::string&& value);
  #endif
  void set_card_id(const char* value);
  void set_card_id(const char* value, size_t size);
  ::std::string* mutable_card_id();
  ::std::string* release_card_id();
  void set_allocated_card_id(::std::string* card_id);

  // optional string card_ext = 5;
  bool has_card_ext() const;
  void clear_card_ext();
  static const int kCardExtFieldNumber = 5;
  const ::std::string& card_ext() const;
  void set_card_ext(const ::std::string& value);
  #if LANG_CXX11
  void set_card_ext(::std::string&& value);
  #endif
  void set_card_ext(const char* value);
  void set_card_ext(const char* value, size_t size);
  ::std::string* mutable_card_ext();
  ::std::string* release_card_ext();
  void set_allocated_card_ext(::std::string* card_ext);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 from_scene = 3;
  bool has_from_scene() const;
  void clear_from_scene();
  static const int kFromSceneFieldNumber = 3;
  ::google::protobuf::uint32 from_scene() const;
  void set_from_scene(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.AcceptCardItemRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_from_username();
  void clear_has_from_username();
  void set_has_from_scene();
  void clear_has_from_scene();
  void set_has_card_id();
  void clear_has_card_id();
  void set_has_card_ext();
  void clear_has_card_ext();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr from_username_;
  ::google::protobuf::internal::ArenaStringPtr card_id_;
  ::google::protobuf::internal::ArenaStringPtr card_ext_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 from_scene_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AcceptCardItemResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.AcceptCardItemResponse) */ {
 public:
  AcceptCardItemResponse();
  virtual ~AcceptCardItemResponse();

  AcceptCardItemResponse(const AcceptCardItemResponse& from);

  inline AcceptCardItemResponse& operator=(const AcceptCardItemResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AcceptCardItemResponse& default_instance();

  static inline const AcceptCardItemResponse* internal_default_instance() {
    return reinterpret_cast<const AcceptCardItemResponse*>(
               &_AcceptCardItemResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(AcceptCardItemResponse* other);

  // implements Message ----------------------------------------------

  inline AcceptCardItemResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  AcceptCardItemResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AcceptCardItemResponse& from);
  void MergeFrom(const AcceptCardItemResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AcceptCardItemResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string json_ret = 2;
  bool has_json_ret() const;
  void clear_json_ret();
  static const int kJsonRetFieldNumber = 2;
  const ::std::string& json_ret() const;
  void set_json_ret(const ::std::string& value);
  #if LANG_CXX11
  void set_json_ret(::std::string&& value);
  #endif
  void set_json_ret(const char* value);
  void set_json_ret(const char* value, size_t size);
  ::std::string* mutable_json_ret();
  ::std::string* release_json_ret();
  void set_allocated_json_ret(::std::string* json_ret);

  // optional string ret_msg = 4;
  bool has_ret_msg() const;
  void clear_ret_msg();
  static const int kRetMsgFieldNumber = 4;
  const ::std::string& ret_msg() const;
  void set_ret_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_ret_msg(::std::string&& value);
  #endif
  void set_ret_msg(const char* value);
  void set_ret_msg(const char* value, size_t size);
  ::std::string* mutable_ret_msg();
  ::std::string* release_ret_msg();
  void set_allocated_ret_msg(::std::string* ret_msg);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // optional int32 ret_code = 3;
  bool has_ret_code() const;
  void clear_ret_code();
  static const int kRetCodeFieldNumber = 3;
  ::google::protobuf::int32 ret_code() const;
  void set_ret_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.AcceptCardItemResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_json_ret();
  void clear_has_json_ret();
  void set_has_ret_code();
  void clear_has_ret_code();
  void set_has_ret_msg();
  void clear_has_ret_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr json_ret_;
  ::google::protobuf::internal::ArenaStringPtr ret_msg_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::int32 ret_code_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetCardCountRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetCardCountRequest) */ {
 public:
  GetCardCountRequest();
  virtual ~GetCardCountRequest();

  GetCardCountRequest(const GetCardCountRequest& from);

  inline GetCardCountRequest& operator=(const GetCardCountRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCardCountRequest& default_instance();

  static inline const GetCardCountRequest* internal_default_instance() {
    return reinterpret_cast<const GetCardCountRequest*>(
               &_GetCardCountRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(GetCardCountRequest* other);

  // implements Message ----------------------------------------------

  inline GetCardCountRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetCardCountRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetCardCountRequest& from);
  void MergeFrom(const GetCardCountRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetCardCountRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // @@protoc_insertion_point(class_scope:micromsg.GetCardCountRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetCardCountResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetCardCountResponse) */ {
 public:
  GetCardCountResponse();
  virtual ~GetCardCountResponse();

  GetCardCountResponse(const GetCardCountResponse& from);

  inline GetCardCountResponse& operator=(const GetCardCountResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCardCountResponse& default_instance();

  static inline const GetCardCountResponse* internal_default_instance() {
    return reinterpret_cast<const GetCardCountResponse*>(
               &_GetCardCountResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(GetCardCountResponse* other);

  // implements Message ----------------------------------------------

  inline GetCardCountResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetCardCountResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetCardCountResponse& from);
  void MergeFrom(const GetCardCountResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetCardCountResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // optional uint32 count = 2;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetCardCountResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_count();
  void clear_has_count();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 count_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetAvailableCardRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetAvailableCardRequest) */ {
 public:
  GetAvailableCardRequest();
  virtual ~GetAvailableCardRequest();

  GetAvailableCardRequest(const GetAvailableCardRequest& from);

  inline GetAvailableCardRequest& operator=(const GetAvailableCardRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAvailableCardRequest& default_instance();

  static inline const GetAvailableCardRequest* internal_default_instance() {
    return reinterpret_cast<const GetAvailableCardRequest*>(
               &_GetAvailableCardRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(GetAvailableCardRequest* other);

  // implements Message ----------------------------------------------

  inline GetAvailableCardRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetAvailableCardRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetAvailableCardRequest& from);
  void MergeFrom(const GetAvailableCardRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetAvailableCardRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string app_id = 2;
  bool has_app_id() const;
  void clear_app_id();
  static const int kAppIdFieldNumber = 2;
  const ::std::string& app_id() const;
  void set_app_id(const ::std::string& value);
  #if LANG_CXX11
  void set_app_id(::std::string&& value);
  #endif
  void set_app_id(const char* value);
  void set_app_id(const char* value, size_t size);
  ::std::string* mutable_app_id();
  ::std::string* release_app_id();
  void set_allocated_app_id(::std::string* app_id);

  // optional string sign_type = 4;
  bool has_sign_type() const;
  void clear_sign_type();
  static const int kSignTypeFieldNumber = 4;
  const ::std::string& sign_type() const;
  void set_sign_type(const ::std::string& value);
  #if LANG_CXX11
  void set_sign_type(::std::string&& value);
  #endif
  void set_sign_type(const char* value);
  void set_sign_type(const char* value, size_t size);
  ::std::string* mutable_sign_type();
  ::std::string* release_sign_type();
  void set_allocated_sign_type(::std::string* sign_type);

  // optional string card_sign = 5;
  bool has_card_sign() const;
  void clear_card_sign();
  static const int kCardSignFieldNumber = 5;
  const ::std::string& card_sign() const;
  void set_card_sign(const ::std::string& value);
  #if LANG_CXX11
  void set_card_sign(::std::string&& value);
  #endif
  void set_card_sign(const char* value);
  void set_card_sign(const char* value, size_t size);
  ::std::string* mutable_card_sign();
  ::std::string* release_card_sign();
  void set_allocated_card_sign(::std::string* card_sign);

  // optional string nonce_str = 7;
  bool has_nonce_str() const;
  void clear_nonce_str();
  static const int kNonceStrFieldNumber = 7;
  const ::std::string& nonce_str() const;
  void set_nonce_str(const ::std::string& value);
  #if LANG_CXX11
  void set_nonce_str(::std::string&& value);
  #endif
  void set_nonce_str(const char* value);
  void set_nonce_str(const char* value, size_t size);
  ::std::string* mutable_nonce_str();
  ::std::string* release_nonce_str();
  void set_allocated_nonce_str(::std::string* nonce_str);

  // optional string card_tp_id = 8;
  bool has_card_tp_id() const;
  void clear_card_tp_id();
  static const int kCardTpIdFieldNumber = 8;
  const ::std::string& card_tp_id() const;
  void set_card_tp_id(const ::std::string& value);
  #if LANG_CXX11
  void set_card_tp_id(::std::string&& value);
  #endif
  void set_card_tp_id(const char* value);
  void set_card_tp_id(const char* value, size_t size);
  ::std::string* mutable_card_tp_id();
  ::std::string* release_card_tp_id();
  void set_allocated_card_tp_id(::std::string* card_tp_id);

  // optional string card_type = 9;
  bool has_card_type() const;
  void clear_card_type();
  static const int kCardTypeFieldNumber = 9;
  const ::std::string& card_type() const;
  void set_card_type(const ::std::string& value);
  #if LANG_CXX11
  void set_card_type(::std::string&& value);
  #endif
  void set_card_type(const char* value);
  void set_card_type(const char* value, size_t size);
  ::std::string* mutable_card_type();
  ::std::string* release_card_type();
  void set_allocated_card_type(::std::string* card_type);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // optional uint32 shop_id = 3;
  bool has_shop_id() const;
  void clear_shop_id();
  static const int kShopIdFieldNumber = 3;
  ::google::protobuf::uint32 shop_id() const;
  void set_shop_id(::google::protobuf::uint32 value);

  // optional uint32 time_stamp = 6;
  bool has_time_stamp() const;
  void clear_time_stamp();
  static const int kTimeStampFieldNumber = 6;
  ::google::protobuf::uint32 time_stamp() const;
  void set_time_stamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetAvailableCardRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_app_id();
  void clear_has_app_id();
  void set_has_shop_id();
  void clear_has_shop_id();
  void set_has_sign_type();
  void clear_has_sign_type();
  void set_has_card_sign();
  void clear_has_card_sign();
  void set_has_time_stamp();
  void clear_has_time_stamp();
  void set_has_nonce_str();
  void clear_has_nonce_str();
  void set_has_card_tp_id();
  void clear_has_card_tp_id();
  void set_has_card_type();
  void clear_has_card_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr app_id_;
  ::google::protobuf::internal::ArenaStringPtr sign_type_;
  ::google::protobuf::internal::ArenaStringPtr card_sign_;
  ::google::protobuf::internal::ArenaStringPtr nonce_str_;
  ::google::protobuf::internal::ArenaStringPtr card_tp_id_;
  ::google::protobuf::internal::ArenaStringPtr card_type_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 shop_id_;
  ::google::protobuf::uint32 time_stamp_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetAvailableCardResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetAvailableCardResponse) */ {
 public:
  GetAvailableCardResponse();
  virtual ~GetAvailableCardResponse();

  GetAvailableCardResponse(const GetAvailableCardResponse& from);

  inline GetAvailableCardResponse& operator=(const GetAvailableCardResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAvailableCardResponse& default_instance();

  static inline const GetAvailableCardResponse* internal_default_instance() {
    return reinterpret_cast<const GetAvailableCardResponse*>(
               &_GetAvailableCardResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(GetAvailableCardResponse* other);

  // implements Message ----------------------------------------------

  inline GetAvailableCardResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetAvailableCardResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetAvailableCardResponse& from);
  void MergeFrom(const GetAvailableCardResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetAvailableCardResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string json_ret = 2;
  bool has_json_ret() const;
  void clear_json_ret();
  static const int kJsonRetFieldNumber = 2;
  const ::std::string& json_ret() const;
  void set_json_ret(const ::std::string& value);
  #if LANG_CXX11
  void set_json_ret(::std::string&& value);
  #endif
  void set_json_ret(const char* value);
  void set_json_ret(const char* value, size_t size);
  ::std::string* mutable_json_ret();
  ::std::string* release_json_ret();
  void set_allocated_json_ret(::std::string* json_ret);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // @@protoc_insertion_point(class_scope:micromsg.GetAvailableCardResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_json_ret();
  void clear_has_json_ret();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr json_ret_;
  ::micromsg::BaseResponse* baseresponse_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CardListItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.CardListItem) */ {
 public:
  CardListItem();
  virtual ~CardListItem();

  CardListItem(const CardListItem& from);

  inline CardListItem& operator=(const CardListItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CardListItem& default_instance();

  static inline const CardListItem* internal_default_instance() {
    return reinterpret_cast<const CardListItem*>(
               &_CardListItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(CardListItem* other);

  // implements Message ----------------------------------------------

  inline CardListItem* New() const PROTOBUF_FINAL { return New(NULL); }

  CardListItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CardListItem& from);
  void MergeFrom(const CardListItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CardListItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string card_tp_id = 1;
  bool has_card_tp_id() const;
  void clear_card_tp_id();
  static const int kCardTpIdFieldNumber = 1;
  const ::std::string& card_tp_id() const;
  void set_card_tp_id(const ::std::string& value);
  #if LANG_CXX11
  void set_card_tp_id(::std::string&& value);
  #endif
  void set_card_tp_id(const char* value);
  void set_card_tp_id(const char* value, size_t size);
  ::std::string* mutable_card_tp_id();
  ::std::string* release_card_tp_id();
  void set_allocated_card_tp_id(::std::string* card_tp_id);

  // optional string card_ext = 2;
  bool has_card_ext() const;
  void clear_card_ext();
  static const int kCardExtFieldNumber = 2;
  const ::std::string& card_ext() const;
  void set_card_ext(const ::std::string& value);
  #if LANG_CXX11
  void set_card_ext(::std::string&& value);
  #endif
  void set_card_ext(const char* value);
  void set_card_ext(const char* value, size_t size);
  ::std::string* mutable_card_ext();
  ::std::string* release_card_ext();
  void set_allocated_card_ext(::std::string* card_ext);

  // optional int32 is_succ = 3;
  bool has_is_succ() const;
  void clear_is_succ();
  static const int kIsSuccFieldNumber = 3;
  ::google::protobuf::int32 is_succ() const;
  void set_is_succ(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.CardListItem)
 private:
  void set_has_card_tp_id();
  void clear_has_card_tp_id();
  void set_has_card_ext();
  void clear_has_card_ext();
  void set_has_is_succ();
  void clear_has_is_succ();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr card_tp_id_;
  ::google::protobuf::internal::ArenaStringPtr card_ext_;
  ::google::protobuf::int32 is_succ_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CardListItems : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.CardListItems) */ {
 public:
  CardListItems();
  virtual ~CardListItems();

  CardListItems(const CardListItems& from);

  inline CardListItems& operator=(const CardListItems& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CardListItems& default_instance();

  static inline const CardListItems* internal_default_instance() {
    return reinterpret_cast<const CardListItems*>(
               &_CardListItems_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(CardListItems* other);

  // implements Message ----------------------------------------------

  inline CardListItems* New() const PROTOBUF_FINAL { return New(NULL); }

  CardListItems* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CardListItems& from);
  void MergeFrom(const CardListItems& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CardListItems* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.CardListItem card_list = 1;
  int card_list_size() const;
  void clear_card_list();
  static const int kCardListFieldNumber = 1;
  const ::micromsg::CardListItem& card_list(int index) const;
  ::micromsg::CardListItem* mutable_card_list(int index);
  ::micromsg::CardListItem* add_card_list();
  ::google::protobuf::RepeatedPtrField< ::micromsg::CardListItem >*
      mutable_card_list();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::CardListItem >&
      card_list() const;

  // @@protoc_insertion_point(class_scope:micromsg.CardListItems)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::CardListItem > card_list_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetCardListFromAppRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetCardListFromAppRequest) */ {
 public:
  GetCardListFromAppRequest();
  virtual ~GetCardListFromAppRequest();

  GetCardListFromAppRequest(const GetCardListFromAppRequest& from);

  inline GetCardListFromAppRequest& operator=(const GetCardListFromAppRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCardListFromAppRequest& default_instance();

  static inline const GetCardListFromAppRequest* internal_default_instance() {
    return reinterpret_cast<const GetCardListFromAppRequest*>(
               &_GetCardListFromAppRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(GetCardListFromAppRequest* other);

  // implements Message ----------------------------------------------

  inline GetCardListFromAppRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetCardListFromAppRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetCardListFromAppRequest& from);
  void MergeFrom(const GetCardListFromAppRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetCardListFromAppRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.CardListItem card_list = 2;
  int card_list_size() const;
  void clear_card_list();
  static const int kCardListFieldNumber = 2;
  const ::micromsg::CardListItem& card_list(int index) const;
  ::micromsg::CardListItem* mutable_card_list(int index);
  ::micromsg::CardListItem* add_card_list();
  ::google::protobuf::RepeatedPtrField< ::micromsg::CardListItem >*
      mutable_card_list();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::CardListItem >&
      card_list() const;

  // optional string bundle_id = 4;
  bool has_bundle_id() const;
  void clear_bundle_id();
  static const int kBundleIdFieldNumber = 4;
  const ::std::string& bundle_id() const;
  void set_bundle_id(const ::std::string& value);
  #if LANG_CXX11
  void set_bundle_id(::std::string&& value);
  #endif
  void set_bundle_id(const char* value);
  void set_bundle_id(const char* value, size_t size);
  ::std::string* mutable_bundle_id();
  ::std::string* release_bundle_id();
  void set_allocated_bundle_id(::std::string* bundle_id);

  // optional string package_name = 5;
  bool has_package_name() const;
  void clear_package_name();
  static const int kPackageNameFieldNumber = 5;
  const ::std::string& package_name() const;
  void set_package_name(const ::std::string& value);
  #if LANG_CXX11
  void set_package_name(::std::string&& value);
  #endif
  void set_package_name(const char* value);
  void set_package_name(const char* value, size_t size);
  ::std::string* mutable_package_name();
  ::std::string* release_package_name();
  void set_allocated_package_name(::std::string* package_name);

  // optional string sign = 6;
  bool has_sign() const;
  void clear_sign();
  static const int kSignFieldNumber = 6;
  const ::std::string& sign() const;
  void set_sign(const ::std::string& value);
  #if LANG_CXX11
  void set_sign(::std::string&& value);
  #endif
  void set_sign(const char* value);
  void set_sign(const char* value, size_t size);
  ::std::string* mutable_sign();
  ::std::string* release_sign();
  void set_allocated_sign(::std::string* sign);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // optional uint32 from_scene = 3;
  bool has_from_scene() const;
  void clear_from_scene();
  static const int kFromSceneFieldNumber = 3;
  ::google::protobuf::uint32 from_scene() const;
  void set_from_scene(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetCardListFromAppRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_from_scene();
  void clear_has_from_scene();
  void set_has_bundle_id();
  void clear_has_bundle_id();
  void set_has_package_name();
  void clear_has_package_name();
  void set_has_sign();
  void clear_has_sign();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::CardListItem > card_list_;
  ::google::protobuf::internal::ArenaStringPtr bundle_id_;
  ::google::protobuf::internal::ArenaStringPtr package_name_;
  ::google::protobuf::internal::ArenaStringPtr sign_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 from_scene_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetCardListFromAppResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetCardListFromAppResponse) */ {
 public:
  GetCardListFromAppResponse();
  virtual ~GetCardListFromAppResponse();

  GetCardListFromAppResponse(const GetCardListFromAppResponse& from);

  inline GetCardListFromAppResponse& operator=(const GetCardListFromAppResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCardListFromAppResponse& default_instance();

  static inline const GetCardListFromAppResponse* internal_default_instance() {
    return reinterpret_cast<const GetCardListFromAppResponse*>(
               &_GetCardListFromAppResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(GetCardListFromAppResponse* other);

  // implements Message ----------------------------------------------

  inline GetCardListFromAppResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetCardListFromAppResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetCardListFromAppResponse& from);
  void MergeFrom(const GetCardListFromAppResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetCardListFromAppResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string json_ret = 2;
  bool has_json_ret() const;
  void clear_json_ret();
  static const int kJsonRetFieldNumber = 2;
  const ::std::string& json_ret() const;
  void set_json_ret(const ::std::string& value);
  #if LANG_CXX11
  void set_json_ret(::std::string&& value);
  #endif
  void set_json_ret(const char* value);
  void set_json_ret(const char* value, size_t size);
  ::std::string* mutable_json_ret();
  ::std::string* release_json_ret();
  void set_allocated_json_ret(::std::string* json_ret);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // @@protoc_insertion_point(class_scope:micromsg.GetCardListFromAppResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_json_ret();
  void clear_has_json_ret();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr json_ret_;
  ::micromsg::BaseResponse* baseresponse_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AcceptCardListFromAppRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.AcceptCardListFromAppRequest) */ {
 public:
  AcceptCardListFromAppRequest();
  virtual ~AcceptCardListFromAppRequest();

  AcceptCardListFromAppRequest(const AcceptCardListFromAppRequest& from);

  inline AcceptCardListFromAppRequest& operator=(const AcceptCardListFromAppRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AcceptCardListFromAppRequest& default_instance();

  static inline const AcceptCardListFromAppRequest* internal_default_instance() {
    return reinterpret_cast<const AcceptCardListFromAppRequest*>(
               &_AcceptCardListFromAppRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(AcceptCardListFromAppRequest* other);

  // implements Message ----------------------------------------------

  inline AcceptCardListFromAppRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  AcceptCardListFromAppRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AcceptCardListFromAppRequest& from);
  void MergeFrom(const AcceptCardListFromAppRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AcceptCardListFromAppRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.CardListItem card_list = 2;
  int card_list_size() const;
  void clear_card_list();
  static const int kCardListFieldNumber = 2;
  const ::micromsg::CardListItem& card_list(int index) const;
  ::micromsg::CardListItem* mutable_card_list(int index);
  ::micromsg::CardListItem* add_card_list();
  ::google::protobuf::RepeatedPtrField< ::micromsg::CardListItem >*
      mutable_card_list();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::CardListItem >&
      card_list() const;

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // optional uint32 from_scene = 3;
  bool has_from_scene() const;
  void clear_from_scene();
  static const int kFromSceneFieldNumber = 3;
  ::google::protobuf::uint32 from_scene() const;
  void set_from_scene(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.AcceptCardListFromAppRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_from_scene();
  void clear_has_from_scene();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::CardListItem > card_list_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 from_scene_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AcceptCardListFromAppResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.AcceptCardListFromAppResponse) */ {
 public:
  AcceptCardListFromAppResponse();
  virtual ~AcceptCardListFromAppResponse();

  AcceptCardListFromAppResponse(const AcceptCardListFromAppResponse& from);

  inline AcceptCardListFromAppResponse& operator=(const AcceptCardListFromAppResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AcceptCardListFromAppResponse& default_instance();

  static inline const AcceptCardListFromAppResponse* internal_default_instance() {
    return reinterpret_cast<const AcceptCardListFromAppResponse*>(
               &_AcceptCardListFromAppResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(AcceptCardListFromAppResponse* other);

  // implements Message ----------------------------------------------

  inline AcceptCardListFromAppResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  AcceptCardListFromAppResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AcceptCardListFromAppResponse& from);
  void MergeFrom(const AcceptCardListFromAppResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AcceptCardListFromAppResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string json_ret = 2;
  bool has_json_ret() const;
  void clear_json_ret();
  static const int kJsonRetFieldNumber = 2;
  const ::std::string& json_ret() const;
  void set_json_ret(const ::std::string& value);
  #if LANG_CXX11
  void set_json_ret(::std::string&& value);
  #endif
  void set_json_ret(const char* value);
  void set_json_ret(const char* value, size_t size);
  ::std::string* mutable_json_ret();
  ::std::string* release_json_ret();
  void set_allocated_json_ret(::std::string* json_ret);

  // optional string ret_msg = 4;
  bool has_ret_msg() const;
  void clear_ret_msg();
  static const int kRetMsgFieldNumber = 4;
  const ::std::string& ret_msg() const;
  void set_ret_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_ret_msg(::std::string&& value);
  #endif
  void set_ret_msg(const char* value);
  void set_ret_msg(const char* value, size_t size);
  ::std::string* mutable_ret_msg();
  ::std::string* release_ret_msg();
  void set_allocated_ret_msg(::std::string* ret_msg);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // optional int32 ret_code = 3;
  bool has_ret_code() const;
  void clear_ret_code();
  static const int kRetCodeFieldNumber = 3;
  ::google::protobuf::int32 ret_code() const;
  void set_ret_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.AcceptCardListFromAppResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_json_ret();
  void clear_has_json_ret();
  void set_has_ret_code();
  void clear_has_ret_code();
  void set_has_ret_msg();
  void clear_has_ret_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr json_ret_;
  ::google::protobuf::internal::ArenaStringPtr ret_msg_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::int32 ret_code_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetCardConfigInfoRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetCardConfigInfoRequest) */ {
 public:
  GetCardConfigInfoRequest();
  virtual ~GetCardConfigInfoRequest();

  GetCardConfigInfoRequest(const GetCardConfigInfoRequest& from);

  inline GetCardConfigInfoRequest& operator=(const GetCardConfigInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCardConfigInfoRequest& default_instance();

  static inline const GetCardConfigInfoRequest* internal_default_instance() {
    return reinterpret_cast<const GetCardConfigInfoRequest*>(
               &_GetCardConfigInfoRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(GetCardConfigInfoRequest* other);

  // implements Message ----------------------------------------------

  inline GetCardConfigInfoRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetCardConfigInfoRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetCardConfigInfoRequest& from);
  void MergeFrom(const GetCardConfigInfoRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetCardConfigInfoRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // @@protoc_insertion_point(class_scope:micromsg.GetCardConfigInfoRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetCardConfigInfoResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetCardConfigInfoResponse) */ {
 public:
  GetCardConfigInfoResponse();
  virtual ~GetCardConfigInfoResponse();

  GetCardConfigInfoResponse(const GetCardConfigInfoResponse& from);

  inline GetCardConfigInfoResponse& operator=(const GetCardConfigInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCardConfigInfoResponse& default_instance();

  static inline const GetCardConfigInfoResponse* internal_default_instance() {
    return reinterpret_cast<const GetCardConfigInfoResponse*>(
               &_GetCardConfigInfoResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(GetCardConfigInfoResponse* other);

  // implements Message ----------------------------------------------

  inline GetCardConfigInfoResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetCardConfigInfoResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetCardConfigInfoResponse& from);
  void MergeFrom(const GetCardConfigInfoResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetCardConfigInfoResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string json_ret = 2;
  bool has_json_ret() const;
  void clear_json_ret();
  static const int kJsonRetFieldNumber = 2;
  const ::std::string& json_ret() const;
  void set_json_ret(const ::std::string& value);
  #if LANG_CXX11
  void set_json_ret(::std::string&& value);
  #endif
  void set_json_ret(const char* value);
  void set_json_ret(const char* value, size_t size);
  ::std::string* mutable_json_ret();
  ::std::string* release_json_ret();
  void set_allocated_json_ret(::std::string* json_ret);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // @@protoc_insertion_point(class_scope:micromsg.GetCardConfigInfoResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_json_ret();
  void clear_has_json_ret();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr json_ret_;
  ::micromsg::BaseResponse* baseresponse_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CardDataInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.CardDataInfo) */ {
 public:
  CardDataInfo();
  virtual ~CardDataInfo();

  CardDataInfo(const CardDataInfo& from);

  inline CardDataInfo& operator=(const CardDataInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CardDataInfo& default_instance();

  static inline const CardDataInfo* internal_default_instance() {
    return reinterpret_cast<const CardDataInfo*>(
               &_CardDataInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(CardDataInfo* other);

  // implements Message ----------------------------------------------

  inline CardDataInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CardDataInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CardDataInfo& from);
  void MergeFrom(const CardDataInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CardDataInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string card_id = 1;
  bool has_card_id() const;
  void clear_card_id();
  static const int kCardIdFieldNumber = 1;
  const ::std::string& card_id() const;
  void set_card_id(const ::std::string& value);
  #if LANG_CXX11
  void set_card_id(::std::string&& value);
  #endif
  void set_card_id(const char* value);
  void set_card_id(const char* value, size_t size);
  ::std::string* mutable_card_id();
  ::std::string* release_card_id();
  void set_allocated_card_id(::std::string* card_id);

  // @@protoc_insertion_point(class_scope:micromsg.CardDataInfo)
 private:
  void set_has_card_id();
  void clear_has_card_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr card_id_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BatchGetCardItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.BatchGetCardItem) */ {
 public:
  BatchGetCardItem();
  virtual ~BatchGetCardItem();

  BatchGetCardItem(const BatchGetCardItem& from);

  inline BatchGetCardItem& operator=(const BatchGetCardItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchGetCardItem& default_instance();

  static inline const BatchGetCardItem* internal_default_instance() {
    return reinterpret_cast<const BatchGetCardItem*>(
               &_BatchGetCardItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(BatchGetCardItem* other);

  // implements Message ----------------------------------------------

  inline BatchGetCardItem* New() const PROTOBUF_FINAL { return New(NULL); }

  BatchGetCardItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BatchGetCardItem& from);
  void MergeFrom(const BatchGetCardItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BatchGetCardItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string card_id = 1;
  bool has_card_id() const;
  void clear_card_id();
  static const int kCardIdFieldNumber = 1;
  const ::std::string& card_id() const;
  void set_card_id(const ::std::string& value);
  #if LANG_CXX11
  void set_card_id(::std::string&& value);
  #endif
  void set_card_id(const char* value);
  void set_card_id(const char* value, size_t size);
  ::std::string* mutable_card_id();
  ::std::string* release_card_id();
  void set_allocated_card_id(::std::string* card_id);

  // optional .micromsg.CardDataInfo card_data_info = 2;
  bool has_card_data_info() const;
  void clear_card_data_info();
  static const int kCardDataInfoFieldNumber = 2;
  const ::micromsg::CardDataInfo& card_data_info() const;
  ::micromsg::CardDataInfo* mutable_card_data_info();
  ::micromsg::CardDataInfo* release_card_data_info();
  void set_allocated_card_data_info(::micromsg::CardDataInfo* card_data_info);

  // @@protoc_insertion_point(class_scope:micromsg.BatchGetCardItem)
 private:
  void set_has_card_id();
  void clear_has_card_id();
  void set_has_card_data_info();
  void clear_has_card_data_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr card_id_;
  ::micromsg::CardDataInfo* card_data_info_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BatchGetCardArray : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.BatchGetCardArray) */ {
 public:
  BatchGetCardArray();
  virtual ~BatchGetCardArray();

  BatchGetCardArray(const BatchGetCardArray& from);

  inline BatchGetCardArray& operator=(const BatchGetCardArray& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchGetCardArray& default_instance();

  static inline const BatchGetCardArray* internal_default_instance() {
    return reinterpret_cast<const BatchGetCardArray*>(
               &_BatchGetCardArray_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(BatchGetCardArray* other);

  // implements Message ----------------------------------------------

  inline BatchGetCardArray* New() const PROTOBUF_FINAL { return New(NULL); }

  BatchGetCardArray* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BatchGetCardArray& from);
  void MergeFrom(const BatchGetCardArray& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BatchGetCardArray* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.BatchGetCardItem card_array = 1;
  int card_array_size() const;
  void clear_card_array();
  static const int kCardArrayFieldNumber = 1;
  const ::micromsg::BatchGetCardItem& card_array(int index) const;
  ::micromsg::BatchGetCardItem* mutable_card_array(int index);
  ::micromsg::BatchGetCardItem* add_card_array();
  ::google::protobuf::RepeatedPtrField< ::micromsg::BatchGetCardItem >*
      mutable_card_array();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::BatchGetCardItem >&
      card_array() const;

  // @@protoc_insertion_point(class_scope:micromsg.BatchGetCardArray)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::BatchGetCardItem > card_array_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CardTpInfoItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.CardTpInfoItem) */ {
 public:
  CardTpInfoItem();
  virtual ~CardTpInfoItem();

  CardTpInfoItem(const CardTpInfoItem& from);

  inline CardTpInfoItem& operator=(const CardTpInfoItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CardTpInfoItem& default_instance();

  static inline const CardTpInfoItem* internal_default_instance() {
    return reinterpret_cast<const CardTpInfoItem*>(
               &_CardTpInfoItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(CardTpInfoItem* other);

  // implements Message ----------------------------------------------

  inline CardTpInfoItem* New() const PROTOBUF_FINAL { return New(NULL); }

  CardTpInfoItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CardTpInfoItem& from);
  void MergeFrom(const CardTpInfoItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CardTpInfoItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string card_tp_id = 1;
  bool has_card_tp_id() const;
  void clear_card_tp_id();
  static const int kCardTpIdFieldNumber = 1;
  const ::std::string& card_tp_id() const;
  void set_card_tp_id(const ::std::string& value);
  #if LANG_CXX11
  void set_card_tp_id(::std::string&& value);
  #endif
  void set_card_tp_id(const char* value);
  void set_card_tp_id(const char* value, size_t size);
  ::std::string* mutable_card_tp_id();
  ::std::string* release_card_tp_id();
  void set_allocated_card_tp_id(::std::string* card_tp_id);

  // optional string code = 2;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  const ::std::string& code() const;
  void set_code(const ::std::string& value);
  #if LANG_CXX11
  void set_code(::std::string&& value);
  #endif
  void set_code(const char* value);
  void set_code(const char* value, size_t size);
  ::std::string* mutable_code();
  ::std::string* release_code();
  void set_allocated_code(::std::string* code);

  // @@protoc_insertion_point(class_scope:micromsg.CardTpInfoItem)
 private:
  void set_has_card_tp_id();
  void clear_has_card_tp_id();
  void set_has_code();
  void clear_has_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr card_tp_id_;
  ::google::protobuf::internal::ArenaStringPtr code_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BatchGetCardItemByTpInfoRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.BatchGetCardItemByTpInfoRequest) */ {
 public:
  BatchGetCardItemByTpInfoRequest();
  virtual ~BatchGetCardItemByTpInfoRequest();

  BatchGetCardItemByTpInfoRequest(const BatchGetCardItemByTpInfoRequest& from);

  inline BatchGetCardItemByTpInfoRequest& operator=(const BatchGetCardItemByTpInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchGetCardItemByTpInfoRequest& default_instance();

  static inline const BatchGetCardItemByTpInfoRequest* internal_default_instance() {
    return reinterpret_cast<const BatchGetCardItemByTpInfoRequest*>(
               &_BatchGetCardItemByTpInfoRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(BatchGetCardItemByTpInfoRequest* other);

  // implements Message ----------------------------------------------

  inline BatchGetCardItemByTpInfoRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  BatchGetCardItemByTpInfoRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BatchGetCardItemByTpInfoRequest& from);
  void MergeFrom(const BatchGetCardItemByTpInfoRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BatchGetCardItemByTpInfoRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.CardTpInfoItem items = 2;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 2;
  const ::micromsg::CardTpInfoItem& items(int index) const;
  ::micromsg::CardTpInfoItem* mutable_items(int index);
  ::micromsg::CardTpInfoItem* add_items();
  ::google::protobuf::RepeatedPtrField< ::micromsg::CardTpInfoItem >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::CardTpInfoItem >&
      items() const;

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // @@protoc_insertion_point(class_scope:micromsg.BatchGetCardItemByTpInfoRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::CardTpInfoItem > items_;
  ::micromsg::BaseRequest* baserequest_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BatchGetCardItemByTpInfoResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.BatchGetCardItemByTpInfoResponse) */ {
 public:
  BatchGetCardItemByTpInfoResponse();
  virtual ~BatchGetCardItemByTpInfoResponse();

  BatchGetCardItemByTpInfoResponse(const BatchGetCardItemByTpInfoResponse& from);

  inline BatchGetCardItemByTpInfoResponse& operator=(const BatchGetCardItemByTpInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchGetCardItemByTpInfoResponse& default_instance();

  static inline const BatchGetCardItemByTpInfoResponse* internal_default_instance() {
    return reinterpret_cast<const BatchGetCardItemByTpInfoResponse*>(
               &_BatchGetCardItemByTpInfoResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(BatchGetCardItemByTpInfoResponse* other);

  // implements Message ----------------------------------------------

  inline BatchGetCardItemByTpInfoResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  BatchGetCardItemByTpInfoResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BatchGetCardItemByTpInfoResponse& from);
  void MergeFrom(const BatchGetCardItemByTpInfoResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BatchGetCardItemByTpInfoResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string json_ret = 2;
  bool has_json_ret() const;
  void clear_json_ret();
  static const int kJsonRetFieldNumber = 2;
  const ::std::string& json_ret() const;
  void set_json_ret(const ::std::string& value);
  #if LANG_CXX11
  void set_json_ret(::std::string&& value);
  #endif
  void set_json_ret(const char* value);
  void set_json_ret(const char* value, size_t size);
  ::std::string* mutable_json_ret();
  ::std::string* release_json_ret();
  void set_allocated_json_ret(::std::string* json_ret);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // @@protoc_insertion_point(class_scope:micromsg.BatchGetCardItemByTpInfoResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_json_ret();
  void clear_has_json_ret();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr json_ret_;
  ::micromsg::BaseResponse* baseresponse_;
  friend struct protobuf_mmcard_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CardUserItem

// optional string CardId = 1;
inline bool CardUserItem::has_cardid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CardUserItem::set_has_cardid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CardUserItem::clear_has_cardid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CardUserItem::clear_cardid() {
  cardid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cardid();
}
inline const ::std::string& CardUserItem::cardid() const {
  // @@protoc_insertion_point(field_get:micromsg.CardUserItem.CardId)
  return cardid_.GetNoArena();
}
inline void CardUserItem::set_cardid(const ::std::string& value) {
  set_has_cardid();
  cardid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CardUserItem.CardId)
}
#if LANG_CXX11
inline void CardUserItem::set_cardid(::std::string&& value) {
  set_has_cardid();
  cardid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CardUserItem.CardId)
}
#endif
inline void CardUserItem::set_cardid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cardid();
  cardid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CardUserItem.CardId)
}
inline void CardUserItem::set_cardid(const char* value, size_t size) {
  set_has_cardid();
  cardid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CardUserItem.CardId)
}
inline ::std::string* CardUserItem::mutable_cardid() {
  set_has_cardid();
  // @@protoc_insertion_point(field_mutable:micromsg.CardUserItem.CardId)
  return cardid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CardUserItem::release_cardid() {
  // @@protoc_insertion_point(field_release:micromsg.CardUserItem.CardId)
  clear_has_cardid();
  return cardid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CardUserItem::set_allocated_cardid(::std::string* cardid) {
  if (cardid != NULL) {
    set_has_cardid();
  } else {
    clear_has_cardid();
  }
  cardid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cardid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CardUserItem.CardId)
}

// optional uint64 UpdateSequence = 2;
inline bool CardUserItem::has_updatesequence() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CardUserItem::set_has_updatesequence() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CardUserItem::clear_has_updatesequence() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CardUserItem::clear_updatesequence() {
  updatesequence_ = GOOGLE_ULONGLONG(0);
  clear_has_updatesequence();
}
inline ::google::protobuf::uint64 CardUserItem::updatesequence() const {
  // @@protoc_insertion_point(field_get:micromsg.CardUserItem.UpdateSequence)
  return updatesequence_;
}
inline void CardUserItem::set_updatesequence(::google::protobuf::uint64 value) {
  set_has_updatesequence();
  updatesequence_ = value;
  // @@protoc_insertion_point(field_set:micromsg.CardUserItem.UpdateSequence)
}

// optional uint32 StateFlag = 3;
inline bool CardUserItem::has_stateflag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CardUserItem::set_has_stateflag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CardUserItem::clear_has_stateflag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CardUserItem::clear_stateflag() {
  stateflag_ = 0u;
  clear_has_stateflag();
}
inline ::google::protobuf::uint32 CardUserItem::stateflag() const {
  // @@protoc_insertion_point(field_get:micromsg.CardUserItem.StateFlag)
  return stateflag_;
}
inline void CardUserItem::set_stateflag(::google::protobuf::uint32 value) {
  set_has_stateflag();
  stateflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.CardUserItem.StateFlag)
}

// optional uint32 UpdateTime = 4;
inline bool CardUserItem::has_updatetime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CardUserItem::set_has_updatetime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CardUserItem::clear_has_updatetime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CardUserItem::clear_updatetime() {
  updatetime_ = 0u;
  clear_has_updatetime();
}
inline ::google::protobuf::uint32 CardUserItem::updatetime() const {
  // @@protoc_insertion_point(field_get:micromsg.CardUserItem.UpdateTime)
  return updatetime_;
}
inline void CardUserItem::set_updatetime(::google::protobuf::uint32 value) {
  set_has_updatetime();
  updatetime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.CardUserItem.UpdateTime)
}

// optional uint32 Status = 5;
inline bool CardUserItem::has_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CardUserItem::set_has_status() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CardUserItem::clear_has_status() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CardUserItem::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 CardUserItem::status() const {
  // @@protoc_insertion_point(field_get:micromsg.CardUserItem.Status)
  return status_;
}
inline void CardUserItem::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:micromsg.CardUserItem.Status)
}

// -------------------------------------------------------------------

// BatchDelCardItemRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool BatchDelCardItemRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchDelCardItemRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchDelCardItemRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchDelCardItemRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& BatchDelCardItemRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.BatchDelCardItemRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* BatchDelCardItemRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.BatchDelCardItemRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* BatchDelCardItemRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.BatchDelCardItemRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void BatchDelCardItemRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.BatchDelCardItemRequest.BaseRequest)
}

// repeated string card_ids = 2;
inline int BatchDelCardItemRequest::card_ids_size() const {
  return card_ids_.size();
}
inline void BatchDelCardItemRequest::clear_card_ids() {
  card_ids_.Clear();
}
inline const ::std::string& BatchDelCardItemRequest::card_ids(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.BatchDelCardItemRequest.card_ids)
  return card_ids_.Get(index);
}
inline ::std::string* BatchDelCardItemRequest::mutable_card_ids(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.BatchDelCardItemRequest.card_ids)
  return card_ids_.Mutable(index);
}
inline void BatchDelCardItemRequest::set_card_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:micromsg.BatchDelCardItemRequest.card_ids)
  card_ids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void BatchDelCardItemRequest::set_card_ids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:micromsg.BatchDelCardItemRequest.card_ids)
  card_ids_.Mutable(index)->assign(std::move(value));
}
#endif
inline void BatchDelCardItemRequest::set_card_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  card_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:micromsg.BatchDelCardItemRequest.card_ids)
}
inline void BatchDelCardItemRequest::set_card_ids(int index, const char* value, size_t size) {
  card_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:micromsg.BatchDelCardItemRequest.card_ids)
}
inline ::std::string* BatchDelCardItemRequest::add_card_ids() {
  // @@protoc_insertion_point(field_add_mutable:micromsg.BatchDelCardItemRequest.card_ids)
  return card_ids_.Add();
}
inline void BatchDelCardItemRequest::add_card_ids(const ::std::string& value) {
  card_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:micromsg.BatchDelCardItemRequest.card_ids)
}
#if LANG_CXX11
inline void BatchDelCardItemRequest::add_card_ids(::std::string&& value) {
  card_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:micromsg.BatchDelCardItemRequest.card_ids)
}
#endif
inline void BatchDelCardItemRequest::add_card_ids(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  card_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:micromsg.BatchDelCardItemRequest.card_ids)
}
inline void BatchDelCardItemRequest::add_card_ids(const char* value, size_t size) {
  card_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:micromsg.BatchDelCardItemRequest.card_ids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BatchDelCardItemRequest::card_ids() const {
  // @@protoc_insertion_point(field_list:micromsg.BatchDelCardItemRequest.card_ids)
  return card_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BatchDelCardItemRequest::mutable_card_ids() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.BatchDelCardItemRequest.card_ids)
  return &card_ids_;
}

// -------------------------------------------------------------------

// BatchDelCardItemResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool BatchDelCardItemResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchDelCardItemResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchDelCardItemResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchDelCardItemResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& BatchDelCardItemResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.BatchDelCardItemResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* BatchDelCardItemResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.BatchDelCardItemResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* BatchDelCardItemResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.BatchDelCardItemResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void BatchDelCardItemResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.BatchDelCardItemResponse.BaseResponse)
}

// repeated string succ_card_ids = 2;
inline int BatchDelCardItemResponse::succ_card_ids_size() const {
  return succ_card_ids_.size();
}
inline void BatchDelCardItemResponse::clear_succ_card_ids() {
  succ_card_ids_.Clear();
}
inline const ::std::string& BatchDelCardItemResponse::succ_card_ids(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.BatchDelCardItemResponse.succ_card_ids)
  return succ_card_ids_.Get(index);
}
inline ::std::string* BatchDelCardItemResponse::mutable_succ_card_ids(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.BatchDelCardItemResponse.succ_card_ids)
  return succ_card_ids_.Mutable(index);
}
inline void BatchDelCardItemResponse::set_succ_card_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:micromsg.BatchDelCardItemResponse.succ_card_ids)
  succ_card_ids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void BatchDelCardItemResponse::set_succ_card_ids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:micromsg.BatchDelCardItemResponse.succ_card_ids)
  succ_card_ids_.Mutable(index)->assign(std::move(value));
}
#endif
inline void BatchDelCardItemResponse::set_succ_card_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  succ_card_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:micromsg.BatchDelCardItemResponse.succ_card_ids)
}
inline void BatchDelCardItemResponse::set_succ_card_ids(int index, const char* value, size_t size) {
  succ_card_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:micromsg.BatchDelCardItemResponse.succ_card_ids)
}
inline ::std::string* BatchDelCardItemResponse::add_succ_card_ids() {
  // @@protoc_insertion_point(field_add_mutable:micromsg.BatchDelCardItemResponse.succ_card_ids)
  return succ_card_ids_.Add();
}
inline void BatchDelCardItemResponse::add_succ_card_ids(const ::std::string& value) {
  succ_card_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:micromsg.BatchDelCardItemResponse.succ_card_ids)
}
#if LANG_CXX11
inline void BatchDelCardItemResponse::add_succ_card_ids(::std::string&& value) {
  succ_card_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:micromsg.BatchDelCardItemResponse.succ_card_ids)
}
#endif
inline void BatchDelCardItemResponse::add_succ_card_ids(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  succ_card_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:micromsg.BatchDelCardItemResponse.succ_card_ids)
}
inline void BatchDelCardItemResponse::add_succ_card_ids(const char* value, size_t size) {
  succ_card_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:micromsg.BatchDelCardItemResponse.succ_card_ids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BatchDelCardItemResponse::succ_card_ids() const {
  // @@protoc_insertion_point(field_list:micromsg.BatchDelCardItemResponse.succ_card_ids)
  return succ_card_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BatchDelCardItemResponse::mutable_succ_card_ids() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.BatchDelCardItemResponse.succ_card_ids)
  return &succ_card_ids_;
}

// -------------------------------------------------------------------

// BatchGetCardItemRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool BatchGetCardItemRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchGetCardItemRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchGetCardItemRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchGetCardItemRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& BatchGetCardItemRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.BatchGetCardItemRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* BatchGetCardItemRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.BatchGetCardItemRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* BatchGetCardItemRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.BatchGetCardItemRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void BatchGetCardItemRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.BatchGetCardItemRequest.BaseRequest)
}

// repeated string card_ids = 2;
inline int BatchGetCardItemRequest::card_ids_size() const {
  return card_ids_.size();
}
inline void BatchGetCardItemRequest::clear_card_ids() {
  card_ids_.Clear();
}
inline const ::std::string& BatchGetCardItemRequest::card_ids(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.BatchGetCardItemRequest.card_ids)
  return card_ids_.Get(index);
}
inline ::std::string* BatchGetCardItemRequest::mutable_card_ids(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.BatchGetCardItemRequest.card_ids)
  return card_ids_.Mutable(index);
}
inline void BatchGetCardItemRequest::set_card_ids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:micromsg.BatchGetCardItemRequest.card_ids)
  card_ids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void BatchGetCardItemRequest::set_card_ids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:micromsg.BatchGetCardItemRequest.card_ids)
  card_ids_.Mutable(index)->assign(std::move(value));
}
#endif
inline void BatchGetCardItemRequest::set_card_ids(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  card_ids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:micromsg.BatchGetCardItemRequest.card_ids)
}
inline void BatchGetCardItemRequest::set_card_ids(int index, const char* value, size_t size) {
  card_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:micromsg.BatchGetCardItemRequest.card_ids)
}
inline ::std::string* BatchGetCardItemRequest::add_card_ids() {
  // @@protoc_insertion_point(field_add_mutable:micromsg.BatchGetCardItemRequest.card_ids)
  return card_ids_.Add();
}
inline void BatchGetCardItemRequest::add_card_ids(const ::std::string& value) {
  card_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:micromsg.BatchGetCardItemRequest.card_ids)
}
#if LANG_CXX11
inline void BatchGetCardItemRequest::add_card_ids(::std::string&& value) {
  card_ids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:micromsg.BatchGetCardItemRequest.card_ids)
}
#endif
inline void BatchGetCardItemRequest::add_card_ids(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  card_ids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:micromsg.BatchGetCardItemRequest.card_ids)
}
inline void BatchGetCardItemRequest::add_card_ids(const char* value, size_t size) {
  card_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:micromsg.BatchGetCardItemRequest.card_ids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BatchGetCardItemRequest::card_ids() const {
  // @@protoc_insertion_point(field_list:micromsg.BatchGetCardItemRequest.card_ids)
  return card_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BatchGetCardItemRequest::mutable_card_ids() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.BatchGetCardItemRequest.card_ids)
  return &card_ids_;
}

// -------------------------------------------------------------------

// BatchGetCardItemResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool BatchGetCardItemResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BatchGetCardItemResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BatchGetCardItemResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BatchGetCardItemResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& BatchGetCardItemResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.BatchGetCardItemResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* BatchGetCardItemResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.BatchGetCardItemResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* BatchGetCardItemResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.BatchGetCardItemResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void BatchGetCardItemResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.BatchGetCardItemResponse.BaseResponse)
}

// optional string json_ret = 2;
inline bool BatchGetCardItemResponse::has_json_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchGetCardItemResponse::set_has_json_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchGetCardItemResponse::clear_has_json_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchGetCardItemResponse::clear_json_ret() {
  json_ret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_json_ret();
}
inline const ::std::string& BatchGetCardItemResponse::json_ret() const {
  // @@protoc_insertion_point(field_get:micromsg.BatchGetCardItemResponse.json_ret)
  return json_ret_.GetNoArena();
}
inline void BatchGetCardItemResponse::set_json_ret(const ::std::string& value) {
  set_has_json_ret();
  json_ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BatchGetCardItemResponse.json_ret)
}
#if LANG_CXX11
inline void BatchGetCardItemResponse::set_json_ret(::std::string&& value) {
  set_has_json_ret();
  json_ret_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BatchGetCardItemResponse.json_ret)
}
#endif
inline void BatchGetCardItemResponse::set_json_ret(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_json_ret();
  json_ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BatchGetCardItemResponse.json_ret)
}
inline void BatchGetCardItemResponse::set_json_ret(const char* value, size_t size) {
  set_has_json_ret();
  json_ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BatchGetCardItemResponse.json_ret)
}
inline ::std::string* BatchGetCardItemResponse::mutable_json_ret() {
  set_has_json_ret();
  // @@protoc_insertion_point(field_mutable:micromsg.BatchGetCardItemResponse.json_ret)
  return json_ret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BatchGetCardItemResponse::release_json_ret() {
  // @@protoc_insertion_point(field_release:micromsg.BatchGetCardItemResponse.json_ret)
  clear_has_json_ret();
  return json_ret_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BatchGetCardItemResponse::set_allocated_json_ret(::std::string* json_ret) {
  if (json_ret != NULL) {
    set_has_json_ret();
  } else {
    clear_has_json_ret();
  }
  json_ret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), json_ret);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BatchGetCardItemResponse.json_ret)
}

// -------------------------------------------------------------------

// CardSyncRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool CardSyncRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CardSyncRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CardSyncRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CardSyncRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& CardSyncRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.CardSyncRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* CardSyncRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.CardSyncRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* CardSyncRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.CardSyncRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void CardSyncRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.CardSyncRequest.BaseRequest)
}

// required uint32 Selector = 2;
inline bool CardSyncRequest::has_selector() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CardSyncRequest::set_has_selector() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CardSyncRequest::clear_has_selector() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CardSyncRequest::clear_selector() {
  selector_ = 0u;
  clear_has_selector();
}
inline ::google::protobuf::uint32 CardSyncRequest::selector() const {
  // @@protoc_insertion_point(field_get:micromsg.CardSyncRequest.Selector)
  return selector_;
}
inline void CardSyncRequest::set_selector(::google::protobuf::uint32 value) {
  set_has_selector();
  selector_ = value;
  // @@protoc_insertion_point(field_set:micromsg.CardSyncRequest.Selector)
}

// required .micromsg.SKBuiltinBuffer_t KeyBuf = 3;
inline bool CardSyncRequest::has_keybuf() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CardSyncRequest::set_has_keybuf() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CardSyncRequest::clear_has_keybuf() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CardSyncRequest::clear_keybuf() {
  if (keybuf_ != NULL) keybuf_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_keybuf();
}
inline const ::micromsg::SKBuiltinBuffer_t& CardSyncRequest::keybuf() const {
  // @@protoc_insertion_point(field_get:micromsg.CardSyncRequest.KeyBuf)
  return keybuf_ != NULL ? *keybuf_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* CardSyncRequest::mutable_keybuf() {
  set_has_keybuf();
  if (keybuf_ == NULL) {
    keybuf_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.CardSyncRequest.KeyBuf)
  return keybuf_;
}
inline ::micromsg::SKBuiltinBuffer_t* CardSyncRequest::release_keybuf() {
  // @@protoc_insertion_point(field_release:micromsg.CardSyncRequest.KeyBuf)
  clear_has_keybuf();
  ::micromsg::SKBuiltinBuffer_t* temp = keybuf_;
  keybuf_ = NULL;
  return temp;
}
inline void CardSyncRequest::set_allocated_keybuf(::micromsg::SKBuiltinBuffer_t* keybuf) {
  delete keybuf_;
  keybuf_ = keybuf;
  if (keybuf) {
    set_has_keybuf();
  } else {
    clear_has_keybuf();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.CardSyncRequest.KeyBuf)
}

// -------------------------------------------------------------------

// CardSyncResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool CardSyncResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CardSyncResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CardSyncResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CardSyncResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& CardSyncResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.CardSyncResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* CardSyncResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.CardSyncResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* CardSyncResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.CardSyncResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void CardSyncResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.CardSyncResponse.BaseResponse)
}

// required .micromsg.CmdList CmdList = 2;
inline bool CardSyncResponse::has_cmdlist() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CardSyncResponse::set_has_cmdlist() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CardSyncResponse::clear_has_cmdlist() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CardSyncResponse::clear_cmdlist() {
  if (cmdlist_ != NULL) cmdlist_->::micromsg::CmdList::Clear();
  clear_has_cmdlist();
}
inline const ::micromsg::CmdList& CardSyncResponse::cmdlist() const {
  // @@protoc_insertion_point(field_get:micromsg.CardSyncResponse.CmdList)
  return cmdlist_ != NULL ? *cmdlist_
                         : *::micromsg::CmdList::internal_default_instance();
}
inline ::micromsg::CmdList* CardSyncResponse::mutable_cmdlist() {
  set_has_cmdlist();
  if (cmdlist_ == NULL) {
    cmdlist_ = new ::micromsg::CmdList;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.CardSyncResponse.CmdList)
  return cmdlist_;
}
inline ::micromsg::CmdList* CardSyncResponse::release_cmdlist() {
  // @@protoc_insertion_point(field_release:micromsg.CardSyncResponse.CmdList)
  clear_has_cmdlist();
  ::micromsg::CmdList* temp = cmdlist_;
  cmdlist_ = NULL;
  return temp;
}
inline void CardSyncResponse::set_allocated_cmdlist(::micromsg::CmdList* cmdlist) {
  delete cmdlist_;
  cmdlist_ = cmdlist;
  if (cmdlist) {
    set_has_cmdlist();
  } else {
    clear_has_cmdlist();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.CardSyncResponse.CmdList)
}

// required .micromsg.SKBuiltinBuffer_t KeyBuf = 3;
inline bool CardSyncResponse::has_keybuf() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CardSyncResponse::set_has_keybuf() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CardSyncResponse::clear_has_keybuf() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CardSyncResponse::clear_keybuf() {
  if (keybuf_ != NULL) keybuf_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_keybuf();
}
inline const ::micromsg::SKBuiltinBuffer_t& CardSyncResponse::keybuf() const {
  // @@protoc_insertion_point(field_get:micromsg.CardSyncResponse.KeyBuf)
  return keybuf_ != NULL ? *keybuf_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* CardSyncResponse::mutable_keybuf() {
  set_has_keybuf();
  if (keybuf_ == NULL) {
    keybuf_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.CardSyncResponse.KeyBuf)
  return keybuf_;
}
inline ::micromsg::SKBuiltinBuffer_t* CardSyncResponse::release_keybuf() {
  // @@protoc_insertion_point(field_release:micromsg.CardSyncResponse.KeyBuf)
  clear_has_keybuf();
  ::micromsg::SKBuiltinBuffer_t* temp = keybuf_;
  keybuf_ = NULL;
  return temp;
}
inline void CardSyncResponse::set_allocated_keybuf(::micromsg::SKBuiltinBuffer_t* keybuf) {
  delete keybuf_;
  keybuf_ = keybuf;
  if (keybuf) {
    set_has_keybuf();
  } else {
    clear_has_keybuf();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.CardSyncResponse.KeyBuf)
}

// required uint32 ContinueFlag = 4;
inline bool CardSyncResponse::has_continueflag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CardSyncResponse::set_has_continueflag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CardSyncResponse::clear_has_continueflag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CardSyncResponse::clear_continueflag() {
  continueflag_ = 0u;
  clear_has_continueflag();
}
inline ::google::protobuf::uint32 CardSyncResponse::continueflag() const {
  // @@protoc_insertion_point(field_get:micromsg.CardSyncResponse.ContinueFlag)
  return continueflag_;
}
inline void CardSyncResponse::set_continueflag(::google::protobuf::uint32 value) {
  set_has_continueflag();
  continueflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.CardSyncResponse.ContinueFlag)
}

// -------------------------------------------------------------------

// CardShopLBSRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool CardShopLBSRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CardShopLBSRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CardShopLBSRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CardShopLBSRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& CardShopLBSRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.CardShopLBSRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* CardShopLBSRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.CardShopLBSRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* CardShopLBSRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.CardShopLBSRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void CardShopLBSRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.CardShopLBSRequest.BaseRequest)
}

// optional string card_tp_id = 2;
inline bool CardShopLBSRequest::has_card_tp_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CardShopLBSRequest::set_has_card_tp_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CardShopLBSRequest::clear_has_card_tp_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CardShopLBSRequest::clear_card_tp_id() {
  card_tp_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_card_tp_id();
}
inline const ::std::string& CardShopLBSRequest::card_tp_id() const {
  // @@protoc_insertion_point(field_get:micromsg.CardShopLBSRequest.card_tp_id)
  return card_tp_id_.GetNoArena();
}
inline void CardShopLBSRequest::set_card_tp_id(const ::std::string& value) {
  set_has_card_tp_id();
  card_tp_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CardShopLBSRequest.card_tp_id)
}
#if LANG_CXX11
inline void CardShopLBSRequest::set_card_tp_id(::std::string&& value) {
  set_has_card_tp_id();
  card_tp_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CardShopLBSRequest.card_tp_id)
}
#endif
inline void CardShopLBSRequest::set_card_tp_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_card_tp_id();
  card_tp_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CardShopLBSRequest.card_tp_id)
}
inline void CardShopLBSRequest::set_card_tp_id(const char* value, size_t size) {
  set_has_card_tp_id();
  card_tp_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CardShopLBSRequest.card_tp_id)
}
inline ::std::string* CardShopLBSRequest::mutable_card_tp_id() {
  set_has_card_tp_id();
  // @@protoc_insertion_point(field_mutable:micromsg.CardShopLBSRequest.card_tp_id)
  return card_tp_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CardShopLBSRequest::release_card_tp_id() {
  // @@protoc_insertion_point(field_release:micromsg.CardShopLBSRequest.card_tp_id)
  clear_has_card_tp_id();
  return card_tp_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CardShopLBSRequest::set_allocated_card_tp_id(::std::string* card_tp_id) {
  if (card_tp_id != NULL) {
    set_has_card_tp_id();
  } else {
    clear_has_card_tp_id();
  }
  card_tp_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), card_tp_id);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CardShopLBSRequest.card_tp_id)
}

// required float longitude = 3;
inline bool CardShopLBSRequest::has_longitude() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CardShopLBSRequest::set_has_longitude() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CardShopLBSRequest::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CardShopLBSRequest::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline float CardShopLBSRequest::longitude() const {
  // @@protoc_insertion_point(field_get:micromsg.CardShopLBSRequest.longitude)
  return longitude_;
}
inline void CardShopLBSRequest::set_longitude(float value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.CardShopLBSRequest.longitude)
}

// required float latitude = 4;
inline bool CardShopLBSRequest::has_latitude() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CardShopLBSRequest::set_has_latitude() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CardShopLBSRequest::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CardShopLBSRequest::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline float CardShopLBSRequest::latitude() const {
  // @@protoc_insertion_point(field_get:micromsg.CardShopLBSRequest.latitude)
  return latitude_;
}
inline void CardShopLBSRequest::set_latitude(float value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.CardShopLBSRequest.latitude)
}

// -------------------------------------------------------------------

// CardShopLBSResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool CardShopLBSResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CardShopLBSResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CardShopLBSResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CardShopLBSResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& CardShopLBSResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.CardShopLBSResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* CardShopLBSResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.CardShopLBSResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* CardShopLBSResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.CardShopLBSResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void CardShopLBSResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.CardShopLBSResponse.BaseResponse)
}

// optional string json_ret = 2;
inline bool CardShopLBSResponse::has_json_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CardShopLBSResponse::set_has_json_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CardShopLBSResponse::clear_has_json_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CardShopLBSResponse::clear_json_ret() {
  json_ret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_json_ret();
}
inline const ::std::string& CardShopLBSResponse::json_ret() const {
  // @@protoc_insertion_point(field_get:micromsg.CardShopLBSResponse.json_ret)
  return json_ret_.GetNoArena();
}
inline void CardShopLBSResponse::set_json_ret(const ::std::string& value) {
  set_has_json_ret();
  json_ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CardShopLBSResponse.json_ret)
}
#if LANG_CXX11
inline void CardShopLBSResponse::set_json_ret(::std::string&& value) {
  set_has_json_ret();
  json_ret_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CardShopLBSResponse.json_ret)
}
#endif
inline void CardShopLBSResponse::set_json_ret(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_json_ret();
  json_ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CardShopLBSResponse.json_ret)
}
inline void CardShopLBSResponse::set_json_ret(const char* value, size_t size) {
  set_has_json_ret();
  json_ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CardShopLBSResponse.json_ret)
}
inline ::std::string* CardShopLBSResponse::mutable_json_ret() {
  set_has_json_ret();
  // @@protoc_insertion_point(field_mutable:micromsg.CardShopLBSResponse.json_ret)
  return json_ret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CardShopLBSResponse::release_json_ret() {
  // @@protoc_insertion_point(field_release:micromsg.CardShopLBSResponse.json_ret)
  clear_has_json_ret();
  return json_ret_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CardShopLBSResponse::set_allocated_json_ret(::std::string* json_ret) {
  if (json_ret != NULL) {
    set_has_json_ret();
  } else {
    clear_has_json_ret();
  }
  json_ret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), json_ret);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CardShopLBSResponse.json_ret)
}

// -------------------------------------------------------------------

// GetCardSerialRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetCardSerialRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetCardSerialRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetCardSerialRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetCardSerialRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetCardSerialRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCardSerialRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetCardSerialRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetCardSerialRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetCardSerialRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetCardSerialRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetCardSerialRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetCardSerialRequest.BaseRequest)
}

// required string card_id = 2;
inline bool GetCardSerialRequest::has_card_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetCardSerialRequest::set_has_card_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetCardSerialRequest::clear_has_card_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetCardSerialRequest::clear_card_id() {
  card_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_card_id();
}
inline const ::std::string& GetCardSerialRequest::card_id() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCardSerialRequest.card_id)
  return card_id_.GetNoArena();
}
inline void GetCardSerialRequest::set_card_id(const ::std::string& value) {
  set_has_card_id();
  card_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetCardSerialRequest.card_id)
}
#if LANG_CXX11
inline void GetCardSerialRequest::set_card_id(::std::string&& value) {
  set_has_card_id();
  card_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetCardSerialRequest.card_id)
}
#endif
inline void GetCardSerialRequest::set_card_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_card_id();
  card_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetCardSerialRequest.card_id)
}
inline void GetCardSerialRequest::set_card_id(const char* value, size_t size) {
  set_has_card_id();
  card_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetCardSerialRequest.card_id)
}
inline ::std::string* GetCardSerialRequest::mutable_card_id() {
  set_has_card_id();
  // @@protoc_insertion_point(field_mutable:micromsg.GetCardSerialRequest.card_id)
  return card_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetCardSerialRequest::release_card_id() {
  // @@protoc_insertion_point(field_release:micromsg.GetCardSerialRequest.card_id)
  clear_has_card_id();
  return card_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCardSerialRequest::set_allocated_card_id(::std::string* card_id) {
  if (card_id != NULL) {
    set_has_card_id();
  } else {
    clear_has_card_id();
  }
  card_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), card_id);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetCardSerialRequest.card_id)
}

// -------------------------------------------------------------------

// GetCardSerialResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetCardSerialResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetCardSerialResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetCardSerialResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetCardSerialResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetCardSerialResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCardSerialResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetCardSerialResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetCardSerialResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetCardSerialResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetCardSerialResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetCardSerialResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetCardSerialResponse.BaseResponse)
}

// optional string serial_number = 2;
inline bool GetCardSerialResponse::has_serial_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetCardSerialResponse::set_has_serial_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetCardSerialResponse::clear_has_serial_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetCardSerialResponse::clear_serial_number() {
  serial_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_serial_number();
}
inline const ::std::string& GetCardSerialResponse::serial_number() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCardSerialResponse.serial_number)
  return serial_number_.GetNoArena();
}
inline void GetCardSerialResponse::set_serial_number(const ::std::string& value) {
  set_has_serial_number();
  serial_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetCardSerialResponse.serial_number)
}
#if LANG_CXX11
inline void GetCardSerialResponse::set_serial_number(::std::string&& value) {
  set_has_serial_number();
  serial_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetCardSerialResponse.serial_number)
}
#endif
inline void GetCardSerialResponse::set_serial_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_serial_number();
  serial_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetCardSerialResponse.serial_number)
}
inline void GetCardSerialResponse::set_serial_number(const char* value, size_t size) {
  set_has_serial_number();
  serial_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetCardSerialResponse.serial_number)
}
inline ::std::string* GetCardSerialResponse::mutable_serial_number() {
  set_has_serial_number();
  // @@protoc_insertion_point(field_mutable:micromsg.GetCardSerialResponse.serial_number)
  return serial_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetCardSerialResponse::release_serial_number() {
  // @@protoc_insertion_point(field_release:micromsg.GetCardSerialResponse.serial_number)
  clear_has_serial_number();
  return serial_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCardSerialResponse::set_allocated_serial_number(::std::string* serial_number) {
  if (serial_number != NULL) {
    set_has_serial_number();
  } else {
    clear_has_serial_number();
  }
  serial_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serial_number);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetCardSerialResponse.serial_number)
}

// -------------------------------------------------------------------

// GetCardItemInfoRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetCardItemInfoRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetCardItemInfoRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetCardItemInfoRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetCardItemInfoRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetCardItemInfoRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCardItemInfoRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetCardItemInfoRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetCardItemInfoRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetCardItemInfoRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetCardItemInfoRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetCardItemInfoRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetCardItemInfoRequest.BaseRequest)
}

// required string card_id = 2;
inline bool GetCardItemInfoRequest::has_card_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetCardItemInfoRequest::set_has_card_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetCardItemInfoRequest::clear_has_card_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetCardItemInfoRequest::clear_card_id() {
  card_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_card_id();
}
inline const ::std::string& GetCardItemInfoRequest::card_id() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCardItemInfoRequest.card_id)
  return card_id_.GetNoArena();
}
inline void GetCardItemInfoRequest::set_card_id(const ::std::string& value) {
  set_has_card_id();
  card_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetCardItemInfoRequest.card_id)
}
#if LANG_CXX11
inline void GetCardItemInfoRequest::set_card_id(::std::string&& value) {
  set_has_card_id();
  card_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetCardItemInfoRequest.card_id)
}
#endif
inline void GetCardItemInfoRequest::set_card_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_card_id();
  card_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetCardItemInfoRequest.card_id)
}
inline void GetCardItemInfoRequest::set_card_id(const char* value, size_t size) {
  set_has_card_id();
  card_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetCardItemInfoRequest.card_id)
}
inline ::std::string* GetCardItemInfoRequest::mutable_card_id() {
  set_has_card_id();
  // @@protoc_insertion_point(field_mutable:micromsg.GetCardItemInfoRequest.card_id)
  return card_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetCardItemInfoRequest::release_card_id() {
  // @@protoc_insertion_point(field_release:micromsg.GetCardItemInfoRequest.card_id)
  clear_has_card_id();
  return card_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCardItemInfoRequest::set_allocated_card_id(::std::string* card_id) {
  if (card_id != NULL) {
    set_has_card_id();
  } else {
    clear_has_card_id();
  }
  card_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), card_id);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetCardItemInfoRequest.card_id)
}

// required uint32 from_scene = 3;
inline bool GetCardItemInfoRequest::has_from_scene() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GetCardItemInfoRequest::set_has_from_scene() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GetCardItemInfoRequest::clear_has_from_scene() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GetCardItemInfoRequest::clear_from_scene() {
  from_scene_ = 0u;
  clear_has_from_scene();
}
inline ::google::protobuf::uint32 GetCardItemInfoRequest::from_scene() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCardItemInfoRequest.from_scene)
  return from_scene_;
}
inline void GetCardItemInfoRequest::set_from_scene(::google::protobuf::uint32 value) {
  set_has_from_scene();
  from_scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetCardItemInfoRequest.from_scene)
}

// optional string from_username = 4;
inline bool GetCardItemInfoRequest::has_from_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetCardItemInfoRequest::set_has_from_username() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetCardItemInfoRequest::clear_has_from_username() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetCardItemInfoRequest::clear_from_username() {
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_from_username();
}
inline const ::std::string& GetCardItemInfoRequest::from_username() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCardItemInfoRequest.from_username)
  return from_username_.GetNoArena();
}
inline void GetCardItemInfoRequest::set_from_username(const ::std::string& value) {
  set_has_from_username();
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetCardItemInfoRequest.from_username)
}
#if LANG_CXX11
inline void GetCardItemInfoRequest::set_from_username(::std::string&& value) {
  set_has_from_username();
  from_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetCardItemInfoRequest.from_username)
}
#endif
inline void GetCardItemInfoRequest::set_from_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_from_username();
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetCardItemInfoRequest.from_username)
}
inline void GetCardItemInfoRequest::set_from_username(const char* value, size_t size) {
  set_has_from_username();
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetCardItemInfoRequest.from_username)
}
inline ::std::string* GetCardItemInfoRequest::mutable_from_username() {
  set_has_from_username();
  // @@protoc_insertion_point(field_mutable:micromsg.GetCardItemInfoRequest.from_username)
  return from_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetCardItemInfoRequest::release_from_username() {
  // @@protoc_insertion_point(field_release:micromsg.GetCardItemInfoRequest.from_username)
  clear_has_from_username();
  return from_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCardItemInfoRequest::set_allocated_from_username(::std::string* from_username) {
  if (from_username != NULL) {
    set_has_from_username();
  } else {
    clear_has_from_username();
  }
  from_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetCardItemInfoRequest.from_username)
}

// optional string card_ext = 5;
inline bool GetCardItemInfoRequest::has_card_ext() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetCardItemInfoRequest::set_has_card_ext() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetCardItemInfoRequest::clear_has_card_ext() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetCardItemInfoRequest::clear_card_ext() {
  card_ext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_card_ext();
}
inline const ::std::string& GetCardItemInfoRequest::card_ext() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCardItemInfoRequest.card_ext)
  return card_ext_.GetNoArena();
}
inline void GetCardItemInfoRequest::set_card_ext(const ::std::string& value) {
  set_has_card_ext();
  card_ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetCardItemInfoRequest.card_ext)
}
#if LANG_CXX11
inline void GetCardItemInfoRequest::set_card_ext(::std::string&& value) {
  set_has_card_ext();
  card_ext_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetCardItemInfoRequest.card_ext)
}
#endif
inline void GetCardItemInfoRequest::set_card_ext(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_card_ext();
  card_ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetCardItemInfoRequest.card_ext)
}
inline void GetCardItemInfoRequest::set_card_ext(const char* value, size_t size) {
  set_has_card_ext();
  card_ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetCardItemInfoRequest.card_ext)
}
inline ::std::string* GetCardItemInfoRequest::mutable_card_ext() {
  set_has_card_ext();
  // @@protoc_insertion_point(field_mutable:micromsg.GetCardItemInfoRequest.card_ext)
  return card_ext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetCardItemInfoRequest::release_card_ext() {
  // @@protoc_insertion_point(field_release:micromsg.GetCardItemInfoRequest.card_ext)
  clear_has_card_ext();
  return card_ext_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCardItemInfoRequest::set_allocated_card_ext(::std::string* card_ext) {
  if (card_ext != NULL) {
    set_has_card_ext();
  } else {
    clear_has_card_ext();
  }
  card_ext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), card_ext);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetCardItemInfoRequest.card_ext)
}

// optional string js_checkinfo_url = 6;
inline bool GetCardItemInfoRequest::has_js_checkinfo_url() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetCardItemInfoRequest::set_has_js_checkinfo_url() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetCardItemInfoRequest::clear_has_js_checkinfo_url() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetCardItemInfoRequest::clear_js_checkinfo_url() {
  js_checkinfo_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_js_checkinfo_url();
}
inline const ::std::string& GetCardItemInfoRequest::js_checkinfo_url() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCardItemInfoRequest.js_checkinfo_url)
  return js_checkinfo_url_.GetNoArena();
}
inline void GetCardItemInfoRequest::set_js_checkinfo_url(const ::std::string& value) {
  set_has_js_checkinfo_url();
  js_checkinfo_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetCardItemInfoRequest.js_checkinfo_url)
}
#if LANG_CXX11
inline void GetCardItemInfoRequest::set_js_checkinfo_url(::std::string&& value) {
  set_has_js_checkinfo_url();
  js_checkinfo_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetCardItemInfoRequest.js_checkinfo_url)
}
#endif
inline void GetCardItemInfoRequest::set_js_checkinfo_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_js_checkinfo_url();
  js_checkinfo_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetCardItemInfoRequest.js_checkinfo_url)
}
inline void GetCardItemInfoRequest::set_js_checkinfo_url(const char* value, size_t size) {
  set_has_js_checkinfo_url();
  js_checkinfo_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetCardItemInfoRequest.js_checkinfo_url)
}
inline ::std::string* GetCardItemInfoRequest::mutable_js_checkinfo_url() {
  set_has_js_checkinfo_url();
  // @@protoc_insertion_point(field_mutable:micromsg.GetCardItemInfoRequest.js_checkinfo_url)
  return js_checkinfo_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetCardItemInfoRequest::release_js_checkinfo_url() {
  // @@protoc_insertion_point(field_release:micromsg.GetCardItemInfoRequest.js_checkinfo_url)
  clear_has_js_checkinfo_url();
  return js_checkinfo_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCardItemInfoRequest::set_allocated_js_checkinfo_url(::std::string* js_checkinfo_url) {
  if (js_checkinfo_url != NULL) {
    set_has_js_checkinfo_url();
  } else {
    clear_has_js_checkinfo_url();
  }
  js_checkinfo_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), js_checkinfo_url);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetCardItemInfoRequest.js_checkinfo_url)
}

// optional string js_checkinfo_session_username = 7;
inline bool GetCardItemInfoRequest::has_js_checkinfo_session_username() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetCardItemInfoRequest::set_has_js_checkinfo_session_username() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetCardItemInfoRequest::clear_has_js_checkinfo_session_username() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetCardItemInfoRequest::clear_js_checkinfo_session_username() {
  js_checkinfo_session_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_js_checkinfo_session_username();
}
inline const ::std::string& GetCardItemInfoRequest::js_checkinfo_session_username() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCardItemInfoRequest.js_checkinfo_session_username)
  return js_checkinfo_session_username_.GetNoArena();
}
inline void GetCardItemInfoRequest::set_js_checkinfo_session_username(const ::std::string& value) {
  set_has_js_checkinfo_session_username();
  js_checkinfo_session_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetCardItemInfoRequest.js_checkinfo_session_username)
}
#if LANG_CXX11
inline void GetCardItemInfoRequest::set_js_checkinfo_session_username(::std::string&& value) {
  set_has_js_checkinfo_session_username();
  js_checkinfo_session_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetCardItemInfoRequest.js_checkinfo_session_username)
}
#endif
inline void GetCardItemInfoRequest::set_js_checkinfo_session_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_js_checkinfo_session_username();
  js_checkinfo_session_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetCardItemInfoRequest.js_checkinfo_session_username)
}
inline void GetCardItemInfoRequest::set_js_checkinfo_session_username(const char* value, size_t size) {
  set_has_js_checkinfo_session_username();
  js_checkinfo_session_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetCardItemInfoRequest.js_checkinfo_session_username)
}
inline ::std::string* GetCardItemInfoRequest::mutable_js_checkinfo_session_username() {
  set_has_js_checkinfo_session_username();
  // @@protoc_insertion_point(field_mutable:micromsg.GetCardItemInfoRequest.js_checkinfo_session_username)
  return js_checkinfo_session_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetCardItemInfoRequest::release_js_checkinfo_session_username() {
  // @@protoc_insertion_point(field_release:micromsg.GetCardItemInfoRequest.js_checkinfo_session_username)
  clear_has_js_checkinfo_session_username();
  return js_checkinfo_session_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCardItemInfoRequest::set_allocated_js_checkinfo_session_username(::std::string* js_checkinfo_session_username) {
  if (js_checkinfo_session_username != NULL) {
    set_has_js_checkinfo_session_username();
  } else {
    clear_has_js_checkinfo_session_username();
  }
  js_checkinfo_session_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), js_checkinfo_session_username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetCardItemInfoRequest.js_checkinfo_session_username)
}

// -------------------------------------------------------------------

// GetCardItemInfoResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetCardItemInfoResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetCardItemInfoResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetCardItemInfoResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetCardItemInfoResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetCardItemInfoResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCardItemInfoResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetCardItemInfoResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetCardItemInfoResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetCardItemInfoResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetCardItemInfoResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetCardItemInfoResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetCardItemInfoResponse.BaseResponse)
}

// optional string json_ret = 2;
inline bool GetCardItemInfoResponse::has_json_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetCardItemInfoResponse::set_has_json_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetCardItemInfoResponse::clear_has_json_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetCardItemInfoResponse::clear_json_ret() {
  json_ret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_json_ret();
}
inline const ::std::string& GetCardItemInfoResponse::json_ret() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCardItemInfoResponse.json_ret)
  return json_ret_.GetNoArena();
}
inline void GetCardItemInfoResponse::set_json_ret(const ::std::string& value) {
  set_has_json_ret();
  json_ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetCardItemInfoResponse.json_ret)
}
#if LANG_CXX11
inline void GetCardItemInfoResponse::set_json_ret(::std::string&& value) {
  set_has_json_ret();
  json_ret_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetCardItemInfoResponse.json_ret)
}
#endif
inline void GetCardItemInfoResponse::set_json_ret(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_json_ret();
  json_ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetCardItemInfoResponse.json_ret)
}
inline void GetCardItemInfoResponse::set_json_ret(const char* value, size_t size) {
  set_has_json_ret();
  json_ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetCardItemInfoResponse.json_ret)
}
inline ::std::string* GetCardItemInfoResponse::mutable_json_ret() {
  set_has_json_ret();
  // @@protoc_insertion_point(field_mutable:micromsg.GetCardItemInfoResponse.json_ret)
  return json_ret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetCardItemInfoResponse::release_json_ret() {
  // @@protoc_insertion_point(field_release:micromsg.GetCardItemInfoResponse.json_ret)
  clear_has_json_ret();
  return json_ret_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCardItemInfoResponse::set_allocated_json_ret(::std::string* json_ret) {
  if (json_ret != NULL) {
    set_has_json_ret();
  } else {
    clear_has_json_ret();
  }
  json_ret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), json_ret);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetCardItemInfoResponse.json_ret)
}

// -------------------------------------------------------------------

// GiftCardItemRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GiftCardItemRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GiftCardItemRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GiftCardItemRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GiftCardItemRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GiftCardItemRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GiftCardItemRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GiftCardItemRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GiftCardItemRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GiftCardItemRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GiftCardItemRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GiftCardItemRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GiftCardItemRequest.BaseRequest)
}

// required string card_id = 2;
inline bool GiftCardItemRequest::has_card_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GiftCardItemRequest::set_has_card_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GiftCardItemRequest::clear_has_card_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GiftCardItemRequest::clear_card_id() {
  card_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_card_id();
}
inline const ::std::string& GiftCardItemRequest::card_id() const {
  // @@protoc_insertion_point(field_get:micromsg.GiftCardItemRequest.card_id)
  return card_id_.GetNoArena();
}
inline void GiftCardItemRequest::set_card_id(const ::std::string& value) {
  set_has_card_id();
  card_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GiftCardItemRequest.card_id)
}
#if LANG_CXX11
inline void GiftCardItemRequest::set_card_id(::std::string&& value) {
  set_has_card_id();
  card_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GiftCardItemRequest.card_id)
}
#endif
inline void GiftCardItemRequest::set_card_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_card_id();
  card_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GiftCardItemRequest.card_id)
}
inline void GiftCardItemRequest::set_card_id(const char* value, size_t size) {
  set_has_card_id();
  card_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GiftCardItemRequest.card_id)
}
inline ::std::string* GiftCardItemRequest::mutable_card_id() {
  set_has_card_id();
  // @@protoc_insertion_point(field_mutable:micromsg.GiftCardItemRequest.card_id)
  return card_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GiftCardItemRequest::release_card_id() {
  // @@protoc_insertion_point(field_release:micromsg.GiftCardItemRequest.card_id)
  clear_has_card_id();
  return card_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GiftCardItemRequest::set_allocated_card_id(::std::string* card_id) {
  if (card_id != NULL) {
    set_has_card_id();
  } else {
    clear_has_card_id();
  }
  card_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), card_id);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GiftCardItemRequest.card_id)
}

// required string to_username = 3;
inline bool GiftCardItemRequest::has_to_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GiftCardItemRequest::set_has_to_username() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GiftCardItemRequest::clear_has_to_username() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GiftCardItemRequest::clear_to_username() {
  to_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_to_username();
}
inline const ::std::string& GiftCardItemRequest::to_username() const {
  // @@protoc_insertion_point(field_get:micromsg.GiftCardItemRequest.to_username)
  return to_username_.GetNoArena();
}
inline void GiftCardItemRequest::set_to_username(const ::std::string& value) {
  set_has_to_username();
  to_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GiftCardItemRequest.to_username)
}
#if LANG_CXX11
inline void GiftCardItemRequest::set_to_username(::std::string&& value) {
  set_has_to_username();
  to_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GiftCardItemRequest.to_username)
}
#endif
inline void GiftCardItemRequest::set_to_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_to_username();
  to_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GiftCardItemRequest.to_username)
}
inline void GiftCardItemRequest::set_to_username(const char* value, size_t size) {
  set_has_to_username();
  to_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GiftCardItemRequest.to_username)
}
inline ::std::string* GiftCardItemRequest::mutable_to_username() {
  set_has_to_username();
  // @@protoc_insertion_point(field_mutable:micromsg.GiftCardItemRequest.to_username)
  return to_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GiftCardItemRequest::release_to_username() {
  // @@protoc_insertion_point(field_release:micromsg.GiftCardItemRequest.to_username)
  clear_has_to_username();
  return to_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GiftCardItemRequest::set_allocated_to_username(::std::string* to_username) {
  if (to_username != NULL) {
    set_has_to_username();
  } else {
    clear_has_to_username();
  }
  to_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to_username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GiftCardItemRequest.to_username)
}

// -------------------------------------------------------------------

// GiftCardItemResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GiftCardItemResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GiftCardItemResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GiftCardItemResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GiftCardItemResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GiftCardItemResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GiftCardItemResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GiftCardItemResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GiftCardItemResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GiftCardItemResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GiftCardItemResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GiftCardItemResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GiftCardItemResponse.BaseResponse)
}

// optional string card_ext = 2;
inline bool GiftCardItemResponse::has_card_ext() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GiftCardItemResponse::set_has_card_ext() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GiftCardItemResponse::clear_has_card_ext() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GiftCardItemResponse::clear_card_ext() {
  card_ext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_card_ext();
}
inline const ::std::string& GiftCardItemResponse::card_ext() const {
  // @@protoc_insertion_point(field_get:micromsg.GiftCardItemResponse.card_ext)
  return card_ext_.GetNoArena();
}
inline void GiftCardItemResponse::set_card_ext(const ::std::string& value) {
  set_has_card_ext();
  card_ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GiftCardItemResponse.card_ext)
}
#if LANG_CXX11
inline void GiftCardItemResponse::set_card_ext(::std::string&& value) {
  set_has_card_ext();
  card_ext_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GiftCardItemResponse.card_ext)
}
#endif
inline void GiftCardItemResponse::set_card_ext(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_card_ext();
  card_ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GiftCardItemResponse.card_ext)
}
inline void GiftCardItemResponse::set_card_ext(const char* value, size_t size) {
  set_has_card_ext();
  card_ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GiftCardItemResponse.card_ext)
}
inline ::std::string* GiftCardItemResponse::mutable_card_ext() {
  set_has_card_ext();
  // @@protoc_insertion_point(field_mutable:micromsg.GiftCardItemResponse.card_ext)
  return card_ext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GiftCardItemResponse::release_card_ext() {
  // @@protoc_insertion_point(field_release:micromsg.GiftCardItemResponse.card_ext)
  clear_has_card_ext();
  return card_ext_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GiftCardItemResponse::set_allocated_card_ext(::std::string* card_ext) {
  if (card_ext != NULL) {
    set_has_card_ext();
  } else {
    clear_has_card_ext();
  }
  card_ext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), card_ext);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GiftCardItemResponse.card_ext)
}

// optional int32 ret_code = 3;
inline bool GiftCardItemResponse::has_ret_code() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GiftCardItemResponse::set_has_ret_code() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GiftCardItemResponse::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GiftCardItemResponse::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::google::protobuf::int32 GiftCardItemResponse::ret_code() const {
  // @@protoc_insertion_point(field_get:micromsg.GiftCardItemResponse.ret_code)
  return ret_code_;
}
inline void GiftCardItemResponse::set_ret_code(::google::protobuf::int32 value) {
  set_has_ret_code();
  ret_code_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GiftCardItemResponse.ret_code)
}

// optional string ret_msg = 4;
inline bool GiftCardItemResponse::has_ret_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GiftCardItemResponse::set_has_ret_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GiftCardItemResponse::clear_has_ret_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GiftCardItemResponse::clear_ret_msg() {
  ret_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ret_msg();
}
inline const ::std::string& GiftCardItemResponse::ret_msg() const {
  // @@protoc_insertion_point(field_get:micromsg.GiftCardItemResponse.ret_msg)
  return ret_msg_.GetNoArena();
}
inline void GiftCardItemResponse::set_ret_msg(const ::std::string& value) {
  set_has_ret_msg();
  ret_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GiftCardItemResponse.ret_msg)
}
#if LANG_CXX11
inline void GiftCardItemResponse::set_ret_msg(::std::string&& value) {
  set_has_ret_msg();
  ret_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GiftCardItemResponse.ret_msg)
}
#endif
inline void GiftCardItemResponse::set_ret_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ret_msg();
  ret_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GiftCardItemResponse.ret_msg)
}
inline void GiftCardItemResponse::set_ret_msg(const char* value, size_t size) {
  set_has_ret_msg();
  ret_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GiftCardItemResponse.ret_msg)
}
inline ::std::string* GiftCardItemResponse::mutable_ret_msg() {
  set_has_ret_msg();
  // @@protoc_insertion_point(field_mutable:micromsg.GiftCardItemResponse.ret_msg)
  return ret_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GiftCardItemResponse::release_ret_msg() {
  // @@protoc_insertion_point(field_release:micromsg.GiftCardItemResponse.ret_msg)
  clear_has_ret_msg();
  return ret_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GiftCardItemResponse::set_allocated_ret_msg(::std::string* ret_msg) {
  if (ret_msg != NULL) {
    set_has_ret_msg();
  } else {
    clear_has_ret_msg();
  }
  ret_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ret_msg);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GiftCardItemResponse.ret_msg)
}

// -------------------------------------------------------------------

// AcceptCardItemRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool AcceptCardItemRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AcceptCardItemRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AcceptCardItemRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AcceptCardItemRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& AcceptCardItemRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.AcceptCardItemRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* AcceptCardItemRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.AcceptCardItemRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* AcceptCardItemRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.AcceptCardItemRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void AcceptCardItemRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.AcceptCardItemRequest.BaseRequest)
}

// optional string from_username = 2;
inline bool AcceptCardItemRequest::has_from_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AcceptCardItemRequest::set_has_from_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AcceptCardItemRequest::clear_has_from_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AcceptCardItemRequest::clear_from_username() {
  from_username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_from_username();
}
inline const ::std::string& AcceptCardItemRequest::from_username() const {
  // @@protoc_insertion_point(field_get:micromsg.AcceptCardItemRequest.from_username)
  return from_username_.GetNoArena();
}
inline void AcceptCardItemRequest::set_from_username(const ::std::string& value) {
  set_has_from_username();
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AcceptCardItemRequest.from_username)
}
#if LANG_CXX11
inline void AcceptCardItemRequest::set_from_username(::std::string&& value) {
  set_has_from_username();
  from_username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AcceptCardItemRequest.from_username)
}
#endif
inline void AcceptCardItemRequest::set_from_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_from_username();
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AcceptCardItemRequest.from_username)
}
inline void AcceptCardItemRequest::set_from_username(const char* value, size_t size) {
  set_has_from_username();
  from_username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AcceptCardItemRequest.from_username)
}
inline ::std::string* AcceptCardItemRequest::mutable_from_username() {
  set_has_from_username();
  // @@protoc_insertion_point(field_mutable:micromsg.AcceptCardItemRequest.from_username)
  return from_username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AcceptCardItemRequest::release_from_username() {
  // @@protoc_insertion_point(field_release:micromsg.AcceptCardItemRequest.from_username)
  clear_has_from_username();
  return from_username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AcceptCardItemRequest::set_allocated_from_username(::std::string* from_username) {
  if (from_username != NULL) {
    set_has_from_username();
  } else {
    clear_has_from_username();
  }
  from_username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AcceptCardItemRequest.from_username)
}

// required uint32 from_scene = 3;
inline bool AcceptCardItemRequest::has_from_scene() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AcceptCardItemRequest::set_has_from_scene() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AcceptCardItemRequest::clear_has_from_scene() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AcceptCardItemRequest::clear_from_scene() {
  from_scene_ = 0u;
  clear_has_from_scene();
}
inline ::google::protobuf::uint32 AcceptCardItemRequest::from_scene() const {
  // @@protoc_insertion_point(field_get:micromsg.AcceptCardItemRequest.from_scene)
  return from_scene_;
}
inline void AcceptCardItemRequest::set_from_scene(::google::protobuf::uint32 value) {
  set_has_from_scene();
  from_scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AcceptCardItemRequest.from_scene)
}

// required string card_id = 4;
inline bool AcceptCardItemRequest::has_card_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AcceptCardItemRequest::set_has_card_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AcceptCardItemRequest::clear_has_card_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AcceptCardItemRequest::clear_card_id() {
  card_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_card_id();
}
inline const ::std::string& AcceptCardItemRequest::card_id() const {
  // @@protoc_insertion_point(field_get:micromsg.AcceptCardItemRequest.card_id)
  return card_id_.GetNoArena();
}
inline void AcceptCardItemRequest::set_card_id(const ::std::string& value) {
  set_has_card_id();
  card_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AcceptCardItemRequest.card_id)
}
#if LANG_CXX11
inline void AcceptCardItemRequest::set_card_id(::std::string&& value) {
  set_has_card_id();
  card_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AcceptCardItemRequest.card_id)
}
#endif
inline void AcceptCardItemRequest::set_card_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_card_id();
  card_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AcceptCardItemRequest.card_id)
}
inline void AcceptCardItemRequest::set_card_id(const char* value, size_t size) {
  set_has_card_id();
  card_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AcceptCardItemRequest.card_id)
}
inline ::std::string* AcceptCardItemRequest::mutable_card_id() {
  set_has_card_id();
  // @@protoc_insertion_point(field_mutable:micromsg.AcceptCardItemRequest.card_id)
  return card_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AcceptCardItemRequest::release_card_id() {
  // @@protoc_insertion_point(field_release:micromsg.AcceptCardItemRequest.card_id)
  clear_has_card_id();
  return card_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AcceptCardItemRequest::set_allocated_card_id(::std::string* card_id) {
  if (card_id != NULL) {
    set_has_card_id();
  } else {
    clear_has_card_id();
  }
  card_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), card_id);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AcceptCardItemRequest.card_id)
}

// optional string card_ext = 5;
inline bool AcceptCardItemRequest::has_card_ext() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AcceptCardItemRequest::set_has_card_ext() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AcceptCardItemRequest::clear_has_card_ext() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AcceptCardItemRequest::clear_card_ext() {
  card_ext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_card_ext();
}
inline const ::std::string& AcceptCardItemRequest::card_ext() const {
  // @@protoc_insertion_point(field_get:micromsg.AcceptCardItemRequest.card_ext)
  return card_ext_.GetNoArena();
}
inline void AcceptCardItemRequest::set_card_ext(const ::std::string& value) {
  set_has_card_ext();
  card_ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AcceptCardItemRequest.card_ext)
}
#if LANG_CXX11
inline void AcceptCardItemRequest::set_card_ext(::std::string&& value) {
  set_has_card_ext();
  card_ext_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AcceptCardItemRequest.card_ext)
}
#endif
inline void AcceptCardItemRequest::set_card_ext(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_card_ext();
  card_ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AcceptCardItemRequest.card_ext)
}
inline void AcceptCardItemRequest::set_card_ext(const char* value, size_t size) {
  set_has_card_ext();
  card_ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AcceptCardItemRequest.card_ext)
}
inline ::std::string* AcceptCardItemRequest::mutable_card_ext() {
  set_has_card_ext();
  // @@protoc_insertion_point(field_mutable:micromsg.AcceptCardItemRequest.card_ext)
  return card_ext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AcceptCardItemRequest::release_card_ext() {
  // @@protoc_insertion_point(field_release:micromsg.AcceptCardItemRequest.card_ext)
  clear_has_card_ext();
  return card_ext_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AcceptCardItemRequest::set_allocated_card_ext(::std::string* card_ext) {
  if (card_ext != NULL) {
    set_has_card_ext();
  } else {
    clear_has_card_ext();
  }
  card_ext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), card_ext);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AcceptCardItemRequest.card_ext)
}

// -------------------------------------------------------------------

// AcceptCardItemResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool AcceptCardItemResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AcceptCardItemResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AcceptCardItemResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AcceptCardItemResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& AcceptCardItemResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.AcceptCardItemResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* AcceptCardItemResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.AcceptCardItemResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* AcceptCardItemResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.AcceptCardItemResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void AcceptCardItemResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.AcceptCardItemResponse.BaseResponse)
}

// optional string json_ret = 2;
inline bool AcceptCardItemResponse::has_json_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AcceptCardItemResponse::set_has_json_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AcceptCardItemResponse::clear_has_json_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AcceptCardItemResponse::clear_json_ret() {
  json_ret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_json_ret();
}
inline const ::std::string& AcceptCardItemResponse::json_ret() const {
  // @@protoc_insertion_point(field_get:micromsg.AcceptCardItemResponse.json_ret)
  return json_ret_.GetNoArena();
}
inline void AcceptCardItemResponse::set_json_ret(const ::std::string& value) {
  set_has_json_ret();
  json_ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AcceptCardItemResponse.json_ret)
}
#if LANG_CXX11
inline void AcceptCardItemResponse::set_json_ret(::std::string&& value) {
  set_has_json_ret();
  json_ret_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AcceptCardItemResponse.json_ret)
}
#endif
inline void AcceptCardItemResponse::set_json_ret(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_json_ret();
  json_ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AcceptCardItemResponse.json_ret)
}
inline void AcceptCardItemResponse::set_json_ret(const char* value, size_t size) {
  set_has_json_ret();
  json_ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AcceptCardItemResponse.json_ret)
}
inline ::std::string* AcceptCardItemResponse::mutable_json_ret() {
  set_has_json_ret();
  // @@protoc_insertion_point(field_mutable:micromsg.AcceptCardItemResponse.json_ret)
  return json_ret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AcceptCardItemResponse::release_json_ret() {
  // @@protoc_insertion_point(field_release:micromsg.AcceptCardItemResponse.json_ret)
  clear_has_json_ret();
  return json_ret_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AcceptCardItemResponse::set_allocated_json_ret(::std::string* json_ret) {
  if (json_ret != NULL) {
    set_has_json_ret();
  } else {
    clear_has_json_ret();
  }
  json_ret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), json_ret);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AcceptCardItemResponse.json_ret)
}

// optional int32 ret_code = 3;
inline bool AcceptCardItemResponse::has_ret_code() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AcceptCardItemResponse::set_has_ret_code() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AcceptCardItemResponse::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AcceptCardItemResponse::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::google::protobuf::int32 AcceptCardItemResponse::ret_code() const {
  // @@protoc_insertion_point(field_get:micromsg.AcceptCardItemResponse.ret_code)
  return ret_code_;
}
inline void AcceptCardItemResponse::set_ret_code(::google::protobuf::int32 value) {
  set_has_ret_code();
  ret_code_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AcceptCardItemResponse.ret_code)
}

// optional string ret_msg = 4;
inline bool AcceptCardItemResponse::has_ret_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AcceptCardItemResponse::set_has_ret_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AcceptCardItemResponse::clear_has_ret_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AcceptCardItemResponse::clear_ret_msg() {
  ret_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ret_msg();
}
inline const ::std::string& AcceptCardItemResponse::ret_msg() const {
  // @@protoc_insertion_point(field_get:micromsg.AcceptCardItemResponse.ret_msg)
  return ret_msg_.GetNoArena();
}
inline void AcceptCardItemResponse::set_ret_msg(const ::std::string& value) {
  set_has_ret_msg();
  ret_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AcceptCardItemResponse.ret_msg)
}
#if LANG_CXX11
inline void AcceptCardItemResponse::set_ret_msg(::std::string&& value) {
  set_has_ret_msg();
  ret_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AcceptCardItemResponse.ret_msg)
}
#endif
inline void AcceptCardItemResponse::set_ret_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ret_msg();
  ret_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AcceptCardItemResponse.ret_msg)
}
inline void AcceptCardItemResponse::set_ret_msg(const char* value, size_t size) {
  set_has_ret_msg();
  ret_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AcceptCardItemResponse.ret_msg)
}
inline ::std::string* AcceptCardItemResponse::mutable_ret_msg() {
  set_has_ret_msg();
  // @@protoc_insertion_point(field_mutable:micromsg.AcceptCardItemResponse.ret_msg)
  return ret_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AcceptCardItemResponse::release_ret_msg() {
  // @@protoc_insertion_point(field_release:micromsg.AcceptCardItemResponse.ret_msg)
  clear_has_ret_msg();
  return ret_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AcceptCardItemResponse::set_allocated_ret_msg(::std::string* ret_msg) {
  if (ret_msg != NULL) {
    set_has_ret_msg();
  } else {
    clear_has_ret_msg();
  }
  ret_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ret_msg);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AcceptCardItemResponse.ret_msg)
}

// -------------------------------------------------------------------

// GetCardCountRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetCardCountRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetCardCountRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetCardCountRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetCardCountRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetCardCountRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCardCountRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetCardCountRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetCardCountRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetCardCountRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetCardCountRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetCardCountRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetCardCountRequest.BaseRequest)
}

// -------------------------------------------------------------------

// GetCardCountResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetCardCountResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetCardCountResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetCardCountResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetCardCountResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetCardCountResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCardCountResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetCardCountResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetCardCountResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetCardCountResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetCardCountResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetCardCountResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetCardCountResponse.BaseResponse)
}

// optional uint32 count = 2;
inline bool GetCardCountResponse::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetCardCountResponse::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetCardCountResponse::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetCardCountResponse::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 GetCardCountResponse::count() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCardCountResponse.count)
  return count_;
}
inline void GetCardCountResponse::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetCardCountResponse.count)
}

// -------------------------------------------------------------------

// GetAvailableCardRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetAvailableCardRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GetAvailableCardRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GetAvailableCardRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GetAvailableCardRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetAvailableCardRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAvailableCardRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetAvailableCardRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetAvailableCardRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetAvailableCardRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetAvailableCardRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetAvailableCardRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAvailableCardRequest.BaseRequest)
}

// optional string app_id = 2;
inline bool GetAvailableCardRequest::has_app_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAvailableCardRequest::set_has_app_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAvailableCardRequest::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAvailableCardRequest::clear_app_id() {
  app_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_app_id();
}
inline const ::std::string& GetAvailableCardRequest::app_id() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAvailableCardRequest.app_id)
  return app_id_.GetNoArena();
}
inline void GetAvailableCardRequest::set_app_id(const ::std::string& value) {
  set_has_app_id();
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetAvailableCardRequest.app_id)
}
#if LANG_CXX11
inline void GetAvailableCardRequest::set_app_id(::std::string&& value) {
  set_has_app_id();
  app_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetAvailableCardRequest.app_id)
}
#endif
inline void GetAvailableCardRequest::set_app_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_app_id();
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetAvailableCardRequest.app_id)
}
inline void GetAvailableCardRequest::set_app_id(const char* value, size_t size) {
  set_has_app_id();
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetAvailableCardRequest.app_id)
}
inline ::std::string* GetAvailableCardRequest::mutable_app_id() {
  set_has_app_id();
  // @@protoc_insertion_point(field_mutable:micromsg.GetAvailableCardRequest.app_id)
  return app_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAvailableCardRequest::release_app_id() {
  // @@protoc_insertion_point(field_release:micromsg.GetAvailableCardRequest.app_id)
  clear_has_app_id();
  return app_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAvailableCardRequest::set_allocated_app_id(::std::string* app_id) {
  if (app_id != NULL) {
    set_has_app_id();
  } else {
    clear_has_app_id();
  }
  app_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_id);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAvailableCardRequest.app_id)
}

// optional uint32 shop_id = 3;
inline bool GetAvailableCardRequest::has_shop_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GetAvailableCardRequest::set_has_shop_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GetAvailableCardRequest::clear_has_shop_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GetAvailableCardRequest::clear_shop_id() {
  shop_id_ = 0u;
  clear_has_shop_id();
}
inline ::google::protobuf::uint32 GetAvailableCardRequest::shop_id() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAvailableCardRequest.shop_id)
  return shop_id_;
}
inline void GetAvailableCardRequest::set_shop_id(::google::protobuf::uint32 value) {
  set_has_shop_id();
  shop_id_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetAvailableCardRequest.shop_id)
}

// optional string sign_type = 4;
inline bool GetAvailableCardRequest::has_sign_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetAvailableCardRequest::set_has_sign_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetAvailableCardRequest::clear_has_sign_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetAvailableCardRequest::clear_sign_type() {
  sign_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sign_type();
}
inline const ::std::string& GetAvailableCardRequest::sign_type() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAvailableCardRequest.sign_type)
  return sign_type_.GetNoArena();
}
inline void GetAvailableCardRequest::set_sign_type(const ::std::string& value) {
  set_has_sign_type();
  sign_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetAvailableCardRequest.sign_type)
}
#if LANG_CXX11
inline void GetAvailableCardRequest::set_sign_type(::std::string&& value) {
  set_has_sign_type();
  sign_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetAvailableCardRequest.sign_type)
}
#endif
inline void GetAvailableCardRequest::set_sign_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sign_type();
  sign_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetAvailableCardRequest.sign_type)
}
inline void GetAvailableCardRequest::set_sign_type(const char* value, size_t size) {
  set_has_sign_type();
  sign_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetAvailableCardRequest.sign_type)
}
inline ::std::string* GetAvailableCardRequest::mutable_sign_type() {
  set_has_sign_type();
  // @@protoc_insertion_point(field_mutable:micromsg.GetAvailableCardRequest.sign_type)
  return sign_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAvailableCardRequest::release_sign_type() {
  // @@protoc_insertion_point(field_release:micromsg.GetAvailableCardRequest.sign_type)
  clear_has_sign_type();
  return sign_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAvailableCardRequest::set_allocated_sign_type(::std::string* sign_type) {
  if (sign_type != NULL) {
    set_has_sign_type();
  } else {
    clear_has_sign_type();
  }
  sign_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sign_type);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAvailableCardRequest.sign_type)
}

// optional string card_sign = 5;
inline bool GetAvailableCardRequest::has_card_sign() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetAvailableCardRequest::set_has_card_sign() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetAvailableCardRequest::clear_has_card_sign() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetAvailableCardRequest::clear_card_sign() {
  card_sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_card_sign();
}
inline const ::std::string& GetAvailableCardRequest::card_sign() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAvailableCardRequest.card_sign)
  return card_sign_.GetNoArena();
}
inline void GetAvailableCardRequest::set_card_sign(const ::std::string& value) {
  set_has_card_sign();
  card_sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetAvailableCardRequest.card_sign)
}
#if LANG_CXX11
inline void GetAvailableCardRequest::set_card_sign(::std::string&& value) {
  set_has_card_sign();
  card_sign_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetAvailableCardRequest.card_sign)
}
#endif
inline void GetAvailableCardRequest::set_card_sign(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_card_sign();
  card_sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetAvailableCardRequest.card_sign)
}
inline void GetAvailableCardRequest::set_card_sign(const char* value, size_t size) {
  set_has_card_sign();
  card_sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetAvailableCardRequest.card_sign)
}
inline ::std::string* GetAvailableCardRequest::mutable_card_sign() {
  set_has_card_sign();
  // @@protoc_insertion_point(field_mutable:micromsg.GetAvailableCardRequest.card_sign)
  return card_sign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAvailableCardRequest::release_card_sign() {
  // @@protoc_insertion_point(field_release:micromsg.GetAvailableCardRequest.card_sign)
  clear_has_card_sign();
  return card_sign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAvailableCardRequest::set_allocated_card_sign(::std::string* card_sign) {
  if (card_sign != NULL) {
    set_has_card_sign();
  } else {
    clear_has_card_sign();
  }
  card_sign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), card_sign);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAvailableCardRequest.card_sign)
}

// optional uint32 time_stamp = 6;
inline bool GetAvailableCardRequest::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GetAvailableCardRequest::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GetAvailableCardRequest::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GetAvailableCardRequest::clear_time_stamp() {
  time_stamp_ = 0u;
  clear_has_time_stamp();
}
inline ::google::protobuf::uint32 GetAvailableCardRequest::time_stamp() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAvailableCardRequest.time_stamp)
  return time_stamp_;
}
inline void GetAvailableCardRequest::set_time_stamp(::google::protobuf::uint32 value) {
  set_has_time_stamp();
  time_stamp_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetAvailableCardRequest.time_stamp)
}

// optional string nonce_str = 7;
inline bool GetAvailableCardRequest::has_nonce_str() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetAvailableCardRequest::set_has_nonce_str() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetAvailableCardRequest::clear_has_nonce_str() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetAvailableCardRequest::clear_nonce_str() {
  nonce_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nonce_str();
}
inline const ::std::string& GetAvailableCardRequest::nonce_str() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAvailableCardRequest.nonce_str)
  return nonce_str_.GetNoArena();
}
inline void GetAvailableCardRequest::set_nonce_str(const ::std::string& value) {
  set_has_nonce_str();
  nonce_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetAvailableCardRequest.nonce_str)
}
#if LANG_CXX11
inline void GetAvailableCardRequest::set_nonce_str(::std::string&& value) {
  set_has_nonce_str();
  nonce_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetAvailableCardRequest.nonce_str)
}
#endif
inline void GetAvailableCardRequest::set_nonce_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nonce_str();
  nonce_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetAvailableCardRequest.nonce_str)
}
inline void GetAvailableCardRequest::set_nonce_str(const char* value, size_t size) {
  set_has_nonce_str();
  nonce_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetAvailableCardRequest.nonce_str)
}
inline ::std::string* GetAvailableCardRequest::mutable_nonce_str() {
  set_has_nonce_str();
  // @@protoc_insertion_point(field_mutable:micromsg.GetAvailableCardRequest.nonce_str)
  return nonce_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAvailableCardRequest::release_nonce_str() {
  // @@protoc_insertion_point(field_release:micromsg.GetAvailableCardRequest.nonce_str)
  clear_has_nonce_str();
  return nonce_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAvailableCardRequest::set_allocated_nonce_str(::std::string* nonce_str) {
  if (nonce_str != NULL) {
    set_has_nonce_str();
  } else {
    clear_has_nonce_str();
  }
  nonce_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nonce_str);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAvailableCardRequest.nonce_str)
}

// optional string card_tp_id = 8;
inline bool GetAvailableCardRequest::has_card_tp_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetAvailableCardRequest::set_has_card_tp_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetAvailableCardRequest::clear_has_card_tp_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetAvailableCardRequest::clear_card_tp_id() {
  card_tp_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_card_tp_id();
}
inline const ::std::string& GetAvailableCardRequest::card_tp_id() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAvailableCardRequest.card_tp_id)
  return card_tp_id_.GetNoArena();
}
inline void GetAvailableCardRequest::set_card_tp_id(const ::std::string& value) {
  set_has_card_tp_id();
  card_tp_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetAvailableCardRequest.card_tp_id)
}
#if LANG_CXX11
inline void GetAvailableCardRequest::set_card_tp_id(::std::string&& value) {
  set_has_card_tp_id();
  card_tp_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetAvailableCardRequest.card_tp_id)
}
#endif
inline void GetAvailableCardRequest::set_card_tp_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_card_tp_id();
  card_tp_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetAvailableCardRequest.card_tp_id)
}
inline void GetAvailableCardRequest::set_card_tp_id(const char* value, size_t size) {
  set_has_card_tp_id();
  card_tp_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetAvailableCardRequest.card_tp_id)
}
inline ::std::string* GetAvailableCardRequest::mutable_card_tp_id() {
  set_has_card_tp_id();
  // @@protoc_insertion_point(field_mutable:micromsg.GetAvailableCardRequest.card_tp_id)
  return card_tp_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAvailableCardRequest::release_card_tp_id() {
  // @@protoc_insertion_point(field_release:micromsg.GetAvailableCardRequest.card_tp_id)
  clear_has_card_tp_id();
  return card_tp_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAvailableCardRequest::set_allocated_card_tp_id(::std::string* card_tp_id) {
  if (card_tp_id != NULL) {
    set_has_card_tp_id();
  } else {
    clear_has_card_tp_id();
  }
  card_tp_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), card_tp_id);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAvailableCardRequest.card_tp_id)
}

// optional string card_type = 9;
inline bool GetAvailableCardRequest::has_card_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetAvailableCardRequest::set_has_card_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetAvailableCardRequest::clear_has_card_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetAvailableCardRequest::clear_card_type() {
  card_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_card_type();
}
inline const ::std::string& GetAvailableCardRequest::card_type() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAvailableCardRequest.card_type)
  return card_type_.GetNoArena();
}
inline void GetAvailableCardRequest::set_card_type(const ::std::string& value) {
  set_has_card_type();
  card_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetAvailableCardRequest.card_type)
}
#if LANG_CXX11
inline void GetAvailableCardRequest::set_card_type(::std::string&& value) {
  set_has_card_type();
  card_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetAvailableCardRequest.card_type)
}
#endif
inline void GetAvailableCardRequest::set_card_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_card_type();
  card_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetAvailableCardRequest.card_type)
}
inline void GetAvailableCardRequest::set_card_type(const char* value, size_t size) {
  set_has_card_type();
  card_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetAvailableCardRequest.card_type)
}
inline ::std::string* GetAvailableCardRequest::mutable_card_type() {
  set_has_card_type();
  // @@protoc_insertion_point(field_mutable:micromsg.GetAvailableCardRequest.card_type)
  return card_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAvailableCardRequest::release_card_type() {
  // @@protoc_insertion_point(field_release:micromsg.GetAvailableCardRequest.card_type)
  clear_has_card_type();
  return card_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAvailableCardRequest::set_allocated_card_type(::std::string* card_type) {
  if (card_type != NULL) {
    set_has_card_type();
  } else {
    clear_has_card_type();
  }
  card_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), card_type);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAvailableCardRequest.card_type)
}

// -------------------------------------------------------------------

// GetAvailableCardResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetAvailableCardResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetAvailableCardResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetAvailableCardResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetAvailableCardResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetAvailableCardResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAvailableCardResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetAvailableCardResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetAvailableCardResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetAvailableCardResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetAvailableCardResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetAvailableCardResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAvailableCardResponse.BaseResponse)
}

// optional string json_ret = 2;
inline bool GetAvailableCardResponse::has_json_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAvailableCardResponse::set_has_json_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAvailableCardResponse::clear_has_json_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAvailableCardResponse::clear_json_ret() {
  json_ret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_json_ret();
}
inline const ::std::string& GetAvailableCardResponse::json_ret() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAvailableCardResponse.json_ret)
  return json_ret_.GetNoArena();
}
inline void GetAvailableCardResponse::set_json_ret(const ::std::string& value) {
  set_has_json_ret();
  json_ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetAvailableCardResponse.json_ret)
}
#if LANG_CXX11
inline void GetAvailableCardResponse::set_json_ret(::std::string&& value) {
  set_has_json_ret();
  json_ret_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetAvailableCardResponse.json_ret)
}
#endif
inline void GetAvailableCardResponse::set_json_ret(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_json_ret();
  json_ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetAvailableCardResponse.json_ret)
}
inline void GetAvailableCardResponse::set_json_ret(const char* value, size_t size) {
  set_has_json_ret();
  json_ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetAvailableCardResponse.json_ret)
}
inline ::std::string* GetAvailableCardResponse::mutable_json_ret() {
  set_has_json_ret();
  // @@protoc_insertion_point(field_mutable:micromsg.GetAvailableCardResponse.json_ret)
  return json_ret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAvailableCardResponse::release_json_ret() {
  // @@protoc_insertion_point(field_release:micromsg.GetAvailableCardResponse.json_ret)
  clear_has_json_ret();
  return json_ret_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAvailableCardResponse::set_allocated_json_ret(::std::string* json_ret) {
  if (json_ret != NULL) {
    set_has_json_ret();
  } else {
    clear_has_json_ret();
  }
  json_ret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), json_ret);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAvailableCardResponse.json_ret)
}

// -------------------------------------------------------------------

// CardListItem

// optional string card_tp_id = 1;
inline bool CardListItem::has_card_tp_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CardListItem::set_has_card_tp_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CardListItem::clear_has_card_tp_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CardListItem::clear_card_tp_id() {
  card_tp_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_card_tp_id();
}
inline const ::std::string& CardListItem::card_tp_id() const {
  // @@protoc_insertion_point(field_get:micromsg.CardListItem.card_tp_id)
  return card_tp_id_.GetNoArena();
}
inline void CardListItem::set_card_tp_id(const ::std::string& value) {
  set_has_card_tp_id();
  card_tp_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CardListItem.card_tp_id)
}
#if LANG_CXX11
inline void CardListItem::set_card_tp_id(::std::string&& value) {
  set_has_card_tp_id();
  card_tp_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CardListItem.card_tp_id)
}
#endif
inline void CardListItem::set_card_tp_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_card_tp_id();
  card_tp_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CardListItem.card_tp_id)
}
inline void CardListItem::set_card_tp_id(const char* value, size_t size) {
  set_has_card_tp_id();
  card_tp_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CardListItem.card_tp_id)
}
inline ::std::string* CardListItem::mutable_card_tp_id() {
  set_has_card_tp_id();
  // @@protoc_insertion_point(field_mutable:micromsg.CardListItem.card_tp_id)
  return card_tp_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CardListItem::release_card_tp_id() {
  // @@protoc_insertion_point(field_release:micromsg.CardListItem.card_tp_id)
  clear_has_card_tp_id();
  return card_tp_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CardListItem::set_allocated_card_tp_id(::std::string* card_tp_id) {
  if (card_tp_id != NULL) {
    set_has_card_tp_id();
  } else {
    clear_has_card_tp_id();
  }
  card_tp_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), card_tp_id);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CardListItem.card_tp_id)
}

// optional string card_ext = 2;
inline bool CardListItem::has_card_ext() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CardListItem::set_has_card_ext() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CardListItem::clear_has_card_ext() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CardListItem::clear_card_ext() {
  card_ext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_card_ext();
}
inline const ::std::string& CardListItem::card_ext() const {
  // @@protoc_insertion_point(field_get:micromsg.CardListItem.card_ext)
  return card_ext_.GetNoArena();
}
inline void CardListItem::set_card_ext(const ::std::string& value) {
  set_has_card_ext();
  card_ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CardListItem.card_ext)
}
#if LANG_CXX11
inline void CardListItem::set_card_ext(::std::string&& value) {
  set_has_card_ext();
  card_ext_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CardListItem.card_ext)
}
#endif
inline void CardListItem::set_card_ext(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_card_ext();
  card_ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CardListItem.card_ext)
}
inline void CardListItem::set_card_ext(const char* value, size_t size) {
  set_has_card_ext();
  card_ext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CardListItem.card_ext)
}
inline ::std::string* CardListItem::mutable_card_ext() {
  set_has_card_ext();
  // @@protoc_insertion_point(field_mutable:micromsg.CardListItem.card_ext)
  return card_ext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CardListItem::release_card_ext() {
  // @@protoc_insertion_point(field_release:micromsg.CardListItem.card_ext)
  clear_has_card_ext();
  return card_ext_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CardListItem::set_allocated_card_ext(::std::string* card_ext) {
  if (card_ext != NULL) {
    set_has_card_ext();
  } else {
    clear_has_card_ext();
  }
  card_ext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), card_ext);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CardListItem.card_ext)
}

// optional int32 is_succ = 3;
inline bool CardListItem::has_is_succ() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CardListItem::set_has_is_succ() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CardListItem::clear_has_is_succ() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CardListItem::clear_is_succ() {
  is_succ_ = 0;
  clear_has_is_succ();
}
inline ::google::protobuf::int32 CardListItem::is_succ() const {
  // @@protoc_insertion_point(field_get:micromsg.CardListItem.is_succ)
  return is_succ_;
}
inline void CardListItem::set_is_succ(::google::protobuf::int32 value) {
  set_has_is_succ();
  is_succ_ = value;
  // @@protoc_insertion_point(field_set:micromsg.CardListItem.is_succ)
}

// -------------------------------------------------------------------

// CardListItems

// repeated .micromsg.CardListItem card_list = 1;
inline int CardListItems::card_list_size() const {
  return card_list_.size();
}
inline void CardListItems::clear_card_list() {
  card_list_.Clear();
}
inline const ::micromsg::CardListItem& CardListItems::card_list(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.CardListItems.card_list)
  return card_list_.Get(index);
}
inline ::micromsg::CardListItem* CardListItems::mutable_card_list(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.CardListItems.card_list)
  return card_list_.Mutable(index);
}
inline ::micromsg::CardListItem* CardListItems::add_card_list() {
  // @@protoc_insertion_point(field_add:micromsg.CardListItems.card_list)
  return card_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::CardListItem >*
CardListItems::mutable_card_list() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.CardListItems.card_list)
  return &card_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::CardListItem >&
CardListItems::card_list() const {
  // @@protoc_insertion_point(field_list:micromsg.CardListItems.card_list)
  return card_list_;
}

// -------------------------------------------------------------------

// GetCardListFromAppRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetCardListFromAppRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetCardListFromAppRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetCardListFromAppRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetCardListFromAppRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetCardListFromAppRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCardListFromAppRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetCardListFromAppRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetCardListFromAppRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetCardListFromAppRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetCardListFromAppRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetCardListFromAppRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetCardListFromAppRequest.BaseRequest)
}

// repeated .micromsg.CardListItem card_list = 2;
inline int GetCardListFromAppRequest::card_list_size() const {
  return card_list_.size();
}
inline void GetCardListFromAppRequest::clear_card_list() {
  card_list_.Clear();
}
inline const ::micromsg::CardListItem& GetCardListFromAppRequest::card_list(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetCardListFromAppRequest.card_list)
  return card_list_.Get(index);
}
inline ::micromsg::CardListItem* GetCardListFromAppRequest::mutable_card_list(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetCardListFromAppRequest.card_list)
  return card_list_.Mutable(index);
}
inline ::micromsg::CardListItem* GetCardListFromAppRequest::add_card_list() {
  // @@protoc_insertion_point(field_add:micromsg.GetCardListFromAppRequest.card_list)
  return card_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::CardListItem >*
GetCardListFromAppRequest::mutable_card_list() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetCardListFromAppRequest.card_list)
  return &card_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::CardListItem >&
GetCardListFromAppRequest::card_list() const {
  // @@protoc_insertion_point(field_list:micromsg.GetCardListFromAppRequest.card_list)
  return card_list_;
}

// optional uint32 from_scene = 3;
inline bool GetCardListFromAppRequest::has_from_scene() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetCardListFromAppRequest::set_has_from_scene() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetCardListFromAppRequest::clear_has_from_scene() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetCardListFromAppRequest::clear_from_scene() {
  from_scene_ = 0u;
  clear_has_from_scene();
}
inline ::google::protobuf::uint32 GetCardListFromAppRequest::from_scene() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCardListFromAppRequest.from_scene)
  return from_scene_;
}
inline void GetCardListFromAppRequest::set_from_scene(::google::protobuf::uint32 value) {
  set_has_from_scene();
  from_scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetCardListFromAppRequest.from_scene)
}

// optional string bundle_id = 4;
inline bool GetCardListFromAppRequest::has_bundle_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetCardListFromAppRequest::set_has_bundle_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetCardListFromAppRequest::clear_has_bundle_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetCardListFromAppRequest::clear_bundle_id() {
  bundle_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bundle_id();
}
inline const ::std::string& GetCardListFromAppRequest::bundle_id() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCardListFromAppRequest.bundle_id)
  return bundle_id_.GetNoArena();
}
inline void GetCardListFromAppRequest::set_bundle_id(const ::std::string& value) {
  set_has_bundle_id();
  bundle_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetCardListFromAppRequest.bundle_id)
}
#if LANG_CXX11
inline void GetCardListFromAppRequest::set_bundle_id(::std::string&& value) {
  set_has_bundle_id();
  bundle_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetCardListFromAppRequest.bundle_id)
}
#endif
inline void GetCardListFromAppRequest::set_bundle_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bundle_id();
  bundle_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetCardListFromAppRequest.bundle_id)
}
inline void GetCardListFromAppRequest::set_bundle_id(const char* value, size_t size) {
  set_has_bundle_id();
  bundle_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetCardListFromAppRequest.bundle_id)
}
inline ::std::string* GetCardListFromAppRequest::mutable_bundle_id() {
  set_has_bundle_id();
  // @@protoc_insertion_point(field_mutable:micromsg.GetCardListFromAppRequest.bundle_id)
  return bundle_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetCardListFromAppRequest::release_bundle_id() {
  // @@protoc_insertion_point(field_release:micromsg.GetCardListFromAppRequest.bundle_id)
  clear_has_bundle_id();
  return bundle_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCardListFromAppRequest::set_allocated_bundle_id(::std::string* bundle_id) {
  if (bundle_id != NULL) {
    set_has_bundle_id();
  } else {
    clear_has_bundle_id();
  }
  bundle_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bundle_id);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetCardListFromAppRequest.bundle_id)
}

// optional string package_name = 5;
inline bool GetCardListFromAppRequest::has_package_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetCardListFromAppRequest::set_has_package_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetCardListFromAppRequest::clear_has_package_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetCardListFromAppRequest::clear_package_name() {
  package_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package_name();
}
inline const ::std::string& GetCardListFromAppRequest::package_name() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCardListFromAppRequest.package_name)
  return package_name_.GetNoArena();
}
inline void GetCardListFromAppRequest::set_package_name(const ::std::string& value) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetCardListFromAppRequest.package_name)
}
#if LANG_CXX11
inline void GetCardListFromAppRequest::set_package_name(::std::string&& value) {
  set_has_package_name();
  package_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetCardListFromAppRequest.package_name)
}
#endif
inline void GetCardListFromAppRequest::set_package_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetCardListFromAppRequest.package_name)
}
inline void GetCardListFromAppRequest::set_package_name(const char* value, size_t size) {
  set_has_package_name();
  package_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetCardListFromAppRequest.package_name)
}
inline ::std::string* GetCardListFromAppRequest::mutable_package_name() {
  set_has_package_name();
  // @@protoc_insertion_point(field_mutable:micromsg.GetCardListFromAppRequest.package_name)
  return package_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetCardListFromAppRequest::release_package_name() {
  // @@protoc_insertion_point(field_release:micromsg.GetCardListFromAppRequest.package_name)
  clear_has_package_name();
  return package_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCardListFromAppRequest::set_allocated_package_name(::std::string* package_name) {
  if (package_name != NULL) {
    set_has_package_name();
  } else {
    clear_has_package_name();
  }
  package_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package_name);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetCardListFromAppRequest.package_name)
}

// optional string sign = 6;
inline bool GetCardListFromAppRequest::has_sign() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetCardListFromAppRequest::set_has_sign() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetCardListFromAppRequest::clear_has_sign() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetCardListFromAppRequest::clear_sign() {
  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sign();
}
inline const ::std::string& GetCardListFromAppRequest::sign() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCardListFromAppRequest.sign)
  return sign_.GetNoArena();
}
inline void GetCardListFromAppRequest::set_sign(const ::std::string& value) {
  set_has_sign();
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetCardListFromAppRequest.sign)
}
#if LANG_CXX11
inline void GetCardListFromAppRequest::set_sign(::std::string&& value) {
  set_has_sign();
  sign_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetCardListFromAppRequest.sign)
}
#endif
inline void GetCardListFromAppRequest::set_sign(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sign();
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetCardListFromAppRequest.sign)
}
inline void GetCardListFromAppRequest::set_sign(const char* value, size_t size) {
  set_has_sign();
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetCardListFromAppRequest.sign)
}
inline ::std::string* GetCardListFromAppRequest::mutable_sign() {
  set_has_sign();
  // @@protoc_insertion_point(field_mutable:micromsg.GetCardListFromAppRequest.sign)
  return sign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetCardListFromAppRequest::release_sign() {
  // @@protoc_insertion_point(field_release:micromsg.GetCardListFromAppRequest.sign)
  clear_has_sign();
  return sign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCardListFromAppRequest::set_allocated_sign(::std::string* sign) {
  if (sign != NULL) {
    set_has_sign();
  } else {
    clear_has_sign();
  }
  sign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sign);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetCardListFromAppRequest.sign)
}

// -------------------------------------------------------------------

// GetCardListFromAppResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetCardListFromAppResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetCardListFromAppResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetCardListFromAppResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetCardListFromAppResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetCardListFromAppResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCardListFromAppResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetCardListFromAppResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetCardListFromAppResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetCardListFromAppResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetCardListFromAppResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetCardListFromAppResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetCardListFromAppResponse.BaseResponse)
}

// optional string json_ret = 2;
inline bool GetCardListFromAppResponse::has_json_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetCardListFromAppResponse::set_has_json_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetCardListFromAppResponse::clear_has_json_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetCardListFromAppResponse::clear_json_ret() {
  json_ret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_json_ret();
}
inline const ::std::string& GetCardListFromAppResponse::json_ret() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCardListFromAppResponse.json_ret)
  return json_ret_.GetNoArena();
}
inline void GetCardListFromAppResponse::set_json_ret(const ::std::string& value) {
  set_has_json_ret();
  json_ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetCardListFromAppResponse.json_ret)
}
#if LANG_CXX11
inline void GetCardListFromAppResponse::set_json_ret(::std::string&& value) {
  set_has_json_ret();
  json_ret_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetCardListFromAppResponse.json_ret)
}
#endif
inline void GetCardListFromAppResponse::set_json_ret(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_json_ret();
  json_ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetCardListFromAppResponse.json_ret)
}
inline void GetCardListFromAppResponse::set_json_ret(const char* value, size_t size) {
  set_has_json_ret();
  json_ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetCardListFromAppResponse.json_ret)
}
inline ::std::string* GetCardListFromAppResponse::mutable_json_ret() {
  set_has_json_ret();
  // @@protoc_insertion_point(field_mutable:micromsg.GetCardListFromAppResponse.json_ret)
  return json_ret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetCardListFromAppResponse::release_json_ret() {
  // @@protoc_insertion_point(field_release:micromsg.GetCardListFromAppResponse.json_ret)
  clear_has_json_ret();
  return json_ret_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCardListFromAppResponse::set_allocated_json_ret(::std::string* json_ret) {
  if (json_ret != NULL) {
    set_has_json_ret();
  } else {
    clear_has_json_ret();
  }
  json_ret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), json_ret);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetCardListFromAppResponse.json_ret)
}

// -------------------------------------------------------------------

// AcceptCardListFromAppRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool AcceptCardListFromAppRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AcceptCardListFromAppRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AcceptCardListFromAppRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AcceptCardListFromAppRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& AcceptCardListFromAppRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.AcceptCardListFromAppRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* AcceptCardListFromAppRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.AcceptCardListFromAppRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* AcceptCardListFromAppRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.AcceptCardListFromAppRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void AcceptCardListFromAppRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.AcceptCardListFromAppRequest.BaseRequest)
}

// repeated .micromsg.CardListItem card_list = 2;
inline int AcceptCardListFromAppRequest::card_list_size() const {
  return card_list_.size();
}
inline void AcceptCardListFromAppRequest::clear_card_list() {
  card_list_.Clear();
}
inline const ::micromsg::CardListItem& AcceptCardListFromAppRequest::card_list(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.AcceptCardListFromAppRequest.card_list)
  return card_list_.Get(index);
}
inline ::micromsg::CardListItem* AcceptCardListFromAppRequest::mutable_card_list(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.AcceptCardListFromAppRequest.card_list)
  return card_list_.Mutable(index);
}
inline ::micromsg::CardListItem* AcceptCardListFromAppRequest::add_card_list() {
  // @@protoc_insertion_point(field_add:micromsg.AcceptCardListFromAppRequest.card_list)
  return card_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::CardListItem >*
AcceptCardListFromAppRequest::mutable_card_list() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.AcceptCardListFromAppRequest.card_list)
  return &card_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::CardListItem >&
AcceptCardListFromAppRequest::card_list() const {
  // @@protoc_insertion_point(field_list:micromsg.AcceptCardListFromAppRequest.card_list)
  return card_list_;
}

// optional uint32 from_scene = 3;
inline bool AcceptCardListFromAppRequest::has_from_scene() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AcceptCardListFromAppRequest::set_has_from_scene() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AcceptCardListFromAppRequest::clear_has_from_scene() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AcceptCardListFromAppRequest::clear_from_scene() {
  from_scene_ = 0u;
  clear_has_from_scene();
}
inline ::google::protobuf::uint32 AcceptCardListFromAppRequest::from_scene() const {
  // @@protoc_insertion_point(field_get:micromsg.AcceptCardListFromAppRequest.from_scene)
  return from_scene_;
}
inline void AcceptCardListFromAppRequest::set_from_scene(::google::protobuf::uint32 value) {
  set_has_from_scene();
  from_scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AcceptCardListFromAppRequest.from_scene)
}

// -------------------------------------------------------------------

// AcceptCardListFromAppResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool AcceptCardListFromAppResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AcceptCardListFromAppResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AcceptCardListFromAppResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AcceptCardListFromAppResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& AcceptCardListFromAppResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.AcceptCardListFromAppResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* AcceptCardListFromAppResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.AcceptCardListFromAppResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* AcceptCardListFromAppResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.AcceptCardListFromAppResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void AcceptCardListFromAppResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.AcceptCardListFromAppResponse.BaseResponse)
}

// optional string json_ret = 2;
inline bool AcceptCardListFromAppResponse::has_json_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AcceptCardListFromAppResponse::set_has_json_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AcceptCardListFromAppResponse::clear_has_json_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AcceptCardListFromAppResponse::clear_json_ret() {
  json_ret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_json_ret();
}
inline const ::std::string& AcceptCardListFromAppResponse::json_ret() const {
  // @@protoc_insertion_point(field_get:micromsg.AcceptCardListFromAppResponse.json_ret)
  return json_ret_.GetNoArena();
}
inline void AcceptCardListFromAppResponse::set_json_ret(const ::std::string& value) {
  set_has_json_ret();
  json_ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AcceptCardListFromAppResponse.json_ret)
}
#if LANG_CXX11
inline void AcceptCardListFromAppResponse::set_json_ret(::std::string&& value) {
  set_has_json_ret();
  json_ret_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AcceptCardListFromAppResponse.json_ret)
}
#endif
inline void AcceptCardListFromAppResponse::set_json_ret(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_json_ret();
  json_ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AcceptCardListFromAppResponse.json_ret)
}
inline void AcceptCardListFromAppResponse::set_json_ret(const char* value, size_t size) {
  set_has_json_ret();
  json_ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AcceptCardListFromAppResponse.json_ret)
}
inline ::std::string* AcceptCardListFromAppResponse::mutable_json_ret() {
  set_has_json_ret();
  // @@protoc_insertion_point(field_mutable:micromsg.AcceptCardListFromAppResponse.json_ret)
  return json_ret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AcceptCardListFromAppResponse::release_json_ret() {
  // @@protoc_insertion_point(field_release:micromsg.AcceptCardListFromAppResponse.json_ret)
  clear_has_json_ret();
  return json_ret_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AcceptCardListFromAppResponse::set_allocated_json_ret(::std::string* json_ret) {
  if (json_ret != NULL) {
    set_has_json_ret();
  } else {
    clear_has_json_ret();
  }
  json_ret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), json_ret);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AcceptCardListFromAppResponse.json_ret)
}

// optional int32 ret_code = 3;
inline bool AcceptCardListFromAppResponse::has_ret_code() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AcceptCardListFromAppResponse::set_has_ret_code() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AcceptCardListFromAppResponse::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AcceptCardListFromAppResponse::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::google::protobuf::int32 AcceptCardListFromAppResponse::ret_code() const {
  // @@protoc_insertion_point(field_get:micromsg.AcceptCardListFromAppResponse.ret_code)
  return ret_code_;
}
inline void AcceptCardListFromAppResponse::set_ret_code(::google::protobuf::int32 value) {
  set_has_ret_code();
  ret_code_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AcceptCardListFromAppResponse.ret_code)
}

// optional string ret_msg = 4;
inline bool AcceptCardListFromAppResponse::has_ret_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AcceptCardListFromAppResponse::set_has_ret_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AcceptCardListFromAppResponse::clear_has_ret_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AcceptCardListFromAppResponse::clear_ret_msg() {
  ret_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ret_msg();
}
inline const ::std::string& AcceptCardListFromAppResponse::ret_msg() const {
  // @@protoc_insertion_point(field_get:micromsg.AcceptCardListFromAppResponse.ret_msg)
  return ret_msg_.GetNoArena();
}
inline void AcceptCardListFromAppResponse::set_ret_msg(const ::std::string& value) {
  set_has_ret_msg();
  ret_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AcceptCardListFromAppResponse.ret_msg)
}
#if LANG_CXX11
inline void AcceptCardListFromAppResponse::set_ret_msg(::std::string&& value) {
  set_has_ret_msg();
  ret_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AcceptCardListFromAppResponse.ret_msg)
}
#endif
inline void AcceptCardListFromAppResponse::set_ret_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ret_msg();
  ret_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AcceptCardListFromAppResponse.ret_msg)
}
inline void AcceptCardListFromAppResponse::set_ret_msg(const char* value, size_t size) {
  set_has_ret_msg();
  ret_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AcceptCardListFromAppResponse.ret_msg)
}
inline ::std::string* AcceptCardListFromAppResponse::mutable_ret_msg() {
  set_has_ret_msg();
  // @@protoc_insertion_point(field_mutable:micromsg.AcceptCardListFromAppResponse.ret_msg)
  return ret_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AcceptCardListFromAppResponse::release_ret_msg() {
  // @@protoc_insertion_point(field_release:micromsg.AcceptCardListFromAppResponse.ret_msg)
  clear_has_ret_msg();
  return ret_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AcceptCardListFromAppResponse::set_allocated_ret_msg(::std::string* ret_msg) {
  if (ret_msg != NULL) {
    set_has_ret_msg();
  } else {
    clear_has_ret_msg();
  }
  ret_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ret_msg);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AcceptCardListFromAppResponse.ret_msg)
}

// -------------------------------------------------------------------

// GetCardConfigInfoRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetCardConfigInfoRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetCardConfigInfoRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetCardConfigInfoRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetCardConfigInfoRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetCardConfigInfoRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCardConfigInfoRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetCardConfigInfoRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetCardConfigInfoRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetCardConfigInfoRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetCardConfigInfoRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetCardConfigInfoRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetCardConfigInfoRequest.BaseRequest)
}

// -------------------------------------------------------------------

// GetCardConfigInfoResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetCardConfigInfoResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetCardConfigInfoResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetCardConfigInfoResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetCardConfigInfoResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetCardConfigInfoResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCardConfigInfoResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetCardConfigInfoResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetCardConfigInfoResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetCardConfigInfoResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetCardConfigInfoResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetCardConfigInfoResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetCardConfigInfoResponse.BaseResponse)
}

// optional string json_ret = 2;
inline bool GetCardConfigInfoResponse::has_json_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetCardConfigInfoResponse::set_has_json_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetCardConfigInfoResponse::clear_has_json_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetCardConfigInfoResponse::clear_json_ret() {
  json_ret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_json_ret();
}
inline const ::std::string& GetCardConfigInfoResponse::json_ret() const {
  // @@protoc_insertion_point(field_get:micromsg.GetCardConfigInfoResponse.json_ret)
  return json_ret_.GetNoArena();
}
inline void GetCardConfigInfoResponse::set_json_ret(const ::std::string& value) {
  set_has_json_ret();
  json_ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetCardConfigInfoResponse.json_ret)
}
#if LANG_CXX11
inline void GetCardConfigInfoResponse::set_json_ret(::std::string&& value) {
  set_has_json_ret();
  json_ret_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetCardConfigInfoResponse.json_ret)
}
#endif
inline void GetCardConfigInfoResponse::set_json_ret(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_json_ret();
  json_ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetCardConfigInfoResponse.json_ret)
}
inline void GetCardConfigInfoResponse::set_json_ret(const char* value, size_t size) {
  set_has_json_ret();
  json_ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetCardConfigInfoResponse.json_ret)
}
inline ::std::string* GetCardConfigInfoResponse::mutable_json_ret() {
  set_has_json_ret();
  // @@protoc_insertion_point(field_mutable:micromsg.GetCardConfigInfoResponse.json_ret)
  return json_ret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetCardConfigInfoResponse::release_json_ret() {
  // @@protoc_insertion_point(field_release:micromsg.GetCardConfigInfoResponse.json_ret)
  clear_has_json_ret();
  return json_ret_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetCardConfigInfoResponse::set_allocated_json_ret(::std::string* json_ret) {
  if (json_ret != NULL) {
    set_has_json_ret();
  } else {
    clear_has_json_ret();
  }
  json_ret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), json_ret);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetCardConfigInfoResponse.json_ret)
}

// -------------------------------------------------------------------

// CardDataInfo

// optional string card_id = 1;
inline bool CardDataInfo::has_card_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CardDataInfo::set_has_card_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CardDataInfo::clear_has_card_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CardDataInfo::clear_card_id() {
  card_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_card_id();
}
inline const ::std::string& CardDataInfo::card_id() const {
  // @@protoc_insertion_point(field_get:micromsg.CardDataInfo.card_id)
  return card_id_.GetNoArena();
}
inline void CardDataInfo::set_card_id(const ::std::string& value) {
  set_has_card_id();
  card_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CardDataInfo.card_id)
}
#if LANG_CXX11
inline void CardDataInfo::set_card_id(::std::string&& value) {
  set_has_card_id();
  card_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CardDataInfo.card_id)
}
#endif
inline void CardDataInfo::set_card_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_card_id();
  card_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CardDataInfo.card_id)
}
inline void CardDataInfo::set_card_id(const char* value, size_t size) {
  set_has_card_id();
  card_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CardDataInfo.card_id)
}
inline ::std::string* CardDataInfo::mutable_card_id() {
  set_has_card_id();
  // @@protoc_insertion_point(field_mutable:micromsg.CardDataInfo.card_id)
  return card_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CardDataInfo::release_card_id() {
  // @@protoc_insertion_point(field_release:micromsg.CardDataInfo.card_id)
  clear_has_card_id();
  return card_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CardDataInfo::set_allocated_card_id(::std::string* card_id) {
  if (card_id != NULL) {
    set_has_card_id();
  } else {
    clear_has_card_id();
  }
  card_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), card_id);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CardDataInfo.card_id)
}

// -------------------------------------------------------------------

// BatchGetCardItem

// optional string card_id = 1;
inline bool BatchGetCardItem::has_card_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchGetCardItem::set_has_card_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchGetCardItem::clear_has_card_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchGetCardItem::clear_card_id() {
  card_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_card_id();
}
inline const ::std::string& BatchGetCardItem::card_id() const {
  // @@protoc_insertion_point(field_get:micromsg.BatchGetCardItem.card_id)
  return card_id_.GetNoArena();
}
inline void BatchGetCardItem::set_card_id(const ::std::string& value) {
  set_has_card_id();
  card_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BatchGetCardItem.card_id)
}
#if LANG_CXX11
inline void BatchGetCardItem::set_card_id(::std::string&& value) {
  set_has_card_id();
  card_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BatchGetCardItem.card_id)
}
#endif
inline void BatchGetCardItem::set_card_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_card_id();
  card_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BatchGetCardItem.card_id)
}
inline void BatchGetCardItem::set_card_id(const char* value, size_t size) {
  set_has_card_id();
  card_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BatchGetCardItem.card_id)
}
inline ::std::string* BatchGetCardItem::mutable_card_id() {
  set_has_card_id();
  // @@protoc_insertion_point(field_mutable:micromsg.BatchGetCardItem.card_id)
  return card_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BatchGetCardItem::release_card_id() {
  // @@protoc_insertion_point(field_release:micromsg.BatchGetCardItem.card_id)
  clear_has_card_id();
  return card_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BatchGetCardItem::set_allocated_card_id(::std::string* card_id) {
  if (card_id != NULL) {
    set_has_card_id();
  } else {
    clear_has_card_id();
  }
  card_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), card_id);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BatchGetCardItem.card_id)
}

// optional .micromsg.CardDataInfo card_data_info = 2;
inline bool BatchGetCardItem::has_card_data_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BatchGetCardItem::set_has_card_data_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BatchGetCardItem::clear_has_card_data_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BatchGetCardItem::clear_card_data_info() {
  if (card_data_info_ != NULL) card_data_info_->::micromsg::CardDataInfo::Clear();
  clear_has_card_data_info();
}
inline const ::micromsg::CardDataInfo& BatchGetCardItem::card_data_info() const {
  // @@protoc_insertion_point(field_get:micromsg.BatchGetCardItem.card_data_info)
  return card_data_info_ != NULL ? *card_data_info_
                         : *::micromsg::CardDataInfo::internal_default_instance();
}
inline ::micromsg::CardDataInfo* BatchGetCardItem::mutable_card_data_info() {
  set_has_card_data_info();
  if (card_data_info_ == NULL) {
    card_data_info_ = new ::micromsg::CardDataInfo;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.BatchGetCardItem.card_data_info)
  return card_data_info_;
}
inline ::micromsg::CardDataInfo* BatchGetCardItem::release_card_data_info() {
  // @@protoc_insertion_point(field_release:micromsg.BatchGetCardItem.card_data_info)
  clear_has_card_data_info();
  ::micromsg::CardDataInfo* temp = card_data_info_;
  card_data_info_ = NULL;
  return temp;
}
inline void BatchGetCardItem::set_allocated_card_data_info(::micromsg::CardDataInfo* card_data_info) {
  delete card_data_info_;
  card_data_info_ = card_data_info;
  if (card_data_info) {
    set_has_card_data_info();
  } else {
    clear_has_card_data_info();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.BatchGetCardItem.card_data_info)
}

// -------------------------------------------------------------------

// BatchGetCardArray

// repeated .micromsg.BatchGetCardItem card_array = 1;
inline int BatchGetCardArray::card_array_size() const {
  return card_array_.size();
}
inline void BatchGetCardArray::clear_card_array() {
  card_array_.Clear();
}
inline const ::micromsg::BatchGetCardItem& BatchGetCardArray::card_array(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.BatchGetCardArray.card_array)
  return card_array_.Get(index);
}
inline ::micromsg::BatchGetCardItem* BatchGetCardArray::mutable_card_array(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.BatchGetCardArray.card_array)
  return card_array_.Mutable(index);
}
inline ::micromsg::BatchGetCardItem* BatchGetCardArray::add_card_array() {
  // @@protoc_insertion_point(field_add:micromsg.BatchGetCardArray.card_array)
  return card_array_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::BatchGetCardItem >*
BatchGetCardArray::mutable_card_array() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.BatchGetCardArray.card_array)
  return &card_array_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::BatchGetCardItem >&
BatchGetCardArray::card_array() const {
  // @@protoc_insertion_point(field_list:micromsg.BatchGetCardArray.card_array)
  return card_array_;
}

// -------------------------------------------------------------------

// CardTpInfoItem

// optional string card_tp_id = 1;
inline bool CardTpInfoItem::has_card_tp_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CardTpInfoItem::set_has_card_tp_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CardTpInfoItem::clear_has_card_tp_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CardTpInfoItem::clear_card_tp_id() {
  card_tp_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_card_tp_id();
}
inline const ::std::string& CardTpInfoItem::card_tp_id() const {
  // @@protoc_insertion_point(field_get:micromsg.CardTpInfoItem.card_tp_id)
  return card_tp_id_.GetNoArena();
}
inline void CardTpInfoItem::set_card_tp_id(const ::std::string& value) {
  set_has_card_tp_id();
  card_tp_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CardTpInfoItem.card_tp_id)
}
#if LANG_CXX11
inline void CardTpInfoItem::set_card_tp_id(::std::string&& value) {
  set_has_card_tp_id();
  card_tp_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CardTpInfoItem.card_tp_id)
}
#endif
inline void CardTpInfoItem::set_card_tp_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_card_tp_id();
  card_tp_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CardTpInfoItem.card_tp_id)
}
inline void CardTpInfoItem::set_card_tp_id(const char* value, size_t size) {
  set_has_card_tp_id();
  card_tp_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CardTpInfoItem.card_tp_id)
}
inline ::std::string* CardTpInfoItem::mutable_card_tp_id() {
  set_has_card_tp_id();
  // @@protoc_insertion_point(field_mutable:micromsg.CardTpInfoItem.card_tp_id)
  return card_tp_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CardTpInfoItem::release_card_tp_id() {
  // @@protoc_insertion_point(field_release:micromsg.CardTpInfoItem.card_tp_id)
  clear_has_card_tp_id();
  return card_tp_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CardTpInfoItem::set_allocated_card_tp_id(::std::string* card_tp_id) {
  if (card_tp_id != NULL) {
    set_has_card_tp_id();
  } else {
    clear_has_card_tp_id();
  }
  card_tp_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), card_tp_id);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CardTpInfoItem.card_tp_id)
}

// optional string code = 2;
inline bool CardTpInfoItem::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CardTpInfoItem::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CardTpInfoItem::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CardTpInfoItem::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_code();
}
inline const ::std::string& CardTpInfoItem::code() const {
  // @@protoc_insertion_point(field_get:micromsg.CardTpInfoItem.code)
  return code_.GetNoArena();
}
inline void CardTpInfoItem::set_code(const ::std::string& value) {
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CardTpInfoItem.code)
}
#if LANG_CXX11
inline void CardTpInfoItem::set_code(::std::string&& value) {
  set_has_code();
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CardTpInfoItem.code)
}
#endif
inline void CardTpInfoItem::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CardTpInfoItem.code)
}
inline void CardTpInfoItem::set_code(const char* value, size_t size) {
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CardTpInfoItem.code)
}
inline ::std::string* CardTpInfoItem::mutable_code() {
  set_has_code();
  // @@protoc_insertion_point(field_mutable:micromsg.CardTpInfoItem.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CardTpInfoItem::release_code() {
  // @@protoc_insertion_point(field_release:micromsg.CardTpInfoItem.code)
  clear_has_code();
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CardTpInfoItem::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    set_has_code();
  } else {
    clear_has_code();
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CardTpInfoItem.code)
}

// -------------------------------------------------------------------

// BatchGetCardItemByTpInfoRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool BatchGetCardItemByTpInfoRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchGetCardItemByTpInfoRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchGetCardItemByTpInfoRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchGetCardItemByTpInfoRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& BatchGetCardItemByTpInfoRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.BatchGetCardItemByTpInfoRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* BatchGetCardItemByTpInfoRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.BatchGetCardItemByTpInfoRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* BatchGetCardItemByTpInfoRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.BatchGetCardItemByTpInfoRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void BatchGetCardItemByTpInfoRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.BatchGetCardItemByTpInfoRequest.BaseRequest)
}

// repeated .micromsg.CardTpInfoItem items = 2;
inline int BatchGetCardItemByTpInfoRequest::items_size() const {
  return items_.size();
}
inline void BatchGetCardItemByTpInfoRequest::clear_items() {
  items_.Clear();
}
inline const ::micromsg::CardTpInfoItem& BatchGetCardItemByTpInfoRequest::items(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.BatchGetCardItemByTpInfoRequest.items)
  return items_.Get(index);
}
inline ::micromsg::CardTpInfoItem* BatchGetCardItemByTpInfoRequest::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.BatchGetCardItemByTpInfoRequest.items)
  return items_.Mutable(index);
}
inline ::micromsg::CardTpInfoItem* BatchGetCardItemByTpInfoRequest::add_items() {
  // @@protoc_insertion_point(field_add:micromsg.BatchGetCardItemByTpInfoRequest.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::CardTpInfoItem >*
BatchGetCardItemByTpInfoRequest::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.BatchGetCardItemByTpInfoRequest.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::CardTpInfoItem >&
BatchGetCardItemByTpInfoRequest::items() const {
  // @@protoc_insertion_point(field_list:micromsg.BatchGetCardItemByTpInfoRequest.items)
  return items_;
}

// -------------------------------------------------------------------

// BatchGetCardItemByTpInfoResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool BatchGetCardItemByTpInfoResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BatchGetCardItemByTpInfoResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BatchGetCardItemByTpInfoResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BatchGetCardItemByTpInfoResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& BatchGetCardItemByTpInfoResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.BatchGetCardItemByTpInfoResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* BatchGetCardItemByTpInfoResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.BatchGetCardItemByTpInfoResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* BatchGetCardItemByTpInfoResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.BatchGetCardItemByTpInfoResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void BatchGetCardItemByTpInfoResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.BatchGetCardItemByTpInfoResponse.BaseResponse)
}

// optional string json_ret = 2;
inline bool BatchGetCardItemByTpInfoResponse::has_json_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchGetCardItemByTpInfoResponse::set_has_json_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchGetCardItemByTpInfoResponse::clear_has_json_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchGetCardItemByTpInfoResponse::clear_json_ret() {
  json_ret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_json_ret();
}
inline const ::std::string& BatchGetCardItemByTpInfoResponse::json_ret() const {
  // @@protoc_insertion_point(field_get:micromsg.BatchGetCardItemByTpInfoResponse.json_ret)
  return json_ret_.GetNoArena();
}
inline void BatchGetCardItemByTpInfoResponse::set_json_ret(const ::std::string& value) {
  set_has_json_ret();
  json_ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BatchGetCardItemByTpInfoResponse.json_ret)
}
#if LANG_CXX11
inline void BatchGetCardItemByTpInfoResponse::set_json_ret(::std::string&& value) {
  set_has_json_ret();
  json_ret_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BatchGetCardItemByTpInfoResponse.json_ret)
}
#endif
inline void BatchGetCardItemByTpInfoResponse::set_json_ret(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_json_ret();
  json_ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BatchGetCardItemByTpInfoResponse.json_ret)
}
inline void BatchGetCardItemByTpInfoResponse::set_json_ret(const char* value, size_t size) {
  set_has_json_ret();
  json_ret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BatchGetCardItemByTpInfoResponse.json_ret)
}
inline ::std::string* BatchGetCardItemByTpInfoResponse::mutable_json_ret() {
  set_has_json_ret();
  // @@protoc_insertion_point(field_mutable:micromsg.BatchGetCardItemByTpInfoResponse.json_ret)
  return json_ret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BatchGetCardItemByTpInfoResponse::release_json_ret() {
  // @@protoc_insertion_point(field_release:micromsg.BatchGetCardItemByTpInfoResponse.json_ret)
  clear_has_json_ret();
  return json_ret_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BatchGetCardItemByTpInfoResponse::set_allocated_json_ret(::std::string* json_ret) {
  if (json_ret != NULL) {
    set_has_json_ret();
  } else {
    clear_has_json_ret();
  }
  json_ret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), json_ret);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BatchGetCardItemByTpInfoResponse.json_ret)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace micromsg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mmcard_2eproto__INCLUDED
