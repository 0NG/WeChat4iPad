// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mmfav.proto

#ifndef PROTOBUF_mmfav_2eproto__INCLUDED
#define PROTOBUF_mmfav_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "mmbuiltintype.pb.h"
#include "mmbase.pb.h"
// @@protoc_insertion_point(includes)
namespace micromsg {
class AddFavItem;
class AddFavItemDefaultTypeInternal;
extern AddFavItemDefaultTypeInternal _AddFavItem_default_instance_;
class AddFavItemRequest;
class AddFavItemRequestDefaultTypeInternal;
extern AddFavItemRequestDefaultTypeInternal _AddFavItemRequest_default_instance_;
class AddFavItemResponse;
class AddFavItemResponseDefaultTypeInternal;
extern AddFavItemResponseDefaultTypeInternal _AddFavItemResponse_default_instance_;
class AdditionalContactList;
class AdditionalContactListDefaultTypeInternal;
extern AdditionalContactListDefaultTypeInternal _AdditionalContactList_default_instance_;
class BaseRequest;
class BaseRequestDefaultTypeInternal;
extern BaseRequestDefaultTypeInternal _BaseRequest_default_instance_;
class BaseResponse;
class BaseResponseDefaultTypeInternal;
extern BaseResponseDefaultTypeInternal _BaseResponse_default_instance_;
class BatchDelFavItemRequest;
class BatchDelFavItemRequestDefaultTypeInternal;
extern BatchDelFavItemRequestDefaultTypeInternal _BatchDelFavItemRequest_default_instance_;
class BatchDelFavItemResponse;
class BatchDelFavItemResponseDefaultTypeInternal;
extern BatchDelFavItemResponseDefaultTypeInternal _BatchDelFavItemResponse_default_instance_;
class BatchGetFavItemRequest;
class BatchGetFavItemRequestDefaultTypeInternal;
extern BatchGetFavItemRequestDefaultTypeInternal _BatchGetFavItemRequest_default_instance_;
class BatchGetFavItemResponse;
class BatchGetFavItemResponseDefaultTypeInternal;
extern BatchGetFavItemResponseDefaultTypeInternal _BatchGetFavItemResponse_default_instance_;
class BatchTransCDNRequest;
class BatchTransCDNRequestDefaultTypeInternal;
extern BatchTransCDNRequestDefaultTypeInternal _BatchTransCDNRequest_default_instance_;
class BatchTransCDNResponse;
class BatchTransCDNResponseDefaultTypeInternal;
extern BatchTransCDNResponseDefaultTypeInternal _BatchTransCDNResponse_default_instance_;
class BindEmailRequest;
class BindEmailRequestDefaultTypeInternal;
extern BindEmailRequestDefaultTypeInternal _BindEmailRequest_default_instance_;
class BindEmailResponse;
class BindEmailResponseDefaultTypeInternal;
extern BindEmailResponseDefaultTypeInternal _BindEmailResponse_default_instance_;
class BuiltinIP;
class BuiltinIPDefaultTypeInternal;
extern BuiltinIPDefaultTypeInternal _BuiltinIP_default_instance_;
class BuiltinIPList;
class BuiltinIPListDefaultTypeInternal;
extern BuiltinIPListDefaultTypeInternal _BuiltinIPList_default_instance_;
class CDNDnsInfo;
class CDNDnsInfoDefaultTypeInternal;
extern CDNDnsInfoDefaultTypeInternal _CDNDnsInfo_default_instance_;
class ChatRoomMemberData;
class ChatRoomMemberDataDefaultTypeInternal;
extern ChatRoomMemberDataDefaultTypeInternal _ChatRoomMemberData_default_instance_;
class ChatRoomMemberInfo;
class ChatRoomMemberInfoDefaultTypeInternal;
extern ChatRoomMemberInfoDefaultTypeInternal _ChatRoomMemberInfo_default_instance_;
class CheckCDN;
class CheckCDNDefaultTypeInternal;
extern CheckCDNDefaultTypeInternal _CheckCDN_default_instance_;
class CheckCDNRequest;
class CheckCDNRequestDefaultTypeInternal;
extern CheckCDNRequestDefaultTypeInternal _CheckCDNRequest_default_instance_;
class CheckCDNResponse;
class CheckCDNResponseDefaultTypeInternal;
extern CheckCDNResponseDefaultTypeInternal _CheckCDNResponse_default_instance_;
class CheckFavItemRequest;
class CheckFavItemRequestDefaultTypeInternal;
extern CheckFavItemRequestDefaultTypeInternal _CheckFavItemRequest_default_instance_;
class CheckFavItemResponse;
class CheckFavItemResponseDefaultTypeInternal;
extern CheckFavItemResponseDefaultTypeInternal _CheckFavItemResponse_default_instance_;
class CmdItem;
class CmdItemDefaultTypeInternal;
extern CmdItemDefaultTypeInternal _CmdItem_default_instance_;
class CmdList;
class CmdListDefaultTypeInternal;
extern CmdListDefaultTypeInternal _CmdList_default_instance_;
class CustomizedInfo;
class CustomizedInfoDefaultTypeInternal;
extern CustomizedInfoDefaultTypeInternal _CustomizedInfo_default_instance_;
class DelFavItemRsp;
class DelFavItemRspDefaultTypeInternal;
extern DelFavItemRspDefaultTypeInternal _DelFavItemRsp_default_instance_;
class DelMemberReq;
class DelMemberReqDefaultTypeInternal;
extern DelMemberReqDefaultTypeInternal _DelMemberReq_default_instance_;
class DelMemberResp;
class DelMemberRespDefaultTypeInternal;
extern DelMemberRespDefaultTypeInternal _DelMemberResp_default_instance_;
class DisturbSetting;
class DisturbSettingDefaultTypeInternal;
extern DisturbSettingDefaultTypeInternal _DisturbSetting_default_instance_;
class DisturbTimeSpan;
class DisturbTimeSpanDefaultTypeInternal;
extern DisturbTimeSpanDefaultTypeInternal _DisturbTimeSpan_default_instance_;
class FavCDNItem;
class FavCDNItemDefaultTypeInternal;
extern FavCDNItemDefaultTypeInternal _FavCDNItem_default_instance_;
class FavObject;
class FavObjectDefaultTypeInternal;
extern FavObjectDefaultTypeInternal _FavObject_default_instance_;
class FavSyncRequest;
class FavSyncRequestDefaultTypeInternal;
extern FavSyncRequestDefaultTypeInternal _FavSyncRequest_default_instance_;
class FavSyncResponse;
class FavSyncResponseDefaultTypeInternal;
extern FavSyncResponseDefaultTypeInternal _FavSyncResponse_default_instance_;
class FavVideoInfo;
class FavVideoInfoDefaultTypeInternal;
extern FavVideoInfoDefaultTypeInternal _FavVideoInfo_default_instance_;
class GetFavInfoRequest;
class GetFavInfoRequestDefaultTypeInternal;
extern GetFavInfoRequestDefaultTypeInternal _GetFavInfoRequest_default_instance_;
class GetFavInfoResponse;
class GetFavInfoResponseDefaultTypeInternal;
extern GetFavInfoResponseDefaultTypeInternal _GetFavInfoResponse_default_instance_;
class GetLocationRequest;
class GetLocationRequestDefaultTypeInternal;
extern GetLocationRequestDefaultTypeInternal _GetLocationRequest_default_instance_;
class GetLocationResponse;
class GetLocationResponseDefaultTypeInternal;
extern GetLocationResponseDefaultTypeInternal _GetLocationResponse_default_instance_;
class GmailInfo;
class GmailInfoDefaultTypeInternal;
extern GmailInfoDefaultTypeInternal _GmailInfo_default_instance_;
class GmailList;
class GmailListDefaultTypeInternal;
extern GmailListDefaultTypeInternal _GmailList_default_instance_;
class HardDevice;
class HardDeviceDefaultTypeInternal;
extern HardDeviceDefaultTypeInternal _HardDevice_default_instance_;
class Host;
class HostDefaultTypeInternal;
extern HostDefaultTypeInternal _Host_default_instance_;
class HostList;
class HostListDefaultTypeInternal;
extern HostListDefaultTypeInternal _HostList_default_instance_;
class LinkedinContactItem;
class LinkedinContactItemDefaultTypeInternal;
extern LinkedinContactItemDefaultTypeInternal _LinkedinContactItem_default_instance_;
class MemberReq;
class MemberReqDefaultTypeInternal;
extern MemberReqDefaultTypeInternal _MemberReq_default_instance_;
class MemberResp;
class MemberRespDefaultTypeInternal;
extern MemberRespDefaultTypeInternal _MemberResp_default_instance_;
class ModContact;
class ModContactDefaultTypeInternal;
extern ModContactDefaultTypeInternal _ModContact_default_instance_;
class ModFavIndex;
class ModFavIndexDefaultTypeInternal;
extern ModFavIndexDefaultTypeInternal _ModFavIndex_default_instance_;
class ModFavItemRequest;
class ModFavItemRequestDefaultTypeInternal;
extern ModFavItemRequestDefaultTypeInternal _ModFavItemRequest_default_instance_;
class ModFavItemResponse;
class ModFavItemResponseDefaultTypeInternal;
extern ModFavItemResponseDefaultTypeInternal _ModFavItemResponse_default_instance_;
class ModFavObject;
class ModFavObjectDefaultTypeInternal;
extern ModFavObjectDefaultTypeInternal _ModFavObject_default_instance_;
class ModUserInfo;
class ModUserInfoDefaultTypeInternal;
extern ModUserInfoDefaultTypeInternal _ModUserInfo_default_instance_;
class NetworkControl;
class NetworkControlDefaultTypeInternal;
extern NetworkControlDefaultTypeInternal _NetworkControl_default_instance_;
class PatternLockInfo;
class PatternLockInfoDefaultTypeInternal;
extern PatternLockInfoDefaultTypeInternal _PatternLockInfo_default_instance_;
class PluginKey;
class PluginKeyDefaultTypeInternal;
extern PluginKeyDefaultTypeInternal _PluginKey_default_instance_;
class PluginKeyList;
class PluginKeyListDefaultTypeInternal;
extern PluginKeyListDefaultTypeInternal _PluginKeyList_default_instance_;
class PositionInfo;
class PositionInfoDefaultTypeInternal;
extern PositionInfoDefaultTypeInternal _PositionInfo_default_instance_;
class RoomInfo;
class RoomInfoDefaultTypeInternal;
extern RoomInfoDefaultTypeInternal _RoomInfo_default_instance_;
class SKBuiltinBuffer_t;
class SKBuiltinBuffer_tDefaultTypeInternal;
extern SKBuiltinBuffer_tDefaultTypeInternal _SKBuiltinBuffer_t_default_instance_;
class SKBuiltinChar_t;
class SKBuiltinChar_tDefaultTypeInternal;
extern SKBuiltinChar_tDefaultTypeInternal _SKBuiltinChar_t_default_instance_;
class SKBuiltinDouble64_t;
class SKBuiltinDouble64_tDefaultTypeInternal;
extern SKBuiltinDouble64_tDefaultTypeInternal _SKBuiltinDouble64_t_default_instance_;
class SKBuiltinFloat32_t;
class SKBuiltinFloat32_tDefaultTypeInternal;
extern SKBuiltinFloat32_tDefaultTypeInternal _SKBuiltinFloat32_t_default_instance_;
class SKBuiltinInt16_t;
class SKBuiltinInt16_tDefaultTypeInternal;
extern SKBuiltinInt16_tDefaultTypeInternal _SKBuiltinInt16_t_default_instance_;
class SKBuiltinInt32_t;
class SKBuiltinInt32_tDefaultTypeInternal;
extern SKBuiltinInt32_tDefaultTypeInternal _SKBuiltinInt32_t_default_instance_;
class SKBuiltinInt64_t;
class SKBuiltinInt64_tDefaultTypeInternal;
extern SKBuiltinInt64_tDefaultTypeInternal _SKBuiltinInt64_t_default_instance_;
class SKBuiltinInt8_t;
class SKBuiltinInt8_tDefaultTypeInternal;
extern SKBuiltinInt8_tDefaultTypeInternal _SKBuiltinInt8_t_default_instance_;
class SKBuiltinString_t;
class SKBuiltinString_tDefaultTypeInternal;
extern SKBuiltinString_tDefaultTypeInternal _SKBuiltinString_t_default_instance_;
class SKBuiltinUchar_t;
class SKBuiltinUchar_tDefaultTypeInternal;
extern SKBuiltinUchar_tDefaultTypeInternal _SKBuiltinUchar_t_default_instance_;
class SKBuiltinUint16_t;
class SKBuiltinUint16_tDefaultTypeInternal;
extern SKBuiltinUint16_tDefaultTypeInternal _SKBuiltinUint16_t_default_instance_;
class SKBuiltinUint32_t;
class SKBuiltinUint32_tDefaultTypeInternal;
extern SKBuiltinUint32_tDefaultTypeInternal _SKBuiltinUint32_t_default_instance_;
class SKBuiltinUint64_t;
class SKBuiltinUint64_tDefaultTypeInternal;
extern SKBuiltinUint64_tDefaultTypeInternal _SKBuiltinUint64_t_default_instance_;
class SKBuiltinUint8_t;
class SKBuiltinUint8_tDefaultTypeInternal;
extern SKBuiltinUint8_tDefaultTypeInternal _SKBuiltinUint8_t_default_instance_;
class SafeDevice;
class SafeDeviceDefaultTypeInternal;
extern SafeDeviceDefaultTypeInternal _SafeDevice_default_instance_;
class SafeDeviceList;
class SafeDeviceListDefaultTypeInternal;
extern SafeDeviceListDefaultTypeInternal _SafeDeviceList_default_instance_;
class ShakeSyncRequest;
class ShakeSyncRequestDefaultTypeInternal;
extern ShakeSyncRequestDefaultTypeInternal _ShakeSyncRequest_default_instance_;
class ShakeSyncResponse;
class ShakeSyncResponseDefaultTypeInternal;
extern ShakeSyncResponseDefaultTypeInternal _ShakeSyncResponse_default_instance_;
class ShareFavKey;
class ShareFavKeyDefaultTypeInternal;
extern ShareFavKeyDefaultTypeInternal _ShareFavKey_default_instance_;
class ShareFavRequest;
class ShareFavRequestDefaultTypeInternal;
extern ShareFavRequestDefaultTypeInternal _ShareFavRequest_default_instance_;
class ShareFavResponse;
class ShareFavResponseDefaultTypeInternal;
extern ShareFavResponseDefaultTypeInternal _ShareFavResponse_default_instance_;
class ShowStyleKey;
class ShowStyleKeyDefaultTypeInternal;
extern ShowStyleKeyDefaultTypeInternal _ShowStyleKey_default_instance_;
class SnsUserInfo;
class SnsUserInfoDefaultTypeInternal;
extern SnsUserInfoDefaultTypeInternal _SnsUserInfo_default_instance_;
class StyleKeyVal;
class StyleKeyValDefaultTypeInternal;
extern StyleKeyValDefaultTypeInternal _StyleKeyVal_default_instance_;
class TransCDNItem;
class TransCDNItemDefaultTypeInternal;
extern TransCDNItemDefaultTypeInternal _TransCDNItem_default_instance_;
class UserInfoExt;
class UserInfoExtDefaultTypeInternal;
extern UserInfoExtDefaultTypeInternal _UserInfoExt_default_instance_;
}  // namespace micromsg

namespace micromsg {

namespace protobuf_mmfav_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_mmfav_2eproto

// ===================================================================

class AddFavItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.AddFavItem) */ {
 public:
  AddFavItem();
  virtual ~AddFavItem();

  AddFavItem(const AddFavItem& from);

  inline AddFavItem& operator=(const AddFavItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddFavItem& default_instance();

  static inline const AddFavItem* internal_default_instance() {
    return reinterpret_cast<const AddFavItem*>(
               &_AddFavItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(AddFavItem* other);

  // implements Message ----------------------------------------------

  inline AddFavItem* New() const PROTOBUF_FINAL { return New(NULL); }

  AddFavItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddFavItem& from);
  void MergeFrom(const AddFavItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddFavItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 FavId = 1;
  bool has_favid() const;
  void clear_favid();
  static const int kFavIdFieldNumber = 1;
  ::google::protobuf::int32 favid() const;
  void set_favid(::google::protobuf::int32 value);

  // required int32 Type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // required uint32 Flag = 3;
  bool has_flag() const;
  void clear_flag();
  static const int kFlagFieldNumber = 3;
  ::google::protobuf::uint32 flag() const;
  void set_flag(::google::protobuf::uint32 value);

  // required uint32 UpdateTime = 4;
  bool has_updatetime() const;
  void clear_updatetime();
  static const int kUpdateTimeFieldNumber = 4;
  ::google::protobuf::uint32 updatetime() const;
  void set_updatetime(::google::protobuf::uint32 value);

  // required uint32 UpdateSeq = 5;
  bool has_updateseq() const;
  void clear_updateseq();
  static const int kUpdateSeqFieldNumber = 5;
  ::google::protobuf::uint32 updateseq() const;
  void set_updateseq(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.AddFavItem)
 private:
  void set_has_favid();
  void clear_has_favid();
  void set_has_type();
  void clear_has_type();
  void set_has_flag();
  void clear_has_flag();
  void set_has_updatetime();
  void clear_has_updatetime();
  void set_has_updateseq();
  void clear_has_updateseq();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 favid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::uint32 flag_;
  ::google::protobuf::uint32 updatetime_;
  ::google::protobuf::uint32 updateseq_;
  friend struct protobuf_mmfav_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckFavItemRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.CheckFavItemRequest) */ {
 public:
  CheckFavItemRequest();
  virtual ~CheckFavItemRequest();

  CheckFavItemRequest(const CheckFavItemRequest& from);

  inline CheckFavItemRequest& operator=(const CheckFavItemRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckFavItemRequest& default_instance();

  static inline const CheckFavItemRequest* internal_default_instance() {
    return reinterpret_cast<const CheckFavItemRequest*>(
               &_CheckFavItemRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CheckFavItemRequest* other);

  // implements Message ----------------------------------------------

  inline CheckFavItemRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckFavItemRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckFavItemRequest& from);
  void MergeFrom(const CheckFavItemRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckFavItemRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string SourceId = 3;
  bool has_sourceid() const;
  void clear_sourceid();
  static const int kSourceIdFieldNumber = 3;
  const ::std::string& sourceid() const;
  void set_sourceid(const ::std::string& value);
  #if LANG_CXX11
  void set_sourceid(::std::string&& value);
  #endif
  void set_sourceid(const char* value);
  void set_sourceid(const char* value, size_t size);
  ::std::string* mutable_sourceid();
  ::std::string* release_sourceid();
  void set_allocated_sourceid(::std::string* sourceid);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 SourceType = 2;
  bool has_sourcetype() const;
  void clear_sourcetype();
  static const int kSourceTypeFieldNumber = 2;
  ::google::protobuf::uint32 sourcetype() const;
  void set_sourcetype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.CheckFavItemRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_sourcetype();
  void clear_has_sourcetype();
  void set_has_sourceid();
  void clear_has_sourceid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr sourceid_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 sourcetype_;
  friend struct protobuf_mmfav_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FavVideoInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.FavVideoInfo) */ {
 public:
  FavVideoInfo();
  virtual ~FavVideoInfo();

  FavVideoInfo(const FavVideoInfo& from);

  inline FavVideoInfo& operator=(const FavVideoInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FavVideoInfo& default_instance();

  static inline const FavVideoInfo* internal_default_instance() {
    return reinterpret_cast<const FavVideoInfo*>(
               &_FavVideoInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(FavVideoInfo* other);

  // implements Message ----------------------------------------------

  inline FavVideoInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  FavVideoInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FavVideoInfo& from);
  void MergeFrom(const FavVideoInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FavVideoInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string FileId = 1;
  bool has_fileid() const;
  void clear_fileid();
  static const int kFileIdFieldNumber = 1;
  const ::std::string& fileid() const;
  void set_fileid(const ::std::string& value);
  #if LANG_CXX11
  void set_fileid(::std::string&& value);
  #endif
  void set_fileid(const char* value);
  void set_fileid(const char* value, size_t size);
  ::std::string* mutable_fileid();
  ::std::string* release_fileid();
  void set_allocated_fileid(::std::string* fileid);

  // optional string AesKey = 2;
  bool has_aeskey() const;
  void clear_aeskey();
  static const int kAesKeyFieldNumber = 2;
  const ::std::string& aeskey() const;
  void set_aeskey(const ::std::string& value);
  #if LANG_CXX11
  void set_aeskey(::std::string&& value);
  #endif
  void set_aeskey(const char* value);
  void set_aeskey(const char* value, size_t size);
  ::std::string* mutable_aeskey();
  ::std::string* release_aeskey();
  void set_allocated_aeskey(::std::string* aeskey);

  // optional string VideoId = 3;
  bool has_videoid() const;
  void clear_videoid();
  static const int kVideoIdFieldNumber = 3;
  const ::std::string& videoid() const;
  void set_videoid(const ::std::string& value);
  #if LANG_CXX11
  void set_videoid(::std::string&& value);
  #endif
  void set_videoid(const char* value);
  void set_videoid(const char* value, size_t size);
  ::std::string* mutable_videoid();
  ::std::string* release_videoid();
  void set_allocated_videoid(::std::string* videoid);

  // @@protoc_insertion_point(class_scope:micromsg.FavVideoInfo)
 private:
  void set_has_fileid();
  void clear_has_fileid();
  void set_has_aeskey();
  void clear_has_aeskey();
  void set_has_videoid();
  void clear_has_videoid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr fileid_;
  ::google::protobuf::internal::ArenaStringPtr aeskey_;
  ::google::protobuf::internal::ArenaStringPtr videoid_;
  friend struct protobuf_mmfav_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShareFavKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ShareFavKey) */ {
 public:
  ShareFavKey();
  virtual ~ShareFavKey();

  ShareFavKey(const ShareFavKey& from);

  inline ShareFavKey& operator=(const ShareFavKey& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShareFavKey& default_instance();

  static inline const ShareFavKey* internal_default_instance() {
    return reinterpret_cast<const ShareFavKey*>(
               &_ShareFavKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ShareFavKey* other);

  // implements Message ----------------------------------------------

  inline ShareFavKey* New() const PROTOBUF_FINAL { return New(NULL); }

  ShareFavKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShareFavKey& from);
  void MergeFrom(const ShareFavKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShareFavKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ToUser = 2;
  bool has_touser() const;
  void clear_touser();
  static const int kToUserFieldNumber = 2;
  const ::std::string& touser() const;
  void set_touser(const ::std::string& value);
  #if LANG_CXX11
  void set_touser(::std::string&& value);
  #endif
  void set_touser(const char* value);
  void set_touser(const char* value, size_t size);
  ::std::string* mutable_touser();
  ::std::string* release_touser();
  void set_allocated_touser(::std::string* touser);

  // optional string ParamCheck = 6;
  bool has_paramcheck() const;
  void clear_paramcheck();
  static const int kParamCheckFieldNumber = 6;
  const ::std::string& paramcheck() const;
  void set_paramcheck(const ::std::string& value);
  #if LANG_CXX11
  void set_paramcheck(::std::string&& value);
  #endif
  void set_paramcheck(const char* value);
  void set_paramcheck(const char* value, size_t size);
  ::std::string* mutable_paramcheck();
  ::std::string* release_paramcheck();
  void set_allocated_paramcheck(::std::string* paramcheck);

  // optional string FavItemCheck = 7;
  bool has_favitemcheck() const;
  void clear_favitemcheck();
  static const int kFavItemCheckFieldNumber = 7;
  const ::std::string& favitemcheck() const;
  void set_favitemcheck(const ::std::string& value);
  #if LANG_CXX11
  void set_favitemcheck(::std::string&& value);
  #endif
  void set_favitemcheck(const char* value);
  void set_favitemcheck(const char* value, size_t size);
  ::std::string* mutable_favitemcheck();
  ::std::string* release_favitemcheck();
  void set_allocated_favitemcheck(::std::string* favitemcheck);

  // required uint32 FromUin = 1;
  bool has_fromuin() const;
  void clear_fromuin();
  static const int kFromUinFieldNumber = 1;
  ::google::protobuf::uint32 fromuin() const;
  void set_fromuin(::google::protobuf::uint32 value);

  // required uint32 ShareTime = 3;
  bool has_sharetime() const;
  void clear_sharetime();
  static const int kShareTimeFieldNumber = 3;
  ::google::protobuf::uint32 sharetime() const;
  void set_sharetime(::google::protobuf::uint32 value);

  // required uint32 Scene = 4;
  bool has_scene() const;
  void clear_scene();
  static const int kSceneFieldNumber = 4;
  ::google::protobuf::uint32 scene() const;
  void set_scene(::google::protobuf::uint32 value);

  // required uint32 FavId = 5;
  bool has_favid() const;
  void clear_favid();
  static const int kFavIdFieldNumber = 5;
  ::google::protobuf::uint32 favid() const;
  void set_favid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ShareFavKey)
 private:
  void set_has_fromuin();
  void clear_has_fromuin();
  void set_has_touser();
  void clear_has_touser();
  void set_has_sharetime();
  void clear_has_sharetime();
  void set_has_scene();
  void clear_has_scene();
  void set_has_favid();
  void clear_has_favid();
  void set_has_paramcheck();
  void clear_has_paramcheck();
  void set_has_favitemcheck();
  void clear_has_favitemcheck();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr touser_;
  ::google::protobuf::internal::ArenaStringPtr paramcheck_;
  ::google::protobuf::internal::ArenaStringPtr favitemcheck_;
  ::google::protobuf::uint32 fromuin_;
  ::google::protobuf::uint32 sharetime_;
  ::google::protobuf::uint32 scene_;
  ::google::protobuf::uint32 favid_;
  friend struct protobuf_mmfav_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckFavItemResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.CheckFavItemResponse) */ {
 public:
  CheckFavItemResponse();
  virtual ~CheckFavItemResponse();

  CheckFavItemResponse(const CheckFavItemResponse& from);

  inline CheckFavItemResponse& operator=(const CheckFavItemResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckFavItemResponse& default_instance();

  static inline const CheckFavItemResponse* internal_default_instance() {
    return reinterpret_cast<const CheckFavItemResponse*>(
               &_CheckFavItemResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(CheckFavItemResponse* other);

  // implements Message ----------------------------------------------

  inline CheckFavItemResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckFavItemResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckFavItemResponse& from);
  void MergeFrom(const CheckFavItemResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckFavItemResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // @@protoc_insertion_point(class_scope:micromsg.CheckFavItemResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  friend struct protobuf_mmfav_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModFavIndex : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ModFavIndex) */ {
 public:
  ModFavIndex();
  virtual ~ModFavIndex();

  ModFavIndex(const ModFavIndex& from);

  inline ModFavIndex& operator=(const ModFavIndex& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModFavIndex& default_instance();

  static inline const ModFavIndex* internal_default_instance() {
    return reinterpret_cast<const ModFavIndex*>(
               &_ModFavIndex_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ModFavIndex* other);

  // implements Message ----------------------------------------------

  inline ModFavIndex* New() const PROTOBUF_FINAL { return New(NULL); }

  ModFavIndex* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModFavIndex& from);
  void MergeFrom(const ModFavIndex& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModFavIndex* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ModField = 1;
  bool has_modfield() const;
  void clear_modfield();
  static const int kModFieldFieldNumber = 1;
  ::google::protobuf::uint32 modfield() const;
  void set_modfield(::google::protobuf::uint32 value);

  // required uint32 ModValue = 2;
  bool has_modvalue() const;
  void clear_modvalue();
  static const int kModValueFieldNumber = 2;
  ::google::protobuf::uint32 modvalue() const;
  void set_modvalue(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ModFavIndex)
 private:
  void set_has_modfield();
  void clear_has_modfield();
  void set_has_modvalue();
  void clear_has_modvalue();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 modfield_;
  ::google::protobuf::uint32 modvalue_;
  friend struct protobuf_mmfav_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModFavObject : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ModFavObject) */ {
 public:
  ModFavObject();
  virtual ~ModFavObject();

  ModFavObject(const ModFavObject& from);

  inline ModFavObject& operator=(const ModFavObject& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModFavObject& default_instance();

  static inline const ModFavObject* internal_default_instance() {
    return reinterpret_cast<const ModFavObject*>(
               &_ModFavObject_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ModFavObject* other);

  // implements Message ----------------------------------------------

  inline ModFavObject* New() const PROTOBUF_FINAL { return New(NULL); }

  ModFavObject* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModFavObject& from);
  void MergeFrom(const ModFavObject& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModFavObject* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string TagName = 1;
  bool has_tagname() const;
  void clear_tagname();
  static const int kTagNameFieldNumber = 1;
  const ::std::string& tagname() const;
  void set_tagname(const ::std::string& value);
  #if LANG_CXX11
  void set_tagname(::std::string&& value);
  #endif
  void set_tagname(const char* value);
  void set_tagname(const char* value, size_t size);
  ::std::string* mutable_tagname();
  ::std::string* release_tagname();
  void set_allocated_tagname(::std::string* tagname);

  // optional string AttrName = 2;
  bool has_attrname() const;
  void clear_attrname();
  static const int kAttrNameFieldNumber = 2;
  const ::std::string& attrname() const;
  void set_attrname(const ::std::string& value);
  #if LANG_CXX11
  void set_attrname(::std::string&& value);
  #endif
  void set_attrname(const char* value);
  void set_attrname(const char* value, size_t size);
  ::std::string* mutable_attrname();
  ::std::string* release_attrname();
  void set_allocated_attrname(::std::string* attrname);

  // optional string Value = 3;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // optional uint32 Type = 4;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ModFavObject)
 private:
  void set_has_tagname();
  void clear_has_tagname();
  void set_has_attrname();
  void clear_has_attrname();
  void set_has_value();
  void clear_has_value();
  void set_has_type();
  void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr tagname_;
  ::google::protobuf::internal::ArenaStringPtr attrname_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::uint32 type_;
  friend struct protobuf_mmfav_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModFavItemRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ModFavItemRequest) */ {
 public:
  ModFavItemRequest();
  virtual ~ModFavItemRequest();

  ModFavItemRequest(const ModFavItemRequest& from);

  inline ModFavItemRequest& operator=(const ModFavItemRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModFavItemRequest& default_instance();

  static inline const ModFavItemRequest* internal_default_instance() {
    return reinterpret_cast<const ModFavItemRequest*>(
               &_ModFavItemRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(ModFavItemRequest* other);

  // implements Message ----------------------------------------------

  inline ModFavItemRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ModFavItemRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModFavItemRequest& from);
  void MergeFrom(const ModFavItemRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModFavItemRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.ModFavIndex IndexList = 4;
  int indexlist_size() const;
  void clear_indexlist();
  static const int kIndexListFieldNumber = 4;
  const ::micromsg::ModFavIndex& indexlist(int index) const;
  ::micromsg::ModFavIndex* mutable_indexlist(int index);
  ::micromsg::ModFavIndex* add_indexlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::ModFavIndex >*
      mutable_indexlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::ModFavIndex >&
      indexlist() const;

  // repeated .micromsg.ModFavObject ObjectList = 6;
  int objectlist_size() const;
  void clear_objectlist();
  static const int kObjectListFieldNumber = 6;
  const ::micromsg::ModFavObject& objectlist(int index) const;
  ::micromsg::ModFavObject* mutable_objectlist(int index);
  ::micromsg::ModFavObject* add_objectlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::ModFavObject >*
      mutable_objectlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::ModFavObject >&
      objectlist() const;

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 FavId = 2;
  bool has_favid() const;
  void clear_favid();
  static const int kFavIdFieldNumber = 2;
  ::google::protobuf::uint32 favid() const;
  void set_favid(::google::protobuf::uint32 value);

  // required uint32 IndexCount = 3;
  bool has_indexcount() const;
  void clear_indexcount();
  static const int kIndexCountFieldNumber = 3;
  ::google::protobuf::uint32 indexcount() const;
  void set_indexcount(::google::protobuf::uint32 value);

  // required uint32 ObjectCount = 5;
  bool has_objectcount() const;
  void clear_objectcount();
  static const int kObjectCountFieldNumber = 5;
  ::google::protobuf::uint32 objectcount() const;
  void set_objectcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ModFavItemRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_favid();
  void clear_has_favid();
  void set_has_indexcount();
  void clear_has_indexcount();
  void set_has_objectcount();
  void clear_has_objectcount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::ModFavIndex > indexlist_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::ModFavObject > objectlist_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 favid_;
  ::google::protobuf::uint32 indexcount_;
  ::google::protobuf::uint32 objectcount_;
  friend struct protobuf_mmfav_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModFavItemResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ModFavItemResponse) */ {
 public:
  ModFavItemResponse();
  virtual ~ModFavItemResponse();

  ModFavItemResponse(const ModFavItemResponse& from);

  inline ModFavItemResponse& operator=(const ModFavItemResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModFavItemResponse& default_instance();

  static inline const ModFavItemResponse* internal_default_instance() {
    return reinterpret_cast<const ModFavItemResponse*>(
               &_ModFavItemResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(ModFavItemResponse* other);

  // implements Message ----------------------------------------------

  inline ModFavItemResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ModFavItemResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModFavItemResponse& from);
  void MergeFrom(const ModFavItemResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModFavItemResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // @@protoc_insertion_point(class_scope:micromsg.ModFavItemResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  friend struct protobuf_mmfav_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShareFavRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ShareFavRequest) */ {
 public:
  ShareFavRequest();
  virtual ~ShareFavRequest();

  ShareFavRequest(const ShareFavRequest& from);

  inline ShareFavRequest& operator=(const ShareFavRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShareFavRequest& default_instance();

  static inline const ShareFavRequest* internal_default_instance() {
    return reinterpret_cast<const ShareFavRequest*>(
               &_ShareFavRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(ShareFavRequest* other);

  // implements Message ----------------------------------------------

  inline ShareFavRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ShareFavRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShareFavRequest& from);
  void MergeFrom(const ShareFavRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShareFavRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 FavIdList = 5 [packed = true];
  int favidlist_size() const;
  void clear_favidlist();
  static const int kFavIdListFieldNumber = 5;
  ::google::protobuf::uint32 favidlist(int index) const;
  void set_favidlist(int index, ::google::protobuf::uint32 value);
  void add_favidlist(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      favidlist() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_favidlist();

  // optional string ToUser = 2;
  bool has_touser() const;
  void clear_touser();
  static const int kToUserFieldNumber = 2;
  const ::std::string& touser() const;
  void set_touser(const ::std::string& value);
  #if LANG_CXX11
  void set_touser(::std::string&& value);
  #endif
  void set_touser(const char* value);
  void set_touser(const char* value, size_t size);
  ::std::string* mutable_touser();
  ::std::string* release_touser();
  void set_allocated_touser(::std::string* touser);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 Scene = 3;
  bool has_scene() const;
  void clear_scene();
  static const int kSceneFieldNumber = 3;
  ::google::protobuf::uint32 scene() const;
  void set_scene(::google::protobuf::uint32 value);

  // required uint32 Count = 4;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 4;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ShareFavRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_touser();
  void clear_has_touser();
  void set_has_scene();
  void clear_has_scene();
  void set_has_count();
  void clear_has_count();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > favidlist_;
  mutable int _favidlist_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr touser_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 scene_;
  ::google::protobuf::uint32 count_;
  friend struct protobuf_mmfav_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShareFavResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ShareFavResponse) */ {
 public:
  ShareFavResponse();
  virtual ~ShareFavResponse();

  ShareFavResponse(const ShareFavResponse& from);

  inline ShareFavResponse& operator=(const ShareFavResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShareFavResponse& default_instance();

  static inline const ShareFavResponse* internal_default_instance() {
    return reinterpret_cast<const ShareFavResponse*>(
               &_ShareFavResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(ShareFavResponse* other);

  // implements Message ----------------------------------------------

  inline ShareFavResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ShareFavResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShareFavResponse& from);
  void MergeFrom(const ShareFavResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShareFavResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.SKBuiltinString_t UrlList = 3;
  int urllist_size() const;
  void clear_urllist();
  static const int kUrlListFieldNumber = 3;
  const ::micromsg::SKBuiltinString_t& urllist(int index) const;
  ::micromsg::SKBuiltinString_t* mutable_urllist(int index);
  ::micromsg::SKBuiltinString_t* add_urllist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
      mutable_urllist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
      urllist() const;

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 UrlCount = 2;
  bool has_urlcount() const;
  void clear_urlcount();
  static const int kUrlCountFieldNumber = 2;
  ::google::protobuf::uint32 urlcount() const;
  void set_urlcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ShareFavResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_urlcount();
  void clear_has_urlcount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t > urllist_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 urlcount_;
  friend struct protobuf_mmfav_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddFavItemRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.AddFavItemRequest) */ {
 public:
  AddFavItemRequest();
  virtual ~AddFavItemRequest();

  AddFavItemRequest(const AddFavItemRequest& from);

  inline AddFavItemRequest& operator=(const AddFavItemRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddFavItemRequest& default_instance();

  static inline const AddFavItemRequest* internal_default_instance() {
    return reinterpret_cast<const AddFavItemRequest*>(
               &_AddFavItemRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(AddFavItemRequest* other);

  // implements Message ----------------------------------------------

  inline AddFavItemRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  AddFavItemRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddFavItemRequest& from);
  void MergeFrom(const AddFavItemRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddFavItemRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ClientId = 2;
  bool has_clientid() const;
  void clear_clientid();
  static const int kClientIdFieldNumber = 2;
  const ::std::string& clientid() const;
  void set_clientid(const ::std::string& value);
  #if LANG_CXX11
  void set_clientid(::std::string&& value);
  #endif
  void set_clientid(const char* value);
  void set_clientid(const char* value, size_t size);
  ::std::string* mutable_clientid();
  ::std::string* release_clientid();
  void set_allocated_clientid(::std::string* clientid);

  // optional string SourceId = 5;
  bool has_sourceid() const;
  void clear_sourceid();
  static const int kSourceIdFieldNumber = 5;
  const ::std::string& sourceid() const;
  void set_sourceid(const ::std::string& value);
  #if LANG_CXX11
  void set_sourceid(::std::string&& value);
  #endif
  void set_sourceid(const char* value);
  void set_sourceid(const char* value, size_t size);
  ::std::string* mutable_sourceid();
  ::std::string* release_sourceid();
  void set_allocated_sourceid(::std::string* sourceid);

  // optional string Object = 6;
  bool has_object() const;
  void clear_object();
  static const int kObjectFieldNumber = 6;
  const ::std::string& object() const;
  void set_object(const ::std::string& value);
  #if LANG_CXX11
  void set_object(::std::string&& value);
  #endif
  void set_object(const char* value);
  void set_object(const char* value, size_t size);
  ::std::string* mutable_object();
  ::std::string* release_object();
  void set_allocated_object(::std::string* object);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 Type = 3;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // required uint32 SourceType = 4;
  bool has_sourcetype() const;
  void clear_sourcetype();
  static const int kSourceTypeFieldNumber = 4;
  ::google::protobuf::uint32 sourcetype() const;
  void set_sourcetype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.AddFavItemRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_clientid();
  void clear_has_clientid();
  void set_has_type();
  void clear_has_type();
  void set_has_sourcetype();
  void clear_has_sourcetype();
  void set_has_sourceid();
  void clear_has_sourceid();
  void set_has_object();
  void clear_has_object();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr clientid_;
  ::google::protobuf::internal::ArenaStringPtr sourceid_;
  ::google::protobuf::internal::ArenaStringPtr object_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 sourcetype_;
  friend struct protobuf_mmfav_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddFavItemResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.AddFavItemResponse) */ {
 public:
  AddFavItemResponse();
  virtual ~AddFavItemResponse();

  AddFavItemResponse(const AddFavItemResponse& from);

  inline AddFavItemResponse& operator=(const AddFavItemResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddFavItemResponse& default_instance();

  static inline const AddFavItemResponse* internal_default_instance() {
    return reinterpret_cast<const AddFavItemResponse*>(
               &_AddFavItemResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(AddFavItemResponse* other);

  // implements Message ----------------------------------------------

  inline AddFavItemResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  AddFavItemResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddFavItemResponse& from);
  void MergeFrom(const AddFavItemResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddFavItemResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 FavId = 2;
  bool has_favid() const;
  void clear_favid();
  static const int kFavIdFieldNumber = 2;
  ::google::protobuf::uint32 favid() const;
  void set_favid(::google::protobuf::uint32 value);

  // required uint32 UpdateSeq = 3;
  bool has_updateseq() const;
  void clear_updateseq();
  static const int kUpdateSeqFieldNumber = 3;
  ::google::protobuf::uint32 updateseq() const;
  void set_updateseq(::google::protobuf::uint32 value);

  // optional uint64 UsedSize = 4;
  bool has_usedsize() const;
  void clear_usedsize();
  static const int kUsedSizeFieldNumber = 4;
  ::google::protobuf::uint64 usedsize() const;
  void set_usedsize(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:micromsg.AddFavItemResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_favid();
  void clear_has_favid();
  void set_has_updateseq();
  void clear_has_updateseq();
  void set_has_usedsize();
  void clear_has_usedsize();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 favid_;
  ::google::protobuf::uint32 updateseq_;
  ::google::protobuf::uint64 usedsize_;
  friend struct protobuf_mmfav_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelFavItemRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.DelFavItemRsp) */ {
 public:
  DelFavItemRsp();
  virtual ~DelFavItemRsp();

  DelFavItemRsp(const DelFavItemRsp& from);

  inline DelFavItemRsp& operator=(const DelFavItemRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelFavItemRsp& default_instance();

  static inline const DelFavItemRsp* internal_default_instance() {
    return reinterpret_cast<const DelFavItemRsp*>(
               &_DelFavItemRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(DelFavItemRsp* other);

  // implements Message ----------------------------------------------

  inline DelFavItemRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  DelFavItemRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelFavItemRsp& from);
  void MergeFrom(const DelFavItemRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelFavItemRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 Ret = 1;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // required uint32 FavId = 2;
  bool has_favid() const;
  void clear_favid();
  static const int kFavIdFieldNumber = 2;
  ::google::protobuf::uint32 favid() const;
  void set_favid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.DelFavItemRsp)
 private:
  void set_has_ret();
  void clear_has_ret();
  void set_has_favid();
  void clear_has_favid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::uint32 favid_;
  friend struct protobuf_mmfav_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BatchDelFavItemRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.BatchDelFavItemRequest) */ {
 public:
  BatchDelFavItemRequest();
  virtual ~BatchDelFavItemRequest();

  BatchDelFavItemRequest(const BatchDelFavItemRequest& from);

  inline BatchDelFavItemRequest& operator=(const BatchDelFavItemRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchDelFavItemRequest& default_instance();

  static inline const BatchDelFavItemRequest* internal_default_instance() {
    return reinterpret_cast<const BatchDelFavItemRequest*>(
               &_BatchDelFavItemRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(BatchDelFavItemRequest* other);

  // implements Message ----------------------------------------------

  inline BatchDelFavItemRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  BatchDelFavItemRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BatchDelFavItemRequest& from);
  void MergeFrom(const BatchDelFavItemRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BatchDelFavItemRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 FavIdList = 3 [packed = true];
  int favidlist_size() const;
  void clear_favidlist();
  static const int kFavIdListFieldNumber = 3;
  ::google::protobuf::uint32 favidlist(int index) const;
  void set_favidlist(int index, ::google::protobuf::uint32 value);
  void add_favidlist(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      favidlist() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_favidlist();

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 Count = 2;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.BatchDelFavItemRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_count();
  void clear_has_count();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > favidlist_;
  mutable int _favidlist_cached_byte_size_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 count_;
  friend struct protobuf_mmfav_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BatchDelFavItemResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.BatchDelFavItemResponse) */ {
 public:
  BatchDelFavItemResponse();
  virtual ~BatchDelFavItemResponse();

  BatchDelFavItemResponse(const BatchDelFavItemResponse& from);

  inline BatchDelFavItemResponse& operator=(const BatchDelFavItemResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchDelFavItemResponse& default_instance();

  static inline const BatchDelFavItemResponse* internal_default_instance() {
    return reinterpret_cast<const BatchDelFavItemResponse*>(
               &_BatchDelFavItemResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(BatchDelFavItemResponse* other);

  // implements Message ----------------------------------------------

  inline BatchDelFavItemResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  BatchDelFavItemResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BatchDelFavItemResponse& from);
  void MergeFrom(const BatchDelFavItemResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BatchDelFavItemResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.DelFavItemRsp List = 3;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 3;
  const ::micromsg::DelFavItemRsp& list(int index) const;
  ::micromsg::DelFavItemRsp* mutable_list(int index);
  ::micromsg::DelFavItemRsp* add_list();
  ::google::protobuf::RepeatedPtrField< ::micromsg::DelFavItemRsp >*
      mutable_list();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::DelFavItemRsp >&
      list() const;

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 Count = 2;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.BatchDelFavItemResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_count();
  void clear_has_count();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::DelFavItemRsp > list_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 count_;
  friend struct protobuf_mmfav_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FavObject : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.FavObject) */ {
 public:
  FavObject();
  virtual ~FavObject();

  FavObject(const FavObject& from);

  inline FavObject& operator=(const FavObject& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FavObject& default_instance();

  static inline const FavObject* internal_default_instance() {
    return reinterpret_cast<const FavObject*>(
               &_FavObject_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(FavObject* other);

  // implements Message ----------------------------------------------

  inline FavObject* New() const PROTOBUF_FINAL { return New(NULL); }

  FavObject* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FavObject& from);
  void MergeFrom(const FavObject& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FavObject* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Object = 3;
  bool has_object() const;
  void clear_object();
  static const int kObjectFieldNumber = 3;
  const ::std::string& object() const;
  void set_object(const ::std::string& value);
  #if LANG_CXX11
  void set_object(::std::string&& value);
  #endif
  void set_object(const char* value);
  void set_object(const char* value, size_t size);
  ::std::string* mutable_object();
  ::std::string* release_object();
  void set_allocated_object(::std::string* object);

  // required uint32 FavId = 1;
  bool has_favid() const;
  void clear_favid();
  static const int kFavIdFieldNumber = 1;
  ::google::protobuf::uint32 favid() const;
  void set_favid(::google::protobuf::uint32 value);

  // required int32 Status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // required uint32 Flag = 4;
  bool has_flag() const;
  void clear_flag();
  static const int kFlagFieldNumber = 4;
  ::google::protobuf::uint32 flag() const;
  void set_flag(::google::protobuf::uint32 value);

  // required uint32 UpdateTime = 5;
  bool has_updatetime() const;
  void clear_updatetime();
  static const int kUpdateTimeFieldNumber = 5;
  ::google::protobuf::uint32 updatetime() const;
  void set_updatetime(::google::protobuf::uint32 value);

  // required uint32 UpdateSeq = 6;
  bool has_updateseq() const;
  void clear_updateseq();
  static const int kUpdateSeqFieldNumber = 6;
  ::google::protobuf::uint32 updateseq() const;
  void set_updateseq(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.FavObject)
 private:
  void set_has_favid();
  void clear_has_favid();
  void set_has_status();
  void clear_has_status();
  void set_has_object();
  void clear_has_object();
  void set_has_flag();
  void clear_has_flag();
  void set_has_updatetime();
  void clear_has_updatetime();
  void set_has_updateseq();
  void clear_has_updateseq();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr object_;
  ::google::protobuf::uint32 favid_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::uint32 flag_;
  ::google::protobuf::uint32 updatetime_;
  ::google::protobuf::uint32 updateseq_;
  friend struct protobuf_mmfav_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BatchGetFavItemRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.BatchGetFavItemRequest) */ {
 public:
  BatchGetFavItemRequest();
  virtual ~BatchGetFavItemRequest();

  BatchGetFavItemRequest(const BatchGetFavItemRequest& from);

  inline BatchGetFavItemRequest& operator=(const BatchGetFavItemRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchGetFavItemRequest& default_instance();

  static inline const BatchGetFavItemRequest* internal_default_instance() {
    return reinterpret_cast<const BatchGetFavItemRequest*>(
               &_BatchGetFavItemRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(BatchGetFavItemRequest* other);

  // implements Message ----------------------------------------------

  inline BatchGetFavItemRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  BatchGetFavItemRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BatchGetFavItemRequest& from);
  void MergeFrom(const BatchGetFavItemRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BatchGetFavItemRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 FavIdList = 3 [packed = true];
  int favidlist_size() const;
  void clear_favidlist();
  static const int kFavIdListFieldNumber = 3;
  ::google::protobuf::uint32 favidlist(int index) const;
  void set_favidlist(int index, ::google::protobuf::uint32 value);
  void add_favidlist(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      favidlist() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_favidlist();

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 Count = 2;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.BatchGetFavItemRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_count();
  void clear_has_count();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > favidlist_;
  mutable int _favidlist_cached_byte_size_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 count_;
  friend struct protobuf_mmfav_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BatchGetFavItemResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.BatchGetFavItemResponse) */ {
 public:
  BatchGetFavItemResponse();
  virtual ~BatchGetFavItemResponse();

  BatchGetFavItemResponse(const BatchGetFavItemResponse& from);

  inline BatchGetFavItemResponse& operator=(const BatchGetFavItemResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchGetFavItemResponse& default_instance();

  static inline const BatchGetFavItemResponse* internal_default_instance() {
    return reinterpret_cast<const BatchGetFavItemResponse*>(
               &_BatchGetFavItemResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(BatchGetFavItemResponse* other);

  // implements Message ----------------------------------------------

  inline BatchGetFavItemResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  BatchGetFavItemResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BatchGetFavItemResponse& from);
  void MergeFrom(const BatchGetFavItemResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BatchGetFavItemResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.FavObject ObjectList = 3;
  int objectlist_size() const;
  void clear_objectlist();
  static const int kObjectListFieldNumber = 3;
  const ::micromsg::FavObject& objectlist(int index) const;
  ::micromsg::FavObject* mutable_objectlist(int index);
  ::micromsg::FavObject* add_objectlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::FavObject >*
      mutable_objectlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::FavObject >&
      objectlist() const;

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 Count = 2;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.BatchGetFavItemResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_count();
  void clear_has_count();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::FavObject > objectlist_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 count_;
  friend struct protobuf_mmfav_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckCDN : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.CheckCDN) */ {
 public:
  CheckCDN();
  virtual ~CheckCDN();

  CheckCDN(const CheckCDN& from);

  inline CheckCDN& operator=(const CheckCDN& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckCDN& default_instance();

  static inline const CheckCDN* internal_default_instance() {
    return reinterpret_cast<const CheckCDN*>(
               &_CheckCDN_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(CheckCDN* other);

  // implements Message ----------------------------------------------

  inline CheckCDN* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckCDN* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckCDN& from);
  void MergeFrom(const CheckCDN& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckCDN* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string DataId = 1;
  bool has_dataid() const;
  void clear_dataid();
  static const int kDataIdFieldNumber = 1;
  const ::std::string& dataid() const;
  void set_dataid(const ::std::string& value);
  #if LANG_CXX11
  void set_dataid(::std::string&& value);
  #endif
  void set_dataid(const char* value);
  void set_dataid(const char* value, size_t size);
  ::std::string* mutable_dataid();
  ::std::string* release_dataid();
  void set_allocated_dataid(::std::string* dataid);

  // optional string FullMd5 = 2;
  bool has_fullmd5() const;
  void clear_fullmd5();
  static const int kFullMd5FieldNumber = 2;
  const ::std::string& fullmd5() const;
  void set_fullmd5(const ::std::string& value);
  #if LANG_CXX11
  void set_fullmd5(::std::string&& value);
  #endif
  void set_fullmd5(const char* value);
  void set_fullmd5(const char* value, size_t size);
  ::std::string* mutable_fullmd5();
  ::std::string* release_fullmd5();
  void set_allocated_fullmd5(::std::string* fullmd5);

  // optional string Head256Md5 = 3;
  bool has_head256md5() const;
  void clear_head256md5();
  static const int kHead256Md5FieldNumber = 3;
  const ::std::string& head256md5() const;
  void set_head256md5(const ::std::string& value);
  #if LANG_CXX11
  void set_head256md5(::std::string&& value);
  #endif
  void set_head256md5(const char* value);
  void set_head256md5(const char* value, size_t size);
  ::std::string* mutable_head256md5();
  ::std::string* release_head256md5();
  void set_allocated_head256md5(::std::string* head256md5);

  // optional string DataSourceId = 6;
  bool has_datasourceid() const;
  void clear_datasourceid();
  static const int kDataSourceIdFieldNumber = 6;
  const ::std::string& datasourceid() const;
  void set_datasourceid(const ::std::string& value);
  #if LANG_CXX11
  void set_datasourceid(::std::string&& value);
  #endif
  void set_datasourceid(const char* value);
  void set_datasourceid(const char* value, size_t size);
  ::std::string* mutable_datasourceid();
  ::std::string* release_datasourceid();
  void set_allocated_datasourceid(::std::string* datasourceid);

  // required uint32 FullSize = 4;
  bool has_fullsize() const;
  void clear_fullsize();
  static const int kFullSizeFieldNumber = 4;
  ::google::protobuf::uint32 fullsize() const;
  void set_fullsize(::google::protobuf::uint32 value);

  // required uint32 DataSourceType = 5;
  bool has_datasourcetype() const;
  void clear_datasourcetype();
  static const int kDataSourceTypeFieldNumber = 5;
  ::google::protobuf::uint32 datasourcetype() const;
  void set_datasourcetype(::google::protobuf::uint32 value);

  // required uint32 IsThumb = 7;
  bool has_isthumb() const;
  void clear_isthumb();
  static const int kIsThumbFieldNumber = 7;
  ::google::protobuf::uint32 isthumb() const;
  void set_isthumb(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.CheckCDN)
 private:
  void set_has_dataid();
  void clear_has_dataid();
  void set_has_fullmd5();
  void clear_has_fullmd5();
  void set_has_head256md5();
  void clear_has_head256md5();
  void set_has_fullsize();
  void clear_has_fullsize();
  void set_has_datasourcetype();
  void clear_has_datasourcetype();
  void set_has_datasourceid();
  void clear_has_datasourceid();
  void set_has_isthumb();
  void clear_has_isthumb();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr dataid_;
  ::google::protobuf::internal::ArenaStringPtr fullmd5_;
  ::google::protobuf::internal::ArenaStringPtr head256md5_;
  ::google::protobuf::internal::ArenaStringPtr datasourceid_;
  ::google::protobuf::uint32 fullsize_;
  ::google::protobuf::uint32 datasourcetype_;
  ::google::protobuf::uint32 isthumb_;
  friend struct protobuf_mmfav_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FavCDNItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.FavCDNItem) */ {
 public:
  FavCDNItem();
  virtual ~FavCDNItem();

  FavCDNItem(const FavCDNItem& from);

  inline FavCDNItem& operator=(const FavCDNItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FavCDNItem& default_instance();

  static inline const FavCDNItem* internal_default_instance() {
    return reinterpret_cast<const FavCDNItem*>(
               &_FavCDNItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(FavCDNItem* other);

  // implements Message ----------------------------------------------

  inline FavCDNItem* New() const PROTOBUF_FINAL { return New(NULL); }

  FavCDNItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FavCDNItem& from);
  void MergeFrom(const FavCDNItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FavCDNItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string DataId = 1;
  bool has_dataid() const;
  void clear_dataid();
  static const int kDataIdFieldNumber = 1;
  const ::std::string& dataid() const;
  void set_dataid(const ::std::string& value);
  #if LANG_CXX11
  void set_dataid(::std::string&& value);
  #endif
  void set_dataid(const char* value);
  void set_dataid(const char* value, size_t size);
  ::std::string* mutable_dataid();
  ::std::string* release_dataid();
  void set_allocated_dataid(::std::string* dataid);

  // optional string FullMd5 = 2;
  bool has_fullmd5() const;
  void clear_fullmd5();
  static const int kFullMd5FieldNumber = 2;
  const ::std::string& fullmd5() const;
  void set_fullmd5(const ::std::string& value);
  #if LANG_CXX11
  void set_fullmd5(::std::string&& value);
  #endif
  void set_fullmd5(const char* value);
  void set_fullmd5(const char* value, size_t size);
  ::std::string* mutable_fullmd5();
  ::std::string* release_fullmd5();
  void set_allocated_fullmd5(::std::string* fullmd5);

  // optional string Head256Md5 = 3;
  bool has_head256md5() const;
  void clear_head256md5();
  static const int kHead256Md5FieldNumber = 3;
  const ::std::string& head256md5() const;
  void set_head256md5(const ::std::string& value);
  #if LANG_CXX11
  void set_head256md5(::std::string&& value);
  #endif
  void set_head256md5(const char* value);
  void set_head256md5(const char* value, size_t size);
  ::std::string* mutable_head256md5();
  ::std::string* release_head256md5();
  void set_allocated_head256md5(::std::string* head256md5);

  // optional string CDNURL = 5;
  bool has_cdnurl() const;
  void clear_cdnurl();
  static const int kCDNURLFieldNumber = 5;
  const ::std::string& cdnurl() const;
  void set_cdnurl(const ::std::string& value);
  #if LANG_CXX11
  void set_cdnurl(::std::string&& value);
  #endif
  void set_cdnurl(const char* value);
  void set_cdnurl(const char* value, size_t size);
  ::std::string* mutable_cdnurl();
  ::std::string* release_cdnurl();
  void set_allocated_cdnurl(::std::string* cdnurl);

  // optional string AESKey = 6;
  bool has_aeskey() const;
  void clear_aeskey();
  static const int kAESKeyFieldNumber = 6;
  const ::std::string& aeskey() const;
  void set_aeskey(const ::std::string& value);
  #if LANG_CXX11
  void set_aeskey(::std::string&& value);
  #endif
  void set_aeskey(const char* value);
  void set_aeskey(const char* value, size_t size);
  ::std::string* mutable_aeskey();
  ::std::string* release_aeskey();
  void set_allocated_aeskey(::std::string* aeskey);

  // optional string VideoId = 8;
  bool has_videoid() const;
  void clear_videoid();
  static const int kVideoIdFieldNumber = 8;
  const ::std::string& videoid() const;
  void set_videoid(const ::std::string& value);
  #if LANG_CXX11
  void set_videoid(::std::string&& value);
  #endif
  void set_videoid(const char* value);
  void set_videoid(const char* value, size_t size);
  ::std::string* mutable_videoid();
  ::std::string* release_videoid();
  void set_allocated_videoid(::std::string* videoid);

  // required uint32 FullSize = 4;
  bool has_fullsize() const;
  void clear_fullsize();
  static const int kFullSizeFieldNumber = 4;
  ::google::protobuf::uint32 fullsize() const;
  void set_fullsize(::google::protobuf::uint32 value);

  // required int32 EncryVer = 7;
  bool has_encryver() const;
  void clear_encryver();
  static const int kEncryVerFieldNumber = 7;
  ::google::protobuf::int32 encryver() const;
  void set_encryver(::google::protobuf::int32 value);

  // required int32 Status = 9;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 9;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // required int32 DataStatus = 10;
  bool has_datastatus() const;
  void clear_datastatus();
  static const int kDataStatusFieldNumber = 10;
  ::google::protobuf::int32 datastatus() const;
  void set_datastatus(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.FavCDNItem)
 private:
  void set_has_dataid();
  void clear_has_dataid();
  void set_has_fullmd5();
  void clear_has_fullmd5();
  void set_has_head256md5();
  void clear_has_head256md5();
  void set_has_fullsize();
  void clear_has_fullsize();
  void set_has_cdnurl();
  void clear_has_cdnurl();
  void set_has_aeskey();
  void clear_has_aeskey();
  void set_has_encryver();
  void clear_has_encryver();
  void set_has_videoid();
  void clear_has_videoid();
  void set_has_status();
  void clear_has_status();
  void set_has_datastatus();
  void clear_has_datastatus();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr dataid_;
  ::google::protobuf::internal::ArenaStringPtr fullmd5_;
  ::google::protobuf::internal::ArenaStringPtr head256md5_;
  ::google::protobuf::internal::ArenaStringPtr cdnurl_;
  ::google::protobuf::internal::ArenaStringPtr aeskey_;
  ::google::protobuf::internal::ArenaStringPtr videoid_;
  ::google::protobuf::uint32 fullsize_;
  ::google::protobuf::int32 encryver_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 datastatus_;
  friend struct protobuf_mmfav_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetFavInfoRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetFavInfoRequest) */ {
 public:
  GetFavInfoRequest();
  virtual ~GetFavInfoRequest();

  GetFavInfoRequest(const GetFavInfoRequest& from);

  inline GetFavInfoRequest& operator=(const GetFavInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFavInfoRequest& default_instance();

  static inline const GetFavInfoRequest* internal_default_instance() {
    return reinterpret_cast<const GetFavInfoRequest*>(
               &_GetFavInfoRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(GetFavInfoRequest* other);

  // implements Message ----------------------------------------------

  inline GetFavInfoRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetFavInfoRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetFavInfoRequest& from);
  void MergeFrom(const GetFavInfoRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetFavInfoRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // @@protoc_insertion_point(class_scope:micromsg.GetFavInfoRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  friend struct protobuf_mmfav_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetFavInfoResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetFavInfoResponse) */ {
 public:
  GetFavInfoResponse();
  virtual ~GetFavInfoResponse();

  GetFavInfoResponse(const GetFavInfoResponse& from);

  inline GetFavInfoResponse& operator=(const GetFavInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetFavInfoResponse& default_instance();

  static inline const GetFavInfoResponse* internal_default_instance() {
    return reinterpret_cast<const GetFavInfoResponse*>(
               &_GetFavInfoResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(GetFavInfoResponse* other);

  // implements Message ----------------------------------------------

  inline GetFavInfoResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetFavInfoResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetFavInfoResponse& from);
  void MergeFrom(const GetFavInfoResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetFavInfoResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint64 UsedSize = 2;
  bool has_usedsize() const;
  void clear_usedsize();
  static const int kUsedSizeFieldNumber = 2;
  ::google::protobuf::uint64 usedsize() const;
  void set_usedsize(::google::protobuf::uint64 value);

  // required uint64 TotalSize = 3;
  bool has_totalsize() const;
  void clear_totalsize();
  static const int kTotalSizeFieldNumber = 3;
  ::google::protobuf::uint64 totalsize() const;
  void set_totalsize(::google::protobuf::uint64 value);

  // required uint32 MxFavFileSize = 4;
  bool has_mxfavfilesize() const;
  void clear_mxfavfilesize();
  static const int kMxFavFileSizeFieldNumber = 4;
  ::google::protobuf::uint32 mxfavfilesize() const;
  void set_mxfavfilesize(::google::protobuf::uint32 value);

  // required uint32 MxAutoUploadSize = 5;
  bool has_mxautouploadsize() const;
  void clear_mxautouploadsize();
  static const int kMxAutoUploadSizeFieldNumber = 5;
  ::google::protobuf::uint32 mxautouploadsize() const;
  void set_mxautouploadsize(::google::protobuf::uint32 value);

  // required uint32 MxAutoDownloadSize = 6;
  bool has_mxautodownloadsize() const;
  void clear_mxautodownloadsize();
  static const int kMxAutoDownloadSizeFieldNumber = 6;
  ::google::protobuf::uint32 mxautodownloadsize() const;
  void set_mxautodownloadsize(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetFavInfoResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_usedsize();
  void clear_has_usedsize();
  void set_has_totalsize();
  void clear_has_totalsize();
  void set_has_mxfavfilesize();
  void clear_has_mxfavfilesize();
  void set_has_mxautouploadsize();
  void clear_has_mxautouploadsize();
  void set_has_mxautodownloadsize();
  void clear_has_mxautodownloadsize();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint64 usedsize_;
  ::google::protobuf::uint64 totalsize_;
  ::google::protobuf::uint32 mxfavfilesize_;
  ::google::protobuf::uint32 mxautouploadsize_;
  ::google::protobuf::uint32 mxautodownloadsize_;
  friend struct protobuf_mmfav_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckCDNRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.CheckCDNRequest) */ {
 public:
  CheckCDNRequest();
  virtual ~CheckCDNRequest();

  CheckCDNRequest(const CheckCDNRequest& from);

  inline CheckCDNRequest& operator=(const CheckCDNRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckCDNRequest& default_instance();

  static inline const CheckCDNRequest* internal_default_instance() {
    return reinterpret_cast<const CheckCDNRequest*>(
               &_CheckCDNRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(CheckCDNRequest* other);

  // implements Message ----------------------------------------------

  inline CheckCDNRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckCDNRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckCDNRequest& from);
  void MergeFrom(const CheckCDNRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckCDNRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.CheckCDN List = 3;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 3;
  const ::micromsg::CheckCDN& list(int index) const;
  ::micromsg::CheckCDN* mutable_list(int index);
  ::micromsg::CheckCDN* add_list();
  ::google::protobuf::RepeatedPtrField< ::micromsg::CheckCDN >*
      mutable_list();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::CheckCDN >&
      list() const;

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 Count = 2;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.CheckCDNRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_count();
  void clear_has_count();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::CheckCDN > list_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 count_;
  friend struct protobuf_mmfav_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckCDNResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.CheckCDNResponse) */ {
 public:
  CheckCDNResponse();
  virtual ~CheckCDNResponse();

  CheckCDNResponse(const CheckCDNResponse& from);

  inline CheckCDNResponse& operator=(const CheckCDNResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckCDNResponse& default_instance();

  static inline const CheckCDNResponse* internal_default_instance() {
    return reinterpret_cast<const CheckCDNResponse*>(
               &_CheckCDNResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(CheckCDNResponse* other);

  // implements Message ----------------------------------------------

  inline CheckCDNResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckCDNResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckCDNResponse& from);
  void MergeFrom(const CheckCDNResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckCDNResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.FavCDNItem List = 3;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 3;
  const ::micromsg::FavCDNItem& list(int index) const;
  ::micromsg::FavCDNItem* mutable_list(int index);
  ::micromsg::FavCDNItem* add_list();
  ::google::protobuf::RepeatedPtrField< ::micromsg::FavCDNItem >*
      mutable_list();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::FavCDNItem >&
      list() const;

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 Count = 2;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.CheckCDNResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_count();
  void clear_has_count();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::FavCDNItem > list_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 count_;
  friend struct protobuf_mmfav_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FavSyncRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.FavSyncRequest) */ {
 public:
  FavSyncRequest();
  virtual ~FavSyncRequest();

  FavSyncRequest(const FavSyncRequest& from);

  inline FavSyncRequest& operator=(const FavSyncRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FavSyncRequest& default_instance();

  static inline const FavSyncRequest* internal_default_instance() {
    return reinterpret_cast<const FavSyncRequest*>(
               &_FavSyncRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(FavSyncRequest* other);

  // implements Message ----------------------------------------------

  inline FavSyncRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  FavSyncRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FavSyncRequest& from);
  void MergeFrom(const FavSyncRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FavSyncRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.SKBuiltinBuffer_t KeyBuf = 3;
  bool has_keybuf() const;
  void clear_keybuf();
  static const int kKeyBufFieldNumber = 3;
  const ::micromsg::SKBuiltinBuffer_t& keybuf() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_keybuf();
  ::micromsg::SKBuiltinBuffer_t* release_keybuf();
  void set_allocated_keybuf(::micromsg::SKBuiltinBuffer_t* keybuf);

  // required uint32 Selector = 1;
  bool has_selector() const;
  void clear_selector();
  static const int kSelectorFieldNumber = 1;
  ::google::protobuf::uint32 selector() const;
  void set_selector(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.FavSyncRequest)
 private:
  void set_has_selector();
  void clear_has_selector();
  void set_has_keybuf();
  void clear_has_keybuf();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::SKBuiltinBuffer_t* keybuf_;
  ::google::protobuf::uint32 selector_;
  friend struct protobuf_mmfav_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FavSyncResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.FavSyncResponse) */ {
 public:
  FavSyncResponse();
  virtual ~FavSyncResponse();

  FavSyncResponse(const FavSyncResponse& from);

  inline FavSyncResponse& operator=(const FavSyncResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FavSyncResponse& default_instance();

  static inline const FavSyncResponse* internal_default_instance() {
    return reinterpret_cast<const FavSyncResponse*>(
               &_FavSyncResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(FavSyncResponse* other);

  // implements Message ----------------------------------------------

  inline FavSyncResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  FavSyncResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FavSyncResponse& from);
  void MergeFrom(const FavSyncResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FavSyncResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.CmdList CmdList = 2;
  bool has_cmdlist() const;
  void clear_cmdlist();
  static const int kCmdListFieldNumber = 2;
  const ::micromsg::CmdList& cmdlist() const;
  ::micromsg::CmdList* mutable_cmdlist();
  ::micromsg::CmdList* release_cmdlist();
  void set_allocated_cmdlist(::micromsg::CmdList* cmdlist);

  // required .micromsg.SKBuiltinBuffer_t KeyBuf = 3;
  bool has_keybuf() const;
  void clear_keybuf();
  static const int kKeyBufFieldNumber = 3;
  const ::micromsg::SKBuiltinBuffer_t& keybuf() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_keybuf();
  ::micromsg::SKBuiltinBuffer_t* release_keybuf();
  void set_allocated_keybuf(::micromsg::SKBuiltinBuffer_t* keybuf);

  // required int32 Ret = 1;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // required uint32 ContinueFlag = 4;
  bool has_continueflag() const;
  void clear_continueflag();
  static const int kContinueFlagFieldNumber = 4;
  ::google::protobuf::uint32 continueflag() const;
  void set_continueflag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.FavSyncResponse)
 private:
  void set_has_ret();
  void clear_has_ret();
  void set_has_cmdlist();
  void clear_has_cmdlist();
  void set_has_keybuf();
  void clear_has_keybuf();
  void set_has_continueflag();
  void clear_has_continueflag();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::CmdList* cmdlist_;
  ::micromsg::SKBuiltinBuffer_t* keybuf_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::uint32 continueflag_;
  friend struct protobuf_mmfav_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TransCDNItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.TransCDNItem) */ {
 public:
  TransCDNItem();
  virtual ~TransCDNItem();

  TransCDNItem(const TransCDNItem& from);

  inline TransCDNItem& operator=(const TransCDNItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TransCDNItem& default_instance();

  static inline const TransCDNItem* internal_default_instance() {
    return reinterpret_cast<const TransCDNItem*>(
               &_TransCDNItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(TransCDNItem* other);

  // implements Message ----------------------------------------------

  inline TransCDNItem* New() const PROTOBUF_FINAL { return New(NULL); }

  TransCDNItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TransCDNItem& from);
  void MergeFrom(const TransCDNItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TransCDNItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string FileId = 2;
  bool has_fileid() const;
  void clear_fileid();
  static const int kFileIdFieldNumber = 2;
  const ::std::string& fileid() const;
  void set_fileid(const ::std::string& value);
  #if LANG_CXX11
  void set_fileid(::std::string&& value);
  #endif
  void set_fileid(const char* value);
  void set_fileid(const char* value, size_t size);
  ::std::string* mutable_fileid();
  ::std::string* release_fileid();
  void set_allocated_fileid(::std::string* fileid);

  // optional string AesKey = 3;
  bool has_aeskey() const;
  void clear_aeskey();
  static const int kAesKeyFieldNumber = 3;
  const ::std::string& aeskey() const;
  void set_aeskey(const ::std::string& value);
  #if LANG_CXX11
  void set_aeskey(::std::string&& value);
  #endif
  void set_aeskey(const char* value);
  void set_aeskey(const char* value, size_t size);
  ::std::string* mutable_aeskey();
  ::std::string* release_aeskey();
  void set_allocated_aeskey(::std::string* aeskey);

  // required uint32 ClientId = 1;
  bool has_clientid() const;
  void clear_clientid();
  static const int kClientIdFieldNumber = 1;
  ::google::protobuf::uint32 clientid() const;
  void set_clientid(::google::protobuf::uint32 value);

  // required uint32 FavDataType = 4;
  bool has_favdatatype() const;
  void clear_favdatatype();
  static const int kFavDataTypeFieldNumber = 4;
  ::google::protobuf::uint32 favdatatype() const;
  void set_favdatatype(::google::protobuf::uint32 value);

  // required uint64 Size = 5;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 5;
  ::google::protobuf::uint64 size() const;
  void set_size(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:micromsg.TransCDNItem)
 private:
  void set_has_clientid();
  void clear_has_clientid();
  void set_has_fileid();
  void clear_has_fileid();
  void set_has_aeskey();
  void clear_has_aeskey();
  void set_has_favdatatype();
  void clear_has_favdatatype();
  void set_has_size();
  void clear_has_size();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr fileid_;
  ::google::protobuf::internal::ArenaStringPtr aeskey_;
  ::google::protobuf::uint32 clientid_;
  ::google::protobuf::uint32 favdatatype_;
  ::google::protobuf::uint64 size_;
  friend struct protobuf_mmfav_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BatchTransCDNRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.BatchTransCDNRequest) */ {
 public:
  BatchTransCDNRequest();
  virtual ~BatchTransCDNRequest();

  BatchTransCDNRequest(const BatchTransCDNRequest& from);

  inline BatchTransCDNRequest& operator=(const BatchTransCDNRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchTransCDNRequest& default_instance();

  static inline const BatchTransCDNRequest* internal_default_instance() {
    return reinterpret_cast<const BatchTransCDNRequest*>(
               &_BatchTransCDNRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(BatchTransCDNRequest* other);

  // implements Message ----------------------------------------------

  inline BatchTransCDNRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  BatchTransCDNRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BatchTransCDNRequest& from);
  void MergeFrom(const BatchTransCDNRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BatchTransCDNRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.TransCDNItem List = 3;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 3;
  const ::micromsg::TransCDNItem& list(int index) const;
  ::micromsg::TransCDNItem* mutable_list(int index);
  ::micromsg::TransCDNItem* add_list();
  ::google::protobuf::RepeatedPtrField< ::micromsg::TransCDNItem >*
      mutable_list();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::TransCDNItem >&
      list() const;

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 Count = 2;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.BatchTransCDNRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_count();
  void clear_has_count();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::TransCDNItem > list_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 count_;
  friend struct protobuf_mmfav_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BatchTransCDNResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.BatchTransCDNResponse) */ {
 public:
  BatchTransCDNResponse();
  virtual ~BatchTransCDNResponse();

  BatchTransCDNResponse(const BatchTransCDNResponse& from);

  inline BatchTransCDNResponse& operator=(const BatchTransCDNResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchTransCDNResponse& default_instance();

  static inline const BatchTransCDNResponse* internal_default_instance() {
    return reinterpret_cast<const BatchTransCDNResponse*>(
               &_BatchTransCDNResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(BatchTransCDNResponse* other);

  // implements Message ----------------------------------------------

  inline BatchTransCDNResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  BatchTransCDNResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BatchTransCDNResponse& from);
  void MergeFrom(const BatchTransCDNResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BatchTransCDNResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.TransCDNItem List = 3;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 3;
  const ::micromsg::TransCDNItem& list(int index) const;
  ::micromsg::TransCDNItem* mutable_list(int index);
  ::micromsg::TransCDNItem* add_list();
  ::google::protobuf::RepeatedPtrField< ::micromsg::TransCDNItem >*
      mutable_list();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::TransCDNItem >&
      list() const;

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 Count = 2;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.BatchTransCDNResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_count();
  void clear_has_count();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::TransCDNItem > list_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 count_;
  friend struct protobuf_mmfav_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// AddFavItem

// required int32 FavId = 1;
inline bool AddFavItem::has_favid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddFavItem::set_has_favid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddFavItem::clear_has_favid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddFavItem::clear_favid() {
  favid_ = 0;
  clear_has_favid();
}
inline ::google::protobuf::int32 AddFavItem::favid() const {
  // @@protoc_insertion_point(field_get:micromsg.AddFavItem.FavId)
  return favid_;
}
inline void AddFavItem::set_favid(::google::protobuf::int32 value) {
  set_has_favid();
  favid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AddFavItem.FavId)
}

// required int32 Type = 2;
inline bool AddFavItem::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddFavItem::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddFavItem::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddFavItem::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 AddFavItem::type() const {
  // @@protoc_insertion_point(field_get:micromsg.AddFavItem.Type)
  return type_;
}
inline void AddFavItem::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AddFavItem.Type)
}

// required uint32 Flag = 3;
inline bool AddFavItem::has_flag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddFavItem::set_has_flag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddFavItem::clear_has_flag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddFavItem::clear_flag() {
  flag_ = 0u;
  clear_has_flag();
}
inline ::google::protobuf::uint32 AddFavItem::flag() const {
  // @@protoc_insertion_point(field_get:micromsg.AddFavItem.Flag)
  return flag_;
}
inline void AddFavItem::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AddFavItem.Flag)
}

// required uint32 UpdateTime = 4;
inline bool AddFavItem::has_updatetime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AddFavItem::set_has_updatetime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AddFavItem::clear_has_updatetime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AddFavItem::clear_updatetime() {
  updatetime_ = 0u;
  clear_has_updatetime();
}
inline ::google::protobuf::uint32 AddFavItem::updatetime() const {
  // @@protoc_insertion_point(field_get:micromsg.AddFavItem.UpdateTime)
  return updatetime_;
}
inline void AddFavItem::set_updatetime(::google::protobuf::uint32 value) {
  set_has_updatetime();
  updatetime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AddFavItem.UpdateTime)
}

// required uint32 UpdateSeq = 5;
inline bool AddFavItem::has_updateseq() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AddFavItem::set_has_updateseq() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AddFavItem::clear_has_updateseq() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AddFavItem::clear_updateseq() {
  updateseq_ = 0u;
  clear_has_updateseq();
}
inline ::google::protobuf::uint32 AddFavItem::updateseq() const {
  // @@protoc_insertion_point(field_get:micromsg.AddFavItem.UpdateSeq)
  return updateseq_;
}
inline void AddFavItem::set_updateseq(::google::protobuf::uint32 value) {
  set_has_updateseq();
  updateseq_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AddFavItem.UpdateSeq)
}

// -------------------------------------------------------------------

// CheckFavItemRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool CheckFavItemRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CheckFavItemRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CheckFavItemRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CheckFavItemRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& CheckFavItemRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckFavItemRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* CheckFavItemRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.CheckFavItemRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* CheckFavItemRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.CheckFavItemRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void CheckFavItemRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckFavItemRequest.BaseRequest)
}

// required uint32 SourceType = 2;
inline bool CheckFavItemRequest::has_sourcetype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CheckFavItemRequest::set_has_sourcetype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CheckFavItemRequest::clear_has_sourcetype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CheckFavItemRequest::clear_sourcetype() {
  sourcetype_ = 0u;
  clear_has_sourcetype();
}
inline ::google::protobuf::uint32 CheckFavItemRequest::sourcetype() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckFavItemRequest.SourceType)
  return sourcetype_;
}
inline void CheckFavItemRequest::set_sourcetype(::google::protobuf::uint32 value) {
  set_has_sourcetype();
  sourcetype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.CheckFavItemRequest.SourceType)
}

// optional string SourceId = 3;
inline bool CheckFavItemRequest::has_sourceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CheckFavItemRequest::set_has_sourceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CheckFavItemRequest::clear_has_sourceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CheckFavItemRequest::clear_sourceid() {
  sourceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sourceid();
}
inline const ::std::string& CheckFavItemRequest::sourceid() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckFavItemRequest.SourceId)
  return sourceid_.GetNoArena();
}
inline void CheckFavItemRequest::set_sourceid(const ::std::string& value) {
  set_has_sourceid();
  sourceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckFavItemRequest.SourceId)
}
#if LANG_CXX11
inline void CheckFavItemRequest::set_sourceid(::std::string&& value) {
  set_has_sourceid();
  sourceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckFavItemRequest.SourceId)
}
#endif
inline void CheckFavItemRequest::set_sourceid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sourceid();
  sourceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckFavItemRequest.SourceId)
}
inline void CheckFavItemRequest::set_sourceid(const char* value, size_t size) {
  set_has_sourceid();
  sourceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckFavItemRequest.SourceId)
}
inline ::std::string* CheckFavItemRequest::mutable_sourceid() {
  set_has_sourceid();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckFavItemRequest.SourceId)
  return sourceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckFavItemRequest::release_sourceid() {
  // @@protoc_insertion_point(field_release:micromsg.CheckFavItemRequest.SourceId)
  clear_has_sourceid();
  return sourceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckFavItemRequest::set_allocated_sourceid(::std::string* sourceid) {
  if (sourceid != NULL) {
    set_has_sourceid();
  } else {
    clear_has_sourceid();
  }
  sourceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sourceid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckFavItemRequest.SourceId)
}

// -------------------------------------------------------------------

// FavVideoInfo

// optional string FileId = 1;
inline bool FavVideoInfo::has_fileid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FavVideoInfo::set_has_fileid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FavVideoInfo::clear_has_fileid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FavVideoInfo::clear_fileid() {
  fileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fileid();
}
inline const ::std::string& FavVideoInfo::fileid() const {
  // @@protoc_insertion_point(field_get:micromsg.FavVideoInfo.FileId)
  return fileid_.GetNoArena();
}
inline void FavVideoInfo::set_fileid(const ::std::string& value) {
  set_has_fileid();
  fileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.FavVideoInfo.FileId)
}
#if LANG_CXX11
inline void FavVideoInfo::set_fileid(::std::string&& value) {
  set_has_fileid();
  fileid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.FavVideoInfo.FileId)
}
#endif
inline void FavVideoInfo::set_fileid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_fileid();
  fileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.FavVideoInfo.FileId)
}
inline void FavVideoInfo::set_fileid(const char* value, size_t size) {
  set_has_fileid();
  fileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.FavVideoInfo.FileId)
}
inline ::std::string* FavVideoInfo::mutable_fileid() {
  set_has_fileid();
  // @@protoc_insertion_point(field_mutable:micromsg.FavVideoInfo.FileId)
  return fileid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FavVideoInfo::release_fileid() {
  // @@protoc_insertion_point(field_release:micromsg.FavVideoInfo.FileId)
  clear_has_fileid();
  return fileid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FavVideoInfo::set_allocated_fileid(::std::string* fileid) {
  if (fileid != NULL) {
    set_has_fileid();
  } else {
    clear_has_fileid();
  }
  fileid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fileid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.FavVideoInfo.FileId)
}

// optional string AesKey = 2;
inline bool FavVideoInfo::has_aeskey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FavVideoInfo::set_has_aeskey() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FavVideoInfo::clear_has_aeskey() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FavVideoInfo::clear_aeskey() {
  aeskey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_aeskey();
}
inline const ::std::string& FavVideoInfo::aeskey() const {
  // @@protoc_insertion_point(field_get:micromsg.FavVideoInfo.AesKey)
  return aeskey_.GetNoArena();
}
inline void FavVideoInfo::set_aeskey(const ::std::string& value) {
  set_has_aeskey();
  aeskey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.FavVideoInfo.AesKey)
}
#if LANG_CXX11
inline void FavVideoInfo::set_aeskey(::std::string&& value) {
  set_has_aeskey();
  aeskey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.FavVideoInfo.AesKey)
}
#endif
inline void FavVideoInfo::set_aeskey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_aeskey();
  aeskey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.FavVideoInfo.AesKey)
}
inline void FavVideoInfo::set_aeskey(const char* value, size_t size) {
  set_has_aeskey();
  aeskey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.FavVideoInfo.AesKey)
}
inline ::std::string* FavVideoInfo::mutable_aeskey() {
  set_has_aeskey();
  // @@protoc_insertion_point(field_mutable:micromsg.FavVideoInfo.AesKey)
  return aeskey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FavVideoInfo::release_aeskey() {
  // @@protoc_insertion_point(field_release:micromsg.FavVideoInfo.AesKey)
  clear_has_aeskey();
  return aeskey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FavVideoInfo::set_allocated_aeskey(::std::string* aeskey) {
  if (aeskey != NULL) {
    set_has_aeskey();
  } else {
    clear_has_aeskey();
  }
  aeskey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), aeskey);
  // @@protoc_insertion_point(field_set_allocated:micromsg.FavVideoInfo.AesKey)
}

// optional string VideoId = 3;
inline bool FavVideoInfo::has_videoid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FavVideoInfo::set_has_videoid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FavVideoInfo::clear_has_videoid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FavVideoInfo::clear_videoid() {
  videoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_videoid();
}
inline const ::std::string& FavVideoInfo::videoid() const {
  // @@protoc_insertion_point(field_get:micromsg.FavVideoInfo.VideoId)
  return videoid_.GetNoArena();
}
inline void FavVideoInfo::set_videoid(const ::std::string& value) {
  set_has_videoid();
  videoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.FavVideoInfo.VideoId)
}
#if LANG_CXX11
inline void FavVideoInfo::set_videoid(::std::string&& value) {
  set_has_videoid();
  videoid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.FavVideoInfo.VideoId)
}
#endif
inline void FavVideoInfo::set_videoid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_videoid();
  videoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.FavVideoInfo.VideoId)
}
inline void FavVideoInfo::set_videoid(const char* value, size_t size) {
  set_has_videoid();
  videoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.FavVideoInfo.VideoId)
}
inline ::std::string* FavVideoInfo::mutable_videoid() {
  set_has_videoid();
  // @@protoc_insertion_point(field_mutable:micromsg.FavVideoInfo.VideoId)
  return videoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FavVideoInfo::release_videoid() {
  // @@protoc_insertion_point(field_release:micromsg.FavVideoInfo.VideoId)
  clear_has_videoid();
  return videoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FavVideoInfo::set_allocated_videoid(::std::string* videoid) {
  if (videoid != NULL) {
    set_has_videoid();
  } else {
    clear_has_videoid();
  }
  videoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), videoid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.FavVideoInfo.VideoId)
}

// -------------------------------------------------------------------

// ShareFavKey

// required uint32 FromUin = 1;
inline bool ShareFavKey::has_fromuin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShareFavKey::set_has_fromuin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShareFavKey::clear_has_fromuin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShareFavKey::clear_fromuin() {
  fromuin_ = 0u;
  clear_has_fromuin();
}
inline ::google::protobuf::uint32 ShareFavKey::fromuin() const {
  // @@protoc_insertion_point(field_get:micromsg.ShareFavKey.FromUin)
  return fromuin_;
}
inline void ShareFavKey::set_fromuin(::google::protobuf::uint32 value) {
  set_has_fromuin();
  fromuin_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShareFavKey.FromUin)
}

// optional string ToUser = 2;
inline bool ShareFavKey::has_touser() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShareFavKey::set_has_touser() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShareFavKey::clear_has_touser() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShareFavKey::clear_touser() {
  touser_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_touser();
}
inline const ::std::string& ShareFavKey::touser() const {
  // @@protoc_insertion_point(field_get:micromsg.ShareFavKey.ToUser)
  return touser_.GetNoArena();
}
inline void ShareFavKey::set_touser(const ::std::string& value) {
  set_has_touser();
  touser_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShareFavKey.ToUser)
}
#if LANG_CXX11
inline void ShareFavKey::set_touser(::std::string&& value) {
  set_has_touser();
  touser_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShareFavKey.ToUser)
}
#endif
inline void ShareFavKey::set_touser(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_touser();
  touser_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShareFavKey.ToUser)
}
inline void ShareFavKey::set_touser(const char* value, size_t size) {
  set_has_touser();
  touser_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShareFavKey.ToUser)
}
inline ::std::string* ShareFavKey::mutable_touser() {
  set_has_touser();
  // @@protoc_insertion_point(field_mutable:micromsg.ShareFavKey.ToUser)
  return touser_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShareFavKey::release_touser() {
  // @@protoc_insertion_point(field_release:micromsg.ShareFavKey.ToUser)
  clear_has_touser();
  return touser_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShareFavKey::set_allocated_touser(::std::string* touser) {
  if (touser != NULL) {
    set_has_touser();
  } else {
    clear_has_touser();
  }
  touser_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), touser);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShareFavKey.ToUser)
}

// required uint32 ShareTime = 3;
inline bool ShareFavKey::has_sharetime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ShareFavKey::set_has_sharetime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ShareFavKey::clear_has_sharetime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ShareFavKey::clear_sharetime() {
  sharetime_ = 0u;
  clear_has_sharetime();
}
inline ::google::protobuf::uint32 ShareFavKey::sharetime() const {
  // @@protoc_insertion_point(field_get:micromsg.ShareFavKey.ShareTime)
  return sharetime_;
}
inline void ShareFavKey::set_sharetime(::google::protobuf::uint32 value) {
  set_has_sharetime();
  sharetime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShareFavKey.ShareTime)
}

// required uint32 Scene = 4;
inline bool ShareFavKey::has_scene() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ShareFavKey::set_has_scene() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ShareFavKey::clear_has_scene() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ShareFavKey::clear_scene() {
  scene_ = 0u;
  clear_has_scene();
}
inline ::google::protobuf::uint32 ShareFavKey::scene() const {
  // @@protoc_insertion_point(field_get:micromsg.ShareFavKey.Scene)
  return scene_;
}
inline void ShareFavKey::set_scene(::google::protobuf::uint32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShareFavKey.Scene)
}

// required uint32 FavId = 5;
inline bool ShareFavKey::has_favid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ShareFavKey::set_has_favid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ShareFavKey::clear_has_favid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ShareFavKey::clear_favid() {
  favid_ = 0u;
  clear_has_favid();
}
inline ::google::protobuf::uint32 ShareFavKey::favid() const {
  // @@protoc_insertion_point(field_get:micromsg.ShareFavKey.FavId)
  return favid_;
}
inline void ShareFavKey::set_favid(::google::protobuf::uint32 value) {
  set_has_favid();
  favid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShareFavKey.FavId)
}

// optional string ParamCheck = 6;
inline bool ShareFavKey::has_paramcheck() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShareFavKey::set_has_paramcheck() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShareFavKey::clear_has_paramcheck() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShareFavKey::clear_paramcheck() {
  paramcheck_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_paramcheck();
}
inline const ::std::string& ShareFavKey::paramcheck() const {
  // @@protoc_insertion_point(field_get:micromsg.ShareFavKey.ParamCheck)
  return paramcheck_.GetNoArena();
}
inline void ShareFavKey::set_paramcheck(const ::std::string& value) {
  set_has_paramcheck();
  paramcheck_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShareFavKey.ParamCheck)
}
#if LANG_CXX11
inline void ShareFavKey::set_paramcheck(::std::string&& value) {
  set_has_paramcheck();
  paramcheck_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShareFavKey.ParamCheck)
}
#endif
inline void ShareFavKey::set_paramcheck(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_paramcheck();
  paramcheck_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShareFavKey.ParamCheck)
}
inline void ShareFavKey::set_paramcheck(const char* value, size_t size) {
  set_has_paramcheck();
  paramcheck_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShareFavKey.ParamCheck)
}
inline ::std::string* ShareFavKey::mutable_paramcheck() {
  set_has_paramcheck();
  // @@protoc_insertion_point(field_mutable:micromsg.ShareFavKey.ParamCheck)
  return paramcheck_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShareFavKey::release_paramcheck() {
  // @@protoc_insertion_point(field_release:micromsg.ShareFavKey.ParamCheck)
  clear_has_paramcheck();
  return paramcheck_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShareFavKey::set_allocated_paramcheck(::std::string* paramcheck) {
  if (paramcheck != NULL) {
    set_has_paramcheck();
  } else {
    clear_has_paramcheck();
  }
  paramcheck_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), paramcheck);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShareFavKey.ParamCheck)
}

// optional string FavItemCheck = 7;
inline bool ShareFavKey::has_favitemcheck() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShareFavKey::set_has_favitemcheck() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShareFavKey::clear_has_favitemcheck() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShareFavKey::clear_favitemcheck() {
  favitemcheck_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_favitemcheck();
}
inline const ::std::string& ShareFavKey::favitemcheck() const {
  // @@protoc_insertion_point(field_get:micromsg.ShareFavKey.FavItemCheck)
  return favitemcheck_.GetNoArena();
}
inline void ShareFavKey::set_favitemcheck(const ::std::string& value) {
  set_has_favitemcheck();
  favitemcheck_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShareFavKey.FavItemCheck)
}
#if LANG_CXX11
inline void ShareFavKey::set_favitemcheck(::std::string&& value) {
  set_has_favitemcheck();
  favitemcheck_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShareFavKey.FavItemCheck)
}
#endif
inline void ShareFavKey::set_favitemcheck(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_favitemcheck();
  favitemcheck_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShareFavKey.FavItemCheck)
}
inline void ShareFavKey::set_favitemcheck(const char* value, size_t size) {
  set_has_favitemcheck();
  favitemcheck_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShareFavKey.FavItemCheck)
}
inline ::std::string* ShareFavKey::mutable_favitemcheck() {
  set_has_favitemcheck();
  // @@protoc_insertion_point(field_mutable:micromsg.ShareFavKey.FavItemCheck)
  return favitemcheck_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShareFavKey::release_favitemcheck() {
  // @@protoc_insertion_point(field_release:micromsg.ShareFavKey.FavItemCheck)
  clear_has_favitemcheck();
  return favitemcheck_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShareFavKey::set_allocated_favitemcheck(::std::string* favitemcheck) {
  if (favitemcheck != NULL) {
    set_has_favitemcheck();
  } else {
    clear_has_favitemcheck();
  }
  favitemcheck_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), favitemcheck);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShareFavKey.FavItemCheck)
}

// -------------------------------------------------------------------

// CheckFavItemResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool CheckFavItemResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CheckFavItemResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CheckFavItemResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CheckFavItemResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& CheckFavItemResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckFavItemResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* CheckFavItemResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.CheckFavItemResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* CheckFavItemResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.CheckFavItemResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void CheckFavItemResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckFavItemResponse.BaseResponse)
}

// -------------------------------------------------------------------

// ModFavIndex

// required uint32 ModField = 1;
inline bool ModFavIndex::has_modfield() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModFavIndex::set_has_modfield() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModFavIndex::clear_has_modfield() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModFavIndex::clear_modfield() {
  modfield_ = 0u;
  clear_has_modfield();
}
inline ::google::protobuf::uint32 ModFavIndex::modfield() const {
  // @@protoc_insertion_point(field_get:micromsg.ModFavIndex.ModField)
  return modfield_;
}
inline void ModFavIndex::set_modfield(::google::protobuf::uint32 value) {
  set_has_modfield();
  modfield_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ModFavIndex.ModField)
}

// required uint32 ModValue = 2;
inline bool ModFavIndex::has_modvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ModFavIndex::set_has_modvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ModFavIndex::clear_has_modvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ModFavIndex::clear_modvalue() {
  modvalue_ = 0u;
  clear_has_modvalue();
}
inline ::google::protobuf::uint32 ModFavIndex::modvalue() const {
  // @@protoc_insertion_point(field_get:micromsg.ModFavIndex.ModValue)
  return modvalue_;
}
inline void ModFavIndex::set_modvalue(::google::protobuf::uint32 value) {
  set_has_modvalue();
  modvalue_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ModFavIndex.ModValue)
}

// -------------------------------------------------------------------

// ModFavObject

// optional string TagName = 1;
inline bool ModFavObject::has_tagname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModFavObject::set_has_tagname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModFavObject::clear_has_tagname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModFavObject::clear_tagname() {
  tagname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tagname();
}
inline const ::std::string& ModFavObject::tagname() const {
  // @@protoc_insertion_point(field_get:micromsg.ModFavObject.TagName)
  return tagname_.GetNoArena();
}
inline void ModFavObject::set_tagname(const ::std::string& value) {
  set_has_tagname();
  tagname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ModFavObject.TagName)
}
#if LANG_CXX11
inline void ModFavObject::set_tagname(::std::string&& value) {
  set_has_tagname();
  tagname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ModFavObject.TagName)
}
#endif
inline void ModFavObject::set_tagname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tagname();
  tagname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ModFavObject.TagName)
}
inline void ModFavObject::set_tagname(const char* value, size_t size) {
  set_has_tagname();
  tagname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ModFavObject.TagName)
}
inline ::std::string* ModFavObject::mutable_tagname() {
  set_has_tagname();
  // @@protoc_insertion_point(field_mutable:micromsg.ModFavObject.TagName)
  return tagname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModFavObject::release_tagname() {
  // @@protoc_insertion_point(field_release:micromsg.ModFavObject.TagName)
  clear_has_tagname();
  return tagname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModFavObject::set_allocated_tagname(::std::string* tagname) {
  if (tagname != NULL) {
    set_has_tagname();
  } else {
    clear_has_tagname();
  }
  tagname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tagname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModFavObject.TagName)
}

// optional string AttrName = 2;
inline bool ModFavObject::has_attrname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ModFavObject::set_has_attrname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ModFavObject::clear_has_attrname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ModFavObject::clear_attrname() {
  attrname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attrname();
}
inline const ::std::string& ModFavObject::attrname() const {
  // @@protoc_insertion_point(field_get:micromsg.ModFavObject.AttrName)
  return attrname_.GetNoArena();
}
inline void ModFavObject::set_attrname(const ::std::string& value) {
  set_has_attrname();
  attrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ModFavObject.AttrName)
}
#if LANG_CXX11
inline void ModFavObject::set_attrname(::std::string&& value) {
  set_has_attrname();
  attrname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ModFavObject.AttrName)
}
#endif
inline void ModFavObject::set_attrname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_attrname();
  attrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ModFavObject.AttrName)
}
inline void ModFavObject::set_attrname(const char* value, size_t size) {
  set_has_attrname();
  attrname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ModFavObject.AttrName)
}
inline ::std::string* ModFavObject::mutable_attrname() {
  set_has_attrname();
  // @@protoc_insertion_point(field_mutable:micromsg.ModFavObject.AttrName)
  return attrname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModFavObject::release_attrname() {
  // @@protoc_insertion_point(field_release:micromsg.ModFavObject.AttrName)
  clear_has_attrname();
  return attrname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModFavObject::set_allocated_attrname(::std::string* attrname) {
  if (attrname != NULL) {
    set_has_attrname();
  } else {
    clear_has_attrname();
  }
  attrname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attrname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModFavObject.AttrName)
}

// optional string Value = 3;
inline bool ModFavObject::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ModFavObject::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ModFavObject::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ModFavObject::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& ModFavObject::value() const {
  // @@protoc_insertion_point(field_get:micromsg.ModFavObject.Value)
  return value_.GetNoArena();
}
inline void ModFavObject::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ModFavObject.Value)
}
#if LANG_CXX11
inline void ModFavObject::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ModFavObject.Value)
}
#endif
inline void ModFavObject::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ModFavObject.Value)
}
inline void ModFavObject::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ModFavObject.Value)
}
inline ::std::string* ModFavObject::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:micromsg.ModFavObject.Value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModFavObject::release_value() {
  // @@protoc_insertion_point(field_release:micromsg.ModFavObject.Value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModFavObject::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModFavObject.Value)
}

// optional uint32 Type = 4;
inline bool ModFavObject::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ModFavObject::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ModFavObject::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ModFavObject::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 ModFavObject::type() const {
  // @@protoc_insertion_point(field_get:micromsg.ModFavObject.Type)
  return type_;
}
inline void ModFavObject::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ModFavObject.Type)
}

// -------------------------------------------------------------------

// ModFavItemRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool ModFavItemRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModFavItemRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModFavItemRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModFavItemRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& ModFavItemRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.ModFavItemRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* ModFavItemRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ModFavItemRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* ModFavItemRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.ModFavItemRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void ModFavItemRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModFavItemRequest.BaseRequest)
}

// required uint32 FavId = 2;
inline bool ModFavItemRequest::has_favid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ModFavItemRequest::set_has_favid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ModFavItemRequest::clear_has_favid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ModFavItemRequest::clear_favid() {
  favid_ = 0u;
  clear_has_favid();
}
inline ::google::protobuf::uint32 ModFavItemRequest::favid() const {
  // @@protoc_insertion_point(field_get:micromsg.ModFavItemRequest.FavId)
  return favid_;
}
inline void ModFavItemRequest::set_favid(::google::protobuf::uint32 value) {
  set_has_favid();
  favid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ModFavItemRequest.FavId)
}

// required uint32 IndexCount = 3;
inline bool ModFavItemRequest::has_indexcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ModFavItemRequest::set_has_indexcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ModFavItemRequest::clear_has_indexcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ModFavItemRequest::clear_indexcount() {
  indexcount_ = 0u;
  clear_has_indexcount();
}
inline ::google::protobuf::uint32 ModFavItemRequest::indexcount() const {
  // @@protoc_insertion_point(field_get:micromsg.ModFavItemRequest.IndexCount)
  return indexcount_;
}
inline void ModFavItemRequest::set_indexcount(::google::protobuf::uint32 value) {
  set_has_indexcount();
  indexcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ModFavItemRequest.IndexCount)
}

// repeated .micromsg.ModFavIndex IndexList = 4;
inline int ModFavItemRequest::indexlist_size() const {
  return indexlist_.size();
}
inline void ModFavItemRequest::clear_indexlist() {
  indexlist_.Clear();
}
inline const ::micromsg::ModFavIndex& ModFavItemRequest::indexlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.ModFavItemRequest.IndexList)
  return indexlist_.Get(index);
}
inline ::micromsg::ModFavIndex* ModFavItemRequest::mutable_indexlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.ModFavItemRequest.IndexList)
  return indexlist_.Mutable(index);
}
inline ::micromsg::ModFavIndex* ModFavItemRequest::add_indexlist() {
  // @@protoc_insertion_point(field_add:micromsg.ModFavItemRequest.IndexList)
  return indexlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::ModFavIndex >*
ModFavItemRequest::mutable_indexlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.ModFavItemRequest.IndexList)
  return &indexlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::ModFavIndex >&
ModFavItemRequest::indexlist() const {
  // @@protoc_insertion_point(field_list:micromsg.ModFavItemRequest.IndexList)
  return indexlist_;
}

// required uint32 ObjectCount = 5;
inline bool ModFavItemRequest::has_objectcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ModFavItemRequest::set_has_objectcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ModFavItemRequest::clear_has_objectcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ModFavItemRequest::clear_objectcount() {
  objectcount_ = 0u;
  clear_has_objectcount();
}
inline ::google::protobuf::uint32 ModFavItemRequest::objectcount() const {
  // @@protoc_insertion_point(field_get:micromsg.ModFavItemRequest.ObjectCount)
  return objectcount_;
}
inline void ModFavItemRequest::set_objectcount(::google::protobuf::uint32 value) {
  set_has_objectcount();
  objectcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ModFavItemRequest.ObjectCount)
}

// repeated .micromsg.ModFavObject ObjectList = 6;
inline int ModFavItemRequest::objectlist_size() const {
  return objectlist_.size();
}
inline void ModFavItemRequest::clear_objectlist() {
  objectlist_.Clear();
}
inline const ::micromsg::ModFavObject& ModFavItemRequest::objectlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.ModFavItemRequest.ObjectList)
  return objectlist_.Get(index);
}
inline ::micromsg::ModFavObject* ModFavItemRequest::mutable_objectlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.ModFavItemRequest.ObjectList)
  return objectlist_.Mutable(index);
}
inline ::micromsg::ModFavObject* ModFavItemRequest::add_objectlist() {
  // @@protoc_insertion_point(field_add:micromsg.ModFavItemRequest.ObjectList)
  return objectlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::ModFavObject >*
ModFavItemRequest::mutable_objectlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.ModFavItemRequest.ObjectList)
  return &objectlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::ModFavObject >&
ModFavItemRequest::objectlist() const {
  // @@protoc_insertion_point(field_list:micromsg.ModFavItemRequest.ObjectList)
  return objectlist_;
}

// -------------------------------------------------------------------

// ModFavItemResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool ModFavItemResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModFavItemResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModFavItemResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModFavItemResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& ModFavItemResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.ModFavItemResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* ModFavItemResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ModFavItemResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* ModFavItemResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.ModFavItemResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void ModFavItemResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ModFavItemResponse.BaseResponse)
}

// -------------------------------------------------------------------

// ShareFavRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool ShareFavRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShareFavRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShareFavRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShareFavRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& ShareFavRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.ShareFavRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* ShareFavRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShareFavRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* ShareFavRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.ShareFavRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void ShareFavRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShareFavRequest.BaseRequest)
}

// optional string ToUser = 2;
inline bool ShareFavRequest::has_touser() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShareFavRequest::set_has_touser() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShareFavRequest::clear_has_touser() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShareFavRequest::clear_touser() {
  touser_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_touser();
}
inline const ::std::string& ShareFavRequest::touser() const {
  // @@protoc_insertion_point(field_get:micromsg.ShareFavRequest.ToUser)
  return touser_.GetNoArena();
}
inline void ShareFavRequest::set_touser(const ::std::string& value) {
  set_has_touser();
  touser_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShareFavRequest.ToUser)
}
#if LANG_CXX11
inline void ShareFavRequest::set_touser(::std::string&& value) {
  set_has_touser();
  touser_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShareFavRequest.ToUser)
}
#endif
inline void ShareFavRequest::set_touser(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_touser();
  touser_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShareFavRequest.ToUser)
}
inline void ShareFavRequest::set_touser(const char* value, size_t size) {
  set_has_touser();
  touser_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShareFavRequest.ToUser)
}
inline ::std::string* ShareFavRequest::mutable_touser() {
  set_has_touser();
  // @@protoc_insertion_point(field_mutable:micromsg.ShareFavRequest.ToUser)
  return touser_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShareFavRequest::release_touser() {
  // @@protoc_insertion_point(field_release:micromsg.ShareFavRequest.ToUser)
  clear_has_touser();
  return touser_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShareFavRequest::set_allocated_touser(::std::string* touser) {
  if (touser != NULL) {
    set_has_touser();
  } else {
    clear_has_touser();
  }
  touser_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), touser);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShareFavRequest.ToUser)
}

// required uint32 Scene = 3;
inline bool ShareFavRequest::has_scene() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShareFavRequest::set_has_scene() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShareFavRequest::clear_has_scene() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShareFavRequest::clear_scene() {
  scene_ = 0u;
  clear_has_scene();
}
inline ::google::protobuf::uint32 ShareFavRequest::scene() const {
  // @@protoc_insertion_point(field_get:micromsg.ShareFavRequest.Scene)
  return scene_;
}
inline void ShareFavRequest::set_scene(::google::protobuf::uint32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShareFavRequest.Scene)
}

// required uint32 Count = 4;
inline bool ShareFavRequest::has_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShareFavRequest::set_has_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShareFavRequest::clear_has_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShareFavRequest::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 ShareFavRequest::count() const {
  // @@protoc_insertion_point(field_get:micromsg.ShareFavRequest.Count)
  return count_;
}
inline void ShareFavRequest::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShareFavRequest.Count)
}

// repeated uint32 FavIdList = 5 [packed = true];
inline int ShareFavRequest::favidlist_size() const {
  return favidlist_.size();
}
inline void ShareFavRequest::clear_favidlist() {
  favidlist_.Clear();
}
inline ::google::protobuf::uint32 ShareFavRequest::favidlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.ShareFavRequest.FavIdList)
  return favidlist_.Get(index);
}
inline void ShareFavRequest::set_favidlist(int index, ::google::protobuf::uint32 value) {
  favidlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:micromsg.ShareFavRequest.FavIdList)
}
inline void ShareFavRequest::add_favidlist(::google::protobuf::uint32 value) {
  favidlist_.Add(value);
  // @@protoc_insertion_point(field_add:micromsg.ShareFavRequest.FavIdList)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ShareFavRequest::favidlist() const {
  // @@protoc_insertion_point(field_list:micromsg.ShareFavRequest.FavIdList)
  return favidlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ShareFavRequest::mutable_favidlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.ShareFavRequest.FavIdList)
  return &favidlist_;
}

// -------------------------------------------------------------------

// ShareFavResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool ShareFavResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShareFavResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShareFavResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShareFavResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& ShareFavResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.ShareFavResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* ShareFavResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShareFavResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* ShareFavResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.ShareFavResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void ShareFavResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShareFavResponse.BaseResponse)
}

// required uint32 UrlCount = 2;
inline bool ShareFavResponse::has_urlcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShareFavResponse::set_has_urlcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShareFavResponse::clear_has_urlcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShareFavResponse::clear_urlcount() {
  urlcount_ = 0u;
  clear_has_urlcount();
}
inline ::google::protobuf::uint32 ShareFavResponse::urlcount() const {
  // @@protoc_insertion_point(field_get:micromsg.ShareFavResponse.UrlCount)
  return urlcount_;
}
inline void ShareFavResponse::set_urlcount(::google::protobuf::uint32 value) {
  set_has_urlcount();
  urlcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShareFavResponse.UrlCount)
}

// repeated .micromsg.SKBuiltinString_t UrlList = 3;
inline int ShareFavResponse::urllist_size() const {
  return urllist_.size();
}
inline void ShareFavResponse::clear_urllist() {
  urllist_.Clear();
}
inline const ::micromsg::SKBuiltinString_t& ShareFavResponse::urllist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.ShareFavResponse.UrlList)
  return urllist_.Get(index);
}
inline ::micromsg::SKBuiltinString_t* ShareFavResponse::mutable_urllist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.ShareFavResponse.UrlList)
  return urllist_.Mutable(index);
}
inline ::micromsg::SKBuiltinString_t* ShareFavResponse::add_urllist() {
  // @@protoc_insertion_point(field_add:micromsg.ShareFavResponse.UrlList)
  return urllist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
ShareFavResponse::mutable_urllist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.ShareFavResponse.UrlList)
  return &urllist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
ShareFavResponse::urllist() const {
  // @@protoc_insertion_point(field_list:micromsg.ShareFavResponse.UrlList)
  return urllist_;
}

// -------------------------------------------------------------------

// AddFavItemRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool AddFavItemRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AddFavItemRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AddFavItemRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AddFavItemRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& AddFavItemRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.AddFavItemRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* AddFavItemRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.AddFavItemRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* AddFavItemRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.AddFavItemRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void AddFavItemRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.AddFavItemRequest.BaseRequest)
}

// optional string ClientId = 2;
inline bool AddFavItemRequest::has_clientid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddFavItemRequest::set_has_clientid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddFavItemRequest::clear_has_clientid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddFavItemRequest::clear_clientid() {
  clientid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_clientid();
}
inline const ::std::string& AddFavItemRequest::clientid() const {
  // @@protoc_insertion_point(field_get:micromsg.AddFavItemRequest.ClientId)
  return clientid_.GetNoArena();
}
inline void AddFavItemRequest::set_clientid(const ::std::string& value) {
  set_has_clientid();
  clientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AddFavItemRequest.ClientId)
}
#if LANG_CXX11
inline void AddFavItemRequest::set_clientid(::std::string&& value) {
  set_has_clientid();
  clientid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AddFavItemRequest.ClientId)
}
#endif
inline void AddFavItemRequest::set_clientid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_clientid();
  clientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AddFavItemRequest.ClientId)
}
inline void AddFavItemRequest::set_clientid(const char* value, size_t size) {
  set_has_clientid();
  clientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AddFavItemRequest.ClientId)
}
inline ::std::string* AddFavItemRequest::mutable_clientid() {
  set_has_clientid();
  // @@protoc_insertion_point(field_mutable:micromsg.AddFavItemRequest.ClientId)
  return clientid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddFavItemRequest::release_clientid() {
  // @@protoc_insertion_point(field_release:micromsg.AddFavItemRequest.ClientId)
  clear_has_clientid();
  return clientid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddFavItemRequest::set_allocated_clientid(::std::string* clientid) {
  if (clientid != NULL) {
    set_has_clientid();
  } else {
    clear_has_clientid();
  }
  clientid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AddFavItemRequest.ClientId)
}

// required uint32 Type = 3;
inline bool AddFavItemRequest::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AddFavItemRequest::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AddFavItemRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AddFavItemRequest::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 AddFavItemRequest::type() const {
  // @@protoc_insertion_point(field_get:micromsg.AddFavItemRequest.Type)
  return type_;
}
inline void AddFavItemRequest::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AddFavItemRequest.Type)
}

// required uint32 SourceType = 4;
inline bool AddFavItemRequest::has_sourcetype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AddFavItemRequest::set_has_sourcetype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AddFavItemRequest::clear_has_sourcetype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AddFavItemRequest::clear_sourcetype() {
  sourcetype_ = 0u;
  clear_has_sourcetype();
}
inline ::google::protobuf::uint32 AddFavItemRequest::sourcetype() const {
  // @@protoc_insertion_point(field_get:micromsg.AddFavItemRequest.SourceType)
  return sourcetype_;
}
inline void AddFavItemRequest::set_sourcetype(::google::protobuf::uint32 value) {
  set_has_sourcetype();
  sourcetype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AddFavItemRequest.SourceType)
}

// optional string SourceId = 5;
inline bool AddFavItemRequest::has_sourceid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddFavItemRequest::set_has_sourceid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddFavItemRequest::clear_has_sourceid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddFavItemRequest::clear_sourceid() {
  sourceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sourceid();
}
inline const ::std::string& AddFavItemRequest::sourceid() const {
  // @@protoc_insertion_point(field_get:micromsg.AddFavItemRequest.SourceId)
  return sourceid_.GetNoArena();
}
inline void AddFavItemRequest::set_sourceid(const ::std::string& value) {
  set_has_sourceid();
  sourceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AddFavItemRequest.SourceId)
}
#if LANG_CXX11
inline void AddFavItemRequest::set_sourceid(::std::string&& value) {
  set_has_sourceid();
  sourceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AddFavItemRequest.SourceId)
}
#endif
inline void AddFavItemRequest::set_sourceid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sourceid();
  sourceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AddFavItemRequest.SourceId)
}
inline void AddFavItemRequest::set_sourceid(const char* value, size_t size) {
  set_has_sourceid();
  sourceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AddFavItemRequest.SourceId)
}
inline ::std::string* AddFavItemRequest::mutable_sourceid() {
  set_has_sourceid();
  // @@protoc_insertion_point(field_mutable:micromsg.AddFavItemRequest.SourceId)
  return sourceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddFavItemRequest::release_sourceid() {
  // @@protoc_insertion_point(field_release:micromsg.AddFavItemRequest.SourceId)
  clear_has_sourceid();
  return sourceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddFavItemRequest::set_allocated_sourceid(::std::string* sourceid) {
  if (sourceid != NULL) {
    set_has_sourceid();
  } else {
    clear_has_sourceid();
  }
  sourceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sourceid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AddFavItemRequest.SourceId)
}

// optional string Object = 6;
inline bool AddFavItemRequest::has_object() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddFavItemRequest::set_has_object() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddFavItemRequest::clear_has_object() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddFavItemRequest::clear_object() {
  object_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_object();
}
inline const ::std::string& AddFavItemRequest::object() const {
  // @@protoc_insertion_point(field_get:micromsg.AddFavItemRequest.Object)
  return object_.GetNoArena();
}
inline void AddFavItemRequest::set_object(const ::std::string& value) {
  set_has_object();
  object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AddFavItemRequest.Object)
}
#if LANG_CXX11
inline void AddFavItemRequest::set_object(::std::string&& value) {
  set_has_object();
  object_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AddFavItemRequest.Object)
}
#endif
inline void AddFavItemRequest::set_object(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_object();
  object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AddFavItemRequest.Object)
}
inline void AddFavItemRequest::set_object(const char* value, size_t size) {
  set_has_object();
  object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AddFavItemRequest.Object)
}
inline ::std::string* AddFavItemRequest::mutable_object() {
  set_has_object();
  // @@protoc_insertion_point(field_mutable:micromsg.AddFavItemRequest.Object)
  return object_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddFavItemRequest::release_object() {
  // @@protoc_insertion_point(field_release:micromsg.AddFavItemRequest.Object)
  clear_has_object();
  return object_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddFavItemRequest::set_allocated_object(::std::string* object) {
  if (object != NULL) {
    set_has_object();
  } else {
    clear_has_object();
  }
  object_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), object);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AddFavItemRequest.Object)
}

// -------------------------------------------------------------------

// AddFavItemResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool AddFavItemResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddFavItemResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddFavItemResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddFavItemResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& AddFavItemResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.AddFavItemResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* AddFavItemResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.AddFavItemResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* AddFavItemResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.AddFavItemResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void AddFavItemResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.AddFavItemResponse.BaseResponse)
}

// required uint32 FavId = 2;
inline bool AddFavItemResponse::has_favid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddFavItemResponse::set_has_favid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddFavItemResponse::clear_has_favid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddFavItemResponse::clear_favid() {
  favid_ = 0u;
  clear_has_favid();
}
inline ::google::protobuf::uint32 AddFavItemResponse::favid() const {
  // @@protoc_insertion_point(field_get:micromsg.AddFavItemResponse.FavId)
  return favid_;
}
inline void AddFavItemResponse::set_favid(::google::protobuf::uint32 value) {
  set_has_favid();
  favid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AddFavItemResponse.FavId)
}

// required uint32 UpdateSeq = 3;
inline bool AddFavItemResponse::has_updateseq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddFavItemResponse::set_has_updateseq() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddFavItemResponse::clear_has_updateseq() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddFavItemResponse::clear_updateseq() {
  updateseq_ = 0u;
  clear_has_updateseq();
}
inline ::google::protobuf::uint32 AddFavItemResponse::updateseq() const {
  // @@protoc_insertion_point(field_get:micromsg.AddFavItemResponse.UpdateSeq)
  return updateseq_;
}
inline void AddFavItemResponse::set_updateseq(::google::protobuf::uint32 value) {
  set_has_updateseq();
  updateseq_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AddFavItemResponse.UpdateSeq)
}

// optional uint64 UsedSize = 4;
inline bool AddFavItemResponse::has_usedsize() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AddFavItemResponse::set_has_usedsize() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AddFavItemResponse::clear_has_usedsize() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AddFavItemResponse::clear_usedsize() {
  usedsize_ = GOOGLE_ULONGLONG(0);
  clear_has_usedsize();
}
inline ::google::protobuf::uint64 AddFavItemResponse::usedsize() const {
  // @@protoc_insertion_point(field_get:micromsg.AddFavItemResponse.UsedSize)
  return usedsize_;
}
inline void AddFavItemResponse::set_usedsize(::google::protobuf::uint64 value) {
  set_has_usedsize();
  usedsize_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AddFavItemResponse.UsedSize)
}

// -------------------------------------------------------------------

// DelFavItemRsp

// required int32 Ret = 1;
inline bool DelFavItemRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DelFavItemRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DelFavItemRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DelFavItemRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 DelFavItemRsp::ret() const {
  // @@protoc_insertion_point(field_get:micromsg.DelFavItemRsp.Ret)
  return ret_;
}
inline void DelFavItemRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:micromsg.DelFavItemRsp.Ret)
}

// required uint32 FavId = 2;
inline bool DelFavItemRsp::has_favid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DelFavItemRsp::set_has_favid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DelFavItemRsp::clear_has_favid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DelFavItemRsp::clear_favid() {
  favid_ = 0u;
  clear_has_favid();
}
inline ::google::protobuf::uint32 DelFavItemRsp::favid() const {
  // @@protoc_insertion_point(field_get:micromsg.DelFavItemRsp.FavId)
  return favid_;
}
inline void DelFavItemRsp::set_favid(::google::protobuf::uint32 value) {
  set_has_favid();
  favid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.DelFavItemRsp.FavId)
}

// -------------------------------------------------------------------

// BatchDelFavItemRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool BatchDelFavItemRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchDelFavItemRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchDelFavItemRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchDelFavItemRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& BatchDelFavItemRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.BatchDelFavItemRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* BatchDelFavItemRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.BatchDelFavItemRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* BatchDelFavItemRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.BatchDelFavItemRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void BatchDelFavItemRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.BatchDelFavItemRequest.BaseRequest)
}

// required uint32 Count = 2;
inline bool BatchDelFavItemRequest::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BatchDelFavItemRequest::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BatchDelFavItemRequest::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BatchDelFavItemRequest::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 BatchDelFavItemRequest::count() const {
  // @@protoc_insertion_point(field_get:micromsg.BatchDelFavItemRequest.Count)
  return count_;
}
inline void BatchDelFavItemRequest::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.BatchDelFavItemRequest.Count)
}

// repeated uint32 FavIdList = 3 [packed = true];
inline int BatchDelFavItemRequest::favidlist_size() const {
  return favidlist_.size();
}
inline void BatchDelFavItemRequest::clear_favidlist() {
  favidlist_.Clear();
}
inline ::google::protobuf::uint32 BatchDelFavItemRequest::favidlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.BatchDelFavItemRequest.FavIdList)
  return favidlist_.Get(index);
}
inline void BatchDelFavItemRequest::set_favidlist(int index, ::google::protobuf::uint32 value) {
  favidlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:micromsg.BatchDelFavItemRequest.FavIdList)
}
inline void BatchDelFavItemRequest::add_favidlist(::google::protobuf::uint32 value) {
  favidlist_.Add(value);
  // @@protoc_insertion_point(field_add:micromsg.BatchDelFavItemRequest.FavIdList)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BatchDelFavItemRequest::favidlist() const {
  // @@protoc_insertion_point(field_list:micromsg.BatchDelFavItemRequest.FavIdList)
  return favidlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BatchDelFavItemRequest::mutable_favidlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.BatchDelFavItemRequest.FavIdList)
  return &favidlist_;
}

// -------------------------------------------------------------------

// BatchDelFavItemResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool BatchDelFavItemResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchDelFavItemResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchDelFavItemResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchDelFavItemResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& BatchDelFavItemResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.BatchDelFavItemResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* BatchDelFavItemResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.BatchDelFavItemResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* BatchDelFavItemResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.BatchDelFavItemResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void BatchDelFavItemResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.BatchDelFavItemResponse.BaseResponse)
}

// required uint32 Count = 2;
inline bool BatchDelFavItemResponse::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BatchDelFavItemResponse::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BatchDelFavItemResponse::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BatchDelFavItemResponse::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 BatchDelFavItemResponse::count() const {
  // @@protoc_insertion_point(field_get:micromsg.BatchDelFavItemResponse.Count)
  return count_;
}
inline void BatchDelFavItemResponse::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.BatchDelFavItemResponse.Count)
}

// repeated .micromsg.DelFavItemRsp List = 3;
inline int BatchDelFavItemResponse::list_size() const {
  return list_.size();
}
inline void BatchDelFavItemResponse::clear_list() {
  list_.Clear();
}
inline const ::micromsg::DelFavItemRsp& BatchDelFavItemResponse::list(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.BatchDelFavItemResponse.List)
  return list_.Get(index);
}
inline ::micromsg::DelFavItemRsp* BatchDelFavItemResponse::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.BatchDelFavItemResponse.List)
  return list_.Mutable(index);
}
inline ::micromsg::DelFavItemRsp* BatchDelFavItemResponse::add_list() {
  // @@protoc_insertion_point(field_add:micromsg.BatchDelFavItemResponse.List)
  return list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::DelFavItemRsp >*
BatchDelFavItemResponse::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.BatchDelFavItemResponse.List)
  return &list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::DelFavItemRsp >&
BatchDelFavItemResponse::list() const {
  // @@protoc_insertion_point(field_list:micromsg.BatchDelFavItemResponse.List)
  return list_;
}

// -------------------------------------------------------------------

// FavObject

// required uint32 FavId = 1;
inline bool FavObject::has_favid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FavObject::set_has_favid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FavObject::clear_has_favid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FavObject::clear_favid() {
  favid_ = 0u;
  clear_has_favid();
}
inline ::google::protobuf::uint32 FavObject::favid() const {
  // @@protoc_insertion_point(field_get:micromsg.FavObject.FavId)
  return favid_;
}
inline void FavObject::set_favid(::google::protobuf::uint32 value) {
  set_has_favid();
  favid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.FavObject.FavId)
}

// required int32 Status = 2;
inline bool FavObject::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FavObject::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FavObject::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FavObject::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 FavObject::status() const {
  // @@protoc_insertion_point(field_get:micromsg.FavObject.Status)
  return status_;
}
inline void FavObject::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:micromsg.FavObject.Status)
}

// optional string Object = 3;
inline bool FavObject::has_object() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FavObject::set_has_object() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FavObject::clear_has_object() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FavObject::clear_object() {
  object_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_object();
}
inline const ::std::string& FavObject::object() const {
  // @@protoc_insertion_point(field_get:micromsg.FavObject.Object)
  return object_.GetNoArena();
}
inline void FavObject::set_object(const ::std::string& value) {
  set_has_object();
  object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.FavObject.Object)
}
#if LANG_CXX11
inline void FavObject::set_object(::std::string&& value) {
  set_has_object();
  object_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.FavObject.Object)
}
#endif
inline void FavObject::set_object(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_object();
  object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.FavObject.Object)
}
inline void FavObject::set_object(const char* value, size_t size) {
  set_has_object();
  object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.FavObject.Object)
}
inline ::std::string* FavObject::mutable_object() {
  set_has_object();
  // @@protoc_insertion_point(field_mutable:micromsg.FavObject.Object)
  return object_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FavObject::release_object() {
  // @@protoc_insertion_point(field_release:micromsg.FavObject.Object)
  clear_has_object();
  return object_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FavObject::set_allocated_object(::std::string* object) {
  if (object != NULL) {
    set_has_object();
  } else {
    clear_has_object();
  }
  object_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), object);
  // @@protoc_insertion_point(field_set_allocated:micromsg.FavObject.Object)
}

// required uint32 Flag = 4;
inline bool FavObject::has_flag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FavObject::set_has_flag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FavObject::clear_has_flag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FavObject::clear_flag() {
  flag_ = 0u;
  clear_has_flag();
}
inline ::google::protobuf::uint32 FavObject::flag() const {
  // @@protoc_insertion_point(field_get:micromsg.FavObject.Flag)
  return flag_;
}
inline void FavObject::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.FavObject.Flag)
}

// required uint32 UpdateTime = 5;
inline bool FavObject::has_updatetime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FavObject::set_has_updatetime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FavObject::clear_has_updatetime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FavObject::clear_updatetime() {
  updatetime_ = 0u;
  clear_has_updatetime();
}
inline ::google::protobuf::uint32 FavObject::updatetime() const {
  // @@protoc_insertion_point(field_get:micromsg.FavObject.UpdateTime)
  return updatetime_;
}
inline void FavObject::set_updatetime(::google::protobuf::uint32 value) {
  set_has_updatetime();
  updatetime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.FavObject.UpdateTime)
}

// required uint32 UpdateSeq = 6;
inline bool FavObject::has_updateseq() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FavObject::set_has_updateseq() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FavObject::clear_has_updateseq() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FavObject::clear_updateseq() {
  updateseq_ = 0u;
  clear_has_updateseq();
}
inline ::google::protobuf::uint32 FavObject::updateseq() const {
  // @@protoc_insertion_point(field_get:micromsg.FavObject.UpdateSeq)
  return updateseq_;
}
inline void FavObject::set_updateseq(::google::protobuf::uint32 value) {
  set_has_updateseq();
  updateseq_ = value;
  // @@protoc_insertion_point(field_set:micromsg.FavObject.UpdateSeq)
}

// -------------------------------------------------------------------

// BatchGetFavItemRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool BatchGetFavItemRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchGetFavItemRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchGetFavItemRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchGetFavItemRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& BatchGetFavItemRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.BatchGetFavItemRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* BatchGetFavItemRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.BatchGetFavItemRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* BatchGetFavItemRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.BatchGetFavItemRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void BatchGetFavItemRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.BatchGetFavItemRequest.BaseRequest)
}

// required uint32 Count = 2;
inline bool BatchGetFavItemRequest::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BatchGetFavItemRequest::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BatchGetFavItemRequest::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BatchGetFavItemRequest::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 BatchGetFavItemRequest::count() const {
  // @@protoc_insertion_point(field_get:micromsg.BatchGetFavItemRequest.Count)
  return count_;
}
inline void BatchGetFavItemRequest::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.BatchGetFavItemRequest.Count)
}

// repeated uint32 FavIdList = 3 [packed = true];
inline int BatchGetFavItemRequest::favidlist_size() const {
  return favidlist_.size();
}
inline void BatchGetFavItemRequest::clear_favidlist() {
  favidlist_.Clear();
}
inline ::google::protobuf::uint32 BatchGetFavItemRequest::favidlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.BatchGetFavItemRequest.FavIdList)
  return favidlist_.Get(index);
}
inline void BatchGetFavItemRequest::set_favidlist(int index, ::google::protobuf::uint32 value) {
  favidlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:micromsg.BatchGetFavItemRequest.FavIdList)
}
inline void BatchGetFavItemRequest::add_favidlist(::google::protobuf::uint32 value) {
  favidlist_.Add(value);
  // @@protoc_insertion_point(field_add:micromsg.BatchGetFavItemRequest.FavIdList)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BatchGetFavItemRequest::favidlist() const {
  // @@protoc_insertion_point(field_list:micromsg.BatchGetFavItemRequest.FavIdList)
  return favidlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BatchGetFavItemRequest::mutable_favidlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.BatchGetFavItemRequest.FavIdList)
  return &favidlist_;
}

// -------------------------------------------------------------------

// BatchGetFavItemResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool BatchGetFavItemResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchGetFavItemResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchGetFavItemResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchGetFavItemResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& BatchGetFavItemResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.BatchGetFavItemResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* BatchGetFavItemResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.BatchGetFavItemResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* BatchGetFavItemResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.BatchGetFavItemResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void BatchGetFavItemResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.BatchGetFavItemResponse.BaseResponse)
}

// required uint32 Count = 2;
inline bool BatchGetFavItemResponse::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BatchGetFavItemResponse::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BatchGetFavItemResponse::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BatchGetFavItemResponse::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 BatchGetFavItemResponse::count() const {
  // @@protoc_insertion_point(field_get:micromsg.BatchGetFavItemResponse.Count)
  return count_;
}
inline void BatchGetFavItemResponse::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.BatchGetFavItemResponse.Count)
}

// repeated .micromsg.FavObject ObjectList = 3;
inline int BatchGetFavItemResponse::objectlist_size() const {
  return objectlist_.size();
}
inline void BatchGetFavItemResponse::clear_objectlist() {
  objectlist_.Clear();
}
inline const ::micromsg::FavObject& BatchGetFavItemResponse::objectlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.BatchGetFavItemResponse.ObjectList)
  return objectlist_.Get(index);
}
inline ::micromsg::FavObject* BatchGetFavItemResponse::mutable_objectlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.BatchGetFavItemResponse.ObjectList)
  return objectlist_.Mutable(index);
}
inline ::micromsg::FavObject* BatchGetFavItemResponse::add_objectlist() {
  // @@protoc_insertion_point(field_add:micromsg.BatchGetFavItemResponse.ObjectList)
  return objectlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::FavObject >*
BatchGetFavItemResponse::mutable_objectlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.BatchGetFavItemResponse.ObjectList)
  return &objectlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::FavObject >&
BatchGetFavItemResponse::objectlist() const {
  // @@protoc_insertion_point(field_list:micromsg.BatchGetFavItemResponse.ObjectList)
  return objectlist_;
}

// -------------------------------------------------------------------

// CheckCDN

// optional string DataId = 1;
inline bool CheckCDN::has_dataid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CheckCDN::set_has_dataid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CheckCDN::clear_has_dataid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CheckCDN::clear_dataid() {
  dataid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dataid();
}
inline const ::std::string& CheckCDN::dataid() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCDN.DataId)
  return dataid_.GetNoArena();
}
inline void CheckCDN::set_dataid(const ::std::string& value) {
  set_has_dataid();
  dataid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckCDN.DataId)
}
#if LANG_CXX11
inline void CheckCDN::set_dataid(::std::string&& value) {
  set_has_dataid();
  dataid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckCDN.DataId)
}
#endif
inline void CheckCDN::set_dataid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_dataid();
  dataid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckCDN.DataId)
}
inline void CheckCDN::set_dataid(const char* value, size_t size) {
  set_has_dataid();
  dataid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckCDN.DataId)
}
inline ::std::string* CheckCDN::mutable_dataid() {
  set_has_dataid();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckCDN.DataId)
  return dataid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckCDN::release_dataid() {
  // @@protoc_insertion_point(field_release:micromsg.CheckCDN.DataId)
  clear_has_dataid();
  return dataid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckCDN::set_allocated_dataid(::std::string* dataid) {
  if (dataid != NULL) {
    set_has_dataid();
  } else {
    clear_has_dataid();
  }
  dataid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dataid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckCDN.DataId)
}

// optional string FullMd5 = 2;
inline bool CheckCDN::has_fullmd5() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CheckCDN::set_has_fullmd5() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CheckCDN::clear_has_fullmd5() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CheckCDN::clear_fullmd5() {
  fullmd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fullmd5();
}
inline const ::std::string& CheckCDN::fullmd5() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCDN.FullMd5)
  return fullmd5_.GetNoArena();
}
inline void CheckCDN::set_fullmd5(const ::std::string& value) {
  set_has_fullmd5();
  fullmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckCDN.FullMd5)
}
#if LANG_CXX11
inline void CheckCDN::set_fullmd5(::std::string&& value) {
  set_has_fullmd5();
  fullmd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckCDN.FullMd5)
}
#endif
inline void CheckCDN::set_fullmd5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_fullmd5();
  fullmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckCDN.FullMd5)
}
inline void CheckCDN::set_fullmd5(const char* value, size_t size) {
  set_has_fullmd5();
  fullmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckCDN.FullMd5)
}
inline ::std::string* CheckCDN::mutable_fullmd5() {
  set_has_fullmd5();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckCDN.FullMd5)
  return fullmd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckCDN::release_fullmd5() {
  // @@protoc_insertion_point(field_release:micromsg.CheckCDN.FullMd5)
  clear_has_fullmd5();
  return fullmd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckCDN::set_allocated_fullmd5(::std::string* fullmd5) {
  if (fullmd5 != NULL) {
    set_has_fullmd5();
  } else {
    clear_has_fullmd5();
  }
  fullmd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fullmd5);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckCDN.FullMd5)
}

// optional string Head256Md5 = 3;
inline bool CheckCDN::has_head256md5() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CheckCDN::set_has_head256md5() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CheckCDN::clear_has_head256md5() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CheckCDN::clear_head256md5() {
  head256md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_head256md5();
}
inline const ::std::string& CheckCDN::head256md5() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCDN.Head256Md5)
  return head256md5_.GetNoArena();
}
inline void CheckCDN::set_head256md5(const ::std::string& value) {
  set_has_head256md5();
  head256md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckCDN.Head256Md5)
}
#if LANG_CXX11
inline void CheckCDN::set_head256md5(::std::string&& value) {
  set_has_head256md5();
  head256md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckCDN.Head256Md5)
}
#endif
inline void CheckCDN::set_head256md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_head256md5();
  head256md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckCDN.Head256Md5)
}
inline void CheckCDN::set_head256md5(const char* value, size_t size) {
  set_has_head256md5();
  head256md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckCDN.Head256Md5)
}
inline ::std::string* CheckCDN::mutable_head256md5() {
  set_has_head256md5();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckCDN.Head256Md5)
  return head256md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckCDN::release_head256md5() {
  // @@protoc_insertion_point(field_release:micromsg.CheckCDN.Head256Md5)
  clear_has_head256md5();
  return head256md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckCDN::set_allocated_head256md5(::std::string* head256md5) {
  if (head256md5 != NULL) {
    set_has_head256md5();
  } else {
    clear_has_head256md5();
  }
  head256md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), head256md5);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckCDN.Head256Md5)
}

// required uint32 FullSize = 4;
inline bool CheckCDN::has_fullsize() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CheckCDN::set_has_fullsize() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CheckCDN::clear_has_fullsize() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CheckCDN::clear_fullsize() {
  fullsize_ = 0u;
  clear_has_fullsize();
}
inline ::google::protobuf::uint32 CheckCDN::fullsize() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCDN.FullSize)
  return fullsize_;
}
inline void CheckCDN::set_fullsize(::google::protobuf::uint32 value) {
  set_has_fullsize();
  fullsize_ = value;
  // @@protoc_insertion_point(field_set:micromsg.CheckCDN.FullSize)
}

// required uint32 DataSourceType = 5;
inline bool CheckCDN::has_datasourcetype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CheckCDN::set_has_datasourcetype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CheckCDN::clear_has_datasourcetype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CheckCDN::clear_datasourcetype() {
  datasourcetype_ = 0u;
  clear_has_datasourcetype();
}
inline ::google::protobuf::uint32 CheckCDN::datasourcetype() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCDN.DataSourceType)
  return datasourcetype_;
}
inline void CheckCDN::set_datasourcetype(::google::protobuf::uint32 value) {
  set_has_datasourcetype();
  datasourcetype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.CheckCDN.DataSourceType)
}

// optional string DataSourceId = 6;
inline bool CheckCDN::has_datasourceid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CheckCDN::set_has_datasourceid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CheckCDN::clear_has_datasourceid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CheckCDN::clear_datasourceid() {
  datasourceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_datasourceid();
}
inline const ::std::string& CheckCDN::datasourceid() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCDN.DataSourceId)
  return datasourceid_.GetNoArena();
}
inline void CheckCDN::set_datasourceid(const ::std::string& value) {
  set_has_datasourceid();
  datasourceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckCDN.DataSourceId)
}
#if LANG_CXX11
inline void CheckCDN::set_datasourceid(::std::string&& value) {
  set_has_datasourceid();
  datasourceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckCDN.DataSourceId)
}
#endif
inline void CheckCDN::set_datasourceid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_datasourceid();
  datasourceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckCDN.DataSourceId)
}
inline void CheckCDN::set_datasourceid(const char* value, size_t size) {
  set_has_datasourceid();
  datasourceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckCDN.DataSourceId)
}
inline ::std::string* CheckCDN::mutable_datasourceid() {
  set_has_datasourceid();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckCDN.DataSourceId)
  return datasourceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckCDN::release_datasourceid() {
  // @@protoc_insertion_point(field_release:micromsg.CheckCDN.DataSourceId)
  clear_has_datasourceid();
  return datasourceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckCDN::set_allocated_datasourceid(::std::string* datasourceid) {
  if (datasourceid != NULL) {
    set_has_datasourceid();
  } else {
    clear_has_datasourceid();
  }
  datasourceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datasourceid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckCDN.DataSourceId)
}

// required uint32 IsThumb = 7;
inline bool CheckCDN::has_isthumb() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CheckCDN::set_has_isthumb() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CheckCDN::clear_has_isthumb() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CheckCDN::clear_isthumb() {
  isthumb_ = 0u;
  clear_has_isthumb();
}
inline ::google::protobuf::uint32 CheckCDN::isthumb() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCDN.IsThumb)
  return isthumb_;
}
inline void CheckCDN::set_isthumb(::google::protobuf::uint32 value) {
  set_has_isthumb();
  isthumb_ = value;
  // @@protoc_insertion_point(field_set:micromsg.CheckCDN.IsThumb)
}

// -------------------------------------------------------------------

// FavCDNItem

// optional string DataId = 1;
inline bool FavCDNItem::has_dataid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FavCDNItem::set_has_dataid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FavCDNItem::clear_has_dataid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FavCDNItem::clear_dataid() {
  dataid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dataid();
}
inline const ::std::string& FavCDNItem::dataid() const {
  // @@protoc_insertion_point(field_get:micromsg.FavCDNItem.DataId)
  return dataid_.GetNoArena();
}
inline void FavCDNItem::set_dataid(const ::std::string& value) {
  set_has_dataid();
  dataid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.FavCDNItem.DataId)
}
#if LANG_CXX11
inline void FavCDNItem::set_dataid(::std::string&& value) {
  set_has_dataid();
  dataid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.FavCDNItem.DataId)
}
#endif
inline void FavCDNItem::set_dataid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_dataid();
  dataid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.FavCDNItem.DataId)
}
inline void FavCDNItem::set_dataid(const char* value, size_t size) {
  set_has_dataid();
  dataid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.FavCDNItem.DataId)
}
inline ::std::string* FavCDNItem::mutable_dataid() {
  set_has_dataid();
  // @@protoc_insertion_point(field_mutable:micromsg.FavCDNItem.DataId)
  return dataid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FavCDNItem::release_dataid() {
  // @@protoc_insertion_point(field_release:micromsg.FavCDNItem.DataId)
  clear_has_dataid();
  return dataid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FavCDNItem::set_allocated_dataid(::std::string* dataid) {
  if (dataid != NULL) {
    set_has_dataid();
  } else {
    clear_has_dataid();
  }
  dataid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dataid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.FavCDNItem.DataId)
}

// optional string FullMd5 = 2;
inline bool FavCDNItem::has_fullmd5() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FavCDNItem::set_has_fullmd5() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FavCDNItem::clear_has_fullmd5() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FavCDNItem::clear_fullmd5() {
  fullmd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fullmd5();
}
inline const ::std::string& FavCDNItem::fullmd5() const {
  // @@protoc_insertion_point(field_get:micromsg.FavCDNItem.FullMd5)
  return fullmd5_.GetNoArena();
}
inline void FavCDNItem::set_fullmd5(const ::std::string& value) {
  set_has_fullmd5();
  fullmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.FavCDNItem.FullMd5)
}
#if LANG_CXX11
inline void FavCDNItem::set_fullmd5(::std::string&& value) {
  set_has_fullmd5();
  fullmd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.FavCDNItem.FullMd5)
}
#endif
inline void FavCDNItem::set_fullmd5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_fullmd5();
  fullmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.FavCDNItem.FullMd5)
}
inline void FavCDNItem::set_fullmd5(const char* value, size_t size) {
  set_has_fullmd5();
  fullmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.FavCDNItem.FullMd5)
}
inline ::std::string* FavCDNItem::mutable_fullmd5() {
  set_has_fullmd5();
  // @@protoc_insertion_point(field_mutable:micromsg.FavCDNItem.FullMd5)
  return fullmd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FavCDNItem::release_fullmd5() {
  // @@protoc_insertion_point(field_release:micromsg.FavCDNItem.FullMd5)
  clear_has_fullmd5();
  return fullmd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FavCDNItem::set_allocated_fullmd5(::std::string* fullmd5) {
  if (fullmd5 != NULL) {
    set_has_fullmd5();
  } else {
    clear_has_fullmd5();
  }
  fullmd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fullmd5);
  // @@protoc_insertion_point(field_set_allocated:micromsg.FavCDNItem.FullMd5)
}

// optional string Head256Md5 = 3;
inline bool FavCDNItem::has_head256md5() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FavCDNItem::set_has_head256md5() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FavCDNItem::clear_has_head256md5() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FavCDNItem::clear_head256md5() {
  head256md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_head256md5();
}
inline const ::std::string& FavCDNItem::head256md5() const {
  // @@protoc_insertion_point(field_get:micromsg.FavCDNItem.Head256Md5)
  return head256md5_.GetNoArena();
}
inline void FavCDNItem::set_head256md5(const ::std::string& value) {
  set_has_head256md5();
  head256md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.FavCDNItem.Head256Md5)
}
#if LANG_CXX11
inline void FavCDNItem::set_head256md5(::std::string&& value) {
  set_has_head256md5();
  head256md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.FavCDNItem.Head256Md5)
}
#endif
inline void FavCDNItem::set_head256md5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_head256md5();
  head256md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.FavCDNItem.Head256Md5)
}
inline void FavCDNItem::set_head256md5(const char* value, size_t size) {
  set_has_head256md5();
  head256md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.FavCDNItem.Head256Md5)
}
inline ::std::string* FavCDNItem::mutable_head256md5() {
  set_has_head256md5();
  // @@protoc_insertion_point(field_mutable:micromsg.FavCDNItem.Head256Md5)
  return head256md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FavCDNItem::release_head256md5() {
  // @@protoc_insertion_point(field_release:micromsg.FavCDNItem.Head256Md5)
  clear_has_head256md5();
  return head256md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FavCDNItem::set_allocated_head256md5(::std::string* head256md5) {
  if (head256md5 != NULL) {
    set_has_head256md5();
  } else {
    clear_has_head256md5();
  }
  head256md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), head256md5);
  // @@protoc_insertion_point(field_set_allocated:micromsg.FavCDNItem.Head256Md5)
}

// required uint32 FullSize = 4;
inline bool FavCDNItem::has_fullsize() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FavCDNItem::set_has_fullsize() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FavCDNItem::clear_has_fullsize() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FavCDNItem::clear_fullsize() {
  fullsize_ = 0u;
  clear_has_fullsize();
}
inline ::google::protobuf::uint32 FavCDNItem::fullsize() const {
  // @@protoc_insertion_point(field_get:micromsg.FavCDNItem.FullSize)
  return fullsize_;
}
inline void FavCDNItem::set_fullsize(::google::protobuf::uint32 value) {
  set_has_fullsize();
  fullsize_ = value;
  // @@protoc_insertion_point(field_set:micromsg.FavCDNItem.FullSize)
}

// optional string CDNURL = 5;
inline bool FavCDNItem::has_cdnurl() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FavCDNItem::set_has_cdnurl() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FavCDNItem::clear_has_cdnurl() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FavCDNItem::clear_cdnurl() {
  cdnurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cdnurl();
}
inline const ::std::string& FavCDNItem::cdnurl() const {
  // @@protoc_insertion_point(field_get:micromsg.FavCDNItem.CDNURL)
  return cdnurl_.GetNoArena();
}
inline void FavCDNItem::set_cdnurl(const ::std::string& value) {
  set_has_cdnurl();
  cdnurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.FavCDNItem.CDNURL)
}
#if LANG_CXX11
inline void FavCDNItem::set_cdnurl(::std::string&& value) {
  set_has_cdnurl();
  cdnurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.FavCDNItem.CDNURL)
}
#endif
inline void FavCDNItem::set_cdnurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cdnurl();
  cdnurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.FavCDNItem.CDNURL)
}
inline void FavCDNItem::set_cdnurl(const char* value, size_t size) {
  set_has_cdnurl();
  cdnurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.FavCDNItem.CDNURL)
}
inline ::std::string* FavCDNItem::mutable_cdnurl() {
  set_has_cdnurl();
  // @@protoc_insertion_point(field_mutable:micromsg.FavCDNItem.CDNURL)
  return cdnurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FavCDNItem::release_cdnurl() {
  // @@protoc_insertion_point(field_release:micromsg.FavCDNItem.CDNURL)
  clear_has_cdnurl();
  return cdnurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FavCDNItem::set_allocated_cdnurl(::std::string* cdnurl) {
  if (cdnurl != NULL) {
    set_has_cdnurl();
  } else {
    clear_has_cdnurl();
  }
  cdnurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cdnurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.FavCDNItem.CDNURL)
}

// optional string AESKey = 6;
inline bool FavCDNItem::has_aeskey() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FavCDNItem::set_has_aeskey() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FavCDNItem::clear_has_aeskey() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FavCDNItem::clear_aeskey() {
  aeskey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_aeskey();
}
inline const ::std::string& FavCDNItem::aeskey() const {
  // @@protoc_insertion_point(field_get:micromsg.FavCDNItem.AESKey)
  return aeskey_.GetNoArena();
}
inline void FavCDNItem::set_aeskey(const ::std::string& value) {
  set_has_aeskey();
  aeskey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.FavCDNItem.AESKey)
}
#if LANG_CXX11
inline void FavCDNItem::set_aeskey(::std::string&& value) {
  set_has_aeskey();
  aeskey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.FavCDNItem.AESKey)
}
#endif
inline void FavCDNItem::set_aeskey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_aeskey();
  aeskey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.FavCDNItem.AESKey)
}
inline void FavCDNItem::set_aeskey(const char* value, size_t size) {
  set_has_aeskey();
  aeskey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.FavCDNItem.AESKey)
}
inline ::std::string* FavCDNItem::mutable_aeskey() {
  set_has_aeskey();
  // @@protoc_insertion_point(field_mutable:micromsg.FavCDNItem.AESKey)
  return aeskey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FavCDNItem::release_aeskey() {
  // @@protoc_insertion_point(field_release:micromsg.FavCDNItem.AESKey)
  clear_has_aeskey();
  return aeskey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FavCDNItem::set_allocated_aeskey(::std::string* aeskey) {
  if (aeskey != NULL) {
    set_has_aeskey();
  } else {
    clear_has_aeskey();
  }
  aeskey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), aeskey);
  // @@protoc_insertion_point(field_set_allocated:micromsg.FavCDNItem.AESKey)
}

// required int32 EncryVer = 7;
inline bool FavCDNItem::has_encryver() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FavCDNItem::set_has_encryver() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FavCDNItem::clear_has_encryver() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FavCDNItem::clear_encryver() {
  encryver_ = 0;
  clear_has_encryver();
}
inline ::google::protobuf::int32 FavCDNItem::encryver() const {
  // @@protoc_insertion_point(field_get:micromsg.FavCDNItem.EncryVer)
  return encryver_;
}
inline void FavCDNItem::set_encryver(::google::protobuf::int32 value) {
  set_has_encryver();
  encryver_ = value;
  // @@protoc_insertion_point(field_set:micromsg.FavCDNItem.EncryVer)
}

// optional string VideoId = 8;
inline bool FavCDNItem::has_videoid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FavCDNItem::set_has_videoid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FavCDNItem::clear_has_videoid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FavCDNItem::clear_videoid() {
  videoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_videoid();
}
inline const ::std::string& FavCDNItem::videoid() const {
  // @@protoc_insertion_point(field_get:micromsg.FavCDNItem.VideoId)
  return videoid_.GetNoArena();
}
inline void FavCDNItem::set_videoid(const ::std::string& value) {
  set_has_videoid();
  videoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.FavCDNItem.VideoId)
}
#if LANG_CXX11
inline void FavCDNItem::set_videoid(::std::string&& value) {
  set_has_videoid();
  videoid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.FavCDNItem.VideoId)
}
#endif
inline void FavCDNItem::set_videoid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_videoid();
  videoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.FavCDNItem.VideoId)
}
inline void FavCDNItem::set_videoid(const char* value, size_t size) {
  set_has_videoid();
  videoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.FavCDNItem.VideoId)
}
inline ::std::string* FavCDNItem::mutable_videoid() {
  set_has_videoid();
  // @@protoc_insertion_point(field_mutable:micromsg.FavCDNItem.VideoId)
  return videoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FavCDNItem::release_videoid() {
  // @@protoc_insertion_point(field_release:micromsg.FavCDNItem.VideoId)
  clear_has_videoid();
  return videoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FavCDNItem::set_allocated_videoid(::std::string* videoid) {
  if (videoid != NULL) {
    set_has_videoid();
  } else {
    clear_has_videoid();
  }
  videoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), videoid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.FavCDNItem.VideoId)
}

// required int32 Status = 9;
inline bool FavCDNItem::has_status() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void FavCDNItem::set_has_status() {
  _has_bits_[0] |= 0x00000100u;
}
inline void FavCDNItem::clear_has_status() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void FavCDNItem::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 FavCDNItem::status() const {
  // @@protoc_insertion_point(field_get:micromsg.FavCDNItem.Status)
  return status_;
}
inline void FavCDNItem::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:micromsg.FavCDNItem.Status)
}

// required int32 DataStatus = 10;
inline bool FavCDNItem::has_datastatus() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void FavCDNItem::set_has_datastatus() {
  _has_bits_[0] |= 0x00000200u;
}
inline void FavCDNItem::clear_has_datastatus() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void FavCDNItem::clear_datastatus() {
  datastatus_ = 0;
  clear_has_datastatus();
}
inline ::google::protobuf::int32 FavCDNItem::datastatus() const {
  // @@protoc_insertion_point(field_get:micromsg.FavCDNItem.DataStatus)
  return datastatus_;
}
inline void FavCDNItem::set_datastatus(::google::protobuf::int32 value) {
  set_has_datastatus();
  datastatus_ = value;
  // @@protoc_insertion_point(field_set:micromsg.FavCDNItem.DataStatus)
}

// -------------------------------------------------------------------

// GetFavInfoRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetFavInfoRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetFavInfoRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetFavInfoRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetFavInfoRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetFavInfoRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetFavInfoRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetFavInfoRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetFavInfoRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetFavInfoRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetFavInfoRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetFavInfoRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetFavInfoRequest.BaseRequest)
}

// -------------------------------------------------------------------

// GetFavInfoResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetFavInfoResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetFavInfoResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetFavInfoResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetFavInfoResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetFavInfoResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetFavInfoResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetFavInfoResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetFavInfoResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetFavInfoResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetFavInfoResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetFavInfoResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetFavInfoResponse.BaseResponse)
}

// required uint64 UsedSize = 2;
inline bool GetFavInfoResponse::has_usedsize() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetFavInfoResponse::set_has_usedsize() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetFavInfoResponse::clear_has_usedsize() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetFavInfoResponse::clear_usedsize() {
  usedsize_ = GOOGLE_ULONGLONG(0);
  clear_has_usedsize();
}
inline ::google::protobuf::uint64 GetFavInfoResponse::usedsize() const {
  // @@protoc_insertion_point(field_get:micromsg.GetFavInfoResponse.UsedSize)
  return usedsize_;
}
inline void GetFavInfoResponse::set_usedsize(::google::protobuf::uint64 value) {
  set_has_usedsize();
  usedsize_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetFavInfoResponse.UsedSize)
}

// required uint64 TotalSize = 3;
inline bool GetFavInfoResponse::has_totalsize() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetFavInfoResponse::set_has_totalsize() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetFavInfoResponse::clear_has_totalsize() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetFavInfoResponse::clear_totalsize() {
  totalsize_ = GOOGLE_ULONGLONG(0);
  clear_has_totalsize();
}
inline ::google::protobuf::uint64 GetFavInfoResponse::totalsize() const {
  // @@protoc_insertion_point(field_get:micromsg.GetFavInfoResponse.TotalSize)
  return totalsize_;
}
inline void GetFavInfoResponse::set_totalsize(::google::protobuf::uint64 value) {
  set_has_totalsize();
  totalsize_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetFavInfoResponse.TotalSize)
}

// required uint32 MxFavFileSize = 4;
inline bool GetFavInfoResponse::has_mxfavfilesize() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetFavInfoResponse::set_has_mxfavfilesize() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetFavInfoResponse::clear_has_mxfavfilesize() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetFavInfoResponse::clear_mxfavfilesize() {
  mxfavfilesize_ = 0u;
  clear_has_mxfavfilesize();
}
inline ::google::protobuf::uint32 GetFavInfoResponse::mxfavfilesize() const {
  // @@protoc_insertion_point(field_get:micromsg.GetFavInfoResponse.MxFavFileSize)
  return mxfavfilesize_;
}
inline void GetFavInfoResponse::set_mxfavfilesize(::google::protobuf::uint32 value) {
  set_has_mxfavfilesize();
  mxfavfilesize_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetFavInfoResponse.MxFavFileSize)
}

// required uint32 MxAutoUploadSize = 5;
inline bool GetFavInfoResponse::has_mxautouploadsize() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetFavInfoResponse::set_has_mxautouploadsize() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetFavInfoResponse::clear_has_mxautouploadsize() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetFavInfoResponse::clear_mxautouploadsize() {
  mxautouploadsize_ = 0u;
  clear_has_mxautouploadsize();
}
inline ::google::protobuf::uint32 GetFavInfoResponse::mxautouploadsize() const {
  // @@protoc_insertion_point(field_get:micromsg.GetFavInfoResponse.MxAutoUploadSize)
  return mxautouploadsize_;
}
inline void GetFavInfoResponse::set_mxautouploadsize(::google::protobuf::uint32 value) {
  set_has_mxautouploadsize();
  mxautouploadsize_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetFavInfoResponse.MxAutoUploadSize)
}

// required uint32 MxAutoDownloadSize = 6;
inline bool GetFavInfoResponse::has_mxautodownloadsize() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetFavInfoResponse::set_has_mxautodownloadsize() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetFavInfoResponse::clear_has_mxautodownloadsize() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetFavInfoResponse::clear_mxautodownloadsize() {
  mxautodownloadsize_ = 0u;
  clear_has_mxautodownloadsize();
}
inline ::google::protobuf::uint32 GetFavInfoResponse::mxautodownloadsize() const {
  // @@protoc_insertion_point(field_get:micromsg.GetFavInfoResponse.MxAutoDownloadSize)
  return mxautodownloadsize_;
}
inline void GetFavInfoResponse::set_mxautodownloadsize(::google::protobuf::uint32 value) {
  set_has_mxautodownloadsize();
  mxautodownloadsize_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetFavInfoResponse.MxAutoDownloadSize)
}

// -------------------------------------------------------------------

// CheckCDNRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool CheckCDNRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CheckCDNRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CheckCDNRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CheckCDNRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& CheckCDNRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCDNRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* CheckCDNRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.CheckCDNRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* CheckCDNRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.CheckCDNRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void CheckCDNRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckCDNRequest.BaseRequest)
}

// required uint32 Count = 2;
inline bool CheckCDNRequest::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CheckCDNRequest::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CheckCDNRequest::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CheckCDNRequest::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 CheckCDNRequest::count() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCDNRequest.Count)
  return count_;
}
inline void CheckCDNRequest::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.CheckCDNRequest.Count)
}

// repeated .micromsg.CheckCDN List = 3;
inline int CheckCDNRequest::list_size() const {
  return list_.size();
}
inline void CheckCDNRequest::clear_list() {
  list_.Clear();
}
inline const ::micromsg::CheckCDN& CheckCDNRequest::list(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCDNRequest.List)
  return list_.Get(index);
}
inline ::micromsg::CheckCDN* CheckCDNRequest::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.CheckCDNRequest.List)
  return list_.Mutable(index);
}
inline ::micromsg::CheckCDN* CheckCDNRequest::add_list() {
  // @@protoc_insertion_point(field_add:micromsg.CheckCDNRequest.List)
  return list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::CheckCDN >*
CheckCDNRequest::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.CheckCDNRequest.List)
  return &list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::CheckCDN >&
CheckCDNRequest::list() const {
  // @@protoc_insertion_point(field_list:micromsg.CheckCDNRequest.List)
  return list_;
}

// -------------------------------------------------------------------

// CheckCDNResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool CheckCDNResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CheckCDNResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CheckCDNResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CheckCDNResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& CheckCDNResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCDNResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* CheckCDNResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.CheckCDNResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* CheckCDNResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.CheckCDNResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void CheckCDNResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckCDNResponse.BaseResponse)
}

// required uint32 Count = 2;
inline bool CheckCDNResponse::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CheckCDNResponse::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CheckCDNResponse::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CheckCDNResponse::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 CheckCDNResponse::count() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCDNResponse.Count)
  return count_;
}
inline void CheckCDNResponse::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.CheckCDNResponse.Count)
}

// repeated .micromsg.FavCDNItem List = 3;
inline int CheckCDNResponse::list_size() const {
  return list_.size();
}
inline void CheckCDNResponse::clear_list() {
  list_.Clear();
}
inline const ::micromsg::FavCDNItem& CheckCDNResponse::list(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCDNResponse.List)
  return list_.Get(index);
}
inline ::micromsg::FavCDNItem* CheckCDNResponse::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.CheckCDNResponse.List)
  return list_.Mutable(index);
}
inline ::micromsg::FavCDNItem* CheckCDNResponse::add_list() {
  // @@protoc_insertion_point(field_add:micromsg.CheckCDNResponse.List)
  return list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::FavCDNItem >*
CheckCDNResponse::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.CheckCDNResponse.List)
  return &list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::FavCDNItem >&
CheckCDNResponse::list() const {
  // @@protoc_insertion_point(field_list:micromsg.CheckCDNResponse.List)
  return list_;
}

// -------------------------------------------------------------------

// FavSyncRequest

// required uint32 Selector = 1;
inline bool FavSyncRequest::has_selector() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FavSyncRequest::set_has_selector() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FavSyncRequest::clear_has_selector() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FavSyncRequest::clear_selector() {
  selector_ = 0u;
  clear_has_selector();
}
inline ::google::protobuf::uint32 FavSyncRequest::selector() const {
  // @@protoc_insertion_point(field_get:micromsg.FavSyncRequest.Selector)
  return selector_;
}
inline void FavSyncRequest::set_selector(::google::protobuf::uint32 value) {
  set_has_selector();
  selector_ = value;
  // @@protoc_insertion_point(field_set:micromsg.FavSyncRequest.Selector)
}

// required .micromsg.SKBuiltinBuffer_t KeyBuf = 3;
inline bool FavSyncRequest::has_keybuf() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FavSyncRequest::set_has_keybuf() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FavSyncRequest::clear_has_keybuf() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FavSyncRequest::clear_keybuf() {
  if (keybuf_ != NULL) keybuf_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_keybuf();
}
inline const ::micromsg::SKBuiltinBuffer_t& FavSyncRequest::keybuf() const {
  // @@protoc_insertion_point(field_get:micromsg.FavSyncRequest.KeyBuf)
  return keybuf_ != NULL ? *keybuf_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* FavSyncRequest::mutable_keybuf() {
  set_has_keybuf();
  if (keybuf_ == NULL) {
    keybuf_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.FavSyncRequest.KeyBuf)
  return keybuf_;
}
inline ::micromsg::SKBuiltinBuffer_t* FavSyncRequest::release_keybuf() {
  // @@protoc_insertion_point(field_release:micromsg.FavSyncRequest.KeyBuf)
  clear_has_keybuf();
  ::micromsg::SKBuiltinBuffer_t* temp = keybuf_;
  keybuf_ = NULL;
  return temp;
}
inline void FavSyncRequest::set_allocated_keybuf(::micromsg::SKBuiltinBuffer_t* keybuf) {
  delete keybuf_;
  keybuf_ = keybuf;
  if (keybuf) {
    set_has_keybuf();
  } else {
    clear_has_keybuf();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.FavSyncRequest.KeyBuf)
}

// -------------------------------------------------------------------

// FavSyncResponse

// required int32 Ret = 1;
inline bool FavSyncResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FavSyncResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FavSyncResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FavSyncResponse::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 FavSyncResponse::ret() const {
  // @@protoc_insertion_point(field_get:micromsg.FavSyncResponse.Ret)
  return ret_;
}
inline void FavSyncResponse::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:micromsg.FavSyncResponse.Ret)
}

// required .micromsg.CmdList CmdList = 2;
inline bool FavSyncResponse::has_cmdlist() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FavSyncResponse::set_has_cmdlist() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FavSyncResponse::clear_has_cmdlist() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FavSyncResponse::clear_cmdlist() {
  if (cmdlist_ != NULL) cmdlist_->::micromsg::CmdList::Clear();
  clear_has_cmdlist();
}
inline const ::micromsg::CmdList& FavSyncResponse::cmdlist() const {
  // @@protoc_insertion_point(field_get:micromsg.FavSyncResponse.CmdList)
  return cmdlist_ != NULL ? *cmdlist_
                         : *::micromsg::CmdList::internal_default_instance();
}
inline ::micromsg::CmdList* FavSyncResponse::mutable_cmdlist() {
  set_has_cmdlist();
  if (cmdlist_ == NULL) {
    cmdlist_ = new ::micromsg::CmdList;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.FavSyncResponse.CmdList)
  return cmdlist_;
}
inline ::micromsg::CmdList* FavSyncResponse::release_cmdlist() {
  // @@protoc_insertion_point(field_release:micromsg.FavSyncResponse.CmdList)
  clear_has_cmdlist();
  ::micromsg::CmdList* temp = cmdlist_;
  cmdlist_ = NULL;
  return temp;
}
inline void FavSyncResponse::set_allocated_cmdlist(::micromsg::CmdList* cmdlist) {
  delete cmdlist_;
  cmdlist_ = cmdlist;
  if (cmdlist) {
    set_has_cmdlist();
  } else {
    clear_has_cmdlist();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.FavSyncResponse.CmdList)
}

// required .micromsg.SKBuiltinBuffer_t KeyBuf = 3;
inline bool FavSyncResponse::has_keybuf() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FavSyncResponse::set_has_keybuf() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FavSyncResponse::clear_has_keybuf() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FavSyncResponse::clear_keybuf() {
  if (keybuf_ != NULL) keybuf_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_keybuf();
}
inline const ::micromsg::SKBuiltinBuffer_t& FavSyncResponse::keybuf() const {
  // @@protoc_insertion_point(field_get:micromsg.FavSyncResponse.KeyBuf)
  return keybuf_ != NULL ? *keybuf_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* FavSyncResponse::mutable_keybuf() {
  set_has_keybuf();
  if (keybuf_ == NULL) {
    keybuf_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.FavSyncResponse.KeyBuf)
  return keybuf_;
}
inline ::micromsg::SKBuiltinBuffer_t* FavSyncResponse::release_keybuf() {
  // @@protoc_insertion_point(field_release:micromsg.FavSyncResponse.KeyBuf)
  clear_has_keybuf();
  ::micromsg::SKBuiltinBuffer_t* temp = keybuf_;
  keybuf_ = NULL;
  return temp;
}
inline void FavSyncResponse::set_allocated_keybuf(::micromsg::SKBuiltinBuffer_t* keybuf) {
  delete keybuf_;
  keybuf_ = keybuf;
  if (keybuf) {
    set_has_keybuf();
  } else {
    clear_has_keybuf();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.FavSyncResponse.KeyBuf)
}

// required uint32 ContinueFlag = 4;
inline bool FavSyncResponse::has_continueflag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FavSyncResponse::set_has_continueflag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FavSyncResponse::clear_has_continueflag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FavSyncResponse::clear_continueflag() {
  continueflag_ = 0u;
  clear_has_continueflag();
}
inline ::google::protobuf::uint32 FavSyncResponse::continueflag() const {
  // @@protoc_insertion_point(field_get:micromsg.FavSyncResponse.ContinueFlag)
  return continueflag_;
}
inline void FavSyncResponse::set_continueflag(::google::protobuf::uint32 value) {
  set_has_continueflag();
  continueflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.FavSyncResponse.ContinueFlag)
}

// -------------------------------------------------------------------

// TransCDNItem

// required uint32 ClientId = 1;
inline bool TransCDNItem::has_clientid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TransCDNItem::set_has_clientid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TransCDNItem::clear_has_clientid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TransCDNItem::clear_clientid() {
  clientid_ = 0u;
  clear_has_clientid();
}
inline ::google::protobuf::uint32 TransCDNItem::clientid() const {
  // @@protoc_insertion_point(field_get:micromsg.TransCDNItem.ClientId)
  return clientid_;
}
inline void TransCDNItem::set_clientid(::google::protobuf::uint32 value) {
  set_has_clientid();
  clientid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.TransCDNItem.ClientId)
}

// optional string FileId = 2;
inline bool TransCDNItem::has_fileid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TransCDNItem::set_has_fileid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TransCDNItem::clear_has_fileid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TransCDNItem::clear_fileid() {
  fileid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fileid();
}
inline const ::std::string& TransCDNItem::fileid() const {
  // @@protoc_insertion_point(field_get:micromsg.TransCDNItem.FileId)
  return fileid_.GetNoArena();
}
inline void TransCDNItem::set_fileid(const ::std::string& value) {
  set_has_fileid();
  fileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.TransCDNItem.FileId)
}
#if LANG_CXX11
inline void TransCDNItem::set_fileid(::std::string&& value) {
  set_has_fileid();
  fileid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.TransCDNItem.FileId)
}
#endif
inline void TransCDNItem::set_fileid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_fileid();
  fileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.TransCDNItem.FileId)
}
inline void TransCDNItem::set_fileid(const char* value, size_t size) {
  set_has_fileid();
  fileid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.TransCDNItem.FileId)
}
inline ::std::string* TransCDNItem::mutable_fileid() {
  set_has_fileid();
  // @@protoc_insertion_point(field_mutable:micromsg.TransCDNItem.FileId)
  return fileid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransCDNItem::release_fileid() {
  // @@protoc_insertion_point(field_release:micromsg.TransCDNItem.FileId)
  clear_has_fileid();
  return fileid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransCDNItem::set_allocated_fileid(::std::string* fileid) {
  if (fileid != NULL) {
    set_has_fileid();
  } else {
    clear_has_fileid();
  }
  fileid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fileid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.TransCDNItem.FileId)
}

// optional string AesKey = 3;
inline bool TransCDNItem::has_aeskey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TransCDNItem::set_has_aeskey() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TransCDNItem::clear_has_aeskey() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TransCDNItem::clear_aeskey() {
  aeskey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_aeskey();
}
inline const ::std::string& TransCDNItem::aeskey() const {
  // @@protoc_insertion_point(field_get:micromsg.TransCDNItem.AesKey)
  return aeskey_.GetNoArena();
}
inline void TransCDNItem::set_aeskey(const ::std::string& value) {
  set_has_aeskey();
  aeskey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.TransCDNItem.AesKey)
}
#if LANG_CXX11
inline void TransCDNItem::set_aeskey(::std::string&& value) {
  set_has_aeskey();
  aeskey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.TransCDNItem.AesKey)
}
#endif
inline void TransCDNItem::set_aeskey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_aeskey();
  aeskey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.TransCDNItem.AesKey)
}
inline void TransCDNItem::set_aeskey(const char* value, size_t size) {
  set_has_aeskey();
  aeskey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.TransCDNItem.AesKey)
}
inline ::std::string* TransCDNItem::mutable_aeskey() {
  set_has_aeskey();
  // @@protoc_insertion_point(field_mutable:micromsg.TransCDNItem.AesKey)
  return aeskey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TransCDNItem::release_aeskey() {
  // @@protoc_insertion_point(field_release:micromsg.TransCDNItem.AesKey)
  clear_has_aeskey();
  return aeskey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TransCDNItem::set_allocated_aeskey(::std::string* aeskey) {
  if (aeskey != NULL) {
    set_has_aeskey();
  } else {
    clear_has_aeskey();
  }
  aeskey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), aeskey);
  // @@protoc_insertion_point(field_set_allocated:micromsg.TransCDNItem.AesKey)
}

// required uint32 FavDataType = 4;
inline bool TransCDNItem::has_favdatatype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TransCDNItem::set_has_favdatatype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TransCDNItem::clear_has_favdatatype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TransCDNItem::clear_favdatatype() {
  favdatatype_ = 0u;
  clear_has_favdatatype();
}
inline ::google::protobuf::uint32 TransCDNItem::favdatatype() const {
  // @@protoc_insertion_point(field_get:micromsg.TransCDNItem.FavDataType)
  return favdatatype_;
}
inline void TransCDNItem::set_favdatatype(::google::protobuf::uint32 value) {
  set_has_favdatatype();
  favdatatype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.TransCDNItem.FavDataType)
}

// required uint64 Size = 5;
inline bool TransCDNItem::has_size() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TransCDNItem::set_has_size() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TransCDNItem::clear_has_size() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TransCDNItem::clear_size() {
  size_ = GOOGLE_ULONGLONG(0);
  clear_has_size();
}
inline ::google::protobuf::uint64 TransCDNItem::size() const {
  // @@protoc_insertion_point(field_get:micromsg.TransCDNItem.Size)
  return size_;
}
inline void TransCDNItem::set_size(::google::protobuf::uint64 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:micromsg.TransCDNItem.Size)
}

// -------------------------------------------------------------------

// BatchTransCDNRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool BatchTransCDNRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchTransCDNRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchTransCDNRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchTransCDNRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& BatchTransCDNRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.BatchTransCDNRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* BatchTransCDNRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.BatchTransCDNRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* BatchTransCDNRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.BatchTransCDNRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void BatchTransCDNRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.BatchTransCDNRequest.BaseRequest)
}

// required uint32 Count = 2;
inline bool BatchTransCDNRequest::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BatchTransCDNRequest::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BatchTransCDNRequest::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BatchTransCDNRequest::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 BatchTransCDNRequest::count() const {
  // @@protoc_insertion_point(field_get:micromsg.BatchTransCDNRequest.Count)
  return count_;
}
inline void BatchTransCDNRequest::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.BatchTransCDNRequest.Count)
}

// repeated .micromsg.TransCDNItem List = 3;
inline int BatchTransCDNRequest::list_size() const {
  return list_.size();
}
inline void BatchTransCDNRequest::clear_list() {
  list_.Clear();
}
inline const ::micromsg::TransCDNItem& BatchTransCDNRequest::list(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.BatchTransCDNRequest.List)
  return list_.Get(index);
}
inline ::micromsg::TransCDNItem* BatchTransCDNRequest::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.BatchTransCDNRequest.List)
  return list_.Mutable(index);
}
inline ::micromsg::TransCDNItem* BatchTransCDNRequest::add_list() {
  // @@protoc_insertion_point(field_add:micromsg.BatchTransCDNRequest.List)
  return list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::TransCDNItem >*
BatchTransCDNRequest::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.BatchTransCDNRequest.List)
  return &list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::TransCDNItem >&
BatchTransCDNRequest::list() const {
  // @@protoc_insertion_point(field_list:micromsg.BatchTransCDNRequest.List)
  return list_;
}

// -------------------------------------------------------------------

// BatchTransCDNResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool BatchTransCDNResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchTransCDNResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchTransCDNResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchTransCDNResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& BatchTransCDNResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.BatchTransCDNResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* BatchTransCDNResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.BatchTransCDNResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* BatchTransCDNResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.BatchTransCDNResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void BatchTransCDNResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.BatchTransCDNResponse.BaseResponse)
}

// required uint32 Count = 2;
inline bool BatchTransCDNResponse::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BatchTransCDNResponse::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BatchTransCDNResponse::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BatchTransCDNResponse::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 BatchTransCDNResponse::count() const {
  // @@protoc_insertion_point(field_get:micromsg.BatchTransCDNResponse.Count)
  return count_;
}
inline void BatchTransCDNResponse::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.BatchTransCDNResponse.Count)
}

// repeated .micromsg.TransCDNItem List = 3;
inline int BatchTransCDNResponse::list_size() const {
  return list_.size();
}
inline void BatchTransCDNResponse::clear_list() {
  list_.Clear();
}
inline const ::micromsg::TransCDNItem& BatchTransCDNResponse::list(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.BatchTransCDNResponse.List)
  return list_.Get(index);
}
inline ::micromsg::TransCDNItem* BatchTransCDNResponse::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.BatchTransCDNResponse.List)
  return list_.Mutable(index);
}
inline ::micromsg::TransCDNItem* BatchTransCDNResponse::add_list() {
  // @@protoc_insertion_point(field_add:micromsg.BatchTransCDNResponse.List)
  return list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::TransCDNItem >*
BatchTransCDNResponse::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.BatchTransCDNResponse.List)
  return &list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::TransCDNItem >&
BatchTransCDNResponse::list() const {
  // @@protoc_insertion_point(field_list:micromsg.BatchTransCDNResponse.List)
  return list_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace micromsg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mmfav_2eproto__INCLUDED
