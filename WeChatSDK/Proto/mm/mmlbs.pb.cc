// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mmlbs.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mmlbs.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace micromsg {
class LbsLifeExtInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LbsLifeExtInfo> {
} _LbsLifeExtInfo_default_instance_;
class LbsLocationDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LbsLocation> {
} _LbsLocation_default_instance_;
class CreatePoiRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CreatePoiRequest> {
} _CreatePoiRequest_default_instance_;
class CreatePoiResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CreatePoiResponse> {
} _CreatePoiResponse_default_instance_;
class GetLbsLifeListRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetLbsLifeListRequest> {
} _GetLbsLifeListRequest_default_instance_;
class LbsLifeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LbsLife> {
} _LbsLife_default_instance_;
class GetLbsFunctionListRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetLbsFunctionListRequest> {
} _GetLbsFunctionListRequest_default_instance_;
class GetLbsFunctionListResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetLbsFunctionListResponse> {
} _GetLbsFunctionListResponse_default_instance_;
class GetLbsLifeListResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetLbsLifeListResponse> {
} _GetLbsLifeListResponse_default_instance_;
class LBSLifeActionBookingDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LBSLifeActionBooking> {
} _LBSLifeActionBooking_default_instance_;
class LBSLifeActionBargainDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LBSLifeActionBargain> {
} _LBSLifeActionBargain_default_instance_;
class LBSLifeActionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LBSLifeAction> {
} _LBSLifeAction_default_instance_;
class LBSLifeActionListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LBSLifeActionList> {
} _LBSLifeActionList_default_instance_;
class LbsLifeDetailDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LbsLifeDetail> {
} _LbsLifeDetail_default_instance_;
class GetLbsLifeDetailRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetLbsLifeDetailRequest> {
} _GetLbsLifeDetailRequest_default_instance_;
class GetLbsLifeDetailResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetLbsLifeDetailResponse> {
} _GetLbsLifeDetailResponse_default_instance_;
class LbsRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LbsRequest> {
} _LbsRequest_default_instance_;
class AlbumLbsRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AlbumLbsRequest> {
} _AlbumLbsRequest_default_instance_;
class LbsContactInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LbsContactInfo> {
} _LbsContactInfo_default_instance_;
class LbsResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LbsResponse> {
} _LbsResponse_default_instance_;
class AlbumLbsContactInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AlbumLbsContactInfo> {
} _AlbumLbsContactInfo_default_instance_;
class AlbumLbsResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AlbumLbsResponse> {
} _AlbumLbsResponse_default_instance_;
class ShakeReportRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ShakeReportRequest> {
} _ShakeReportRequest_default_instance_;
class ShakeBufferDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ShakeBuffer> {
} _ShakeBuffer_default_instance_;
class ShakeReportResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ShakeReportResponse> {
} _ShakeReportResponse_default_instance_;
class ShakeGetRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ShakeGetRequest> {
} _ShakeGetRequest_default_instance_;
class ShakeGetItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ShakeGetItem> {
} _ShakeGetItem_default_instance_;
class ShakeGetResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ShakeGetResponse> {
} _ShakeGetResponse_default_instance_;
class ShakeMatchRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ShakeMatchRequest> {
} _ShakeMatchRequest_default_instance_;
class ShakeMatchResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ShakeMatchResponse> {
} _ShakeMatchResponse_default_instance_;
class ShakeImgRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ShakeImgRequest> {
} _ShakeImgRequest_default_instance_;
class ShakeImgResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ShakeImgResponse> {
} _ShakeImgResponse_default_instance_;
class ScanStreetViewRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ScanStreetViewRequest> {
} _ScanStreetViewRequest_default_instance_;
class ScanStreetViewResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ScanStreetViewResponse> {
} _ScanStreetViewResponse_default_instance_;
class LbsRoomRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LbsRoomRequest> {
} _LbsRoomRequest_default_instance_;
class LbsRoomResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LbsRoomResponse> {
} _LbsRoomResponse_default_instance_;
class LbsRoomMemberRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LbsRoomMemberRequest> {
} _LbsRoomMemberRequest_default_instance_;
class LbsRoomMemberDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LbsRoomMember> {
} _LbsRoomMember_default_instance_;
class LbsRoomMemberResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LbsRoomMemberResponse> {
} _LbsRoomMemberResponse_default_instance_;
class RadarSearchRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RadarSearchRequest> {
} _RadarSearchRequest_default_instance_;
class RadarSearchMemberDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RadarSearchMember> {
} _RadarSearchMember_default_instance_;
class RadarSearchResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RadarSearchResponse> {
} _RadarSearchResponse_default_instance_;
class RadarChatRoomMemberDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RadarChatRoomMember> {
} _RadarChatRoomMember_default_instance_;
class RadarRelationChainRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RadarRelationChainRequest> {
} _RadarRelationChainRequest_default_instance_;
class RadarRelationChainResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RadarRelationChainResponse> {
} _RadarRelationChainResponse_default_instance_;
class RadarCreateChatRoomRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RadarCreateChatRoomRequest> {
} _RadarCreateChatRoomRequest_default_instance_;
class RadarCreateChatRoomResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RadarCreateChatRoomResponse> {
} _RadarCreateChatRoomResponse_default_instance_;
class GetPOIListRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetPOIListRequest> {
} _GetPOIListRequest_default_instance_;
class POIItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<POIItem> {
} _POIItem_default_instance_;
class GetPOIListResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetPOIListResponse> {
} _GetPOIListResponse_default_instance_;
class FacingMemberDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FacingMember> {
} _FacingMember_default_instance_;
class FacingCreateChatRoomRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FacingCreateChatRoomRequest> {
} _FacingCreateChatRoomRequest_default_instance_;
class FacingCreateChatRoomResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FacingCreateChatRoomResponse> {
} _FacingCreateChatRoomResponse_default_instance_;
class GetAddressRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetAddressRequest> {
} _GetAddressRequest_default_instance_;
class GetAddressResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetAddressResponse> {
} _GetAddressResponse_default_instance_;

namespace protobuf_mmlbs_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[55];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsLifeExtInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsLifeExtInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsLifeExtInfo, limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsLifeExtInfo, page_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsLifeExtInfo, sessiontoken_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsLocation, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsLocation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsLocation, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsLocation, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsLocation, precision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsLocation, macaddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsLocation, cellid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsLocation, gpssource_),
  2,
  3,
  4,
  0,
  1,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePoiRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePoiRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePoiRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePoiRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePoiRequest, district_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePoiRequest, street_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePoiRequest, loc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePoiRequest, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePoiRequest, categories_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePoiRequest, telephone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePoiRequest, photourl_),
  5,
  0,
  1,
  2,
  6,
  7,
  ~0u,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePoiResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePoiResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePoiResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePoiResponse, poiid_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsLifeListRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsLifeListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsLifeListRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsLifeListRequest, opcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsLifeListRequest, scene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsLifeListRequest, buff_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsLifeListRequest, loc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsLifeListRequest, keyword_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsLifeListRequest, entrytime_),
  1,
  4,
  5,
  2,
  3,
  0,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsLife, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsLife, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsLife, bid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsLife, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsLife, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsLife, iconidxcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsLife, iconidxlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsLife, desccount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsLife, desclist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsLife, rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsLife, link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsLife, type_),
  0,
  1,
  3,
  4,
  ~0u,
  5,
  ~0u,
  6,
  2,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsFunctionListRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsFunctionListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsFunctionListRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsFunctionListRequest, loc_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsFunctionListResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsFunctionListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsFunctionListResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsFunctionListResponse, lbsfunctionlist_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsLifeListResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsLifeListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsLifeListResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsLifeListResponse, buff_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsLifeListResponse, iconcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsLifeListResponse, iconlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsLifeListResponse, lifecount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsLifeListResponse, lifelist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsLifeListResponse, continueflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsLifeListResponse, logourl_),
  1,
  2,
  3,
  ~0u,
  4,
  ~0u,
  5,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LBSLifeActionBooking, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LBSLifeActionBooking, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LBSLifeActionBooking, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LBSLifeActionBooking, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LBSLifeActionBooking, url_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LBSLifeActionBargain, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LBSLifeActionBargain, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LBSLifeActionBargain, desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LBSLifeActionBargain, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LBSLifeActionBargain, iconurl_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LBSLifeAction, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LBSLifeAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LBSLifeAction, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LBSLifeAction, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LBSLifeAction, desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LBSLifeAction, link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LBSLifeAction, bookingcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LBSLifeAction, bookinglist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LBSLifeAction, bargaincount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LBSLifeAction, bargainlist_),
  3,
  0,
  1,
  2,
  4,
  ~0u,
  5,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LBSLifeActionList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LBSLifeActionList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LBSLifeActionList, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LBSLifeActionList, lifeaction_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsLifeDetail, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsLifeDetail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsLifeDetail, life_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsLifeDetail, cicount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsLifeDetail, cilist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsLifeDetail, thumburl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsLifeDetail, photolink_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsLifeDetail, actioncount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsLifeDetail, actionlist_),
  2,
  3,
  ~0u,
  0,
  1,
  4,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsLifeDetailRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsLifeDetailRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsLifeDetailRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsLifeDetailRequest, businessid_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsLifeDetailResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsLifeDetailResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsLifeDetailResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLbsLifeDetailResponse, lifedetail_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRequest, opcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRequest, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRequest, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRequest, precision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRequest, macaddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRequest, cellid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRequest, gpssource_),
  2,
  3,
  4,
  5,
  6,
  0,
  1,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlbumLbsRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlbumLbsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlbumLbsRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlbumLbsRequest, opcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlbumLbsRequest, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlbumLbsRequest, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlbumLbsRequest, precision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlbumLbsRequest, macaddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlbumLbsRequest, cellid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlbumLbsRequest, gpssource_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlbumLbsRequest, sbtime_),
  2,
  3,
  4,
  5,
  6,
  0,
  1,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsContactInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsContactInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsContactInfo, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsContactInfo, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsContactInfo, province_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsContactInfo, city_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsContactInfo, signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsContactInfo, distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsContactInfo, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsContactInfo, imgstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsContactInfo, verifyflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsContactInfo, verifyinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsContactInfo, verifycontent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsContactInfo, alias_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsContactInfo, weibo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsContactInfo, weibonickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsContactInfo, weiboflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsContactInfo, headimgversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsContactInfo, snsuserinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsContactInfo, country_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsContactInfo, bigheadimgurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsContactInfo, smallheadimgurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsContactInfo, mybrandlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsContactInfo, customizedinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsContactInfo, antispamticket_),
  0,
  1,
  2,
  3,
  4,
  5,
  18,
  19,
  20,
  6,
  7,
  8,
  9,
  10,
  21,
  22,
  16,
  11,
  12,
  13,
  14,
  17,
  15,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsResponse, contactcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsResponse, contactlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsResponse, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsResponse, flushtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsResponse, isshowroom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsResponse, roommembercount_),
  0,
  1,
  ~0u,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlbumLbsContactInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlbumLbsContactInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlbumLbsContactInfo, username_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlbumLbsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlbumLbsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlbumLbsResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlbumLbsResponse, contactcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AlbumLbsResponse, contactlist_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeReportRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeReportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeReportRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeReportRequest, opcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeReportRequest, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeReportRequest, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeReportRequest, precision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeReportRequest, macaddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeReportRequest, cellid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeReportRequest, imgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeReportRequest, times_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeReportRequest, gpssource_),
  2,
  3,
  4,
  5,
  6,
  0,
  1,
  7,
  8,
  9,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeBuffer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeBuffer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeBuffer, reporttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeBuffer, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeBuffer, y_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeReportResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeReportResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeReportResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeReportResponse, buffer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeReportResponse, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeReportResponse, imgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeReportResponse, imgtotoallen_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetRequest, buffer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetRequest, isnewverson_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetItem, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetItem, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetItem, province_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetItem, city_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetItem, signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetItem, distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetItem, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetItem, imgstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetItem, hashdimg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetItem, imgbuffer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetItem, numdistance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetItem, weibo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetItem, weibonickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetItem, weiboflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetItem, verifyflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetItem, verifyinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetItem, verifycontent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetItem, headimgversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetItem, snsuserinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetItem, country_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetItem, bigheadimgurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetItem, smallheadimgurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetItem, mybrandlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetItem, customizedinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetItem, antispamticket_),
  0,
  1,
  2,
  3,
  4,
  5,
  18,
  19,
  20,
  15,
  21,
  6,
  7,
  22,
  23,
  8,
  9,
  24,
  16,
  10,
  11,
  12,
  13,
  17,
  14,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetResponse, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetResponse, shakegetlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetResponse, tips_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetResponse, scence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeGetResponse, ret_),
  1,
  2,
  ~0u,
  0,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeMatchRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeMatchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeMatchRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeMatchRequest, opcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeMatchRequest, tousername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeMatchRequest, scence_),
  1,
  2,
  0,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeMatchResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeMatchResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeMatchResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeMatchResponse, tips_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeMatchResponse, ret_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeImgRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeImgRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeImgRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeImgRequest, imgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeImgRequest, startpos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeImgRequest, totallen_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeImgResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeImgResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeImgResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeImgResponse, imgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeImgResponse, totallen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeImgResponse, startpos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShakeImgResponse, buffer_),
  0,
  2,
  3,
  4,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScanStreetViewRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScanStreetViewRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScanStreetViewRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScanStreetViewRequest, userpos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScanStreetViewRequest, scene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScanStreetViewRequest, heading_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScanStreetViewRequest, pitch_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScanStreetViewResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScanStreetViewResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScanStreetViewResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScanStreetViewResponse, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScanStreetViewResponse, descriptionxml_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRoomRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRoomRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRoomRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRoomRequest, opcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRoomRequest, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRoomRequest, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRoomRequest, precision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRoomRequest, macaddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRoomRequest, cellid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRoomRequest, gpssource_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRoomRequest, roomname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRoomRequest, exitscene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRoomRequest, staytime_),
  3,
  4,
  5,
  6,
  7,
  0,
  1,
  8,
  2,
  9,
  10,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRoomResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRoomResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRoomResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRoomResponse, roomname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRoomResponse, roomnickname_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRoomMemberRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRoomMemberRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRoomMemberRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRoomMemberRequest, roomname_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRoomMember, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRoomMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRoomMember, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRoomMember, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRoomMember, bigheadimgurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRoomMember, smallheadimgurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRoomMember, antispamticket_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRoomMemberResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRoomMemberResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRoomMemberResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRoomMemberResponse, membercount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsRoomMemberResponse, memberlist_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarSearchRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarSearchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarSearchRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarSearchRequest, opcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarSearchRequest, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarSearchRequest, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarSearchRequest, precision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarSearchRequest, macaddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarSearchRequest, cellid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarSearchRequest, gpssource_),
  2,
  3,
  4,
  5,
  6,
  0,
  1,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarSearchMember, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarSearchMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarSearchMember, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarSearchMember, distance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarSearchMember, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarSearchMember, smallimgurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarSearchMember, encodeusername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarSearchMember, antispamticket_),
  0,
  5,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarSearchResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarSearchResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarSearchResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarSearchResponse, ticket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarSearchResponse, opcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarSearchResponse, membercount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarSearchResponse, memberlist_),
  1,
  0,
  2,
  3,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarChatRoomMember, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarChatRoomMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarChatRoomMember, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarChatRoomMember, antispamticket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarChatRoomMember, encodeusername_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarRelationChainRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarRelationChainRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarRelationChainRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarRelationChainRequest, membercount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarRelationChainRequest, memberlist_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarRelationChainResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarRelationChainResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarRelationChainResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarRelationChainResponse, ticket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarRelationChainResponse, membercount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarRelationChainResponse, memberlist_),
  1,
  0,
  2,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarCreateChatRoomRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarCreateChatRoomRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarCreateChatRoomRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarCreateChatRoomRequest, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarCreateChatRoomRequest, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarCreateChatRoomRequest, precision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarCreateChatRoomRequest, macaddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarCreateChatRoomRequest, cellid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarCreateChatRoomRequest, gpssource_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarCreateChatRoomRequest, password_),
  3,
  4,
  5,
  6,
  0,
  1,
  7,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarCreateChatRoomResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarCreateChatRoomResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarCreateChatRoomResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RadarCreateChatRoomResponse, chatroomname_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPOIListRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPOIListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPOIListRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPOIListRequest, scene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPOIListRequest, opcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPOIListRequest, keyword_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPOIListRequest, buff_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPOIListRequest, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPOIListRequest, latitude_),
  1,
  3,
  4,
  0,
  2,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIItem, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIItem, addr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIItem, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIItem, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIItem, typeid__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIItem, link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIItem, nation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIItem, province_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIItem, city_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIItem, district_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIItem, street_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(POIItem, subaddr_),
  0,
  1,
  10,
  11,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPOIListResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPOIListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPOIListResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPOIListResponse, listcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPOIListResponse, poilist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPOIListResponse, opcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPOIListResponse, isend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPOIListResponse, buff_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPOIListResponse, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPOIListResponse, logourl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPOIListResponse, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetPOIListResponse, openid_),
  4,
  6,
  ~0u,
  7,
  8,
  5,
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FacingMember, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FacingMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FacingMember, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FacingMember, encodeusername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FacingMember, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FacingMember, smallimgurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FacingMember, status_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FacingCreateChatRoomRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FacingCreateChatRoomRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FacingCreateChatRoomRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FacingCreateChatRoomRequest, opcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FacingCreateChatRoomRequest, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FacingCreateChatRoomRequest, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FacingCreateChatRoomRequest, latitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FacingCreateChatRoomRequest, precision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FacingCreateChatRoomRequest, macaddr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FacingCreateChatRoomRequest, cellid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FacingCreateChatRoomRequest, gpssource_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FacingCreateChatRoomRequest, ticket_),
  4,
  5,
  0,
  6,
  7,
  8,
  1,
  2,
  9,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FacingCreateChatRoomResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FacingCreateChatRoomResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FacingCreateChatRoomResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FacingCreateChatRoomResponse, ticket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FacingCreateChatRoomResponse, membercount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FacingCreateChatRoomResponse, memberlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FacingCreateChatRoomResponse, chatroomname_),
  2,
  0,
  3,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAddressRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAddressRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAddressRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAddressRequest, longitude_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAddressRequest, latitude_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAddressResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAddressResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAddressResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAddressResponse, retjson_),
  1,
  0,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 8, sizeof(LbsLifeExtInfo)},
  { 11, 22, sizeof(LbsLocation)},
  { 28, 42, sizeof(CreatePoiRequest)},
  { 51, 58, sizeof(CreatePoiResponse)},
  { 60, 72, sizeof(GetLbsLifeListRequest)},
  { 79, 94, sizeof(LbsLife)},
  { 104, 111, sizeof(GetLbsFunctionListRequest)},
  { 113, 120, sizeof(GetLbsFunctionListResponse)},
  { 122, 135, sizeof(GetLbsLifeListResponse)},
  { 143, 151, sizeof(LBSLifeActionBooking)},
  { 154, 162, sizeof(LBSLifeActionBargain)},
  { 165, 178, sizeof(LBSLifeAction)},
  { 186, 193, sizeof(LBSLifeActionList)},
  { 195, 207, sizeof(LbsLifeDetail)},
  { 214, 221, sizeof(GetLbsLifeDetailRequest)},
  { 223, 230, sizeof(GetLbsLifeDetailResponse)},
  { 232, 245, sizeof(LbsRequest)},
  { 253, 267, sizeof(AlbumLbsRequest)},
  { 276, 304, sizeof(LbsContactInfo)},
  { 327, 339, sizeof(LbsResponse)},
  { 346, 352, sizeof(AlbumLbsContactInfo)},
  { 353, 361, sizeof(AlbumLbsResponse)},
  { 364, 379, sizeof(ShakeReportRequest)},
  { 389, 397, sizeof(ShakeBuffer)},
  { 400, 410, sizeof(ShakeReportResponse)},
  { 415, 423, sizeof(ShakeGetRequest)},
  { 426, 456, sizeof(ShakeGetItem)},
  { 481, 492, sizeof(ShakeGetResponse)},
  { 498, 507, sizeof(ShakeMatchRequest)},
  { 511, 519, sizeof(ShakeMatchResponse)},
  { 522, 531, sizeof(ShakeImgRequest)},
  { 535, 545, sizeof(ShakeImgResponse)},
  { 550, 560, sizeof(ScanStreetViewRequest)},
  { 565, 573, sizeof(ScanStreetViewResponse)},
  { 576, 592, sizeof(LbsRoomRequest)},
  { 603, 611, sizeof(LbsRoomResponse)},
  { 614, 621, sizeof(LbsRoomMemberRequest)},
  { 623, 633, sizeof(LbsRoomMember)},
  { 638, 646, sizeof(LbsRoomMemberResponse)},
  { 649, 662, sizeof(RadarSearchRequest)},
  { 670, 681, sizeof(RadarSearchMember)},
  { 687, 697, sizeof(RadarSearchResponse)},
  { 702, 710, sizeof(RadarChatRoomMember)},
  { 713, 721, sizeof(RadarRelationChainRequest)},
  { 724, 733, sizeof(RadarRelationChainResponse)},
  { 737, 750, sizeof(RadarCreateChatRoomRequest)},
  { 758, 765, sizeof(RadarCreateChatRoomResponse)},
  { 767, 779, sizeof(GetPOIListRequest)},
  { 786, 803, sizeof(POIItem)},
  { 815, 830, sizeof(GetPOIListResponse)},
  { 840, 850, sizeof(FacingMember)},
  { 855, 870, sizeof(FacingCreateChatRoomRequest)},
  { 880, 890, sizeof(FacingCreateChatRoomResponse)},
  { 895, 903, sizeof(GetAddressRequest)},
  { 906, 913, sizeof(GetAddressResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_LbsLifeExtInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LbsLocation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreatePoiRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreatePoiResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetLbsLifeListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LbsLife_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetLbsFunctionListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetLbsFunctionListResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetLbsLifeListResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LBSLifeActionBooking_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LBSLifeActionBargain_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LBSLifeAction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LBSLifeActionList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LbsLifeDetail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetLbsLifeDetailRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetLbsLifeDetailResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LbsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AlbumLbsRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LbsContactInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LbsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AlbumLbsContactInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AlbumLbsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ShakeReportRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ShakeBuffer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ShakeReportResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ShakeGetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ShakeGetItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ShakeGetResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ShakeMatchRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ShakeMatchResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ShakeImgRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ShakeImgResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ScanStreetViewRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ScanStreetViewResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LbsRoomRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LbsRoomResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LbsRoomMemberRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LbsRoomMember_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LbsRoomMemberResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RadarSearchRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RadarSearchMember_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RadarSearchResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RadarChatRoomMember_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RadarRelationChainRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RadarRelationChainResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RadarCreateChatRoomRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RadarCreateChatRoomResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetPOIListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_POIItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetPOIListResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FacingMember_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FacingCreateChatRoomRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FacingCreateChatRoomResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetAddressRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetAddressResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "mmlbs.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 55);
}

}  // namespace

void TableStruct::Shutdown() {
  _LbsLifeExtInfo_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _LbsLocation_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _CreatePoiRequest_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _CreatePoiResponse_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _GetLbsLifeListRequest_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _LbsLife_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _GetLbsFunctionListRequest_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _GetLbsFunctionListResponse_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _GetLbsLifeListResponse_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _LBSLifeActionBooking_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _LBSLifeActionBargain_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _LBSLifeAction_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _LBSLifeActionList_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _LbsLifeDetail_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _GetLbsLifeDetailRequest_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _GetLbsLifeDetailResponse_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _LbsRequest_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _AlbumLbsRequest_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _LbsContactInfo_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _LbsResponse_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _AlbumLbsContactInfo_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _AlbumLbsResponse_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
  _ShakeReportRequest_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
  _ShakeBuffer_default_instance_.Shutdown();
  delete file_level_metadata[23].reflection;
  _ShakeReportResponse_default_instance_.Shutdown();
  delete file_level_metadata[24].reflection;
  _ShakeGetRequest_default_instance_.Shutdown();
  delete file_level_metadata[25].reflection;
  _ShakeGetItem_default_instance_.Shutdown();
  delete file_level_metadata[26].reflection;
  _ShakeGetResponse_default_instance_.Shutdown();
  delete file_level_metadata[27].reflection;
  _ShakeMatchRequest_default_instance_.Shutdown();
  delete file_level_metadata[28].reflection;
  _ShakeMatchResponse_default_instance_.Shutdown();
  delete file_level_metadata[29].reflection;
  _ShakeImgRequest_default_instance_.Shutdown();
  delete file_level_metadata[30].reflection;
  _ShakeImgResponse_default_instance_.Shutdown();
  delete file_level_metadata[31].reflection;
  _ScanStreetViewRequest_default_instance_.Shutdown();
  delete file_level_metadata[32].reflection;
  _ScanStreetViewResponse_default_instance_.Shutdown();
  delete file_level_metadata[33].reflection;
  _LbsRoomRequest_default_instance_.Shutdown();
  delete file_level_metadata[34].reflection;
  _LbsRoomResponse_default_instance_.Shutdown();
  delete file_level_metadata[35].reflection;
  _LbsRoomMemberRequest_default_instance_.Shutdown();
  delete file_level_metadata[36].reflection;
  _LbsRoomMember_default_instance_.Shutdown();
  delete file_level_metadata[37].reflection;
  _LbsRoomMemberResponse_default_instance_.Shutdown();
  delete file_level_metadata[38].reflection;
  _RadarSearchRequest_default_instance_.Shutdown();
  delete file_level_metadata[39].reflection;
  _RadarSearchMember_default_instance_.Shutdown();
  delete file_level_metadata[40].reflection;
  _RadarSearchResponse_default_instance_.Shutdown();
  delete file_level_metadata[41].reflection;
  _RadarChatRoomMember_default_instance_.Shutdown();
  delete file_level_metadata[42].reflection;
  _RadarRelationChainRequest_default_instance_.Shutdown();
  delete file_level_metadata[43].reflection;
  _RadarRelationChainResponse_default_instance_.Shutdown();
  delete file_level_metadata[44].reflection;
  _RadarCreateChatRoomRequest_default_instance_.Shutdown();
  delete file_level_metadata[45].reflection;
  _RadarCreateChatRoomResponse_default_instance_.Shutdown();
  delete file_level_metadata[46].reflection;
  _GetPOIListRequest_default_instance_.Shutdown();
  delete file_level_metadata[47].reflection;
  _POIItem_default_instance_.Shutdown();
  delete file_level_metadata[48].reflection;
  _GetPOIListResponse_default_instance_.Shutdown();
  delete file_level_metadata[49].reflection;
  _FacingMember_default_instance_.Shutdown();
  delete file_level_metadata[50].reflection;
  _FacingCreateChatRoomRequest_default_instance_.Shutdown();
  delete file_level_metadata[51].reflection;
  _FacingCreateChatRoomResponse_default_instance_.Shutdown();
  delete file_level_metadata[52].reflection;
  _GetAddressRequest_default_instance_.Shutdown();
  delete file_level_metadata[53].reflection;
  _GetAddressResponse_default_instance_.Shutdown();
  delete file_level_metadata[54].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::micromsg::protobuf_mmbuiltintype_2eproto::InitDefaults();
  ::micromsg::protobuf_mmbase_2eproto::InitDefaults();
  _LbsLifeExtInfo_default_instance_.DefaultConstruct();
  _LbsLocation_default_instance_.DefaultConstruct();
  _CreatePoiRequest_default_instance_.DefaultConstruct();
  _CreatePoiResponse_default_instance_.DefaultConstruct();
  _GetLbsLifeListRequest_default_instance_.DefaultConstruct();
  _LbsLife_default_instance_.DefaultConstruct();
  _GetLbsFunctionListRequest_default_instance_.DefaultConstruct();
  _GetLbsFunctionListResponse_default_instance_.DefaultConstruct();
  _GetLbsLifeListResponse_default_instance_.DefaultConstruct();
  _LBSLifeActionBooking_default_instance_.DefaultConstruct();
  _LBSLifeActionBargain_default_instance_.DefaultConstruct();
  _LBSLifeAction_default_instance_.DefaultConstruct();
  _LBSLifeActionList_default_instance_.DefaultConstruct();
  _LbsLifeDetail_default_instance_.DefaultConstruct();
  _GetLbsLifeDetailRequest_default_instance_.DefaultConstruct();
  _GetLbsLifeDetailResponse_default_instance_.DefaultConstruct();
  _LbsRequest_default_instance_.DefaultConstruct();
  _AlbumLbsRequest_default_instance_.DefaultConstruct();
  _LbsContactInfo_default_instance_.DefaultConstruct();
  _LbsResponse_default_instance_.DefaultConstruct();
  _AlbumLbsContactInfo_default_instance_.DefaultConstruct();
  _AlbumLbsResponse_default_instance_.DefaultConstruct();
  _ShakeReportRequest_default_instance_.DefaultConstruct();
  _ShakeBuffer_default_instance_.DefaultConstruct();
  _ShakeReportResponse_default_instance_.DefaultConstruct();
  _ShakeGetRequest_default_instance_.DefaultConstruct();
  _ShakeGetItem_default_instance_.DefaultConstruct();
  _ShakeGetResponse_default_instance_.DefaultConstruct();
  _ShakeMatchRequest_default_instance_.DefaultConstruct();
  _ShakeMatchResponse_default_instance_.DefaultConstruct();
  _ShakeImgRequest_default_instance_.DefaultConstruct();
  _ShakeImgResponse_default_instance_.DefaultConstruct();
  _ScanStreetViewRequest_default_instance_.DefaultConstruct();
  _ScanStreetViewResponse_default_instance_.DefaultConstruct();
  _LbsRoomRequest_default_instance_.DefaultConstruct();
  _LbsRoomResponse_default_instance_.DefaultConstruct();
  _LbsRoomMemberRequest_default_instance_.DefaultConstruct();
  _LbsRoomMember_default_instance_.DefaultConstruct();
  _LbsRoomMemberResponse_default_instance_.DefaultConstruct();
  _RadarSearchRequest_default_instance_.DefaultConstruct();
  _RadarSearchMember_default_instance_.DefaultConstruct();
  _RadarSearchResponse_default_instance_.DefaultConstruct();
  _RadarChatRoomMember_default_instance_.DefaultConstruct();
  _RadarRelationChainRequest_default_instance_.DefaultConstruct();
  _RadarRelationChainResponse_default_instance_.DefaultConstruct();
  _RadarCreateChatRoomRequest_default_instance_.DefaultConstruct();
  _RadarCreateChatRoomResponse_default_instance_.DefaultConstruct();
  _GetPOIListRequest_default_instance_.DefaultConstruct();
  _POIItem_default_instance_.DefaultConstruct();
  _GetPOIListResponse_default_instance_.DefaultConstruct();
  _FacingMember_default_instance_.DefaultConstruct();
  _FacingCreateChatRoomRequest_default_instance_.DefaultConstruct();
  _FacingCreateChatRoomResponse_default_instance_.DefaultConstruct();
  _GetAddressRequest_default_instance_.DefaultConstruct();
  _GetAddressResponse_default_instance_.DefaultConstruct();
  _CreatePoiRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _CreatePoiRequest_default_instance_.get_mutable()->loc_ = const_cast< ::micromsg::LbsLocation*>(
      ::micromsg::LbsLocation::internal_default_instance());
  _CreatePoiResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _GetLbsLifeListRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _GetLbsLifeListRequest_default_instance_.get_mutable()->buff_ = const_cast< ::micromsg::SKBuiltinBuffer_t*>(
      ::micromsg::SKBuiltinBuffer_t::internal_default_instance());
  _GetLbsLifeListRequest_default_instance_.get_mutable()->loc_ = const_cast< ::micromsg::LbsLocation*>(
      ::micromsg::LbsLocation::internal_default_instance());
  _GetLbsFunctionListRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _GetLbsFunctionListRequest_default_instance_.get_mutable()->loc_ = const_cast< ::micromsg::LbsLocation*>(
      ::micromsg::LbsLocation::internal_default_instance());
  _GetLbsFunctionListResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _GetLbsLifeListResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _GetLbsLifeListResponse_default_instance_.get_mutable()->buff_ = const_cast< ::micromsg::SKBuiltinBuffer_t*>(
      ::micromsg::SKBuiltinBuffer_t::internal_default_instance());
  _LBSLifeActionList_default_instance_.get_mutable()->lifeaction_ = const_cast< ::micromsg::LBSLifeAction*>(
      ::micromsg::LBSLifeAction::internal_default_instance());
  _LbsLifeDetail_default_instance_.get_mutable()->life_ = const_cast< ::micromsg::LbsLife*>(
      ::micromsg::LbsLife::internal_default_instance());
  _GetLbsLifeDetailRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _GetLbsLifeDetailResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _GetLbsLifeDetailResponse_default_instance_.get_mutable()->lifedetail_ = const_cast< ::micromsg::LbsLifeDetail*>(
      ::micromsg::LbsLifeDetail::internal_default_instance());
  _LbsRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _AlbumLbsRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _LbsContactInfo_default_instance_.get_mutable()->snsuserinfo_ = const_cast< ::micromsg::SnsUserInfo*>(
      ::micromsg::SnsUserInfo::internal_default_instance());
  _LbsContactInfo_default_instance_.get_mutable()->customizedinfo_ = const_cast< ::micromsg::CustomizedInfo*>(
      ::micromsg::CustomizedInfo::internal_default_instance());
  _LbsResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _AlbumLbsResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _ShakeReportRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _ShakeReportResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _ShakeReportResponse_default_instance_.get_mutable()->buffer_ = const_cast< ::micromsg::SKBuiltinBuffer_t*>(
      ::micromsg::SKBuiltinBuffer_t::internal_default_instance());
  _ShakeGetRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _ShakeGetRequest_default_instance_.get_mutable()->buffer_ = const_cast< ::micromsg::SKBuiltinBuffer_t*>(
      ::micromsg::SKBuiltinBuffer_t::internal_default_instance());
  _ShakeGetItem_default_instance_.get_mutable()->imgbuffer_ = const_cast< ::micromsg::SKBuiltinBuffer_t*>(
      ::micromsg::SKBuiltinBuffer_t::internal_default_instance());
  _ShakeGetItem_default_instance_.get_mutable()->snsuserinfo_ = const_cast< ::micromsg::SnsUserInfo*>(
      ::micromsg::SnsUserInfo::internal_default_instance());
  _ShakeGetItem_default_instance_.get_mutable()->customizedinfo_ = const_cast< ::micromsg::CustomizedInfo*>(
      ::micromsg::CustomizedInfo::internal_default_instance());
  _ShakeGetResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _ShakeMatchRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _ShakeMatchResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _ShakeImgRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _ShakeImgResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _ShakeImgResponse_default_instance_.get_mutable()->buffer_ = const_cast< ::micromsg::SKBuiltinBuffer_t*>(
      ::micromsg::SKBuiltinBuffer_t::internal_default_instance());
  _ScanStreetViewRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _ScanStreetViewRequest_default_instance_.get_mutable()->userpos_ = const_cast< ::micromsg::PositionInfo*>(
      ::micromsg::PositionInfo::internal_default_instance());
  _ScanStreetViewResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _LbsRoomRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _LbsRoomResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _LbsRoomMemberRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _LbsRoomMemberResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _RadarSearchRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _RadarSearchResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _RadarRelationChainRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _RadarRelationChainResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _RadarCreateChatRoomRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _RadarCreateChatRoomResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _GetPOIListRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _GetPOIListRequest_default_instance_.get_mutable()->buff_ = const_cast< ::micromsg::SKBuiltinBuffer_t*>(
      ::micromsg::SKBuiltinBuffer_t::internal_default_instance());
  _GetPOIListResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _GetPOIListResponse_default_instance_.get_mutable()->buff_ = const_cast< ::micromsg::SKBuiltinBuffer_t*>(
      ::micromsg::SKBuiltinBuffer_t::internal_default_instance());
  _FacingCreateChatRoomRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _FacingCreateChatRoomResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _GetAddressRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _GetAddressResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\013mmlbs.proto\022\010micromsg\032\023mmbuiltintype.p"
      "roto\032\014mmbase.proto\"C\n\016LbsLifeExtInfo\022\r\n\005"
      "Limit\030\001 \002(\r\022\014\n\004Page\030\002 \002(\r\022\024\n\014sessiontoke"
      "n\030\003 \001(\t\"y\n\013LbsLocation\022\021\n\tLongitude\030\001 \002("
      "\002\022\020\n\010Latitude\030\002 \002(\002\022\021\n\tPrecision\030\003 \002(\005\022\017"
      "\n\007MacAddr\030\004 \001(\t\022\016\n\006CellId\030\005 \001(\t\022\021\n\tGPSSo"
      "urce\030\006 \001(\005\"\367\001\n\020CreatePoiRequest\022*\n\013BaseR"
      "equest\030\001 \002(\0132\025.micromsg.BaseRequest\022\014\n\004N"
      "ame\030\002 \001(\t\022\020\n\010District\030\003 \001(\t\022\016\n\006Street\030\004 "
      "\001(\t\022\"\n\003Loc\030\005 \002(\0132\025.micromsg.LbsLocation\022"
      "\r\n\005Count\030\006 \002(\r\022/\n\nCategories\030\007 \003(\0132\033.mic"
      "romsg.SKBuiltinString_t\022\021\n\tTelephone\030\010 \001"
      "(\t\022\020\n\010PhotoUrl\030\t \001(\t\"P\n\021CreatePoiRespons"
      "e\022,\n\014BaseResponse\030\001 \002(\0132\026.micromsg.BaseR"
      "esponse\022\r\n\005PoiId\030\002 \001(\t\"\325\001\n\025GetLbsLifeLis"
      "tRequest\022*\n\013BaseRequest\030\001 \002(\0132\025.micromsg"
      ".BaseRequest\022\016\n\006Opcode\030\002 \002(\r\022\r\n\005Scene\030\003 "
      "\002(\r\022)\n\004Buff\030\004 \001(\0132\033.micromsg.SKBuiltinBu"
      "ffer_t\022\"\n\003Loc\030\005 \002(\0132\025.micromsg.LbsLocati"
      "on\022\017\n\007Keyword\030\006 \001(\t\022\021\n\tEntryTime\030\007 \001(\r\"\317"
      "\001\n\007LbsLife\022\013\n\003BId\030\001 \001(\t\022\r\n\005Title\030\002 \001(\t\022\r"
      "\n\005Price\030\003 \002(\002\022\024\n\014IconIdxCount\030\004 \002(\r\022\027\n\013I"
      "conIdxList\030\005 \003(\rB\002\020\001\022\021\n\tDescCount\030\006 \002(\r\022"
      "-\n\010DescList\030\007 \003(\0132\033.micromsg.SKBuiltinSt"
      "ring_t\022\014\n\004Rate\030\010 \002(\002\022\014\n\004Link\030\t \001(\t\022\014\n\004Ty"
      "pe\030\n \001(\r\"k\n\031GetLbsFunctionListRequest\022*\n"
      "\013BaseRequest\030\001 \002(\0132\025.micromsg.BaseReques"
      "t\022\"\n\003Loc\030\002 \002(\0132\025.micromsg.LbsLocation\"c\n"
      "\032GetLbsFunctionListResponse\022,\n\014BaseRespo"
      "nse\030\001 \002(\0132\026.micromsg.BaseResponse\022\027\n\017Lbs"
      "FunctionList\030\002 \001(\t\"\222\002\n\026GetLbsLifeListRes"
      "ponse\022,\n\014BaseResponse\030\001 \002(\0132\026.micromsg.B"
      "aseResponse\022)\n\004Buff\030\002 \002(\0132\033.micromsg.SKB"
      "uiltinBuffer_t\022\021\n\tIconCount\030\003 \002(\r\022-\n\010Ico"
      "nList\030\004 \003(\0132\033.micromsg.SKBuiltinString_t"
      "\022\021\n\tLifeCount\030\005 \002(\r\022#\n\010LifeList\030\006 \003(\0132\021."
      "micromsg.LbsLife\022\024\n\014ContinueFlag\030\007 \002(\r\022\017"
      "\n\007LogoUrl\030\010 \001(\t\"@\n\024LBSLifeActionBooking\022"
      "\014\n\004Type\030\001 \002(\r\022\r\n\005Title\030\002 \001(\t\022\013\n\003Url\030\003 \001("
      "\t\"B\n\024LBSLifeActionBargain\022\014\n\004Desc\030\001 \001(\t\022"
      "\013\n\003Url\030\002 \001(\t\022\017\n\007IconUrl\030\003 \001(\t\"\335\001\n\rLBSLif"
      "eAction\022\014\n\004Type\030\001 \002(\r\022\014\n\004Name\030\002 \001(\t\022\014\n\004D"
      "esc\030\003 \001(\t\022\014\n\004Link\030\004 \001(\t\022\024\n\014BookingCount\030"
      "\005 \002(\r\0223\n\013BookingList\030\006 \003(\0132\036.micromsg.LB"
      "SLifeActionBooking\022\024\n\014BargainCount\030\007 \002(\r"
      "\0223\n\013BargainList\030\010 \003(\0132\036.micromsg.LBSLife"
      "ActionBargain\"N\n\021LBSLifeActionList\022\014\n\004Ty"
      "pe\030\001 \002(\r\022+\n\nLifeAction\030\002 \002(\0132\027.micromsg."
      "LBSLifeAction\"\331\001\n\rLbsLifeDetail\022\037\n\004Life\030"
      "\001 \002(\0132\021.micromsg.LbsLife\022\017\n\007CICount\030\002 \002("
      "\r\022+\n\006CIList\030\003 \003(\0132\033.micromsg.SKBuiltinSt"
      "ring_t\022\020\n\010ThumbUrl\030\004 \001(\t\022\021\n\tPhotoLink\030\005 "
      "\001(\t\022\023\n\013ActionCount\030\006 \002(\r\022/\n\nActionList\030\007"
      " \003(\0132\033.micromsg.LBSLifeActionList\"Y\n\027Get"
      "LbsLifeDetailRequest\022*\n\013BaseRequest\030\001 \002("
      "\0132\025.micromsg.BaseRequest\022\022\n\nBusinessId\030\002"
      " \001(\t\"u\n\030GetLbsLifeDetailResponse\022,\n\014Base"
      "Response\030\001 \002(\0132\026.micromsg.BaseResponse\022+"
      "\n\nLifeDetail\030\002 \002(\0132\027.micromsg.LbsLifeDet"
      "ail\"\264\001\n\nLbsRequest\022*\n\013BaseRequest\030\001 \002(\0132"
      "\025.micromsg.BaseRequest\022\016\n\006OpCode\030\002 \002(\r\022\021"
      "\n\tLongitude\030\003 \002(\002\022\020\n\010Latitude\030\004 \002(\002\022\021\n\tP"
      "recision\030\005 \002(\005\022\017\n\007MacAddr\030\006 \001(\t\022\016\n\006CellI"
      "d\030\007 \001(\t\022\021\n\tGPSSource\030\010 \001(\005\"\311\001\n\017AlbumLbsR"
      "equest\022*\n\013BaseRequest\030\001 \002(\0132\025.micromsg.B"
      "aseRequest\022\016\n\006OpCode\030\002 \002(\r\022\021\n\tLongitude\030"
      "\003 \002(\002\022\020\n\010Latitude\030\004 \002(\002\022\021\n\tPrecision\030\005 \002"
      "(\005\022\017\n\007MacAddr\030\006 \001(\t\022\016\n\006CellId\030\007 \001(\t\022\021\n\tG"
      "PSSource\030\010 \002(\005\022\016\n\006SBTime\030\t \002(\r\"\204\004\n\016LbsCo"
      "ntactInfo\022\020\n\010UserName\030\001 \001(\t\022\020\n\010NickName\030"
      "\002 \001(\t\022\020\n\010Province\030\003 \001(\t\022\014\n\004City\030\004 \001(\t\022\021\n"
      "\tSignature\030\005 \001(\t\022\020\n\010Distance\030\006 \001(\t\022\013\n\003Se"
      "x\030\007 \002(\005\022\021\n\tImgStatus\030\010 \002(\r\022\022\n\nVerifyFlag"
      "\030\t \001(\r\022\022\n\nVerifyInfo\030\n \001(\t\022\025\n\rVerifyCont"
      "ent\030\013 \001(\t\022\r\n\005Alias\030\014 \001(\t\022\r\n\005Weibo\030\r \001(\t\022"
      "\025\n\rWeiboNickname\030\016 \001(\t\022\021\n\tWeiboFlag\030\017 \001("
      "\r\022\026\n\016HeadImgVersion\030\023 \001(\005\022*\n\013SnsUserInfo"
      "\030\024 \001(\0132\025.micromsg.SnsUserInfo\022\017\n\007Country"
      "\030\025 \001(\t\022\025\n\rBigHeadImgUrl\030\026 \001(\t\022\027\n\017SmallHe"
      "adImgUrl\030\027 \001(\t\022\023\n\013MyBrandList\030\030 \001(\t\0220\n\016C"
      "ustomizedInfo\030\031 \001(\0132\030.micromsg.Customize"
      "dInfo\022\026\n\016AntispamTicket\030\032 \001(\t\"\317\001\n\013LbsRes"
      "ponse\022,\n\014BaseResponse\030\001 \002(\0132\026.micromsg.B"
      "aseResponse\022\024\n\014ContactCount\030\002 \002(\r\022-\n\013Con"
      "tactList\030\003 \003(\0132\030.micromsg.LbsContactInfo"
      "\022\r\n\005State\030\004 \001(\r\022\021\n\tFlushTime\030\005 \001(\r\022\022\n\nIs"
      "ShowRoom\030\006 \001(\r\022\027\n\017RoomMemberCount\030\007 \001(\r\""
      "\'\n\023AlbumLbsContactInfo\022\020\n\010UserName\030\001 \001(\t"
      "\"\212\001\n\020AlbumLbsResponse\022,\n\014BaseResponse\030\001 "
      "\002(\0132\026.micromsg.BaseResponse\022\024\n\014ContactCo"
      "unt\030\002 \002(\r\0222\n\013ContactList\030\003 \003(\0132\035.microms"
      "g.AlbumLbsContactInfo\"\332\001\n\022ShakeReportReq"
      "uest\022*\n\013BaseRequest\030\001 \002(\0132\025.micromsg.Bas"
      "eRequest\022\016\n\006OpCode\030\002 \002(\r\022\021\n\tLongitude\030\003 "
      "\002(\002\022\020\n\010Latitude\030\004 \002(\002\022\021\n\tPrecision\030\005 \002(\005"
      "\022\017\n\007MacAddr\030\006 \001(\t\022\016\n\006CellId\030\007 \001(\t\022\r\n\005Img"
      "Id\030\010 \002(\r\022\r\n\005Times\030\t \002(\r\022\021\n\tGPSSource\030\n \001"
      "(\005\"7\n\013ShakeBuffer\022\022\n\nReportTime\030\001 \002(\r\022\t\n"
      "\001X\030\002 \002(\r\022\t\n\001Y\030\003 \002(\r\"\242\001\n\023ShakeReportRespo"
      "nse\022,\n\014BaseResponse\030\001 \002(\0132\026.micromsg.Bas"
      "eResponse\022+\n\006Buffer\030\002 \002(\0132\033.micromsg.SKB"
      "uiltinBuffer_t\022\013\n\003Ret\030\003 \002(\005\022\r\n\005ImgId\030\004 \002"
      "(\r\022\024\n\014ImgTotoalLen\030\005 \001(\r\"\177\n\017ShakeGetRequ"
      "est\022*\n\013BaseRequest\030\001 \002(\0132\025.micromsg.Base"
      "Request\022+\n\006Buffer\030\002 \002(\0132\033.micromsg.SKBui"
      "ltinBuffer_t\022\023\n\013IsNewVerson\030\003 \001(\005\"\312\004\n\014Sh"
      "akeGetItem\022\020\n\010UserName\030\001 \001(\t\022\020\n\010NickName"
      "\030\002 \001(\t\022\020\n\010Province\030\003 \001(\t\022\014\n\004City\030\004 \001(\t\022\021"
      "\n\tSignature\030\005 \001(\t\022\020\n\010Distance\030\006 \001(\t\022\013\n\003S"
      "ex\030\007 \002(\005\022\021\n\tImgStatus\030\010 \002(\r\022\020\n\010HasHDImg\030"
      "\t \002(\r\022.\n\tImgBuffer\030\n \002(\0132\033.micromsg.SKBu"
      "iltinBuffer_t\022\023\n\013NumDistance\030\013 \002(\r\022\r\n\005We"
      "ibo\030\014 \001(\t\022\025\n\rWeiboNickname\030\r \001(\t\022\021\n\tWeib"
      "oFlag\030\016 \001(\r\022\022\n\nVerifyFlag\030\017 \001(\r\022\022\n\nVerif"
      "yInfo\030\020 \001(\t\022\025\n\rVerifyContent\030\021 \001(\t\022\026\n\016He"
      "adImgVersion\030\025 \001(\005\022*\n\013SnsUserInfo\030\026 \001(\0132"
      "\025.micromsg.SnsUserInfo\022\017\n\007Country\030\027 \001(\t\022"
      "\025\n\rBigHeadImgUrl\030\030 \001(\t\022\027\n\017SmallHeadImgUr"
      "l\030\031 \001(\t\022\023\n\013MyBrandList\030\032 \001(\t\0220\n\016Customiz"
      "edInfo\030\033 \001(\0132\030.micromsg.CustomizedInfo\022\026"
      "\n\016AntispamTicket\030\034 \001(\t\"\250\001\n\020ShakeGetRespo"
      "nse\022,\n\014BaseResponse\030\001 \002(\0132\026.micromsg.Bas"
      "eResponse\022\r\n\005Count\030\002 \002(\r\022,\n\014ShakeGetList"
      "\030\003 \003(\0132\026.micromsg.ShakeGetItem\022\014\n\004Tips\030\004"
      " \001(\t\022\016\n\006Scence\030\005 \002(\r\022\013\n\003Ret\030\006 \002(\005\"s\n\021Sha"
      "keMatchRequest\022*\n\013BaseRequest\030\001 \002(\0132\025.mi"
      "cromsg.BaseRequest\022\016\n\006OpCode\030\002 \002(\r\022\022\n\nTo"
      "UserName\030\003 \001(\t\022\016\n\006Scence\030\004 \002(\r\"]\n\022ShakeM"
      "atchResponse\022,\n\014BaseResponse\030\001 \002(\0132\026.mic"
      "romsg.BaseResponse\022\014\n\004Tips\030\002 \001(\t\022\013\n\003Ret\030"
      "\003 \002(\r\"p\n\017ShakeImgRequest\022*\n\013BaseRequest\030"
      "\001 \002(\0132\025.micromsg.BaseRequest\022\r\n\005ImgId\030\002 "
      "\002(\r\022\020\n\010StartPos\030\003 \002(\r\022\020\n\010TotalLen\030\004 \002(\r\""
      "\240\001\n\020ShakeImgResponse\022,\n\014BaseResponse\030\001 \002"
      "(\0132\026.micromsg.BaseResponse\022\r\n\005ImgId\030\002 \002("
      "\r\022\020\n\010TotalLen\030\003 \002(\r\022\020\n\010StartPos\030\004 \002(\r\022+\n"
      "\006Buffer\030\005 \002(\0132\033.micromsg.SKBuiltinBuffer"
      "_t\"\233\001\n\025ScanStreetViewRequest\022*\n\013BaseRequ"
      "est\030\001 \002(\0132\025.micromsg.BaseRequest\022\'\n\007User"
      "Pos\030\002 \002(\0132\026.micromsg.PositionInfo\022\r\n\005Sce"
      "ne\030\003 \001(\r\022\017\n\007Heading\030\004 \001(\002\022\r\n\005Pitch\030\005 \001(\002"
      "\"l\n\026ScanStreetViewResponse\022,\n\014BaseRespon"
      "se\030\001 \002(\0132\026.micromsg.BaseResponse\022\014\n\004Type"
      "\030\002 \002(\r\022\026\n\016DescriptionXML\030\003 \001(\t\"\357\001\n\016LbsRo"
      "omRequest\022*\n\013BaseRequest\030\001 \002(\0132\025.microms"
      "g.BaseRequest\022\016\n\006OpCode\030\002 \002(\r\022\021\n\tLongitu"
      "de\030\003 \002(\002\022\020\n\010Latitude\030\004 \002(\002\022\021\n\tPrecision\030"
      "\005 \002(\005\022\017\n\007MacAddr\030\006 \001(\t\022\016\n\006CellId\030\007 \001(\t\022\021"
      "\n\tGPSSource\030\010 \001(\005\022\020\n\010RoomName\030\t \001(\t\022\021\n\tE"
      "xitScene\030\n \001(\005\022\020\n\010StayTime\030\013 \001(\005\"g\n\017LbsR"
      "oomResponse\022,\n\014BaseResponse\030\001 \002(\0132\026.micr"
      "omsg.BaseResponse\022\020\n\010RoomName\030\002 \001(\t\022\024\n\014R"
      "oomNickName\030\003 \001(\t\"T\n\024LbsRoomMemberReques"
      "t\022*\n\013BaseRequest\030\001 \002(\0132\025.micromsg.BaseRe"
      "quest\022\020\n\010RoomName\030\002 \001(\t\"{\n\rLbsRoomMember"
      "\022\020\n\010UserName\030\001 \001(\t\022\020\n\010NickName\030\002 \001(\t\022\025\n\r"
      "BigHeadImgUrl\030\003 \001(\t\022\027\n\017SmallHeadImgUrl\030\004"
      " \001(\t\022\026\n\016AntispamTicket\030\005 \001(\t\"\207\001\n\025LbsRoom"
      "MemberResponse\022,\n\014BaseResponse\030\001 \002(\0132\026.m"
      "icromsg.BaseResponse\022\023\n\013MemberCount\030\002 \002("
      "\r\022+\n\nMemberList\030\003 \003(\0132\027.micromsg.LbsRoom"
      "Member\"\274\001\n\022RadarSearchRequest\022*\n\013BaseReq"
      "uest\030\001 \002(\0132\025.micromsg.BaseRequest\022\016\n\006OpC"
      "ode\030\002 \002(\r\022\021\n\tLongitude\030\003 \002(\002\022\020\n\010Latitude"
      "\030\004 \002(\002\022\021\n\tPrecision\030\005 \002(\005\022\017\n\007MacAddr\030\006 \001"
      "(\t\022\016\n\006CellId\030\007 \001(\t\022\021\n\tGPSSource\030\010 \001(\005\"\216\001"
      "\n\021RadarSearchMember\022\020\n\010UserName\030\001 \001(\t\022\020\n"
      "\010Distance\030\002 \002(\r\022\020\n\010NickName\030\003 \001(\t\022\023\n\013Sma"
      "llImgUrl\030\004 \001(\t\022\026\n\016EncodeUserName\030\005 \001(\t\022\026"
      "\n\016AntispamTicket\030\006 \001(\t\"\251\001\n\023RadarSearchRe"
      "sponse\022,\n\014BaseResponse\030\001 \002(\0132\026.micromsg."
      "BaseResponse\022\016\n\006Ticket\030\002 \001(\t\022\016\n\006OpCode\030\003"
      " \002(\r\022\023\n\013MemberCount\030\004 \002(\r\022/\n\nMemberList\030"
      "\005 \003(\0132\033.micromsg.RadarSearchMember\"W\n\023Ra"
      "darChatRoomMember\022\020\n\010UserName\030\001 \001(\t\022\026\n\016A"
      "ntispamTicket\030\002 \001(\t\022\026\n\016EncodeUserName\030\003 "
      "\001(\t\"\217\001\n\031RadarRelationChainRequest\022*\n\013Bas"
      "eRequest\030\001 \002(\0132\025.micromsg.BaseRequest\022\023\n"
      "\013MemberCount\030\002 \002(\r\0221\n\nMemberList\030\003 \003(\0132\035"
      ".micromsg.RadarChatRoomMember\"\242\001\n\032RadarR"
      "elationChainResponse\022,\n\014BaseResponse\030\001 \002"
      "(\0132\026.micromsg.BaseResponse\022\016\n\006Ticket\030\002 \001"
      "(\t\022\023\n\013MemberCount\030\003 \002(\r\0221\n\nMemberList\030\004 "
      "\003(\0132\035.micromsg.RadarChatRoomMember\"\306\001\n\032R"
      "adarCreateChatRoomRequest\022*\n\013BaseRequest"
      "\030\001 \002(\0132\025.micromsg.BaseRequest\022\021\n\tLongitu"
      "de\030\002 \002(\002\022\020\n\010Latitude\030\003 \002(\002\022\021\n\tPrecision\030"
      "\004 \002(\005\022\017\n\007MacAddr\030\005 \001(\t\022\016\n\006CellId\030\006 \001(\t\022\021"
      "\n\tGPSSource\030\007 \001(\005\022\020\n\010PassWord\030\010 \001(\t\"a\n\033R"
      "adarCreateChatRoomResponse\022,\n\014BaseRespon"
      "se\030\001 \002(\0132\026.micromsg.BaseResponse\022\024\n\014Chat"
      "RoomName\030\002 \001(\t\"\277\001\n\021GetPOIListRequest\022*\n\013"
      "BaseRequest\030\001 \002(\0132\025.micromsg.BaseRequest"
      "\022\r\n\005Scene\030\002 \002(\r\022\016\n\006OpCode\030\003 \002(\r\022\017\n\007Keywo"
      "rd\030\004 \001(\t\022)\n\004Buff\030\005 \002(\0132\033.micromsg.SKBuil"
      "tinBuffer_t\022\021\n\tLongitude\030\006 \002(\001\022\020\n\010Latitu"
      "de\030\007 \002(\001\"\313\001\n\007POIItem\022\014\n\004Name\030\001 \001(\t\022\014\n\004Ad"
      "dr\030\002 \001(\t\022\021\n\tLongitude\030\003 \002(\001\022\020\n\010Latitude\030"
      "\004 \002(\001\022\016\n\006TypeId\030\005 \001(\t\022\014\n\004Link\030\006 \001(\t\022\016\n\006N"
      "ation\030\007 \001(\t\022\020\n\010Province\030\010 \001(\t\022\014\n\004City\030\t "
      "\001(\t\022\020\n\010District\030\n \001(\t\022\016\n\006Street\030\013 \001(\t\022\017\n"
      "\007SubAddr\030\014 \001(\t\"\377\001\n\022GetPOIListResponse\022,\n"
      "\014BaseResponse\030\001 \002(\0132\026.micromsg.BaseRespo"
      "nse\022\021\n\tListCount\030\002 \002(\r\022\"\n\007POIList\030\003 \003(\0132"
      "\021.micromsg.POIItem\022\016\n\006OpCode\030\004 \002(\r\022\r\n\005Is"
      "End\030\005 \002(\r\022)\n\004Buff\030\006 \002(\0132\033.micromsg.SKBui"
      "ltinBuffer_t\022\013\n\003Url\030\007 \001(\t\022\017\n\007LogoUrl\030\010 \001"
      "(\t\022\014\n\004Text\030\t \001(\t\022\016\n\006OpenId\030\n \001(\t\"o\n\014Faci"
      "ngMember\022\020\n\010UserName\030\001 \001(\t\022\026\n\016EncodeUser"
      "Name\030\002 \001(\t\022\020\n\010NickName\030\003 \001(\t\022\023\n\013SmallImg"
      "Url\030\004 \001(\t\022\016\n\006Status\030\005 \002(\r\"\347\001\n\033FacingCrea"
      "teChatRoomRequest\022*\n\013BaseRequest\030\001 \002(\0132\025"
      ".micromsg.BaseRequest\022\016\n\006OpCode\030\002 \002(\r\022\020\n"
      "\010PassWord\030\003 \001(\t\022\021\n\tLongitude\030\004 \002(\002\022\020\n\010La"
      "titude\030\005 \002(\002\022\021\n\tPrecision\030\006 \002(\005\022\017\n\007MacAd"
      "dr\030\007 \001(\t\022\016\n\006CellId\030\010 \001(\t\022\021\n\tGPSSource\030\t "
      "\001(\005\022\016\n\006Ticket\030\n \001(\t\"\263\001\n\034FacingCreateChat"
      "RoomResponse\022,\n\014BaseResponse\030\001 \002(\0132\026.mic"
      "romsg.BaseResponse\022\016\n\006Ticket\030\002 \001(\t\022\023\n\013Me"
      "mberCount\030\003 \002(\r\022*\n\nMemberList\030\004 \003(\0132\026.mi"
      "cromsg.FacingMember\022\024\n\014ChatRoomName\030\005 \001("
      "\t\"d\n\021GetAddressRequest\022*\n\013BaseRequest\030\001 "
      "\002(\0132\025.micromsg.BaseRequest\022\021\n\tLongitude\030"
      "\002 \002(\001\022\020\n\010Latitude\030\003 \002(\001\"S\n\022GetAddressRes"
      "ponse\022,\n\014BaseResponse\030\001 \002(\0132\026.micromsg.B"
      "aseResponse\022\017\n\007RetJson\030\002 \001(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 9028);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mmlbs.proto", &protobuf_RegisterTypes);
  ::micromsg::protobuf_mmbuiltintype_2eproto::AddDescriptors();
  ::micromsg::protobuf_mmbase_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_mmlbs_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LbsLifeExtInfo::kLimitFieldNumber;
const int LbsLifeExtInfo::kPageFieldNumber;
const int LbsLifeExtInfo::kSessiontokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LbsLifeExtInfo::LbsLifeExtInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.LbsLifeExtInfo)
}
LbsLifeExtInfo::LbsLifeExtInfo(const LbsLifeExtInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sessiontoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sessiontoken()) {
    sessiontoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessiontoken_);
  }
  ::memcpy(&limit_, &from.limit_,
    reinterpret_cast<char*>(&page_) -
    reinterpret_cast<char*>(&limit_) + sizeof(page_));
  // @@protoc_insertion_point(copy_constructor:micromsg.LbsLifeExtInfo)
}

void LbsLifeExtInfo::SharedCtor() {
  _cached_size_ = 0;
  sessiontoken_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&limit_, 0, reinterpret_cast<char*>(&page_) -
    reinterpret_cast<char*>(&limit_) + sizeof(page_));
}

LbsLifeExtInfo::~LbsLifeExtInfo() {
  // @@protoc_insertion_point(destructor:micromsg.LbsLifeExtInfo)
  SharedDtor();
}

void LbsLifeExtInfo::SharedDtor() {
  sessiontoken_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LbsLifeExtInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LbsLifeExtInfo::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LbsLifeExtInfo& LbsLifeExtInfo::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

LbsLifeExtInfo* LbsLifeExtInfo::New(::google::protobuf::Arena* arena) const {
  LbsLifeExtInfo* n = new LbsLifeExtInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LbsLifeExtInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.LbsLifeExtInfo)
  if (has_sessiontoken()) {
    GOOGLE_DCHECK(!sessiontoken_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*sessiontoken_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&limit_, 0, reinterpret_cast<char*>(&page_) -
      reinterpret_cast<char*>(&limit_) + sizeof(page_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LbsLifeExtInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.LbsLifeExtInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 Limit = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_limit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Page = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_page();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sessiontoken = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessiontoken()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sessiontoken().data(), this->sessiontoken().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsLifeExtInfo.sessiontoken");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.LbsLifeExtInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.LbsLifeExtInfo)
  return false;
#undef DO_
}

void LbsLifeExtInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.LbsLifeExtInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 Limit = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->limit(), output);
  }

  // required uint32 Page = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->page(), output);
  }

  // optional string sessiontoken = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessiontoken().data(), this->sessiontoken().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsLifeExtInfo.sessiontoken");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sessiontoken(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.LbsLifeExtInfo)
}

::google::protobuf::uint8* LbsLifeExtInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.LbsLifeExtInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 Limit = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->limit(), target);
  }

  // required uint32 Page = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->page(), target);
  }

  // optional string sessiontoken = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessiontoken().data(), this->sessiontoken().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsLifeExtInfo.sessiontoken");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sessiontoken(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.LbsLifeExtInfo)
  return target;
}

size_t LbsLifeExtInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.LbsLifeExtInfo)
  size_t total_size = 0;

  if (has_limit()) {
    // required uint32 Limit = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->limit());
  }

  if (has_page()) {
    // required uint32 Page = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->page());
  }

  return total_size;
}
size_t LbsLifeExtInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.LbsLifeExtInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required uint32 Limit = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->limit());

    // required uint32 Page = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->page());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string sessiontoken = 3;
  if (has_sessiontoken()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sessiontoken());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LbsLifeExtInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.LbsLifeExtInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const LbsLifeExtInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LbsLifeExtInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.LbsLifeExtInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.LbsLifeExtInfo)
    MergeFrom(*source);
  }
}

void LbsLifeExtInfo::MergeFrom(const LbsLifeExtInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.LbsLifeExtInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sessiontoken();
      sessiontoken_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessiontoken_);
    }
    if (cached_has_bits & 0x00000002u) {
      limit_ = from.limit_;
    }
    if (cached_has_bits & 0x00000004u) {
      page_ = from.page_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LbsLifeExtInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.LbsLifeExtInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LbsLifeExtInfo::CopyFrom(const LbsLifeExtInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.LbsLifeExtInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LbsLifeExtInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  return true;
}

void LbsLifeExtInfo::Swap(LbsLifeExtInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LbsLifeExtInfo::InternalSwap(LbsLifeExtInfo* other) {
  sessiontoken_.Swap(&other->sessiontoken_);
  std::swap(limit_, other->limit_);
  std::swap(page_, other->page_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LbsLifeExtInfo::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LbsLifeExtInfo

// required uint32 Limit = 1;
bool LbsLifeExtInfo::has_limit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LbsLifeExtInfo::set_has_limit() {
  _has_bits_[0] |= 0x00000002u;
}
void LbsLifeExtInfo::clear_has_limit() {
  _has_bits_[0] &= ~0x00000002u;
}
void LbsLifeExtInfo::clear_limit() {
  limit_ = 0u;
  clear_has_limit();
}
::google::protobuf::uint32 LbsLifeExtInfo::limit() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLifeExtInfo.Limit)
  return limit_;
}
void LbsLifeExtInfo::set_limit(::google::protobuf::uint32 value) {
  set_has_limit();
  limit_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsLifeExtInfo.Limit)
}

// required uint32 Page = 2;
bool LbsLifeExtInfo::has_page() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LbsLifeExtInfo::set_has_page() {
  _has_bits_[0] |= 0x00000004u;
}
void LbsLifeExtInfo::clear_has_page() {
  _has_bits_[0] &= ~0x00000004u;
}
void LbsLifeExtInfo::clear_page() {
  page_ = 0u;
  clear_has_page();
}
::google::protobuf::uint32 LbsLifeExtInfo::page() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLifeExtInfo.Page)
  return page_;
}
void LbsLifeExtInfo::set_page(::google::protobuf::uint32 value) {
  set_has_page();
  page_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsLifeExtInfo.Page)
}

// optional string sessiontoken = 3;
bool LbsLifeExtInfo::has_sessiontoken() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LbsLifeExtInfo::set_has_sessiontoken() {
  _has_bits_[0] |= 0x00000001u;
}
void LbsLifeExtInfo::clear_has_sessiontoken() {
  _has_bits_[0] &= ~0x00000001u;
}
void LbsLifeExtInfo::clear_sessiontoken() {
  sessiontoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sessiontoken();
}
const ::std::string& LbsLifeExtInfo::sessiontoken() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLifeExtInfo.sessiontoken)
  return sessiontoken_.GetNoArena();
}
void LbsLifeExtInfo::set_sessiontoken(const ::std::string& value) {
  set_has_sessiontoken();
  sessiontoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsLifeExtInfo.sessiontoken)
}
#if LANG_CXX11
void LbsLifeExtInfo::set_sessiontoken(::std::string&& value) {
  set_has_sessiontoken();
  sessiontoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsLifeExtInfo.sessiontoken)
}
#endif
void LbsLifeExtInfo::set_sessiontoken(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sessiontoken();
  sessiontoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsLifeExtInfo.sessiontoken)
}
void LbsLifeExtInfo::set_sessiontoken(const char* value, size_t size) {
  set_has_sessiontoken();
  sessiontoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsLifeExtInfo.sessiontoken)
}
::std::string* LbsLifeExtInfo::mutable_sessiontoken() {
  set_has_sessiontoken();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsLifeExtInfo.sessiontoken)
  return sessiontoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsLifeExtInfo::release_sessiontoken() {
  // @@protoc_insertion_point(field_release:micromsg.LbsLifeExtInfo.sessiontoken)
  clear_has_sessiontoken();
  return sessiontoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsLifeExtInfo::set_allocated_sessiontoken(::std::string* sessiontoken) {
  if (sessiontoken != NULL) {
    set_has_sessiontoken();
  } else {
    clear_has_sessiontoken();
  }
  sessiontoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sessiontoken);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsLifeExtInfo.sessiontoken)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LbsLocation::kLongitudeFieldNumber;
const int LbsLocation::kLatitudeFieldNumber;
const int LbsLocation::kPrecisionFieldNumber;
const int LbsLocation::kMacAddrFieldNumber;
const int LbsLocation::kCellIdFieldNumber;
const int LbsLocation::kGPSSourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LbsLocation::LbsLocation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.LbsLocation)
}
LbsLocation::LbsLocation(const LbsLocation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  macaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_macaddr()) {
    macaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macaddr_);
  }
  cellid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cellid()) {
    cellid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cellid_);
  }
  ::memcpy(&longitude_, &from.longitude_,
    reinterpret_cast<char*>(&gpssource_) -
    reinterpret_cast<char*>(&longitude_) + sizeof(gpssource_));
  // @@protoc_insertion_point(copy_constructor:micromsg.LbsLocation)
}

void LbsLocation::SharedCtor() {
  _cached_size_ = 0;
  macaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cellid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&longitude_, 0, reinterpret_cast<char*>(&gpssource_) -
    reinterpret_cast<char*>(&longitude_) + sizeof(gpssource_));
}

LbsLocation::~LbsLocation() {
  // @@protoc_insertion_point(destructor:micromsg.LbsLocation)
  SharedDtor();
}

void LbsLocation::SharedDtor() {
  macaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cellid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LbsLocation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LbsLocation::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LbsLocation& LbsLocation::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

LbsLocation* LbsLocation::New(::google::protobuf::Arena* arena) const {
  LbsLocation* n = new LbsLocation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LbsLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.LbsLocation)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_macaddr()) {
      GOOGLE_DCHECK(!macaddr_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*macaddr_.UnsafeRawStringPointer())->clear();
    }
    if (has_cellid()) {
      GOOGLE_DCHECK(!cellid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*cellid_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 60u) {
    ::memset(&longitude_, 0, reinterpret_cast<char*>(&gpssource_) -
      reinterpret_cast<char*>(&longitude_) + sizeof(gpssource_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LbsLocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.LbsLocation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float Longitude = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u)) {
          set_has_longitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float Latitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u)) {
          set_has_latitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 Precision = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_precision();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &precision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string MacAddr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_macaddr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->macaddr().data(), this->macaddr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsLocation.MacAddr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string CellId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cellid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cellid().data(), this->cellid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsLocation.CellId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 GPSSource = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_gpssource();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gpssource_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.LbsLocation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.LbsLocation)
  return false;
#undef DO_
}

void LbsLocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.LbsLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float Longitude = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->longitude(), output);
  }

  // required float Latitude = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->latitude(), output);
  }

  // required int32 Precision = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->precision(), output);
  }

  // optional string MacAddr = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->macaddr().data(), this->macaddr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsLocation.MacAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->macaddr(), output);
  }

  // optional string CellId = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cellid().data(), this->cellid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsLocation.CellId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->cellid(), output);
  }

  // optional int32 GPSSource = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->gpssource(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.LbsLocation)
}

::google::protobuf::uint8* LbsLocation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.LbsLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required float Longitude = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->longitude(), target);
  }

  // required float Latitude = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->latitude(), target);
  }

  // required int32 Precision = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->precision(), target);
  }

  // optional string MacAddr = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->macaddr().data(), this->macaddr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsLocation.MacAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->macaddr(), target);
  }

  // optional string CellId = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cellid().data(), this->cellid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsLocation.CellId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->cellid(), target);
  }

  // optional int32 GPSSource = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->gpssource(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.LbsLocation)
  return target;
}

size_t LbsLocation::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.LbsLocation)
  size_t total_size = 0;

  if (has_longitude()) {
    // required float Longitude = 1;
    total_size += 1 + 4;
  }

  if (has_latitude()) {
    // required float Latitude = 2;
    total_size += 1 + 4;
  }

  if (has_precision()) {
    // required int32 Precision = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->precision());
  }

  return total_size;
}
size_t LbsLocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.LbsLocation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001c) ^ 0x0000001c) == 0) {  // All required fields are present.
    // required float Longitude = 1;
    total_size += 1 + 4;

    // required float Latitude = 2;
    total_size += 1 + 4;

    // required int32 Precision = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->precision());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string MacAddr = 4;
    if (has_macaddr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->macaddr());
    }

    // optional string CellId = 5;
    if (has_cellid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cellid());
    }

  }
  // optional int32 GPSSource = 6;
  if (has_gpssource()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gpssource());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LbsLocation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.LbsLocation)
  GOOGLE_DCHECK_NE(&from, this);
  const LbsLocation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LbsLocation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.LbsLocation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.LbsLocation)
    MergeFrom(*source);
  }
}

void LbsLocation::MergeFrom(const LbsLocation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.LbsLocation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_macaddr();
      macaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macaddr_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_cellid();
      cellid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cellid_);
    }
    if (cached_has_bits & 0x00000004u) {
      longitude_ = from.longitude_;
    }
    if (cached_has_bits & 0x00000008u) {
      latitude_ = from.latitude_;
    }
    if (cached_has_bits & 0x00000010u) {
      precision_ = from.precision_;
    }
    if (cached_has_bits & 0x00000020u) {
      gpssource_ = from.gpssource_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LbsLocation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.LbsLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LbsLocation::CopyFrom(const LbsLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.LbsLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LbsLocation::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001c) != 0x0000001c) return false;
  return true;
}

void LbsLocation::Swap(LbsLocation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LbsLocation::InternalSwap(LbsLocation* other) {
  macaddr_.Swap(&other->macaddr_);
  cellid_.Swap(&other->cellid_);
  std::swap(longitude_, other->longitude_);
  std::swap(latitude_, other->latitude_);
  std::swap(precision_, other->precision_);
  std::swap(gpssource_, other->gpssource_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LbsLocation::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LbsLocation

// required float Longitude = 1;
bool LbsLocation::has_longitude() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LbsLocation::set_has_longitude() {
  _has_bits_[0] |= 0x00000004u;
}
void LbsLocation::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000004u;
}
void LbsLocation::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
float LbsLocation::longitude() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLocation.Longitude)
  return longitude_;
}
void LbsLocation::set_longitude(float value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsLocation.Longitude)
}

// required float Latitude = 2;
bool LbsLocation::has_latitude() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void LbsLocation::set_has_latitude() {
  _has_bits_[0] |= 0x00000008u;
}
void LbsLocation::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000008u;
}
void LbsLocation::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
float LbsLocation::latitude() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLocation.Latitude)
  return latitude_;
}
void LbsLocation::set_latitude(float value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsLocation.Latitude)
}

// required int32 Precision = 3;
bool LbsLocation::has_precision() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void LbsLocation::set_has_precision() {
  _has_bits_[0] |= 0x00000010u;
}
void LbsLocation::clear_has_precision() {
  _has_bits_[0] &= ~0x00000010u;
}
void LbsLocation::clear_precision() {
  precision_ = 0;
  clear_has_precision();
}
::google::protobuf::int32 LbsLocation::precision() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLocation.Precision)
  return precision_;
}
void LbsLocation::set_precision(::google::protobuf::int32 value) {
  set_has_precision();
  precision_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsLocation.Precision)
}

// optional string MacAddr = 4;
bool LbsLocation::has_macaddr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LbsLocation::set_has_macaddr() {
  _has_bits_[0] |= 0x00000001u;
}
void LbsLocation::clear_has_macaddr() {
  _has_bits_[0] &= ~0x00000001u;
}
void LbsLocation::clear_macaddr() {
  macaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_macaddr();
}
const ::std::string& LbsLocation::macaddr() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLocation.MacAddr)
  return macaddr_.GetNoArena();
}
void LbsLocation::set_macaddr(const ::std::string& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsLocation.MacAddr)
}
#if LANG_CXX11
void LbsLocation::set_macaddr(::std::string&& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsLocation.MacAddr)
}
#endif
void LbsLocation::set_macaddr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsLocation.MacAddr)
}
void LbsLocation::set_macaddr(const char* value, size_t size) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsLocation.MacAddr)
}
::std::string* LbsLocation::mutable_macaddr() {
  set_has_macaddr();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsLocation.MacAddr)
  return macaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsLocation::release_macaddr() {
  // @@protoc_insertion_point(field_release:micromsg.LbsLocation.MacAddr)
  clear_has_macaddr();
  return macaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsLocation::set_allocated_macaddr(::std::string* macaddr) {
  if (macaddr != NULL) {
    set_has_macaddr();
  } else {
    clear_has_macaddr();
  }
  macaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), macaddr);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsLocation.MacAddr)
}

// optional string CellId = 5;
bool LbsLocation::has_cellid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LbsLocation::set_has_cellid() {
  _has_bits_[0] |= 0x00000002u;
}
void LbsLocation::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000002u;
}
void LbsLocation::clear_cellid() {
  cellid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cellid();
}
const ::std::string& LbsLocation::cellid() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLocation.CellId)
  return cellid_.GetNoArena();
}
void LbsLocation::set_cellid(const ::std::string& value) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsLocation.CellId)
}
#if LANG_CXX11
void LbsLocation::set_cellid(::std::string&& value) {
  set_has_cellid();
  cellid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsLocation.CellId)
}
#endif
void LbsLocation::set_cellid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsLocation.CellId)
}
void LbsLocation::set_cellid(const char* value, size_t size) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsLocation.CellId)
}
::std::string* LbsLocation::mutable_cellid() {
  set_has_cellid();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsLocation.CellId)
  return cellid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsLocation::release_cellid() {
  // @@protoc_insertion_point(field_release:micromsg.LbsLocation.CellId)
  clear_has_cellid();
  return cellid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsLocation::set_allocated_cellid(::std::string* cellid) {
  if (cellid != NULL) {
    set_has_cellid();
  } else {
    clear_has_cellid();
  }
  cellid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cellid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsLocation.CellId)
}

// optional int32 GPSSource = 6;
bool LbsLocation::has_gpssource() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void LbsLocation::set_has_gpssource() {
  _has_bits_[0] |= 0x00000020u;
}
void LbsLocation::clear_has_gpssource() {
  _has_bits_[0] &= ~0x00000020u;
}
void LbsLocation::clear_gpssource() {
  gpssource_ = 0;
  clear_has_gpssource();
}
::google::protobuf::int32 LbsLocation::gpssource() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLocation.GPSSource)
  return gpssource_;
}
void LbsLocation::set_gpssource(::google::protobuf::int32 value) {
  set_has_gpssource();
  gpssource_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsLocation.GPSSource)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreatePoiRequest::kBaseRequestFieldNumber;
const int CreatePoiRequest::kNameFieldNumber;
const int CreatePoiRequest::kDistrictFieldNumber;
const int CreatePoiRequest::kStreetFieldNumber;
const int CreatePoiRequest::kLocFieldNumber;
const int CreatePoiRequest::kCountFieldNumber;
const int CreatePoiRequest::kCategoriesFieldNumber;
const int CreatePoiRequest::kTelephoneFieldNumber;
const int CreatePoiRequest::kPhotoUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreatePoiRequest::CreatePoiRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.CreatePoiRequest)
}
CreatePoiRequest::CreatePoiRequest(const CreatePoiRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      categories_(from.categories_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  district_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_district()) {
    district_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.district_);
  }
  street_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_street()) {
    street_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.street_);
  }
  telephone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_telephone()) {
    telephone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.telephone_);
  }
  photourl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_photourl()) {
    photourl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.photourl_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  if (from.has_loc()) {
    loc_ = new ::micromsg::LbsLocation(*from.loc_);
  } else {
    loc_ = NULL;
  }
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:micromsg.CreatePoiRequest)
}

void CreatePoiRequest::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  district_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  street_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  telephone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  photourl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(count_));
}

CreatePoiRequest::~CreatePoiRequest() {
  // @@protoc_insertion_point(destructor:micromsg.CreatePoiRequest)
  SharedDtor();
}

void CreatePoiRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  district_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  street_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  telephone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  photourl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
  if (this != internal_default_instance()) {
    delete loc_;
  }
}

void CreatePoiRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreatePoiRequest::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreatePoiRequest& CreatePoiRequest::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreatePoiRequest* CreatePoiRequest::New(::google::protobuf::Arena* arena) const {
  CreatePoiRequest* n = new CreatePoiRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreatePoiRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.CreatePoiRequest)
  categories_.Clear();
  if (_has_bits_[0 / 32] & 127u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_district()) {
      GOOGLE_DCHECK(!district_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*district_.UnsafeRawStringPointer())->clear();
    }
    if (has_street()) {
      GOOGLE_DCHECK(!street_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*street_.UnsafeRawStringPointer())->clear();
    }
    if (has_telephone()) {
      GOOGLE_DCHECK(!telephone_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*telephone_.UnsafeRawStringPointer())->clear();
    }
    if (has_photourl()) {
      GOOGLE_DCHECK(!photourl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*photourl_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
    if (has_loc()) {
      GOOGLE_DCHECK(loc_ != NULL);
      loc_->::micromsg::LbsLocation::Clear();
    }
  }
  count_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreatePoiRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.CreatePoiRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.CreatePoiRequest.Name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string District = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_district()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->district().data(), this->district().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.CreatePoiRequest.District");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Street = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_street()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->street().data(), this->street().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.CreatePoiRequest.Street");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.LbsLocation Loc = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_loc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Count = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.SKBuiltinString_t Categories = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_categories()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Telephone = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_telephone()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->telephone().data(), this->telephone().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.CreatePoiRequest.Telephone");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string PhotoUrl = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_photourl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->photourl().data(), this->photourl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.CreatePoiRequest.PhotoUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.CreatePoiRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.CreatePoiRequest)
  return false;
#undef DO_
}

void CreatePoiRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.CreatePoiRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // optional string Name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CreatePoiRequest.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string District = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->district().data(), this->district().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CreatePoiRequest.District");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->district(), output);
  }

  // optional string Street = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->street().data(), this->street().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CreatePoiRequest.Street");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->street(), output);
  }

  // required .micromsg.LbsLocation Loc = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->loc_, output);
  }

  // required uint32 Count = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->count(), output);
  }

  // repeated .micromsg.SKBuiltinString_t Categories = 7;
  for (unsigned int i = 0, n = this->categories_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->categories(i), output);
  }

  // optional string Telephone = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->telephone().data(), this->telephone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CreatePoiRequest.Telephone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->telephone(), output);
  }

  // optional string PhotoUrl = 9;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->photourl().data(), this->photourl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CreatePoiRequest.PhotoUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->photourl(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.CreatePoiRequest)
}

::google::protobuf::uint8* CreatePoiRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.CreatePoiRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // optional string Name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CreatePoiRequest.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string District = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->district().data(), this->district().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CreatePoiRequest.District");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->district(), target);
  }

  // optional string Street = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->street().data(), this->street().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CreatePoiRequest.Street");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->street(), target);
  }

  // required .micromsg.LbsLocation Loc = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->loc_, deterministic, target);
  }

  // required uint32 Count = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->count(), target);
  }

  // repeated .micromsg.SKBuiltinString_t Categories = 7;
  for (unsigned int i = 0, n = this->categories_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->categories(i), deterministic, target);
  }

  // optional string Telephone = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->telephone().data(), this->telephone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CreatePoiRequest.Telephone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->telephone(), target);
  }

  // optional string PhotoUrl = 9;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->photourl().data(), this->photourl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CreatePoiRequest.PhotoUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->photourl(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.CreatePoiRequest)
  return target;
}

size_t CreatePoiRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.CreatePoiRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_loc()) {
    // required .micromsg.LbsLocation Loc = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->loc_);
  }

  if (has_count()) {
    // required uint32 Count = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  return total_size;
}
size_t CreatePoiRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.CreatePoiRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x000000e0) ^ 0x000000e0) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required .micromsg.LbsLocation Loc = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->loc_);

    // required uint32 Count = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.SKBuiltinString_t Categories = 7;
  {
    unsigned int count = this->categories_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->categories(i));
    }
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional string Name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string District = 3;
    if (has_district()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->district());
    }

    // optional string Street = 4;
    if (has_street()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->street());
    }

    // optional string Telephone = 8;
    if (has_telephone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->telephone());
    }

    // optional string PhotoUrl = 9;
    if (has_photourl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->photourl());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreatePoiRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.CreatePoiRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreatePoiRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreatePoiRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.CreatePoiRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.CreatePoiRequest)
    MergeFrom(*source);
  }
}

void CreatePoiRequest::MergeFrom(const CreatePoiRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.CreatePoiRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  categories_.MergeFrom(from.categories_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_district();
      district_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.district_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_street();
      street_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.street_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_telephone();
      telephone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.telephone_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_photourl();
      photourl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.photourl_);
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_loc()->::micromsg::LbsLocation::MergeFrom(from.loc());
    }
    if (cached_has_bits & 0x00000080u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CreatePoiRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.CreatePoiRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreatePoiRequest::CopyFrom(const CreatePoiRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.CreatePoiRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreatePoiRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000e0) != 0x000000e0) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  if (has_loc()) {
    if (!this->loc_->IsInitialized()) return false;
  }
  return true;
}

void CreatePoiRequest::Swap(CreatePoiRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreatePoiRequest::InternalSwap(CreatePoiRequest* other) {
  categories_.InternalSwap(&other->categories_);
  name_.Swap(&other->name_);
  district_.Swap(&other->district_);
  street_.Swap(&other->street_);
  telephone_.Swap(&other->telephone_);
  photourl_.Swap(&other->photourl_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(loc_, other->loc_);
  std::swap(count_, other->count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreatePoiRequest::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreatePoiRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool CreatePoiRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CreatePoiRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000020u;
}
void CreatePoiRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000020u;
}
void CreatePoiRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& CreatePoiRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.CreatePoiRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* CreatePoiRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.CreatePoiRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* CreatePoiRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.CreatePoiRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void CreatePoiRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.CreatePoiRequest.BaseRequest)
}

// optional string Name = 2;
bool CreatePoiRequest::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CreatePoiRequest::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CreatePoiRequest::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CreatePoiRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& CreatePoiRequest::name() const {
  // @@protoc_insertion_point(field_get:micromsg.CreatePoiRequest.Name)
  return name_.GetNoArena();
}
void CreatePoiRequest::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CreatePoiRequest.Name)
}
#if LANG_CXX11
void CreatePoiRequest::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CreatePoiRequest.Name)
}
#endif
void CreatePoiRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CreatePoiRequest.Name)
}
void CreatePoiRequest::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CreatePoiRequest.Name)
}
::std::string* CreatePoiRequest::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:micromsg.CreatePoiRequest.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreatePoiRequest::release_name() {
  // @@protoc_insertion_point(field_release:micromsg.CreatePoiRequest.Name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreatePoiRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CreatePoiRequest.Name)
}

// optional string District = 3;
bool CreatePoiRequest::has_district() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CreatePoiRequest::set_has_district() {
  _has_bits_[0] |= 0x00000002u;
}
void CreatePoiRequest::clear_has_district() {
  _has_bits_[0] &= ~0x00000002u;
}
void CreatePoiRequest::clear_district() {
  district_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_district();
}
const ::std::string& CreatePoiRequest::district() const {
  // @@protoc_insertion_point(field_get:micromsg.CreatePoiRequest.District)
  return district_.GetNoArena();
}
void CreatePoiRequest::set_district(const ::std::string& value) {
  set_has_district();
  district_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CreatePoiRequest.District)
}
#if LANG_CXX11
void CreatePoiRequest::set_district(::std::string&& value) {
  set_has_district();
  district_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CreatePoiRequest.District)
}
#endif
void CreatePoiRequest::set_district(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_district();
  district_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CreatePoiRequest.District)
}
void CreatePoiRequest::set_district(const char* value, size_t size) {
  set_has_district();
  district_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CreatePoiRequest.District)
}
::std::string* CreatePoiRequest::mutable_district() {
  set_has_district();
  // @@protoc_insertion_point(field_mutable:micromsg.CreatePoiRequest.District)
  return district_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreatePoiRequest::release_district() {
  // @@protoc_insertion_point(field_release:micromsg.CreatePoiRequest.District)
  clear_has_district();
  return district_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreatePoiRequest::set_allocated_district(::std::string* district) {
  if (district != NULL) {
    set_has_district();
  } else {
    clear_has_district();
  }
  district_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), district);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CreatePoiRequest.District)
}

// optional string Street = 4;
bool CreatePoiRequest::has_street() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CreatePoiRequest::set_has_street() {
  _has_bits_[0] |= 0x00000004u;
}
void CreatePoiRequest::clear_has_street() {
  _has_bits_[0] &= ~0x00000004u;
}
void CreatePoiRequest::clear_street() {
  street_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_street();
}
const ::std::string& CreatePoiRequest::street() const {
  // @@protoc_insertion_point(field_get:micromsg.CreatePoiRequest.Street)
  return street_.GetNoArena();
}
void CreatePoiRequest::set_street(const ::std::string& value) {
  set_has_street();
  street_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CreatePoiRequest.Street)
}
#if LANG_CXX11
void CreatePoiRequest::set_street(::std::string&& value) {
  set_has_street();
  street_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CreatePoiRequest.Street)
}
#endif
void CreatePoiRequest::set_street(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_street();
  street_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CreatePoiRequest.Street)
}
void CreatePoiRequest::set_street(const char* value, size_t size) {
  set_has_street();
  street_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CreatePoiRequest.Street)
}
::std::string* CreatePoiRequest::mutable_street() {
  set_has_street();
  // @@protoc_insertion_point(field_mutable:micromsg.CreatePoiRequest.Street)
  return street_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreatePoiRequest::release_street() {
  // @@protoc_insertion_point(field_release:micromsg.CreatePoiRequest.Street)
  clear_has_street();
  return street_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreatePoiRequest::set_allocated_street(::std::string* street) {
  if (street != NULL) {
    set_has_street();
  } else {
    clear_has_street();
  }
  street_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), street);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CreatePoiRequest.Street)
}

// required .micromsg.LbsLocation Loc = 5;
bool CreatePoiRequest::has_loc() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CreatePoiRequest::set_has_loc() {
  _has_bits_[0] |= 0x00000040u;
}
void CreatePoiRequest::clear_has_loc() {
  _has_bits_[0] &= ~0x00000040u;
}
void CreatePoiRequest::clear_loc() {
  if (loc_ != NULL) loc_->::micromsg::LbsLocation::Clear();
  clear_has_loc();
}
const ::micromsg::LbsLocation& CreatePoiRequest::loc() const {
  // @@protoc_insertion_point(field_get:micromsg.CreatePoiRequest.Loc)
  return loc_ != NULL ? *loc_
                         : *::micromsg::LbsLocation::internal_default_instance();
}
::micromsg::LbsLocation* CreatePoiRequest::mutable_loc() {
  set_has_loc();
  if (loc_ == NULL) {
    loc_ = new ::micromsg::LbsLocation;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.CreatePoiRequest.Loc)
  return loc_;
}
::micromsg::LbsLocation* CreatePoiRequest::release_loc() {
  // @@protoc_insertion_point(field_release:micromsg.CreatePoiRequest.Loc)
  clear_has_loc();
  ::micromsg::LbsLocation* temp = loc_;
  loc_ = NULL;
  return temp;
}
void CreatePoiRequest::set_allocated_loc(::micromsg::LbsLocation* loc) {
  delete loc_;
  loc_ = loc;
  if (loc) {
    set_has_loc();
  } else {
    clear_has_loc();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.CreatePoiRequest.Loc)
}

// required uint32 Count = 6;
bool CreatePoiRequest::has_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CreatePoiRequest::set_has_count() {
  _has_bits_[0] |= 0x00000080u;
}
void CreatePoiRequest::clear_has_count() {
  _has_bits_[0] &= ~0x00000080u;
}
void CreatePoiRequest::clear_count() {
  count_ = 0u;
  clear_has_count();
}
::google::protobuf::uint32 CreatePoiRequest::count() const {
  // @@protoc_insertion_point(field_get:micromsg.CreatePoiRequest.Count)
  return count_;
}
void CreatePoiRequest::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.CreatePoiRequest.Count)
}

// repeated .micromsg.SKBuiltinString_t Categories = 7;
int CreatePoiRequest::categories_size() const {
  return categories_.size();
}
void CreatePoiRequest::clear_categories() {
  categories_.Clear();
}
const ::micromsg::SKBuiltinString_t& CreatePoiRequest::categories(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.CreatePoiRequest.Categories)
  return categories_.Get(index);
}
::micromsg::SKBuiltinString_t* CreatePoiRequest::mutable_categories(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.CreatePoiRequest.Categories)
  return categories_.Mutable(index);
}
::micromsg::SKBuiltinString_t* CreatePoiRequest::add_categories() {
  // @@protoc_insertion_point(field_add:micromsg.CreatePoiRequest.Categories)
  return categories_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
CreatePoiRequest::mutable_categories() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.CreatePoiRequest.Categories)
  return &categories_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
CreatePoiRequest::categories() const {
  // @@protoc_insertion_point(field_list:micromsg.CreatePoiRequest.Categories)
  return categories_;
}

// optional string Telephone = 8;
bool CreatePoiRequest::has_telephone() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CreatePoiRequest::set_has_telephone() {
  _has_bits_[0] |= 0x00000008u;
}
void CreatePoiRequest::clear_has_telephone() {
  _has_bits_[0] &= ~0x00000008u;
}
void CreatePoiRequest::clear_telephone() {
  telephone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_telephone();
}
const ::std::string& CreatePoiRequest::telephone() const {
  // @@protoc_insertion_point(field_get:micromsg.CreatePoiRequest.Telephone)
  return telephone_.GetNoArena();
}
void CreatePoiRequest::set_telephone(const ::std::string& value) {
  set_has_telephone();
  telephone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CreatePoiRequest.Telephone)
}
#if LANG_CXX11
void CreatePoiRequest::set_telephone(::std::string&& value) {
  set_has_telephone();
  telephone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CreatePoiRequest.Telephone)
}
#endif
void CreatePoiRequest::set_telephone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_telephone();
  telephone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CreatePoiRequest.Telephone)
}
void CreatePoiRequest::set_telephone(const char* value, size_t size) {
  set_has_telephone();
  telephone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CreatePoiRequest.Telephone)
}
::std::string* CreatePoiRequest::mutable_telephone() {
  set_has_telephone();
  // @@protoc_insertion_point(field_mutable:micromsg.CreatePoiRequest.Telephone)
  return telephone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreatePoiRequest::release_telephone() {
  // @@protoc_insertion_point(field_release:micromsg.CreatePoiRequest.Telephone)
  clear_has_telephone();
  return telephone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreatePoiRequest::set_allocated_telephone(::std::string* telephone) {
  if (telephone != NULL) {
    set_has_telephone();
  } else {
    clear_has_telephone();
  }
  telephone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), telephone);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CreatePoiRequest.Telephone)
}

// optional string PhotoUrl = 9;
bool CreatePoiRequest::has_photourl() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CreatePoiRequest::set_has_photourl() {
  _has_bits_[0] |= 0x00000010u;
}
void CreatePoiRequest::clear_has_photourl() {
  _has_bits_[0] &= ~0x00000010u;
}
void CreatePoiRequest::clear_photourl() {
  photourl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_photourl();
}
const ::std::string& CreatePoiRequest::photourl() const {
  // @@protoc_insertion_point(field_get:micromsg.CreatePoiRequest.PhotoUrl)
  return photourl_.GetNoArena();
}
void CreatePoiRequest::set_photourl(const ::std::string& value) {
  set_has_photourl();
  photourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CreatePoiRequest.PhotoUrl)
}
#if LANG_CXX11
void CreatePoiRequest::set_photourl(::std::string&& value) {
  set_has_photourl();
  photourl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CreatePoiRequest.PhotoUrl)
}
#endif
void CreatePoiRequest::set_photourl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_photourl();
  photourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CreatePoiRequest.PhotoUrl)
}
void CreatePoiRequest::set_photourl(const char* value, size_t size) {
  set_has_photourl();
  photourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CreatePoiRequest.PhotoUrl)
}
::std::string* CreatePoiRequest::mutable_photourl() {
  set_has_photourl();
  // @@protoc_insertion_point(field_mutable:micromsg.CreatePoiRequest.PhotoUrl)
  return photourl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreatePoiRequest::release_photourl() {
  // @@protoc_insertion_point(field_release:micromsg.CreatePoiRequest.PhotoUrl)
  clear_has_photourl();
  return photourl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreatePoiRequest::set_allocated_photourl(::std::string* photourl) {
  if (photourl != NULL) {
    set_has_photourl();
  } else {
    clear_has_photourl();
  }
  photourl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), photourl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CreatePoiRequest.PhotoUrl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreatePoiResponse::kBaseResponseFieldNumber;
const int CreatePoiResponse::kPoiIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreatePoiResponse::CreatePoiResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.CreatePoiResponse)
}
CreatePoiResponse::CreatePoiResponse(const CreatePoiResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  poiid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_poiid()) {
    poiid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.poiid_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.CreatePoiResponse)
}

void CreatePoiResponse::SharedCtor() {
  _cached_size_ = 0;
  poiid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  baseresponse_ = NULL;
}

CreatePoiResponse::~CreatePoiResponse() {
  // @@protoc_insertion_point(destructor:micromsg.CreatePoiResponse)
  SharedDtor();
}

void CreatePoiResponse::SharedDtor() {
  poiid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void CreatePoiResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreatePoiResponse::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreatePoiResponse& CreatePoiResponse::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreatePoiResponse* CreatePoiResponse::New(::google::protobuf::Arena* arena) const {
  CreatePoiResponse* n = new CreatePoiResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreatePoiResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.CreatePoiResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_poiid()) {
      GOOGLE_DCHECK(!poiid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*poiid_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreatePoiResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.CreatePoiResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string PoiId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_poiid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->poiid().data(), this->poiid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.CreatePoiResponse.PoiId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.CreatePoiResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.CreatePoiResponse)
  return false;
#undef DO_
}

void CreatePoiResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.CreatePoiResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // optional string PoiId = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->poiid().data(), this->poiid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CreatePoiResponse.PoiId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->poiid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.CreatePoiResponse)
}

::google::protobuf::uint8* CreatePoiResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.CreatePoiResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // optional string PoiId = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->poiid().data(), this->poiid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CreatePoiResponse.PoiId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->poiid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.CreatePoiResponse)
  return target;
}

size_t CreatePoiResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.CreatePoiResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (has_baseresponse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }
  // optional string PoiId = 2;
  if (has_poiid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->poiid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreatePoiResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.CreatePoiResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreatePoiResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreatePoiResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.CreatePoiResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.CreatePoiResponse)
    MergeFrom(*source);
  }
}

void CreatePoiResponse::MergeFrom(const CreatePoiResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.CreatePoiResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_poiid();
      poiid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.poiid_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
  }
}

void CreatePoiResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.CreatePoiResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreatePoiResponse::CopyFrom(const CreatePoiResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.CreatePoiResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreatePoiResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void CreatePoiResponse::Swap(CreatePoiResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreatePoiResponse::InternalSwap(CreatePoiResponse* other) {
  poiid_.Swap(&other->poiid_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreatePoiResponse::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreatePoiResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool CreatePoiResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CreatePoiResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
void CreatePoiResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
void CreatePoiResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& CreatePoiResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.CreatePoiResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* CreatePoiResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.CreatePoiResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* CreatePoiResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.CreatePoiResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void CreatePoiResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.CreatePoiResponse.BaseResponse)
}

// optional string PoiId = 2;
bool CreatePoiResponse::has_poiid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CreatePoiResponse::set_has_poiid() {
  _has_bits_[0] |= 0x00000001u;
}
void CreatePoiResponse::clear_has_poiid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CreatePoiResponse::clear_poiid() {
  poiid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_poiid();
}
const ::std::string& CreatePoiResponse::poiid() const {
  // @@protoc_insertion_point(field_get:micromsg.CreatePoiResponse.PoiId)
  return poiid_.GetNoArena();
}
void CreatePoiResponse::set_poiid(const ::std::string& value) {
  set_has_poiid();
  poiid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CreatePoiResponse.PoiId)
}
#if LANG_CXX11
void CreatePoiResponse::set_poiid(::std::string&& value) {
  set_has_poiid();
  poiid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CreatePoiResponse.PoiId)
}
#endif
void CreatePoiResponse::set_poiid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_poiid();
  poiid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CreatePoiResponse.PoiId)
}
void CreatePoiResponse::set_poiid(const char* value, size_t size) {
  set_has_poiid();
  poiid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CreatePoiResponse.PoiId)
}
::std::string* CreatePoiResponse::mutable_poiid() {
  set_has_poiid();
  // @@protoc_insertion_point(field_mutable:micromsg.CreatePoiResponse.PoiId)
  return poiid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreatePoiResponse::release_poiid() {
  // @@protoc_insertion_point(field_release:micromsg.CreatePoiResponse.PoiId)
  clear_has_poiid();
  return poiid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreatePoiResponse::set_allocated_poiid(::std::string* poiid) {
  if (poiid != NULL) {
    set_has_poiid();
  } else {
    clear_has_poiid();
  }
  poiid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), poiid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CreatePoiResponse.PoiId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetLbsLifeListRequest::kBaseRequestFieldNumber;
const int GetLbsLifeListRequest::kOpcodeFieldNumber;
const int GetLbsLifeListRequest::kSceneFieldNumber;
const int GetLbsLifeListRequest::kBuffFieldNumber;
const int GetLbsLifeListRequest::kLocFieldNumber;
const int GetLbsLifeListRequest::kKeywordFieldNumber;
const int GetLbsLifeListRequest::kEntryTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetLbsLifeListRequest::GetLbsLifeListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetLbsLifeListRequest)
}
GetLbsLifeListRequest::GetLbsLifeListRequest(const GetLbsLifeListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  keyword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_keyword()) {
    keyword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keyword_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  if (from.has_buff()) {
    buff_ = new ::micromsg::SKBuiltinBuffer_t(*from.buff_);
  } else {
    buff_ = NULL;
  }
  if (from.has_loc()) {
    loc_ = new ::micromsg::LbsLocation(*from.loc_);
  } else {
    loc_ = NULL;
  }
  ::memcpy(&opcode_, &from.opcode_,
    reinterpret_cast<char*>(&entrytime_) -
    reinterpret_cast<char*>(&opcode_) + sizeof(entrytime_));
  // @@protoc_insertion_point(copy_constructor:micromsg.GetLbsLifeListRequest)
}

void GetLbsLifeListRequest::SharedCtor() {
  _cached_size_ = 0;
  keyword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&entrytime_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(entrytime_));
}

GetLbsLifeListRequest::~GetLbsLifeListRequest() {
  // @@protoc_insertion_point(destructor:micromsg.GetLbsLifeListRequest)
  SharedDtor();
}

void GetLbsLifeListRequest::SharedDtor() {
  keyword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
  if (this != internal_default_instance()) {
    delete buff_;
  }
  if (this != internal_default_instance()) {
    delete loc_;
  }
}

void GetLbsLifeListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLbsLifeListRequest::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetLbsLifeListRequest& GetLbsLifeListRequest::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetLbsLifeListRequest* GetLbsLifeListRequest::New(::google::protobuf::Arena* arena) const {
  GetLbsLifeListRequest* n = new GetLbsLifeListRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetLbsLifeListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetLbsLifeListRequest)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_keyword()) {
      GOOGLE_DCHECK(!keyword_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*keyword_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
    if (has_buff()) {
      GOOGLE_DCHECK(buff_ != NULL);
      buff_->::micromsg::SKBuiltinBuffer_t::Clear();
    }
    if (has_loc()) {
      GOOGLE_DCHECK(loc_ != NULL);
      loc_->::micromsg::LbsLocation::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 112u) {
    ::memset(&opcode_, 0, reinterpret_cast<char*>(&entrytime_) -
      reinterpret_cast<char*>(&opcode_) + sizeof(entrytime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetLbsLifeListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetLbsLifeListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Opcode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_opcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &opcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Scene = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_scene();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .micromsg.SKBuiltinBuffer_t Buff = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_buff()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.LbsLocation Loc = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_loc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Keyword = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_keyword()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->keyword().data(), this->keyword().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetLbsLifeListRequest.Keyword");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 EntryTime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_entrytime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entrytime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetLbsLifeListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetLbsLifeListRequest)
  return false;
#undef DO_
}

void GetLbsLifeListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetLbsLifeListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required uint32 Opcode = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->opcode(), output);
  }

  // required uint32 Scene = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->scene(), output);
  }

  // optional .micromsg.SKBuiltinBuffer_t Buff = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->buff_, output);
  }

  // required .micromsg.LbsLocation Loc = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->loc_, output);
  }

  // optional string Keyword = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keyword().data(), this->keyword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetLbsLifeListRequest.Keyword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->keyword(), output);
  }

  // optional uint32 EntryTime = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->entrytime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetLbsLifeListRequest)
}

::google::protobuf::uint8* GetLbsLifeListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetLbsLifeListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required uint32 Opcode = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->opcode(), target);
  }

  // required uint32 Scene = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->scene(), target);
  }

  // optional .micromsg.SKBuiltinBuffer_t Buff = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->buff_, deterministic, target);
  }

  // required .micromsg.LbsLocation Loc = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->loc_, deterministic, target);
  }

  // optional string Keyword = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keyword().data(), this->keyword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetLbsLifeListRequest.Keyword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->keyword(), target);
  }

  // optional uint32 EntryTime = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->entrytime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetLbsLifeListRequest)
  return target;
}

size_t GetLbsLifeListRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetLbsLifeListRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_loc()) {
    // required .micromsg.LbsLocation Loc = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->loc_);
  }

  if (has_opcode()) {
    // required uint32 Opcode = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opcode());
  }

  if (has_scene()) {
    // required uint32 Scene = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene());
  }

  return total_size;
}
size_t GetLbsLifeListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetLbsLifeListRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003a) ^ 0x0000003a) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required .micromsg.LbsLocation Loc = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->loc_);

    // required uint32 Opcode = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opcode());

    // required uint32 Scene = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string Keyword = 6;
  if (has_keyword()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->keyword());
  }

  // optional .micromsg.SKBuiltinBuffer_t Buff = 4;
  if (has_buff()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->buff_);
  }

  // optional uint32 EntryTime = 7;
  if (has_entrytime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entrytime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetLbsLifeListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetLbsLifeListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLbsLifeListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetLbsLifeListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetLbsLifeListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetLbsLifeListRequest)
    MergeFrom(*source);
  }
}

void GetLbsLifeListRequest::MergeFrom(const GetLbsLifeListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetLbsLifeListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_keyword();
      keyword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keyword_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_buff()->::micromsg::SKBuiltinBuffer_t::MergeFrom(from.buff());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_loc()->::micromsg::LbsLocation::MergeFrom(from.loc());
    }
    if (cached_has_bits & 0x00000010u) {
      opcode_ = from.opcode_;
    }
    if (cached_has_bits & 0x00000020u) {
      scene_ = from.scene_;
    }
    if (cached_has_bits & 0x00000040u) {
      entrytime_ = from.entrytime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetLbsLifeListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetLbsLifeListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLbsLifeListRequest::CopyFrom(const GetLbsLifeListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetLbsLifeListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLbsLifeListRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003a) != 0x0000003a) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  if (has_buff()) {
    if (!this->buff_->IsInitialized()) return false;
  }
  if (has_loc()) {
    if (!this->loc_->IsInitialized()) return false;
  }
  return true;
}

void GetLbsLifeListRequest::Swap(GetLbsLifeListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetLbsLifeListRequest::InternalSwap(GetLbsLifeListRequest* other) {
  keyword_.Swap(&other->keyword_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(buff_, other->buff_);
  std::swap(loc_, other->loc_);
  std::swap(opcode_, other->opcode_);
  std::swap(scene_, other->scene_);
  std::swap(entrytime_, other->entrytime_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetLbsLifeListRequest::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetLbsLifeListRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool GetLbsLifeListRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetLbsLifeListRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
void GetLbsLifeListRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetLbsLifeListRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& GetLbsLifeListRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeListRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* GetLbsLifeListRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetLbsLifeListRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* GetLbsLifeListRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetLbsLifeListRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void GetLbsLifeListRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLbsLifeListRequest.BaseRequest)
}

// required uint32 Opcode = 2;
bool GetLbsLifeListRequest::has_opcode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GetLbsLifeListRequest::set_has_opcode() {
  _has_bits_[0] |= 0x00000010u;
}
void GetLbsLifeListRequest::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000010u;
}
void GetLbsLifeListRequest::clear_opcode() {
  opcode_ = 0u;
  clear_has_opcode();
}
::google::protobuf::uint32 GetLbsLifeListRequest::opcode() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeListRequest.Opcode)
  return opcode_;
}
void GetLbsLifeListRequest::set_opcode(::google::protobuf::uint32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetLbsLifeListRequest.Opcode)
}

// required uint32 Scene = 3;
bool GetLbsLifeListRequest::has_scene() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void GetLbsLifeListRequest::set_has_scene() {
  _has_bits_[0] |= 0x00000020u;
}
void GetLbsLifeListRequest::clear_has_scene() {
  _has_bits_[0] &= ~0x00000020u;
}
void GetLbsLifeListRequest::clear_scene() {
  scene_ = 0u;
  clear_has_scene();
}
::google::protobuf::uint32 GetLbsLifeListRequest::scene() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeListRequest.Scene)
  return scene_;
}
void GetLbsLifeListRequest::set_scene(::google::protobuf::uint32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetLbsLifeListRequest.Scene)
}

// optional .micromsg.SKBuiltinBuffer_t Buff = 4;
bool GetLbsLifeListRequest::has_buff() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetLbsLifeListRequest::set_has_buff() {
  _has_bits_[0] |= 0x00000004u;
}
void GetLbsLifeListRequest::clear_has_buff() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetLbsLifeListRequest::clear_buff() {
  if (buff_ != NULL) buff_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_buff();
}
const ::micromsg::SKBuiltinBuffer_t& GetLbsLifeListRequest::buff() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeListRequest.Buff)
  return buff_ != NULL ? *buff_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
::micromsg::SKBuiltinBuffer_t* GetLbsLifeListRequest::mutable_buff() {
  set_has_buff();
  if (buff_ == NULL) {
    buff_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetLbsLifeListRequest.Buff)
  return buff_;
}
::micromsg::SKBuiltinBuffer_t* GetLbsLifeListRequest::release_buff() {
  // @@protoc_insertion_point(field_release:micromsg.GetLbsLifeListRequest.Buff)
  clear_has_buff();
  ::micromsg::SKBuiltinBuffer_t* temp = buff_;
  buff_ = NULL;
  return temp;
}
void GetLbsLifeListRequest::set_allocated_buff(::micromsg::SKBuiltinBuffer_t* buff) {
  delete buff_;
  buff_ = buff;
  if (buff) {
    set_has_buff();
  } else {
    clear_has_buff();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLbsLifeListRequest.Buff)
}

// required .micromsg.LbsLocation Loc = 5;
bool GetLbsLifeListRequest::has_loc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GetLbsLifeListRequest::set_has_loc() {
  _has_bits_[0] |= 0x00000008u;
}
void GetLbsLifeListRequest::clear_has_loc() {
  _has_bits_[0] &= ~0x00000008u;
}
void GetLbsLifeListRequest::clear_loc() {
  if (loc_ != NULL) loc_->::micromsg::LbsLocation::Clear();
  clear_has_loc();
}
const ::micromsg::LbsLocation& GetLbsLifeListRequest::loc() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeListRequest.Loc)
  return loc_ != NULL ? *loc_
                         : *::micromsg::LbsLocation::internal_default_instance();
}
::micromsg::LbsLocation* GetLbsLifeListRequest::mutable_loc() {
  set_has_loc();
  if (loc_ == NULL) {
    loc_ = new ::micromsg::LbsLocation;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetLbsLifeListRequest.Loc)
  return loc_;
}
::micromsg::LbsLocation* GetLbsLifeListRequest::release_loc() {
  // @@protoc_insertion_point(field_release:micromsg.GetLbsLifeListRequest.Loc)
  clear_has_loc();
  ::micromsg::LbsLocation* temp = loc_;
  loc_ = NULL;
  return temp;
}
void GetLbsLifeListRequest::set_allocated_loc(::micromsg::LbsLocation* loc) {
  delete loc_;
  loc_ = loc;
  if (loc) {
    set_has_loc();
  } else {
    clear_has_loc();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLbsLifeListRequest.Loc)
}

// optional string Keyword = 6;
bool GetLbsLifeListRequest::has_keyword() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetLbsLifeListRequest::set_has_keyword() {
  _has_bits_[0] |= 0x00000001u;
}
void GetLbsLifeListRequest::clear_has_keyword() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetLbsLifeListRequest::clear_keyword() {
  keyword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_keyword();
}
const ::std::string& GetLbsLifeListRequest::keyword() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeListRequest.Keyword)
  return keyword_.GetNoArena();
}
void GetLbsLifeListRequest::set_keyword(const ::std::string& value) {
  set_has_keyword();
  keyword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetLbsLifeListRequest.Keyword)
}
#if LANG_CXX11
void GetLbsLifeListRequest::set_keyword(::std::string&& value) {
  set_has_keyword();
  keyword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetLbsLifeListRequest.Keyword)
}
#endif
void GetLbsLifeListRequest::set_keyword(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_keyword();
  keyword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetLbsLifeListRequest.Keyword)
}
void GetLbsLifeListRequest::set_keyword(const char* value, size_t size) {
  set_has_keyword();
  keyword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetLbsLifeListRequest.Keyword)
}
::std::string* GetLbsLifeListRequest::mutable_keyword() {
  set_has_keyword();
  // @@protoc_insertion_point(field_mutable:micromsg.GetLbsLifeListRequest.Keyword)
  return keyword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetLbsLifeListRequest::release_keyword() {
  // @@protoc_insertion_point(field_release:micromsg.GetLbsLifeListRequest.Keyword)
  clear_has_keyword();
  return keyword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetLbsLifeListRequest::set_allocated_keyword(::std::string* keyword) {
  if (keyword != NULL) {
    set_has_keyword();
  } else {
    clear_has_keyword();
  }
  keyword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keyword);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLbsLifeListRequest.Keyword)
}

// optional uint32 EntryTime = 7;
bool GetLbsLifeListRequest::has_entrytime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void GetLbsLifeListRequest::set_has_entrytime() {
  _has_bits_[0] |= 0x00000040u;
}
void GetLbsLifeListRequest::clear_has_entrytime() {
  _has_bits_[0] &= ~0x00000040u;
}
void GetLbsLifeListRequest::clear_entrytime() {
  entrytime_ = 0u;
  clear_has_entrytime();
}
::google::protobuf::uint32 GetLbsLifeListRequest::entrytime() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeListRequest.EntryTime)
  return entrytime_;
}
void GetLbsLifeListRequest::set_entrytime(::google::protobuf::uint32 value) {
  set_has_entrytime();
  entrytime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetLbsLifeListRequest.EntryTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LbsLife::kBIdFieldNumber;
const int LbsLife::kTitleFieldNumber;
const int LbsLife::kPriceFieldNumber;
const int LbsLife::kIconIdxCountFieldNumber;
const int LbsLife::kIconIdxListFieldNumber;
const int LbsLife::kDescCountFieldNumber;
const int LbsLife::kDescListFieldNumber;
const int LbsLife::kRateFieldNumber;
const int LbsLife::kLinkFieldNumber;
const int LbsLife::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LbsLife::LbsLife()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.LbsLife)
}
LbsLife::LbsLife(const LbsLife& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      iconidxlist_(from.iconidxlist_),
      desclist_(from.desclist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bid()) {
    bid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bid_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_link()) {
    link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_);
  }
  ::memcpy(&price_, &from.price_,
    reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&price_) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:micromsg.LbsLife)
}

void LbsLife::SharedCtor() {
  _cached_size_ = 0;
  bid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&price_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&price_) + sizeof(type_));
}

LbsLife::~LbsLife() {
  // @@protoc_insertion_point(destructor:micromsg.LbsLife)
  SharedDtor();
}

void LbsLife::SharedDtor() {
  bid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LbsLife::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LbsLife::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LbsLife& LbsLife::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

LbsLife* LbsLife::New(::google::protobuf::Arena* arena) const {
  LbsLife* n = new LbsLife;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LbsLife::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.LbsLife)
  iconidxlist_.Clear();
  desclist_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    if (has_bid()) {
      GOOGLE_DCHECK(!bid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*bid_.UnsafeRawStringPointer())->clear();
    }
    if (has_title()) {
      GOOGLE_DCHECK(!title_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*title_.UnsafeRawStringPointer())->clear();
    }
    if (has_link()) {
      GOOGLE_DCHECK(!link_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*link_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 248u) {
    ::memset(&price_, 0, reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&price_) + sizeof(type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LbsLife::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.LbsLife)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string BId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bid().data(), this->bid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsLife.BId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsLife.Title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float Price = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u)) {
          set_has_price();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 IconIdxCount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_iconidxcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &iconidxcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 IconIdxList = 5 [packed = true];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_iconidxlist())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(40u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_iconidxlist())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 DescCount = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_desccount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &desccount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.SKBuiltinString_t DescList = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_desclist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float Rate = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u)) {
          set_has_rate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Link = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_link()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->link().data(), this->link().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsLife.Link");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 Type = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.LbsLife)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.LbsLife)
  return false;
#undef DO_
}

void LbsLife::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.LbsLife)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string BId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bid().data(), this->bid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsLife.BId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bid(), output);
  }

  // optional string Title = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsLife.Title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // required float Price = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->price(), output);
  }

  // required uint32 IconIdxCount = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->iconidxcount(), output);
  }

  // repeated uint32 IconIdxList = 5 [packed = true];
  if (this->iconidxlist_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_iconidxlist_cached_byte_size_);
  }
  for (int i = 0, n = this->iconidxlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->iconidxlist(i), output);
  }

  // required uint32 DescCount = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->desccount(), output);
  }

  // repeated .micromsg.SKBuiltinString_t DescList = 7;
  for (unsigned int i = 0, n = this->desclist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->desclist(i), output);
  }

  // required float Rate = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->rate(), output);
  }

  // optional string Link = 9;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->link().data(), this->link().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsLife.Link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->link(), output);
  }

  // optional uint32 Type = 10;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.LbsLife)
}

::google::protobuf::uint8* LbsLife::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.LbsLife)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string BId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bid().data(), this->bid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsLife.BId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bid(), target);
  }

  // optional string Title = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsLife.Title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // required float Price = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->price(), target);
  }

  // required uint32 IconIdxCount = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->iconidxcount(), target);
  }

  // repeated uint32 IconIdxList = 5 [packed = true];
  if (this->iconidxlist_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _iconidxlist_cached_byte_size_, target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->iconidxlist_, target);
  }

  // required uint32 DescCount = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->desccount(), target);
  }

  // repeated .micromsg.SKBuiltinString_t DescList = 7;
  for (unsigned int i = 0, n = this->desclist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->desclist(i), deterministic, target);
  }

  // required float Rate = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->rate(), target);
  }

  // optional string Link = 9;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->link().data(), this->link().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsLife.Link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->link(), target);
  }

  // optional uint32 Type = 10;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.LbsLife)
  return target;
}

size_t LbsLife::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.LbsLife)
  size_t total_size = 0;

  if (has_price()) {
    // required float Price = 3;
    total_size += 1 + 4;
  }

  if (has_iconidxcount()) {
    // required uint32 IconIdxCount = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->iconidxcount());
  }

  if (has_desccount()) {
    // required uint32 DescCount = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->desccount());
  }

  if (has_rate()) {
    // required float Rate = 8;
    total_size += 1 + 4;
  }

  return total_size;
}
size_t LbsLife::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.LbsLife)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000078) ^ 0x00000078) == 0) {  // All required fields are present.
    // required float Price = 3;
    total_size += 1 + 4;

    // required uint32 IconIdxCount = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->iconidxcount());

    // required uint32 DescCount = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->desccount());

    // required float Rate = 8;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated uint32 IconIdxList = 5 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->iconidxlist_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _iconidxlist_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .micromsg.SKBuiltinString_t DescList = 7;
  {
    unsigned int count = this->desclist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->desclist(i));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional string BId = 1;
    if (has_bid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bid());
    }

    // optional string Title = 2;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string Link = 9;
    if (has_link()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->link());
    }

  }
  // optional uint32 Type = 10;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LbsLife::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.LbsLife)
  GOOGLE_DCHECK_NE(&from, this);
  const LbsLife* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LbsLife>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.LbsLife)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.LbsLife)
    MergeFrom(*source);
  }
}

void LbsLife::MergeFrom(const LbsLife& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.LbsLife)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  iconidxlist_.MergeFrom(from.iconidxlist_);
  desclist_.MergeFrom(from.desclist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_bid();
      bid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_link();
      link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_);
    }
    if (cached_has_bits & 0x00000008u) {
      price_ = from.price_;
    }
    if (cached_has_bits & 0x00000010u) {
      iconidxcount_ = from.iconidxcount_;
    }
    if (cached_has_bits & 0x00000020u) {
      desccount_ = from.desccount_;
    }
    if (cached_has_bits & 0x00000040u) {
      rate_ = from.rate_;
    }
    if (cached_has_bits & 0x00000080u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LbsLife::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.LbsLife)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LbsLife::CopyFrom(const LbsLife& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.LbsLife)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LbsLife::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000078) != 0x00000078) return false;
  return true;
}

void LbsLife::Swap(LbsLife* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LbsLife::InternalSwap(LbsLife* other) {
  iconidxlist_.InternalSwap(&other->iconidxlist_);
  desclist_.InternalSwap(&other->desclist_);
  bid_.Swap(&other->bid_);
  title_.Swap(&other->title_);
  link_.Swap(&other->link_);
  std::swap(price_, other->price_);
  std::swap(iconidxcount_, other->iconidxcount_);
  std::swap(desccount_, other->desccount_);
  std::swap(rate_, other->rate_);
  std::swap(type_, other->type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LbsLife::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LbsLife

// optional string BId = 1;
bool LbsLife::has_bid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LbsLife::set_has_bid() {
  _has_bits_[0] |= 0x00000001u;
}
void LbsLife::clear_has_bid() {
  _has_bits_[0] &= ~0x00000001u;
}
void LbsLife::clear_bid() {
  bid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bid();
}
const ::std::string& LbsLife::bid() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLife.BId)
  return bid_.GetNoArena();
}
void LbsLife::set_bid(const ::std::string& value) {
  set_has_bid();
  bid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsLife.BId)
}
#if LANG_CXX11
void LbsLife::set_bid(::std::string&& value) {
  set_has_bid();
  bid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsLife.BId)
}
#endif
void LbsLife::set_bid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bid();
  bid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsLife.BId)
}
void LbsLife::set_bid(const char* value, size_t size) {
  set_has_bid();
  bid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsLife.BId)
}
::std::string* LbsLife::mutable_bid() {
  set_has_bid();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsLife.BId)
  return bid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsLife::release_bid() {
  // @@protoc_insertion_point(field_release:micromsg.LbsLife.BId)
  clear_has_bid();
  return bid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsLife::set_allocated_bid(::std::string* bid) {
  if (bid != NULL) {
    set_has_bid();
  } else {
    clear_has_bid();
  }
  bid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsLife.BId)
}

// optional string Title = 2;
bool LbsLife::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LbsLife::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
void LbsLife::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
void LbsLife::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
const ::std::string& LbsLife::title() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLife.Title)
  return title_.GetNoArena();
}
void LbsLife::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsLife.Title)
}
#if LANG_CXX11
void LbsLife::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsLife.Title)
}
#endif
void LbsLife::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsLife.Title)
}
void LbsLife::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsLife.Title)
}
::std::string* LbsLife::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsLife.Title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsLife::release_title() {
  // @@protoc_insertion_point(field_release:micromsg.LbsLife.Title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsLife::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsLife.Title)
}

// required float Price = 3;
bool LbsLife::has_price() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void LbsLife::set_has_price() {
  _has_bits_[0] |= 0x00000008u;
}
void LbsLife::clear_has_price() {
  _has_bits_[0] &= ~0x00000008u;
}
void LbsLife::clear_price() {
  price_ = 0;
  clear_has_price();
}
float LbsLife::price() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLife.Price)
  return price_;
}
void LbsLife::set_price(float value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsLife.Price)
}

// required uint32 IconIdxCount = 4;
bool LbsLife::has_iconidxcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void LbsLife::set_has_iconidxcount() {
  _has_bits_[0] |= 0x00000010u;
}
void LbsLife::clear_has_iconidxcount() {
  _has_bits_[0] &= ~0x00000010u;
}
void LbsLife::clear_iconidxcount() {
  iconidxcount_ = 0u;
  clear_has_iconidxcount();
}
::google::protobuf::uint32 LbsLife::iconidxcount() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLife.IconIdxCount)
  return iconidxcount_;
}
void LbsLife::set_iconidxcount(::google::protobuf::uint32 value) {
  set_has_iconidxcount();
  iconidxcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsLife.IconIdxCount)
}

// repeated uint32 IconIdxList = 5 [packed = true];
int LbsLife::iconidxlist_size() const {
  return iconidxlist_.size();
}
void LbsLife::clear_iconidxlist() {
  iconidxlist_.Clear();
}
::google::protobuf::uint32 LbsLife::iconidxlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLife.IconIdxList)
  return iconidxlist_.Get(index);
}
void LbsLife::set_iconidxlist(int index, ::google::protobuf::uint32 value) {
  iconidxlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:micromsg.LbsLife.IconIdxList)
}
void LbsLife::add_iconidxlist(::google::protobuf::uint32 value) {
  iconidxlist_.Add(value);
  // @@protoc_insertion_point(field_add:micromsg.LbsLife.IconIdxList)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LbsLife::iconidxlist() const {
  // @@protoc_insertion_point(field_list:micromsg.LbsLife.IconIdxList)
  return iconidxlist_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LbsLife::mutable_iconidxlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.LbsLife.IconIdxList)
  return &iconidxlist_;
}

// required uint32 DescCount = 6;
bool LbsLife::has_desccount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void LbsLife::set_has_desccount() {
  _has_bits_[0] |= 0x00000020u;
}
void LbsLife::clear_has_desccount() {
  _has_bits_[0] &= ~0x00000020u;
}
void LbsLife::clear_desccount() {
  desccount_ = 0u;
  clear_has_desccount();
}
::google::protobuf::uint32 LbsLife::desccount() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLife.DescCount)
  return desccount_;
}
void LbsLife::set_desccount(::google::protobuf::uint32 value) {
  set_has_desccount();
  desccount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsLife.DescCount)
}

// repeated .micromsg.SKBuiltinString_t DescList = 7;
int LbsLife::desclist_size() const {
  return desclist_.size();
}
void LbsLife::clear_desclist() {
  desclist_.Clear();
}
const ::micromsg::SKBuiltinString_t& LbsLife::desclist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLife.DescList)
  return desclist_.Get(index);
}
::micromsg::SKBuiltinString_t* LbsLife::mutable_desclist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.LbsLife.DescList)
  return desclist_.Mutable(index);
}
::micromsg::SKBuiltinString_t* LbsLife::add_desclist() {
  // @@protoc_insertion_point(field_add:micromsg.LbsLife.DescList)
  return desclist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
LbsLife::mutable_desclist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.LbsLife.DescList)
  return &desclist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
LbsLife::desclist() const {
  // @@protoc_insertion_point(field_list:micromsg.LbsLife.DescList)
  return desclist_;
}

// required float Rate = 8;
bool LbsLife::has_rate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void LbsLife::set_has_rate() {
  _has_bits_[0] |= 0x00000040u;
}
void LbsLife::clear_has_rate() {
  _has_bits_[0] &= ~0x00000040u;
}
void LbsLife::clear_rate() {
  rate_ = 0;
  clear_has_rate();
}
float LbsLife::rate() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLife.Rate)
  return rate_;
}
void LbsLife::set_rate(float value) {
  set_has_rate();
  rate_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsLife.Rate)
}

// optional string Link = 9;
bool LbsLife::has_link() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LbsLife::set_has_link() {
  _has_bits_[0] |= 0x00000004u;
}
void LbsLife::clear_has_link() {
  _has_bits_[0] &= ~0x00000004u;
}
void LbsLife::clear_link() {
  link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_link();
}
const ::std::string& LbsLife::link() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLife.Link)
  return link_.GetNoArena();
}
void LbsLife::set_link(const ::std::string& value) {
  set_has_link();
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsLife.Link)
}
#if LANG_CXX11
void LbsLife::set_link(::std::string&& value) {
  set_has_link();
  link_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsLife.Link)
}
#endif
void LbsLife::set_link(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_link();
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsLife.Link)
}
void LbsLife::set_link(const char* value, size_t size) {
  set_has_link();
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsLife.Link)
}
::std::string* LbsLife::mutable_link() {
  set_has_link();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsLife.Link)
  return link_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsLife::release_link() {
  // @@protoc_insertion_point(field_release:micromsg.LbsLife.Link)
  clear_has_link();
  return link_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsLife::set_allocated_link(::std::string* link) {
  if (link != NULL) {
    set_has_link();
  } else {
    clear_has_link();
  }
  link_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), link);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsLife.Link)
}

// optional uint32 Type = 10;
bool LbsLife::has_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void LbsLife::set_has_type() {
  _has_bits_[0] |= 0x00000080u;
}
void LbsLife::clear_has_type() {
  _has_bits_[0] &= ~0x00000080u;
}
void LbsLife::clear_type() {
  type_ = 0u;
  clear_has_type();
}
::google::protobuf::uint32 LbsLife::type() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLife.Type)
  return type_;
}
void LbsLife::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsLife.Type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetLbsFunctionListRequest::kBaseRequestFieldNumber;
const int GetLbsFunctionListRequest::kLocFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetLbsFunctionListRequest::GetLbsFunctionListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetLbsFunctionListRequest)
}
GetLbsFunctionListRequest::GetLbsFunctionListRequest(const GetLbsFunctionListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  if (from.has_loc()) {
    loc_ = new ::micromsg::LbsLocation(*from.loc_);
  } else {
    loc_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.GetLbsFunctionListRequest)
}

void GetLbsFunctionListRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&loc_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(loc_));
}

GetLbsFunctionListRequest::~GetLbsFunctionListRequest() {
  // @@protoc_insertion_point(destructor:micromsg.GetLbsFunctionListRequest)
  SharedDtor();
}

void GetLbsFunctionListRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
  if (this != internal_default_instance()) {
    delete loc_;
  }
}

void GetLbsFunctionListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLbsFunctionListRequest::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetLbsFunctionListRequest& GetLbsFunctionListRequest::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetLbsFunctionListRequest* GetLbsFunctionListRequest::New(::google::protobuf::Arena* arena) const {
  GetLbsFunctionListRequest* n = new GetLbsFunctionListRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetLbsFunctionListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetLbsFunctionListRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
    if (has_loc()) {
      GOOGLE_DCHECK(loc_ != NULL);
      loc_->::micromsg::LbsLocation::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetLbsFunctionListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetLbsFunctionListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.LbsLocation Loc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_loc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetLbsFunctionListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetLbsFunctionListRequest)
  return false;
#undef DO_
}

void GetLbsFunctionListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetLbsFunctionListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required .micromsg.LbsLocation Loc = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->loc_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetLbsFunctionListRequest)
}

::google::protobuf::uint8* GetLbsFunctionListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetLbsFunctionListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required .micromsg.LbsLocation Loc = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->loc_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetLbsFunctionListRequest)
  return target;
}

size_t GetLbsFunctionListRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetLbsFunctionListRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_loc()) {
    // required .micromsg.LbsLocation Loc = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->loc_);
  }

  return total_size;
}
size_t GetLbsFunctionListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetLbsFunctionListRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required .micromsg.LbsLocation Loc = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->loc_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetLbsFunctionListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetLbsFunctionListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLbsFunctionListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetLbsFunctionListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetLbsFunctionListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetLbsFunctionListRequest)
    MergeFrom(*source);
  }
}

void GetLbsFunctionListRequest::MergeFrom(const GetLbsFunctionListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetLbsFunctionListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_loc()->::micromsg::LbsLocation::MergeFrom(from.loc());
    }
  }
}

void GetLbsFunctionListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetLbsFunctionListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLbsFunctionListRequest::CopyFrom(const GetLbsFunctionListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetLbsFunctionListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLbsFunctionListRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  if (has_loc()) {
    if (!this->loc_->IsInitialized()) return false;
  }
  return true;
}

void GetLbsFunctionListRequest::Swap(GetLbsFunctionListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetLbsFunctionListRequest::InternalSwap(GetLbsFunctionListRequest* other) {
  std::swap(baserequest_, other->baserequest_);
  std::swap(loc_, other->loc_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetLbsFunctionListRequest::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetLbsFunctionListRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool GetLbsFunctionListRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetLbsFunctionListRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
void GetLbsFunctionListRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetLbsFunctionListRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& GetLbsFunctionListRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsFunctionListRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* GetLbsFunctionListRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetLbsFunctionListRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* GetLbsFunctionListRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetLbsFunctionListRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void GetLbsFunctionListRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLbsFunctionListRequest.BaseRequest)
}

// required .micromsg.LbsLocation Loc = 2;
bool GetLbsFunctionListRequest::has_loc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetLbsFunctionListRequest::set_has_loc() {
  _has_bits_[0] |= 0x00000002u;
}
void GetLbsFunctionListRequest::clear_has_loc() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetLbsFunctionListRequest::clear_loc() {
  if (loc_ != NULL) loc_->::micromsg::LbsLocation::Clear();
  clear_has_loc();
}
const ::micromsg::LbsLocation& GetLbsFunctionListRequest::loc() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsFunctionListRequest.Loc)
  return loc_ != NULL ? *loc_
                         : *::micromsg::LbsLocation::internal_default_instance();
}
::micromsg::LbsLocation* GetLbsFunctionListRequest::mutable_loc() {
  set_has_loc();
  if (loc_ == NULL) {
    loc_ = new ::micromsg::LbsLocation;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetLbsFunctionListRequest.Loc)
  return loc_;
}
::micromsg::LbsLocation* GetLbsFunctionListRequest::release_loc() {
  // @@protoc_insertion_point(field_release:micromsg.GetLbsFunctionListRequest.Loc)
  clear_has_loc();
  ::micromsg::LbsLocation* temp = loc_;
  loc_ = NULL;
  return temp;
}
void GetLbsFunctionListRequest::set_allocated_loc(::micromsg::LbsLocation* loc) {
  delete loc_;
  loc_ = loc;
  if (loc) {
    set_has_loc();
  } else {
    clear_has_loc();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLbsFunctionListRequest.Loc)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetLbsFunctionListResponse::kBaseResponseFieldNumber;
const int GetLbsFunctionListResponse::kLbsFunctionListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetLbsFunctionListResponse::GetLbsFunctionListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetLbsFunctionListResponse)
}
GetLbsFunctionListResponse::GetLbsFunctionListResponse(const GetLbsFunctionListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lbsfunctionlist_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_lbsfunctionlist()) {
    lbsfunctionlist_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lbsfunctionlist_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.GetLbsFunctionListResponse)
}

void GetLbsFunctionListResponse::SharedCtor() {
  _cached_size_ = 0;
  lbsfunctionlist_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  baseresponse_ = NULL;
}

GetLbsFunctionListResponse::~GetLbsFunctionListResponse() {
  // @@protoc_insertion_point(destructor:micromsg.GetLbsFunctionListResponse)
  SharedDtor();
}

void GetLbsFunctionListResponse::SharedDtor() {
  lbsfunctionlist_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void GetLbsFunctionListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLbsFunctionListResponse::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetLbsFunctionListResponse& GetLbsFunctionListResponse::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetLbsFunctionListResponse* GetLbsFunctionListResponse::New(::google::protobuf::Arena* arena) const {
  GetLbsFunctionListResponse* n = new GetLbsFunctionListResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetLbsFunctionListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetLbsFunctionListResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_lbsfunctionlist()) {
      GOOGLE_DCHECK(!lbsfunctionlist_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*lbsfunctionlist_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetLbsFunctionListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetLbsFunctionListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string LbsFunctionList = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lbsfunctionlist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->lbsfunctionlist().data(), this->lbsfunctionlist().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetLbsFunctionListResponse.LbsFunctionList");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetLbsFunctionListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetLbsFunctionListResponse)
  return false;
#undef DO_
}

void GetLbsFunctionListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetLbsFunctionListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // optional string LbsFunctionList = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lbsfunctionlist().data(), this->lbsfunctionlist().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetLbsFunctionListResponse.LbsFunctionList");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->lbsfunctionlist(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetLbsFunctionListResponse)
}

::google::protobuf::uint8* GetLbsFunctionListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetLbsFunctionListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // optional string LbsFunctionList = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lbsfunctionlist().data(), this->lbsfunctionlist().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetLbsFunctionListResponse.LbsFunctionList");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->lbsfunctionlist(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetLbsFunctionListResponse)
  return target;
}

size_t GetLbsFunctionListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetLbsFunctionListResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (has_baseresponse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }
  // optional string LbsFunctionList = 2;
  if (has_lbsfunctionlist()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lbsfunctionlist());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetLbsFunctionListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetLbsFunctionListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLbsFunctionListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetLbsFunctionListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetLbsFunctionListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetLbsFunctionListResponse)
    MergeFrom(*source);
  }
}

void GetLbsFunctionListResponse::MergeFrom(const GetLbsFunctionListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetLbsFunctionListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_lbsfunctionlist();
      lbsfunctionlist_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lbsfunctionlist_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
  }
}

void GetLbsFunctionListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetLbsFunctionListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLbsFunctionListResponse::CopyFrom(const GetLbsFunctionListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetLbsFunctionListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLbsFunctionListResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void GetLbsFunctionListResponse::Swap(GetLbsFunctionListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetLbsFunctionListResponse::InternalSwap(GetLbsFunctionListResponse* other) {
  lbsfunctionlist_.Swap(&other->lbsfunctionlist_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetLbsFunctionListResponse::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetLbsFunctionListResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool GetLbsFunctionListResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetLbsFunctionListResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
void GetLbsFunctionListResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetLbsFunctionListResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& GetLbsFunctionListResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsFunctionListResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* GetLbsFunctionListResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetLbsFunctionListResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* GetLbsFunctionListResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetLbsFunctionListResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void GetLbsFunctionListResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLbsFunctionListResponse.BaseResponse)
}

// optional string LbsFunctionList = 2;
bool GetLbsFunctionListResponse::has_lbsfunctionlist() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetLbsFunctionListResponse::set_has_lbsfunctionlist() {
  _has_bits_[0] |= 0x00000001u;
}
void GetLbsFunctionListResponse::clear_has_lbsfunctionlist() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetLbsFunctionListResponse::clear_lbsfunctionlist() {
  lbsfunctionlist_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lbsfunctionlist();
}
const ::std::string& GetLbsFunctionListResponse::lbsfunctionlist() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsFunctionListResponse.LbsFunctionList)
  return lbsfunctionlist_.GetNoArena();
}
void GetLbsFunctionListResponse::set_lbsfunctionlist(const ::std::string& value) {
  set_has_lbsfunctionlist();
  lbsfunctionlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetLbsFunctionListResponse.LbsFunctionList)
}
#if LANG_CXX11
void GetLbsFunctionListResponse::set_lbsfunctionlist(::std::string&& value) {
  set_has_lbsfunctionlist();
  lbsfunctionlist_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetLbsFunctionListResponse.LbsFunctionList)
}
#endif
void GetLbsFunctionListResponse::set_lbsfunctionlist(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_lbsfunctionlist();
  lbsfunctionlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetLbsFunctionListResponse.LbsFunctionList)
}
void GetLbsFunctionListResponse::set_lbsfunctionlist(const char* value, size_t size) {
  set_has_lbsfunctionlist();
  lbsfunctionlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetLbsFunctionListResponse.LbsFunctionList)
}
::std::string* GetLbsFunctionListResponse::mutable_lbsfunctionlist() {
  set_has_lbsfunctionlist();
  // @@protoc_insertion_point(field_mutable:micromsg.GetLbsFunctionListResponse.LbsFunctionList)
  return lbsfunctionlist_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetLbsFunctionListResponse::release_lbsfunctionlist() {
  // @@protoc_insertion_point(field_release:micromsg.GetLbsFunctionListResponse.LbsFunctionList)
  clear_has_lbsfunctionlist();
  return lbsfunctionlist_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetLbsFunctionListResponse::set_allocated_lbsfunctionlist(::std::string* lbsfunctionlist) {
  if (lbsfunctionlist != NULL) {
    set_has_lbsfunctionlist();
  } else {
    clear_has_lbsfunctionlist();
  }
  lbsfunctionlist_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lbsfunctionlist);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLbsFunctionListResponse.LbsFunctionList)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetLbsLifeListResponse::kBaseResponseFieldNumber;
const int GetLbsLifeListResponse::kBuffFieldNumber;
const int GetLbsLifeListResponse::kIconCountFieldNumber;
const int GetLbsLifeListResponse::kIconListFieldNumber;
const int GetLbsLifeListResponse::kLifeCountFieldNumber;
const int GetLbsLifeListResponse::kLifeListFieldNumber;
const int GetLbsLifeListResponse::kContinueFlagFieldNumber;
const int GetLbsLifeListResponse::kLogoUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetLbsLifeListResponse::GetLbsLifeListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetLbsLifeListResponse)
}
GetLbsLifeListResponse::GetLbsLifeListResponse(const GetLbsLifeListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      iconlist_(from.iconlist_),
      lifelist_(from.lifelist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  logourl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_logourl()) {
    logourl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logourl_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  if (from.has_buff()) {
    buff_ = new ::micromsg::SKBuiltinBuffer_t(*from.buff_);
  } else {
    buff_ = NULL;
  }
  ::memcpy(&iconcount_, &from.iconcount_,
    reinterpret_cast<char*>(&continueflag_) -
    reinterpret_cast<char*>(&iconcount_) + sizeof(continueflag_));
  // @@protoc_insertion_point(copy_constructor:micromsg.GetLbsLifeListResponse)
}

void GetLbsLifeListResponse::SharedCtor() {
  _cached_size_ = 0;
  logourl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&continueflag_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(continueflag_));
}

GetLbsLifeListResponse::~GetLbsLifeListResponse() {
  // @@protoc_insertion_point(destructor:micromsg.GetLbsLifeListResponse)
  SharedDtor();
}

void GetLbsLifeListResponse::SharedDtor() {
  logourl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
  if (this != internal_default_instance()) {
    delete buff_;
  }
}

void GetLbsLifeListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLbsLifeListResponse::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetLbsLifeListResponse& GetLbsLifeListResponse::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetLbsLifeListResponse* GetLbsLifeListResponse::New(::google::protobuf::Arena* arena) const {
  GetLbsLifeListResponse* n = new GetLbsLifeListResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetLbsLifeListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetLbsLifeListResponse)
  iconlist_.Clear();
  lifelist_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    if (has_logourl()) {
      GOOGLE_DCHECK(!logourl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*logourl_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
    if (has_buff()) {
      GOOGLE_DCHECK(buff_ != NULL);
      buff_->::micromsg::SKBuiltinBuffer_t::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 56u) {
    ::memset(&iconcount_, 0, reinterpret_cast<char*>(&continueflag_) -
      reinterpret_cast<char*>(&iconcount_) + sizeof(continueflag_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetLbsLifeListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetLbsLifeListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.SKBuiltinBuffer_t Buff = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_buff()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 IconCount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_iconcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &iconcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.SKBuiltinString_t IconList = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_iconlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 LifeCount = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_lifecount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lifecount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.LbsLife LifeList = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_lifelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ContinueFlag = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_continueflag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &continueflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string LogoUrl = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logourl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->logourl().data(), this->logourl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetLbsLifeListResponse.LogoUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetLbsLifeListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetLbsLifeListResponse)
  return false;
#undef DO_
}

void GetLbsLifeListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetLbsLifeListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // required .micromsg.SKBuiltinBuffer_t Buff = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->buff_, output);
  }

  // required uint32 IconCount = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->iconcount(), output);
  }

  // repeated .micromsg.SKBuiltinString_t IconList = 4;
  for (unsigned int i = 0, n = this->iconlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->iconlist(i), output);
  }

  // required uint32 LifeCount = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->lifecount(), output);
  }

  // repeated .micromsg.LbsLife LifeList = 6;
  for (unsigned int i = 0, n = this->lifelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->lifelist(i), output);
  }

  // required uint32 ContinueFlag = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->continueflag(), output);
  }

  // optional string LogoUrl = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->logourl().data(), this->logourl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetLbsLifeListResponse.LogoUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->logourl(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetLbsLifeListResponse)
}

::google::protobuf::uint8* GetLbsLifeListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetLbsLifeListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // required .micromsg.SKBuiltinBuffer_t Buff = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->buff_, deterministic, target);
  }

  // required uint32 IconCount = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->iconcount(), target);
  }

  // repeated .micromsg.SKBuiltinString_t IconList = 4;
  for (unsigned int i = 0, n = this->iconlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->iconlist(i), deterministic, target);
  }

  // required uint32 LifeCount = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->lifecount(), target);
  }

  // repeated .micromsg.LbsLife LifeList = 6;
  for (unsigned int i = 0, n = this->lifelist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->lifelist(i), deterministic, target);
  }

  // required uint32 ContinueFlag = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->continueflag(), target);
  }

  // optional string LogoUrl = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->logourl().data(), this->logourl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetLbsLifeListResponse.LogoUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->logourl(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetLbsLifeListResponse)
  return target;
}

size_t GetLbsLifeListResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetLbsLifeListResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_buff()) {
    // required .micromsg.SKBuiltinBuffer_t Buff = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->buff_);
  }

  if (has_iconcount()) {
    // required uint32 IconCount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->iconcount());
  }

  if (has_lifecount()) {
    // required uint32 LifeCount = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lifecount());
  }

  if (has_continueflag()) {
    // required uint32 ContinueFlag = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->continueflag());
  }

  return total_size;
}
size_t GetLbsLifeListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetLbsLifeListResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003e) ^ 0x0000003e) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required .micromsg.SKBuiltinBuffer_t Buff = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->buff_);

    // required uint32 IconCount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->iconcount());

    // required uint32 LifeCount = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lifecount());

    // required uint32 ContinueFlag = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->continueflag());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.SKBuiltinString_t IconList = 4;
  {
    unsigned int count = this->iconlist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->iconlist(i));
    }
  }

  // repeated .micromsg.LbsLife LifeList = 6;
  {
    unsigned int count = this->lifelist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->lifelist(i));
    }
  }

  // optional string LogoUrl = 8;
  if (has_logourl()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->logourl());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetLbsLifeListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetLbsLifeListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLbsLifeListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetLbsLifeListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetLbsLifeListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetLbsLifeListResponse)
    MergeFrom(*source);
  }
}

void GetLbsLifeListResponse::MergeFrom(const GetLbsLifeListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetLbsLifeListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  iconlist_.MergeFrom(from.iconlist_);
  lifelist_.MergeFrom(from.lifelist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_logourl();
      logourl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logourl_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_buff()->::micromsg::SKBuiltinBuffer_t::MergeFrom(from.buff());
    }
    if (cached_has_bits & 0x00000008u) {
      iconcount_ = from.iconcount_;
    }
    if (cached_has_bits & 0x00000010u) {
      lifecount_ = from.lifecount_;
    }
    if (cached_has_bits & 0x00000020u) {
      continueflag_ = from.continueflag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetLbsLifeListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetLbsLifeListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLbsLifeListResponse::CopyFrom(const GetLbsLifeListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetLbsLifeListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLbsLifeListResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003e) != 0x0000003e) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->lifelist())) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  if (has_buff()) {
    if (!this->buff_->IsInitialized()) return false;
  }
  return true;
}

void GetLbsLifeListResponse::Swap(GetLbsLifeListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetLbsLifeListResponse::InternalSwap(GetLbsLifeListResponse* other) {
  iconlist_.InternalSwap(&other->iconlist_);
  lifelist_.InternalSwap(&other->lifelist_);
  logourl_.Swap(&other->logourl_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(buff_, other->buff_);
  std::swap(iconcount_, other->iconcount_);
  std::swap(lifecount_, other->lifecount_);
  std::swap(continueflag_, other->continueflag_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetLbsLifeListResponse::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetLbsLifeListResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool GetLbsLifeListResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetLbsLifeListResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
void GetLbsLifeListResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetLbsLifeListResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& GetLbsLifeListResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeListResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* GetLbsLifeListResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetLbsLifeListResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* GetLbsLifeListResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetLbsLifeListResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void GetLbsLifeListResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLbsLifeListResponse.BaseResponse)
}

// required .micromsg.SKBuiltinBuffer_t Buff = 2;
bool GetLbsLifeListResponse::has_buff() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetLbsLifeListResponse::set_has_buff() {
  _has_bits_[0] |= 0x00000004u;
}
void GetLbsLifeListResponse::clear_has_buff() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetLbsLifeListResponse::clear_buff() {
  if (buff_ != NULL) buff_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_buff();
}
const ::micromsg::SKBuiltinBuffer_t& GetLbsLifeListResponse::buff() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeListResponse.Buff)
  return buff_ != NULL ? *buff_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
::micromsg::SKBuiltinBuffer_t* GetLbsLifeListResponse::mutable_buff() {
  set_has_buff();
  if (buff_ == NULL) {
    buff_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetLbsLifeListResponse.Buff)
  return buff_;
}
::micromsg::SKBuiltinBuffer_t* GetLbsLifeListResponse::release_buff() {
  // @@protoc_insertion_point(field_release:micromsg.GetLbsLifeListResponse.Buff)
  clear_has_buff();
  ::micromsg::SKBuiltinBuffer_t* temp = buff_;
  buff_ = NULL;
  return temp;
}
void GetLbsLifeListResponse::set_allocated_buff(::micromsg::SKBuiltinBuffer_t* buff) {
  delete buff_;
  buff_ = buff;
  if (buff) {
    set_has_buff();
  } else {
    clear_has_buff();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLbsLifeListResponse.Buff)
}

// required uint32 IconCount = 3;
bool GetLbsLifeListResponse::has_iconcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GetLbsLifeListResponse::set_has_iconcount() {
  _has_bits_[0] |= 0x00000008u;
}
void GetLbsLifeListResponse::clear_has_iconcount() {
  _has_bits_[0] &= ~0x00000008u;
}
void GetLbsLifeListResponse::clear_iconcount() {
  iconcount_ = 0u;
  clear_has_iconcount();
}
::google::protobuf::uint32 GetLbsLifeListResponse::iconcount() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeListResponse.IconCount)
  return iconcount_;
}
void GetLbsLifeListResponse::set_iconcount(::google::protobuf::uint32 value) {
  set_has_iconcount();
  iconcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetLbsLifeListResponse.IconCount)
}

// repeated .micromsg.SKBuiltinString_t IconList = 4;
int GetLbsLifeListResponse::iconlist_size() const {
  return iconlist_.size();
}
void GetLbsLifeListResponse::clear_iconlist() {
  iconlist_.Clear();
}
const ::micromsg::SKBuiltinString_t& GetLbsLifeListResponse::iconlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeListResponse.IconList)
  return iconlist_.Get(index);
}
::micromsg::SKBuiltinString_t* GetLbsLifeListResponse::mutable_iconlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetLbsLifeListResponse.IconList)
  return iconlist_.Mutable(index);
}
::micromsg::SKBuiltinString_t* GetLbsLifeListResponse::add_iconlist() {
  // @@protoc_insertion_point(field_add:micromsg.GetLbsLifeListResponse.IconList)
  return iconlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
GetLbsLifeListResponse::mutable_iconlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetLbsLifeListResponse.IconList)
  return &iconlist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
GetLbsLifeListResponse::iconlist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetLbsLifeListResponse.IconList)
  return iconlist_;
}

// required uint32 LifeCount = 5;
bool GetLbsLifeListResponse::has_lifecount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GetLbsLifeListResponse::set_has_lifecount() {
  _has_bits_[0] |= 0x00000010u;
}
void GetLbsLifeListResponse::clear_has_lifecount() {
  _has_bits_[0] &= ~0x00000010u;
}
void GetLbsLifeListResponse::clear_lifecount() {
  lifecount_ = 0u;
  clear_has_lifecount();
}
::google::protobuf::uint32 GetLbsLifeListResponse::lifecount() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeListResponse.LifeCount)
  return lifecount_;
}
void GetLbsLifeListResponse::set_lifecount(::google::protobuf::uint32 value) {
  set_has_lifecount();
  lifecount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetLbsLifeListResponse.LifeCount)
}

// repeated .micromsg.LbsLife LifeList = 6;
int GetLbsLifeListResponse::lifelist_size() const {
  return lifelist_.size();
}
void GetLbsLifeListResponse::clear_lifelist() {
  lifelist_.Clear();
}
const ::micromsg::LbsLife& GetLbsLifeListResponse::lifelist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeListResponse.LifeList)
  return lifelist_.Get(index);
}
::micromsg::LbsLife* GetLbsLifeListResponse::mutable_lifelist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetLbsLifeListResponse.LifeList)
  return lifelist_.Mutable(index);
}
::micromsg::LbsLife* GetLbsLifeListResponse::add_lifelist() {
  // @@protoc_insertion_point(field_add:micromsg.GetLbsLifeListResponse.LifeList)
  return lifelist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::LbsLife >*
GetLbsLifeListResponse::mutable_lifelist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetLbsLifeListResponse.LifeList)
  return &lifelist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::LbsLife >&
GetLbsLifeListResponse::lifelist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetLbsLifeListResponse.LifeList)
  return lifelist_;
}

// required uint32 ContinueFlag = 7;
bool GetLbsLifeListResponse::has_continueflag() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void GetLbsLifeListResponse::set_has_continueflag() {
  _has_bits_[0] |= 0x00000020u;
}
void GetLbsLifeListResponse::clear_has_continueflag() {
  _has_bits_[0] &= ~0x00000020u;
}
void GetLbsLifeListResponse::clear_continueflag() {
  continueflag_ = 0u;
  clear_has_continueflag();
}
::google::protobuf::uint32 GetLbsLifeListResponse::continueflag() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeListResponse.ContinueFlag)
  return continueflag_;
}
void GetLbsLifeListResponse::set_continueflag(::google::protobuf::uint32 value) {
  set_has_continueflag();
  continueflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetLbsLifeListResponse.ContinueFlag)
}

// optional string LogoUrl = 8;
bool GetLbsLifeListResponse::has_logourl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetLbsLifeListResponse::set_has_logourl() {
  _has_bits_[0] |= 0x00000001u;
}
void GetLbsLifeListResponse::clear_has_logourl() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetLbsLifeListResponse::clear_logourl() {
  logourl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_logourl();
}
const ::std::string& GetLbsLifeListResponse::logourl() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeListResponse.LogoUrl)
  return logourl_.GetNoArena();
}
void GetLbsLifeListResponse::set_logourl(const ::std::string& value) {
  set_has_logourl();
  logourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetLbsLifeListResponse.LogoUrl)
}
#if LANG_CXX11
void GetLbsLifeListResponse::set_logourl(::std::string&& value) {
  set_has_logourl();
  logourl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetLbsLifeListResponse.LogoUrl)
}
#endif
void GetLbsLifeListResponse::set_logourl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_logourl();
  logourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetLbsLifeListResponse.LogoUrl)
}
void GetLbsLifeListResponse::set_logourl(const char* value, size_t size) {
  set_has_logourl();
  logourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetLbsLifeListResponse.LogoUrl)
}
::std::string* GetLbsLifeListResponse::mutable_logourl() {
  set_has_logourl();
  // @@protoc_insertion_point(field_mutable:micromsg.GetLbsLifeListResponse.LogoUrl)
  return logourl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetLbsLifeListResponse::release_logourl() {
  // @@protoc_insertion_point(field_release:micromsg.GetLbsLifeListResponse.LogoUrl)
  clear_has_logourl();
  return logourl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetLbsLifeListResponse::set_allocated_logourl(::std::string* logourl) {
  if (logourl != NULL) {
    set_has_logourl();
  } else {
    clear_has_logourl();
  }
  logourl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logourl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLbsLifeListResponse.LogoUrl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LBSLifeActionBooking::kTypeFieldNumber;
const int LBSLifeActionBooking::kTitleFieldNumber;
const int LBSLifeActionBooking::kUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LBSLifeActionBooking::LBSLifeActionBooking()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.LBSLifeActionBooking)
}
LBSLifeActionBooking::LBSLifeActionBooking(const LBSLifeActionBooking& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:micromsg.LBSLifeActionBooking)
}

void LBSLifeActionBooking::SharedCtor() {
  _cached_size_ = 0;
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0u;
}

LBSLifeActionBooking::~LBSLifeActionBooking() {
  // @@protoc_insertion_point(destructor:micromsg.LBSLifeActionBooking)
  SharedDtor();
}

void LBSLifeActionBooking::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LBSLifeActionBooking::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LBSLifeActionBooking::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LBSLifeActionBooking& LBSLifeActionBooking::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

LBSLifeActionBooking* LBSLifeActionBooking::New(::google::protobuf::Arena* arena) const {
  LBSLifeActionBooking* n = new LBSLifeActionBooking;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LBSLifeActionBooking::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.LBSLifeActionBooking)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_title()) {
      GOOGLE_DCHECK(!title_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*title_.UnsafeRawStringPointer())->clear();
    }
    if (has_url()) {
      GOOGLE_DCHECK(!url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*url_.UnsafeRawStringPointer())->clear();
    }
  }
  type_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LBSLifeActionBooking::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.LBSLifeActionBooking)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 Type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LBSLifeActionBooking.Title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Url = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LBSLifeActionBooking.Url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.LBSLifeActionBooking)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.LBSLifeActionBooking)
  return false;
#undef DO_
}

void LBSLifeActionBooking::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.LBSLifeActionBooking)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 Type = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // optional string Title = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LBSLifeActionBooking.Title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // optional string Url = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LBSLifeActionBooking.Url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->url(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.LBSLifeActionBooking)
}

::google::protobuf::uint8* LBSLifeActionBooking::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.LBSLifeActionBooking)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 Type = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // optional string Title = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LBSLifeActionBooking.Title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // optional string Url = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LBSLifeActionBooking.Url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->url(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.LBSLifeActionBooking)
  return target;
}

size_t LBSLifeActionBooking::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.LBSLifeActionBooking)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint32 Type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string Title = 2;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string Url = 3;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LBSLifeActionBooking::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.LBSLifeActionBooking)
  GOOGLE_DCHECK_NE(&from, this);
  const LBSLifeActionBooking* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LBSLifeActionBooking>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.LBSLifeActionBooking)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.LBSLifeActionBooking)
    MergeFrom(*source);
  }
}

void LBSLifeActionBooking::MergeFrom(const LBSLifeActionBooking& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.LBSLifeActionBooking)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LBSLifeActionBooking::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.LBSLifeActionBooking)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LBSLifeActionBooking::CopyFrom(const LBSLifeActionBooking& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.LBSLifeActionBooking)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LBSLifeActionBooking::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void LBSLifeActionBooking::Swap(LBSLifeActionBooking* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LBSLifeActionBooking::InternalSwap(LBSLifeActionBooking* other) {
  title_.Swap(&other->title_);
  url_.Swap(&other->url_);
  std::swap(type_, other->type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LBSLifeActionBooking::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LBSLifeActionBooking

// required uint32 Type = 1;
bool LBSLifeActionBooking::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LBSLifeActionBooking::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
void LBSLifeActionBooking::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void LBSLifeActionBooking::clear_type() {
  type_ = 0u;
  clear_has_type();
}
::google::protobuf::uint32 LBSLifeActionBooking::type() const {
  // @@protoc_insertion_point(field_get:micromsg.LBSLifeActionBooking.Type)
  return type_;
}
void LBSLifeActionBooking::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LBSLifeActionBooking.Type)
}

// optional string Title = 2;
bool LBSLifeActionBooking::has_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LBSLifeActionBooking::set_has_title() {
  _has_bits_[0] |= 0x00000001u;
}
void LBSLifeActionBooking::clear_has_title() {
  _has_bits_[0] &= ~0x00000001u;
}
void LBSLifeActionBooking::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
const ::std::string& LBSLifeActionBooking::title() const {
  // @@protoc_insertion_point(field_get:micromsg.LBSLifeActionBooking.Title)
  return title_.GetNoArena();
}
void LBSLifeActionBooking::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LBSLifeActionBooking.Title)
}
#if LANG_CXX11
void LBSLifeActionBooking::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LBSLifeActionBooking.Title)
}
#endif
void LBSLifeActionBooking::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LBSLifeActionBooking.Title)
}
void LBSLifeActionBooking::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LBSLifeActionBooking.Title)
}
::std::string* LBSLifeActionBooking::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:micromsg.LBSLifeActionBooking.Title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LBSLifeActionBooking::release_title() {
  // @@protoc_insertion_point(field_release:micromsg.LBSLifeActionBooking.Title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LBSLifeActionBooking::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LBSLifeActionBooking.Title)
}

// optional string Url = 3;
bool LBSLifeActionBooking::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LBSLifeActionBooking::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
void LBSLifeActionBooking::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
void LBSLifeActionBooking::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
const ::std::string& LBSLifeActionBooking::url() const {
  // @@protoc_insertion_point(field_get:micromsg.LBSLifeActionBooking.Url)
  return url_.GetNoArena();
}
void LBSLifeActionBooking::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LBSLifeActionBooking.Url)
}
#if LANG_CXX11
void LBSLifeActionBooking::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LBSLifeActionBooking.Url)
}
#endif
void LBSLifeActionBooking::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LBSLifeActionBooking.Url)
}
void LBSLifeActionBooking::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LBSLifeActionBooking.Url)
}
::std::string* LBSLifeActionBooking::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:micromsg.LBSLifeActionBooking.Url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LBSLifeActionBooking::release_url() {
  // @@protoc_insertion_point(field_release:micromsg.LBSLifeActionBooking.Url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LBSLifeActionBooking::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LBSLifeActionBooking.Url)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LBSLifeActionBargain::kDescFieldNumber;
const int LBSLifeActionBargain::kUrlFieldNumber;
const int LBSLifeActionBargain::kIconUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LBSLifeActionBargain::LBSLifeActionBargain()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.LBSLifeActionBargain)
}
LBSLifeActionBargain::LBSLifeActionBargain(const LBSLifeActionBargain& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_desc()) {
    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  iconurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_iconurl()) {
    iconurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iconurl_);
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.LBSLifeActionBargain)
}

void LBSLifeActionBargain::SharedCtor() {
  _cached_size_ = 0;
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iconurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LBSLifeActionBargain::~LBSLifeActionBargain() {
  // @@protoc_insertion_point(destructor:micromsg.LBSLifeActionBargain)
  SharedDtor();
}

void LBSLifeActionBargain::SharedDtor() {
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iconurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LBSLifeActionBargain::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LBSLifeActionBargain::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LBSLifeActionBargain& LBSLifeActionBargain::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

LBSLifeActionBargain* LBSLifeActionBargain::New(::google::protobuf::Arena* arena) const {
  LBSLifeActionBargain* n = new LBSLifeActionBargain;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LBSLifeActionBargain::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.LBSLifeActionBargain)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_desc()) {
      GOOGLE_DCHECK(!desc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*desc_.UnsafeRawStringPointer())->clear();
    }
    if (has_url()) {
      GOOGLE_DCHECK(!url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*url_.UnsafeRawStringPointer())->clear();
    }
    if (has_iconurl()) {
      GOOGLE_DCHECK(!iconurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*iconurl_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LBSLifeActionBargain::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.LBSLifeActionBargain)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Desc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->desc().data(), this->desc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LBSLifeActionBargain.Desc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LBSLifeActionBargain.Url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string IconUrl = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_iconurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->iconurl().data(), this->iconurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LBSLifeActionBargain.IconUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.LBSLifeActionBargain)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.LBSLifeActionBargain)
  return false;
#undef DO_
}

void LBSLifeActionBargain::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.LBSLifeActionBargain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string Desc = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LBSLifeActionBargain.Desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->desc(), output);
  }

  // optional string Url = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LBSLifeActionBargain.Url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  // optional string IconUrl = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->iconurl().data(), this->iconurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LBSLifeActionBargain.IconUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->iconurl(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.LBSLifeActionBargain)
}

::google::protobuf::uint8* LBSLifeActionBargain::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.LBSLifeActionBargain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string Desc = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LBSLifeActionBargain.Desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->desc(), target);
  }

  // optional string Url = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LBSLifeActionBargain.Url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  // optional string IconUrl = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->iconurl().data(), this->iconurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LBSLifeActionBargain.IconUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->iconurl(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.LBSLifeActionBargain)
  return target;
}

size_t LBSLifeActionBargain::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.LBSLifeActionBargain)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string Desc = 1;
    if (has_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->desc());
    }

    // optional string Url = 2;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional string IconUrl = 3;
    if (has_iconurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->iconurl());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LBSLifeActionBargain::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.LBSLifeActionBargain)
  GOOGLE_DCHECK_NE(&from, this);
  const LBSLifeActionBargain* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LBSLifeActionBargain>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.LBSLifeActionBargain)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.LBSLifeActionBargain)
    MergeFrom(*source);
  }
}

void LBSLifeActionBargain::MergeFrom(const LBSLifeActionBargain& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.LBSLifeActionBargain)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_desc();
      desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_iconurl();
      iconurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iconurl_);
    }
  }
}

void LBSLifeActionBargain::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.LBSLifeActionBargain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LBSLifeActionBargain::CopyFrom(const LBSLifeActionBargain& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.LBSLifeActionBargain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LBSLifeActionBargain::IsInitialized() const {
  return true;
}

void LBSLifeActionBargain::Swap(LBSLifeActionBargain* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LBSLifeActionBargain::InternalSwap(LBSLifeActionBargain* other) {
  desc_.Swap(&other->desc_);
  url_.Swap(&other->url_);
  iconurl_.Swap(&other->iconurl_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LBSLifeActionBargain::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LBSLifeActionBargain

// optional string Desc = 1;
bool LBSLifeActionBargain::has_desc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LBSLifeActionBargain::set_has_desc() {
  _has_bits_[0] |= 0x00000001u;
}
void LBSLifeActionBargain::clear_has_desc() {
  _has_bits_[0] &= ~0x00000001u;
}
void LBSLifeActionBargain::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_desc();
}
const ::std::string& LBSLifeActionBargain::desc() const {
  // @@protoc_insertion_point(field_get:micromsg.LBSLifeActionBargain.Desc)
  return desc_.GetNoArena();
}
void LBSLifeActionBargain::set_desc(const ::std::string& value) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LBSLifeActionBargain.Desc)
}
#if LANG_CXX11
void LBSLifeActionBargain::set_desc(::std::string&& value) {
  set_has_desc();
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LBSLifeActionBargain.Desc)
}
#endif
void LBSLifeActionBargain::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LBSLifeActionBargain.Desc)
}
void LBSLifeActionBargain::set_desc(const char* value, size_t size) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LBSLifeActionBargain.Desc)
}
::std::string* LBSLifeActionBargain::mutable_desc() {
  set_has_desc();
  // @@protoc_insertion_point(field_mutable:micromsg.LBSLifeActionBargain.Desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LBSLifeActionBargain::release_desc() {
  // @@protoc_insertion_point(field_release:micromsg.LBSLifeActionBargain.Desc)
  clear_has_desc();
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LBSLifeActionBargain::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LBSLifeActionBargain.Desc)
}

// optional string Url = 2;
bool LBSLifeActionBargain::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LBSLifeActionBargain::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
void LBSLifeActionBargain::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
void LBSLifeActionBargain::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
const ::std::string& LBSLifeActionBargain::url() const {
  // @@protoc_insertion_point(field_get:micromsg.LBSLifeActionBargain.Url)
  return url_.GetNoArena();
}
void LBSLifeActionBargain::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LBSLifeActionBargain.Url)
}
#if LANG_CXX11
void LBSLifeActionBargain::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LBSLifeActionBargain.Url)
}
#endif
void LBSLifeActionBargain::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LBSLifeActionBargain.Url)
}
void LBSLifeActionBargain::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LBSLifeActionBargain.Url)
}
::std::string* LBSLifeActionBargain::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:micromsg.LBSLifeActionBargain.Url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LBSLifeActionBargain::release_url() {
  // @@protoc_insertion_point(field_release:micromsg.LBSLifeActionBargain.Url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LBSLifeActionBargain::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LBSLifeActionBargain.Url)
}

// optional string IconUrl = 3;
bool LBSLifeActionBargain::has_iconurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LBSLifeActionBargain::set_has_iconurl() {
  _has_bits_[0] |= 0x00000004u;
}
void LBSLifeActionBargain::clear_has_iconurl() {
  _has_bits_[0] &= ~0x00000004u;
}
void LBSLifeActionBargain::clear_iconurl() {
  iconurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_iconurl();
}
const ::std::string& LBSLifeActionBargain::iconurl() const {
  // @@protoc_insertion_point(field_get:micromsg.LBSLifeActionBargain.IconUrl)
  return iconurl_.GetNoArena();
}
void LBSLifeActionBargain::set_iconurl(const ::std::string& value) {
  set_has_iconurl();
  iconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LBSLifeActionBargain.IconUrl)
}
#if LANG_CXX11
void LBSLifeActionBargain::set_iconurl(::std::string&& value) {
  set_has_iconurl();
  iconurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LBSLifeActionBargain.IconUrl)
}
#endif
void LBSLifeActionBargain::set_iconurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_iconurl();
  iconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LBSLifeActionBargain.IconUrl)
}
void LBSLifeActionBargain::set_iconurl(const char* value, size_t size) {
  set_has_iconurl();
  iconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LBSLifeActionBargain.IconUrl)
}
::std::string* LBSLifeActionBargain::mutable_iconurl() {
  set_has_iconurl();
  // @@protoc_insertion_point(field_mutable:micromsg.LBSLifeActionBargain.IconUrl)
  return iconurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LBSLifeActionBargain::release_iconurl() {
  // @@protoc_insertion_point(field_release:micromsg.LBSLifeActionBargain.IconUrl)
  clear_has_iconurl();
  return iconurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LBSLifeActionBargain::set_allocated_iconurl(::std::string* iconurl) {
  if (iconurl != NULL) {
    set_has_iconurl();
  } else {
    clear_has_iconurl();
  }
  iconurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), iconurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LBSLifeActionBargain.IconUrl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LBSLifeAction::kTypeFieldNumber;
const int LBSLifeAction::kNameFieldNumber;
const int LBSLifeAction::kDescFieldNumber;
const int LBSLifeAction::kLinkFieldNumber;
const int LBSLifeAction::kBookingCountFieldNumber;
const int LBSLifeAction::kBookingListFieldNumber;
const int LBSLifeAction::kBargainCountFieldNumber;
const int LBSLifeAction::kBargainListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LBSLifeAction::LBSLifeAction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.LBSLifeAction)
}
LBSLifeAction::LBSLifeAction(const LBSLifeAction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      bookinglist_(from.bookinglist_),
      bargainlist_(from.bargainlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_desc()) {
    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_link()) {
    link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_);
  }
  ::memcpy(&type_, &from.type_,
    reinterpret_cast<char*>(&bargaincount_) -
    reinterpret_cast<char*>(&type_) + sizeof(bargaincount_));
  // @@protoc_insertion_point(copy_constructor:micromsg.LBSLifeAction)
}

void LBSLifeAction::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, reinterpret_cast<char*>(&bargaincount_) -
    reinterpret_cast<char*>(&type_) + sizeof(bargaincount_));
}

LBSLifeAction::~LBSLifeAction() {
  // @@protoc_insertion_point(destructor:micromsg.LBSLifeAction)
  SharedDtor();
}

void LBSLifeAction::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LBSLifeAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LBSLifeAction::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LBSLifeAction& LBSLifeAction::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

LBSLifeAction* LBSLifeAction::New(::google::protobuf::Arena* arena) const {
  LBSLifeAction* n = new LBSLifeAction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LBSLifeAction::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.LBSLifeAction)
  bookinglist_.Clear();
  bargainlist_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_desc()) {
      GOOGLE_DCHECK(!desc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*desc_.UnsafeRawStringPointer())->clear();
    }
    if (has_link()) {
      GOOGLE_DCHECK(!link_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*link_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 56u) {
    ::memset(&type_, 0, reinterpret_cast<char*>(&bargaincount_) -
      reinterpret_cast<char*>(&type_) + sizeof(bargaincount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LBSLifeAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.LBSLifeAction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 Type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LBSLifeAction.Name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Desc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->desc().data(), this->desc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LBSLifeAction.Desc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Link = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_link()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->link().data(), this->link().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LBSLifeAction.Link");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 BookingCount = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_bookingcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bookingcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.LBSLifeActionBooking BookingList = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bookinglist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 BargainCount = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_bargaincount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bargaincount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.LBSLifeActionBargain BargainList = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bargainlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.LBSLifeAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.LBSLifeAction)
  return false;
#undef DO_
}

void LBSLifeAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.LBSLifeAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 Type = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // optional string Name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LBSLifeAction.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string Desc = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LBSLifeAction.Desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->desc(), output);
  }

  // optional string Link = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->link().data(), this->link().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LBSLifeAction.Link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->link(), output);
  }

  // required uint32 BookingCount = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->bookingcount(), output);
  }

  // repeated .micromsg.LBSLifeActionBooking BookingList = 6;
  for (unsigned int i = 0, n = this->bookinglist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->bookinglist(i), output);
  }

  // required uint32 BargainCount = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->bargaincount(), output);
  }

  // repeated .micromsg.LBSLifeActionBargain BargainList = 8;
  for (unsigned int i = 0, n = this->bargainlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->bargainlist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.LBSLifeAction)
}

::google::protobuf::uint8* LBSLifeAction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.LBSLifeAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 Type = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // optional string Name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LBSLifeAction.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string Desc = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LBSLifeAction.Desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->desc(), target);
  }

  // optional string Link = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->link().data(), this->link().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LBSLifeAction.Link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->link(), target);
  }

  // required uint32 BookingCount = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->bookingcount(), target);
  }

  // repeated .micromsg.LBSLifeActionBooking BookingList = 6;
  for (unsigned int i = 0, n = this->bookinglist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->bookinglist(i), deterministic, target);
  }

  // required uint32 BargainCount = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->bargaincount(), target);
  }

  // repeated .micromsg.LBSLifeActionBargain BargainList = 8;
  for (unsigned int i = 0, n = this->bargainlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->bargainlist(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.LBSLifeAction)
  return target;
}

size_t LBSLifeAction::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.LBSLifeAction)
  size_t total_size = 0;

  if (has_type()) {
    // required uint32 Type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  if (has_bookingcount()) {
    // required uint32 BookingCount = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bookingcount());
  }

  if (has_bargaincount()) {
    // required uint32 BargainCount = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bargaincount());
  }

  return total_size;
}
size_t LBSLifeAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.LBSLifeAction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000038) ^ 0x00000038) == 0) {  // All required fields are present.
    // required uint32 Type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());

    // required uint32 BookingCount = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bookingcount());

    // required uint32 BargainCount = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bargaincount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.LBSLifeActionBooking BookingList = 6;
  {
    unsigned int count = this->bookinglist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bookinglist(i));
    }
  }

  // repeated .micromsg.LBSLifeActionBargain BargainList = 8;
  {
    unsigned int count = this->bargainlist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bargainlist(i));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional string Name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string Desc = 3;
    if (has_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->desc());
    }

    // optional string Link = 4;
    if (has_link()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->link());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LBSLifeAction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.LBSLifeAction)
  GOOGLE_DCHECK_NE(&from, this);
  const LBSLifeAction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LBSLifeAction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.LBSLifeAction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.LBSLifeAction)
    MergeFrom(*source);
  }
}

void LBSLifeAction::MergeFrom(const LBSLifeAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.LBSLifeAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bookinglist_.MergeFrom(from.bookinglist_);
  bargainlist_.MergeFrom(from.bargainlist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_desc();
      desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_link();
      link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_);
    }
    if (cached_has_bits & 0x00000008u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000010u) {
      bookingcount_ = from.bookingcount_;
    }
    if (cached_has_bits & 0x00000020u) {
      bargaincount_ = from.bargaincount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LBSLifeAction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.LBSLifeAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LBSLifeAction::CopyFrom(const LBSLifeAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.LBSLifeAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LBSLifeAction::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000038) != 0x00000038) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->bookinglist())) return false;
  return true;
}

void LBSLifeAction::Swap(LBSLifeAction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LBSLifeAction::InternalSwap(LBSLifeAction* other) {
  bookinglist_.InternalSwap(&other->bookinglist_);
  bargainlist_.InternalSwap(&other->bargainlist_);
  name_.Swap(&other->name_);
  desc_.Swap(&other->desc_);
  link_.Swap(&other->link_);
  std::swap(type_, other->type_);
  std::swap(bookingcount_, other->bookingcount_);
  std::swap(bargaincount_, other->bargaincount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LBSLifeAction::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LBSLifeAction

// required uint32 Type = 1;
bool LBSLifeAction::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void LBSLifeAction::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
void LBSLifeAction::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
void LBSLifeAction::clear_type() {
  type_ = 0u;
  clear_has_type();
}
::google::protobuf::uint32 LBSLifeAction::type() const {
  // @@protoc_insertion_point(field_get:micromsg.LBSLifeAction.Type)
  return type_;
}
void LBSLifeAction::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LBSLifeAction.Type)
}

// optional string Name = 2;
bool LBSLifeAction::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LBSLifeAction::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void LBSLifeAction::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void LBSLifeAction::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& LBSLifeAction::name() const {
  // @@protoc_insertion_point(field_get:micromsg.LBSLifeAction.Name)
  return name_.GetNoArena();
}
void LBSLifeAction::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LBSLifeAction.Name)
}
#if LANG_CXX11
void LBSLifeAction::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LBSLifeAction.Name)
}
#endif
void LBSLifeAction::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LBSLifeAction.Name)
}
void LBSLifeAction::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LBSLifeAction.Name)
}
::std::string* LBSLifeAction::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:micromsg.LBSLifeAction.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LBSLifeAction::release_name() {
  // @@protoc_insertion_point(field_release:micromsg.LBSLifeAction.Name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LBSLifeAction::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LBSLifeAction.Name)
}

// optional string Desc = 3;
bool LBSLifeAction::has_desc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LBSLifeAction::set_has_desc() {
  _has_bits_[0] |= 0x00000002u;
}
void LBSLifeAction::clear_has_desc() {
  _has_bits_[0] &= ~0x00000002u;
}
void LBSLifeAction::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_desc();
}
const ::std::string& LBSLifeAction::desc() const {
  // @@protoc_insertion_point(field_get:micromsg.LBSLifeAction.Desc)
  return desc_.GetNoArena();
}
void LBSLifeAction::set_desc(const ::std::string& value) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LBSLifeAction.Desc)
}
#if LANG_CXX11
void LBSLifeAction::set_desc(::std::string&& value) {
  set_has_desc();
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LBSLifeAction.Desc)
}
#endif
void LBSLifeAction::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LBSLifeAction.Desc)
}
void LBSLifeAction::set_desc(const char* value, size_t size) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LBSLifeAction.Desc)
}
::std::string* LBSLifeAction::mutable_desc() {
  set_has_desc();
  // @@protoc_insertion_point(field_mutable:micromsg.LBSLifeAction.Desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LBSLifeAction::release_desc() {
  // @@protoc_insertion_point(field_release:micromsg.LBSLifeAction.Desc)
  clear_has_desc();
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LBSLifeAction::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LBSLifeAction.Desc)
}

// optional string Link = 4;
bool LBSLifeAction::has_link() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LBSLifeAction::set_has_link() {
  _has_bits_[0] |= 0x00000004u;
}
void LBSLifeAction::clear_has_link() {
  _has_bits_[0] &= ~0x00000004u;
}
void LBSLifeAction::clear_link() {
  link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_link();
}
const ::std::string& LBSLifeAction::link() const {
  // @@protoc_insertion_point(field_get:micromsg.LBSLifeAction.Link)
  return link_.GetNoArena();
}
void LBSLifeAction::set_link(const ::std::string& value) {
  set_has_link();
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LBSLifeAction.Link)
}
#if LANG_CXX11
void LBSLifeAction::set_link(::std::string&& value) {
  set_has_link();
  link_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LBSLifeAction.Link)
}
#endif
void LBSLifeAction::set_link(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_link();
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LBSLifeAction.Link)
}
void LBSLifeAction::set_link(const char* value, size_t size) {
  set_has_link();
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LBSLifeAction.Link)
}
::std::string* LBSLifeAction::mutable_link() {
  set_has_link();
  // @@protoc_insertion_point(field_mutable:micromsg.LBSLifeAction.Link)
  return link_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LBSLifeAction::release_link() {
  // @@protoc_insertion_point(field_release:micromsg.LBSLifeAction.Link)
  clear_has_link();
  return link_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LBSLifeAction::set_allocated_link(::std::string* link) {
  if (link != NULL) {
    set_has_link();
  } else {
    clear_has_link();
  }
  link_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), link);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LBSLifeAction.Link)
}

// required uint32 BookingCount = 5;
bool LBSLifeAction::has_bookingcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void LBSLifeAction::set_has_bookingcount() {
  _has_bits_[0] |= 0x00000010u;
}
void LBSLifeAction::clear_has_bookingcount() {
  _has_bits_[0] &= ~0x00000010u;
}
void LBSLifeAction::clear_bookingcount() {
  bookingcount_ = 0u;
  clear_has_bookingcount();
}
::google::protobuf::uint32 LBSLifeAction::bookingcount() const {
  // @@protoc_insertion_point(field_get:micromsg.LBSLifeAction.BookingCount)
  return bookingcount_;
}
void LBSLifeAction::set_bookingcount(::google::protobuf::uint32 value) {
  set_has_bookingcount();
  bookingcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LBSLifeAction.BookingCount)
}

// repeated .micromsg.LBSLifeActionBooking BookingList = 6;
int LBSLifeAction::bookinglist_size() const {
  return bookinglist_.size();
}
void LBSLifeAction::clear_bookinglist() {
  bookinglist_.Clear();
}
const ::micromsg::LBSLifeActionBooking& LBSLifeAction::bookinglist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.LBSLifeAction.BookingList)
  return bookinglist_.Get(index);
}
::micromsg::LBSLifeActionBooking* LBSLifeAction::mutable_bookinglist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.LBSLifeAction.BookingList)
  return bookinglist_.Mutable(index);
}
::micromsg::LBSLifeActionBooking* LBSLifeAction::add_bookinglist() {
  // @@protoc_insertion_point(field_add:micromsg.LBSLifeAction.BookingList)
  return bookinglist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::LBSLifeActionBooking >*
LBSLifeAction::mutable_bookinglist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.LBSLifeAction.BookingList)
  return &bookinglist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::LBSLifeActionBooking >&
LBSLifeAction::bookinglist() const {
  // @@protoc_insertion_point(field_list:micromsg.LBSLifeAction.BookingList)
  return bookinglist_;
}

// required uint32 BargainCount = 7;
bool LBSLifeAction::has_bargaincount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void LBSLifeAction::set_has_bargaincount() {
  _has_bits_[0] |= 0x00000020u;
}
void LBSLifeAction::clear_has_bargaincount() {
  _has_bits_[0] &= ~0x00000020u;
}
void LBSLifeAction::clear_bargaincount() {
  bargaincount_ = 0u;
  clear_has_bargaincount();
}
::google::protobuf::uint32 LBSLifeAction::bargaincount() const {
  // @@protoc_insertion_point(field_get:micromsg.LBSLifeAction.BargainCount)
  return bargaincount_;
}
void LBSLifeAction::set_bargaincount(::google::protobuf::uint32 value) {
  set_has_bargaincount();
  bargaincount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LBSLifeAction.BargainCount)
}

// repeated .micromsg.LBSLifeActionBargain BargainList = 8;
int LBSLifeAction::bargainlist_size() const {
  return bargainlist_.size();
}
void LBSLifeAction::clear_bargainlist() {
  bargainlist_.Clear();
}
const ::micromsg::LBSLifeActionBargain& LBSLifeAction::bargainlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.LBSLifeAction.BargainList)
  return bargainlist_.Get(index);
}
::micromsg::LBSLifeActionBargain* LBSLifeAction::mutable_bargainlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.LBSLifeAction.BargainList)
  return bargainlist_.Mutable(index);
}
::micromsg::LBSLifeActionBargain* LBSLifeAction::add_bargainlist() {
  // @@protoc_insertion_point(field_add:micromsg.LBSLifeAction.BargainList)
  return bargainlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::LBSLifeActionBargain >*
LBSLifeAction::mutable_bargainlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.LBSLifeAction.BargainList)
  return &bargainlist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::LBSLifeActionBargain >&
LBSLifeAction::bargainlist() const {
  // @@protoc_insertion_point(field_list:micromsg.LBSLifeAction.BargainList)
  return bargainlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LBSLifeActionList::kTypeFieldNumber;
const int LBSLifeActionList::kLifeActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LBSLifeActionList::LBSLifeActionList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.LBSLifeActionList)
}
LBSLifeActionList::LBSLifeActionList(const LBSLifeActionList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_lifeaction()) {
    lifeaction_ = new ::micromsg::LBSLifeAction(*from.lifeaction_);
  } else {
    lifeaction_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:micromsg.LBSLifeActionList)
}

void LBSLifeActionList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&lifeaction_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&lifeaction_) + sizeof(type_));
}

LBSLifeActionList::~LBSLifeActionList() {
  // @@protoc_insertion_point(destructor:micromsg.LBSLifeActionList)
  SharedDtor();
}

void LBSLifeActionList::SharedDtor() {
  if (this != internal_default_instance()) {
    delete lifeaction_;
  }
}

void LBSLifeActionList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LBSLifeActionList::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LBSLifeActionList& LBSLifeActionList::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

LBSLifeActionList* LBSLifeActionList::New(::google::protobuf::Arena* arena) const {
  LBSLifeActionList* n = new LBSLifeActionList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LBSLifeActionList::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.LBSLifeActionList)
  if (has_lifeaction()) {
    GOOGLE_DCHECK(lifeaction_ != NULL);
    lifeaction_->::micromsg::LBSLifeAction::Clear();
  }
  type_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LBSLifeActionList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.LBSLifeActionList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 Type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.LBSLifeAction LifeAction = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lifeaction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.LBSLifeActionList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.LBSLifeActionList)
  return false;
#undef DO_
}

void LBSLifeActionList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.LBSLifeActionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 Type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // required .micromsg.LBSLifeAction LifeAction = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->lifeaction_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.LBSLifeActionList)
}

::google::protobuf::uint8* LBSLifeActionList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.LBSLifeActionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 Type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // required .micromsg.LBSLifeAction LifeAction = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->lifeaction_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.LBSLifeActionList)
  return target;
}

size_t LBSLifeActionList::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.LBSLifeActionList)
  size_t total_size = 0;

  if (has_lifeaction()) {
    // required .micromsg.LBSLifeAction LifeAction = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->lifeaction_);
  }

  if (has_type()) {
    // required uint32 Type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  return total_size;
}
size_t LBSLifeActionList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.LBSLifeActionList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .micromsg.LBSLifeAction LifeAction = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->lifeaction_);

    // required uint32 Type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LBSLifeActionList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.LBSLifeActionList)
  GOOGLE_DCHECK_NE(&from, this);
  const LBSLifeActionList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LBSLifeActionList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.LBSLifeActionList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.LBSLifeActionList)
    MergeFrom(*source);
  }
}

void LBSLifeActionList::MergeFrom(const LBSLifeActionList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.LBSLifeActionList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_lifeaction()->::micromsg::LBSLifeAction::MergeFrom(from.lifeaction());
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LBSLifeActionList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.LBSLifeActionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LBSLifeActionList::CopyFrom(const LBSLifeActionList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.LBSLifeActionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LBSLifeActionList::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_lifeaction()) {
    if (!this->lifeaction_->IsInitialized()) return false;
  }
  return true;
}

void LBSLifeActionList::Swap(LBSLifeActionList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LBSLifeActionList::InternalSwap(LBSLifeActionList* other) {
  std::swap(lifeaction_, other->lifeaction_);
  std::swap(type_, other->type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LBSLifeActionList::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LBSLifeActionList

// required uint32 Type = 1;
bool LBSLifeActionList::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LBSLifeActionList::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void LBSLifeActionList::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void LBSLifeActionList::clear_type() {
  type_ = 0u;
  clear_has_type();
}
::google::protobuf::uint32 LBSLifeActionList::type() const {
  // @@protoc_insertion_point(field_get:micromsg.LBSLifeActionList.Type)
  return type_;
}
void LBSLifeActionList::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LBSLifeActionList.Type)
}

// required .micromsg.LBSLifeAction LifeAction = 2;
bool LBSLifeActionList::has_lifeaction() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LBSLifeActionList::set_has_lifeaction() {
  _has_bits_[0] |= 0x00000001u;
}
void LBSLifeActionList::clear_has_lifeaction() {
  _has_bits_[0] &= ~0x00000001u;
}
void LBSLifeActionList::clear_lifeaction() {
  if (lifeaction_ != NULL) lifeaction_->::micromsg::LBSLifeAction::Clear();
  clear_has_lifeaction();
}
const ::micromsg::LBSLifeAction& LBSLifeActionList::lifeaction() const {
  // @@protoc_insertion_point(field_get:micromsg.LBSLifeActionList.LifeAction)
  return lifeaction_ != NULL ? *lifeaction_
                         : *::micromsg::LBSLifeAction::internal_default_instance();
}
::micromsg::LBSLifeAction* LBSLifeActionList::mutable_lifeaction() {
  set_has_lifeaction();
  if (lifeaction_ == NULL) {
    lifeaction_ = new ::micromsg::LBSLifeAction;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.LBSLifeActionList.LifeAction)
  return lifeaction_;
}
::micromsg::LBSLifeAction* LBSLifeActionList::release_lifeaction() {
  // @@protoc_insertion_point(field_release:micromsg.LBSLifeActionList.LifeAction)
  clear_has_lifeaction();
  ::micromsg::LBSLifeAction* temp = lifeaction_;
  lifeaction_ = NULL;
  return temp;
}
void LBSLifeActionList::set_allocated_lifeaction(::micromsg::LBSLifeAction* lifeaction) {
  delete lifeaction_;
  lifeaction_ = lifeaction;
  if (lifeaction) {
    set_has_lifeaction();
  } else {
    clear_has_lifeaction();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.LBSLifeActionList.LifeAction)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LbsLifeDetail::kLifeFieldNumber;
const int LbsLifeDetail::kCICountFieldNumber;
const int LbsLifeDetail::kCIListFieldNumber;
const int LbsLifeDetail::kThumbUrlFieldNumber;
const int LbsLifeDetail::kPhotoLinkFieldNumber;
const int LbsLifeDetail::kActionCountFieldNumber;
const int LbsLifeDetail::kActionListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LbsLifeDetail::LbsLifeDetail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.LbsLifeDetail)
}
LbsLifeDetail::LbsLifeDetail(const LbsLifeDetail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      cilist_(from.cilist_),
      actionlist_(from.actionlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  thumburl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_thumburl()) {
    thumburl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumburl_);
  }
  photolink_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_photolink()) {
    photolink_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.photolink_);
  }
  if (from.has_life()) {
    life_ = new ::micromsg::LbsLife(*from.life_);
  } else {
    life_ = NULL;
  }
  ::memcpy(&cicount_, &from.cicount_,
    reinterpret_cast<char*>(&actioncount_) -
    reinterpret_cast<char*>(&cicount_) + sizeof(actioncount_));
  // @@protoc_insertion_point(copy_constructor:micromsg.LbsLifeDetail)
}

void LbsLifeDetail::SharedCtor() {
  _cached_size_ = 0;
  thumburl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  photolink_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&life_, 0, reinterpret_cast<char*>(&actioncount_) -
    reinterpret_cast<char*>(&life_) + sizeof(actioncount_));
}

LbsLifeDetail::~LbsLifeDetail() {
  // @@protoc_insertion_point(destructor:micromsg.LbsLifeDetail)
  SharedDtor();
}

void LbsLifeDetail::SharedDtor() {
  thumburl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  photolink_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete life_;
  }
}

void LbsLifeDetail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LbsLifeDetail::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LbsLifeDetail& LbsLifeDetail::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

LbsLifeDetail* LbsLifeDetail::New(::google::protobuf::Arena* arena) const {
  LbsLifeDetail* n = new LbsLifeDetail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LbsLifeDetail::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.LbsLifeDetail)
  cilist_.Clear();
  actionlist_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    if (has_thumburl()) {
      GOOGLE_DCHECK(!thumburl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*thumburl_.UnsafeRawStringPointer())->clear();
    }
    if (has_photolink()) {
      GOOGLE_DCHECK(!photolink_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*photolink_.UnsafeRawStringPointer())->clear();
    }
    if (has_life()) {
      GOOGLE_DCHECK(life_ != NULL);
      life_->::micromsg::LbsLife::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 24u) {
    ::memset(&cicount_, 0, reinterpret_cast<char*>(&actioncount_) -
      reinterpret_cast<char*>(&cicount_) + sizeof(actioncount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LbsLifeDetail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.LbsLifeDetail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.LbsLife Life = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_life()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 CICount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_cicount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cicount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.SKBuiltinString_t CIList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cilist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ThumbUrl = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_thumburl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->thumburl().data(), this->thumburl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsLifeDetail.ThumbUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string PhotoLink = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_photolink()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->photolink().data(), this->photolink().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsLifeDetail.PhotoLink");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ActionCount = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_actioncount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &actioncount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.LBSLifeActionList ActionList = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_actionlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.LbsLifeDetail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.LbsLifeDetail)
  return false;
#undef DO_
}

void LbsLifeDetail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.LbsLifeDetail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.LbsLife Life = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->life_, output);
  }

  // required uint32 CICount = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->cicount(), output);
  }

  // repeated .micromsg.SKBuiltinString_t CIList = 3;
  for (unsigned int i = 0, n = this->cilist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->cilist(i), output);
  }

  // optional string ThumbUrl = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->thumburl().data(), this->thumburl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsLifeDetail.ThumbUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->thumburl(), output);
  }

  // optional string PhotoLink = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->photolink().data(), this->photolink().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsLifeDetail.PhotoLink");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->photolink(), output);
  }

  // required uint32 ActionCount = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->actioncount(), output);
  }

  // repeated .micromsg.LBSLifeActionList ActionList = 7;
  for (unsigned int i = 0, n = this->actionlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->actionlist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.LbsLifeDetail)
}

::google::protobuf::uint8* LbsLifeDetail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.LbsLifeDetail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.LbsLife Life = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->life_, deterministic, target);
  }

  // required uint32 CICount = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->cicount(), target);
  }

  // repeated .micromsg.SKBuiltinString_t CIList = 3;
  for (unsigned int i = 0, n = this->cilist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->cilist(i), deterministic, target);
  }

  // optional string ThumbUrl = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->thumburl().data(), this->thumburl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsLifeDetail.ThumbUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->thumburl(), target);
  }

  // optional string PhotoLink = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->photolink().data(), this->photolink().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsLifeDetail.PhotoLink");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->photolink(), target);
  }

  // required uint32 ActionCount = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->actioncount(), target);
  }

  // repeated .micromsg.LBSLifeActionList ActionList = 7;
  for (unsigned int i = 0, n = this->actionlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->actionlist(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.LbsLifeDetail)
  return target;
}

size_t LbsLifeDetail::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.LbsLifeDetail)
  size_t total_size = 0;

  if (has_life()) {
    // required .micromsg.LbsLife Life = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->life_);
  }

  if (has_cicount()) {
    // required uint32 CICount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cicount());
  }

  if (has_actioncount()) {
    // required uint32 ActionCount = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->actioncount());
  }

  return total_size;
}
size_t LbsLifeDetail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.LbsLifeDetail)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001c) ^ 0x0000001c) == 0) {  // All required fields are present.
    // required .micromsg.LbsLife Life = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->life_);

    // required uint32 CICount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cicount());

    // required uint32 ActionCount = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->actioncount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.SKBuiltinString_t CIList = 3;
  {
    unsigned int count = this->cilist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cilist(i));
    }
  }

  // repeated .micromsg.LBSLifeActionList ActionList = 7;
  {
    unsigned int count = this->actionlist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->actionlist(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string ThumbUrl = 4;
    if (has_thumburl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->thumburl());
    }

    // optional string PhotoLink = 5;
    if (has_photolink()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->photolink());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LbsLifeDetail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.LbsLifeDetail)
  GOOGLE_DCHECK_NE(&from, this);
  const LbsLifeDetail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LbsLifeDetail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.LbsLifeDetail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.LbsLifeDetail)
    MergeFrom(*source);
  }
}

void LbsLifeDetail::MergeFrom(const LbsLifeDetail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.LbsLifeDetail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cilist_.MergeFrom(from.cilist_);
  actionlist_.MergeFrom(from.actionlist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_thumburl();
      thumburl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumburl_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_photolink();
      photolink_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.photolink_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_life()->::micromsg::LbsLife::MergeFrom(from.life());
    }
    if (cached_has_bits & 0x00000008u) {
      cicount_ = from.cicount_;
    }
    if (cached_has_bits & 0x00000010u) {
      actioncount_ = from.actioncount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LbsLifeDetail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.LbsLifeDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LbsLifeDetail::CopyFrom(const LbsLifeDetail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.LbsLifeDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LbsLifeDetail::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001c) != 0x0000001c) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->actionlist())) return false;
  if (has_life()) {
    if (!this->life_->IsInitialized()) return false;
  }
  return true;
}

void LbsLifeDetail::Swap(LbsLifeDetail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LbsLifeDetail::InternalSwap(LbsLifeDetail* other) {
  cilist_.InternalSwap(&other->cilist_);
  actionlist_.InternalSwap(&other->actionlist_);
  thumburl_.Swap(&other->thumburl_);
  photolink_.Swap(&other->photolink_);
  std::swap(life_, other->life_);
  std::swap(cicount_, other->cicount_);
  std::swap(actioncount_, other->actioncount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LbsLifeDetail::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LbsLifeDetail

// required .micromsg.LbsLife Life = 1;
bool LbsLifeDetail::has_life() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LbsLifeDetail::set_has_life() {
  _has_bits_[0] |= 0x00000004u;
}
void LbsLifeDetail::clear_has_life() {
  _has_bits_[0] &= ~0x00000004u;
}
void LbsLifeDetail::clear_life() {
  if (life_ != NULL) life_->::micromsg::LbsLife::Clear();
  clear_has_life();
}
const ::micromsg::LbsLife& LbsLifeDetail::life() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLifeDetail.Life)
  return life_ != NULL ? *life_
                         : *::micromsg::LbsLife::internal_default_instance();
}
::micromsg::LbsLife* LbsLifeDetail::mutable_life() {
  set_has_life();
  if (life_ == NULL) {
    life_ = new ::micromsg::LbsLife;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.LbsLifeDetail.Life)
  return life_;
}
::micromsg::LbsLife* LbsLifeDetail::release_life() {
  // @@protoc_insertion_point(field_release:micromsg.LbsLifeDetail.Life)
  clear_has_life();
  ::micromsg::LbsLife* temp = life_;
  life_ = NULL;
  return temp;
}
void LbsLifeDetail::set_allocated_life(::micromsg::LbsLife* life) {
  delete life_;
  life_ = life;
  if (life) {
    set_has_life();
  } else {
    clear_has_life();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsLifeDetail.Life)
}

// required uint32 CICount = 2;
bool LbsLifeDetail::has_cicount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void LbsLifeDetail::set_has_cicount() {
  _has_bits_[0] |= 0x00000008u;
}
void LbsLifeDetail::clear_has_cicount() {
  _has_bits_[0] &= ~0x00000008u;
}
void LbsLifeDetail::clear_cicount() {
  cicount_ = 0u;
  clear_has_cicount();
}
::google::protobuf::uint32 LbsLifeDetail::cicount() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLifeDetail.CICount)
  return cicount_;
}
void LbsLifeDetail::set_cicount(::google::protobuf::uint32 value) {
  set_has_cicount();
  cicount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsLifeDetail.CICount)
}

// repeated .micromsg.SKBuiltinString_t CIList = 3;
int LbsLifeDetail::cilist_size() const {
  return cilist_.size();
}
void LbsLifeDetail::clear_cilist() {
  cilist_.Clear();
}
const ::micromsg::SKBuiltinString_t& LbsLifeDetail::cilist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLifeDetail.CIList)
  return cilist_.Get(index);
}
::micromsg::SKBuiltinString_t* LbsLifeDetail::mutable_cilist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.LbsLifeDetail.CIList)
  return cilist_.Mutable(index);
}
::micromsg::SKBuiltinString_t* LbsLifeDetail::add_cilist() {
  // @@protoc_insertion_point(field_add:micromsg.LbsLifeDetail.CIList)
  return cilist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
LbsLifeDetail::mutable_cilist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.LbsLifeDetail.CIList)
  return &cilist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
LbsLifeDetail::cilist() const {
  // @@protoc_insertion_point(field_list:micromsg.LbsLifeDetail.CIList)
  return cilist_;
}

// optional string ThumbUrl = 4;
bool LbsLifeDetail::has_thumburl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LbsLifeDetail::set_has_thumburl() {
  _has_bits_[0] |= 0x00000001u;
}
void LbsLifeDetail::clear_has_thumburl() {
  _has_bits_[0] &= ~0x00000001u;
}
void LbsLifeDetail::clear_thumburl() {
  thumburl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_thumburl();
}
const ::std::string& LbsLifeDetail::thumburl() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLifeDetail.ThumbUrl)
  return thumburl_.GetNoArena();
}
void LbsLifeDetail::set_thumburl(const ::std::string& value) {
  set_has_thumburl();
  thumburl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsLifeDetail.ThumbUrl)
}
#if LANG_CXX11
void LbsLifeDetail::set_thumburl(::std::string&& value) {
  set_has_thumburl();
  thumburl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsLifeDetail.ThumbUrl)
}
#endif
void LbsLifeDetail::set_thumburl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_thumburl();
  thumburl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsLifeDetail.ThumbUrl)
}
void LbsLifeDetail::set_thumburl(const char* value, size_t size) {
  set_has_thumburl();
  thumburl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsLifeDetail.ThumbUrl)
}
::std::string* LbsLifeDetail::mutable_thumburl() {
  set_has_thumburl();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsLifeDetail.ThumbUrl)
  return thumburl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsLifeDetail::release_thumburl() {
  // @@protoc_insertion_point(field_release:micromsg.LbsLifeDetail.ThumbUrl)
  clear_has_thumburl();
  return thumburl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsLifeDetail::set_allocated_thumburl(::std::string* thumburl) {
  if (thumburl != NULL) {
    set_has_thumburl();
  } else {
    clear_has_thumburl();
  }
  thumburl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), thumburl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsLifeDetail.ThumbUrl)
}

// optional string PhotoLink = 5;
bool LbsLifeDetail::has_photolink() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LbsLifeDetail::set_has_photolink() {
  _has_bits_[0] |= 0x00000002u;
}
void LbsLifeDetail::clear_has_photolink() {
  _has_bits_[0] &= ~0x00000002u;
}
void LbsLifeDetail::clear_photolink() {
  photolink_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_photolink();
}
const ::std::string& LbsLifeDetail::photolink() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLifeDetail.PhotoLink)
  return photolink_.GetNoArena();
}
void LbsLifeDetail::set_photolink(const ::std::string& value) {
  set_has_photolink();
  photolink_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsLifeDetail.PhotoLink)
}
#if LANG_CXX11
void LbsLifeDetail::set_photolink(::std::string&& value) {
  set_has_photolink();
  photolink_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsLifeDetail.PhotoLink)
}
#endif
void LbsLifeDetail::set_photolink(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_photolink();
  photolink_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsLifeDetail.PhotoLink)
}
void LbsLifeDetail::set_photolink(const char* value, size_t size) {
  set_has_photolink();
  photolink_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsLifeDetail.PhotoLink)
}
::std::string* LbsLifeDetail::mutable_photolink() {
  set_has_photolink();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsLifeDetail.PhotoLink)
  return photolink_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsLifeDetail::release_photolink() {
  // @@protoc_insertion_point(field_release:micromsg.LbsLifeDetail.PhotoLink)
  clear_has_photolink();
  return photolink_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsLifeDetail::set_allocated_photolink(::std::string* photolink) {
  if (photolink != NULL) {
    set_has_photolink();
  } else {
    clear_has_photolink();
  }
  photolink_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), photolink);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsLifeDetail.PhotoLink)
}

// required uint32 ActionCount = 6;
bool LbsLifeDetail::has_actioncount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void LbsLifeDetail::set_has_actioncount() {
  _has_bits_[0] |= 0x00000010u;
}
void LbsLifeDetail::clear_has_actioncount() {
  _has_bits_[0] &= ~0x00000010u;
}
void LbsLifeDetail::clear_actioncount() {
  actioncount_ = 0u;
  clear_has_actioncount();
}
::google::protobuf::uint32 LbsLifeDetail::actioncount() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLifeDetail.ActionCount)
  return actioncount_;
}
void LbsLifeDetail::set_actioncount(::google::protobuf::uint32 value) {
  set_has_actioncount();
  actioncount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsLifeDetail.ActionCount)
}

// repeated .micromsg.LBSLifeActionList ActionList = 7;
int LbsLifeDetail::actionlist_size() const {
  return actionlist_.size();
}
void LbsLifeDetail::clear_actionlist() {
  actionlist_.Clear();
}
const ::micromsg::LBSLifeActionList& LbsLifeDetail::actionlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLifeDetail.ActionList)
  return actionlist_.Get(index);
}
::micromsg::LBSLifeActionList* LbsLifeDetail::mutable_actionlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.LbsLifeDetail.ActionList)
  return actionlist_.Mutable(index);
}
::micromsg::LBSLifeActionList* LbsLifeDetail::add_actionlist() {
  // @@protoc_insertion_point(field_add:micromsg.LbsLifeDetail.ActionList)
  return actionlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::LBSLifeActionList >*
LbsLifeDetail::mutable_actionlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.LbsLifeDetail.ActionList)
  return &actionlist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::LBSLifeActionList >&
LbsLifeDetail::actionlist() const {
  // @@protoc_insertion_point(field_list:micromsg.LbsLifeDetail.ActionList)
  return actionlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetLbsLifeDetailRequest::kBaseRequestFieldNumber;
const int GetLbsLifeDetailRequest::kBusinessIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetLbsLifeDetailRequest::GetLbsLifeDetailRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetLbsLifeDetailRequest)
}
GetLbsLifeDetailRequest::GetLbsLifeDetailRequest(const GetLbsLifeDetailRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  businessid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_businessid()) {
    businessid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.businessid_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.GetLbsLifeDetailRequest)
}

void GetLbsLifeDetailRequest::SharedCtor() {
  _cached_size_ = 0;
  businessid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  baserequest_ = NULL;
}

GetLbsLifeDetailRequest::~GetLbsLifeDetailRequest() {
  // @@protoc_insertion_point(destructor:micromsg.GetLbsLifeDetailRequest)
  SharedDtor();
}

void GetLbsLifeDetailRequest::SharedDtor() {
  businessid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void GetLbsLifeDetailRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLbsLifeDetailRequest::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetLbsLifeDetailRequest& GetLbsLifeDetailRequest::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetLbsLifeDetailRequest* GetLbsLifeDetailRequest::New(::google::protobuf::Arena* arena) const {
  GetLbsLifeDetailRequest* n = new GetLbsLifeDetailRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetLbsLifeDetailRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetLbsLifeDetailRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_businessid()) {
      GOOGLE_DCHECK(!businessid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*businessid_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetLbsLifeDetailRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetLbsLifeDetailRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string BusinessId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_businessid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->businessid().data(), this->businessid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetLbsLifeDetailRequest.BusinessId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetLbsLifeDetailRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetLbsLifeDetailRequest)
  return false;
#undef DO_
}

void GetLbsLifeDetailRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetLbsLifeDetailRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // optional string BusinessId = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->businessid().data(), this->businessid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetLbsLifeDetailRequest.BusinessId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->businessid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetLbsLifeDetailRequest)
}

::google::protobuf::uint8* GetLbsLifeDetailRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetLbsLifeDetailRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // optional string BusinessId = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->businessid().data(), this->businessid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetLbsLifeDetailRequest.BusinessId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->businessid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetLbsLifeDetailRequest)
  return target;
}

size_t GetLbsLifeDetailRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetLbsLifeDetailRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (has_baserequest()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }
  // optional string BusinessId = 2;
  if (has_businessid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->businessid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetLbsLifeDetailRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetLbsLifeDetailRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLbsLifeDetailRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetLbsLifeDetailRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetLbsLifeDetailRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetLbsLifeDetailRequest)
    MergeFrom(*source);
  }
}

void GetLbsLifeDetailRequest::MergeFrom(const GetLbsLifeDetailRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetLbsLifeDetailRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_businessid();
      businessid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.businessid_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
  }
}

void GetLbsLifeDetailRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetLbsLifeDetailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLbsLifeDetailRequest::CopyFrom(const GetLbsLifeDetailRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetLbsLifeDetailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLbsLifeDetailRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void GetLbsLifeDetailRequest::Swap(GetLbsLifeDetailRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetLbsLifeDetailRequest::InternalSwap(GetLbsLifeDetailRequest* other) {
  businessid_.Swap(&other->businessid_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetLbsLifeDetailRequest::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetLbsLifeDetailRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool GetLbsLifeDetailRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetLbsLifeDetailRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
void GetLbsLifeDetailRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetLbsLifeDetailRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& GetLbsLifeDetailRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeDetailRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* GetLbsLifeDetailRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetLbsLifeDetailRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* GetLbsLifeDetailRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetLbsLifeDetailRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void GetLbsLifeDetailRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLbsLifeDetailRequest.BaseRequest)
}

// optional string BusinessId = 2;
bool GetLbsLifeDetailRequest::has_businessid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetLbsLifeDetailRequest::set_has_businessid() {
  _has_bits_[0] |= 0x00000001u;
}
void GetLbsLifeDetailRequest::clear_has_businessid() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetLbsLifeDetailRequest::clear_businessid() {
  businessid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_businessid();
}
const ::std::string& GetLbsLifeDetailRequest::businessid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeDetailRequest.BusinessId)
  return businessid_.GetNoArena();
}
void GetLbsLifeDetailRequest::set_businessid(const ::std::string& value) {
  set_has_businessid();
  businessid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetLbsLifeDetailRequest.BusinessId)
}
#if LANG_CXX11
void GetLbsLifeDetailRequest::set_businessid(::std::string&& value) {
  set_has_businessid();
  businessid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetLbsLifeDetailRequest.BusinessId)
}
#endif
void GetLbsLifeDetailRequest::set_businessid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_businessid();
  businessid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetLbsLifeDetailRequest.BusinessId)
}
void GetLbsLifeDetailRequest::set_businessid(const char* value, size_t size) {
  set_has_businessid();
  businessid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetLbsLifeDetailRequest.BusinessId)
}
::std::string* GetLbsLifeDetailRequest::mutable_businessid() {
  set_has_businessid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetLbsLifeDetailRequest.BusinessId)
  return businessid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetLbsLifeDetailRequest::release_businessid() {
  // @@protoc_insertion_point(field_release:micromsg.GetLbsLifeDetailRequest.BusinessId)
  clear_has_businessid();
  return businessid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetLbsLifeDetailRequest::set_allocated_businessid(::std::string* businessid) {
  if (businessid != NULL) {
    set_has_businessid();
  } else {
    clear_has_businessid();
  }
  businessid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), businessid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLbsLifeDetailRequest.BusinessId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetLbsLifeDetailResponse::kBaseResponseFieldNumber;
const int GetLbsLifeDetailResponse::kLifeDetailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetLbsLifeDetailResponse::GetLbsLifeDetailResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetLbsLifeDetailResponse)
}
GetLbsLifeDetailResponse::GetLbsLifeDetailResponse(const GetLbsLifeDetailResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  if (from.has_lifedetail()) {
    lifedetail_ = new ::micromsg::LbsLifeDetail(*from.lifedetail_);
  } else {
    lifedetail_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.GetLbsLifeDetailResponse)
}

void GetLbsLifeDetailResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&lifedetail_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(lifedetail_));
}

GetLbsLifeDetailResponse::~GetLbsLifeDetailResponse() {
  // @@protoc_insertion_point(destructor:micromsg.GetLbsLifeDetailResponse)
  SharedDtor();
}

void GetLbsLifeDetailResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
  if (this != internal_default_instance()) {
    delete lifedetail_;
  }
}

void GetLbsLifeDetailResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLbsLifeDetailResponse::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetLbsLifeDetailResponse& GetLbsLifeDetailResponse::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetLbsLifeDetailResponse* GetLbsLifeDetailResponse::New(::google::protobuf::Arena* arena) const {
  GetLbsLifeDetailResponse* n = new GetLbsLifeDetailResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetLbsLifeDetailResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetLbsLifeDetailResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
    if (has_lifedetail()) {
      GOOGLE_DCHECK(lifedetail_ != NULL);
      lifedetail_->::micromsg::LbsLifeDetail::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetLbsLifeDetailResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetLbsLifeDetailResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.LbsLifeDetail LifeDetail = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lifedetail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetLbsLifeDetailResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetLbsLifeDetailResponse)
  return false;
#undef DO_
}

void GetLbsLifeDetailResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetLbsLifeDetailResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // required .micromsg.LbsLifeDetail LifeDetail = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->lifedetail_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetLbsLifeDetailResponse)
}

::google::protobuf::uint8* GetLbsLifeDetailResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetLbsLifeDetailResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // required .micromsg.LbsLifeDetail LifeDetail = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->lifedetail_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetLbsLifeDetailResponse)
  return target;
}

size_t GetLbsLifeDetailResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetLbsLifeDetailResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_lifedetail()) {
    // required .micromsg.LbsLifeDetail LifeDetail = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->lifedetail_);
  }

  return total_size;
}
size_t GetLbsLifeDetailResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetLbsLifeDetailResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required .micromsg.LbsLifeDetail LifeDetail = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->lifedetail_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetLbsLifeDetailResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetLbsLifeDetailResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLbsLifeDetailResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetLbsLifeDetailResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetLbsLifeDetailResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetLbsLifeDetailResponse)
    MergeFrom(*source);
  }
}

void GetLbsLifeDetailResponse::MergeFrom(const GetLbsLifeDetailResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetLbsLifeDetailResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_lifedetail()->::micromsg::LbsLifeDetail::MergeFrom(from.lifedetail());
    }
  }
}

void GetLbsLifeDetailResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetLbsLifeDetailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLbsLifeDetailResponse::CopyFrom(const GetLbsLifeDetailResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetLbsLifeDetailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLbsLifeDetailResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  if (has_lifedetail()) {
    if (!this->lifedetail_->IsInitialized()) return false;
  }
  return true;
}

void GetLbsLifeDetailResponse::Swap(GetLbsLifeDetailResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetLbsLifeDetailResponse::InternalSwap(GetLbsLifeDetailResponse* other) {
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(lifedetail_, other->lifedetail_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetLbsLifeDetailResponse::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetLbsLifeDetailResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool GetLbsLifeDetailResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetLbsLifeDetailResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
void GetLbsLifeDetailResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetLbsLifeDetailResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& GetLbsLifeDetailResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeDetailResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* GetLbsLifeDetailResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetLbsLifeDetailResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* GetLbsLifeDetailResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetLbsLifeDetailResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void GetLbsLifeDetailResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLbsLifeDetailResponse.BaseResponse)
}

// required .micromsg.LbsLifeDetail LifeDetail = 2;
bool GetLbsLifeDetailResponse::has_lifedetail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetLbsLifeDetailResponse::set_has_lifedetail() {
  _has_bits_[0] |= 0x00000002u;
}
void GetLbsLifeDetailResponse::clear_has_lifedetail() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetLbsLifeDetailResponse::clear_lifedetail() {
  if (lifedetail_ != NULL) lifedetail_->::micromsg::LbsLifeDetail::Clear();
  clear_has_lifedetail();
}
const ::micromsg::LbsLifeDetail& GetLbsLifeDetailResponse::lifedetail() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeDetailResponse.LifeDetail)
  return lifedetail_ != NULL ? *lifedetail_
                         : *::micromsg::LbsLifeDetail::internal_default_instance();
}
::micromsg::LbsLifeDetail* GetLbsLifeDetailResponse::mutable_lifedetail() {
  set_has_lifedetail();
  if (lifedetail_ == NULL) {
    lifedetail_ = new ::micromsg::LbsLifeDetail;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetLbsLifeDetailResponse.LifeDetail)
  return lifedetail_;
}
::micromsg::LbsLifeDetail* GetLbsLifeDetailResponse::release_lifedetail() {
  // @@protoc_insertion_point(field_release:micromsg.GetLbsLifeDetailResponse.LifeDetail)
  clear_has_lifedetail();
  ::micromsg::LbsLifeDetail* temp = lifedetail_;
  lifedetail_ = NULL;
  return temp;
}
void GetLbsLifeDetailResponse::set_allocated_lifedetail(::micromsg::LbsLifeDetail* lifedetail) {
  delete lifedetail_;
  lifedetail_ = lifedetail;
  if (lifedetail) {
    set_has_lifedetail();
  } else {
    clear_has_lifedetail();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLbsLifeDetailResponse.LifeDetail)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LbsRequest::kBaseRequestFieldNumber;
const int LbsRequest::kOpCodeFieldNumber;
const int LbsRequest::kLongitudeFieldNumber;
const int LbsRequest::kLatitudeFieldNumber;
const int LbsRequest::kPrecisionFieldNumber;
const int LbsRequest::kMacAddrFieldNumber;
const int LbsRequest::kCellIdFieldNumber;
const int LbsRequest::kGPSSourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LbsRequest::LbsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.LbsRequest)
}
LbsRequest::LbsRequest(const LbsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  macaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_macaddr()) {
    macaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macaddr_);
  }
  cellid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cellid()) {
    cellid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cellid_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  ::memcpy(&opcode_, &from.opcode_,
    reinterpret_cast<char*>(&gpssource_) -
    reinterpret_cast<char*>(&opcode_) + sizeof(gpssource_));
  // @@protoc_insertion_point(copy_constructor:micromsg.LbsRequest)
}

void LbsRequest::SharedCtor() {
  _cached_size_ = 0;
  macaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cellid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&gpssource_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(gpssource_));
}

LbsRequest::~LbsRequest() {
  // @@protoc_insertion_point(destructor:micromsg.LbsRequest)
  SharedDtor();
}

void LbsRequest::SharedDtor() {
  macaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cellid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void LbsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LbsRequest::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LbsRequest& LbsRequest::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

LbsRequest* LbsRequest::New(::google::protobuf::Arena* arena) const {
  LbsRequest* n = new LbsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LbsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.LbsRequest)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_macaddr()) {
      GOOGLE_DCHECK(!macaddr_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*macaddr_.UnsafeRawStringPointer())->clear();
    }
    if (has_cellid()) {
      GOOGLE_DCHECK(!cellid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*cellid_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 248u) {
    ::memset(&opcode_, 0, reinterpret_cast<char*>(&gpssource_) -
      reinterpret_cast<char*>(&opcode_) + sizeof(gpssource_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LbsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.LbsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 OpCode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_opcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &opcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float Longitude = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u)) {
          set_has_longitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float Latitude = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u)) {
          set_has_latitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 Precision = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_precision();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &precision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string MacAddr = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_macaddr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->macaddr().data(), this->macaddr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsRequest.MacAddr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string CellId = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cellid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cellid().data(), this->cellid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsRequest.CellId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 GPSSource = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_gpssource();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gpssource_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.LbsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.LbsRequest)
  return false;
#undef DO_
}

void LbsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.LbsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required uint32 OpCode = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->opcode(), output);
  }

  // required float Longitude = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->longitude(), output);
  }

  // required float Latitude = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->latitude(), output);
  }

  // required int32 Precision = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->precision(), output);
  }

  // optional string MacAddr = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->macaddr().data(), this->macaddr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsRequest.MacAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->macaddr(), output);
  }

  // optional string CellId = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cellid().data(), this->cellid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsRequest.CellId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->cellid(), output);
  }

  // optional int32 GPSSource = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->gpssource(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.LbsRequest)
}

::google::protobuf::uint8* LbsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.LbsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required uint32 OpCode = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->opcode(), target);
  }

  // required float Longitude = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->longitude(), target);
  }

  // required float Latitude = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->latitude(), target);
  }

  // required int32 Precision = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->precision(), target);
  }

  // optional string MacAddr = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->macaddr().data(), this->macaddr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsRequest.MacAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->macaddr(), target);
  }

  // optional string CellId = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cellid().data(), this->cellid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsRequest.CellId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->cellid(), target);
  }

  // optional int32 GPSSource = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->gpssource(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.LbsRequest)
  return target;
}

size_t LbsRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.LbsRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_opcode()) {
    // required uint32 OpCode = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opcode());
  }

  if (has_longitude()) {
    // required float Longitude = 3;
    total_size += 1 + 4;
  }

  if (has_latitude()) {
    // required float Latitude = 4;
    total_size += 1 + 4;
  }

  if (has_precision()) {
    // required int32 Precision = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->precision());
  }

  return total_size;
}
size_t LbsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.LbsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000007c) ^ 0x0000007c) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required uint32 OpCode = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opcode());

    // required float Longitude = 3;
    total_size += 1 + 4;

    // required float Latitude = 4;
    total_size += 1 + 4;

    // required int32 Precision = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->precision());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string MacAddr = 6;
    if (has_macaddr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->macaddr());
    }

    // optional string CellId = 7;
    if (has_cellid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cellid());
    }

  }
  // optional int32 GPSSource = 8;
  if (has_gpssource()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gpssource());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LbsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.LbsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LbsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LbsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.LbsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.LbsRequest)
    MergeFrom(*source);
  }
}

void LbsRequest::MergeFrom(const LbsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.LbsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_macaddr();
      macaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macaddr_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_cellid();
      cellid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cellid_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000008u) {
      opcode_ = from.opcode_;
    }
    if (cached_has_bits & 0x00000010u) {
      longitude_ = from.longitude_;
    }
    if (cached_has_bits & 0x00000020u) {
      latitude_ = from.latitude_;
    }
    if (cached_has_bits & 0x00000040u) {
      precision_ = from.precision_;
    }
    if (cached_has_bits & 0x00000080u) {
      gpssource_ = from.gpssource_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LbsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.LbsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LbsRequest::CopyFrom(const LbsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.LbsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LbsRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007c) != 0x0000007c) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void LbsRequest::Swap(LbsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LbsRequest::InternalSwap(LbsRequest* other) {
  macaddr_.Swap(&other->macaddr_);
  cellid_.Swap(&other->cellid_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(opcode_, other->opcode_);
  std::swap(longitude_, other->longitude_);
  std::swap(latitude_, other->latitude_);
  std::swap(precision_, other->precision_);
  std::swap(gpssource_, other->gpssource_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LbsRequest::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LbsRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool LbsRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LbsRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000004u;
}
void LbsRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000004u;
}
void LbsRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& LbsRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* LbsRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* LbsRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void LbsRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRequest.BaseRequest)
}

// required uint32 OpCode = 2;
bool LbsRequest::has_opcode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void LbsRequest::set_has_opcode() {
  _has_bits_[0] |= 0x00000008u;
}
void LbsRequest::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000008u;
}
void LbsRequest::clear_opcode() {
  opcode_ = 0u;
  clear_has_opcode();
}
::google::protobuf::uint32 LbsRequest::opcode() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRequest.OpCode)
  return opcode_;
}
void LbsRequest::set_opcode(::google::protobuf::uint32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsRequest.OpCode)
}

// required float Longitude = 3;
bool LbsRequest::has_longitude() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void LbsRequest::set_has_longitude() {
  _has_bits_[0] |= 0x00000010u;
}
void LbsRequest::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000010u;
}
void LbsRequest::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
float LbsRequest::longitude() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRequest.Longitude)
  return longitude_;
}
void LbsRequest::set_longitude(float value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsRequest.Longitude)
}

// required float Latitude = 4;
bool LbsRequest::has_latitude() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void LbsRequest::set_has_latitude() {
  _has_bits_[0] |= 0x00000020u;
}
void LbsRequest::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000020u;
}
void LbsRequest::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
float LbsRequest::latitude() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRequest.Latitude)
  return latitude_;
}
void LbsRequest::set_latitude(float value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsRequest.Latitude)
}

// required int32 Precision = 5;
bool LbsRequest::has_precision() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void LbsRequest::set_has_precision() {
  _has_bits_[0] |= 0x00000040u;
}
void LbsRequest::clear_has_precision() {
  _has_bits_[0] &= ~0x00000040u;
}
void LbsRequest::clear_precision() {
  precision_ = 0;
  clear_has_precision();
}
::google::protobuf::int32 LbsRequest::precision() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRequest.Precision)
  return precision_;
}
void LbsRequest::set_precision(::google::protobuf::int32 value) {
  set_has_precision();
  precision_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsRequest.Precision)
}

// optional string MacAddr = 6;
bool LbsRequest::has_macaddr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LbsRequest::set_has_macaddr() {
  _has_bits_[0] |= 0x00000001u;
}
void LbsRequest::clear_has_macaddr() {
  _has_bits_[0] &= ~0x00000001u;
}
void LbsRequest::clear_macaddr() {
  macaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_macaddr();
}
const ::std::string& LbsRequest::macaddr() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRequest.MacAddr)
  return macaddr_.GetNoArena();
}
void LbsRequest::set_macaddr(const ::std::string& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsRequest.MacAddr)
}
#if LANG_CXX11
void LbsRequest::set_macaddr(::std::string&& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsRequest.MacAddr)
}
#endif
void LbsRequest::set_macaddr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsRequest.MacAddr)
}
void LbsRequest::set_macaddr(const char* value, size_t size) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsRequest.MacAddr)
}
::std::string* LbsRequest::mutable_macaddr() {
  set_has_macaddr();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRequest.MacAddr)
  return macaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsRequest::release_macaddr() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRequest.MacAddr)
  clear_has_macaddr();
  return macaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsRequest::set_allocated_macaddr(::std::string* macaddr) {
  if (macaddr != NULL) {
    set_has_macaddr();
  } else {
    clear_has_macaddr();
  }
  macaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), macaddr);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRequest.MacAddr)
}

// optional string CellId = 7;
bool LbsRequest::has_cellid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LbsRequest::set_has_cellid() {
  _has_bits_[0] |= 0x00000002u;
}
void LbsRequest::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000002u;
}
void LbsRequest::clear_cellid() {
  cellid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cellid();
}
const ::std::string& LbsRequest::cellid() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRequest.CellId)
  return cellid_.GetNoArena();
}
void LbsRequest::set_cellid(const ::std::string& value) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsRequest.CellId)
}
#if LANG_CXX11
void LbsRequest::set_cellid(::std::string&& value) {
  set_has_cellid();
  cellid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsRequest.CellId)
}
#endif
void LbsRequest::set_cellid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsRequest.CellId)
}
void LbsRequest::set_cellid(const char* value, size_t size) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsRequest.CellId)
}
::std::string* LbsRequest::mutable_cellid() {
  set_has_cellid();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRequest.CellId)
  return cellid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsRequest::release_cellid() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRequest.CellId)
  clear_has_cellid();
  return cellid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsRequest::set_allocated_cellid(::std::string* cellid) {
  if (cellid != NULL) {
    set_has_cellid();
  } else {
    clear_has_cellid();
  }
  cellid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cellid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRequest.CellId)
}

// optional int32 GPSSource = 8;
bool LbsRequest::has_gpssource() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void LbsRequest::set_has_gpssource() {
  _has_bits_[0] |= 0x00000080u;
}
void LbsRequest::clear_has_gpssource() {
  _has_bits_[0] &= ~0x00000080u;
}
void LbsRequest::clear_gpssource() {
  gpssource_ = 0;
  clear_has_gpssource();
}
::google::protobuf::int32 LbsRequest::gpssource() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRequest.GPSSource)
  return gpssource_;
}
void LbsRequest::set_gpssource(::google::protobuf::int32 value) {
  set_has_gpssource();
  gpssource_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsRequest.GPSSource)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlbumLbsRequest::kBaseRequestFieldNumber;
const int AlbumLbsRequest::kOpCodeFieldNumber;
const int AlbumLbsRequest::kLongitudeFieldNumber;
const int AlbumLbsRequest::kLatitudeFieldNumber;
const int AlbumLbsRequest::kPrecisionFieldNumber;
const int AlbumLbsRequest::kMacAddrFieldNumber;
const int AlbumLbsRequest::kCellIdFieldNumber;
const int AlbumLbsRequest::kGPSSourceFieldNumber;
const int AlbumLbsRequest::kSBTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlbumLbsRequest::AlbumLbsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.AlbumLbsRequest)
}
AlbumLbsRequest::AlbumLbsRequest(const AlbumLbsRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  macaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_macaddr()) {
    macaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macaddr_);
  }
  cellid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cellid()) {
    cellid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cellid_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  ::memcpy(&opcode_, &from.opcode_,
    reinterpret_cast<char*>(&sbtime_) -
    reinterpret_cast<char*>(&opcode_) + sizeof(sbtime_));
  // @@protoc_insertion_point(copy_constructor:micromsg.AlbumLbsRequest)
}

void AlbumLbsRequest::SharedCtor() {
  _cached_size_ = 0;
  macaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cellid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&sbtime_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(sbtime_));
}

AlbumLbsRequest::~AlbumLbsRequest() {
  // @@protoc_insertion_point(destructor:micromsg.AlbumLbsRequest)
  SharedDtor();
}

void AlbumLbsRequest::SharedDtor() {
  macaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cellid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void AlbumLbsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AlbumLbsRequest::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AlbumLbsRequest& AlbumLbsRequest::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

AlbumLbsRequest* AlbumLbsRequest::New(::google::protobuf::Arena* arena) const {
  AlbumLbsRequest* n = new AlbumLbsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AlbumLbsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.AlbumLbsRequest)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_macaddr()) {
      GOOGLE_DCHECK(!macaddr_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*macaddr_.UnsafeRawStringPointer())->clear();
    }
    if (has_cellid()) {
      GOOGLE_DCHECK(!cellid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*cellid_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 248u) {
    ::memset(&opcode_, 0, reinterpret_cast<char*>(&gpssource_) -
      reinterpret_cast<char*>(&opcode_) + sizeof(gpssource_));
  }
  sbtime_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AlbumLbsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.AlbumLbsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 OpCode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_opcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &opcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float Longitude = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u)) {
          set_has_longitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float Latitude = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u)) {
          set_has_latitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 Precision = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_precision();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &precision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string MacAddr = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_macaddr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->macaddr().data(), this->macaddr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.AlbumLbsRequest.MacAddr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string CellId = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cellid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cellid().data(), this->cellid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.AlbumLbsRequest.CellId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 GPSSource = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_gpssource();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gpssource_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 SBTime = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_sbtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sbtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.AlbumLbsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.AlbumLbsRequest)
  return false;
#undef DO_
}

void AlbumLbsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.AlbumLbsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required uint32 OpCode = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->opcode(), output);
  }

  // required float Longitude = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->longitude(), output);
  }

  // required float Latitude = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->latitude(), output);
  }

  // required int32 Precision = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->precision(), output);
  }

  // optional string MacAddr = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->macaddr().data(), this->macaddr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AlbumLbsRequest.MacAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->macaddr(), output);
  }

  // optional string CellId = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cellid().data(), this->cellid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AlbumLbsRequest.CellId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->cellid(), output);
  }

  // required int32 GPSSource = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->gpssource(), output);
  }

  // required uint32 SBTime = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->sbtime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.AlbumLbsRequest)
}

::google::protobuf::uint8* AlbumLbsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.AlbumLbsRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required uint32 OpCode = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->opcode(), target);
  }

  // required float Longitude = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->longitude(), target);
  }

  // required float Latitude = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->latitude(), target);
  }

  // required int32 Precision = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->precision(), target);
  }

  // optional string MacAddr = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->macaddr().data(), this->macaddr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AlbumLbsRequest.MacAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->macaddr(), target);
  }

  // optional string CellId = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cellid().data(), this->cellid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AlbumLbsRequest.CellId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->cellid(), target);
  }

  // required int32 GPSSource = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->gpssource(), target);
  }

  // required uint32 SBTime = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->sbtime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.AlbumLbsRequest)
  return target;
}

size_t AlbumLbsRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.AlbumLbsRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_opcode()) {
    // required uint32 OpCode = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opcode());
  }

  if (has_longitude()) {
    // required float Longitude = 3;
    total_size += 1 + 4;
  }

  if (has_latitude()) {
    // required float Latitude = 4;
    total_size += 1 + 4;
  }

  if (has_precision()) {
    // required int32 Precision = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->precision());
  }

  if (has_gpssource()) {
    // required int32 GPSSource = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gpssource());
  }

  if (has_sbtime()) {
    // required uint32 SBTime = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sbtime());
  }

  return total_size;
}
size_t AlbumLbsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.AlbumLbsRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x000001fc) ^ 0x000001fc) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required uint32 OpCode = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opcode());

    // required float Longitude = 3;
    total_size += 1 + 4;

    // required float Latitude = 4;
    total_size += 1 + 4;

    // required int32 Precision = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->precision());

    // required int32 GPSSource = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gpssource());

    // required uint32 SBTime = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sbtime());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string MacAddr = 6;
    if (has_macaddr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->macaddr());
    }

    // optional string CellId = 7;
    if (has_cellid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cellid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AlbumLbsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.AlbumLbsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AlbumLbsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AlbumLbsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.AlbumLbsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.AlbumLbsRequest)
    MergeFrom(*source);
  }
}

void AlbumLbsRequest::MergeFrom(const AlbumLbsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.AlbumLbsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_macaddr();
      macaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macaddr_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_cellid();
      cellid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cellid_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000008u) {
      opcode_ = from.opcode_;
    }
    if (cached_has_bits & 0x00000010u) {
      longitude_ = from.longitude_;
    }
    if (cached_has_bits & 0x00000020u) {
      latitude_ = from.latitude_;
    }
    if (cached_has_bits & 0x00000040u) {
      precision_ = from.precision_;
    }
    if (cached_has_bits & 0x00000080u) {
      gpssource_ = from.gpssource_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_sbtime(from.sbtime());
  }
}

void AlbumLbsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.AlbumLbsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlbumLbsRequest::CopyFrom(const AlbumLbsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.AlbumLbsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlbumLbsRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001fc) != 0x000001fc) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void AlbumLbsRequest::Swap(AlbumLbsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlbumLbsRequest::InternalSwap(AlbumLbsRequest* other) {
  macaddr_.Swap(&other->macaddr_);
  cellid_.Swap(&other->cellid_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(opcode_, other->opcode_);
  std::swap(longitude_, other->longitude_);
  std::swap(latitude_, other->latitude_);
  std::swap(precision_, other->precision_);
  std::swap(gpssource_, other->gpssource_);
  std::swap(sbtime_, other->sbtime_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AlbumLbsRequest::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AlbumLbsRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool AlbumLbsRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AlbumLbsRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000004u;
}
void AlbumLbsRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000004u;
}
void AlbumLbsRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& AlbumLbsRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.AlbumLbsRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* AlbumLbsRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.AlbumLbsRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* AlbumLbsRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.AlbumLbsRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void AlbumLbsRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.AlbumLbsRequest.BaseRequest)
}

// required uint32 OpCode = 2;
bool AlbumLbsRequest::has_opcode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void AlbumLbsRequest::set_has_opcode() {
  _has_bits_[0] |= 0x00000008u;
}
void AlbumLbsRequest::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000008u;
}
void AlbumLbsRequest::clear_opcode() {
  opcode_ = 0u;
  clear_has_opcode();
}
::google::protobuf::uint32 AlbumLbsRequest::opcode() const {
  // @@protoc_insertion_point(field_get:micromsg.AlbumLbsRequest.OpCode)
  return opcode_;
}
void AlbumLbsRequest::set_opcode(::google::protobuf::uint32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AlbumLbsRequest.OpCode)
}

// required float Longitude = 3;
bool AlbumLbsRequest::has_longitude() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void AlbumLbsRequest::set_has_longitude() {
  _has_bits_[0] |= 0x00000010u;
}
void AlbumLbsRequest::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000010u;
}
void AlbumLbsRequest::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
float AlbumLbsRequest::longitude() const {
  // @@protoc_insertion_point(field_get:micromsg.AlbumLbsRequest.Longitude)
  return longitude_;
}
void AlbumLbsRequest::set_longitude(float value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AlbumLbsRequest.Longitude)
}

// required float Latitude = 4;
bool AlbumLbsRequest::has_latitude() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void AlbumLbsRequest::set_has_latitude() {
  _has_bits_[0] |= 0x00000020u;
}
void AlbumLbsRequest::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000020u;
}
void AlbumLbsRequest::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
float AlbumLbsRequest::latitude() const {
  // @@protoc_insertion_point(field_get:micromsg.AlbumLbsRequest.Latitude)
  return latitude_;
}
void AlbumLbsRequest::set_latitude(float value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AlbumLbsRequest.Latitude)
}

// required int32 Precision = 5;
bool AlbumLbsRequest::has_precision() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void AlbumLbsRequest::set_has_precision() {
  _has_bits_[0] |= 0x00000040u;
}
void AlbumLbsRequest::clear_has_precision() {
  _has_bits_[0] &= ~0x00000040u;
}
void AlbumLbsRequest::clear_precision() {
  precision_ = 0;
  clear_has_precision();
}
::google::protobuf::int32 AlbumLbsRequest::precision() const {
  // @@protoc_insertion_point(field_get:micromsg.AlbumLbsRequest.Precision)
  return precision_;
}
void AlbumLbsRequest::set_precision(::google::protobuf::int32 value) {
  set_has_precision();
  precision_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AlbumLbsRequest.Precision)
}

// optional string MacAddr = 6;
bool AlbumLbsRequest::has_macaddr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AlbumLbsRequest::set_has_macaddr() {
  _has_bits_[0] |= 0x00000001u;
}
void AlbumLbsRequest::clear_has_macaddr() {
  _has_bits_[0] &= ~0x00000001u;
}
void AlbumLbsRequest::clear_macaddr() {
  macaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_macaddr();
}
const ::std::string& AlbumLbsRequest::macaddr() const {
  // @@protoc_insertion_point(field_get:micromsg.AlbumLbsRequest.MacAddr)
  return macaddr_.GetNoArena();
}
void AlbumLbsRequest::set_macaddr(const ::std::string& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AlbumLbsRequest.MacAddr)
}
#if LANG_CXX11
void AlbumLbsRequest::set_macaddr(::std::string&& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AlbumLbsRequest.MacAddr)
}
#endif
void AlbumLbsRequest::set_macaddr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AlbumLbsRequest.MacAddr)
}
void AlbumLbsRequest::set_macaddr(const char* value, size_t size) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AlbumLbsRequest.MacAddr)
}
::std::string* AlbumLbsRequest::mutable_macaddr() {
  set_has_macaddr();
  // @@protoc_insertion_point(field_mutable:micromsg.AlbumLbsRequest.MacAddr)
  return macaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AlbumLbsRequest::release_macaddr() {
  // @@protoc_insertion_point(field_release:micromsg.AlbumLbsRequest.MacAddr)
  clear_has_macaddr();
  return macaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AlbumLbsRequest::set_allocated_macaddr(::std::string* macaddr) {
  if (macaddr != NULL) {
    set_has_macaddr();
  } else {
    clear_has_macaddr();
  }
  macaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), macaddr);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AlbumLbsRequest.MacAddr)
}

// optional string CellId = 7;
bool AlbumLbsRequest::has_cellid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AlbumLbsRequest::set_has_cellid() {
  _has_bits_[0] |= 0x00000002u;
}
void AlbumLbsRequest::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000002u;
}
void AlbumLbsRequest::clear_cellid() {
  cellid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cellid();
}
const ::std::string& AlbumLbsRequest::cellid() const {
  // @@protoc_insertion_point(field_get:micromsg.AlbumLbsRequest.CellId)
  return cellid_.GetNoArena();
}
void AlbumLbsRequest::set_cellid(const ::std::string& value) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AlbumLbsRequest.CellId)
}
#if LANG_CXX11
void AlbumLbsRequest::set_cellid(::std::string&& value) {
  set_has_cellid();
  cellid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AlbumLbsRequest.CellId)
}
#endif
void AlbumLbsRequest::set_cellid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AlbumLbsRequest.CellId)
}
void AlbumLbsRequest::set_cellid(const char* value, size_t size) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AlbumLbsRequest.CellId)
}
::std::string* AlbumLbsRequest::mutable_cellid() {
  set_has_cellid();
  // @@protoc_insertion_point(field_mutable:micromsg.AlbumLbsRequest.CellId)
  return cellid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AlbumLbsRequest::release_cellid() {
  // @@protoc_insertion_point(field_release:micromsg.AlbumLbsRequest.CellId)
  clear_has_cellid();
  return cellid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AlbumLbsRequest::set_allocated_cellid(::std::string* cellid) {
  if (cellid != NULL) {
    set_has_cellid();
  } else {
    clear_has_cellid();
  }
  cellid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cellid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AlbumLbsRequest.CellId)
}

// required int32 GPSSource = 8;
bool AlbumLbsRequest::has_gpssource() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void AlbumLbsRequest::set_has_gpssource() {
  _has_bits_[0] |= 0x00000080u;
}
void AlbumLbsRequest::clear_has_gpssource() {
  _has_bits_[0] &= ~0x00000080u;
}
void AlbumLbsRequest::clear_gpssource() {
  gpssource_ = 0;
  clear_has_gpssource();
}
::google::protobuf::int32 AlbumLbsRequest::gpssource() const {
  // @@protoc_insertion_point(field_get:micromsg.AlbumLbsRequest.GPSSource)
  return gpssource_;
}
void AlbumLbsRequest::set_gpssource(::google::protobuf::int32 value) {
  set_has_gpssource();
  gpssource_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AlbumLbsRequest.GPSSource)
}

// required uint32 SBTime = 9;
bool AlbumLbsRequest::has_sbtime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void AlbumLbsRequest::set_has_sbtime() {
  _has_bits_[0] |= 0x00000100u;
}
void AlbumLbsRequest::clear_has_sbtime() {
  _has_bits_[0] &= ~0x00000100u;
}
void AlbumLbsRequest::clear_sbtime() {
  sbtime_ = 0u;
  clear_has_sbtime();
}
::google::protobuf::uint32 AlbumLbsRequest::sbtime() const {
  // @@protoc_insertion_point(field_get:micromsg.AlbumLbsRequest.SBTime)
  return sbtime_;
}
void AlbumLbsRequest::set_sbtime(::google::protobuf::uint32 value) {
  set_has_sbtime();
  sbtime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AlbumLbsRequest.SBTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LbsContactInfo::kUserNameFieldNumber;
const int LbsContactInfo::kNickNameFieldNumber;
const int LbsContactInfo::kProvinceFieldNumber;
const int LbsContactInfo::kCityFieldNumber;
const int LbsContactInfo::kSignatureFieldNumber;
const int LbsContactInfo::kDistanceFieldNumber;
const int LbsContactInfo::kSexFieldNumber;
const int LbsContactInfo::kImgStatusFieldNumber;
const int LbsContactInfo::kVerifyFlagFieldNumber;
const int LbsContactInfo::kVerifyInfoFieldNumber;
const int LbsContactInfo::kVerifyContentFieldNumber;
const int LbsContactInfo::kAliasFieldNumber;
const int LbsContactInfo::kWeiboFieldNumber;
const int LbsContactInfo::kWeiboNicknameFieldNumber;
const int LbsContactInfo::kWeiboFlagFieldNumber;
const int LbsContactInfo::kHeadImgVersionFieldNumber;
const int LbsContactInfo::kSnsUserInfoFieldNumber;
const int LbsContactInfo::kCountryFieldNumber;
const int LbsContactInfo::kBigHeadImgUrlFieldNumber;
const int LbsContactInfo::kSmallHeadImgUrlFieldNumber;
const int LbsContactInfo::kMyBrandListFieldNumber;
const int LbsContactInfo::kCustomizedInfoFieldNumber;
const int LbsContactInfo::kAntispamTicketFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LbsContactInfo::LbsContactInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.LbsContactInfo)
}
LbsContactInfo::LbsContactInfo(const LbsContactInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_province()) {
    province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.province_);
  }
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_city()) {
    city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
  }
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_signature()) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  distance_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_distance()) {
    distance_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.distance_);
  }
  verifyinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_verifyinfo()) {
    verifyinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verifyinfo_);
  }
  verifycontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_verifycontent()) {
    verifycontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verifycontent_);
  }
  alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_alias()) {
    alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alias_);
  }
  weibo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_weibo()) {
    weibo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.weibo_);
  }
  weibonickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_weibonickname()) {
    weibonickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.weibonickname_);
  }
  country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_country()) {
    country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_);
  }
  bigheadimgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bigheadimgurl()) {
    bigheadimgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bigheadimgurl_);
  }
  smallheadimgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_smallheadimgurl()) {
    smallheadimgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smallheadimgurl_);
  }
  mybrandlist_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mybrandlist()) {
    mybrandlist_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mybrandlist_);
  }
  antispamticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_antispamticket()) {
    antispamticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.antispamticket_);
  }
  if (from.has_snsuserinfo()) {
    snsuserinfo_ = new ::micromsg::SnsUserInfo(*from.snsuserinfo_);
  } else {
    snsuserinfo_ = NULL;
  }
  if (from.has_customizedinfo()) {
    customizedinfo_ = new ::micromsg::CustomizedInfo(*from.customizedinfo_);
  } else {
    customizedinfo_ = NULL;
  }
  ::memcpy(&sex_, &from.sex_,
    reinterpret_cast<char*>(&headimgversion_) -
    reinterpret_cast<char*>(&sex_) + sizeof(headimgversion_));
  // @@protoc_insertion_point(copy_constructor:micromsg.LbsContactInfo)
}

void LbsContactInfo::SharedCtor() {
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  distance_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verifyinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verifycontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  weibo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  weibonickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bigheadimgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smallheadimgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mybrandlist_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  antispamticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&snsuserinfo_, 0, reinterpret_cast<char*>(&headimgversion_) -
    reinterpret_cast<char*>(&snsuserinfo_) + sizeof(headimgversion_));
}

LbsContactInfo::~LbsContactInfo() {
  // @@protoc_insertion_point(destructor:micromsg.LbsContactInfo)
  SharedDtor();
}

void LbsContactInfo::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  distance_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verifyinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verifycontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  alias_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  weibo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  weibonickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bigheadimgurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smallheadimgurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mybrandlist_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  antispamticket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete snsuserinfo_;
  }
  if (this != internal_default_instance()) {
    delete customizedinfo_;
  }
}

void LbsContactInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LbsContactInfo::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LbsContactInfo& LbsContactInfo::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

LbsContactInfo* LbsContactInfo::New(::google::protobuf::Arena* arena) const {
  LbsContactInfo* n = new LbsContactInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LbsContactInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.LbsContactInfo)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_username()) {
      GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*username_.UnsafeRawStringPointer())->clear();
    }
    if (has_nickname()) {
      GOOGLE_DCHECK(!nickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*nickname_.UnsafeRawStringPointer())->clear();
    }
    if (has_province()) {
      GOOGLE_DCHECK(!province_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*province_.UnsafeRawStringPointer())->clear();
    }
    if (has_city()) {
      GOOGLE_DCHECK(!city_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*city_.UnsafeRawStringPointer())->clear();
    }
    if (has_signature()) {
      GOOGLE_DCHECK(!signature_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*signature_.UnsafeRawStringPointer())->clear();
    }
    if (has_distance()) {
      GOOGLE_DCHECK(!distance_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*distance_.UnsafeRawStringPointer())->clear();
    }
    if (has_verifyinfo()) {
      GOOGLE_DCHECK(!verifyinfo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*verifyinfo_.UnsafeRawStringPointer())->clear();
    }
    if (has_verifycontent()) {
      GOOGLE_DCHECK(!verifycontent_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*verifycontent_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    if (has_alias()) {
      GOOGLE_DCHECK(!alias_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*alias_.UnsafeRawStringPointer())->clear();
    }
    if (has_weibo()) {
      GOOGLE_DCHECK(!weibo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*weibo_.UnsafeRawStringPointer())->clear();
    }
    if (has_weibonickname()) {
      GOOGLE_DCHECK(!weibonickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*weibonickname_.UnsafeRawStringPointer())->clear();
    }
    if (has_country()) {
      GOOGLE_DCHECK(!country_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*country_.UnsafeRawStringPointer())->clear();
    }
    if (has_bigheadimgurl()) {
      GOOGLE_DCHECK(!bigheadimgurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*bigheadimgurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_smallheadimgurl()) {
      GOOGLE_DCHECK(!smallheadimgurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*smallheadimgurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_mybrandlist()) {
      GOOGLE_DCHECK(!mybrandlist_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*mybrandlist_.UnsafeRawStringPointer())->clear();
    }
    if (has_antispamticket()) {
      GOOGLE_DCHECK(!antispamticket_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*antispamticket_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[16 / 32] & 196608u) {
    if (has_snsuserinfo()) {
      GOOGLE_DCHECK(snsuserinfo_ != NULL);
      snsuserinfo_->::micromsg::SnsUserInfo::Clear();
    }
    if (has_customizedinfo()) {
      GOOGLE_DCHECK(customizedinfo_ != NULL);
      customizedinfo_->::micromsg::CustomizedInfo::Clear();
    }
  }
  if (_has_bits_[16 / 32] & 8126464u) {
    ::memset(&sex_, 0, reinterpret_cast<char*>(&headimgversion_) -
      reinterpret_cast<char*>(&sex_) + sizeof(headimgversion_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LbsContactInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.LbsContactInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string UserName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsContactInfo.UserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string NickName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsContactInfo.NickName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Province = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_province()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->province().data(), this->province().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsContactInfo.Province");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string City = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_city()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->city().data(), this->city().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsContactInfo.City");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Signature = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signature()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->signature().data(), this->signature().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsContactInfo.Signature");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Distance = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_distance()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->distance().data(), this->distance().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsContactInfo.Distance");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 Sex = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_sex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ImgStatus = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_imgstatus();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &imgstatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 VerifyFlag = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_verifyflag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &verifyflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string VerifyInfo = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_verifyinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->verifyinfo().data(), this->verifyinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsContactInfo.VerifyInfo");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string VerifyContent = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_verifycontent()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->verifycontent().data(), this->verifycontent().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsContactInfo.VerifyContent");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Alias = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alias()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->alias().data(), this->alias().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsContactInfo.Alias");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Weibo = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_weibo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->weibo().data(), this->weibo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsContactInfo.Weibo");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string WeiboNickname = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_weibonickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->weibonickname().data(), this->weibonickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsContactInfo.WeiboNickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 WeiboFlag = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u)) {
          set_has_weiboflag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &weiboflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 HeadImgVersion = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u)) {
          set_has_headimgversion();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &headimgversion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .micromsg.SnsUserInfo SnsUserInfo = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_snsuserinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Country = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->country().data(), this->country().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsContactInfo.Country");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string BigHeadImgUrl = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bigheadimgurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bigheadimgurl().data(), this->bigheadimgurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsContactInfo.BigHeadImgUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string SmallHeadImgUrl = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smallheadimgurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->smallheadimgurl().data(), this->smallheadimgurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsContactInfo.SmallHeadImgUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string MyBrandList = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mybrandlist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mybrandlist().data(), this->mybrandlist().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsContactInfo.MyBrandList");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .micromsg.CustomizedInfo CustomizedInfo = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_customizedinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AntispamTicket = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_antispamticket()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->antispamticket().data(), this->antispamticket().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsContactInfo.AntispamTicket");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.LbsContactInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.LbsContactInfo)
  return false;
#undef DO_
}

void LbsContactInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.LbsContactInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string UserName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsContactInfo.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // optional string NickName = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsContactInfo.NickName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nickname(), output);
  }

  // optional string Province = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->province().data(), this->province().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsContactInfo.Province");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->province(), output);
  }

  // optional string City = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->city().data(), this->city().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsContactInfo.City");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->city(), output);
  }

  // optional string Signature = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->signature().data(), this->signature().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsContactInfo.Signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->signature(), output);
  }

  // optional string Distance = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->distance().data(), this->distance().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsContactInfo.Distance");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->distance(), output);
  }

  // required int32 Sex = 7;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->sex(), output);
  }

  // required uint32 ImgStatus = 8;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->imgstatus(), output);
  }

  // optional uint32 VerifyFlag = 9;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->verifyflag(), output);
  }

  // optional string VerifyInfo = 10;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->verifyinfo().data(), this->verifyinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsContactInfo.VerifyInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->verifyinfo(), output);
  }

  // optional string VerifyContent = 11;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->verifycontent().data(), this->verifycontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsContactInfo.VerifyContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->verifycontent(), output);
  }

  // optional string Alias = 12;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alias().data(), this->alias().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsContactInfo.Alias");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->alias(), output);
  }

  // optional string Weibo = 13;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->weibo().data(), this->weibo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsContactInfo.Weibo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->weibo(), output);
  }

  // optional string WeiboNickname = 14;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->weibonickname().data(), this->weibonickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsContactInfo.WeiboNickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->weibonickname(), output);
  }

  // optional uint32 WeiboFlag = 15;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->weiboflag(), output);
  }

  // optional int32 HeadImgVersion = 19;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->headimgversion(), output);
  }

  // optional .micromsg.SnsUserInfo SnsUserInfo = 20;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->snsuserinfo_, output);
  }

  // optional string Country = 21;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country().data(), this->country().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsContactInfo.Country");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->country(), output);
  }

  // optional string BigHeadImgUrl = 22;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bigheadimgurl().data(), this->bigheadimgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsContactInfo.BigHeadImgUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->bigheadimgurl(), output);
  }

  // optional string SmallHeadImgUrl = 23;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smallheadimgurl().data(), this->smallheadimgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsContactInfo.SmallHeadImgUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->smallheadimgurl(), output);
  }

  // optional string MyBrandList = 24;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mybrandlist().data(), this->mybrandlist().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsContactInfo.MyBrandList");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      24, this->mybrandlist(), output);
  }

  // optional .micromsg.CustomizedInfo CustomizedInfo = 25;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, *this->customizedinfo_, output);
  }

  // optional string AntispamTicket = 26;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->antispamticket().data(), this->antispamticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsContactInfo.AntispamTicket");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      26, this->antispamticket(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.LbsContactInfo)
}

::google::protobuf::uint8* LbsContactInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.LbsContactInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string UserName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsContactInfo.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // optional string NickName = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsContactInfo.NickName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nickname(), target);
  }

  // optional string Province = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->province().data(), this->province().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsContactInfo.Province");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->province(), target);
  }

  // optional string City = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->city().data(), this->city().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsContactInfo.City");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->city(), target);
  }

  // optional string Signature = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->signature().data(), this->signature().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsContactInfo.Signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->signature(), target);
  }

  // optional string Distance = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->distance().data(), this->distance().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsContactInfo.Distance");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->distance(), target);
  }

  // required int32 Sex = 7;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->sex(), target);
  }

  // required uint32 ImgStatus = 8;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->imgstatus(), target);
  }

  // optional uint32 VerifyFlag = 9;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->verifyflag(), target);
  }

  // optional string VerifyInfo = 10;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->verifyinfo().data(), this->verifyinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsContactInfo.VerifyInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->verifyinfo(), target);
  }

  // optional string VerifyContent = 11;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->verifycontent().data(), this->verifycontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsContactInfo.VerifyContent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->verifycontent(), target);
  }

  // optional string Alias = 12;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->alias().data(), this->alias().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsContactInfo.Alias");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->alias(), target);
  }

  // optional string Weibo = 13;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->weibo().data(), this->weibo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsContactInfo.Weibo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->weibo(), target);
  }

  // optional string WeiboNickname = 14;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->weibonickname().data(), this->weibonickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsContactInfo.WeiboNickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->weibonickname(), target);
  }

  // optional uint32 WeiboFlag = 15;
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->weiboflag(), target);
  }

  // optional int32 HeadImgVersion = 19;
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->headimgversion(), target);
  }

  // optional .micromsg.SnsUserInfo SnsUserInfo = 20;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, *this->snsuserinfo_, deterministic, target);
  }

  // optional string Country = 21;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country().data(), this->country().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsContactInfo.Country");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->country(), target);
  }

  // optional string BigHeadImgUrl = 22;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bigheadimgurl().data(), this->bigheadimgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsContactInfo.BigHeadImgUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->bigheadimgurl(), target);
  }

  // optional string SmallHeadImgUrl = 23;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smallheadimgurl().data(), this->smallheadimgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsContactInfo.SmallHeadImgUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->smallheadimgurl(), target);
  }

  // optional string MyBrandList = 24;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mybrandlist().data(), this->mybrandlist().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsContactInfo.MyBrandList");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->mybrandlist(), target);
  }

  // optional .micromsg.CustomizedInfo CustomizedInfo = 25;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        25, *this->customizedinfo_, deterministic, target);
  }

  // optional string AntispamTicket = 26;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->antispamticket().data(), this->antispamticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsContactInfo.AntispamTicket");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        26, this->antispamticket(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.LbsContactInfo)
  return target;
}

size_t LbsContactInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.LbsContactInfo)
  size_t total_size = 0;

  if (has_sex()) {
    // required int32 Sex = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sex());
  }

  if (has_imgstatus()) {
    // required uint32 ImgStatus = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imgstatus());
  }

  return total_size;
}
size_t LbsContactInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.LbsContactInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x000c0000) ^ 0x000c0000) == 0) {  // All required fields are present.
    // required int32 Sex = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sex());

    // required uint32 ImgStatus = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imgstatus());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string UserName = 1;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional string NickName = 2;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional string Province = 3;
    if (has_province()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->province());
    }

    // optional string City = 4;
    if (has_city()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->city());
    }

    // optional string Signature = 5;
    if (has_signature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->signature());
    }

    // optional string Distance = 6;
    if (has_distance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->distance());
    }

    // optional string VerifyInfo = 10;
    if (has_verifyinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->verifyinfo());
    }

    // optional string VerifyContent = 11;
    if (has_verifycontent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->verifycontent());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional string Alias = 12;
    if (has_alias()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->alias());
    }

    // optional string Weibo = 13;
    if (has_weibo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->weibo());
    }

    // optional string WeiboNickname = 14;
    if (has_weibonickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->weibonickname());
    }

    // optional string Country = 21;
    if (has_country()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->country());
    }

    // optional string BigHeadImgUrl = 22;
    if (has_bigheadimgurl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bigheadimgurl());
    }

    // optional string SmallHeadImgUrl = 23;
    if (has_smallheadimgurl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->smallheadimgurl());
    }

    // optional string MyBrandList = 24;
    if (has_mybrandlist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mybrandlist());
    }

    // optional string AntispamTicket = 26;
    if (has_antispamticket()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->antispamticket());
    }

  }
  if (_has_bits_[16 / 32] & 196608u) {
    // optional .micromsg.SnsUserInfo SnsUserInfo = 20;
    if (has_snsuserinfo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->snsuserinfo_);
    }

    // optional .micromsg.CustomizedInfo CustomizedInfo = 25;
    if (has_customizedinfo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->customizedinfo_);
    }

  }
  if (_has_bits_[16 / 32] & 7340032u) {
    // optional uint32 VerifyFlag = 9;
    if (has_verifyflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->verifyflag());
    }

    // optional uint32 WeiboFlag = 15;
    if (has_weiboflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->weiboflag());
    }

    // optional int32 HeadImgVersion = 19;
    if (has_headimgversion()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->headimgversion());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LbsContactInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.LbsContactInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const LbsContactInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LbsContactInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.LbsContactInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.LbsContactInfo)
    MergeFrom(*source);
  }
}

void LbsContactInfo::MergeFrom(const LbsContactInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.LbsContactInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_province();
      province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.province_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_city();
      city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_signature();
      signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_distance();
      distance_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.distance_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_verifyinfo();
      verifyinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verifyinfo_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_verifycontent();
      verifycontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verifycontent_);
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_alias();
      alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alias_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has_weibo();
      weibo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.weibo_);
    }
    if (cached_has_bits & 0x00000400u) {
      set_has_weibonickname();
      weibonickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.weibonickname_);
    }
    if (cached_has_bits & 0x00000800u) {
      set_has_country();
      country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_);
    }
    if (cached_has_bits & 0x00001000u) {
      set_has_bigheadimgurl();
      bigheadimgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bigheadimgurl_);
    }
    if (cached_has_bits & 0x00002000u) {
      set_has_smallheadimgurl();
      smallheadimgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smallheadimgurl_);
    }
    if (cached_has_bits & 0x00004000u) {
      set_has_mybrandlist();
      mybrandlist_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mybrandlist_);
    }
    if (cached_has_bits & 0x00008000u) {
      set_has_antispamticket();
      antispamticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.antispamticket_);
    }
  }
  if (cached_has_bits & 8323072u) {
    if (cached_has_bits & 0x00010000u) {
      mutable_snsuserinfo()->::micromsg::SnsUserInfo::MergeFrom(from.snsuserinfo());
    }
    if (cached_has_bits & 0x00020000u) {
      mutable_customizedinfo()->::micromsg::CustomizedInfo::MergeFrom(from.customizedinfo());
    }
    if (cached_has_bits & 0x00040000u) {
      sex_ = from.sex_;
    }
    if (cached_has_bits & 0x00080000u) {
      imgstatus_ = from.imgstatus_;
    }
    if (cached_has_bits & 0x00100000u) {
      verifyflag_ = from.verifyflag_;
    }
    if (cached_has_bits & 0x00200000u) {
      weiboflag_ = from.weiboflag_;
    }
    if (cached_has_bits & 0x00400000u) {
      headimgversion_ = from.headimgversion_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LbsContactInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.LbsContactInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LbsContactInfo::CopyFrom(const LbsContactInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.LbsContactInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LbsContactInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x000c0000) != 0x000c0000) return false;
  if (has_snsuserinfo()) {
    if (!this->snsuserinfo_->IsInitialized()) return false;
  }
  if (has_customizedinfo()) {
    if (!this->customizedinfo_->IsInitialized()) return false;
  }
  return true;
}

void LbsContactInfo::Swap(LbsContactInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LbsContactInfo::InternalSwap(LbsContactInfo* other) {
  username_.Swap(&other->username_);
  nickname_.Swap(&other->nickname_);
  province_.Swap(&other->province_);
  city_.Swap(&other->city_);
  signature_.Swap(&other->signature_);
  distance_.Swap(&other->distance_);
  verifyinfo_.Swap(&other->verifyinfo_);
  verifycontent_.Swap(&other->verifycontent_);
  alias_.Swap(&other->alias_);
  weibo_.Swap(&other->weibo_);
  weibonickname_.Swap(&other->weibonickname_);
  country_.Swap(&other->country_);
  bigheadimgurl_.Swap(&other->bigheadimgurl_);
  smallheadimgurl_.Swap(&other->smallheadimgurl_);
  mybrandlist_.Swap(&other->mybrandlist_);
  antispamticket_.Swap(&other->antispamticket_);
  std::swap(snsuserinfo_, other->snsuserinfo_);
  std::swap(customizedinfo_, other->customizedinfo_);
  std::swap(sex_, other->sex_);
  std::swap(imgstatus_, other->imgstatus_);
  std::swap(verifyflag_, other->verifyflag_);
  std::swap(weiboflag_, other->weiboflag_);
  std::swap(headimgversion_, other->headimgversion_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LbsContactInfo::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LbsContactInfo

// optional string UserName = 1;
bool LbsContactInfo::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LbsContactInfo::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
void LbsContactInfo::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
void LbsContactInfo::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& LbsContactInfo::username() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.UserName)
  return username_.GetNoArena();
}
void LbsContactInfo::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.UserName)
}
#if LANG_CXX11
void LbsContactInfo::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsContactInfo.UserName)
}
#endif
void LbsContactInfo::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsContactInfo.UserName)
}
void LbsContactInfo::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsContactInfo.UserName)
}
::std::string* LbsContactInfo::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsContactInfo::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsContactInfo::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.UserName)
}

// optional string NickName = 2;
bool LbsContactInfo::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LbsContactInfo::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
void LbsContactInfo::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
void LbsContactInfo::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
const ::std::string& LbsContactInfo::nickname() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.NickName)
  return nickname_.GetNoArena();
}
void LbsContactInfo::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.NickName)
}
#if LANG_CXX11
void LbsContactInfo::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsContactInfo.NickName)
}
#endif
void LbsContactInfo::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsContactInfo.NickName)
}
void LbsContactInfo::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsContactInfo.NickName)
}
::std::string* LbsContactInfo::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.NickName)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsContactInfo::release_nickname() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.NickName)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsContactInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.NickName)
}

// optional string Province = 3;
bool LbsContactInfo::has_province() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LbsContactInfo::set_has_province() {
  _has_bits_[0] |= 0x00000004u;
}
void LbsContactInfo::clear_has_province() {
  _has_bits_[0] &= ~0x00000004u;
}
void LbsContactInfo::clear_province() {
  province_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_province();
}
const ::std::string& LbsContactInfo::province() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.Province)
  return province_.GetNoArena();
}
void LbsContactInfo::set_province(const ::std::string& value) {
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.Province)
}
#if LANG_CXX11
void LbsContactInfo::set_province(::std::string&& value) {
  set_has_province();
  province_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsContactInfo.Province)
}
#endif
void LbsContactInfo::set_province(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsContactInfo.Province)
}
void LbsContactInfo::set_province(const char* value, size_t size) {
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsContactInfo.Province)
}
::std::string* LbsContactInfo::mutable_province() {
  set_has_province();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.Province)
  return province_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsContactInfo::release_province() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.Province)
  clear_has_province();
  return province_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsContactInfo::set_allocated_province(::std::string* province) {
  if (province != NULL) {
    set_has_province();
  } else {
    clear_has_province();
  }
  province_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), province);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.Province)
}

// optional string City = 4;
bool LbsContactInfo::has_city() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void LbsContactInfo::set_has_city() {
  _has_bits_[0] |= 0x00000008u;
}
void LbsContactInfo::clear_has_city() {
  _has_bits_[0] &= ~0x00000008u;
}
void LbsContactInfo::clear_city() {
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_city();
}
const ::std::string& LbsContactInfo::city() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.City)
  return city_.GetNoArena();
}
void LbsContactInfo::set_city(const ::std::string& value) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.City)
}
#if LANG_CXX11
void LbsContactInfo::set_city(::std::string&& value) {
  set_has_city();
  city_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsContactInfo.City)
}
#endif
void LbsContactInfo::set_city(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsContactInfo.City)
}
void LbsContactInfo::set_city(const char* value, size_t size) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsContactInfo.City)
}
::std::string* LbsContactInfo::mutable_city() {
  set_has_city();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.City)
  return city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsContactInfo::release_city() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.City)
  clear_has_city();
  return city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsContactInfo::set_allocated_city(::std::string* city) {
  if (city != NULL) {
    set_has_city();
  } else {
    clear_has_city();
  }
  city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.City)
}

// optional string Signature = 5;
bool LbsContactInfo::has_signature() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void LbsContactInfo::set_has_signature() {
  _has_bits_[0] |= 0x00000010u;
}
void LbsContactInfo::clear_has_signature() {
  _has_bits_[0] &= ~0x00000010u;
}
void LbsContactInfo::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_signature();
}
const ::std::string& LbsContactInfo::signature() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.Signature)
  return signature_.GetNoArena();
}
void LbsContactInfo::set_signature(const ::std::string& value) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.Signature)
}
#if LANG_CXX11
void LbsContactInfo::set_signature(::std::string&& value) {
  set_has_signature();
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsContactInfo.Signature)
}
#endif
void LbsContactInfo::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsContactInfo.Signature)
}
void LbsContactInfo::set_signature(const char* value, size_t size) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsContactInfo.Signature)
}
::std::string* LbsContactInfo::mutable_signature() {
  set_has_signature();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.Signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsContactInfo::release_signature() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.Signature)
  clear_has_signature();
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsContactInfo::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    set_has_signature();
  } else {
    clear_has_signature();
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.Signature)
}

// optional string Distance = 6;
bool LbsContactInfo::has_distance() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void LbsContactInfo::set_has_distance() {
  _has_bits_[0] |= 0x00000020u;
}
void LbsContactInfo::clear_has_distance() {
  _has_bits_[0] &= ~0x00000020u;
}
void LbsContactInfo::clear_distance() {
  distance_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_distance();
}
const ::std::string& LbsContactInfo::distance() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.Distance)
  return distance_.GetNoArena();
}
void LbsContactInfo::set_distance(const ::std::string& value) {
  set_has_distance();
  distance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.Distance)
}
#if LANG_CXX11
void LbsContactInfo::set_distance(::std::string&& value) {
  set_has_distance();
  distance_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsContactInfo.Distance)
}
#endif
void LbsContactInfo::set_distance(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_distance();
  distance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsContactInfo.Distance)
}
void LbsContactInfo::set_distance(const char* value, size_t size) {
  set_has_distance();
  distance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsContactInfo.Distance)
}
::std::string* LbsContactInfo::mutable_distance() {
  set_has_distance();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.Distance)
  return distance_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsContactInfo::release_distance() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.Distance)
  clear_has_distance();
  return distance_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsContactInfo::set_allocated_distance(::std::string* distance) {
  if (distance != NULL) {
    set_has_distance();
  } else {
    clear_has_distance();
  }
  distance_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), distance);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.Distance)
}

// required int32 Sex = 7;
bool LbsContactInfo::has_sex() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void LbsContactInfo::set_has_sex() {
  _has_bits_[0] |= 0x00040000u;
}
void LbsContactInfo::clear_has_sex() {
  _has_bits_[0] &= ~0x00040000u;
}
void LbsContactInfo::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
::google::protobuf::int32 LbsContactInfo::sex() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.Sex)
  return sex_;
}
void LbsContactInfo::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.Sex)
}

// required uint32 ImgStatus = 8;
bool LbsContactInfo::has_imgstatus() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void LbsContactInfo::set_has_imgstatus() {
  _has_bits_[0] |= 0x00080000u;
}
void LbsContactInfo::clear_has_imgstatus() {
  _has_bits_[0] &= ~0x00080000u;
}
void LbsContactInfo::clear_imgstatus() {
  imgstatus_ = 0u;
  clear_has_imgstatus();
}
::google::protobuf::uint32 LbsContactInfo::imgstatus() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.ImgStatus)
  return imgstatus_;
}
void LbsContactInfo::set_imgstatus(::google::protobuf::uint32 value) {
  set_has_imgstatus();
  imgstatus_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.ImgStatus)
}

// optional uint32 VerifyFlag = 9;
bool LbsContactInfo::has_verifyflag() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void LbsContactInfo::set_has_verifyflag() {
  _has_bits_[0] |= 0x00100000u;
}
void LbsContactInfo::clear_has_verifyflag() {
  _has_bits_[0] &= ~0x00100000u;
}
void LbsContactInfo::clear_verifyflag() {
  verifyflag_ = 0u;
  clear_has_verifyflag();
}
::google::protobuf::uint32 LbsContactInfo::verifyflag() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.VerifyFlag)
  return verifyflag_;
}
void LbsContactInfo::set_verifyflag(::google::protobuf::uint32 value) {
  set_has_verifyflag();
  verifyflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.VerifyFlag)
}

// optional string VerifyInfo = 10;
bool LbsContactInfo::has_verifyinfo() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void LbsContactInfo::set_has_verifyinfo() {
  _has_bits_[0] |= 0x00000040u;
}
void LbsContactInfo::clear_has_verifyinfo() {
  _has_bits_[0] &= ~0x00000040u;
}
void LbsContactInfo::clear_verifyinfo() {
  verifyinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_verifyinfo();
}
const ::std::string& LbsContactInfo::verifyinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.VerifyInfo)
  return verifyinfo_.GetNoArena();
}
void LbsContactInfo::set_verifyinfo(const ::std::string& value) {
  set_has_verifyinfo();
  verifyinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.VerifyInfo)
}
#if LANG_CXX11
void LbsContactInfo::set_verifyinfo(::std::string&& value) {
  set_has_verifyinfo();
  verifyinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsContactInfo.VerifyInfo)
}
#endif
void LbsContactInfo::set_verifyinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_verifyinfo();
  verifyinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsContactInfo.VerifyInfo)
}
void LbsContactInfo::set_verifyinfo(const char* value, size_t size) {
  set_has_verifyinfo();
  verifyinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsContactInfo.VerifyInfo)
}
::std::string* LbsContactInfo::mutable_verifyinfo() {
  set_has_verifyinfo();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.VerifyInfo)
  return verifyinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsContactInfo::release_verifyinfo() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.VerifyInfo)
  clear_has_verifyinfo();
  return verifyinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsContactInfo::set_allocated_verifyinfo(::std::string* verifyinfo) {
  if (verifyinfo != NULL) {
    set_has_verifyinfo();
  } else {
    clear_has_verifyinfo();
  }
  verifyinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verifyinfo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.VerifyInfo)
}

// optional string VerifyContent = 11;
bool LbsContactInfo::has_verifycontent() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void LbsContactInfo::set_has_verifycontent() {
  _has_bits_[0] |= 0x00000080u;
}
void LbsContactInfo::clear_has_verifycontent() {
  _has_bits_[0] &= ~0x00000080u;
}
void LbsContactInfo::clear_verifycontent() {
  verifycontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_verifycontent();
}
const ::std::string& LbsContactInfo::verifycontent() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.VerifyContent)
  return verifycontent_.GetNoArena();
}
void LbsContactInfo::set_verifycontent(const ::std::string& value) {
  set_has_verifycontent();
  verifycontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.VerifyContent)
}
#if LANG_CXX11
void LbsContactInfo::set_verifycontent(::std::string&& value) {
  set_has_verifycontent();
  verifycontent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsContactInfo.VerifyContent)
}
#endif
void LbsContactInfo::set_verifycontent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_verifycontent();
  verifycontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsContactInfo.VerifyContent)
}
void LbsContactInfo::set_verifycontent(const char* value, size_t size) {
  set_has_verifycontent();
  verifycontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsContactInfo.VerifyContent)
}
::std::string* LbsContactInfo::mutable_verifycontent() {
  set_has_verifycontent();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.VerifyContent)
  return verifycontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsContactInfo::release_verifycontent() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.VerifyContent)
  clear_has_verifycontent();
  return verifycontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsContactInfo::set_allocated_verifycontent(::std::string* verifycontent) {
  if (verifycontent != NULL) {
    set_has_verifycontent();
  } else {
    clear_has_verifycontent();
  }
  verifycontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verifycontent);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.VerifyContent)
}

// optional string Alias = 12;
bool LbsContactInfo::has_alias() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void LbsContactInfo::set_has_alias() {
  _has_bits_[0] |= 0x00000100u;
}
void LbsContactInfo::clear_has_alias() {
  _has_bits_[0] &= ~0x00000100u;
}
void LbsContactInfo::clear_alias() {
  alias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alias();
}
const ::std::string& LbsContactInfo::alias() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.Alias)
  return alias_.GetNoArena();
}
void LbsContactInfo::set_alias(const ::std::string& value) {
  set_has_alias();
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.Alias)
}
#if LANG_CXX11
void LbsContactInfo::set_alias(::std::string&& value) {
  set_has_alias();
  alias_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsContactInfo.Alias)
}
#endif
void LbsContactInfo::set_alias(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alias();
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsContactInfo.Alias)
}
void LbsContactInfo::set_alias(const char* value, size_t size) {
  set_has_alias();
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsContactInfo.Alias)
}
::std::string* LbsContactInfo::mutable_alias() {
  set_has_alias();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.Alias)
  return alias_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsContactInfo::release_alias() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.Alias)
  clear_has_alias();
  return alias_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsContactInfo::set_allocated_alias(::std::string* alias) {
  if (alias != NULL) {
    set_has_alias();
  } else {
    clear_has_alias();
  }
  alias_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alias);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.Alias)
}

// optional string Weibo = 13;
bool LbsContactInfo::has_weibo() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void LbsContactInfo::set_has_weibo() {
  _has_bits_[0] |= 0x00000200u;
}
void LbsContactInfo::clear_has_weibo() {
  _has_bits_[0] &= ~0x00000200u;
}
void LbsContactInfo::clear_weibo() {
  weibo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_weibo();
}
const ::std::string& LbsContactInfo::weibo() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.Weibo)
  return weibo_.GetNoArena();
}
void LbsContactInfo::set_weibo(const ::std::string& value) {
  set_has_weibo();
  weibo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.Weibo)
}
#if LANG_CXX11
void LbsContactInfo::set_weibo(::std::string&& value) {
  set_has_weibo();
  weibo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsContactInfo.Weibo)
}
#endif
void LbsContactInfo::set_weibo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_weibo();
  weibo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsContactInfo.Weibo)
}
void LbsContactInfo::set_weibo(const char* value, size_t size) {
  set_has_weibo();
  weibo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsContactInfo.Weibo)
}
::std::string* LbsContactInfo::mutable_weibo() {
  set_has_weibo();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.Weibo)
  return weibo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsContactInfo::release_weibo() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.Weibo)
  clear_has_weibo();
  return weibo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsContactInfo::set_allocated_weibo(::std::string* weibo) {
  if (weibo != NULL) {
    set_has_weibo();
  } else {
    clear_has_weibo();
  }
  weibo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), weibo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.Weibo)
}

// optional string WeiboNickname = 14;
bool LbsContactInfo::has_weibonickname() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void LbsContactInfo::set_has_weibonickname() {
  _has_bits_[0] |= 0x00000400u;
}
void LbsContactInfo::clear_has_weibonickname() {
  _has_bits_[0] &= ~0x00000400u;
}
void LbsContactInfo::clear_weibonickname() {
  weibonickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_weibonickname();
}
const ::std::string& LbsContactInfo::weibonickname() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.WeiboNickname)
  return weibonickname_.GetNoArena();
}
void LbsContactInfo::set_weibonickname(const ::std::string& value) {
  set_has_weibonickname();
  weibonickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.WeiboNickname)
}
#if LANG_CXX11
void LbsContactInfo::set_weibonickname(::std::string&& value) {
  set_has_weibonickname();
  weibonickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsContactInfo.WeiboNickname)
}
#endif
void LbsContactInfo::set_weibonickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_weibonickname();
  weibonickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsContactInfo.WeiboNickname)
}
void LbsContactInfo::set_weibonickname(const char* value, size_t size) {
  set_has_weibonickname();
  weibonickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsContactInfo.WeiboNickname)
}
::std::string* LbsContactInfo::mutable_weibonickname() {
  set_has_weibonickname();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.WeiboNickname)
  return weibonickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsContactInfo::release_weibonickname() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.WeiboNickname)
  clear_has_weibonickname();
  return weibonickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsContactInfo::set_allocated_weibonickname(::std::string* weibonickname) {
  if (weibonickname != NULL) {
    set_has_weibonickname();
  } else {
    clear_has_weibonickname();
  }
  weibonickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), weibonickname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.WeiboNickname)
}

// optional uint32 WeiboFlag = 15;
bool LbsContactInfo::has_weiboflag() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void LbsContactInfo::set_has_weiboflag() {
  _has_bits_[0] |= 0x00200000u;
}
void LbsContactInfo::clear_has_weiboflag() {
  _has_bits_[0] &= ~0x00200000u;
}
void LbsContactInfo::clear_weiboflag() {
  weiboflag_ = 0u;
  clear_has_weiboflag();
}
::google::protobuf::uint32 LbsContactInfo::weiboflag() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.WeiboFlag)
  return weiboflag_;
}
void LbsContactInfo::set_weiboflag(::google::protobuf::uint32 value) {
  set_has_weiboflag();
  weiboflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.WeiboFlag)
}

// optional int32 HeadImgVersion = 19;
bool LbsContactInfo::has_headimgversion() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
void LbsContactInfo::set_has_headimgversion() {
  _has_bits_[0] |= 0x00400000u;
}
void LbsContactInfo::clear_has_headimgversion() {
  _has_bits_[0] &= ~0x00400000u;
}
void LbsContactInfo::clear_headimgversion() {
  headimgversion_ = 0;
  clear_has_headimgversion();
}
::google::protobuf::int32 LbsContactInfo::headimgversion() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.HeadImgVersion)
  return headimgversion_;
}
void LbsContactInfo::set_headimgversion(::google::protobuf::int32 value) {
  set_has_headimgversion();
  headimgversion_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.HeadImgVersion)
}

// optional .micromsg.SnsUserInfo SnsUserInfo = 20;
bool LbsContactInfo::has_snsuserinfo() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void LbsContactInfo::set_has_snsuserinfo() {
  _has_bits_[0] |= 0x00010000u;
}
void LbsContactInfo::clear_has_snsuserinfo() {
  _has_bits_[0] &= ~0x00010000u;
}
void LbsContactInfo::clear_snsuserinfo() {
  if (snsuserinfo_ != NULL) snsuserinfo_->::micromsg::SnsUserInfo::Clear();
  clear_has_snsuserinfo();
}
const ::micromsg::SnsUserInfo& LbsContactInfo::snsuserinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.SnsUserInfo)
  return snsuserinfo_ != NULL ? *snsuserinfo_
                         : *::micromsg::SnsUserInfo::internal_default_instance();
}
::micromsg::SnsUserInfo* LbsContactInfo::mutable_snsuserinfo() {
  set_has_snsuserinfo();
  if (snsuserinfo_ == NULL) {
    snsuserinfo_ = new ::micromsg::SnsUserInfo;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.SnsUserInfo)
  return snsuserinfo_;
}
::micromsg::SnsUserInfo* LbsContactInfo::release_snsuserinfo() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.SnsUserInfo)
  clear_has_snsuserinfo();
  ::micromsg::SnsUserInfo* temp = snsuserinfo_;
  snsuserinfo_ = NULL;
  return temp;
}
void LbsContactInfo::set_allocated_snsuserinfo(::micromsg::SnsUserInfo* snsuserinfo) {
  delete snsuserinfo_;
  snsuserinfo_ = snsuserinfo;
  if (snsuserinfo) {
    set_has_snsuserinfo();
  } else {
    clear_has_snsuserinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.SnsUserInfo)
}

// optional string Country = 21;
bool LbsContactInfo::has_country() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void LbsContactInfo::set_has_country() {
  _has_bits_[0] |= 0x00000800u;
}
void LbsContactInfo::clear_has_country() {
  _has_bits_[0] &= ~0x00000800u;
}
void LbsContactInfo::clear_country() {
  country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_country();
}
const ::std::string& LbsContactInfo::country() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.Country)
  return country_.GetNoArena();
}
void LbsContactInfo::set_country(const ::std::string& value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.Country)
}
#if LANG_CXX11
void LbsContactInfo::set_country(::std::string&& value) {
  set_has_country();
  country_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsContactInfo.Country)
}
#endif
void LbsContactInfo::set_country(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsContactInfo.Country)
}
void LbsContactInfo::set_country(const char* value, size_t size) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsContactInfo.Country)
}
::std::string* LbsContactInfo::mutable_country() {
  set_has_country();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.Country)
  return country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsContactInfo::release_country() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.Country)
  clear_has_country();
  return country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsContactInfo::set_allocated_country(::std::string* country) {
  if (country != NULL) {
    set_has_country();
  } else {
    clear_has_country();
  }
  country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.Country)
}

// optional string BigHeadImgUrl = 22;
bool LbsContactInfo::has_bigheadimgurl() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void LbsContactInfo::set_has_bigheadimgurl() {
  _has_bits_[0] |= 0x00001000u;
}
void LbsContactInfo::clear_has_bigheadimgurl() {
  _has_bits_[0] &= ~0x00001000u;
}
void LbsContactInfo::clear_bigheadimgurl() {
  bigheadimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bigheadimgurl();
}
const ::std::string& LbsContactInfo::bigheadimgurl() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.BigHeadImgUrl)
  return bigheadimgurl_.GetNoArena();
}
void LbsContactInfo::set_bigheadimgurl(const ::std::string& value) {
  set_has_bigheadimgurl();
  bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.BigHeadImgUrl)
}
#if LANG_CXX11
void LbsContactInfo::set_bigheadimgurl(::std::string&& value) {
  set_has_bigheadimgurl();
  bigheadimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsContactInfo.BigHeadImgUrl)
}
#endif
void LbsContactInfo::set_bigheadimgurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bigheadimgurl();
  bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsContactInfo.BigHeadImgUrl)
}
void LbsContactInfo::set_bigheadimgurl(const char* value, size_t size) {
  set_has_bigheadimgurl();
  bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsContactInfo.BigHeadImgUrl)
}
::std::string* LbsContactInfo::mutable_bigheadimgurl() {
  set_has_bigheadimgurl();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.BigHeadImgUrl)
  return bigheadimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsContactInfo::release_bigheadimgurl() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.BigHeadImgUrl)
  clear_has_bigheadimgurl();
  return bigheadimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsContactInfo::set_allocated_bigheadimgurl(::std::string* bigheadimgurl) {
  if (bigheadimgurl != NULL) {
    set_has_bigheadimgurl();
  } else {
    clear_has_bigheadimgurl();
  }
  bigheadimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bigheadimgurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.BigHeadImgUrl)
}

// optional string SmallHeadImgUrl = 23;
bool LbsContactInfo::has_smallheadimgurl() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void LbsContactInfo::set_has_smallheadimgurl() {
  _has_bits_[0] |= 0x00002000u;
}
void LbsContactInfo::clear_has_smallheadimgurl() {
  _has_bits_[0] &= ~0x00002000u;
}
void LbsContactInfo::clear_smallheadimgurl() {
  smallheadimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_smallheadimgurl();
}
const ::std::string& LbsContactInfo::smallheadimgurl() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.SmallHeadImgUrl)
  return smallheadimgurl_.GetNoArena();
}
void LbsContactInfo::set_smallheadimgurl(const ::std::string& value) {
  set_has_smallheadimgurl();
  smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.SmallHeadImgUrl)
}
#if LANG_CXX11
void LbsContactInfo::set_smallheadimgurl(::std::string&& value) {
  set_has_smallheadimgurl();
  smallheadimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsContactInfo.SmallHeadImgUrl)
}
#endif
void LbsContactInfo::set_smallheadimgurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_smallheadimgurl();
  smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsContactInfo.SmallHeadImgUrl)
}
void LbsContactInfo::set_smallheadimgurl(const char* value, size_t size) {
  set_has_smallheadimgurl();
  smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsContactInfo.SmallHeadImgUrl)
}
::std::string* LbsContactInfo::mutable_smallheadimgurl() {
  set_has_smallheadimgurl();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.SmallHeadImgUrl)
  return smallheadimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsContactInfo::release_smallheadimgurl() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.SmallHeadImgUrl)
  clear_has_smallheadimgurl();
  return smallheadimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsContactInfo::set_allocated_smallheadimgurl(::std::string* smallheadimgurl) {
  if (smallheadimgurl != NULL) {
    set_has_smallheadimgurl();
  } else {
    clear_has_smallheadimgurl();
  }
  smallheadimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smallheadimgurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.SmallHeadImgUrl)
}

// optional string MyBrandList = 24;
bool LbsContactInfo::has_mybrandlist() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void LbsContactInfo::set_has_mybrandlist() {
  _has_bits_[0] |= 0x00004000u;
}
void LbsContactInfo::clear_has_mybrandlist() {
  _has_bits_[0] &= ~0x00004000u;
}
void LbsContactInfo::clear_mybrandlist() {
  mybrandlist_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mybrandlist();
}
const ::std::string& LbsContactInfo::mybrandlist() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.MyBrandList)
  return mybrandlist_.GetNoArena();
}
void LbsContactInfo::set_mybrandlist(const ::std::string& value) {
  set_has_mybrandlist();
  mybrandlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.MyBrandList)
}
#if LANG_CXX11
void LbsContactInfo::set_mybrandlist(::std::string&& value) {
  set_has_mybrandlist();
  mybrandlist_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsContactInfo.MyBrandList)
}
#endif
void LbsContactInfo::set_mybrandlist(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mybrandlist();
  mybrandlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsContactInfo.MyBrandList)
}
void LbsContactInfo::set_mybrandlist(const char* value, size_t size) {
  set_has_mybrandlist();
  mybrandlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsContactInfo.MyBrandList)
}
::std::string* LbsContactInfo::mutable_mybrandlist() {
  set_has_mybrandlist();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.MyBrandList)
  return mybrandlist_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsContactInfo::release_mybrandlist() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.MyBrandList)
  clear_has_mybrandlist();
  return mybrandlist_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsContactInfo::set_allocated_mybrandlist(::std::string* mybrandlist) {
  if (mybrandlist != NULL) {
    set_has_mybrandlist();
  } else {
    clear_has_mybrandlist();
  }
  mybrandlist_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mybrandlist);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.MyBrandList)
}

// optional .micromsg.CustomizedInfo CustomizedInfo = 25;
bool LbsContactInfo::has_customizedinfo() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void LbsContactInfo::set_has_customizedinfo() {
  _has_bits_[0] |= 0x00020000u;
}
void LbsContactInfo::clear_has_customizedinfo() {
  _has_bits_[0] &= ~0x00020000u;
}
void LbsContactInfo::clear_customizedinfo() {
  if (customizedinfo_ != NULL) customizedinfo_->::micromsg::CustomizedInfo::Clear();
  clear_has_customizedinfo();
}
const ::micromsg::CustomizedInfo& LbsContactInfo::customizedinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.CustomizedInfo)
  return customizedinfo_ != NULL ? *customizedinfo_
                         : *::micromsg::CustomizedInfo::internal_default_instance();
}
::micromsg::CustomizedInfo* LbsContactInfo::mutable_customizedinfo() {
  set_has_customizedinfo();
  if (customizedinfo_ == NULL) {
    customizedinfo_ = new ::micromsg::CustomizedInfo;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.CustomizedInfo)
  return customizedinfo_;
}
::micromsg::CustomizedInfo* LbsContactInfo::release_customizedinfo() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.CustomizedInfo)
  clear_has_customizedinfo();
  ::micromsg::CustomizedInfo* temp = customizedinfo_;
  customizedinfo_ = NULL;
  return temp;
}
void LbsContactInfo::set_allocated_customizedinfo(::micromsg::CustomizedInfo* customizedinfo) {
  delete customizedinfo_;
  customizedinfo_ = customizedinfo;
  if (customizedinfo) {
    set_has_customizedinfo();
  } else {
    clear_has_customizedinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.CustomizedInfo)
}

// optional string AntispamTicket = 26;
bool LbsContactInfo::has_antispamticket() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void LbsContactInfo::set_has_antispamticket() {
  _has_bits_[0] |= 0x00008000u;
}
void LbsContactInfo::clear_has_antispamticket() {
  _has_bits_[0] &= ~0x00008000u;
}
void LbsContactInfo::clear_antispamticket() {
  antispamticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_antispamticket();
}
const ::std::string& LbsContactInfo::antispamticket() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.AntispamTicket)
  return antispamticket_.GetNoArena();
}
void LbsContactInfo::set_antispamticket(const ::std::string& value) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.AntispamTicket)
}
#if LANG_CXX11
void LbsContactInfo::set_antispamticket(::std::string&& value) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsContactInfo.AntispamTicket)
}
#endif
void LbsContactInfo::set_antispamticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsContactInfo.AntispamTicket)
}
void LbsContactInfo::set_antispamticket(const char* value, size_t size) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsContactInfo.AntispamTicket)
}
::std::string* LbsContactInfo::mutable_antispamticket() {
  set_has_antispamticket();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.AntispamTicket)
  return antispamticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsContactInfo::release_antispamticket() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.AntispamTicket)
  clear_has_antispamticket();
  return antispamticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsContactInfo::set_allocated_antispamticket(::std::string* antispamticket) {
  if (antispamticket != NULL) {
    set_has_antispamticket();
  } else {
    clear_has_antispamticket();
  }
  antispamticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), antispamticket);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.AntispamTicket)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LbsResponse::kBaseResponseFieldNumber;
const int LbsResponse::kContactCountFieldNumber;
const int LbsResponse::kContactListFieldNumber;
const int LbsResponse::kStateFieldNumber;
const int LbsResponse::kFlushTimeFieldNumber;
const int LbsResponse::kIsShowRoomFieldNumber;
const int LbsResponse::kRoomMemberCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LbsResponse::LbsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.LbsResponse)
}
LbsResponse::LbsResponse(const LbsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      contactlist_(from.contactlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  ::memcpy(&contactcount_, &from.contactcount_,
    reinterpret_cast<char*>(&roommembercount_) -
    reinterpret_cast<char*>(&contactcount_) + sizeof(roommembercount_));
  // @@protoc_insertion_point(copy_constructor:micromsg.LbsResponse)
}

void LbsResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&roommembercount_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(roommembercount_));
}

LbsResponse::~LbsResponse() {
  // @@protoc_insertion_point(destructor:micromsg.LbsResponse)
  SharedDtor();
}

void LbsResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void LbsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LbsResponse::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LbsResponse& LbsResponse::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

LbsResponse* LbsResponse::New(::google::protobuf::Arena* arena) const {
  LbsResponse* n = new LbsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LbsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.LbsResponse)
  contactlist_.Clear();
  if (has_baseresponse()) {
    GOOGLE_DCHECK(baseresponse_ != NULL);
    baseresponse_->::micromsg::BaseResponse::Clear();
  }
  if (_has_bits_[0 / 32] & 62u) {
    ::memset(&contactcount_, 0, reinterpret_cast<char*>(&roommembercount_) -
      reinterpret_cast<char*>(&contactcount_) + sizeof(roommembercount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LbsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.LbsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ContactCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_contactcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &contactcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.LbsContactInfo ContactList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_contactlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 State = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 FlushTime = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_flushtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flushtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 IsShowRoom = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_isshowroom();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &isshowroom_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 RoomMemberCount = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_roommembercount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &roommembercount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.LbsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.LbsResponse)
  return false;
#undef DO_
}

void LbsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.LbsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // required uint32 ContactCount = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->contactcount(), output);
  }

  // repeated .micromsg.LbsContactInfo ContactList = 3;
  for (unsigned int i = 0, n = this->contactlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->contactlist(i), output);
  }

  // optional uint32 State = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->state(), output);
  }

  // optional uint32 FlushTime = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->flushtime(), output);
  }

  // optional uint32 IsShowRoom = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->isshowroom(), output);
  }

  // optional uint32 RoomMemberCount = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->roommembercount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.LbsResponse)
}

::google::protobuf::uint8* LbsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.LbsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // required uint32 ContactCount = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->contactcount(), target);
  }

  // repeated .micromsg.LbsContactInfo ContactList = 3;
  for (unsigned int i = 0, n = this->contactlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->contactlist(i), deterministic, target);
  }

  // optional uint32 State = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->state(), target);
  }

  // optional uint32 FlushTime = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->flushtime(), target);
  }

  // optional uint32 IsShowRoom = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->isshowroom(), target);
  }

  // optional uint32 RoomMemberCount = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->roommembercount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.LbsResponse)
  return target;
}

size_t LbsResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.LbsResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_contactcount()) {
    // required uint32 ContactCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->contactcount());
  }

  return total_size;
}
size_t LbsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.LbsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required uint32 ContactCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->contactcount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.LbsContactInfo ContactList = 3;
  {
    unsigned int count = this->contactlist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->contactlist(i));
    }
  }

  if (_has_bits_[0 / 32] & 60u) {
    // optional uint32 State = 4;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->state());
    }

    // optional uint32 FlushTime = 5;
    if (has_flushtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flushtime());
    }

    // optional uint32 IsShowRoom = 6;
    if (has_isshowroom()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->isshowroom());
    }

    // optional uint32 RoomMemberCount = 7;
    if (has_roommembercount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->roommembercount());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LbsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.LbsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LbsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LbsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.LbsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.LbsResponse)
    MergeFrom(*source);
  }
}

void LbsResponse::MergeFrom(const LbsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.LbsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  contactlist_.MergeFrom(from.contactlist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000002u) {
      contactcount_ = from.contactcount_;
    }
    if (cached_has_bits & 0x00000004u) {
      state_ = from.state_;
    }
    if (cached_has_bits & 0x00000008u) {
      flushtime_ = from.flushtime_;
    }
    if (cached_has_bits & 0x00000010u) {
      isshowroom_ = from.isshowroom_;
    }
    if (cached_has_bits & 0x00000020u) {
      roommembercount_ = from.roommembercount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LbsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.LbsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LbsResponse::CopyFrom(const LbsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.LbsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LbsResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->contactlist())) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void LbsResponse::Swap(LbsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LbsResponse::InternalSwap(LbsResponse* other) {
  contactlist_.InternalSwap(&other->contactlist_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(contactcount_, other->contactcount_);
  std::swap(state_, other->state_);
  std::swap(flushtime_, other->flushtime_);
  std::swap(isshowroom_, other->isshowroom_);
  std::swap(roommembercount_, other->roommembercount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LbsResponse::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LbsResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool LbsResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LbsResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
void LbsResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
void LbsResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& LbsResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* LbsResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.LbsResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* LbsResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.LbsResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void LbsResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsResponse.BaseResponse)
}

// required uint32 ContactCount = 2;
bool LbsResponse::has_contactcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LbsResponse::set_has_contactcount() {
  _has_bits_[0] |= 0x00000002u;
}
void LbsResponse::clear_has_contactcount() {
  _has_bits_[0] &= ~0x00000002u;
}
void LbsResponse::clear_contactcount() {
  contactcount_ = 0u;
  clear_has_contactcount();
}
::google::protobuf::uint32 LbsResponse::contactcount() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsResponse.ContactCount)
  return contactcount_;
}
void LbsResponse::set_contactcount(::google::protobuf::uint32 value) {
  set_has_contactcount();
  contactcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsResponse.ContactCount)
}

// repeated .micromsg.LbsContactInfo ContactList = 3;
int LbsResponse::contactlist_size() const {
  return contactlist_.size();
}
void LbsResponse::clear_contactlist() {
  contactlist_.Clear();
}
const ::micromsg::LbsContactInfo& LbsResponse::contactlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.LbsResponse.ContactList)
  return contactlist_.Get(index);
}
::micromsg::LbsContactInfo* LbsResponse::mutable_contactlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.LbsResponse.ContactList)
  return contactlist_.Mutable(index);
}
::micromsg::LbsContactInfo* LbsResponse::add_contactlist() {
  // @@protoc_insertion_point(field_add:micromsg.LbsResponse.ContactList)
  return contactlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::LbsContactInfo >*
LbsResponse::mutable_contactlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.LbsResponse.ContactList)
  return &contactlist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::LbsContactInfo >&
LbsResponse::contactlist() const {
  // @@protoc_insertion_point(field_list:micromsg.LbsResponse.ContactList)
  return contactlist_;
}

// optional uint32 State = 4;
bool LbsResponse::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LbsResponse::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
void LbsResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
void LbsResponse::clear_state() {
  state_ = 0u;
  clear_has_state();
}
::google::protobuf::uint32 LbsResponse::state() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsResponse.State)
  return state_;
}
void LbsResponse::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsResponse.State)
}

// optional uint32 FlushTime = 5;
bool LbsResponse::has_flushtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void LbsResponse::set_has_flushtime() {
  _has_bits_[0] |= 0x00000008u;
}
void LbsResponse::clear_has_flushtime() {
  _has_bits_[0] &= ~0x00000008u;
}
void LbsResponse::clear_flushtime() {
  flushtime_ = 0u;
  clear_has_flushtime();
}
::google::protobuf::uint32 LbsResponse::flushtime() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsResponse.FlushTime)
  return flushtime_;
}
void LbsResponse::set_flushtime(::google::protobuf::uint32 value) {
  set_has_flushtime();
  flushtime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsResponse.FlushTime)
}

// optional uint32 IsShowRoom = 6;
bool LbsResponse::has_isshowroom() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void LbsResponse::set_has_isshowroom() {
  _has_bits_[0] |= 0x00000010u;
}
void LbsResponse::clear_has_isshowroom() {
  _has_bits_[0] &= ~0x00000010u;
}
void LbsResponse::clear_isshowroom() {
  isshowroom_ = 0u;
  clear_has_isshowroom();
}
::google::protobuf::uint32 LbsResponse::isshowroom() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsResponse.IsShowRoom)
  return isshowroom_;
}
void LbsResponse::set_isshowroom(::google::protobuf::uint32 value) {
  set_has_isshowroom();
  isshowroom_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsResponse.IsShowRoom)
}

// optional uint32 RoomMemberCount = 7;
bool LbsResponse::has_roommembercount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void LbsResponse::set_has_roommembercount() {
  _has_bits_[0] |= 0x00000020u;
}
void LbsResponse::clear_has_roommembercount() {
  _has_bits_[0] &= ~0x00000020u;
}
void LbsResponse::clear_roommembercount() {
  roommembercount_ = 0u;
  clear_has_roommembercount();
}
::google::protobuf::uint32 LbsResponse::roommembercount() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsResponse.RoomMemberCount)
  return roommembercount_;
}
void LbsResponse::set_roommembercount(::google::protobuf::uint32 value) {
  set_has_roommembercount();
  roommembercount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsResponse.RoomMemberCount)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlbumLbsContactInfo::kUserNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlbumLbsContactInfo::AlbumLbsContactInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.AlbumLbsContactInfo)
}
AlbumLbsContactInfo::AlbumLbsContactInfo(const AlbumLbsContactInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.AlbumLbsContactInfo)
}

void AlbumLbsContactInfo::SharedCtor() {
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AlbumLbsContactInfo::~AlbumLbsContactInfo() {
  // @@protoc_insertion_point(destructor:micromsg.AlbumLbsContactInfo)
  SharedDtor();
}

void AlbumLbsContactInfo::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AlbumLbsContactInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AlbumLbsContactInfo::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AlbumLbsContactInfo& AlbumLbsContactInfo::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

AlbumLbsContactInfo* AlbumLbsContactInfo::New(::google::protobuf::Arena* arena) const {
  AlbumLbsContactInfo* n = new AlbumLbsContactInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AlbumLbsContactInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.AlbumLbsContactInfo)
  if (has_username()) {
    GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*username_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AlbumLbsContactInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.AlbumLbsContactInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string UserName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.AlbumLbsContactInfo.UserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.AlbumLbsContactInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.AlbumLbsContactInfo)
  return false;
#undef DO_
}

void AlbumLbsContactInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.AlbumLbsContactInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string UserName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AlbumLbsContactInfo.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.AlbumLbsContactInfo)
}

::google::protobuf::uint8* AlbumLbsContactInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.AlbumLbsContactInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string UserName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AlbumLbsContactInfo.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.AlbumLbsContactInfo)
  return target;
}

size_t AlbumLbsContactInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.AlbumLbsContactInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string UserName = 1;
  if (has_username()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AlbumLbsContactInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.AlbumLbsContactInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AlbumLbsContactInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AlbumLbsContactInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.AlbumLbsContactInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.AlbumLbsContactInfo)
    MergeFrom(*source);
  }
}

void AlbumLbsContactInfo::MergeFrom(const AlbumLbsContactInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.AlbumLbsContactInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_username()) {
    set_has_username();
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
}

void AlbumLbsContactInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.AlbumLbsContactInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlbumLbsContactInfo::CopyFrom(const AlbumLbsContactInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.AlbumLbsContactInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlbumLbsContactInfo::IsInitialized() const {
  return true;
}

void AlbumLbsContactInfo::Swap(AlbumLbsContactInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlbumLbsContactInfo::InternalSwap(AlbumLbsContactInfo* other) {
  username_.Swap(&other->username_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AlbumLbsContactInfo::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AlbumLbsContactInfo

// optional string UserName = 1;
bool AlbumLbsContactInfo::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AlbumLbsContactInfo::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
void AlbumLbsContactInfo::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
void AlbumLbsContactInfo::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& AlbumLbsContactInfo::username() const {
  // @@protoc_insertion_point(field_get:micromsg.AlbumLbsContactInfo.UserName)
  return username_.GetNoArena();
}
void AlbumLbsContactInfo::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AlbumLbsContactInfo.UserName)
}
#if LANG_CXX11
void AlbumLbsContactInfo::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AlbumLbsContactInfo.UserName)
}
#endif
void AlbumLbsContactInfo::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AlbumLbsContactInfo.UserName)
}
void AlbumLbsContactInfo::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AlbumLbsContactInfo.UserName)
}
::std::string* AlbumLbsContactInfo::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.AlbumLbsContactInfo.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AlbumLbsContactInfo::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.AlbumLbsContactInfo.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AlbumLbsContactInfo::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AlbumLbsContactInfo.UserName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AlbumLbsResponse::kBaseResponseFieldNumber;
const int AlbumLbsResponse::kContactCountFieldNumber;
const int AlbumLbsResponse::kContactListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AlbumLbsResponse::AlbumLbsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.AlbumLbsResponse)
}
AlbumLbsResponse::AlbumLbsResponse(const AlbumLbsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      contactlist_(from.contactlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  contactcount_ = from.contactcount_;
  // @@protoc_insertion_point(copy_constructor:micromsg.AlbumLbsResponse)
}

void AlbumLbsResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&contactcount_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(contactcount_));
}

AlbumLbsResponse::~AlbumLbsResponse() {
  // @@protoc_insertion_point(destructor:micromsg.AlbumLbsResponse)
  SharedDtor();
}

void AlbumLbsResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void AlbumLbsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AlbumLbsResponse::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AlbumLbsResponse& AlbumLbsResponse::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

AlbumLbsResponse* AlbumLbsResponse::New(::google::protobuf::Arena* arena) const {
  AlbumLbsResponse* n = new AlbumLbsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AlbumLbsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.AlbumLbsResponse)
  contactlist_.Clear();
  if (has_baseresponse()) {
    GOOGLE_DCHECK(baseresponse_ != NULL);
    baseresponse_->::micromsg::BaseResponse::Clear();
  }
  contactcount_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AlbumLbsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.AlbumLbsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ContactCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_contactcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &contactcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.AlbumLbsContactInfo ContactList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_contactlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.AlbumLbsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.AlbumLbsResponse)
  return false;
#undef DO_
}

void AlbumLbsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.AlbumLbsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // required uint32 ContactCount = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->contactcount(), output);
  }

  // repeated .micromsg.AlbumLbsContactInfo ContactList = 3;
  for (unsigned int i = 0, n = this->contactlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->contactlist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.AlbumLbsResponse)
}

::google::protobuf::uint8* AlbumLbsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.AlbumLbsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // required uint32 ContactCount = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->contactcount(), target);
  }

  // repeated .micromsg.AlbumLbsContactInfo ContactList = 3;
  for (unsigned int i = 0, n = this->contactlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->contactlist(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.AlbumLbsResponse)
  return target;
}

size_t AlbumLbsResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.AlbumLbsResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_contactcount()) {
    // required uint32 ContactCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->contactcount());
  }

  return total_size;
}
size_t AlbumLbsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.AlbumLbsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required uint32 ContactCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->contactcount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.AlbumLbsContactInfo ContactList = 3;
  {
    unsigned int count = this->contactlist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->contactlist(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AlbumLbsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.AlbumLbsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AlbumLbsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AlbumLbsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.AlbumLbsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.AlbumLbsResponse)
    MergeFrom(*source);
  }
}

void AlbumLbsResponse::MergeFrom(const AlbumLbsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.AlbumLbsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  contactlist_.MergeFrom(from.contactlist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000002u) {
      contactcount_ = from.contactcount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AlbumLbsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.AlbumLbsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlbumLbsResponse::CopyFrom(const AlbumLbsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.AlbumLbsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlbumLbsResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void AlbumLbsResponse::Swap(AlbumLbsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AlbumLbsResponse::InternalSwap(AlbumLbsResponse* other) {
  contactlist_.InternalSwap(&other->contactlist_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(contactcount_, other->contactcount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AlbumLbsResponse::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AlbumLbsResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool AlbumLbsResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AlbumLbsResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
void AlbumLbsResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
void AlbumLbsResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& AlbumLbsResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.AlbumLbsResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* AlbumLbsResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.AlbumLbsResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* AlbumLbsResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.AlbumLbsResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void AlbumLbsResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.AlbumLbsResponse.BaseResponse)
}

// required uint32 ContactCount = 2;
bool AlbumLbsResponse::has_contactcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AlbumLbsResponse::set_has_contactcount() {
  _has_bits_[0] |= 0x00000002u;
}
void AlbumLbsResponse::clear_has_contactcount() {
  _has_bits_[0] &= ~0x00000002u;
}
void AlbumLbsResponse::clear_contactcount() {
  contactcount_ = 0u;
  clear_has_contactcount();
}
::google::protobuf::uint32 AlbumLbsResponse::contactcount() const {
  // @@protoc_insertion_point(field_get:micromsg.AlbumLbsResponse.ContactCount)
  return contactcount_;
}
void AlbumLbsResponse::set_contactcount(::google::protobuf::uint32 value) {
  set_has_contactcount();
  contactcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AlbumLbsResponse.ContactCount)
}

// repeated .micromsg.AlbumLbsContactInfo ContactList = 3;
int AlbumLbsResponse::contactlist_size() const {
  return contactlist_.size();
}
void AlbumLbsResponse::clear_contactlist() {
  contactlist_.Clear();
}
const ::micromsg::AlbumLbsContactInfo& AlbumLbsResponse::contactlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.AlbumLbsResponse.ContactList)
  return contactlist_.Get(index);
}
::micromsg::AlbumLbsContactInfo* AlbumLbsResponse::mutable_contactlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.AlbumLbsResponse.ContactList)
  return contactlist_.Mutable(index);
}
::micromsg::AlbumLbsContactInfo* AlbumLbsResponse::add_contactlist() {
  // @@protoc_insertion_point(field_add:micromsg.AlbumLbsResponse.ContactList)
  return contactlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::AlbumLbsContactInfo >*
AlbumLbsResponse::mutable_contactlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.AlbumLbsResponse.ContactList)
  return &contactlist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::AlbumLbsContactInfo >&
AlbumLbsResponse::contactlist() const {
  // @@protoc_insertion_point(field_list:micromsg.AlbumLbsResponse.ContactList)
  return contactlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShakeReportRequest::kBaseRequestFieldNumber;
const int ShakeReportRequest::kOpCodeFieldNumber;
const int ShakeReportRequest::kLongitudeFieldNumber;
const int ShakeReportRequest::kLatitudeFieldNumber;
const int ShakeReportRequest::kPrecisionFieldNumber;
const int ShakeReportRequest::kMacAddrFieldNumber;
const int ShakeReportRequest::kCellIdFieldNumber;
const int ShakeReportRequest::kImgIdFieldNumber;
const int ShakeReportRequest::kTimesFieldNumber;
const int ShakeReportRequest::kGPSSourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShakeReportRequest::ShakeReportRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.ShakeReportRequest)
}
ShakeReportRequest::ShakeReportRequest(const ShakeReportRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  macaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_macaddr()) {
    macaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macaddr_);
  }
  cellid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cellid()) {
    cellid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cellid_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  ::memcpy(&opcode_, &from.opcode_,
    reinterpret_cast<char*>(&gpssource_) -
    reinterpret_cast<char*>(&opcode_) + sizeof(gpssource_));
  // @@protoc_insertion_point(copy_constructor:micromsg.ShakeReportRequest)
}

void ShakeReportRequest::SharedCtor() {
  _cached_size_ = 0;
  macaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cellid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&gpssource_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(gpssource_));
}

ShakeReportRequest::~ShakeReportRequest() {
  // @@protoc_insertion_point(destructor:micromsg.ShakeReportRequest)
  SharedDtor();
}

void ShakeReportRequest::SharedDtor() {
  macaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cellid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void ShakeReportRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShakeReportRequest::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShakeReportRequest& ShakeReportRequest::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShakeReportRequest* ShakeReportRequest::New(::google::protobuf::Arena* arena) const {
  ShakeReportRequest* n = new ShakeReportRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShakeReportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.ShakeReportRequest)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_macaddr()) {
      GOOGLE_DCHECK(!macaddr_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*macaddr_.UnsafeRawStringPointer())->clear();
    }
    if (has_cellid()) {
      GOOGLE_DCHECK(!cellid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*cellid_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 248u) {
    ::memset(&opcode_, 0, reinterpret_cast<char*>(&imgid_) -
      reinterpret_cast<char*>(&opcode_) + sizeof(imgid_));
  }
  if (_has_bits_[8 / 32] & 768u) {
    ::memset(&times_, 0, reinterpret_cast<char*>(&gpssource_) -
      reinterpret_cast<char*>(&times_) + sizeof(gpssource_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShakeReportRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.ShakeReportRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 OpCode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_opcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &opcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float Longitude = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u)) {
          set_has_longitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float Latitude = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u)) {
          set_has_latitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 Precision = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_precision();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &precision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string MacAddr = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_macaddr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->macaddr().data(), this->macaddr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.ShakeReportRequest.MacAddr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string CellId = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cellid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cellid().data(), this->cellid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.ShakeReportRequest.CellId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ImgId = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_imgid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &imgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Times = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_times();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &times_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 GPSSource = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has_gpssource();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gpssource_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.ShakeReportRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.ShakeReportRequest)
  return false;
#undef DO_
}

void ShakeReportRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.ShakeReportRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required uint32 OpCode = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->opcode(), output);
  }

  // required float Longitude = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->longitude(), output);
  }

  // required float Latitude = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->latitude(), output);
  }

  // required int32 Precision = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->precision(), output);
  }

  // optional string MacAddr = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->macaddr().data(), this->macaddr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeReportRequest.MacAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->macaddr(), output);
  }

  // optional string CellId = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cellid().data(), this->cellid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeReportRequest.CellId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->cellid(), output);
  }

  // required uint32 ImgId = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->imgid(), output);
  }

  // required uint32 Times = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->times(), output);
  }

  // optional int32 GPSSource = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->gpssource(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.ShakeReportRequest)
}

::google::protobuf::uint8* ShakeReportRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.ShakeReportRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required uint32 OpCode = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->opcode(), target);
  }

  // required float Longitude = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->longitude(), target);
  }

  // required float Latitude = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->latitude(), target);
  }

  // required int32 Precision = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->precision(), target);
  }

  // optional string MacAddr = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->macaddr().data(), this->macaddr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeReportRequest.MacAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->macaddr(), target);
  }

  // optional string CellId = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cellid().data(), this->cellid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeReportRequest.CellId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->cellid(), target);
  }

  // required uint32 ImgId = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->imgid(), target);
  }

  // required uint32 Times = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->times(), target);
  }

  // optional int32 GPSSource = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->gpssource(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.ShakeReportRequest)
  return target;
}

size_t ShakeReportRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.ShakeReportRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_opcode()) {
    // required uint32 OpCode = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opcode());
  }

  if (has_longitude()) {
    // required float Longitude = 3;
    total_size += 1 + 4;
  }

  if (has_latitude()) {
    // required float Latitude = 4;
    total_size += 1 + 4;
  }

  if (has_precision()) {
    // required int32 Precision = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->precision());
  }

  if (has_imgid()) {
    // required uint32 ImgId = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imgid());
  }

  if (has_times()) {
    // required uint32 Times = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->times());
  }

  return total_size;
}
size_t ShakeReportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.ShakeReportRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x000001fc) ^ 0x000001fc) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required uint32 OpCode = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opcode());

    // required float Longitude = 3;
    total_size += 1 + 4;

    // required float Latitude = 4;
    total_size += 1 + 4;

    // required int32 Precision = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->precision());

    // required uint32 ImgId = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imgid());

    // required uint32 Times = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->times());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string MacAddr = 6;
    if (has_macaddr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->macaddr());
    }

    // optional string CellId = 7;
    if (has_cellid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cellid());
    }

  }
  // optional int32 GPSSource = 10;
  if (has_gpssource()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gpssource());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShakeReportRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.ShakeReportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ShakeReportRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShakeReportRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.ShakeReportRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.ShakeReportRequest)
    MergeFrom(*source);
  }
}

void ShakeReportRequest::MergeFrom(const ShakeReportRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.ShakeReportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_macaddr();
      macaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macaddr_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_cellid();
      cellid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cellid_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000008u) {
      opcode_ = from.opcode_;
    }
    if (cached_has_bits & 0x00000010u) {
      longitude_ = from.longitude_;
    }
    if (cached_has_bits & 0x00000020u) {
      latitude_ = from.latitude_;
    }
    if (cached_has_bits & 0x00000040u) {
      precision_ = from.precision_;
    }
    if (cached_has_bits & 0x00000080u) {
      imgid_ = from.imgid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      times_ = from.times_;
    }
    if (cached_has_bits & 0x00000200u) {
      gpssource_ = from.gpssource_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShakeReportRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.ShakeReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShakeReportRequest::CopyFrom(const ShakeReportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.ShakeReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShakeReportRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001fc) != 0x000001fc) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void ShakeReportRequest::Swap(ShakeReportRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShakeReportRequest::InternalSwap(ShakeReportRequest* other) {
  macaddr_.Swap(&other->macaddr_);
  cellid_.Swap(&other->cellid_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(opcode_, other->opcode_);
  std::swap(longitude_, other->longitude_);
  std::swap(latitude_, other->latitude_);
  std::swap(precision_, other->precision_);
  std::swap(imgid_, other->imgid_);
  std::swap(times_, other->times_);
  std::swap(gpssource_, other->gpssource_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShakeReportRequest::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShakeReportRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool ShakeReportRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ShakeReportRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000004u;
}
void ShakeReportRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000004u;
}
void ShakeReportRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& ShakeReportRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeReportRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* ShakeReportRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeReportRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* ShakeReportRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeReportRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void ShakeReportRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeReportRequest.BaseRequest)
}

// required uint32 OpCode = 2;
bool ShakeReportRequest::has_opcode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ShakeReportRequest::set_has_opcode() {
  _has_bits_[0] |= 0x00000008u;
}
void ShakeReportRequest::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000008u;
}
void ShakeReportRequest::clear_opcode() {
  opcode_ = 0u;
  clear_has_opcode();
}
::google::protobuf::uint32 ShakeReportRequest::opcode() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeReportRequest.OpCode)
  return opcode_;
}
void ShakeReportRequest::set_opcode(::google::protobuf::uint32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeReportRequest.OpCode)
}

// required float Longitude = 3;
bool ShakeReportRequest::has_longitude() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ShakeReportRequest::set_has_longitude() {
  _has_bits_[0] |= 0x00000010u;
}
void ShakeReportRequest::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000010u;
}
void ShakeReportRequest::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
float ShakeReportRequest::longitude() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeReportRequest.Longitude)
  return longitude_;
}
void ShakeReportRequest::set_longitude(float value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeReportRequest.Longitude)
}

// required float Latitude = 4;
bool ShakeReportRequest::has_latitude() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ShakeReportRequest::set_has_latitude() {
  _has_bits_[0] |= 0x00000020u;
}
void ShakeReportRequest::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000020u;
}
void ShakeReportRequest::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
float ShakeReportRequest::latitude() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeReportRequest.Latitude)
  return latitude_;
}
void ShakeReportRequest::set_latitude(float value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeReportRequest.Latitude)
}

// required int32 Precision = 5;
bool ShakeReportRequest::has_precision() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ShakeReportRequest::set_has_precision() {
  _has_bits_[0] |= 0x00000040u;
}
void ShakeReportRequest::clear_has_precision() {
  _has_bits_[0] &= ~0x00000040u;
}
void ShakeReportRequest::clear_precision() {
  precision_ = 0;
  clear_has_precision();
}
::google::protobuf::int32 ShakeReportRequest::precision() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeReportRequest.Precision)
  return precision_;
}
void ShakeReportRequest::set_precision(::google::protobuf::int32 value) {
  set_has_precision();
  precision_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeReportRequest.Precision)
}

// optional string MacAddr = 6;
bool ShakeReportRequest::has_macaddr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShakeReportRequest::set_has_macaddr() {
  _has_bits_[0] |= 0x00000001u;
}
void ShakeReportRequest::clear_has_macaddr() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShakeReportRequest::clear_macaddr() {
  macaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_macaddr();
}
const ::std::string& ShakeReportRequest::macaddr() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeReportRequest.MacAddr)
  return macaddr_.GetNoArena();
}
void ShakeReportRequest::set_macaddr(const ::std::string& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeReportRequest.MacAddr)
}
#if LANG_CXX11
void ShakeReportRequest::set_macaddr(::std::string&& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeReportRequest.MacAddr)
}
#endif
void ShakeReportRequest::set_macaddr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeReportRequest.MacAddr)
}
void ShakeReportRequest::set_macaddr(const char* value, size_t size) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeReportRequest.MacAddr)
}
::std::string* ShakeReportRequest::mutable_macaddr() {
  set_has_macaddr();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeReportRequest.MacAddr)
  return macaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakeReportRequest::release_macaddr() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeReportRequest.MacAddr)
  clear_has_macaddr();
  return macaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakeReportRequest::set_allocated_macaddr(::std::string* macaddr) {
  if (macaddr != NULL) {
    set_has_macaddr();
  } else {
    clear_has_macaddr();
  }
  macaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), macaddr);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeReportRequest.MacAddr)
}

// optional string CellId = 7;
bool ShakeReportRequest::has_cellid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ShakeReportRequest::set_has_cellid() {
  _has_bits_[0] |= 0x00000002u;
}
void ShakeReportRequest::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000002u;
}
void ShakeReportRequest::clear_cellid() {
  cellid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cellid();
}
const ::std::string& ShakeReportRequest::cellid() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeReportRequest.CellId)
  return cellid_.GetNoArena();
}
void ShakeReportRequest::set_cellid(const ::std::string& value) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeReportRequest.CellId)
}
#if LANG_CXX11
void ShakeReportRequest::set_cellid(::std::string&& value) {
  set_has_cellid();
  cellid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeReportRequest.CellId)
}
#endif
void ShakeReportRequest::set_cellid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeReportRequest.CellId)
}
void ShakeReportRequest::set_cellid(const char* value, size_t size) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeReportRequest.CellId)
}
::std::string* ShakeReportRequest::mutable_cellid() {
  set_has_cellid();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeReportRequest.CellId)
  return cellid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakeReportRequest::release_cellid() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeReportRequest.CellId)
  clear_has_cellid();
  return cellid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakeReportRequest::set_allocated_cellid(::std::string* cellid) {
  if (cellid != NULL) {
    set_has_cellid();
  } else {
    clear_has_cellid();
  }
  cellid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cellid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeReportRequest.CellId)
}

// required uint32 ImgId = 8;
bool ShakeReportRequest::has_imgid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ShakeReportRequest::set_has_imgid() {
  _has_bits_[0] |= 0x00000080u;
}
void ShakeReportRequest::clear_has_imgid() {
  _has_bits_[0] &= ~0x00000080u;
}
void ShakeReportRequest::clear_imgid() {
  imgid_ = 0u;
  clear_has_imgid();
}
::google::protobuf::uint32 ShakeReportRequest::imgid() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeReportRequest.ImgId)
  return imgid_;
}
void ShakeReportRequest::set_imgid(::google::protobuf::uint32 value) {
  set_has_imgid();
  imgid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeReportRequest.ImgId)
}

// required uint32 Times = 9;
bool ShakeReportRequest::has_times() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void ShakeReportRequest::set_has_times() {
  _has_bits_[0] |= 0x00000100u;
}
void ShakeReportRequest::clear_has_times() {
  _has_bits_[0] &= ~0x00000100u;
}
void ShakeReportRequest::clear_times() {
  times_ = 0u;
  clear_has_times();
}
::google::protobuf::uint32 ShakeReportRequest::times() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeReportRequest.Times)
  return times_;
}
void ShakeReportRequest::set_times(::google::protobuf::uint32 value) {
  set_has_times();
  times_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeReportRequest.Times)
}

// optional int32 GPSSource = 10;
bool ShakeReportRequest::has_gpssource() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void ShakeReportRequest::set_has_gpssource() {
  _has_bits_[0] |= 0x00000200u;
}
void ShakeReportRequest::clear_has_gpssource() {
  _has_bits_[0] &= ~0x00000200u;
}
void ShakeReportRequest::clear_gpssource() {
  gpssource_ = 0;
  clear_has_gpssource();
}
::google::protobuf::int32 ShakeReportRequest::gpssource() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeReportRequest.GPSSource)
  return gpssource_;
}
void ShakeReportRequest::set_gpssource(::google::protobuf::int32 value) {
  set_has_gpssource();
  gpssource_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeReportRequest.GPSSource)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShakeBuffer::kReportTimeFieldNumber;
const int ShakeBuffer::kXFieldNumber;
const int ShakeBuffer::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShakeBuffer::ShakeBuffer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.ShakeBuffer)
}
ShakeBuffer::ShakeBuffer(const ShakeBuffer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&reporttime_, &from.reporttime_,
    reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&reporttime_) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:micromsg.ShakeBuffer)
}

void ShakeBuffer::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&reporttime_, 0, reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&reporttime_) + sizeof(y_));
}

ShakeBuffer::~ShakeBuffer() {
  // @@protoc_insertion_point(destructor:micromsg.ShakeBuffer)
  SharedDtor();
}

void ShakeBuffer::SharedDtor() {
}

void ShakeBuffer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShakeBuffer::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShakeBuffer& ShakeBuffer::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShakeBuffer* ShakeBuffer::New(::google::protobuf::Arena* arena) const {
  ShakeBuffer* n = new ShakeBuffer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShakeBuffer::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.ShakeBuffer)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&reporttime_, 0, reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&reporttime_) + sizeof(y_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShakeBuffer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.ShakeBuffer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ReportTime = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_reporttime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reporttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 X = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_y();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.ShakeBuffer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.ShakeBuffer)
  return false;
#undef DO_
}

void ShakeBuffer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.ShakeBuffer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 ReportTime = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->reporttime(), output);
  }

  // required uint32 X = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->x(), output);
  }

  // required uint32 Y = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.ShakeBuffer)
}

::google::protobuf::uint8* ShakeBuffer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.ShakeBuffer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 ReportTime = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->reporttime(), target);
  }

  // required uint32 X = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->x(), target);
  }

  // required uint32 Y = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.ShakeBuffer)
  return target;
}

size_t ShakeBuffer::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.ShakeBuffer)
  size_t total_size = 0;

  if (has_reporttime()) {
    // required uint32 ReportTime = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reporttime());
  }

  if (has_x()) {
    // required uint32 X = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->x());
  }

  if (has_y()) {
    // required uint32 Y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->y());
  }

  return total_size;
}
size_t ShakeBuffer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.ShakeBuffer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint32 ReportTime = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reporttime());

    // required uint32 X = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->x());

    // required uint32 Y = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->y());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShakeBuffer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.ShakeBuffer)
  GOOGLE_DCHECK_NE(&from, this);
  const ShakeBuffer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShakeBuffer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.ShakeBuffer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.ShakeBuffer)
    MergeFrom(*source);
  }
}

void ShakeBuffer::MergeFrom(const ShakeBuffer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.ShakeBuffer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      reporttime_ = from.reporttime_;
    }
    if (cached_has_bits & 0x00000002u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000004u) {
      y_ = from.y_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShakeBuffer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.ShakeBuffer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShakeBuffer::CopyFrom(const ShakeBuffer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.ShakeBuffer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShakeBuffer::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void ShakeBuffer::Swap(ShakeBuffer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShakeBuffer::InternalSwap(ShakeBuffer* other) {
  std::swap(reporttime_, other->reporttime_);
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShakeBuffer::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShakeBuffer

// required uint32 ReportTime = 1;
bool ShakeBuffer::has_reporttime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShakeBuffer::set_has_reporttime() {
  _has_bits_[0] |= 0x00000001u;
}
void ShakeBuffer::clear_has_reporttime() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShakeBuffer::clear_reporttime() {
  reporttime_ = 0u;
  clear_has_reporttime();
}
::google::protobuf::uint32 ShakeBuffer::reporttime() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeBuffer.ReportTime)
  return reporttime_;
}
void ShakeBuffer::set_reporttime(::google::protobuf::uint32 value) {
  set_has_reporttime();
  reporttime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeBuffer.ReportTime)
}

// required uint32 X = 2;
bool ShakeBuffer::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ShakeBuffer::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
void ShakeBuffer::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
void ShakeBuffer::clear_x() {
  x_ = 0u;
  clear_has_x();
}
::google::protobuf::uint32 ShakeBuffer::x() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeBuffer.X)
  return x_;
}
void ShakeBuffer::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeBuffer.X)
}

// required uint32 Y = 3;
bool ShakeBuffer::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ShakeBuffer::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
void ShakeBuffer::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
void ShakeBuffer::clear_y() {
  y_ = 0u;
  clear_has_y();
}
::google::protobuf::uint32 ShakeBuffer::y() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeBuffer.Y)
  return y_;
}
void ShakeBuffer::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeBuffer.Y)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShakeReportResponse::kBaseResponseFieldNumber;
const int ShakeReportResponse::kBufferFieldNumber;
const int ShakeReportResponse::kRetFieldNumber;
const int ShakeReportResponse::kImgIdFieldNumber;
const int ShakeReportResponse::kImgTotoalLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShakeReportResponse::ShakeReportResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.ShakeReportResponse)
}
ShakeReportResponse::ShakeReportResponse(const ShakeReportResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  if (from.has_buffer()) {
    buffer_ = new ::micromsg::SKBuiltinBuffer_t(*from.buffer_);
  } else {
    buffer_ = NULL;
  }
  ::memcpy(&ret_, &from.ret_,
    reinterpret_cast<char*>(&imgtotoallen_) -
    reinterpret_cast<char*>(&ret_) + sizeof(imgtotoallen_));
  // @@protoc_insertion_point(copy_constructor:micromsg.ShakeReportResponse)
}

void ShakeReportResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&imgtotoallen_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(imgtotoallen_));
}

ShakeReportResponse::~ShakeReportResponse() {
  // @@protoc_insertion_point(destructor:micromsg.ShakeReportResponse)
  SharedDtor();
}

void ShakeReportResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
  if (this != internal_default_instance()) {
    delete buffer_;
  }
}

void ShakeReportResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShakeReportResponse::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShakeReportResponse& ShakeReportResponse::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShakeReportResponse* ShakeReportResponse::New(::google::protobuf::Arena* arena) const {
  ShakeReportResponse* n = new ShakeReportResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShakeReportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.ShakeReportResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
    if (has_buffer()) {
      GOOGLE_DCHECK(buffer_ != NULL);
      buffer_->::micromsg::SKBuiltinBuffer_t::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 28u) {
    ::memset(&ret_, 0, reinterpret_cast<char*>(&imgtotoallen_) -
      reinterpret_cast<char*>(&ret_) + sizeof(imgtotoallen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShakeReportResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.ShakeReportResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.SKBuiltinBuffer_t Buffer = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_buffer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 Ret = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_ret();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ImgId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_imgid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &imgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ImgTotoalLen = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_imgtotoallen();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &imgtotoallen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.ShakeReportResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.ShakeReportResponse)
  return false;
#undef DO_
}

void ShakeReportResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.ShakeReportResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // required .micromsg.SKBuiltinBuffer_t Buffer = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->buffer_, output);
  }

  // required int32 Ret = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->ret(), output);
  }

  // required uint32 ImgId = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->imgid(), output);
  }

  // optional uint32 ImgTotoalLen = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->imgtotoallen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.ShakeReportResponse)
}

::google::protobuf::uint8* ShakeReportResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.ShakeReportResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // required .micromsg.SKBuiltinBuffer_t Buffer = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->buffer_, deterministic, target);
  }

  // required int32 Ret = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->ret(), target);
  }

  // required uint32 ImgId = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->imgid(), target);
  }

  // optional uint32 ImgTotoalLen = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->imgtotoallen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.ShakeReportResponse)
  return target;
}

size_t ShakeReportResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.ShakeReportResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_buffer()) {
    // required .micromsg.SKBuiltinBuffer_t Buffer = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->buffer_);
  }

  if (has_ret()) {
    // required int32 Ret = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }

  if (has_imgid()) {
    // required uint32 ImgId = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imgid());
  }

  return total_size;
}
size_t ShakeReportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.ShakeReportResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required .micromsg.SKBuiltinBuffer_t Buffer = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->buffer_);

    // required int32 Ret = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());

    // required uint32 ImgId = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imgid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional uint32 ImgTotoalLen = 5;
  if (has_imgtotoallen()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imgtotoallen());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShakeReportResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.ShakeReportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ShakeReportResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShakeReportResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.ShakeReportResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.ShakeReportResponse)
    MergeFrom(*source);
  }
}

void ShakeReportResponse::MergeFrom(const ShakeReportResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.ShakeReportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_buffer()->::micromsg::SKBuiltinBuffer_t::MergeFrom(from.buffer());
    }
    if (cached_has_bits & 0x00000004u) {
      ret_ = from.ret_;
    }
    if (cached_has_bits & 0x00000008u) {
      imgid_ = from.imgid_;
    }
    if (cached_has_bits & 0x00000010u) {
      imgtotoallen_ = from.imgtotoallen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShakeReportResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.ShakeReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShakeReportResponse::CopyFrom(const ShakeReportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.ShakeReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShakeReportResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  if (has_buffer()) {
    if (!this->buffer_->IsInitialized()) return false;
  }
  return true;
}

void ShakeReportResponse::Swap(ShakeReportResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShakeReportResponse::InternalSwap(ShakeReportResponse* other) {
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(buffer_, other->buffer_);
  std::swap(ret_, other->ret_);
  std::swap(imgid_, other->imgid_);
  std::swap(imgtotoallen_, other->imgtotoallen_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShakeReportResponse::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShakeReportResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool ShakeReportResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShakeReportResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
void ShakeReportResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShakeReportResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& ShakeReportResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeReportResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* ShakeReportResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeReportResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* ShakeReportResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeReportResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void ShakeReportResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeReportResponse.BaseResponse)
}

// required .micromsg.SKBuiltinBuffer_t Buffer = 2;
bool ShakeReportResponse::has_buffer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ShakeReportResponse::set_has_buffer() {
  _has_bits_[0] |= 0x00000002u;
}
void ShakeReportResponse::clear_has_buffer() {
  _has_bits_[0] &= ~0x00000002u;
}
void ShakeReportResponse::clear_buffer() {
  if (buffer_ != NULL) buffer_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_buffer();
}
const ::micromsg::SKBuiltinBuffer_t& ShakeReportResponse::buffer() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeReportResponse.Buffer)
  return buffer_ != NULL ? *buffer_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
::micromsg::SKBuiltinBuffer_t* ShakeReportResponse::mutable_buffer() {
  set_has_buffer();
  if (buffer_ == NULL) {
    buffer_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeReportResponse.Buffer)
  return buffer_;
}
::micromsg::SKBuiltinBuffer_t* ShakeReportResponse::release_buffer() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeReportResponse.Buffer)
  clear_has_buffer();
  ::micromsg::SKBuiltinBuffer_t* temp = buffer_;
  buffer_ = NULL;
  return temp;
}
void ShakeReportResponse::set_allocated_buffer(::micromsg::SKBuiltinBuffer_t* buffer) {
  delete buffer_;
  buffer_ = buffer;
  if (buffer) {
    set_has_buffer();
  } else {
    clear_has_buffer();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeReportResponse.Buffer)
}

// required int32 Ret = 3;
bool ShakeReportResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ShakeReportResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000004u;
}
void ShakeReportResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000004u;
}
void ShakeReportResponse::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
::google::protobuf::int32 ShakeReportResponse::ret() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeReportResponse.Ret)
  return ret_;
}
void ShakeReportResponse::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeReportResponse.Ret)
}

// required uint32 ImgId = 4;
bool ShakeReportResponse::has_imgid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ShakeReportResponse::set_has_imgid() {
  _has_bits_[0] |= 0x00000008u;
}
void ShakeReportResponse::clear_has_imgid() {
  _has_bits_[0] &= ~0x00000008u;
}
void ShakeReportResponse::clear_imgid() {
  imgid_ = 0u;
  clear_has_imgid();
}
::google::protobuf::uint32 ShakeReportResponse::imgid() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeReportResponse.ImgId)
  return imgid_;
}
void ShakeReportResponse::set_imgid(::google::protobuf::uint32 value) {
  set_has_imgid();
  imgid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeReportResponse.ImgId)
}

// optional uint32 ImgTotoalLen = 5;
bool ShakeReportResponse::has_imgtotoallen() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ShakeReportResponse::set_has_imgtotoallen() {
  _has_bits_[0] |= 0x00000010u;
}
void ShakeReportResponse::clear_has_imgtotoallen() {
  _has_bits_[0] &= ~0x00000010u;
}
void ShakeReportResponse::clear_imgtotoallen() {
  imgtotoallen_ = 0u;
  clear_has_imgtotoallen();
}
::google::protobuf::uint32 ShakeReportResponse::imgtotoallen() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeReportResponse.ImgTotoalLen)
  return imgtotoallen_;
}
void ShakeReportResponse::set_imgtotoallen(::google::protobuf::uint32 value) {
  set_has_imgtotoallen();
  imgtotoallen_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeReportResponse.ImgTotoalLen)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShakeGetRequest::kBaseRequestFieldNumber;
const int ShakeGetRequest::kBufferFieldNumber;
const int ShakeGetRequest::kIsNewVersonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShakeGetRequest::ShakeGetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.ShakeGetRequest)
}
ShakeGetRequest::ShakeGetRequest(const ShakeGetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  if (from.has_buffer()) {
    buffer_ = new ::micromsg::SKBuiltinBuffer_t(*from.buffer_);
  } else {
    buffer_ = NULL;
  }
  isnewverson_ = from.isnewverson_;
  // @@protoc_insertion_point(copy_constructor:micromsg.ShakeGetRequest)
}

void ShakeGetRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&isnewverson_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(isnewverson_));
}

ShakeGetRequest::~ShakeGetRequest() {
  // @@protoc_insertion_point(destructor:micromsg.ShakeGetRequest)
  SharedDtor();
}

void ShakeGetRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
  if (this != internal_default_instance()) {
    delete buffer_;
  }
}

void ShakeGetRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShakeGetRequest::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShakeGetRequest& ShakeGetRequest::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShakeGetRequest* ShakeGetRequest::New(::google::protobuf::Arena* arena) const {
  ShakeGetRequest* n = new ShakeGetRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShakeGetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.ShakeGetRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
    if (has_buffer()) {
      GOOGLE_DCHECK(buffer_ != NULL);
      buffer_->::micromsg::SKBuiltinBuffer_t::Clear();
    }
  }
  isnewverson_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShakeGetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.ShakeGetRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.SKBuiltinBuffer_t Buffer = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_buffer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 IsNewVerson = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_isnewverson();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isnewverson_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.ShakeGetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.ShakeGetRequest)
  return false;
#undef DO_
}

void ShakeGetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.ShakeGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required .micromsg.SKBuiltinBuffer_t Buffer = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->buffer_, output);
  }

  // optional int32 IsNewVerson = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->isnewverson(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.ShakeGetRequest)
}

::google::protobuf::uint8* ShakeGetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.ShakeGetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required .micromsg.SKBuiltinBuffer_t Buffer = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->buffer_, deterministic, target);
  }

  // optional int32 IsNewVerson = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->isnewverson(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.ShakeGetRequest)
  return target;
}

size_t ShakeGetRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.ShakeGetRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_buffer()) {
    // required .micromsg.SKBuiltinBuffer_t Buffer = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->buffer_);
  }

  return total_size;
}
size_t ShakeGetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.ShakeGetRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required .micromsg.SKBuiltinBuffer_t Buffer = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->buffer_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional int32 IsNewVerson = 3;
  if (has_isnewverson()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->isnewverson());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShakeGetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.ShakeGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ShakeGetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShakeGetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.ShakeGetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.ShakeGetRequest)
    MergeFrom(*source);
  }
}

void ShakeGetRequest::MergeFrom(const ShakeGetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.ShakeGetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_buffer()->::micromsg::SKBuiltinBuffer_t::MergeFrom(from.buffer());
    }
    if (cached_has_bits & 0x00000004u) {
      isnewverson_ = from.isnewverson_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShakeGetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.ShakeGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShakeGetRequest::CopyFrom(const ShakeGetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.ShakeGetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShakeGetRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  if (has_buffer()) {
    if (!this->buffer_->IsInitialized()) return false;
  }
  return true;
}

void ShakeGetRequest::Swap(ShakeGetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShakeGetRequest::InternalSwap(ShakeGetRequest* other) {
  std::swap(baserequest_, other->baserequest_);
  std::swap(buffer_, other->buffer_);
  std::swap(isnewverson_, other->isnewverson_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShakeGetRequest::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShakeGetRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool ShakeGetRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShakeGetRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
void ShakeGetRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShakeGetRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& ShakeGetRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* ShakeGetRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* ShakeGetRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void ShakeGetRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetRequest.BaseRequest)
}

// required .micromsg.SKBuiltinBuffer_t Buffer = 2;
bool ShakeGetRequest::has_buffer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ShakeGetRequest::set_has_buffer() {
  _has_bits_[0] |= 0x00000002u;
}
void ShakeGetRequest::clear_has_buffer() {
  _has_bits_[0] &= ~0x00000002u;
}
void ShakeGetRequest::clear_buffer() {
  if (buffer_ != NULL) buffer_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_buffer();
}
const ::micromsg::SKBuiltinBuffer_t& ShakeGetRequest::buffer() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetRequest.Buffer)
  return buffer_ != NULL ? *buffer_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
::micromsg::SKBuiltinBuffer_t* ShakeGetRequest::mutable_buffer() {
  set_has_buffer();
  if (buffer_ == NULL) {
    buffer_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetRequest.Buffer)
  return buffer_;
}
::micromsg::SKBuiltinBuffer_t* ShakeGetRequest::release_buffer() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetRequest.Buffer)
  clear_has_buffer();
  ::micromsg::SKBuiltinBuffer_t* temp = buffer_;
  buffer_ = NULL;
  return temp;
}
void ShakeGetRequest::set_allocated_buffer(::micromsg::SKBuiltinBuffer_t* buffer) {
  delete buffer_;
  buffer_ = buffer;
  if (buffer) {
    set_has_buffer();
  } else {
    clear_has_buffer();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetRequest.Buffer)
}

// optional int32 IsNewVerson = 3;
bool ShakeGetRequest::has_isnewverson() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ShakeGetRequest::set_has_isnewverson() {
  _has_bits_[0] |= 0x00000004u;
}
void ShakeGetRequest::clear_has_isnewverson() {
  _has_bits_[0] &= ~0x00000004u;
}
void ShakeGetRequest::clear_isnewverson() {
  isnewverson_ = 0;
  clear_has_isnewverson();
}
::google::protobuf::int32 ShakeGetRequest::isnewverson() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetRequest.IsNewVerson)
  return isnewverson_;
}
void ShakeGetRequest::set_isnewverson(::google::protobuf::int32 value) {
  set_has_isnewverson();
  isnewverson_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetRequest.IsNewVerson)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShakeGetItem::kUserNameFieldNumber;
const int ShakeGetItem::kNickNameFieldNumber;
const int ShakeGetItem::kProvinceFieldNumber;
const int ShakeGetItem::kCityFieldNumber;
const int ShakeGetItem::kSignatureFieldNumber;
const int ShakeGetItem::kDistanceFieldNumber;
const int ShakeGetItem::kSexFieldNumber;
const int ShakeGetItem::kImgStatusFieldNumber;
const int ShakeGetItem::kHasHDImgFieldNumber;
const int ShakeGetItem::kImgBufferFieldNumber;
const int ShakeGetItem::kNumDistanceFieldNumber;
const int ShakeGetItem::kWeiboFieldNumber;
const int ShakeGetItem::kWeiboNicknameFieldNumber;
const int ShakeGetItem::kWeiboFlagFieldNumber;
const int ShakeGetItem::kVerifyFlagFieldNumber;
const int ShakeGetItem::kVerifyInfoFieldNumber;
const int ShakeGetItem::kVerifyContentFieldNumber;
const int ShakeGetItem::kHeadImgVersionFieldNumber;
const int ShakeGetItem::kSnsUserInfoFieldNumber;
const int ShakeGetItem::kCountryFieldNumber;
const int ShakeGetItem::kBigHeadImgUrlFieldNumber;
const int ShakeGetItem::kSmallHeadImgUrlFieldNumber;
const int ShakeGetItem::kMyBrandListFieldNumber;
const int ShakeGetItem::kCustomizedInfoFieldNumber;
const int ShakeGetItem::kAntispamTicketFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShakeGetItem::ShakeGetItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.ShakeGetItem)
}
ShakeGetItem::ShakeGetItem(const ShakeGetItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_province()) {
    province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.province_);
  }
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_city()) {
    city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
  }
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_signature()) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  distance_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_distance()) {
    distance_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.distance_);
  }
  weibo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_weibo()) {
    weibo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.weibo_);
  }
  weibonickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_weibonickname()) {
    weibonickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.weibonickname_);
  }
  verifyinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_verifyinfo()) {
    verifyinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verifyinfo_);
  }
  verifycontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_verifycontent()) {
    verifycontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verifycontent_);
  }
  country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_country()) {
    country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_);
  }
  bigheadimgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bigheadimgurl()) {
    bigheadimgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bigheadimgurl_);
  }
  smallheadimgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_smallheadimgurl()) {
    smallheadimgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smallheadimgurl_);
  }
  mybrandlist_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mybrandlist()) {
    mybrandlist_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mybrandlist_);
  }
  antispamticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_antispamticket()) {
    antispamticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.antispamticket_);
  }
  if (from.has_imgbuffer()) {
    imgbuffer_ = new ::micromsg::SKBuiltinBuffer_t(*from.imgbuffer_);
  } else {
    imgbuffer_ = NULL;
  }
  if (from.has_snsuserinfo()) {
    snsuserinfo_ = new ::micromsg::SnsUserInfo(*from.snsuserinfo_);
  } else {
    snsuserinfo_ = NULL;
  }
  if (from.has_customizedinfo()) {
    customizedinfo_ = new ::micromsg::CustomizedInfo(*from.customizedinfo_);
  } else {
    customizedinfo_ = NULL;
  }
  ::memcpy(&sex_, &from.sex_,
    reinterpret_cast<char*>(&headimgversion_) -
    reinterpret_cast<char*>(&sex_) + sizeof(headimgversion_));
  // @@protoc_insertion_point(copy_constructor:micromsg.ShakeGetItem)
}

void ShakeGetItem::SharedCtor() {
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  distance_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  weibo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  weibonickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verifyinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verifycontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bigheadimgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smallheadimgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mybrandlist_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  antispamticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&imgbuffer_, 0, reinterpret_cast<char*>(&headimgversion_) -
    reinterpret_cast<char*>(&imgbuffer_) + sizeof(headimgversion_));
}

ShakeGetItem::~ShakeGetItem() {
  // @@protoc_insertion_point(destructor:micromsg.ShakeGetItem)
  SharedDtor();
}

void ShakeGetItem::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  distance_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  weibo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  weibonickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verifyinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verifycontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bigheadimgurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smallheadimgurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mybrandlist_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  antispamticket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete imgbuffer_;
  }
  if (this != internal_default_instance()) {
    delete snsuserinfo_;
  }
  if (this != internal_default_instance()) {
    delete customizedinfo_;
  }
}

void ShakeGetItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShakeGetItem::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShakeGetItem& ShakeGetItem::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShakeGetItem* ShakeGetItem::New(::google::protobuf::Arena* arena) const {
  ShakeGetItem* n = new ShakeGetItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShakeGetItem::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.ShakeGetItem)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_username()) {
      GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*username_.UnsafeRawStringPointer())->clear();
    }
    if (has_nickname()) {
      GOOGLE_DCHECK(!nickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*nickname_.UnsafeRawStringPointer())->clear();
    }
    if (has_province()) {
      GOOGLE_DCHECK(!province_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*province_.UnsafeRawStringPointer())->clear();
    }
    if (has_city()) {
      GOOGLE_DCHECK(!city_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*city_.UnsafeRawStringPointer())->clear();
    }
    if (has_signature()) {
      GOOGLE_DCHECK(!signature_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*signature_.UnsafeRawStringPointer())->clear();
    }
    if (has_distance()) {
      GOOGLE_DCHECK(!distance_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*distance_.UnsafeRawStringPointer())->clear();
    }
    if (has_weibo()) {
      GOOGLE_DCHECK(!weibo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*weibo_.UnsafeRawStringPointer())->clear();
    }
    if (has_weibonickname()) {
      GOOGLE_DCHECK(!weibonickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*weibonickname_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    if (has_verifyinfo()) {
      GOOGLE_DCHECK(!verifyinfo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*verifyinfo_.UnsafeRawStringPointer())->clear();
    }
    if (has_verifycontent()) {
      GOOGLE_DCHECK(!verifycontent_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*verifycontent_.UnsafeRawStringPointer())->clear();
    }
    if (has_country()) {
      GOOGLE_DCHECK(!country_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*country_.UnsafeRawStringPointer())->clear();
    }
    if (has_bigheadimgurl()) {
      GOOGLE_DCHECK(!bigheadimgurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*bigheadimgurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_smallheadimgurl()) {
      GOOGLE_DCHECK(!smallheadimgurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*smallheadimgurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_mybrandlist()) {
      GOOGLE_DCHECK(!mybrandlist_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*mybrandlist_.UnsafeRawStringPointer())->clear();
    }
    if (has_antispamticket()) {
      GOOGLE_DCHECK(!antispamticket_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*antispamticket_.UnsafeRawStringPointer())->clear();
    }
    if (has_imgbuffer()) {
      GOOGLE_DCHECK(imgbuffer_ != NULL);
      imgbuffer_->::micromsg::SKBuiltinBuffer_t::Clear();
    }
  }
  if (_has_bits_[16 / 32] & 196608u) {
    if (has_snsuserinfo()) {
      GOOGLE_DCHECK(snsuserinfo_ != NULL);
      snsuserinfo_->::micromsg::SnsUserInfo::Clear();
    }
    if (has_customizedinfo()) {
      GOOGLE_DCHECK(customizedinfo_ != NULL);
      customizedinfo_->::micromsg::CustomizedInfo::Clear();
    }
  }
  if (_has_bits_[16 / 32] & 16515072u) {
    ::memset(&sex_, 0, reinterpret_cast<char*>(&verifyflag_) -
      reinterpret_cast<char*>(&sex_) + sizeof(verifyflag_));
  }
  headimgversion_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShakeGetItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.ShakeGetItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string UserName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.ShakeGetItem.UserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string NickName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.ShakeGetItem.NickName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Province = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_province()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->province().data(), this->province().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.ShakeGetItem.Province");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string City = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_city()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->city().data(), this->city().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.ShakeGetItem.City");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Signature = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signature()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->signature().data(), this->signature().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.ShakeGetItem.Signature");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Distance = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_distance()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->distance().data(), this->distance().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.ShakeGetItem.Distance");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 Sex = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_sex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ImgStatus = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_imgstatus();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &imgstatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 HasHDImg = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_hashdimg();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hashdimg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.SKBuiltinBuffer_t ImgBuffer = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_imgbuffer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 NumDistance = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {
          set_has_numdistance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &numdistance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Weibo = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_weibo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->weibo().data(), this->weibo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.ShakeGetItem.Weibo");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string WeiboNickname = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_weibonickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->weibonickname().data(), this->weibonickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.ShakeGetItem.WeiboNickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 WeiboFlag = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {
          set_has_weiboflag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &weiboflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 VerifyFlag = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u)) {
          set_has_verifyflag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &verifyflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string VerifyInfo = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_verifyinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->verifyinfo().data(), this->verifyinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.ShakeGetItem.VerifyInfo");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string VerifyContent = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_verifycontent()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->verifycontent().data(), this->verifycontent().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.ShakeGetItem.VerifyContent");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 HeadImgVersion = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u)) {
          set_has_headimgversion();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &headimgversion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .micromsg.SnsUserInfo SnsUserInfo = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_snsuserinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Country = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->country().data(), this->country().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.ShakeGetItem.Country");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string BigHeadImgUrl = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bigheadimgurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bigheadimgurl().data(), this->bigheadimgurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.ShakeGetItem.BigHeadImgUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string SmallHeadImgUrl = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smallheadimgurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->smallheadimgurl().data(), this->smallheadimgurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.ShakeGetItem.SmallHeadImgUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string MyBrandList = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mybrandlist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mybrandlist().data(), this->mybrandlist().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.ShakeGetItem.MyBrandList");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .micromsg.CustomizedInfo CustomizedInfo = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_customizedinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AntispamTicket = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_antispamticket()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->antispamticket().data(), this->antispamticket().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.ShakeGetItem.AntispamTicket");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.ShakeGetItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.ShakeGetItem)
  return false;
#undef DO_
}

void ShakeGetItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.ShakeGetItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string UserName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeGetItem.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // optional string NickName = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeGetItem.NickName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nickname(), output);
  }

  // optional string Province = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->province().data(), this->province().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeGetItem.Province");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->province(), output);
  }

  // optional string City = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->city().data(), this->city().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeGetItem.City");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->city(), output);
  }

  // optional string Signature = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->signature().data(), this->signature().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeGetItem.Signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->signature(), output);
  }

  // optional string Distance = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->distance().data(), this->distance().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeGetItem.Distance");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->distance(), output);
  }

  // required int32 Sex = 7;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->sex(), output);
  }

  // required uint32 ImgStatus = 8;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->imgstatus(), output);
  }

  // required uint32 HasHDImg = 9;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->hashdimg(), output);
  }

  // required .micromsg.SKBuiltinBuffer_t ImgBuffer = 10;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->imgbuffer_, output);
  }

  // required uint32 NumDistance = 11;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->numdistance(), output);
  }

  // optional string Weibo = 12;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->weibo().data(), this->weibo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeGetItem.Weibo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->weibo(), output);
  }

  // optional string WeiboNickname = 13;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->weibonickname().data(), this->weibonickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeGetItem.WeiboNickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->weibonickname(), output);
  }

  // optional uint32 WeiboFlag = 14;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->weiboflag(), output);
  }

  // optional uint32 VerifyFlag = 15;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->verifyflag(), output);
  }

  // optional string VerifyInfo = 16;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->verifyinfo().data(), this->verifyinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeGetItem.VerifyInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->verifyinfo(), output);
  }

  // optional string VerifyContent = 17;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->verifycontent().data(), this->verifycontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeGetItem.VerifyContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->verifycontent(), output);
  }

  // optional int32 HeadImgVersion = 21;
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->headimgversion(), output);
  }

  // optional .micromsg.SnsUserInfo SnsUserInfo = 22;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, *this->snsuserinfo_, output);
  }

  // optional string Country = 23;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country().data(), this->country().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeGetItem.Country");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->country(), output);
  }

  // optional string BigHeadImgUrl = 24;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bigheadimgurl().data(), this->bigheadimgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeGetItem.BigHeadImgUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      24, this->bigheadimgurl(), output);
  }

  // optional string SmallHeadImgUrl = 25;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smallheadimgurl().data(), this->smallheadimgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeGetItem.SmallHeadImgUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      25, this->smallheadimgurl(), output);
  }

  // optional string MyBrandList = 26;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mybrandlist().data(), this->mybrandlist().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeGetItem.MyBrandList");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      26, this->mybrandlist(), output);
  }

  // optional .micromsg.CustomizedInfo CustomizedInfo = 27;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, *this->customizedinfo_, output);
  }

  // optional string AntispamTicket = 28;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->antispamticket().data(), this->antispamticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeGetItem.AntispamTicket");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      28, this->antispamticket(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.ShakeGetItem)
}

::google::protobuf::uint8* ShakeGetItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.ShakeGetItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string UserName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeGetItem.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // optional string NickName = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeGetItem.NickName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nickname(), target);
  }

  // optional string Province = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->province().data(), this->province().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeGetItem.Province");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->province(), target);
  }

  // optional string City = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->city().data(), this->city().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeGetItem.City");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->city(), target);
  }

  // optional string Signature = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->signature().data(), this->signature().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeGetItem.Signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->signature(), target);
  }

  // optional string Distance = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->distance().data(), this->distance().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeGetItem.Distance");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->distance(), target);
  }

  // required int32 Sex = 7;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->sex(), target);
  }

  // required uint32 ImgStatus = 8;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->imgstatus(), target);
  }

  // required uint32 HasHDImg = 9;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->hashdimg(), target);
  }

  // required .micromsg.SKBuiltinBuffer_t ImgBuffer = 10;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->imgbuffer_, deterministic, target);
  }

  // required uint32 NumDistance = 11;
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->numdistance(), target);
  }

  // optional string Weibo = 12;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->weibo().data(), this->weibo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeGetItem.Weibo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->weibo(), target);
  }

  // optional string WeiboNickname = 13;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->weibonickname().data(), this->weibonickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeGetItem.WeiboNickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->weibonickname(), target);
  }

  // optional uint32 WeiboFlag = 14;
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->weiboflag(), target);
  }

  // optional uint32 VerifyFlag = 15;
  if (cached_has_bits & 0x00800000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->verifyflag(), target);
  }

  // optional string VerifyInfo = 16;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->verifyinfo().data(), this->verifyinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeGetItem.VerifyInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->verifyinfo(), target);
  }

  // optional string VerifyContent = 17;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->verifycontent().data(), this->verifycontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeGetItem.VerifyContent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->verifycontent(), target);
  }

  // optional int32 HeadImgVersion = 21;
  if (cached_has_bits & 0x01000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->headimgversion(), target);
  }

  // optional .micromsg.SnsUserInfo SnsUserInfo = 22;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        22, *this->snsuserinfo_, deterministic, target);
  }

  // optional string Country = 23;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country().data(), this->country().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeGetItem.Country");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->country(), target);
  }

  // optional string BigHeadImgUrl = 24;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bigheadimgurl().data(), this->bigheadimgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeGetItem.BigHeadImgUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->bigheadimgurl(), target);
  }

  // optional string SmallHeadImgUrl = 25;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smallheadimgurl().data(), this->smallheadimgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeGetItem.SmallHeadImgUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->smallheadimgurl(), target);
  }

  // optional string MyBrandList = 26;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mybrandlist().data(), this->mybrandlist().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeGetItem.MyBrandList");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        26, this->mybrandlist(), target);
  }

  // optional .micromsg.CustomizedInfo CustomizedInfo = 27;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        27, *this->customizedinfo_, deterministic, target);
  }

  // optional string AntispamTicket = 28;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->antispamticket().data(), this->antispamticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeGetItem.AntispamTicket");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        28, this->antispamticket(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.ShakeGetItem)
  return target;
}

size_t ShakeGetItem::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.ShakeGetItem)
  size_t total_size = 0;

  if (has_imgbuffer()) {
    // required .micromsg.SKBuiltinBuffer_t ImgBuffer = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->imgbuffer_);
  }

  if (has_sex()) {
    // required int32 Sex = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sex());
  }

  if (has_imgstatus()) {
    // required uint32 ImgStatus = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imgstatus());
  }

  if (has_hashdimg()) {
    // required uint32 HasHDImg = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hashdimg());
  }

  if (has_numdistance()) {
    // required uint32 NumDistance = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->numdistance());
  }

  return total_size;
}
size_t ShakeGetItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.ShakeGetItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x003c8000) ^ 0x003c8000) == 0) {  // All required fields are present.
    // required .micromsg.SKBuiltinBuffer_t ImgBuffer = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->imgbuffer_);

    // required int32 Sex = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sex());

    // required uint32 ImgStatus = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imgstatus());

    // required uint32 HasHDImg = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hashdimg());

    // required uint32 NumDistance = 11;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->numdistance());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string UserName = 1;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional string NickName = 2;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional string Province = 3;
    if (has_province()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->province());
    }

    // optional string City = 4;
    if (has_city()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->city());
    }

    // optional string Signature = 5;
    if (has_signature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->signature());
    }

    // optional string Distance = 6;
    if (has_distance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->distance());
    }

    // optional string Weibo = 12;
    if (has_weibo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->weibo());
    }

    // optional string WeiboNickname = 13;
    if (has_weibonickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->weibonickname());
    }

  }
  if (_has_bits_[8 / 32] & 32512u) {
    // optional string VerifyInfo = 16;
    if (has_verifyinfo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->verifyinfo());
    }

    // optional string VerifyContent = 17;
    if (has_verifycontent()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->verifycontent());
    }

    // optional string Country = 23;
    if (has_country()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->country());
    }

    // optional string BigHeadImgUrl = 24;
    if (has_bigheadimgurl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bigheadimgurl());
    }

    // optional string SmallHeadImgUrl = 25;
    if (has_smallheadimgurl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->smallheadimgurl());
    }

    // optional string MyBrandList = 26;
    if (has_mybrandlist()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mybrandlist());
    }

    // optional string AntispamTicket = 28;
    if (has_antispamticket()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->antispamticket());
    }

  }
  if (_has_bits_[16 / 32] & 196608u) {
    // optional .micromsg.SnsUserInfo SnsUserInfo = 22;
    if (has_snsuserinfo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->snsuserinfo_);
    }

    // optional .micromsg.CustomizedInfo CustomizedInfo = 27;
    if (has_customizedinfo()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->customizedinfo_);
    }

  }
  if (_has_bits_[16 / 32] & 12582912u) {
    // optional uint32 WeiboFlag = 14;
    if (has_weiboflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->weiboflag());
    }

    // optional uint32 VerifyFlag = 15;
    if (has_verifyflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->verifyflag());
    }

  }
  // optional int32 HeadImgVersion = 21;
  if (has_headimgversion()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->headimgversion());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShakeGetItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.ShakeGetItem)
  GOOGLE_DCHECK_NE(&from, this);
  const ShakeGetItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShakeGetItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.ShakeGetItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.ShakeGetItem)
    MergeFrom(*source);
  }
}

void ShakeGetItem::MergeFrom(const ShakeGetItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.ShakeGetItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_province();
      province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.province_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_city();
      city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_signature();
      signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_distance();
      distance_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.distance_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_weibo();
      weibo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.weibo_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_weibonickname();
      weibonickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.weibonickname_);
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_verifyinfo();
      verifyinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verifyinfo_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has_verifycontent();
      verifycontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verifycontent_);
    }
    if (cached_has_bits & 0x00000400u) {
      set_has_country();
      country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_);
    }
    if (cached_has_bits & 0x00000800u) {
      set_has_bigheadimgurl();
      bigheadimgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bigheadimgurl_);
    }
    if (cached_has_bits & 0x00001000u) {
      set_has_smallheadimgurl();
      smallheadimgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smallheadimgurl_);
    }
    if (cached_has_bits & 0x00002000u) {
      set_has_mybrandlist();
      mybrandlist_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mybrandlist_);
    }
    if (cached_has_bits & 0x00004000u) {
      set_has_antispamticket();
      antispamticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.antispamticket_);
    }
    if (cached_has_bits & 0x00008000u) {
      mutable_imgbuffer()->::micromsg::SKBuiltinBuffer_t::MergeFrom(from.imgbuffer());
    }
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      mutable_snsuserinfo()->::micromsg::SnsUserInfo::MergeFrom(from.snsuserinfo());
    }
    if (cached_has_bits & 0x00020000u) {
      mutable_customizedinfo()->::micromsg::CustomizedInfo::MergeFrom(from.customizedinfo());
    }
    if (cached_has_bits & 0x00040000u) {
      sex_ = from.sex_;
    }
    if (cached_has_bits & 0x00080000u) {
      imgstatus_ = from.imgstatus_;
    }
    if (cached_has_bits & 0x00100000u) {
      hashdimg_ = from.hashdimg_;
    }
    if (cached_has_bits & 0x00200000u) {
      numdistance_ = from.numdistance_;
    }
    if (cached_has_bits & 0x00400000u) {
      weiboflag_ = from.weiboflag_;
    }
    if (cached_has_bits & 0x00800000u) {
      verifyflag_ = from.verifyflag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x01000000u) {
    set_headimgversion(from.headimgversion());
  }
}

void ShakeGetItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.ShakeGetItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShakeGetItem::CopyFrom(const ShakeGetItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.ShakeGetItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShakeGetItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x003c8000) != 0x003c8000) return false;
  if (has_imgbuffer()) {
    if (!this->imgbuffer_->IsInitialized()) return false;
  }
  if (has_snsuserinfo()) {
    if (!this->snsuserinfo_->IsInitialized()) return false;
  }
  if (has_customizedinfo()) {
    if (!this->customizedinfo_->IsInitialized()) return false;
  }
  return true;
}

void ShakeGetItem::Swap(ShakeGetItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShakeGetItem::InternalSwap(ShakeGetItem* other) {
  username_.Swap(&other->username_);
  nickname_.Swap(&other->nickname_);
  province_.Swap(&other->province_);
  city_.Swap(&other->city_);
  signature_.Swap(&other->signature_);
  distance_.Swap(&other->distance_);
  weibo_.Swap(&other->weibo_);
  weibonickname_.Swap(&other->weibonickname_);
  verifyinfo_.Swap(&other->verifyinfo_);
  verifycontent_.Swap(&other->verifycontent_);
  country_.Swap(&other->country_);
  bigheadimgurl_.Swap(&other->bigheadimgurl_);
  smallheadimgurl_.Swap(&other->smallheadimgurl_);
  mybrandlist_.Swap(&other->mybrandlist_);
  antispamticket_.Swap(&other->antispamticket_);
  std::swap(imgbuffer_, other->imgbuffer_);
  std::swap(snsuserinfo_, other->snsuserinfo_);
  std::swap(customizedinfo_, other->customizedinfo_);
  std::swap(sex_, other->sex_);
  std::swap(imgstatus_, other->imgstatus_);
  std::swap(hashdimg_, other->hashdimg_);
  std::swap(numdistance_, other->numdistance_);
  std::swap(weiboflag_, other->weiboflag_);
  std::swap(verifyflag_, other->verifyflag_);
  std::swap(headimgversion_, other->headimgversion_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShakeGetItem::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShakeGetItem

// optional string UserName = 1;
bool ShakeGetItem::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShakeGetItem::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
void ShakeGetItem::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShakeGetItem::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& ShakeGetItem::username() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.UserName)
  return username_.GetNoArena();
}
void ShakeGetItem::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.UserName)
}
#if LANG_CXX11
void ShakeGetItem::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeGetItem.UserName)
}
#endif
void ShakeGetItem::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeGetItem.UserName)
}
void ShakeGetItem::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeGetItem.UserName)
}
::std::string* ShakeGetItem::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakeGetItem::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakeGetItem::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.UserName)
}

// optional string NickName = 2;
bool ShakeGetItem::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ShakeGetItem::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
void ShakeGetItem::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
void ShakeGetItem::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
const ::std::string& ShakeGetItem::nickname() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.NickName)
  return nickname_.GetNoArena();
}
void ShakeGetItem::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.NickName)
}
#if LANG_CXX11
void ShakeGetItem::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeGetItem.NickName)
}
#endif
void ShakeGetItem::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeGetItem.NickName)
}
void ShakeGetItem::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeGetItem.NickName)
}
::std::string* ShakeGetItem::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.NickName)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakeGetItem::release_nickname() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.NickName)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakeGetItem::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.NickName)
}

// optional string Province = 3;
bool ShakeGetItem::has_province() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ShakeGetItem::set_has_province() {
  _has_bits_[0] |= 0x00000004u;
}
void ShakeGetItem::clear_has_province() {
  _has_bits_[0] &= ~0x00000004u;
}
void ShakeGetItem::clear_province() {
  province_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_province();
}
const ::std::string& ShakeGetItem::province() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.Province)
  return province_.GetNoArena();
}
void ShakeGetItem::set_province(const ::std::string& value) {
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.Province)
}
#if LANG_CXX11
void ShakeGetItem::set_province(::std::string&& value) {
  set_has_province();
  province_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeGetItem.Province)
}
#endif
void ShakeGetItem::set_province(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeGetItem.Province)
}
void ShakeGetItem::set_province(const char* value, size_t size) {
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeGetItem.Province)
}
::std::string* ShakeGetItem::mutable_province() {
  set_has_province();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.Province)
  return province_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakeGetItem::release_province() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.Province)
  clear_has_province();
  return province_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakeGetItem::set_allocated_province(::std::string* province) {
  if (province != NULL) {
    set_has_province();
  } else {
    clear_has_province();
  }
  province_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), province);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.Province)
}

// optional string City = 4;
bool ShakeGetItem::has_city() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ShakeGetItem::set_has_city() {
  _has_bits_[0] |= 0x00000008u;
}
void ShakeGetItem::clear_has_city() {
  _has_bits_[0] &= ~0x00000008u;
}
void ShakeGetItem::clear_city() {
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_city();
}
const ::std::string& ShakeGetItem::city() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.City)
  return city_.GetNoArena();
}
void ShakeGetItem::set_city(const ::std::string& value) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.City)
}
#if LANG_CXX11
void ShakeGetItem::set_city(::std::string&& value) {
  set_has_city();
  city_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeGetItem.City)
}
#endif
void ShakeGetItem::set_city(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeGetItem.City)
}
void ShakeGetItem::set_city(const char* value, size_t size) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeGetItem.City)
}
::std::string* ShakeGetItem::mutable_city() {
  set_has_city();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.City)
  return city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakeGetItem::release_city() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.City)
  clear_has_city();
  return city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakeGetItem::set_allocated_city(::std::string* city) {
  if (city != NULL) {
    set_has_city();
  } else {
    clear_has_city();
  }
  city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.City)
}

// optional string Signature = 5;
bool ShakeGetItem::has_signature() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ShakeGetItem::set_has_signature() {
  _has_bits_[0] |= 0x00000010u;
}
void ShakeGetItem::clear_has_signature() {
  _has_bits_[0] &= ~0x00000010u;
}
void ShakeGetItem::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_signature();
}
const ::std::string& ShakeGetItem::signature() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.Signature)
  return signature_.GetNoArena();
}
void ShakeGetItem::set_signature(const ::std::string& value) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.Signature)
}
#if LANG_CXX11
void ShakeGetItem::set_signature(::std::string&& value) {
  set_has_signature();
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeGetItem.Signature)
}
#endif
void ShakeGetItem::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeGetItem.Signature)
}
void ShakeGetItem::set_signature(const char* value, size_t size) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeGetItem.Signature)
}
::std::string* ShakeGetItem::mutable_signature() {
  set_has_signature();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.Signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakeGetItem::release_signature() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.Signature)
  clear_has_signature();
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakeGetItem::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    set_has_signature();
  } else {
    clear_has_signature();
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.Signature)
}

// optional string Distance = 6;
bool ShakeGetItem::has_distance() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ShakeGetItem::set_has_distance() {
  _has_bits_[0] |= 0x00000020u;
}
void ShakeGetItem::clear_has_distance() {
  _has_bits_[0] &= ~0x00000020u;
}
void ShakeGetItem::clear_distance() {
  distance_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_distance();
}
const ::std::string& ShakeGetItem::distance() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.Distance)
  return distance_.GetNoArena();
}
void ShakeGetItem::set_distance(const ::std::string& value) {
  set_has_distance();
  distance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.Distance)
}
#if LANG_CXX11
void ShakeGetItem::set_distance(::std::string&& value) {
  set_has_distance();
  distance_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeGetItem.Distance)
}
#endif
void ShakeGetItem::set_distance(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_distance();
  distance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeGetItem.Distance)
}
void ShakeGetItem::set_distance(const char* value, size_t size) {
  set_has_distance();
  distance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeGetItem.Distance)
}
::std::string* ShakeGetItem::mutable_distance() {
  set_has_distance();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.Distance)
  return distance_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakeGetItem::release_distance() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.Distance)
  clear_has_distance();
  return distance_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakeGetItem::set_allocated_distance(::std::string* distance) {
  if (distance != NULL) {
    set_has_distance();
  } else {
    clear_has_distance();
  }
  distance_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), distance);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.Distance)
}

// required int32 Sex = 7;
bool ShakeGetItem::has_sex() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void ShakeGetItem::set_has_sex() {
  _has_bits_[0] |= 0x00040000u;
}
void ShakeGetItem::clear_has_sex() {
  _has_bits_[0] &= ~0x00040000u;
}
void ShakeGetItem::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
::google::protobuf::int32 ShakeGetItem::sex() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.Sex)
  return sex_;
}
void ShakeGetItem::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.Sex)
}

// required uint32 ImgStatus = 8;
bool ShakeGetItem::has_imgstatus() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void ShakeGetItem::set_has_imgstatus() {
  _has_bits_[0] |= 0x00080000u;
}
void ShakeGetItem::clear_has_imgstatus() {
  _has_bits_[0] &= ~0x00080000u;
}
void ShakeGetItem::clear_imgstatus() {
  imgstatus_ = 0u;
  clear_has_imgstatus();
}
::google::protobuf::uint32 ShakeGetItem::imgstatus() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.ImgStatus)
  return imgstatus_;
}
void ShakeGetItem::set_imgstatus(::google::protobuf::uint32 value) {
  set_has_imgstatus();
  imgstatus_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.ImgStatus)
}

// required uint32 HasHDImg = 9;
bool ShakeGetItem::has_hashdimg() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void ShakeGetItem::set_has_hashdimg() {
  _has_bits_[0] |= 0x00100000u;
}
void ShakeGetItem::clear_has_hashdimg() {
  _has_bits_[0] &= ~0x00100000u;
}
void ShakeGetItem::clear_hashdimg() {
  hashdimg_ = 0u;
  clear_has_hashdimg();
}
::google::protobuf::uint32 ShakeGetItem::hashdimg() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.HasHDImg)
  return hashdimg_;
}
void ShakeGetItem::set_hashdimg(::google::protobuf::uint32 value) {
  set_has_hashdimg();
  hashdimg_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.HasHDImg)
}

// required .micromsg.SKBuiltinBuffer_t ImgBuffer = 10;
bool ShakeGetItem::has_imgbuffer() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void ShakeGetItem::set_has_imgbuffer() {
  _has_bits_[0] |= 0x00008000u;
}
void ShakeGetItem::clear_has_imgbuffer() {
  _has_bits_[0] &= ~0x00008000u;
}
void ShakeGetItem::clear_imgbuffer() {
  if (imgbuffer_ != NULL) imgbuffer_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_imgbuffer();
}
const ::micromsg::SKBuiltinBuffer_t& ShakeGetItem::imgbuffer() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.ImgBuffer)
  return imgbuffer_ != NULL ? *imgbuffer_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
::micromsg::SKBuiltinBuffer_t* ShakeGetItem::mutable_imgbuffer() {
  set_has_imgbuffer();
  if (imgbuffer_ == NULL) {
    imgbuffer_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.ImgBuffer)
  return imgbuffer_;
}
::micromsg::SKBuiltinBuffer_t* ShakeGetItem::release_imgbuffer() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.ImgBuffer)
  clear_has_imgbuffer();
  ::micromsg::SKBuiltinBuffer_t* temp = imgbuffer_;
  imgbuffer_ = NULL;
  return temp;
}
void ShakeGetItem::set_allocated_imgbuffer(::micromsg::SKBuiltinBuffer_t* imgbuffer) {
  delete imgbuffer_;
  imgbuffer_ = imgbuffer;
  if (imgbuffer) {
    set_has_imgbuffer();
  } else {
    clear_has_imgbuffer();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.ImgBuffer)
}

// required uint32 NumDistance = 11;
bool ShakeGetItem::has_numdistance() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void ShakeGetItem::set_has_numdistance() {
  _has_bits_[0] |= 0x00200000u;
}
void ShakeGetItem::clear_has_numdistance() {
  _has_bits_[0] &= ~0x00200000u;
}
void ShakeGetItem::clear_numdistance() {
  numdistance_ = 0u;
  clear_has_numdistance();
}
::google::protobuf::uint32 ShakeGetItem::numdistance() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.NumDistance)
  return numdistance_;
}
void ShakeGetItem::set_numdistance(::google::protobuf::uint32 value) {
  set_has_numdistance();
  numdistance_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.NumDistance)
}

// optional string Weibo = 12;
bool ShakeGetItem::has_weibo() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ShakeGetItem::set_has_weibo() {
  _has_bits_[0] |= 0x00000040u;
}
void ShakeGetItem::clear_has_weibo() {
  _has_bits_[0] &= ~0x00000040u;
}
void ShakeGetItem::clear_weibo() {
  weibo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_weibo();
}
const ::std::string& ShakeGetItem::weibo() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.Weibo)
  return weibo_.GetNoArena();
}
void ShakeGetItem::set_weibo(const ::std::string& value) {
  set_has_weibo();
  weibo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.Weibo)
}
#if LANG_CXX11
void ShakeGetItem::set_weibo(::std::string&& value) {
  set_has_weibo();
  weibo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeGetItem.Weibo)
}
#endif
void ShakeGetItem::set_weibo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_weibo();
  weibo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeGetItem.Weibo)
}
void ShakeGetItem::set_weibo(const char* value, size_t size) {
  set_has_weibo();
  weibo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeGetItem.Weibo)
}
::std::string* ShakeGetItem::mutable_weibo() {
  set_has_weibo();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.Weibo)
  return weibo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakeGetItem::release_weibo() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.Weibo)
  clear_has_weibo();
  return weibo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakeGetItem::set_allocated_weibo(::std::string* weibo) {
  if (weibo != NULL) {
    set_has_weibo();
  } else {
    clear_has_weibo();
  }
  weibo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), weibo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.Weibo)
}

// optional string WeiboNickname = 13;
bool ShakeGetItem::has_weibonickname() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ShakeGetItem::set_has_weibonickname() {
  _has_bits_[0] |= 0x00000080u;
}
void ShakeGetItem::clear_has_weibonickname() {
  _has_bits_[0] &= ~0x00000080u;
}
void ShakeGetItem::clear_weibonickname() {
  weibonickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_weibonickname();
}
const ::std::string& ShakeGetItem::weibonickname() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.WeiboNickname)
  return weibonickname_.GetNoArena();
}
void ShakeGetItem::set_weibonickname(const ::std::string& value) {
  set_has_weibonickname();
  weibonickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.WeiboNickname)
}
#if LANG_CXX11
void ShakeGetItem::set_weibonickname(::std::string&& value) {
  set_has_weibonickname();
  weibonickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeGetItem.WeiboNickname)
}
#endif
void ShakeGetItem::set_weibonickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_weibonickname();
  weibonickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeGetItem.WeiboNickname)
}
void ShakeGetItem::set_weibonickname(const char* value, size_t size) {
  set_has_weibonickname();
  weibonickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeGetItem.WeiboNickname)
}
::std::string* ShakeGetItem::mutable_weibonickname() {
  set_has_weibonickname();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.WeiboNickname)
  return weibonickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakeGetItem::release_weibonickname() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.WeiboNickname)
  clear_has_weibonickname();
  return weibonickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakeGetItem::set_allocated_weibonickname(::std::string* weibonickname) {
  if (weibonickname != NULL) {
    set_has_weibonickname();
  } else {
    clear_has_weibonickname();
  }
  weibonickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), weibonickname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.WeiboNickname)
}

// optional uint32 WeiboFlag = 14;
bool ShakeGetItem::has_weiboflag() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
void ShakeGetItem::set_has_weiboflag() {
  _has_bits_[0] |= 0x00400000u;
}
void ShakeGetItem::clear_has_weiboflag() {
  _has_bits_[0] &= ~0x00400000u;
}
void ShakeGetItem::clear_weiboflag() {
  weiboflag_ = 0u;
  clear_has_weiboflag();
}
::google::protobuf::uint32 ShakeGetItem::weiboflag() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.WeiboFlag)
  return weiboflag_;
}
void ShakeGetItem::set_weiboflag(::google::protobuf::uint32 value) {
  set_has_weiboflag();
  weiboflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.WeiboFlag)
}

// optional uint32 VerifyFlag = 15;
bool ShakeGetItem::has_verifyflag() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
void ShakeGetItem::set_has_verifyflag() {
  _has_bits_[0] |= 0x00800000u;
}
void ShakeGetItem::clear_has_verifyflag() {
  _has_bits_[0] &= ~0x00800000u;
}
void ShakeGetItem::clear_verifyflag() {
  verifyflag_ = 0u;
  clear_has_verifyflag();
}
::google::protobuf::uint32 ShakeGetItem::verifyflag() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.VerifyFlag)
  return verifyflag_;
}
void ShakeGetItem::set_verifyflag(::google::protobuf::uint32 value) {
  set_has_verifyflag();
  verifyflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.VerifyFlag)
}

// optional string VerifyInfo = 16;
bool ShakeGetItem::has_verifyinfo() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void ShakeGetItem::set_has_verifyinfo() {
  _has_bits_[0] |= 0x00000100u;
}
void ShakeGetItem::clear_has_verifyinfo() {
  _has_bits_[0] &= ~0x00000100u;
}
void ShakeGetItem::clear_verifyinfo() {
  verifyinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_verifyinfo();
}
const ::std::string& ShakeGetItem::verifyinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.VerifyInfo)
  return verifyinfo_.GetNoArena();
}
void ShakeGetItem::set_verifyinfo(const ::std::string& value) {
  set_has_verifyinfo();
  verifyinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.VerifyInfo)
}
#if LANG_CXX11
void ShakeGetItem::set_verifyinfo(::std::string&& value) {
  set_has_verifyinfo();
  verifyinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeGetItem.VerifyInfo)
}
#endif
void ShakeGetItem::set_verifyinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_verifyinfo();
  verifyinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeGetItem.VerifyInfo)
}
void ShakeGetItem::set_verifyinfo(const char* value, size_t size) {
  set_has_verifyinfo();
  verifyinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeGetItem.VerifyInfo)
}
::std::string* ShakeGetItem::mutable_verifyinfo() {
  set_has_verifyinfo();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.VerifyInfo)
  return verifyinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakeGetItem::release_verifyinfo() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.VerifyInfo)
  clear_has_verifyinfo();
  return verifyinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakeGetItem::set_allocated_verifyinfo(::std::string* verifyinfo) {
  if (verifyinfo != NULL) {
    set_has_verifyinfo();
  } else {
    clear_has_verifyinfo();
  }
  verifyinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verifyinfo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.VerifyInfo)
}

// optional string VerifyContent = 17;
bool ShakeGetItem::has_verifycontent() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void ShakeGetItem::set_has_verifycontent() {
  _has_bits_[0] |= 0x00000200u;
}
void ShakeGetItem::clear_has_verifycontent() {
  _has_bits_[0] &= ~0x00000200u;
}
void ShakeGetItem::clear_verifycontent() {
  verifycontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_verifycontent();
}
const ::std::string& ShakeGetItem::verifycontent() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.VerifyContent)
  return verifycontent_.GetNoArena();
}
void ShakeGetItem::set_verifycontent(const ::std::string& value) {
  set_has_verifycontent();
  verifycontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.VerifyContent)
}
#if LANG_CXX11
void ShakeGetItem::set_verifycontent(::std::string&& value) {
  set_has_verifycontent();
  verifycontent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeGetItem.VerifyContent)
}
#endif
void ShakeGetItem::set_verifycontent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_verifycontent();
  verifycontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeGetItem.VerifyContent)
}
void ShakeGetItem::set_verifycontent(const char* value, size_t size) {
  set_has_verifycontent();
  verifycontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeGetItem.VerifyContent)
}
::std::string* ShakeGetItem::mutable_verifycontent() {
  set_has_verifycontent();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.VerifyContent)
  return verifycontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakeGetItem::release_verifycontent() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.VerifyContent)
  clear_has_verifycontent();
  return verifycontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakeGetItem::set_allocated_verifycontent(::std::string* verifycontent) {
  if (verifycontent != NULL) {
    set_has_verifycontent();
  } else {
    clear_has_verifycontent();
  }
  verifycontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verifycontent);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.VerifyContent)
}

// optional int32 HeadImgVersion = 21;
bool ShakeGetItem::has_headimgversion() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
void ShakeGetItem::set_has_headimgversion() {
  _has_bits_[0] |= 0x01000000u;
}
void ShakeGetItem::clear_has_headimgversion() {
  _has_bits_[0] &= ~0x01000000u;
}
void ShakeGetItem::clear_headimgversion() {
  headimgversion_ = 0;
  clear_has_headimgversion();
}
::google::protobuf::int32 ShakeGetItem::headimgversion() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.HeadImgVersion)
  return headimgversion_;
}
void ShakeGetItem::set_headimgversion(::google::protobuf::int32 value) {
  set_has_headimgversion();
  headimgversion_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.HeadImgVersion)
}

// optional .micromsg.SnsUserInfo SnsUserInfo = 22;
bool ShakeGetItem::has_snsuserinfo() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void ShakeGetItem::set_has_snsuserinfo() {
  _has_bits_[0] |= 0x00010000u;
}
void ShakeGetItem::clear_has_snsuserinfo() {
  _has_bits_[0] &= ~0x00010000u;
}
void ShakeGetItem::clear_snsuserinfo() {
  if (snsuserinfo_ != NULL) snsuserinfo_->::micromsg::SnsUserInfo::Clear();
  clear_has_snsuserinfo();
}
const ::micromsg::SnsUserInfo& ShakeGetItem::snsuserinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.SnsUserInfo)
  return snsuserinfo_ != NULL ? *snsuserinfo_
                         : *::micromsg::SnsUserInfo::internal_default_instance();
}
::micromsg::SnsUserInfo* ShakeGetItem::mutable_snsuserinfo() {
  set_has_snsuserinfo();
  if (snsuserinfo_ == NULL) {
    snsuserinfo_ = new ::micromsg::SnsUserInfo;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.SnsUserInfo)
  return snsuserinfo_;
}
::micromsg::SnsUserInfo* ShakeGetItem::release_snsuserinfo() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.SnsUserInfo)
  clear_has_snsuserinfo();
  ::micromsg::SnsUserInfo* temp = snsuserinfo_;
  snsuserinfo_ = NULL;
  return temp;
}
void ShakeGetItem::set_allocated_snsuserinfo(::micromsg::SnsUserInfo* snsuserinfo) {
  delete snsuserinfo_;
  snsuserinfo_ = snsuserinfo;
  if (snsuserinfo) {
    set_has_snsuserinfo();
  } else {
    clear_has_snsuserinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.SnsUserInfo)
}

// optional string Country = 23;
bool ShakeGetItem::has_country() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void ShakeGetItem::set_has_country() {
  _has_bits_[0] |= 0x00000400u;
}
void ShakeGetItem::clear_has_country() {
  _has_bits_[0] &= ~0x00000400u;
}
void ShakeGetItem::clear_country() {
  country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_country();
}
const ::std::string& ShakeGetItem::country() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.Country)
  return country_.GetNoArena();
}
void ShakeGetItem::set_country(const ::std::string& value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.Country)
}
#if LANG_CXX11
void ShakeGetItem::set_country(::std::string&& value) {
  set_has_country();
  country_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeGetItem.Country)
}
#endif
void ShakeGetItem::set_country(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeGetItem.Country)
}
void ShakeGetItem::set_country(const char* value, size_t size) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeGetItem.Country)
}
::std::string* ShakeGetItem::mutable_country() {
  set_has_country();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.Country)
  return country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakeGetItem::release_country() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.Country)
  clear_has_country();
  return country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakeGetItem::set_allocated_country(::std::string* country) {
  if (country != NULL) {
    set_has_country();
  } else {
    clear_has_country();
  }
  country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.Country)
}

// optional string BigHeadImgUrl = 24;
bool ShakeGetItem::has_bigheadimgurl() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void ShakeGetItem::set_has_bigheadimgurl() {
  _has_bits_[0] |= 0x00000800u;
}
void ShakeGetItem::clear_has_bigheadimgurl() {
  _has_bits_[0] &= ~0x00000800u;
}
void ShakeGetItem::clear_bigheadimgurl() {
  bigheadimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bigheadimgurl();
}
const ::std::string& ShakeGetItem::bigheadimgurl() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.BigHeadImgUrl)
  return bigheadimgurl_.GetNoArena();
}
void ShakeGetItem::set_bigheadimgurl(const ::std::string& value) {
  set_has_bigheadimgurl();
  bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.BigHeadImgUrl)
}
#if LANG_CXX11
void ShakeGetItem::set_bigheadimgurl(::std::string&& value) {
  set_has_bigheadimgurl();
  bigheadimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeGetItem.BigHeadImgUrl)
}
#endif
void ShakeGetItem::set_bigheadimgurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bigheadimgurl();
  bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeGetItem.BigHeadImgUrl)
}
void ShakeGetItem::set_bigheadimgurl(const char* value, size_t size) {
  set_has_bigheadimgurl();
  bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeGetItem.BigHeadImgUrl)
}
::std::string* ShakeGetItem::mutable_bigheadimgurl() {
  set_has_bigheadimgurl();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.BigHeadImgUrl)
  return bigheadimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakeGetItem::release_bigheadimgurl() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.BigHeadImgUrl)
  clear_has_bigheadimgurl();
  return bigheadimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakeGetItem::set_allocated_bigheadimgurl(::std::string* bigheadimgurl) {
  if (bigheadimgurl != NULL) {
    set_has_bigheadimgurl();
  } else {
    clear_has_bigheadimgurl();
  }
  bigheadimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bigheadimgurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.BigHeadImgUrl)
}

// optional string SmallHeadImgUrl = 25;
bool ShakeGetItem::has_smallheadimgurl() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void ShakeGetItem::set_has_smallheadimgurl() {
  _has_bits_[0] |= 0x00001000u;
}
void ShakeGetItem::clear_has_smallheadimgurl() {
  _has_bits_[0] &= ~0x00001000u;
}
void ShakeGetItem::clear_smallheadimgurl() {
  smallheadimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_smallheadimgurl();
}
const ::std::string& ShakeGetItem::smallheadimgurl() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.SmallHeadImgUrl)
  return smallheadimgurl_.GetNoArena();
}
void ShakeGetItem::set_smallheadimgurl(const ::std::string& value) {
  set_has_smallheadimgurl();
  smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.SmallHeadImgUrl)
}
#if LANG_CXX11
void ShakeGetItem::set_smallheadimgurl(::std::string&& value) {
  set_has_smallheadimgurl();
  smallheadimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeGetItem.SmallHeadImgUrl)
}
#endif
void ShakeGetItem::set_smallheadimgurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_smallheadimgurl();
  smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeGetItem.SmallHeadImgUrl)
}
void ShakeGetItem::set_smallheadimgurl(const char* value, size_t size) {
  set_has_smallheadimgurl();
  smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeGetItem.SmallHeadImgUrl)
}
::std::string* ShakeGetItem::mutable_smallheadimgurl() {
  set_has_smallheadimgurl();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.SmallHeadImgUrl)
  return smallheadimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakeGetItem::release_smallheadimgurl() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.SmallHeadImgUrl)
  clear_has_smallheadimgurl();
  return smallheadimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakeGetItem::set_allocated_smallheadimgurl(::std::string* smallheadimgurl) {
  if (smallheadimgurl != NULL) {
    set_has_smallheadimgurl();
  } else {
    clear_has_smallheadimgurl();
  }
  smallheadimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smallheadimgurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.SmallHeadImgUrl)
}

// optional string MyBrandList = 26;
bool ShakeGetItem::has_mybrandlist() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void ShakeGetItem::set_has_mybrandlist() {
  _has_bits_[0] |= 0x00002000u;
}
void ShakeGetItem::clear_has_mybrandlist() {
  _has_bits_[0] &= ~0x00002000u;
}
void ShakeGetItem::clear_mybrandlist() {
  mybrandlist_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mybrandlist();
}
const ::std::string& ShakeGetItem::mybrandlist() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.MyBrandList)
  return mybrandlist_.GetNoArena();
}
void ShakeGetItem::set_mybrandlist(const ::std::string& value) {
  set_has_mybrandlist();
  mybrandlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.MyBrandList)
}
#if LANG_CXX11
void ShakeGetItem::set_mybrandlist(::std::string&& value) {
  set_has_mybrandlist();
  mybrandlist_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeGetItem.MyBrandList)
}
#endif
void ShakeGetItem::set_mybrandlist(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mybrandlist();
  mybrandlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeGetItem.MyBrandList)
}
void ShakeGetItem::set_mybrandlist(const char* value, size_t size) {
  set_has_mybrandlist();
  mybrandlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeGetItem.MyBrandList)
}
::std::string* ShakeGetItem::mutable_mybrandlist() {
  set_has_mybrandlist();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.MyBrandList)
  return mybrandlist_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakeGetItem::release_mybrandlist() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.MyBrandList)
  clear_has_mybrandlist();
  return mybrandlist_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakeGetItem::set_allocated_mybrandlist(::std::string* mybrandlist) {
  if (mybrandlist != NULL) {
    set_has_mybrandlist();
  } else {
    clear_has_mybrandlist();
  }
  mybrandlist_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mybrandlist);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.MyBrandList)
}

// optional .micromsg.CustomizedInfo CustomizedInfo = 27;
bool ShakeGetItem::has_customizedinfo() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void ShakeGetItem::set_has_customizedinfo() {
  _has_bits_[0] |= 0x00020000u;
}
void ShakeGetItem::clear_has_customizedinfo() {
  _has_bits_[0] &= ~0x00020000u;
}
void ShakeGetItem::clear_customizedinfo() {
  if (customizedinfo_ != NULL) customizedinfo_->::micromsg::CustomizedInfo::Clear();
  clear_has_customizedinfo();
}
const ::micromsg::CustomizedInfo& ShakeGetItem::customizedinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.CustomizedInfo)
  return customizedinfo_ != NULL ? *customizedinfo_
                         : *::micromsg::CustomizedInfo::internal_default_instance();
}
::micromsg::CustomizedInfo* ShakeGetItem::mutable_customizedinfo() {
  set_has_customizedinfo();
  if (customizedinfo_ == NULL) {
    customizedinfo_ = new ::micromsg::CustomizedInfo;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.CustomizedInfo)
  return customizedinfo_;
}
::micromsg::CustomizedInfo* ShakeGetItem::release_customizedinfo() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.CustomizedInfo)
  clear_has_customizedinfo();
  ::micromsg::CustomizedInfo* temp = customizedinfo_;
  customizedinfo_ = NULL;
  return temp;
}
void ShakeGetItem::set_allocated_customizedinfo(::micromsg::CustomizedInfo* customizedinfo) {
  delete customizedinfo_;
  customizedinfo_ = customizedinfo;
  if (customizedinfo) {
    set_has_customizedinfo();
  } else {
    clear_has_customizedinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.CustomizedInfo)
}

// optional string AntispamTicket = 28;
bool ShakeGetItem::has_antispamticket() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void ShakeGetItem::set_has_antispamticket() {
  _has_bits_[0] |= 0x00004000u;
}
void ShakeGetItem::clear_has_antispamticket() {
  _has_bits_[0] &= ~0x00004000u;
}
void ShakeGetItem::clear_antispamticket() {
  antispamticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_antispamticket();
}
const ::std::string& ShakeGetItem::antispamticket() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.AntispamTicket)
  return antispamticket_.GetNoArena();
}
void ShakeGetItem::set_antispamticket(const ::std::string& value) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.AntispamTicket)
}
#if LANG_CXX11
void ShakeGetItem::set_antispamticket(::std::string&& value) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeGetItem.AntispamTicket)
}
#endif
void ShakeGetItem::set_antispamticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeGetItem.AntispamTicket)
}
void ShakeGetItem::set_antispamticket(const char* value, size_t size) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeGetItem.AntispamTicket)
}
::std::string* ShakeGetItem::mutable_antispamticket() {
  set_has_antispamticket();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.AntispamTicket)
  return antispamticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakeGetItem::release_antispamticket() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.AntispamTicket)
  clear_has_antispamticket();
  return antispamticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakeGetItem::set_allocated_antispamticket(::std::string* antispamticket) {
  if (antispamticket != NULL) {
    set_has_antispamticket();
  } else {
    clear_has_antispamticket();
  }
  antispamticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), antispamticket);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.AntispamTicket)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShakeGetResponse::kBaseResponseFieldNumber;
const int ShakeGetResponse::kCountFieldNumber;
const int ShakeGetResponse::kShakeGetListFieldNumber;
const int ShakeGetResponse::kTipsFieldNumber;
const int ShakeGetResponse::kScenceFieldNumber;
const int ShakeGetResponse::kRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShakeGetResponse::ShakeGetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.ShakeGetResponse)
}
ShakeGetResponse::ShakeGetResponse(const ShakeGetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      shakegetlist_(from.shakegetlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tips_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tips()) {
    tips_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tips_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  ::memcpy(&count_, &from.count_,
    reinterpret_cast<char*>(&ret_) -
    reinterpret_cast<char*>(&count_) + sizeof(ret_));
  // @@protoc_insertion_point(copy_constructor:micromsg.ShakeGetResponse)
}

void ShakeGetResponse::SharedCtor() {
  _cached_size_ = 0;
  tips_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&ret_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(ret_));
}

ShakeGetResponse::~ShakeGetResponse() {
  // @@protoc_insertion_point(destructor:micromsg.ShakeGetResponse)
  SharedDtor();
}

void ShakeGetResponse::SharedDtor() {
  tips_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void ShakeGetResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShakeGetResponse::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShakeGetResponse& ShakeGetResponse::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShakeGetResponse* ShakeGetResponse::New(::google::protobuf::Arena* arena) const {
  ShakeGetResponse* n = new ShakeGetResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShakeGetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.ShakeGetResponse)
  shakegetlist_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    if (has_tips()) {
      GOOGLE_DCHECK(!tips_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*tips_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 28u) {
    ::memset(&count_, 0, reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&count_) + sizeof(ret_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShakeGetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.ShakeGetResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.ShakeGetItem ShakeGetList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_shakegetlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Tips = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tips()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tips().data(), this->tips().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.ShakeGetResponse.Tips");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Scence = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_scence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 Ret = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_ret();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.ShakeGetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.ShakeGetResponse)
  return false;
#undef DO_
}

void ShakeGetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.ShakeGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // required uint32 Count = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  // repeated .micromsg.ShakeGetItem ShakeGetList = 3;
  for (unsigned int i = 0, n = this->shakegetlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->shakegetlist(i), output);
  }

  // optional string Tips = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tips().data(), this->tips().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeGetResponse.Tips");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->tips(), output);
  }

  // required uint32 Scence = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->scence(), output);
  }

  // required int32 Ret = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->ret(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.ShakeGetResponse)
}

::google::protobuf::uint8* ShakeGetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.ShakeGetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // required uint32 Count = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  // repeated .micromsg.ShakeGetItem ShakeGetList = 3;
  for (unsigned int i = 0, n = this->shakegetlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->shakegetlist(i), deterministic, target);
  }

  // optional string Tips = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tips().data(), this->tips().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeGetResponse.Tips");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->tips(), target);
  }

  // required uint32 Scence = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->scence(), target);
  }

  // required int32 Ret = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->ret(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.ShakeGetResponse)
  return target;
}

size_t ShakeGetResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.ShakeGetResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_count()) {
    // required uint32 Count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  if (has_scence()) {
    // required uint32 Scence = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scence());
  }

  if (has_ret()) {
    // required int32 Ret = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }

  return total_size;
}
size_t ShakeGetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.ShakeGetResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001e) ^ 0x0000001e) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required uint32 Count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());

    // required uint32 Scence = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scence());

    // required int32 Ret = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.ShakeGetItem ShakeGetList = 3;
  {
    unsigned int count = this->shakegetlist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shakegetlist(i));
    }
  }

  // optional string Tips = 4;
  if (has_tips()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tips());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShakeGetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.ShakeGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ShakeGetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShakeGetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.ShakeGetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.ShakeGetResponse)
    MergeFrom(*source);
  }
}

void ShakeGetResponse::MergeFrom(const ShakeGetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.ShakeGetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shakegetlist_.MergeFrom(from.shakegetlist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_tips();
      tips_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tips_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000004u) {
      count_ = from.count_;
    }
    if (cached_has_bits & 0x00000008u) {
      scence_ = from.scence_;
    }
    if (cached_has_bits & 0x00000010u) {
      ret_ = from.ret_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShakeGetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.ShakeGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShakeGetResponse::CopyFrom(const ShakeGetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.ShakeGetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShakeGetResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001e) != 0x0000001e) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->shakegetlist())) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void ShakeGetResponse::Swap(ShakeGetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShakeGetResponse::InternalSwap(ShakeGetResponse* other) {
  shakegetlist_.InternalSwap(&other->shakegetlist_);
  tips_.Swap(&other->tips_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(count_, other->count_);
  std::swap(scence_, other->scence_);
  std::swap(ret_, other->ret_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShakeGetResponse::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShakeGetResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool ShakeGetResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ShakeGetResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
void ShakeGetResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
void ShakeGetResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& ShakeGetResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* ShakeGetResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* ShakeGetResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void ShakeGetResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetResponse.BaseResponse)
}

// required uint32 Count = 2;
bool ShakeGetResponse::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ShakeGetResponse::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
void ShakeGetResponse::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
void ShakeGetResponse::clear_count() {
  count_ = 0u;
  clear_has_count();
}
::google::protobuf::uint32 ShakeGetResponse::count() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetResponse.Count)
  return count_;
}
void ShakeGetResponse::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetResponse.Count)
}

// repeated .micromsg.ShakeGetItem ShakeGetList = 3;
int ShakeGetResponse::shakegetlist_size() const {
  return shakegetlist_.size();
}
void ShakeGetResponse::clear_shakegetlist() {
  shakegetlist_.Clear();
}
const ::micromsg::ShakeGetItem& ShakeGetResponse::shakegetlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetResponse.ShakeGetList)
  return shakegetlist_.Get(index);
}
::micromsg::ShakeGetItem* ShakeGetResponse::mutable_shakegetlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetResponse.ShakeGetList)
  return shakegetlist_.Mutable(index);
}
::micromsg::ShakeGetItem* ShakeGetResponse::add_shakegetlist() {
  // @@protoc_insertion_point(field_add:micromsg.ShakeGetResponse.ShakeGetList)
  return shakegetlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::ShakeGetItem >*
ShakeGetResponse::mutable_shakegetlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.ShakeGetResponse.ShakeGetList)
  return &shakegetlist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::ShakeGetItem >&
ShakeGetResponse::shakegetlist() const {
  // @@protoc_insertion_point(field_list:micromsg.ShakeGetResponse.ShakeGetList)
  return shakegetlist_;
}

// optional string Tips = 4;
bool ShakeGetResponse::has_tips() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShakeGetResponse::set_has_tips() {
  _has_bits_[0] |= 0x00000001u;
}
void ShakeGetResponse::clear_has_tips() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShakeGetResponse::clear_tips() {
  tips_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tips();
}
const ::std::string& ShakeGetResponse::tips() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetResponse.Tips)
  return tips_.GetNoArena();
}
void ShakeGetResponse::set_tips(const ::std::string& value) {
  set_has_tips();
  tips_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetResponse.Tips)
}
#if LANG_CXX11
void ShakeGetResponse::set_tips(::std::string&& value) {
  set_has_tips();
  tips_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeGetResponse.Tips)
}
#endif
void ShakeGetResponse::set_tips(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tips();
  tips_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeGetResponse.Tips)
}
void ShakeGetResponse::set_tips(const char* value, size_t size) {
  set_has_tips();
  tips_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeGetResponse.Tips)
}
::std::string* ShakeGetResponse::mutable_tips() {
  set_has_tips();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetResponse.Tips)
  return tips_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakeGetResponse::release_tips() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetResponse.Tips)
  clear_has_tips();
  return tips_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakeGetResponse::set_allocated_tips(::std::string* tips) {
  if (tips != NULL) {
    set_has_tips();
  } else {
    clear_has_tips();
  }
  tips_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tips);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetResponse.Tips)
}

// required uint32 Scence = 5;
bool ShakeGetResponse::has_scence() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ShakeGetResponse::set_has_scence() {
  _has_bits_[0] |= 0x00000008u;
}
void ShakeGetResponse::clear_has_scence() {
  _has_bits_[0] &= ~0x00000008u;
}
void ShakeGetResponse::clear_scence() {
  scence_ = 0u;
  clear_has_scence();
}
::google::protobuf::uint32 ShakeGetResponse::scence() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetResponse.Scence)
  return scence_;
}
void ShakeGetResponse::set_scence(::google::protobuf::uint32 value) {
  set_has_scence();
  scence_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetResponse.Scence)
}

// required int32 Ret = 6;
bool ShakeGetResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ShakeGetResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000010u;
}
void ShakeGetResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000010u;
}
void ShakeGetResponse::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
::google::protobuf::int32 ShakeGetResponse::ret() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetResponse.Ret)
  return ret_;
}
void ShakeGetResponse::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetResponse.Ret)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShakeMatchRequest::kBaseRequestFieldNumber;
const int ShakeMatchRequest::kOpCodeFieldNumber;
const int ShakeMatchRequest::kToUserNameFieldNumber;
const int ShakeMatchRequest::kScenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShakeMatchRequest::ShakeMatchRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.ShakeMatchRequest)
}
ShakeMatchRequest::ShakeMatchRequest(const ShakeMatchRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tousername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tousername()) {
    tousername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tousername_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  ::memcpy(&opcode_, &from.opcode_,
    reinterpret_cast<char*>(&scence_) -
    reinterpret_cast<char*>(&opcode_) + sizeof(scence_));
  // @@protoc_insertion_point(copy_constructor:micromsg.ShakeMatchRequest)
}

void ShakeMatchRequest::SharedCtor() {
  _cached_size_ = 0;
  tousername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&scence_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(scence_));
}

ShakeMatchRequest::~ShakeMatchRequest() {
  // @@protoc_insertion_point(destructor:micromsg.ShakeMatchRequest)
  SharedDtor();
}

void ShakeMatchRequest::SharedDtor() {
  tousername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void ShakeMatchRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShakeMatchRequest::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShakeMatchRequest& ShakeMatchRequest::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShakeMatchRequest* ShakeMatchRequest::New(::google::protobuf::Arena* arena) const {
  ShakeMatchRequest* n = new ShakeMatchRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShakeMatchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.ShakeMatchRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_tousername()) {
      GOOGLE_DCHECK(!tousername_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*tousername_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 12u) {
    ::memset(&opcode_, 0, reinterpret_cast<char*>(&scence_) -
      reinterpret_cast<char*>(&opcode_) + sizeof(scence_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShakeMatchRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.ShakeMatchRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 OpCode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_opcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &opcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ToUserName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tousername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tousername().data(), this->tousername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.ShakeMatchRequest.ToUserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Scence = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_scence();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.ShakeMatchRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.ShakeMatchRequest)
  return false;
#undef DO_
}

void ShakeMatchRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.ShakeMatchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required uint32 OpCode = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->opcode(), output);
  }

  // optional string ToUserName = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tousername().data(), this->tousername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeMatchRequest.ToUserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->tousername(), output);
  }

  // required uint32 Scence = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->scence(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.ShakeMatchRequest)
}

::google::protobuf::uint8* ShakeMatchRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.ShakeMatchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required uint32 OpCode = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->opcode(), target);
  }

  // optional string ToUserName = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tousername().data(), this->tousername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeMatchRequest.ToUserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->tousername(), target);
  }

  // required uint32 Scence = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->scence(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.ShakeMatchRequest)
  return target;
}

size_t ShakeMatchRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.ShakeMatchRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_opcode()) {
    // required uint32 OpCode = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opcode());
  }

  if (has_scence()) {
    // required uint32 Scence = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scence());
  }

  return total_size;
}
size_t ShakeMatchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.ShakeMatchRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000e) ^ 0x0000000e) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required uint32 OpCode = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opcode());

    // required uint32 Scence = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scence());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string ToUserName = 3;
  if (has_tousername()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tousername());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShakeMatchRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.ShakeMatchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ShakeMatchRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShakeMatchRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.ShakeMatchRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.ShakeMatchRequest)
    MergeFrom(*source);
  }
}

void ShakeMatchRequest::MergeFrom(const ShakeMatchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.ShakeMatchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_tousername();
      tousername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tousername_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000004u) {
      opcode_ = from.opcode_;
    }
    if (cached_has_bits & 0x00000008u) {
      scence_ = from.scence_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShakeMatchRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.ShakeMatchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShakeMatchRequest::CopyFrom(const ShakeMatchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.ShakeMatchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShakeMatchRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void ShakeMatchRequest::Swap(ShakeMatchRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShakeMatchRequest::InternalSwap(ShakeMatchRequest* other) {
  tousername_.Swap(&other->tousername_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(opcode_, other->opcode_);
  std::swap(scence_, other->scence_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShakeMatchRequest::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShakeMatchRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool ShakeMatchRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ShakeMatchRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
void ShakeMatchRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
void ShakeMatchRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& ShakeMatchRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMatchRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* ShakeMatchRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeMatchRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* ShakeMatchRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeMatchRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void ShakeMatchRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeMatchRequest.BaseRequest)
}

// required uint32 OpCode = 2;
bool ShakeMatchRequest::has_opcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ShakeMatchRequest::set_has_opcode() {
  _has_bits_[0] |= 0x00000004u;
}
void ShakeMatchRequest::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000004u;
}
void ShakeMatchRequest::clear_opcode() {
  opcode_ = 0u;
  clear_has_opcode();
}
::google::protobuf::uint32 ShakeMatchRequest::opcode() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMatchRequest.OpCode)
  return opcode_;
}
void ShakeMatchRequest::set_opcode(::google::protobuf::uint32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeMatchRequest.OpCode)
}

// optional string ToUserName = 3;
bool ShakeMatchRequest::has_tousername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShakeMatchRequest::set_has_tousername() {
  _has_bits_[0] |= 0x00000001u;
}
void ShakeMatchRequest::clear_has_tousername() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShakeMatchRequest::clear_tousername() {
  tousername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tousername();
}
const ::std::string& ShakeMatchRequest::tousername() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMatchRequest.ToUserName)
  return tousername_.GetNoArena();
}
void ShakeMatchRequest::set_tousername(const ::std::string& value) {
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeMatchRequest.ToUserName)
}
#if LANG_CXX11
void ShakeMatchRequest::set_tousername(::std::string&& value) {
  set_has_tousername();
  tousername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeMatchRequest.ToUserName)
}
#endif
void ShakeMatchRequest::set_tousername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeMatchRequest.ToUserName)
}
void ShakeMatchRequest::set_tousername(const char* value, size_t size) {
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeMatchRequest.ToUserName)
}
::std::string* ShakeMatchRequest::mutable_tousername() {
  set_has_tousername();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeMatchRequest.ToUserName)
  return tousername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakeMatchRequest::release_tousername() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeMatchRequest.ToUserName)
  clear_has_tousername();
  return tousername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakeMatchRequest::set_allocated_tousername(::std::string* tousername) {
  if (tousername != NULL) {
    set_has_tousername();
  } else {
    clear_has_tousername();
  }
  tousername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tousername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeMatchRequest.ToUserName)
}

// required uint32 Scence = 4;
bool ShakeMatchRequest::has_scence() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ShakeMatchRequest::set_has_scence() {
  _has_bits_[0] |= 0x00000008u;
}
void ShakeMatchRequest::clear_has_scence() {
  _has_bits_[0] &= ~0x00000008u;
}
void ShakeMatchRequest::clear_scence() {
  scence_ = 0u;
  clear_has_scence();
}
::google::protobuf::uint32 ShakeMatchRequest::scence() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMatchRequest.Scence)
  return scence_;
}
void ShakeMatchRequest::set_scence(::google::protobuf::uint32 value) {
  set_has_scence();
  scence_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeMatchRequest.Scence)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShakeMatchResponse::kBaseResponseFieldNumber;
const int ShakeMatchResponse::kTipsFieldNumber;
const int ShakeMatchResponse::kRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShakeMatchResponse::ShakeMatchResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.ShakeMatchResponse)
}
ShakeMatchResponse::ShakeMatchResponse(const ShakeMatchResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tips_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tips()) {
    tips_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tips_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:micromsg.ShakeMatchResponse)
}

void ShakeMatchResponse::SharedCtor() {
  _cached_size_ = 0;
  tips_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&ret_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(ret_));
}

ShakeMatchResponse::~ShakeMatchResponse() {
  // @@protoc_insertion_point(destructor:micromsg.ShakeMatchResponse)
  SharedDtor();
}

void ShakeMatchResponse::SharedDtor() {
  tips_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void ShakeMatchResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShakeMatchResponse::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShakeMatchResponse& ShakeMatchResponse::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShakeMatchResponse* ShakeMatchResponse::New(::google::protobuf::Arena* arena) const {
  ShakeMatchResponse* n = new ShakeMatchResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShakeMatchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.ShakeMatchResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_tips()) {
      GOOGLE_DCHECK(!tips_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*tips_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  ret_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShakeMatchResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.ShakeMatchResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Tips = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tips()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tips().data(), this->tips().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.ShakeMatchResponse.Tips");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Ret = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_ret();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.ShakeMatchResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.ShakeMatchResponse)
  return false;
#undef DO_
}

void ShakeMatchResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.ShakeMatchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // optional string Tips = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tips().data(), this->tips().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeMatchResponse.Tips");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tips(), output);
  }

  // required uint32 Ret = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->ret(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.ShakeMatchResponse)
}

::google::protobuf::uint8* ShakeMatchResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.ShakeMatchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // optional string Tips = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tips().data(), this->tips().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ShakeMatchResponse.Tips");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tips(), target);
  }

  // required uint32 Ret = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->ret(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.ShakeMatchResponse)
  return target;
}

size_t ShakeMatchResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.ShakeMatchResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_ret()) {
    // required uint32 Ret = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ret());
  }

  return total_size;
}
size_t ShakeMatchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.ShakeMatchResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required uint32 Ret = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ret());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string Tips = 2;
  if (has_tips()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tips());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShakeMatchResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.ShakeMatchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ShakeMatchResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShakeMatchResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.ShakeMatchResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.ShakeMatchResponse)
    MergeFrom(*source);
  }
}

void ShakeMatchResponse::MergeFrom(const ShakeMatchResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.ShakeMatchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_tips();
      tips_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tips_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000004u) {
      ret_ = from.ret_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShakeMatchResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.ShakeMatchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShakeMatchResponse::CopyFrom(const ShakeMatchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.ShakeMatchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShakeMatchResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void ShakeMatchResponse::Swap(ShakeMatchResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShakeMatchResponse::InternalSwap(ShakeMatchResponse* other) {
  tips_.Swap(&other->tips_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(ret_, other->ret_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShakeMatchResponse::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShakeMatchResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool ShakeMatchResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ShakeMatchResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
void ShakeMatchResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
void ShakeMatchResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& ShakeMatchResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMatchResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* ShakeMatchResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeMatchResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* ShakeMatchResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeMatchResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void ShakeMatchResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeMatchResponse.BaseResponse)
}

// optional string Tips = 2;
bool ShakeMatchResponse::has_tips() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShakeMatchResponse::set_has_tips() {
  _has_bits_[0] |= 0x00000001u;
}
void ShakeMatchResponse::clear_has_tips() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShakeMatchResponse::clear_tips() {
  tips_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tips();
}
const ::std::string& ShakeMatchResponse::tips() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMatchResponse.Tips)
  return tips_.GetNoArena();
}
void ShakeMatchResponse::set_tips(const ::std::string& value) {
  set_has_tips();
  tips_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeMatchResponse.Tips)
}
#if LANG_CXX11
void ShakeMatchResponse::set_tips(::std::string&& value) {
  set_has_tips();
  tips_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeMatchResponse.Tips)
}
#endif
void ShakeMatchResponse::set_tips(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tips();
  tips_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeMatchResponse.Tips)
}
void ShakeMatchResponse::set_tips(const char* value, size_t size) {
  set_has_tips();
  tips_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeMatchResponse.Tips)
}
::std::string* ShakeMatchResponse::mutable_tips() {
  set_has_tips();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeMatchResponse.Tips)
  return tips_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShakeMatchResponse::release_tips() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeMatchResponse.Tips)
  clear_has_tips();
  return tips_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShakeMatchResponse::set_allocated_tips(::std::string* tips) {
  if (tips != NULL) {
    set_has_tips();
  } else {
    clear_has_tips();
  }
  tips_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tips);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeMatchResponse.Tips)
}

// required uint32 Ret = 3;
bool ShakeMatchResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ShakeMatchResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000004u;
}
void ShakeMatchResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000004u;
}
void ShakeMatchResponse::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
::google::protobuf::uint32 ShakeMatchResponse::ret() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMatchResponse.Ret)
  return ret_;
}
void ShakeMatchResponse::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeMatchResponse.Ret)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShakeImgRequest::kBaseRequestFieldNumber;
const int ShakeImgRequest::kImgIdFieldNumber;
const int ShakeImgRequest::kStartPosFieldNumber;
const int ShakeImgRequest::kTotalLenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShakeImgRequest::ShakeImgRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.ShakeImgRequest)
}
ShakeImgRequest::ShakeImgRequest(const ShakeImgRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  ::memcpy(&imgid_, &from.imgid_,
    reinterpret_cast<char*>(&totallen_) -
    reinterpret_cast<char*>(&imgid_) + sizeof(totallen_));
  // @@protoc_insertion_point(copy_constructor:micromsg.ShakeImgRequest)
}

void ShakeImgRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&totallen_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(totallen_));
}

ShakeImgRequest::~ShakeImgRequest() {
  // @@protoc_insertion_point(destructor:micromsg.ShakeImgRequest)
  SharedDtor();
}

void ShakeImgRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void ShakeImgRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShakeImgRequest::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShakeImgRequest& ShakeImgRequest::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShakeImgRequest* ShakeImgRequest::New(::google::protobuf::Arena* arena) const {
  ShakeImgRequest* n = new ShakeImgRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShakeImgRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.ShakeImgRequest)
  if (has_baserequest()) {
    GOOGLE_DCHECK(baserequest_ != NULL);
    baserequest_->::micromsg::BaseRequest::Clear();
  }
  if (_has_bits_[0 / 32] & 14u) {
    ::memset(&imgid_, 0, reinterpret_cast<char*>(&totallen_) -
      reinterpret_cast<char*>(&imgid_) + sizeof(totallen_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShakeImgRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.ShakeImgRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ImgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_imgid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &imgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 StartPos = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_startpos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &startpos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 TotalLen = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_totallen();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &totallen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.ShakeImgRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.ShakeImgRequest)
  return false;
#undef DO_
}

void ShakeImgRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.ShakeImgRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required uint32 ImgId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->imgid(), output);
  }

  // required uint32 StartPos = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->startpos(), output);
  }

  // required uint32 TotalLen = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->totallen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.ShakeImgRequest)
}

::google::protobuf::uint8* ShakeImgRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.ShakeImgRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required uint32 ImgId = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->imgid(), target);
  }

  // required uint32 StartPos = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->startpos(), target);
  }

  // required uint32 TotalLen = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->totallen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.ShakeImgRequest)
  return target;
}

size_t ShakeImgRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.ShakeImgRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_imgid()) {
    // required uint32 ImgId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imgid());
  }

  if (has_startpos()) {
    // required uint32 StartPos = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->startpos());
  }

  if (has_totallen()) {
    // required uint32 TotalLen = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->totallen());
  }

  return total_size;
}
size_t ShakeImgRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.ShakeImgRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required uint32 ImgId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imgid());

    // required uint32 StartPos = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->startpos());

    // required uint32 TotalLen = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->totallen());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShakeImgRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.ShakeImgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ShakeImgRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShakeImgRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.ShakeImgRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.ShakeImgRequest)
    MergeFrom(*source);
  }
}

void ShakeImgRequest::MergeFrom(const ShakeImgRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.ShakeImgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000002u) {
      imgid_ = from.imgid_;
    }
    if (cached_has_bits & 0x00000004u) {
      startpos_ = from.startpos_;
    }
    if (cached_has_bits & 0x00000008u) {
      totallen_ = from.totallen_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShakeImgRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.ShakeImgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShakeImgRequest::CopyFrom(const ShakeImgRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.ShakeImgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShakeImgRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void ShakeImgRequest::Swap(ShakeImgRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShakeImgRequest::InternalSwap(ShakeImgRequest* other) {
  std::swap(baserequest_, other->baserequest_);
  std::swap(imgid_, other->imgid_);
  std::swap(startpos_, other->startpos_);
  std::swap(totallen_, other->totallen_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShakeImgRequest::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShakeImgRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool ShakeImgRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShakeImgRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
void ShakeImgRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShakeImgRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& ShakeImgRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeImgRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* ShakeImgRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeImgRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* ShakeImgRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeImgRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void ShakeImgRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeImgRequest.BaseRequest)
}

// required uint32 ImgId = 2;
bool ShakeImgRequest::has_imgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ShakeImgRequest::set_has_imgid() {
  _has_bits_[0] |= 0x00000002u;
}
void ShakeImgRequest::clear_has_imgid() {
  _has_bits_[0] &= ~0x00000002u;
}
void ShakeImgRequest::clear_imgid() {
  imgid_ = 0u;
  clear_has_imgid();
}
::google::protobuf::uint32 ShakeImgRequest::imgid() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeImgRequest.ImgId)
  return imgid_;
}
void ShakeImgRequest::set_imgid(::google::protobuf::uint32 value) {
  set_has_imgid();
  imgid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeImgRequest.ImgId)
}

// required uint32 StartPos = 3;
bool ShakeImgRequest::has_startpos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ShakeImgRequest::set_has_startpos() {
  _has_bits_[0] |= 0x00000004u;
}
void ShakeImgRequest::clear_has_startpos() {
  _has_bits_[0] &= ~0x00000004u;
}
void ShakeImgRequest::clear_startpos() {
  startpos_ = 0u;
  clear_has_startpos();
}
::google::protobuf::uint32 ShakeImgRequest::startpos() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeImgRequest.StartPos)
  return startpos_;
}
void ShakeImgRequest::set_startpos(::google::protobuf::uint32 value) {
  set_has_startpos();
  startpos_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeImgRequest.StartPos)
}

// required uint32 TotalLen = 4;
bool ShakeImgRequest::has_totallen() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ShakeImgRequest::set_has_totallen() {
  _has_bits_[0] |= 0x00000008u;
}
void ShakeImgRequest::clear_has_totallen() {
  _has_bits_[0] &= ~0x00000008u;
}
void ShakeImgRequest::clear_totallen() {
  totallen_ = 0u;
  clear_has_totallen();
}
::google::protobuf::uint32 ShakeImgRequest::totallen() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeImgRequest.TotalLen)
  return totallen_;
}
void ShakeImgRequest::set_totallen(::google::protobuf::uint32 value) {
  set_has_totallen();
  totallen_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeImgRequest.TotalLen)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShakeImgResponse::kBaseResponseFieldNumber;
const int ShakeImgResponse::kImgIdFieldNumber;
const int ShakeImgResponse::kTotalLenFieldNumber;
const int ShakeImgResponse::kStartPosFieldNumber;
const int ShakeImgResponse::kBufferFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShakeImgResponse::ShakeImgResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.ShakeImgResponse)
}
ShakeImgResponse::ShakeImgResponse(const ShakeImgResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  if (from.has_buffer()) {
    buffer_ = new ::micromsg::SKBuiltinBuffer_t(*from.buffer_);
  } else {
    buffer_ = NULL;
  }
  ::memcpy(&imgid_, &from.imgid_,
    reinterpret_cast<char*>(&startpos_) -
    reinterpret_cast<char*>(&imgid_) + sizeof(startpos_));
  // @@protoc_insertion_point(copy_constructor:micromsg.ShakeImgResponse)
}

void ShakeImgResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&startpos_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(startpos_));
}

ShakeImgResponse::~ShakeImgResponse() {
  // @@protoc_insertion_point(destructor:micromsg.ShakeImgResponse)
  SharedDtor();
}

void ShakeImgResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
  if (this != internal_default_instance()) {
    delete buffer_;
  }
}

void ShakeImgResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShakeImgResponse::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShakeImgResponse& ShakeImgResponse::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShakeImgResponse* ShakeImgResponse::New(::google::protobuf::Arena* arena) const {
  ShakeImgResponse* n = new ShakeImgResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShakeImgResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.ShakeImgResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
    if (has_buffer()) {
      GOOGLE_DCHECK(buffer_ != NULL);
      buffer_->::micromsg::SKBuiltinBuffer_t::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 28u) {
    ::memset(&imgid_, 0, reinterpret_cast<char*>(&startpos_) -
      reinterpret_cast<char*>(&imgid_) + sizeof(startpos_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShakeImgResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.ShakeImgResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ImgId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_imgid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &imgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 TotalLen = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_totallen();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &totallen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 StartPos = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_startpos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &startpos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.SKBuiltinBuffer_t Buffer = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_buffer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.ShakeImgResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.ShakeImgResponse)
  return false;
#undef DO_
}

void ShakeImgResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.ShakeImgResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // required uint32 ImgId = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->imgid(), output);
  }

  // required uint32 TotalLen = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->totallen(), output);
  }

  // required uint32 StartPos = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->startpos(), output);
  }

  // required .micromsg.SKBuiltinBuffer_t Buffer = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->buffer_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.ShakeImgResponse)
}

::google::protobuf::uint8* ShakeImgResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.ShakeImgResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // required uint32 ImgId = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->imgid(), target);
  }

  // required uint32 TotalLen = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->totallen(), target);
  }

  // required uint32 StartPos = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->startpos(), target);
  }

  // required .micromsg.SKBuiltinBuffer_t Buffer = 5;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->buffer_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.ShakeImgResponse)
  return target;
}

size_t ShakeImgResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.ShakeImgResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_buffer()) {
    // required .micromsg.SKBuiltinBuffer_t Buffer = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->buffer_);
  }

  if (has_imgid()) {
    // required uint32 ImgId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imgid());
  }

  if (has_totallen()) {
    // required uint32 TotalLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->totallen());
  }

  if (has_startpos()) {
    // required uint32 StartPos = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->startpos());
  }

  return total_size;
}
size_t ShakeImgResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.ShakeImgResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required .micromsg.SKBuiltinBuffer_t Buffer = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->buffer_);

    // required uint32 ImgId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imgid());

    // required uint32 TotalLen = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->totallen());

    // required uint32 StartPos = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->startpos());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShakeImgResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.ShakeImgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ShakeImgResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShakeImgResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.ShakeImgResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.ShakeImgResponse)
    MergeFrom(*source);
  }
}

void ShakeImgResponse::MergeFrom(const ShakeImgResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.ShakeImgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_buffer()->::micromsg::SKBuiltinBuffer_t::MergeFrom(from.buffer());
    }
    if (cached_has_bits & 0x00000004u) {
      imgid_ = from.imgid_;
    }
    if (cached_has_bits & 0x00000008u) {
      totallen_ = from.totallen_;
    }
    if (cached_has_bits & 0x00000010u) {
      startpos_ = from.startpos_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ShakeImgResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.ShakeImgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShakeImgResponse::CopyFrom(const ShakeImgResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.ShakeImgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShakeImgResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  if (has_buffer()) {
    if (!this->buffer_->IsInitialized()) return false;
  }
  return true;
}

void ShakeImgResponse::Swap(ShakeImgResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShakeImgResponse::InternalSwap(ShakeImgResponse* other) {
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(buffer_, other->buffer_);
  std::swap(imgid_, other->imgid_);
  std::swap(totallen_, other->totallen_);
  std::swap(startpos_, other->startpos_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShakeImgResponse::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShakeImgResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool ShakeImgResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShakeImgResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
void ShakeImgResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShakeImgResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& ShakeImgResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeImgResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* ShakeImgResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeImgResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* ShakeImgResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeImgResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void ShakeImgResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeImgResponse.BaseResponse)
}

// required uint32 ImgId = 2;
bool ShakeImgResponse::has_imgid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ShakeImgResponse::set_has_imgid() {
  _has_bits_[0] |= 0x00000004u;
}
void ShakeImgResponse::clear_has_imgid() {
  _has_bits_[0] &= ~0x00000004u;
}
void ShakeImgResponse::clear_imgid() {
  imgid_ = 0u;
  clear_has_imgid();
}
::google::protobuf::uint32 ShakeImgResponse::imgid() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeImgResponse.ImgId)
  return imgid_;
}
void ShakeImgResponse::set_imgid(::google::protobuf::uint32 value) {
  set_has_imgid();
  imgid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeImgResponse.ImgId)
}

// required uint32 TotalLen = 3;
bool ShakeImgResponse::has_totallen() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ShakeImgResponse::set_has_totallen() {
  _has_bits_[0] |= 0x00000008u;
}
void ShakeImgResponse::clear_has_totallen() {
  _has_bits_[0] &= ~0x00000008u;
}
void ShakeImgResponse::clear_totallen() {
  totallen_ = 0u;
  clear_has_totallen();
}
::google::protobuf::uint32 ShakeImgResponse::totallen() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeImgResponse.TotalLen)
  return totallen_;
}
void ShakeImgResponse::set_totallen(::google::protobuf::uint32 value) {
  set_has_totallen();
  totallen_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeImgResponse.TotalLen)
}

// required uint32 StartPos = 4;
bool ShakeImgResponse::has_startpos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ShakeImgResponse::set_has_startpos() {
  _has_bits_[0] |= 0x00000010u;
}
void ShakeImgResponse::clear_has_startpos() {
  _has_bits_[0] &= ~0x00000010u;
}
void ShakeImgResponse::clear_startpos() {
  startpos_ = 0u;
  clear_has_startpos();
}
::google::protobuf::uint32 ShakeImgResponse::startpos() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeImgResponse.StartPos)
  return startpos_;
}
void ShakeImgResponse::set_startpos(::google::protobuf::uint32 value) {
  set_has_startpos();
  startpos_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeImgResponse.StartPos)
}

// required .micromsg.SKBuiltinBuffer_t Buffer = 5;
bool ShakeImgResponse::has_buffer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ShakeImgResponse::set_has_buffer() {
  _has_bits_[0] |= 0x00000002u;
}
void ShakeImgResponse::clear_has_buffer() {
  _has_bits_[0] &= ~0x00000002u;
}
void ShakeImgResponse::clear_buffer() {
  if (buffer_ != NULL) buffer_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_buffer();
}
const ::micromsg::SKBuiltinBuffer_t& ShakeImgResponse::buffer() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeImgResponse.Buffer)
  return buffer_ != NULL ? *buffer_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
::micromsg::SKBuiltinBuffer_t* ShakeImgResponse::mutable_buffer() {
  set_has_buffer();
  if (buffer_ == NULL) {
    buffer_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeImgResponse.Buffer)
  return buffer_;
}
::micromsg::SKBuiltinBuffer_t* ShakeImgResponse::release_buffer() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeImgResponse.Buffer)
  clear_has_buffer();
  ::micromsg::SKBuiltinBuffer_t* temp = buffer_;
  buffer_ = NULL;
  return temp;
}
void ShakeImgResponse::set_allocated_buffer(::micromsg::SKBuiltinBuffer_t* buffer) {
  delete buffer_;
  buffer_ = buffer;
  if (buffer) {
    set_has_buffer();
  } else {
    clear_has_buffer();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeImgResponse.Buffer)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScanStreetViewRequest::kBaseRequestFieldNumber;
const int ScanStreetViewRequest::kUserPosFieldNumber;
const int ScanStreetViewRequest::kSceneFieldNumber;
const int ScanStreetViewRequest::kHeadingFieldNumber;
const int ScanStreetViewRequest::kPitchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScanStreetViewRequest::ScanStreetViewRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.ScanStreetViewRequest)
}
ScanStreetViewRequest::ScanStreetViewRequest(const ScanStreetViewRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  if (from.has_userpos()) {
    userpos_ = new ::micromsg::PositionInfo(*from.userpos_);
  } else {
    userpos_ = NULL;
  }
  ::memcpy(&scene_, &from.scene_,
    reinterpret_cast<char*>(&pitch_) -
    reinterpret_cast<char*>(&scene_) + sizeof(pitch_));
  // @@protoc_insertion_point(copy_constructor:micromsg.ScanStreetViewRequest)
}

void ScanStreetViewRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&pitch_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(pitch_));
}

ScanStreetViewRequest::~ScanStreetViewRequest() {
  // @@protoc_insertion_point(destructor:micromsg.ScanStreetViewRequest)
  SharedDtor();
}

void ScanStreetViewRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
  if (this != internal_default_instance()) {
    delete userpos_;
  }
}

void ScanStreetViewRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScanStreetViewRequest::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScanStreetViewRequest& ScanStreetViewRequest::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

ScanStreetViewRequest* ScanStreetViewRequest::New(::google::protobuf::Arena* arena) const {
  ScanStreetViewRequest* n = new ScanStreetViewRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScanStreetViewRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.ScanStreetViewRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
    if (has_userpos()) {
      GOOGLE_DCHECK(userpos_ != NULL);
      userpos_->::micromsg::PositionInfo::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 28u) {
    ::memset(&scene_, 0, reinterpret_cast<char*>(&pitch_) -
      reinterpret_cast<char*>(&scene_) + sizeof(pitch_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ScanStreetViewRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.ScanStreetViewRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.PositionInfo UserPos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userpos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 Scene = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_scene();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float Heading = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u)) {
          set_has_heading();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &heading_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float Pitch = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u)) {
          set_has_pitch();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &pitch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.ScanStreetViewRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.ScanStreetViewRequest)
  return false;
#undef DO_
}

void ScanStreetViewRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.ScanStreetViewRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required .micromsg.PositionInfo UserPos = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->userpos_, output);
  }

  // optional uint32 Scene = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->scene(), output);
  }

  // optional float Heading = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->heading(), output);
  }

  // optional float Pitch = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->pitch(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.ScanStreetViewRequest)
}

::google::protobuf::uint8* ScanStreetViewRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.ScanStreetViewRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required .micromsg.PositionInfo UserPos = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->userpos_, deterministic, target);
  }

  // optional uint32 Scene = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->scene(), target);
  }

  // optional float Heading = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->heading(), target);
  }

  // optional float Pitch = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->pitch(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.ScanStreetViewRequest)
  return target;
}

size_t ScanStreetViewRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.ScanStreetViewRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_userpos()) {
    // required .micromsg.PositionInfo UserPos = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->userpos_);
  }

  return total_size;
}
size_t ScanStreetViewRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.ScanStreetViewRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required .micromsg.PositionInfo UserPos = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->userpos_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 28u) {
    // optional uint32 Scene = 3;
    if (has_scene()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->scene());
    }

    // optional float Heading = 4;
    if (has_heading()) {
      total_size += 1 + 4;
    }

    // optional float Pitch = 5;
    if (has_pitch()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScanStreetViewRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.ScanStreetViewRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ScanStreetViewRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScanStreetViewRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.ScanStreetViewRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.ScanStreetViewRequest)
    MergeFrom(*source);
  }
}

void ScanStreetViewRequest::MergeFrom(const ScanStreetViewRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.ScanStreetViewRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_userpos()->::micromsg::PositionInfo::MergeFrom(from.userpos());
    }
    if (cached_has_bits & 0x00000004u) {
      scene_ = from.scene_;
    }
    if (cached_has_bits & 0x00000008u) {
      heading_ = from.heading_;
    }
    if (cached_has_bits & 0x00000010u) {
      pitch_ = from.pitch_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ScanStreetViewRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.ScanStreetViewRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScanStreetViewRequest::CopyFrom(const ScanStreetViewRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.ScanStreetViewRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScanStreetViewRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  if (has_userpos()) {
    if (!this->userpos_->IsInitialized()) return false;
  }
  return true;
}

void ScanStreetViewRequest::Swap(ScanStreetViewRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScanStreetViewRequest::InternalSwap(ScanStreetViewRequest* other) {
  std::swap(baserequest_, other->baserequest_);
  std::swap(userpos_, other->userpos_);
  std::swap(scene_, other->scene_);
  std::swap(heading_, other->heading_);
  std::swap(pitch_, other->pitch_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ScanStreetViewRequest::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ScanStreetViewRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool ScanStreetViewRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ScanStreetViewRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
void ScanStreetViewRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
void ScanStreetViewRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& ScanStreetViewRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanStreetViewRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* ScanStreetViewRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ScanStreetViewRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* ScanStreetViewRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.ScanStreetViewRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void ScanStreetViewRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ScanStreetViewRequest.BaseRequest)
}

// required .micromsg.PositionInfo UserPos = 2;
bool ScanStreetViewRequest::has_userpos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ScanStreetViewRequest::set_has_userpos() {
  _has_bits_[0] |= 0x00000002u;
}
void ScanStreetViewRequest::clear_has_userpos() {
  _has_bits_[0] &= ~0x00000002u;
}
void ScanStreetViewRequest::clear_userpos() {
  if (userpos_ != NULL) userpos_->::micromsg::PositionInfo::Clear();
  clear_has_userpos();
}
const ::micromsg::PositionInfo& ScanStreetViewRequest::userpos() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanStreetViewRequest.UserPos)
  return userpos_ != NULL ? *userpos_
                         : *::micromsg::PositionInfo::internal_default_instance();
}
::micromsg::PositionInfo* ScanStreetViewRequest::mutable_userpos() {
  set_has_userpos();
  if (userpos_ == NULL) {
    userpos_ = new ::micromsg::PositionInfo;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ScanStreetViewRequest.UserPos)
  return userpos_;
}
::micromsg::PositionInfo* ScanStreetViewRequest::release_userpos() {
  // @@protoc_insertion_point(field_release:micromsg.ScanStreetViewRequest.UserPos)
  clear_has_userpos();
  ::micromsg::PositionInfo* temp = userpos_;
  userpos_ = NULL;
  return temp;
}
void ScanStreetViewRequest::set_allocated_userpos(::micromsg::PositionInfo* userpos) {
  delete userpos_;
  userpos_ = userpos;
  if (userpos) {
    set_has_userpos();
  } else {
    clear_has_userpos();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ScanStreetViewRequest.UserPos)
}

// optional uint32 Scene = 3;
bool ScanStreetViewRequest::has_scene() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ScanStreetViewRequest::set_has_scene() {
  _has_bits_[0] |= 0x00000004u;
}
void ScanStreetViewRequest::clear_has_scene() {
  _has_bits_[0] &= ~0x00000004u;
}
void ScanStreetViewRequest::clear_scene() {
  scene_ = 0u;
  clear_has_scene();
}
::google::protobuf::uint32 ScanStreetViewRequest::scene() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanStreetViewRequest.Scene)
  return scene_;
}
void ScanStreetViewRequest::set_scene(::google::protobuf::uint32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ScanStreetViewRequest.Scene)
}

// optional float Heading = 4;
bool ScanStreetViewRequest::has_heading() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ScanStreetViewRequest::set_has_heading() {
  _has_bits_[0] |= 0x00000008u;
}
void ScanStreetViewRequest::clear_has_heading() {
  _has_bits_[0] &= ~0x00000008u;
}
void ScanStreetViewRequest::clear_heading() {
  heading_ = 0;
  clear_has_heading();
}
float ScanStreetViewRequest::heading() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanStreetViewRequest.Heading)
  return heading_;
}
void ScanStreetViewRequest::set_heading(float value) {
  set_has_heading();
  heading_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ScanStreetViewRequest.Heading)
}

// optional float Pitch = 5;
bool ScanStreetViewRequest::has_pitch() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ScanStreetViewRequest::set_has_pitch() {
  _has_bits_[0] |= 0x00000010u;
}
void ScanStreetViewRequest::clear_has_pitch() {
  _has_bits_[0] &= ~0x00000010u;
}
void ScanStreetViewRequest::clear_pitch() {
  pitch_ = 0;
  clear_has_pitch();
}
float ScanStreetViewRequest::pitch() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanStreetViewRequest.Pitch)
  return pitch_;
}
void ScanStreetViewRequest::set_pitch(float value) {
  set_has_pitch();
  pitch_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ScanStreetViewRequest.Pitch)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScanStreetViewResponse::kBaseResponseFieldNumber;
const int ScanStreetViewResponse::kTypeFieldNumber;
const int ScanStreetViewResponse::kDescriptionXMLFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScanStreetViewResponse::ScanStreetViewResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.ScanStreetViewResponse)
}
ScanStreetViewResponse::ScanStreetViewResponse(const ScanStreetViewResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  descriptionxml_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_descriptionxml()) {
    descriptionxml_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.descriptionxml_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:micromsg.ScanStreetViewResponse)
}

void ScanStreetViewResponse::SharedCtor() {
  _cached_size_ = 0;
  descriptionxml_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(type_));
}

ScanStreetViewResponse::~ScanStreetViewResponse() {
  // @@protoc_insertion_point(destructor:micromsg.ScanStreetViewResponse)
  SharedDtor();
}

void ScanStreetViewResponse::SharedDtor() {
  descriptionxml_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void ScanStreetViewResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScanStreetViewResponse::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScanStreetViewResponse& ScanStreetViewResponse::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

ScanStreetViewResponse* ScanStreetViewResponse::New(::google::protobuf::Arena* arena) const {
  ScanStreetViewResponse* n = new ScanStreetViewResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScanStreetViewResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.ScanStreetViewResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_descriptionxml()) {
      GOOGLE_DCHECK(!descriptionxml_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*descriptionxml_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  type_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ScanStreetViewResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.ScanStreetViewResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string DescriptionXML = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_descriptionxml()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->descriptionxml().data(), this->descriptionxml().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.ScanStreetViewResponse.DescriptionXML");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.ScanStreetViewResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.ScanStreetViewResponse)
  return false;
#undef DO_
}

void ScanStreetViewResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.ScanStreetViewResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // required uint32 Type = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type(), output);
  }

  // optional string DescriptionXML = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->descriptionxml().data(), this->descriptionxml().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ScanStreetViewResponse.DescriptionXML");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->descriptionxml(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.ScanStreetViewResponse)
}

::google::protobuf::uint8* ScanStreetViewResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.ScanStreetViewResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // required uint32 Type = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type(), target);
  }

  // optional string DescriptionXML = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->descriptionxml().data(), this->descriptionxml().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ScanStreetViewResponse.DescriptionXML");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->descriptionxml(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.ScanStreetViewResponse)
  return target;
}

size_t ScanStreetViewResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.ScanStreetViewResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_type()) {
    // required uint32 Type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  return total_size;
}
size_t ScanStreetViewResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.ScanStreetViewResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required uint32 Type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string DescriptionXML = 3;
  if (has_descriptionxml()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->descriptionxml());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScanStreetViewResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.ScanStreetViewResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ScanStreetViewResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScanStreetViewResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.ScanStreetViewResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.ScanStreetViewResponse)
    MergeFrom(*source);
  }
}

void ScanStreetViewResponse::MergeFrom(const ScanStreetViewResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.ScanStreetViewResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_descriptionxml();
      descriptionxml_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.descriptionxml_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ScanStreetViewResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.ScanStreetViewResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScanStreetViewResponse::CopyFrom(const ScanStreetViewResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.ScanStreetViewResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScanStreetViewResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void ScanStreetViewResponse::Swap(ScanStreetViewResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScanStreetViewResponse::InternalSwap(ScanStreetViewResponse* other) {
  descriptionxml_.Swap(&other->descriptionxml_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(type_, other->type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ScanStreetViewResponse::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ScanStreetViewResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool ScanStreetViewResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ScanStreetViewResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
void ScanStreetViewResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
void ScanStreetViewResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& ScanStreetViewResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanStreetViewResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* ScanStreetViewResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ScanStreetViewResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* ScanStreetViewResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.ScanStreetViewResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void ScanStreetViewResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ScanStreetViewResponse.BaseResponse)
}

// required uint32 Type = 2;
bool ScanStreetViewResponse::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ScanStreetViewResponse::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
void ScanStreetViewResponse::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void ScanStreetViewResponse::clear_type() {
  type_ = 0u;
  clear_has_type();
}
::google::protobuf::uint32 ScanStreetViewResponse::type() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanStreetViewResponse.Type)
  return type_;
}
void ScanStreetViewResponse::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ScanStreetViewResponse.Type)
}

// optional string DescriptionXML = 3;
bool ScanStreetViewResponse::has_descriptionxml() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ScanStreetViewResponse::set_has_descriptionxml() {
  _has_bits_[0] |= 0x00000001u;
}
void ScanStreetViewResponse::clear_has_descriptionxml() {
  _has_bits_[0] &= ~0x00000001u;
}
void ScanStreetViewResponse::clear_descriptionxml() {
  descriptionxml_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_descriptionxml();
}
const ::std::string& ScanStreetViewResponse::descriptionxml() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanStreetViewResponse.DescriptionXML)
  return descriptionxml_.GetNoArena();
}
void ScanStreetViewResponse::set_descriptionxml(const ::std::string& value) {
  set_has_descriptionxml();
  descriptionxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ScanStreetViewResponse.DescriptionXML)
}
#if LANG_CXX11
void ScanStreetViewResponse::set_descriptionxml(::std::string&& value) {
  set_has_descriptionxml();
  descriptionxml_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ScanStreetViewResponse.DescriptionXML)
}
#endif
void ScanStreetViewResponse::set_descriptionxml(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_descriptionxml();
  descriptionxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ScanStreetViewResponse.DescriptionXML)
}
void ScanStreetViewResponse::set_descriptionxml(const char* value, size_t size) {
  set_has_descriptionxml();
  descriptionxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ScanStreetViewResponse.DescriptionXML)
}
::std::string* ScanStreetViewResponse::mutable_descriptionxml() {
  set_has_descriptionxml();
  // @@protoc_insertion_point(field_mutable:micromsg.ScanStreetViewResponse.DescriptionXML)
  return descriptionxml_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ScanStreetViewResponse::release_descriptionxml() {
  // @@protoc_insertion_point(field_release:micromsg.ScanStreetViewResponse.DescriptionXML)
  clear_has_descriptionxml();
  return descriptionxml_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ScanStreetViewResponse::set_allocated_descriptionxml(::std::string* descriptionxml) {
  if (descriptionxml != NULL) {
    set_has_descriptionxml();
  } else {
    clear_has_descriptionxml();
  }
  descriptionxml_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), descriptionxml);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ScanStreetViewResponse.DescriptionXML)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LbsRoomRequest::kBaseRequestFieldNumber;
const int LbsRoomRequest::kOpCodeFieldNumber;
const int LbsRoomRequest::kLongitudeFieldNumber;
const int LbsRoomRequest::kLatitudeFieldNumber;
const int LbsRoomRequest::kPrecisionFieldNumber;
const int LbsRoomRequest::kMacAddrFieldNumber;
const int LbsRoomRequest::kCellIdFieldNumber;
const int LbsRoomRequest::kGPSSourceFieldNumber;
const int LbsRoomRequest::kRoomNameFieldNumber;
const int LbsRoomRequest::kExitSceneFieldNumber;
const int LbsRoomRequest::kStayTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LbsRoomRequest::LbsRoomRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.LbsRoomRequest)
}
LbsRoomRequest::LbsRoomRequest(const LbsRoomRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  macaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_macaddr()) {
    macaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macaddr_);
  }
  cellid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cellid()) {
    cellid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cellid_);
  }
  roomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_roomname()) {
    roomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomname_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  ::memcpy(&opcode_, &from.opcode_,
    reinterpret_cast<char*>(&staytime_) -
    reinterpret_cast<char*>(&opcode_) + sizeof(staytime_));
  // @@protoc_insertion_point(copy_constructor:micromsg.LbsRoomRequest)
}

void LbsRoomRequest::SharedCtor() {
  _cached_size_ = 0;
  macaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cellid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&staytime_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(staytime_));
}

LbsRoomRequest::~LbsRoomRequest() {
  // @@protoc_insertion_point(destructor:micromsg.LbsRoomRequest)
  SharedDtor();
}

void LbsRoomRequest::SharedDtor() {
  macaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cellid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roomname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void LbsRoomRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LbsRoomRequest::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LbsRoomRequest& LbsRoomRequest::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

LbsRoomRequest* LbsRoomRequest::New(::google::protobuf::Arena* arena) const {
  LbsRoomRequest* n = new LbsRoomRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LbsRoomRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.LbsRoomRequest)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_macaddr()) {
      GOOGLE_DCHECK(!macaddr_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*macaddr_.UnsafeRawStringPointer())->clear();
    }
    if (has_cellid()) {
      GOOGLE_DCHECK(!cellid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*cellid_.UnsafeRawStringPointer())->clear();
    }
    if (has_roomname()) {
      GOOGLE_DCHECK(!roomname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*roomname_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 240u) {
    ::memset(&opcode_, 0, reinterpret_cast<char*>(&precision_) -
      reinterpret_cast<char*>(&opcode_) + sizeof(precision_));
  }
  if (_has_bits_[8 / 32] & 1792u) {
    ::memset(&gpssource_, 0, reinterpret_cast<char*>(&staytime_) -
      reinterpret_cast<char*>(&gpssource_) + sizeof(staytime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LbsRoomRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.LbsRoomRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 OpCode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_opcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &opcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float Longitude = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u)) {
          set_has_longitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float Latitude = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u)) {
          set_has_latitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 Precision = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_precision();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &precision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string MacAddr = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_macaddr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->macaddr().data(), this->macaddr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsRoomRequest.MacAddr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string CellId = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cellid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cellid().data(), this->cellid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsRoomRequest.CellId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 GPSSource = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_gpssource();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gpssource_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string RoomName = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->roomname().data(), this->roomname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsRoomRequest.RoomName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ExitScene = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has_exitscene();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exitscene_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 StayTime = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {
          set_has_staytime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &staytime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.LbsRoomRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.LbsRoomRequest)
  return false;
#undef DO_
}

void LbsRoomRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.LbsRoomRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required uint32 OpCode = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->opcode(), output);
  }

  // required float Longitude = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->longitude(), output);
  }

  // required float Latitude = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->latitude(), output);
  }

  // required int32 Precision = 5;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->precision(), output);
  }

  // optional string MacAddr = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->macaddr().data(), this->macaddr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsRoomRequest.MacAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->macaddr(), output);
  }

  // optional string CellId = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cellid().data(), this->cellid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsRoomRequest.CellId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->cellid(), output);
  }

  // optional int32 GPSSource = 8;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->gpssource(), output);
  }

  // optional string RoomName = 9;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roomname().data(), this->roomname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsRoomRequest.RoomName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->roomname(), output);
  }

  // optional int32 ExitScene = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->exitscene(), output);
  }

  // optional int32 StayTime = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->staytime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.LbsRoomRequest)
}

::google::protobuf::uint8* LbsRoomRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.LbsRoomRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required uint32 OpCode = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->opcode(), target);
  }

  // required float Longitude = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->longitude(), target);
  }

  // required float Latitude = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->latitude(), target);
  }

  // required int32 Precision = 5;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->precision(), target);
  }

  // optional string MacAddr = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->macaddr().data(), this->macaddr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsRoomRequest.MacAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->macaddr(), target);
  }

  // optional string CellId = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cellid().data(), this->cellid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsRoomRequest.CellId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->cellid(), target);
  }

  // optional int32 GPSSource = 8;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->gpssource(), target);
  }

  // optional string RoomName = 9;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roomname().data(), this->roomname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsRoomRequest.RoomName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->roomname(), target);
  }

  // optional int32 ExitScene = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->exitscene(), target);
  }

  // optional int32 StayTime = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->staytime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.LbsRoomRequest)
  return target;
}

size_t LbsRoomRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.LbsRoomRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_opcode()) {
    // required uint32 OpCode = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opcode());
  }

  if (has_longitude()) {
    // required float Longitude = 3;
    total_size += 1 + 4;
  }

  if (has_latitude()) {
    // required float Latitude = 4;
    total_size += 1 + 4;
  }

  if (has_precision()) {
    // required int32 Precision = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->precision());
  }

  return total_size;
}
size_t LbsRoomRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.LbsRoomRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x000000f8) ^ 0x000000f8) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required uint32 OpCode = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opcode());

    // required float Longitude = 3;
    total_size += 1 + 4;

    // required float Latitude = 4;
    total_size += 1 + 4;

    // required int32 Precision = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->precision());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string MacAddr = 6;
    if (has_macaddr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->macaddr());
    }

    // optional string CellId = 7;
    if (has_cellid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cellid());
    }

    // optional string RoomName = 9;
    if (has_roomname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->roomname());
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional int32 GPSSource = 8;
    if (has_gpssource()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gpssource());
    }

    // optional int32 ExitScene = 10;
    if (has_exitscene()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exitscene());
    }

    // optional int32 StayTime = 11;
    if (has_staytime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->staytime());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LbsRoomRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.LbsRoomRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LbsRoomRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LbsRoomRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.LbsRoomRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.LbsRoomRequest)
    MergeFrom(*source);
  }
}

void LbsRoomRequest::MergeFrom(const LbsRoomRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.LbsRoomRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_macaddr();
      macaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macaddr_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_cellid();
      cellid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cellid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_roomname();
      roomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomname_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000010u) {
      opcode_ = from.opcode_;
    }
    if (cached_has_bits & 0x00000020u) {
      longitude_ = from.longitude_;
    }
    if (cached_has_bits & 0x00000040u) {
      latitude_ = from.latitude_;
    }
    if (cached_has_bits & 0x00000080u) {
      precision_ = from.precision_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      gpssource_ = from.gpssource_;
    }
    if (cached_has_bits & 0x00000200u) {
      exitscene_ = from.exitscene_;
    }
    if (cached_has_bits & 0x00000400u) {
      staytime_ = from.staytime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LbsRoomRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.LbsRoomRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LbsRoomRequest::CopyFrom(const LbsRoomRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.LbsRoomRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LbsRoomRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000f8) != 0x000000f8) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void LbsRoomRequest::Swap(LbsRoomRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LbsRoomRequest::InternalSwap(LbsRoomRequest* other) {
  macaddr_.Swap(&other->macaddr_);
  cellid_.Swap(&other->cellid_);
  roomname_.Swap(&other->roomname_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(opcode_, other->opcode_);
  std::swap(longitude_, other->longitude_);
  std::swap(latitude_, other->latitude_);
  std::swap(precision_, other->precision_);
  std::swap(gpssource_, other->gpssource_);
  std::swap(exitscene_, other->exitscene_);
  std::swap(staytime_, other->staytime_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LbsRoomRequest::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LbsRoomRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool LbsRoomRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void LbsRoomRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000008u;
}
void LbsRoomRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000008u;
}
void LbsRoomRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& LbsRoomRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* LbsRoomRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRoomRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* LbsRoomRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRoomRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void LbsRoomRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRoomRequest.BaseRequest)
}

// required uint32 OpCode = 2;
bool LbsRoomRequest::has_opcode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void LbsRoomRequest::set_has_opcode() {
  _has_bits_[0] |= 0x00000010u;
}
void LbsRoomRequest::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000010u;
}
void LbsRoomRequest::clear_opcode() {
  opcode_ = 0u;
  clear_has_opcode();
}
::google::protobuf::uint32 LbsRoomRequest::opcode() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomRequest.OpCode)
  return opcode_;
}
void LbsRoomRequest::set_opcode(::google::protobuf::uint32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomRequest.OpCode)
}

// required float Longitude = 3;
bool LbsRoomRequest::has_longitude() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void LbsRoomRequest::set_has_longitude() {
  _has_bits_[0] |= 0x00000020u;
}
void LbsRoomRequest::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000020u;
}
void LbsRoomRequest::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
float LbsRoomRequest::longitude() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomRequest.Longitude)
  return longitude_;
}
void LbsRoomRequest::set_longitude(float value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomRequest.Longitude)
}

// required float Latitude = 4;
bool LbsRoomRequest::has_latitude() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void LbsRoomRequest::set_has_latitude() {
  _has_bits_[0] |= 0x00000040u;
}
void LbsRoomRequest::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000040u;
}
void LbsRoomRequest::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
float LbsRoomRequest::latitude() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomRequest.Latitude)
  return latitude_;
}
void LbsRoomRequest::set_latitude(float value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomRequest.Latitude)
}

// required int32 Precision = 5;
bool LbsRoomRequest::has_precision() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void LbsRoomRequest::set_has_precision() {
  _has_bits_[0] |= 0x00000080u;
}
void LbsRoomRequest::clear_has_precision() {
  _has_bits_[0] &= ~0x00000080u;
}
void LbsRoomRequest::clear_precision() {
  precision_ = 0;
  clear_has_precision();
}
::google::protobuf::int32 LbsRoomRequest::precision() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomRequest.Precision)
  return precision_;
}
void LbsRoomRequest::set_precision(::google::protobuf::int32 value) {
  set_has_precision();
  precision_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomRequest.Precision)
}

// optional string MacAddr = 6;
bool LbsRoomRequest::has_macaddr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LbsRoomRequest::set_has_macaddr() {
  _has_bits_[0] |= 0x00000001u;
}
void LbsRoomRequest::clear_has_macaddr() {
  _has_bits_[0] &= ~0x00000001u;
}
void LbsRoomRequest::clear_macaddr() {
  macaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_macaddr();
}
const ::std::string& LbsRoomRequest::macaddr() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomRequest.MacAddr)
  return macaddr_.GetNoArena();
}
void LbsRoomRequest::set_macaddr(const ::std::string& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomRequest.MacAddr)
}
#if LANG_CXX11
void LbsRoomRequest::set_macaddr(::std::string&& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsRoomRequest.MacAddr)
}
#endif
void LbsRoomRequest::set_macaddr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsRoomRequest.MacAddr)
}
void LbsRoomRequest::set_macaddr(const char* value, size_t size) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsRoomRequest.MacAddr)
}
::std::string* LbsRoomRequest::mutable_macaddr() {
  set_has_macaddr();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRoomRequest.MacAddr)
  return macaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsRoomRequest::release_macaddr() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRoomRequest.MacAddr)
  clear_has_macaddr();
  return macaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsRoomRequest::set_allocated_macaddr(::std::string* macaddr) {
  if (macaddr != NULL) {
    set_has_macaddr();
  } else {
    clear_has_macaddr();
  }
  macaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), macaddr);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRoomRequest.MacAddr)
}

// optional string CellId = 7;
bool LbsRoomRequest::has_cellid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LbsRoomRequest::set_has_cellid() {
  _has_bits_[0] |= 0x00000002u;
}
void LbsRoomRequest::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000002u;
}
void LbsRoomRequest::clear_cellid() {
  cellid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cellid();
}
const ::std::string& LbsRoomRequest::cellid() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomRequest.CellId)
  return cellid_.GetNoArena();
}
void LbsRoomRequest::set_cellid(const ::std::string& value) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomRequest.CellId)
}
#if LANG_CXX11
void LbsRoomRequest::set_cellid(::std::string&& value) {
  set_has_cellid();
  cellid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsRoomRequest.CellId)
}
#endif
void LbsRoomRequest::set_cellid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsRoomRequest.CellId)
}
void LbsRoomRequest::set_cellid(const char* value, size_t size) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsRoomRequest.CellId)
}
::std::string* LbsRoomRequest::mutable_cellid() {
  set_has_cellid();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRoomRequest.CellId)
  return cellid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsRoomRequest::release_cellid() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRoomRequest.CellId)
  clear_has_cellid();
  return cellid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsRoomRequest::set_allocated_cellid(::std::string* cellid) {
  if (cellid != NULL) {
    set_has_cellid();
  } else {
    clear_has_cellid();
  }
  cellid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cellid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRoomRequest.CellId)
}

// optional int32 GPSSource = 8;
bool LbsRoomRequest::has_gpssource() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void LbsRoomRequest::set_has_gpssource() {
  _has_bits_[0] |= 0x00000100u;
}
void LbsRoomRequest::clear_has_gpssource() {
  _has_bits_[0] &= ~0x00000100u;
}
void LbsRoomRequest::clear_gpssource() {
  gpssource_ = 0;
  clear_has_gpssource();
}
::google::protobuf::int32 LbsRoomRequest::gpssource() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomRequest.GPSSource)
  return gpssource_;
}
void LbsRoomRequest::set_gpssource(::google::protobuf::int32 value) {
  set_has_gpssource();
  gpssource_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomRequest.GPSSource)
}

// optional string RoomName = 9;
bool LbsRoomRequest::has_roomname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LbsRoomRequest::set_has_roomname() {
  _has_bits_[0] |= 0x00000004u;
}
void LbsRoomRequest::clear_has_roomname() {
  _has_bits_[0] &= ~0x00000004u;
}
void LbsRoomRequest::clear_roomname() {
  roomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_roomname();
}
const ::std::string& LbsRoomRequest::roomname() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomRequest.RoomName)
  return roomname_.GetNoArena();
}
void LbsRoomRequest::set_roomname(const ::std::string& value) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomRequest.RoomName)
}
#if LANG_CXX11
void LbsRoomRequest::set_roomname(::std::string&& value) {
  set_has_roomname();
  roomname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsRoomRequest.RoomName)
}
#endif
void LbsRoomRequest::set_roomname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsRoomRequest.RoomName)
}
void LbsRoomRequest::set_roomname(const char* value, size_t size) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsRoomRequest.RoomName)
}
::std::string* LbsRoomRequest::mutable_roomname() {
  set_has_roomname();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRoomRequest.RoomName)
  return roomname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsRoomRequest::release_roomname() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRoomRequest.RoomName)
  clear_has_roomname();
  return roomname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsRoomRequest::set_allocated_roomname(::std::string* roomname) {
  if (roomname != NULL) {
    set_has_roomname();
  } else {
    clear_has_roomname();
  }
  roomname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRoomRequest.RoomName)
}

// optional int32 ExitScene = 10;
bool LbsRoomRequest::has_exitscene() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void LbsRoomRequest::set_has_exitscene() {
  _has_bits_[0] |= 0x00000200u;
}
void LbsRoomRequest::clear_has_exitscene() {
  _has_bits_[0] &= ~0x00000200u;
}
void LbsRoomRequest::clear_exitscene() {
  exitscene_ = 0;
  clear_has_exitscene();
}
::google::protobuf::int32 LbsRoomRequest::exitscene() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomRequest.ExitScene)
  return exitscene_;
}
void LbsRoomRequest::set_exitscene(::google::protobuf::int32 value) {
  set_has_exitscene();
  exitscene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomRequest.ExitScene)
}

// optional int32 StayTime = 11;
bool LbsRoomRequest::has_staytime() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void LbsRoomRequest::set_has_staytime() {
  _has_bits_[0] |= 0x00000400u;
}
void LbsRoomRequest::clear_has_staytime() {
  _has_bits_[0] &= ~0x00000400u;
}
void LbsRoomRequest::clear_staytime() {
  staytime_ = 0;
  clear_has_staytime();
}
::google::protobuf::int32 LbsRoomRequest::staytime() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomRequest.StayTime)
  return staytime_;
}
void LbsRoomRequest::set_staytime(::google::protobuf::int32 value) {
  set_has_staytime();
  staytime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomRequest.StayTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LbsRoomResponse::kBaseResponseFieldNumber;
const int LbsRoomResponse::kRoomNameFieldNumber;
const int LbsRoomResponse::kRoomNickNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LbsRoomResponse::LbsRoomResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.LbsRoomResponse)
}
LbsRoomResponse::LbsRoomResponse(const LbsRoomResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_roomname()) {
    roomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomname_);
  }
  roomnickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_roomnickname()) {
    roomnickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomnickname_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.LbsRoomResponse)
}

void LbsRoomResponse::SharedCtor() {
  _cached_size_ = 0;
  roomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roomnickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  baseresponse_ = NULL;
}

LbsRoomResponse::~LbsRoomResponse() {
  // @@protoc_insertion_point(destructor:micromsg.LbsRoomResponse)
  SharedDtor();
}

void LbsRoomResponse::SharedDtor() {
  roomname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roomnickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void LbsRoomResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LbsRoomResponse::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LbsRoomResponse& LbsRoomResponse::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

LbsRoomResponse* LbsRoomResponse::New(::google::protobuf::Arena* arena) const {
  LbsRoomResponse* n = new LbsRoomResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LbsRoomResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.LbsRoomResponse)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_roomname()) {
      GOOGLE_DCHECK(!roomname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*roomname_.UnsafeRawStringPointer())->clear();
    }
    if (has_roomnickname()) {
      GOOGLE_DCHECK(!roomnickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*roomnickname_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LbsRoomResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.LbsRoomResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string RoomName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->roomname().data(), this->roomname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsRoomResponse.RoomName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string RoomNickName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomnickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->roomnickname().data(), this->roomnickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsRoomResponse.RoomNickName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.LbsRoomResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.LbsRoomResponse)
  return false;
#undef DO_
}

void LbsRoomResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.LbsRoomResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // optional string RoomName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roomname().data(), this->roomname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsRoomResponse.RoomName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->roomname(), output);
  }

  // optional string RoomNickName = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roomnickname().data(), this->roomnickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsRoomResponse.RoomNickName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->roomnickname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.LbsRoomResponse)
}

::google::protobuf::uint8* LbsRoomResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.LbsRoomResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // optional string RoomName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roomname().data(), this->roomname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsRoomResponse.RoomName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->roomname(), target);
  }

  // optional string RoomNickName = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roomnickname().data(), this->roomnickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsRoomResponse.RoomNickName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->roomnickname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.LbsRoomResponse)
  return target;
}

size_t LbsRoomResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.LbsRoomResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (has_baseresponse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string RoomName = 2;
    if (has_roomname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->roomname());
    }

    // optional string RoomNickName = 3;
    if (has_roomnickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->roomnickname());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LbsRoomResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.LbsRoomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LbsRoomResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LbsRoomResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.LbsRoomResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.LbsRoomResponse)
    MergeFrom(*source);
  }
}

void LbsRoomResponse::MergeFrom(const LbsRoomResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.LbsRoomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_roomname();
      roomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_roomnickname();
      roomnickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomnickname_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
  }
}

void LbsRoomResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.LbsRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LbsRoomResponse::CopyFrom(const LbsRoomResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.LbsRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LbsRoomResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void LbsRoomResponse::Swap(LbsRoomResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LbsRoomResponse::InternalSwap(LbsRoomResponse* other) {
  roomname_.Swap(&other->roomname_);
  roomnickname_.Swap(&other->roomnickname_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LbsRoomResponse::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LbsRoomResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool LbsRoomResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LbsRoomResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000004u;
}
void LbsRoomResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000004u;
}
void LbsRoomResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& LbsRoomResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* LbsRoomResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRoomResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* LbsRoomResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRoomResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void LbsRoomResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRoomResponse.BaseResponse)
}

// optional string RoomName = 2;
bool LbsRoomResponse::has_roomname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LbsRoomResponse::set_has_roomname() {
  _has_bits_[0] |= 0x00000001u;
}
void LbsRoomResponse::clear_has_roomname() {
  _has_bits_[0] &= ~0x00000001u;
}
void LbsRoomResponse::clear_roomname() {
  roomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_roomname();
}
const ::std::string& LbsRoomResponse::roomname() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomResponse.RoomName)
  return roomname_.GetNoArena();
}
void LbsRoomResponse::set_roomname(const ::std::string& value) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomResponse.RoomName)
}
#if LANG_CXX11
void LbsRoomResponse::set_roomname(::std::string&& value) {
  set_has_roomname();
  roomname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsRoomResponse.RoomName)
}
#endif
void LbsRoomResponse::set_roomname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsRoomResponse.RoomName)
}
void LbsRoomResponse::set_roomname(const char* value, size_t size) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsRoomResponse.RoomName)
}
::std::string* LbsRoomResponse::mutable_roomname() {
  set_has_roomname();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRoomResponse.RoomName)
  return roomname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsRoomResponse::release_roomname() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRoomResponse.RoomName)
  clear_has_roomname();
  return roomname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsRoomResponse::set_allocated_roomname(::std::string* roomname) {
  if (roomname != NULL) {
    set_has_roomname();
  } else {
    clear_has_roomname();
  }
  roomname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRoomResponse.RoomName)
}

// optional string RoomNickName = 3;
bool LbsRoomResponse::has_roomnickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LbsRoomResponse::set_has_roomnickname() {
  _has_bits_[0] |= 0x00000002u;
}
void LbsRoomResponse::clear_has_roomnickname() {
  _has_bits_[0] &= ~0x00000002u;
}
void LbsRoomResponse::clear_roomnickname() {
  roomnickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_roomnickname();
}
const ::std::string& LbsRoomResponse::roomnickname() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomResponse.RoomNickName)
  return roomnickname_.GetNoArena();
}
void LbsRoomResponse::set_roomnickname(const ::std::string& value) {
  set_has_roomnickname();
  roomnickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomResponse.RoomNickName)
}
#if LANG_CXX11
void LbsRoomResponse::set_roomnickname(::std::string&& value) {
  set_has_roomnickname();
  roomnickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsRoomResponse.RoomNickName)
}
#endif
void LbsRoomResponse::set_roomnickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_roomnickname();
  roomnickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsRoomResponse.RoomNickName)
}
void LbsRoomResponse::set_roomnickname(const char* value, size_t size) {
  set_has_roomnickname();
  roomnickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsRoomResponse.RoomNickName)
}
::std::string* LbsRoomResponse::mutable_roomnickname() {
  set_has_roomnickname();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRoomResponse.RoomNickName)
  return roomnickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsRoomResponse::release_roomnickname() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRoomResponse.RoomNickName)
  clear_has_roomnickname();
  return roomnickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsRoomResponse::set_allocated_roomnickname(::std::string* roomnickname) {
  if (roomnickname != NULL) {
    set_has_roomnickname();
  } else {
    clear_has_roomnickname();
  }
  roomnickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomnickname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRoomResponse.RoomNickName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LbsRoomMemberRequest::kBaseRequestFieldNumber;
const int LbsRoomMemberRequest::kRoomNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LbsRoomMemberRequest::LbsRoomMemberRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.LbsRoomMemberRequest)
}
LbsRoomMemberRequest::LbsRoomMemberRequest(const LbsRoomMemberRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_roomname()) {
    roomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomname_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.LbsRoomMemberRequest)
}

void LbsRoomMemberRequest::SharedCtor() {
  _cached_size_ = 0;
  roomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  baserequest_ = NULL;
}

LbsRoomMemberRequest::~LbsRoomMemberRequest() {
  // @@protoc_insertion_point(destructor:micromsg.LbsRoomMemberRequest)
  SharedDtor();
}

void LbsRoomMemberRequest::SharedDtor() {
  roomname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void LbsRoomMemberRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LbsRoomMemberRequest::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LbsRoomMemberRequest& LbsRoomMemberRequest::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

LbsRoomMemberRequest* LbsRoomMemberRequest::New(::google::protobuf::Arena* arena) const {
  LbsRoomMemberRequest* n = new LbsRoomMemberRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LbsRoomMemberRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.LbsRoomMemberRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_roomname()) {
      GOOGLE_DCHECK(!roomname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*roomname_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LbsRoomMemberRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.LbsRoomMemberRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string RoomName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->roomname().data(), this->roomname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsRoomMemberRequest.RoomName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.LbsRoomMemberRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.LbsRoomMemberRequest)
  return false;
#undef DO_
}

void LbsRoomMemberRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.LbsRoomMemberRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // optional string RoomName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roomname().data(), this->roomname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsRoomMemberRequest.RoomName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->roomname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.LbsRoomMemberRequest)
}

::google::protobuf::uint8* LbsRoomMemberRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.LbsRoomMemberRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // optional string RoomName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roomname().data(), this->roomname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsRoomMemberRequest.RoomName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->roomname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.LbsRoomMemberRequest)
  return target;
}

size_t LbsRoomMemberRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.LbsRoomMemberRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (has_baserequest()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }
  // optional string RoomName = 2;
  if (has_roomname()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LbsRoomMemberRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.LbsRoomMemberRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LbsRoomMemberRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LbsRoomMemberRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.LbsRoomMemberRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.LbsRoomMemberRequest)
    MergeFrom(*source);
  }
}

void LbsRoomMemberRequest::MergeFrom(const LbsRoomMemberRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.LbsRoomMemberRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_roomname();
      roomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomname_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
  }
}

void LbsRoomMemberRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.LbsRoomMemberRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LbsRoomMemberRequest::CopyFrom(const LbsRoomMemberRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.LbsRoomMemberRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LbsRoomMemberRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void LbsRoomMemberRequest::Swap(LbsRoomMemberRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LbsRoomMemberRequest::InternalSwap(LbsRoomMemberRequest* other) {
  roomname_.Swap(&other->roomname_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LbsRoomMemberRequest::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LbsRoomMemberRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool LbsRoomMemberRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LbsRoomMemberRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
void LbsRoomMemberRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
void LbsRoomMemberRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& LbsRoomMemberRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomMemberRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* LbsRoomMemberRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRoomMemberRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* LbsRoomMemberRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRoomMemberRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void LbsRoomMemberRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRoomMemberRequest.BaseRequest)
}

// optional string RoomName = 2;
bool LbsRoomMemberRequest::has_roomname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LbsRoomMemberRequest::set_has_roomname() {
  _has_bits_[0] |= 0x00000001u;
}
void LbsRoomMemberRequest::clear_has_roomname() {
  _has_bits_[0] &= ~0x00000001u;
}
void LbsRoomMemberRequest::clear_roomname() {
  roomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_roomname();
}
const ::std::string& LbsRoomMemberRequest::roomname() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomMemberRequest.RoomName)
  return roomname_.GetNoArena();
}
void LbsRoomMemberRequest::set_roomname(const ::std::string& value) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomMemberRequest.RoomName)
}
#if LANG_CXX11
void LbsRoomMemberRequest::set_roomname(::std::string&& value) {
  set_has_roomname();
  roomname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsRoomMemberRequest.RoomName)
}
#endif
void LbsRoomMemberRequest::set_roomname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsRoomMemberRequest.RoomName)
}
void LbsRoomMemberRequest::set_roomname(const char* value, size_t size) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsRoomMemberRequest.RoomName)
}
::std::string* LbsRoomMemberRequest::mutable_roomname() {
  set_has_roomname();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRoomMemberRequest.RoomName)
  return roomname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsRoomMemberRequest::release_roomname() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRoomMemberRequest.RoomName)
  clear_has_roomname();
  return roomname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsRoomMemberRequest::set_allocated_roomname(::std::string* roomname) {
  if (roomname != NULL) {
    set_has_roomname();
  } else {
    clear_has_roomname();
  }
  roomname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRoomMemberRequest.RoomName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LbsRoomMember::kUserNameFieldNumber;
const int LbsRoomMember::kNickNameFieldNumber;
const int LbsRoomMember::kBigHeadImgUrlFieldNumber;
const int LbsRoomMember::kSmallHeadImgUrlFieldNumber;
const int LbsRoomMember::kAntispamTicketFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LbsRoomMember::LbsRoomMember()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.LbsRoomMember)
}
LbsRoomMember::LbsRoomMember(const LbsRoomMember& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  bigheadimgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bigheadimgurl()) {
    bigheadimgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bigheadimgurl_);
  }
  smallheadimgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_smallheadimgurl()) {
    smallheadimgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smallheadimgurl_);
  }
  antispamticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_antispamticket()) {
    antispamticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.antispamticket_);
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.LbsRoomMember)
}

void LbsRoomMember::SharedCtor() {
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bigheadimgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smallheadimgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  antispamticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LbsRoomMember::~LbsRoomMember() {
  // @@protoc_insertion_point(destructor:micromsg.LbsRoomMember)
  SharedDtor();
}

void LbsRoomMember::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bigheadimgurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smallheadimgurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  antispamticket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LbsRoomMember::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LbsRoomMember::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LbsRoomMember& LbsRoomMember::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

LbsRoomMember* LbsRoomMember::New(::google::protobuf::Arena* arena) const {
  LbsRoomMember* n = new LbsRoomMember;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LbsRoomMember::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.LbsRoomMember)
  if (_has_bits_[0 / 32] & 31u) {
    if (has_username()) {
      GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*username_.UnsafeRawStringPointer())->clear();
    }
    if (has_nickname()) {
      GOOGLE_DCHECK(!nickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*nickname_.UnsafeRawStringPointer())->clear();
    }
    if (has_bigheadimgurl()) {
      GOOGLE_DCHECK(!bigheadimgurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*bigheadimgurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_smallheadimgurl()) {
      GOOGLE_DCHECK(!smallheadimgurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*smallheadimgurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_antispamticket()) {
      GOOGLE_DCHECK(!antispamticket_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*antispamticket_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LbsRoomMember::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.LbsRoomMember)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string UserName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsRoomMember.UserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string NickName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsRoomMember.NickName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string BigHeadImgUrl = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bigheadimgurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bigheadimgurl().data(), this->bigheadimgurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsRoomMember.BigHeadImgUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string SmallHeadImgUrl = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smallheadimgurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->smallheadimgurl().data(), this->smallheadimgurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsRoomMember.SmallHeadImgUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AntispamTicket = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_antispamticket()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->antispamticket().data(), this->antispamticket().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LbsRoomMember.AntispamTicket");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.LbsRoomMember)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.LbsRoomMember)
  return false;
#undef DO_
}

void LbsRoomMember::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.LbsRoomMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string UserName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsRoomMember.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // optional string NickName = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsRoomMember.NickName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nickname(), output);
  }

  // optional string BigHeadImgUrl = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bigheadimgurl().data(), this->bigheadimgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsRoomMember.BigHeadImgUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->bigheadimgurl(), output);
  }

  // optional string SmallHeadImgUrl = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smallheadimgurl().data(), this->smallheadimgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsRoomMember.SmallHeadImgUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->smallheadimgurl(), output);
  }

  // optional string AntispamTicket = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->antispamticket().data(), this->antispamticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsRoomMember.AntispamTicket");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->antispamticket(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.LbsRoomMember)
}

::google::protobuf::uint8* LbsRoomMember::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.LbsRoomMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string UserName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsRoomMember.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // optional string NickName = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsRoomMember.NickName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nickname(), target);
  }

  // optional string BigHeadImgUrl = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bigheadimgurl().data(), this->bigheadimgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsRoomMember.BigHeadImgUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->bigheadimgurl(), target);
  }

  // optional string SmallHeadImgUrl = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smallheadimgurl().data(), this->smallheadimgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsRoomMember.SmallHeadImgUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->smallheadimgurl(), target);
  }

  // optional string AntispamTicket = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->antispamticket().data(), this->antispamticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LbsRoomMember.AntispamTicket");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->antispamticket(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.LbsRoomMember)
  return target;
}

size_t LbsRoomMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.LbsRoomMember)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string UserName = 1;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional string NickName = 2;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional string BigHeadImgUrl = 3;
    if (has_bigheadimgurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bigheadimgurl());
    }

    // optional string SmallHeadImgUrl = 4;
    if (has_smallheadimgurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->smallheadimgurl());
    }

    // optional string AntispamTicket = 5;
    if (has_antispamticket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->antispamticket());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LbsRoomMember::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.LbsRoomMember)
  GOOGLE_DCHECK_NE(&from, this);
  const LbsRoomMember* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LbsRoomMember>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.LbsRoomMember)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.LbsRoomMember)
    MergeFrom(*source);
  }
}

void LbsRoomMember::MergeFrom(const LbsRoomMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.LbsRoomMember)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_bigheadimgurl();
      bigheadimgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bigheadimgurl_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_smallheadimgurl();
      smallheadimgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smallheadimgurl_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_antispamticket();
      antispamticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.antispamticket_);
    }
  }
}

void LbsRoomMember::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.LbsRoomMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LbsRoomMember::CopyFrom(const LbsRoomMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.LbsRoomMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LbsRoomMember::IsInitialized() const {
  return true;
}

void LbsRoomMember::Swap(LbsRoomMember* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LbsRoomMember::InternalSwap(LbsRoomMember* other) {
  username_.Swap(&other->username_);
  nickname_.Swap(&other->nickname_);
  bigheadimgurl_.Swap(&other->bigheadimgurl_);
  smallheadimgurl_.Swap(&other->smallheadimgurl_);
  antispamticket_.Swap(&other->antispamticket_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LbsRoomMember::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LbsRoomMember

// optional string UserName = 1;
bool LbsRoomMember::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LbsRoomMember::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
void LbsRoomMember::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
void LbsRoomMember::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& LbsRoomMember::username() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomMember.UserName)
  return username_.GetNoArena();
}
void LbsRoomMember::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomMember.UserName)
}
#if LANG_CXX11
void LbsRoomMember::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsRoomMember.UserName)
}
#endif
void LbsRoomMember::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsRoomMember.UserName)
}
void LbsRoomMember::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsRoomMember.UserName)
}
::std::string* LbsRoomMember::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRoomMember.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsRoomMember::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRoomMember.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsRoomMember::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRoomMember.UserName)
}

// optional string NickName = 2;
bool LbsRoomMember::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LbsRoomMember::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
void LbsRoomMember::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
void LbsRoomMember::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
const ::std::string& LbsRoomMember::nickname() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomMember.NickName)
  return nickname_.GetNoArena();
}
void LbsRoomMember::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomMember.NickName)
}
#if LANG_CXX11
void LbsRoomMember::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsRoomMember.NickName)
}
#endif
void LbsRoomMember::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsRoomMember.NickName)
}
void LbsRoomMember::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsRoomMember.NickName)
}
::std::string* LbsRoomMember::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRoomMember.NickName)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsRoomMember::release_nickname() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRoomMember.NickName)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsRoomMember::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRoomMember.NickName)
}

// optional string BigHeadImgUrl = 3;
bool LbsRoomMember::has_bigheadimgurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LbsRoomMember::set_has_bigheadimgurl() {
  _has_bits_[0] |= 0x00000004u;
}
void LbsRoomMember::clear_has_bigheadimgurl() {
  _has_bits_[0] &= ~0x00000004u;
}
void LbsRoomMember::clear_bigheadimgurl() {
  bigheadimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bigheadimgurl();
}
const ::std::string& LbsRoomMember::bigheadimgurl() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomMember.BigHeadImgUrl)
  return bigheadimgurl_.GetNoArena();
}
void LbsRoomMember::set_bigheadimgurl(const ::std::string& value) {
  set_has_bigheadimgurl();
  bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomMember.BigHeadImgUrl)
}
#if LANG_CXX11
void LbsRoomMember::set_bigheadimgurl(::std::string&& value) {
  set_has_bigheadimgurl();
  bigheadimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsRoomMember.BigHeadImgUrl)
}
#endif
void LbsRoomMember::set_bigheadimgurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bigheadimgurl();
  bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsRoomMember.BigHeadImgUrl)
}
void LbsRoomMember::set_bigheadimgurl(const char* value, size_t size) {
  set_has_bigheadimgurl();
  bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsRoomMember.BigHeadImgUrl)
}
::std::string* LbsRoomMember::mutable_bigheadimgurl() {
  set_has_bigheadimgurl();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRoomMember.BigHeadImgUrl)
  return bigheadimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsRoomMember::release_bigheadimgurl() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRoomMember.BigHeadImgUrl)
  clear_has_bigheadimgurl();
  return bigheadimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsRoomMember::set_allocated_bigheadimgurl(::std::string* bigheadimgurl) {
  if (bigheadimgurl != NULL) {
    set_has_bigheadimgurl();
  } else {
    clear_has_bigheadimgurl();
  }
  bigheadimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bigheadimgurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRoomMember.BigHeadImgUrl)
}

// optional string SmallHeadImgUrl = 4;
bool LbsRoomMember::has_smallheadimgurl() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void LbsRoomMember::set_has_smallheadimgurl() {
  _has_bits_[0] |= 0x00000008u;
}
void LbsRoomMember::clear_has_smallheadimgurl() {
  _has_bits_[0] &= ~0x00000008u;
}
void LbsRoomMember::clear_smallheadimgurl() {
  smallheadimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_smallheadimgurl();
}
const ::std::string& LbsRoomMember::smallheadimgurl() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomMember.SmallHeadImgUrl)
  return smallheadimgurl_.GetNoArena();
}
void LbsRoomMember::set_smallheadimgurl(const ::std::string& value) {
  set_has_smallheadimgurl();
  smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomMember.SmallHeadImgUrl)
}
#if LANG_CXX11
void LbsRoomMember::set_smallheadimgurl(::std::string&& value) {
  set_has_smallheadimgurl();
  smallheadimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsRoomMember.SmallHeadImgUrl)
}
#endif
void LbsRoomMember::set_smallheadimgurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_smallheadimgurl();
  smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsRoomMember.SmallHeadImgUrl)
}
void LbsRoomMember::set_smallheadimgurl(const char* value, size_t size) {
  set_has_smallheadimgurl();
  smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsRoomMember.SmallHeadImgUrl)
}
::std::string* LbsRoomMember::mutable_smallheadimgurl() {
  set_has_smallheadimgurl();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRoomMember.SmallHeadImgUrl)
  return smallheadimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsRoomMember::release_smallheadimgurl() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRoomMember.SmallHeadImgUrl)
  clear_has_smallheadimgurl();
  return smallheadimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsRoomMember::set_allocated_smallheadimgurl(::std::string* smallheadimgurl) {
  if (smallheadimgurl != NULL) {
    set_has_smallheadimgurl();
  } else {
    clear_has_smallheadimgurl();
  }
  smallheadimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smallheadimgurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRoomMember.SmallHeadImgUrl)
}

// optional string AntispamTicket = 5;
bool LbsRoomMember::has_antispamticket() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void LbsRoomMember::set_has_antispamticket() {
  _has_bits_[0] |= 0x00000010u;
}
void LbsRoomMember::clear_has_antispamticket() {
  _has_bits_[0] &= ~0x00000010u;
}
void LbsRoomMember::clear_antispamticket() {
  antispamticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_antispamticket();
}
const ::std::string& LbsRoomMember::antispamticket() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomMember.AntispamTicket)
  return antispamticket_.GetNoArena();
}
void LbsRoomMember::set_antispamticket(const ::std::string& value) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomMember.AntispamTicket)
}
#if LANG_CXX11
void LbsRoomMember::set_antispamticket(::std::string&& value) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsRoomMember.AntispamTicket)
}
#endif
void LbsRoomMember::set_antispamticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsRoomMember.AntispamTicket)
}
void LbsRoomMember::set_antispamticket(const char* value, size_t size) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsRoomMember.AntispamTicket)
}
::std::string* LbsRoomMember::mutable_antispamticket() {
  set_has_antispamticket();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRoomMember.AntispamTicket)
  return antispamticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LbsRoomMember::release_antispamticket() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRoomMember.AntispamTicket)
  clear_has_antispamticket();
  return antispamticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LbsRoomMember::set_allocated_antispamticket(::std::string* antispamticket) {
  if (antispamticket != NULL) {
    set_has_antispamticket();
  } else {
    clear_has_antispamticket();
  }
  antispamticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), antispamticket);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRoomMember.AntispamTicket)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LbsRoomMemberResponse::kBaseResponseFieldNumber;
const int LbsRoomMemberResponse::kMemberCountFieldNumber;
const int LbsRoomMemberResponse::kMemberListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LbsRoomMemberResponse::LbsRoomMemberResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.LbsRoomMemberResponse)
}
LbsRoomMemberResponse::LbsRoomMemberResponse(const LbsRoomMemberResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      memberlist_(from.memberlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  membercount_ = from.membercount_;
  // @@protoc_insertion_point(copy_constructor:micromsg.LbsRoomMemberResponse)
}

void LbsRoomMemberResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&membercount_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(membercount_));
}

LbsRoomMemberResponse::~LbsRoomMemberResponse() {
  // @@protoc_insertion_point(destructor:micromsg.LbsRoomMemberResponse)
  SharedDtor();
}

void LbsRoomMemberResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void LbsRoomMemberResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LbsRoomMemberResponse::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LbsRoomMemberResponse& LbsRoomMemberResponse::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

LbsRoomMemberResponse* LbsRoomMemberResponse::New(::google::protobuf::Arena* arena) const {
  LbsRoomMemberResponse* n = new LbsRoomMemberResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LbsRoomMemberResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.LbsRoomMemberResponse)
  memberlist_.Clear();
  if (has_baseresponse()) {
    GOOGLE_DCHECK(baseresponse_ != NULL);
    baseresponse_->::micromsg::BaseResponse::Clear();
  }
  membercount_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LbsRoomMemberResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.LbsRoomMemberResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 MemberCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_membercount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &membercount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.LbsRoomMember MemberList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_memberlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.LbsRoomMemberResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.LbsRoomMemberResponse)
  return false;
#undef DO_
}

void LbsRoomMemberResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.LbsRoomMemberResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // required uint32 MemberCount = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->membercount(), output);
  }

  // repeated .micromsg.LbsRoomMember MemberList = 3;
  for (unsigned int i = 0, n = this->memberlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->memberlist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.LbsRoomMemberResponse)
}

::google::protobuf::uint8* LbsRoomMemberResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.LbsRoomMemberResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // required uint32 MemberCount = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->membercount(), target);
  }

  // repeated .micromsg.LbsRoomMember MemberList = 3;
  for (unsigned int i = 0, n = this->memberlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->memberlist(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.LbsRoomMemberResponse)
  return target;
}

size_t LbsRoomMemberResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.LbsRoomMemberResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_membercount()) {
    // required uint32 MemberCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->membercount());
  }

  return total_size;
}
size_t LbsRoomMemberResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.LbsRoomMemberResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required uint32 MemberCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->membercount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.LbsRoomMember MemberList = 3;
  {
    unsigned int count = this->memberlist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->memberlist(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LbsRoomMemberResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.LbsRoomMemberResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LbsRoomMemberResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LbsRoomMemberResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.LbsRoomMemberResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.LbsRoomMemberResponse)
    MergeFrom(*source);
  }
}

void LbsRoomMemberResponse::MergeFrom(const LbsRoomMemberResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.LbsRoomMemberResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  memberlist_.MergeFrom(from.memberlist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000002u) {
      membercount_ = from.membercount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LbsRoomMemberResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.LbsRoomMemberResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LbsRoomMemberResponse::CopyFrom(const LbsRoomMemberResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.LbsRoomMemberResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LbsRoomMemberResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void LbsRoomMemberResponse::Swap(LbsRoomMemberResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LbsRoomMemberResponse::InternalSwap(LbsRoomMemberResponse* other) {
  memberlist_.InternalSwap(&other->memberlist_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(membercount_, other->membercount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LbsRoomMemberResponse::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LbsRoomMemberResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool LbsRoomMemberResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LbsRoomMemberResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
void LbsRoomMemberResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
void LbsRoomMemberResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& LbsRoomMemberResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomMemberResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* LbsRoomMemberResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRoomMemberResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* LbsRoomMemberResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRoomMemberResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void LbsRoomMemberResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRoomMemberResponse.BaseResponse)
}

// required uint32 MemberCount = 2;
bool LbsRoomMemberResponse::has_membercount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LbsRoomMemberResponse::set_has_membercount() {
  _has_bits_[0] |= 0x00000002u;
}
void LbsRoomMemberResponse::clear_has_membercount() {
  _has_bits_[0] &= ~0x00000002u;
}
void LbsRoomMemberResponse::clear_membercount() {
  membercount_ = 0u;
  clear_has_membercount();
}
::google::protobuf::uint32 LbsRoomMemberResponse::membercount() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomMemberResponse.MemberCount)
  return membercount_;
}
void LbsRoomMemberResponse::set_membercount(::google::protobuf::uint32 value) {
  set_has_membercount();
  membercount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomMemberResponse.MemberCount)
}

// repeated .micromsg.LbsRoomMember MemberList = 3;
int LbsRoomMemberResponse::memberlist_size() const {
  return memberlist_.size();
}
void LbsRoomMemberResponse::clear_memberlist() {
  memberlist_.Clear();
}
const ::micromsg::LbsRoomMember& LbsRoomMemberResponse::memberlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomMemberResponse.MemberList)
  return memberlist_.Get(index);
}
::micromsg::LbsRoomMember* LbsRoomMemberResponse::mutable_memberlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRoomMemberResponse.MemberList)
  return memberlist_.Mutable(index);
}
::micromsg::LbsRoomMember* LbsRoomMemberResponse::add_memberlist() {
  // @@protoc_insertion_point(field_add:micromsg.LbsRoomMemberResponse.MemberList)
  return memberlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::LbsRoomMember >*
LbsRoomMemberResponse::mutable_memberlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.LbsRoomMemberResponse.MemberList)
  return &memberlist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::LbsRoomMember >&
LbsRoomMemberResponse::memberlist() const {
  // @@protoc_insertion_point(field_list:micromsg.LbsRoomMemberResponse.MemberList)
  return memberlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RadarSearchRequest::kBaseRequestFieldNumber;
const int RadarSearchRequest::kOpCodeFieldNumber;
const int RadarSearchRequest::kLongitudeFieldNumber;
const int RadarSearchRequest::kLatitudeFieldNumber;
const int RadarSearchRequest::kPrecisionFieldNumber;
const int RadarSearchRequest::kMacAddrFieldNumber;
const int RadarSearchRequest::kCellIdFieldNumber;
const int RadarSearchRequest::kGPSSourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RadarSearchRequest::RadarSearchRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.RadarSearchRequest)
}
RadarSearchRequest::RadarSearchRequest(const RadarSearchRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  macaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_macaddr()) {
    macaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macaddr_);
  }
  cellid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cellid()) {
    cellid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cellid_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  ::memcpy(&opcode_, &from.opcode_,
    reinterpret_cast<char*>(&gpssource_) -
    reinterpret_cast<char*>(&opcode_) + sizeof(gpssource_));
  // @@protoc_insertion_point(copy_constructor:micromsg.RadarSearchRequest)
}

void RadarSearchRequest::SharedCtor() {
  _cached_size_ = 0;
  macaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cellid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&gpssource_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(gpssource_));
}

RadarSearchRequest::~RadarSearchRequest() {
  // @@protoc_insertion_point(destructor:micromsg.RadarSearchRequest)
  SharedDtor();
}

void RadarSearchRequest::SharedDtor() {
  macaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cellid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void RadarSearchRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RadarSearchRequest::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RadarSearchRequest& RadarSearchRequest::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

RadarSearchRequest* RadarSearchRequest::New(::google::protobuf::Arena* arena) const {
  RadarSearchRequest* n = new RadarSearchRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RadarSearchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.RadarSearchRequest)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_macaddr()) {
      GOOGLE_DCHECK(!macaddr_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*macaddr_.UnsafeRawStringPointer())->clear();
    }
    if (has_cellid()) {
      GOOGLE_DCHECK(!cellid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*cellid_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 248u) {
    ::memset(&opcode_, 0, reinterpret_cast<char*>(&gpssource_) -
      reinterpret_cast<char*>(&opcode_) + sizeof(gpssource_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RadarSearchRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.RadarSearchRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 OpCode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_opcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &opcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float Longitude = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u)) {
          set_has_longitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float Latitude = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u)) {
          set_has_latitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 Precision = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_precision();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &precision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string MacAddr = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_macaddr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->macaddr().data(), this->macaddr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RadarSearchRequest.MacAddr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string CellId = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cellid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cellid().data(), this->cellid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RadarSearchRequest.CellId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 GPSSource = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_gpssource();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gpssource_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.RadarSearchRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.RadarSearchRequest)
  return false;
#undef DO_
}

void RadarSearchRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.RadarSearchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required uint32 OpCode = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->opcode(), output);
  }

  // required float Longitude = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->longitude(), output);
  }

  // required float Latitude = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->latitude(), output);
  }

  // required int32 Precision = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->precision(), output);
  }

  // optional string MacAddr = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->macaddr().data(), this->macaddr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RadarSearchRequest.MacAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->macaddr(), output);
  }

  // optional string CellId = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cellid().data(), this->cellid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RadarSearchRequest.CellId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->cellid(), output);
  }

  // optional int32 GPSSource = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->gpssource(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.RadarSearchRequest)
}

::google::protobuf::uint8* RadarSearchRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.RadarSearchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required uint32 OpCode = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->opcode(), target);
  }

  // required float Longitude = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->longitude(), target);
  }

  // required float Latitude = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->latitude(), target);
  }

  // required int32 Precision = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->precision(), target);
  }

  // optional string MacAddr = 6;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->macaddr().data(), this->macaddr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RadarSearchRequest.MacAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->macaddr(), target);
  }

  // optional string CellId = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cellid().data(), this->cellid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RadarSearchRequest.CellId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->cellid(), target);
  }

  // optional int32 GPSSource = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->gpssource(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.RadarSearchRequest)
  return target;
}

size_t RadarSearchRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.RadarSearchRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_opcode()) {
    // required uint32 OpCode = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opcode());
  }

  if (has_longitude()) {
    // required float Longitude = 3;
    total_size += 1 + 4;
  }

  if (has_latitude()) {
    // required float Latitude = 4;
    total_size += 1 + 4;
  }

  if (has_precision()) {
    // required int32 Precision = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->precision());
  }

  return total_size;
}
size_t RadarSearchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.RadarSearchRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000007c) ^ 0x0000007c) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required uint32 OpCode = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opcode());

    // required float Longitude = 3;
    total_size += 1 + 4;

    // required float Latitude = 4;
    total_size += 1 + 4;

    // required int32 Precision = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->precision());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string MacAddr = 6;
    if (has_macaddr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->macaddr());
    }

    // optional string CellId = 7;
    if (has_cellid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cellid());
    }

  }
  // optional int32 GPSSource = 8;
  if (has_gpssource()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gpssource());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RadarSearchRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.RadarSearchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RadarSearchRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RadarSearchRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.RadarSearchRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.RadarSearchRequest)
    MergeFrom(*source);
  }
}

void RadarSearchRequest::MergeFrom(const RadarSearchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.RadarSearchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_macaddr();
      macaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macaddr_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_cellid();
      cellid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cellid_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000008u) {
      opcode_ = from.opcode_;
    }
    if (cached_has_bits & 0x00000010u) {
      longitude_ = from.longitude_;
    }
    if (cached_has_bits & 0x00000020u) {
      latitude_ = from.latitude_;
    }
    if (cached_has_bits & 0x00000040u) {
      precision_ = from.precision_;
    }
    if (cached_has_bits & 0x00000080u) {
      gpssource_ = from.gpssource_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RadarSearchRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.RadarSearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RadarSearchRequest::CopyFrom(const RadarSearchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.RadarSearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RadarSearchRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007c) != 0x0000007c) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void RadarSearchRequest::Swap(RadarSearchRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RadarSearchRequest::InternalSwap(RadarSearchRequest* other) {
  macaddr_.Swap(&other->macaddr_);
  cellid_.Swap(&other->cellid_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(opcode_, other->opcode_);
  std::swap(longitude_, other->longitude_);
  std::swap(latitude_, other->latitude_);
  std::swap(precision_, other->precision_);
  std::swap(gpssource_, other->gpssource_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RadarSearchRequest::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RadarSearchRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool RadarSearchRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RadarSearchRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000004u;
}
void RadarSearchRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000004u;
}
void RadarSearchRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& RadarSearchRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* RadarSearchRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RadarSearchRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* RadarSearchRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.RadarSearchRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void RadarSearchRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarSearchRequest.BaseRequest)
}

// required uint32 OpCode = 2;
bool RadarSearchRequest::has_opcode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RadarSearchRequest::set_has_opcode() {
  _has_bits_[0] |= 0x00000008u;
}
void RadarSearchRequest::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000008u;
}
void RadarSearchRequest::clear_opcode() {
  opcode_ = 0u;
  clear_has_opcode();
}
::google::protobuf::uint32 RadarSearchRequest::opcode() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchRequest.OpCode)
  return opcode_;
}
void RadarSearchRequest::set_opcode(::google::protobuf::uint32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RadarSearchRequest.OpCode)
}

// required float Longitude = 3;
bool RadarSearchRequest::has_longitude() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void RadarSearchRequest::set_has_longitude() {
  _has_bits_[0] |= 0x00000010u;
}
void RadarSearchRequest::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000010u;
}
void RadarSearchRequest::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
float RadarSearchRequest::longitude() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchRequest.Longitude)
  return longitude_;
}
void RadarSearchRequest::set_longitude(float value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RadarSearchRequest.Longitude)
}

// required float Latitude = 4;
bool RadarSearchRequest::has_latitude() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void RadarSearchRequest::set_has_latitude() {
  _has_bits_[0] |= 0x00000020u;
}
void RadarSearchRequest::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000020u;
}
void RadarSearchRequest::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
float RadarSearchRequest::latitude() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchRequest.Latitude)
  return latitude_;
}
void RadarSearchRequest::set_latitude(float value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RadarSearchRequest.Latitude)
}

// required int32 Precision = 5;
bool RadarSearchRequest::has_precision() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void RadarSearchRequest::set_has_precision() {
  _has_bits_[0] |= 0x00000040u;
}
void RadarSearchRequest::clear_has_precision() {
  _has_bits_[0] &= ~0x00000040u;
}
void RadarSearchRequest::clear_precision() {
  precision_ = 0;
  clear_has_precision();
}
::google::protobuf::int32 RadarSearchRequest::precision() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchRequest.Precision)
  return precision_;
}
void RadarSearchRequest::set_precision(::google::protobuf::int32 value) {
  set_has_precision();
  precision_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RadarSearchRequest.Precision)
}

// optional string MacAddr = 6;
bool RadarSearchRequest::has_macaddr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RadarSearchRequest::set_has_macaddr() {
  _has_bits_[0] |= 0x00000001u;
}
void RadarSearchRequest::clear_has_macaddr() {
  _has_bits_[0] &= ~0x00000001u;
}
void RadarSearchRequest::clear_macaddr() {
  macaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_macaddr();
}
const ::std::string& RadarSearchRequest::macaddr() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchRequest.MacAddr)
  return macaddr_.GetNoArena();
}
void RadarSearchRequest::set_macaddr(const ::std::string& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RadarSearchRequest.MacAddr)
}
#if LANG_CXX11
void RadarSearchRequest::set_macaddr(::std::string&& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RadarSearchRequest.MacAddr)
}
#endif
void RadarSearchRequest::set_macaddr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RadarSearchRequest.MacAddr)
}
void RadarSearchRequest::set_macaddr(const char* value, size_t size) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RadarSearchRequest.MacAddr)
}
::std::string* RadarSearchRequest::mutable_macaddr() {
  set_has_macaddr();
  // @@protoc_insertion_point(field_mutable:micromsg.RadarSearchRequest.MacAddr)
  return macaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RadarSearchRequest::release_macaddr() {
  // @@protoc_insertion_point(field_release:micromsg.RadarSearchRequest.MacAddr)
  clear_has_macaddr();
  return macaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RadarSearchRequest::set_allocated_macaddr(::std::string* macaddr) {
  if (macaddr != NULL) {
    set_has_macaddr();
  } else {
    clear_has_macaddr();
  }
  macaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), macaddr);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarSearchRequest.MacAddr)
}

// optional string CellId = 7;
bool RadarSearchRequest::has_cellid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RadarSearchRequest::set_has_cellid() {
  _has_bits_[0] |= 0x00000002u;
}
void RadarSearchRequest::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000002u;
}
void RadarSearchRequest::clear_cellid() {
  cellid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cellid();
}
const ::std::string& RadarSearchRequest::cellid() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchRequest.CellId)
  return cellid_.GetNoArena();
}
void RadarSearchRequest::set_cellid(const ::std::string& value) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RadarSearchRequest.CellId)
}
#if LANG_CXX11
void RadarSearchRequest::set_cellid(::std::string&& value) {
  set_has_cellid();
  cellid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RadarSearchRequest.CellId)
}
#endif
void RadarSearchRequest::set_cellid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RadarSearchRequest.CellId)
}
void RadarSearchRequest::set_cellid(const char* value, size_t size) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RadarSearchRequest.CellId)
}
::std::string* RadarSearchRequest::mutable_cellid() {
  set_has_cellid();
  // @@protoc_insertion_point(field_mutable:micromsg.RadarSearchRequest.CellId)
  return cellid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RadarSearchRequest::release_cellid() {
  // @@protoc_insertion_point(field_release:micromsg.RadarSearchRequest.CellId)
  clear_has_cellid();
  return cellid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RadarSearchRequest::set_allocated_cellid(::std::string* cellid) {
  if (cellid != NULL) {
    set_has_cellid();
  } else {
    clear_has_cellid();
  }
  cellid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cellid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarSearchRequest.CellId)
}

// optional int32 GPSSource = 8;
bool RadarSearchRequest::has_gpssource() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void RadarSearchRequest::set_has_gpssource() {
  _has_bits_[0] |= 0x00000080u;
}
void RadarSearchRequest::clear_has_gpssource() {
  _has_bits_[0] &= ~0x00000080u;
}
void RadarSearchRequest::clear_gpssource() {
  gpssource_ = 0;
  clear_has_gpssource();
}
::google::protobuf::int32 RadarSearchRequest::gpssource() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchRequest.GPSSource)
  return gpssource_;
}
void RadarSearchRequest::set_gpssource(::google::protobuf::int32 value) {
  set_has_gpssource();
  gpssource_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RadarSearchRequest.GPSSource)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RadarSearchMember::kUserNameFieldNumber;
const int RadarSearchMember::kDistanceFieldNumber;
const int RadarSearchMember::kNickNameFieldNumber;
const int RadarSearchMember::kSmallImgUrlFieldNumber;
const int RadarSearchMember::kEncodeUserNameFieldNumber;
const int RadarSearchMember::kAntispamTicketFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RadarSearchMember::RadarSearchMember()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.RadarSearchMember)
}
RadarSearchMember::RadarSearchMember(const RadarSearchMember& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  smallimgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_smallimgurl()) {
    smallimgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smallimgurl_);
  }
  encodeusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_encodeusername()) {
    encodeusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encodeusername_);
  }
  antispamticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_antispamticket()) {
    antispamticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.antispamticket_);
  }
  distance_ = from.distance_;
  // @@protoc_insertion_point(copy_constructor:micromsg.RadarSearchMember)
}

void RadarSearchMember::SharedCtor() {
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smallimgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encodeusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  antispamticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  distance_ = 0u;
}

RadarSearchMember::~RadarSearchMember() {
  // @@protoc_insertion_point(destructor:micromsg.RadarSearchMember)
  SharedDtor();
}

void RadarSearchMember::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smallimgurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encodeusername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  antispamticket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RadarSearchMember::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RadarSearchMember::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RadarSearchMember& RadarSearchMember::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

RadarSearchMember* RadarSearchMember::New(::google::protobuf::Arena* arena) const {
  RadarSearchMember* n = new RadarSearchMember;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RadarSearchMember::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.RadarSearchMember)
  if (_has_bits_[0 / 32] & 31u) {
    if (has_username()) {
      GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*username_.UnsafeRawStringPointer())->clear();
    }
    if (has_nickname()) {
      GOOGLE_DCHECK(!nickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*nickname_.UnsafeRawStringPointer())->clear();
    }
    if (has_smallimgurl()) {
      GOOGLE_DCHECK(!smallimgurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*smallimgurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_encodeusername()) {
      GOOGLE_DCHECK(!encodeusername_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*encodeusername_.UnsafeRawStringPointer())->clear();
    }
    if (has_antispamticket()) {
      GOOGLE_DCHECK(!antispamticket_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*antispamticket_.UnsafeRawStringPointer())->clear();
    }
  }
  distance_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RadarSearchMember::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.RadarSearchMember)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string UserName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RadarSearchMember.UserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Distance = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_distance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &distance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string NickName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RadarSearchMember.NickName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string SmallImgUrl = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smallimgurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->smallimgurl().data(), this->smallimgurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RadarSearchMember.SmallImgUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string EncodeUserName = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_encodeusername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->encodeusername().data(), this->encodeusername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RadarSearchMember.EncodeUserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AntispamTicket = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_antispamticket()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->antispamticket().data(), this->antispamticket().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RadarSearchMember.AntispamTicket");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.RadarSearchMember)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.RadarSearchMember)
  return false;
#undef DO_
}

void RadarSearchMember::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.RadarSearchMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string UserName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RadarSearchMember.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // required uint32 Distance = 2;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->distance(), output);
  }

  // optional string NickName = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RadarSearchMember.NickName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->nickname(), output);
  }

  // optional string SmallImgUrl = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smallimgurl().data(), this->smallimgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RadarSearchMember.SmallImgUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->smallimgurl(), output);
  }

  // optional string EncodeUserName = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->encodeusername().data(), this->encodeusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RadarSearchMember.EncodeUserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->encodeusername(), output);
  }

  // optional string AntispamTicket = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->antispamticket().data(), this->antispamticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RadarSearchMember.AntispamTicket");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->antispamticket(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.RadarSearchMember)
}

::google::protobuf::uint8* RadarSearchMember::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.RadarSearchMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string UserName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RadarSearchMember.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // required uint32 Distance = 2;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->distance(), target);
  }

  // optional string NickName = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RadarSearchMember.NickName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->nickname(), target);
  }

  // optional string SmallImgUrl = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smallimgurl().data(), this->smallimgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RadarSearchMember.SmallImgUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->smallimgurl(), target);
  }

  // optional string EncodeUserName = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->encodeusername().data(), this->encodeusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RadarSearchMember.EncodeUserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->encodeusername(), target);
  }

  // optional string AntispamTicket = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->antispamticket().data(), this->antispamticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RadarSearchMember.AntispamTicket");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->antispamticket(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.RadarSearchMember)
  return target;
}

size_t RadarSearchMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.RadarSearchMember)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint32 Distance = 2;
  if (has_distance()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->distance());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string UserName = 1;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional string NickName = 3;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional string SmallImgUrl = 4;
    if (has_smallimgurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->smallimgurl());
    }

    // optional string EncodeUserName = 5;
    if (has_encodeusername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->encodeusername());
    }

    // optional string AntispamTicket = 6;
    if (has_antispamticket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->antispamticket());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RadarSearchMember::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.RadarSearchMember)
  GOOGLE_DCHECK_NE(&from, this);
  const RadarSearchMember* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RadarSearchMember>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.RadarSearchMember)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.RadarSearchMember)
    MergeFrom(*source);
  }
}

void RadarSearchMember::MergeFrom(const RadarSearchMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.RadarSearchMember)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_smallimgurl();
      smallimgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smallimgurl_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_encodeusername();
      encodeusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encodeusername_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_antispamticket();
      antispamticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.antispamticket_);
    }
    if (cached_has_bits & 0x00000020u) {
      distance_ = from.distance_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RadarSearchMember::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.RadarSearchMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RadarSearchMember::CopyFrom(const RadarSearchMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.RadarSearchMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RadarSearchMember::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000020) != 0x00000020) return false;
  return true;
}

void RadarSearchMember::Swap(RadarSearchMember* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RadarSearchMember::InternalSwap(RadarSearchMember* other) {
  username_.Swap(&other->username_);
  nickname_.Swap(&other->nickname_);
  smallimgurl_.Swap(&other->smallimgurl_);
  encodeusername_.Swap(&other->encodeusername_);
  antispamticket_.Swap(&other->antispamticket_);
  std::swap(distance_, other->distance_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RadarSearchMember::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RadarSearchMember

// optional string UserName = 1;
bool RadarSearchMember::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RadarSearchMember::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
void RadarSearchMember::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
void RadarSearchMember::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& RadarSearchMember::username() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchMember.UserName)
  return username_.GetNoArena();
}
void RadarSearchMember::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RadarSearchMember.UserName)
}
#if LANG_CXX11
void RadarSearchMember::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RadarSearchMember.UserName)
}
#endif
void RadarSearchMember::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RadarSearchMember.UserName)
}
void RadarSearchMember::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RadarSearchMember.UserName)
}
::std::string* RadarSearchMember::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.RadarSearchMember.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RadarSearchMember::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.RadarSearchMember.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RadarSearchMember::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarSearchMember.UserName)
}

// required uint32 Distance = 2;
bool RadarSearchMember::has_distance() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void RadarSearchMember::set_has_distance() {
  _has_bits_[0] |= 0x00000020u;
}
void RadarSearchMember::clear_has_distance() {
  _has_bits_[0] &= ~0x00000020u;
}
void RadarSearchMember::clear_distance() {
  distance_ = 0u;
  clear_has_distance();
}
::google::protobuf::uint32 RadarSearchMember::distance() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchMember.Distance)
  return distance_;
}
void RadarSearchMember::set_distance(::google::protobuf::uint32 value) {
  set_has_distance();
  distance_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RadarSearchMember.Distance)
}

// optional string NickName = 3;
bool RadarSearchMember::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RadarSearchMember::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
void RadarSearchMember::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
void RadarSearchMember::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
const ::std::string& RadarSearchMember::nickname() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchMember.NickName)
  return nickname_.GetNoArena();
}
void RadarSearchMember::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RadarSearchMember.NickName)
}
#if LANG_CXX11
void RadarSearchMember::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RadarSearchMember.NickName)
}
#endif
void RadarSearchMember::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RadarSearchMember.NickName)
}
void RadarSearchMember::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RadarSearchMember.NickName)
}
::std::string* RadarSearchMember::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:micromsg.RadarSearchMember.NickName)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RadarSearchMember::release_nickname() {
  // @@protoc_insertion_point(field_release:micromsg.RadarSearchMember.NickName)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RadarSearchMember::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarSearchMember.NickName)
}

// optional string SmallImgUrl = 4;
bool RadarSearchMember::has_smallimgurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RadarSearchMember::set_has_smallimgurl() {
  _has_bits_[0] |= 0x00000004u;
}
void RadarSearchMember::clear_has_smallimgurl() {
  _has_bits_[0] &= ~0x00000004u;
}
void RadarSearchMember::clear_smallimgurl() {
  smallimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_smallimgurl();
}
const ::std::string& RadarSearchMember::smallimgurl() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchMember.SmallImgUrl)
  return smallimgurl_.GetNoArena();
}
void RadarSearchMember::set_smallimgurl(const ::std::string& value) {
  set_has_smallimgurl();
  smallimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RadarSearchMember.SmallImgUrl)
}
#if LANG_CXX11
void RadarSearchMember::set_smallimgurl(::std::string&& value) {
  set_has_smallimgurl();
  smallimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RadarSearchMember.SmallImgUrl)
}
#endif
void RadarSearchMember::set_smallimgurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_smallimgurl();
  smallimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RadarSearchMember.SmallImgUrl)
}
void RadarSearchMember::set_smallimgurl(const char* value, size_t size) {
  set_has_smallimgurl();
  smallimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RadarSearchMember.SmallImgUrl)
}
::std::string* RadarSearchMember::mutable_smallimgurl() {
  set_has_smallimgurl();
  // @@protoc_insertion_point(field_mutable:micromsg.RadarSearchMember.SmallImgUrl)
  return smallimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RadarSearchMember::release_smallimgurl() {
  // @@protoc_insertion_point(field_release:micromsg.RadarSearchMember.SmallImgUrl)
  clear_has_smallimgurl();
  return smallimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RadarSearchMember::set_allocated_smallimgurl(::std::string* smallimgurl) {
  if (smallimgurl != NULL) {
    set_has_smallimgurl();
  } else {
    clear_has_smallimgurl();
  }
  smallimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smallimgurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarSearchMember.SmallImgUrl)
}

// optional string EncodeUserName = 5;
bool RadarSearchMember::has_encodeusername() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RadarSearchMember::set_has_encodeusername() {
  _has_bits_[0] |= 0x00000008u;
}
void RadarSearchMember::clear_has_encodeusername() {
  _has_bits_[0] &= ~0x00000008u;
}
void RadarSearchMember::clear_encodeusername() {
  encodeusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_encodeusername();
}
const ::std::string& RadarSearchMember::encodeusername() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchMember.EncodeUserName)
  return encodeusername_.GetNoArena();
}
void RadarSearchMember::set_encodeusername(const ::std::string& value) {
  set_has_encodeusername();
  encodeusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RadarSearchMember.EncodeUserName)
}
#if LANG_CXX11
void RadarSearchMember::set_encodeusername(::std::string&& value) {
  set_has_encodeusername();
  encodeusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RadarSearchMember.EncodeUserName)
}
#endif
void RadarSearchMember::set_encodeusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_encodeusername();
  encodeusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RadarSearchMember.EncodeUserName)
}
void RadarSearchMember::set_encodeusername(const char* value, size_t size) {
  set_has_encodeusername();
  encodeusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RadarSearchMember.EncodeUserName)
}
::std::string* RadarSearchMember::mutable_encodeusername() {
  set_has_encodeusername();
  // @@protoc_insertion_point(field_mutable:micromsg.RadarSearchMember.EncodeUserName)
  return encodeusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RadarSearchMember::release_encodeusername() {
  // @@protoc_insertion_point(field_release:micromsg.RadarSearchMember.EncodeUserName)
  clear_has_encodeusername();
  return encodeusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RadarSearchMember::set_allocated_encodeusername(::std::string* encodeusername) {
  if (encodeusername != NULL) {
    set_has_encodeusername();
  } else {
    clear_has_encodeusername();
  }
  encodeusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), encodeusername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarSearchMember.EncodeUserName)
}

// optional string AntispamTicket = 6;
bool RadarSearchMember::has_antispamticket() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void RadarSearchMember::set_has_antispamticket() {
  _has_bits_[0] |= 0x00000010u;
}
void RadarSearchMember::clear_has_antispamticket() {
  _has_bits_[0] &= ~0x00000010u;
}
void RadarSearchMember::clear_antispamticket() {
  antispamticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_antispamticket();
}
const ::std::string& RadarSearchMember::antispamticket() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchMember.AntispamTicket)
  return antispamticket_.GetNoArena();
}
void RadarSearchMember::set_antispamticket(const ::std::string& value) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RadarSearchMember.AntispamTicket)
}
#if LANG_CXX11
void RadarSearchMember::set_antispamticket(::std::string&& value) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RadarSearchMember.AntispamTicket)
}
#endif
void RadarSearchMember::set_antispamticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RadarSearchMember.AntispamTicket)
}
void RadarSearchMember::set_antispamticket(const char* value, size_t size) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RadarSearchMember.AntispamTicket)
}
::std::string* RadarSearchMember::mutable_antispamticket() {
  set_has_antispamticket();
  // @@protoc_insertion_point(field_mutable:micromsg.RadarSearchMember.AntispamTicket)
  return antispamticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RadarSearchMember::release_antispamticket() {
  // @@protoc_insertion_point(field_release:micromsg.RadarSearchMember.AntispamTicket)
  clear_has_antispamticket();
  return antispamticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RadarSearchMember::set_allocated_antispamticket(::std::string* antispamticket) {
  if (antispamticket != NULL) {
    set_has_antispamticket();
  } else {
    clear_has_antispamticket();
  }
  antispamticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), antispamticket);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarSearchMember.AntispamTicket)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RadarSearchResponse::kBaseResponseFieldNumber;
const int RadarSearchResponse::kTicketFieldNumber;
const int RadarSearchResponse::kOpCodeFieldNumber;
const int RadarSearchResponse::kMemberCountFieldNumber;
const int RadarSearchResponse::kMemberListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RadarSearchResponse::RadarSearchResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.RadarSearchResponse)
}
RadarSearchResponse::RadarSearchResponse(const RadarSearchResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      memberlist_(from.memberlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ticket()) {
    ticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ticket_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  ::memcpy(&opcode_, &from.opcode_,
    reinterpret_cast<char*>(&membercount_) -
    reinterpret_cast<char*>(&opcode_) + sizeof(membercount_));
  // @@protoc_insertion_point(copy_constructor:micromsg.RadarSearchResponse)
}

void RadarSearchResponse::SharedCtor() {
  _cached_size_ = 0;
  ticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&membercount_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(membercount_));
}

RadarSearchResponse::~RadarSearchResponse() {
  // @@protoc_insertion_point(destructor:micromsg.RadarSearchResponse)
  SharedDtor();
}

void RadarSearchResponse::SharedDtor() {
  ticket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void RadarSearchResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RadarSearchResponse::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RadarSearchResponse& RadarSearchResponse::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

RadarSearchResponse* RadarSearchResponse::New(::google::protobuf::Arena* arena) const {
  RadarSearchResponse* n = new RadarSearchResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RadarSearchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.RadarSearchResponse)
  memberlist_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    if (has_ticket()) {
      GOOGLE_DCHECK(!ticket_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*ticket_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 12u) {
    ::memset(&opcode_, 0, reinterpret_cast<char*>(&membercount_) -
      reinterpret_cast<char*>(&opcode_) + sizeof(membercount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RadarSearchResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.RadarSearchResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Ticket = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ticket()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ticket().data(), this->ticket().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RadarSearchResponse.Ticket");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 OpCode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_opcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &opcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 MemberCount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_membercount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &membercount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.RadarSearchMember MemberList = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_memberlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.RadarSearchResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.RadarSearchResponse)
  return false;
#undef DO_
}

void RadarSearchResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.RadarSearchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // optional string Ticket = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ticket().data(), this->ticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RadarSearchResponse.Ticket");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ticket(), output);
  }

  // required uint32 OpCode = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->opcode(), output);
  }

  // required uint32 MemberCount = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->membercount(), output);
  }

  // repeated .micromsg.RadarSearchMember MemberList = 5;
  for (unsigned int i = 0, n = this->memberlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->memberlist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.RadarSearchResponse)
}

::google::protobuf::uint8* RadarSearchResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.RadarSearchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // optional string Ticket = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ticket().data(), this->ticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RadarSearchResponse.Ticket");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ticket(), target);
  }

  // required uint32 OpCode = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->opcode(), target);
  }

  // required uint32 MemberCount = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->membercount(), target);
  }

  // repeated .micromsg.RadarSearchMember MemberList = 5;
  for (unsigned int i = 0, n = this->memberlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->memberlist(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.RadarSearchResponse)
  return target;
}

size_t RadarSearchResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.RadarSearchResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_opcode()) {
    // required uint32 OpCode = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opcode());
  }

  if (has_membercount()) {
    // required uint32 MemberCount = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->membercount());
  }

  return total_size;
}
size_t RadarSearchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.RadarSearchResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000e) ^ 0x0000000e) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required uint32 OpCode = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opcode());

    // required uint32 MemberCount = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->membercount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.RadarSearchMember MemberList = 5;
  {
    unsigned int count = this->memberlist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->memberlist(i));
    }
  }

  // optional string Ticket = 2;
  if (has_ticket()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ticket());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RadarSearchResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.RadarSearchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RadarSearchResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RadarSearchResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.RadarSearchResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.RadarSearchResponse)
    MergeFrom(*source);
  }
}

void RadarSearchResponse::MergeFrom(const RadarSearchResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.RadarSearchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  memberlist_.MergeFrom(from.memberlist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_ticket();
      ticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ticket_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000004u) {
      opcode_ = from.opcode_;
    }
    if (cached_has_bits & 0x00000008u) {
      membercount_ = from.membercount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RadarSearchResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.RadarSearchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RadarSearchResponse::CopyFrom(const RadarSearchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.RadarSearchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RadarSearchResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->memberlist())) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void RadarSearchResponse::Swap(RadarSearchResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RadarSearchResponse::InternalSwap(RadarSearchResponse* other) {
  memberlist_.InternalSwap(&other->memberlist_);
  ticket_.Swap(&other->ticket_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(opcode_, other->opcode_);
  std::swap(membercount_, other->membercount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RadarSearchResponse::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RadarSearchResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool RadarSearchResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RadarSearchResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
void RadarSearchResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
void RadarSearchResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& RadarSearchResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* RadarSearchResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RadarSearchResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* RadarSearchResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.RadarSearchResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void RadarSearchResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarSearchResponse.BaseResponse)
}

// optional string Ticket = 2;
bool RadarSearchResponse::has_ticket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RadarSearchResponse::set_has_ticket() {
  _has_bits_[0] |= 0x00000001u;
}
void RadarSearchResponse::clear_has_ticket() {
  _has_bits_[0] &= ~0x00000001u;
}
void RadarSearchResponse::clear_ticket() {
  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ticket();
}
const ::std::string& RadarSearchResponse::ticket() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchResponse.Ticket)
  return ticket_.GetNoArena();
}
void RadarSearchResponse::set_ticket(const ::std::string& value) {
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RadarSearchResponse.Ticket)
}
#if LANG_CXX11
void RadarSearchResponse::set_ticket(::std::string&& value) {
  set_has_ticket();
  ticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RadarSearchResponse.Ticket)
}
#endif
void RadarSearchResponse::set_ticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RadarSearchResponse.Ticket)
}
void RadarSearchResponse::set_ticket(const char* value, size_t size) {
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RadarSearchResponse.Ticket)
}
::std::string* RadarSearchResponse::mutable_ticket() {
  set_has_ticket();
  // @@protoc_insertion_point(field_mutable:micromsg.RadarSearchResponse.Ticket)
  return ticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RadarSearchResponse::release_ticket() {
  // @@protoc_insertion_point(field_release:micromsg.RadarSearchResponse.Ticket)
  clear_has_ticket();
  return ticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RadarSearchResponse::set_allocated_ticket(::std::string* ticket) {
  if (ticket != NULL) {
    set_has_ticket();
  } else {
    clear_has_ticket();
  }
  ticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ticket);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarSearchResponse.Ticket)
}

// required uint32 OpCode = 3;
bool RadarSearchResponse::has_opcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RadarSearchResponse::set_has_opcode() {
  _has_bits_[0] |= 0x00000004u;
}
void RadarSearchResponse::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000004u;
}
void RadarSearchResponse::clear_opcode() {
  opcode_ = 0u;
  clear_has_opcode();
}
::google::protobuf::uint32 RadarSearchResponse::opcode() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchResponse.OpCode)
  return opcode_;
}
void RadarSearchResponse::set_opcode(::google::protobuf::uint32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RadarSearchResponse.OpCode)
}

// required uint32 MemberCount = 4;
bool RadarSearchResponse::has_membercount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RadarSearchResponse::set_has_membercount() {
  _has_bits_[0] |= 0x00000008u;
}
void RadarSearchResponse::clear_has_membercount() {
  _has_bits_[0] &= ~0x00000008u;
}
void RadarSearchResponse::clear_membercount() {
  membercount_ = 0u;
  clear_has_membercount();
}
::google::protobuf::uint32 RadarSearchResponse::membercount() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchResponse.MemberCount)
  return membercount_;
}
void RadarSearchResponse::set_membercount(::google::protobuf::uint32 value) {
  set_has_membercount();
  membercount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RadarSearchResponse.MemberCount)
}

// repeated .micromsg.RadarSearchMember MemberList = 5;
int RadarSearchResponse::memberlist_size() const {
  return memberlist_.size();
}
void RadarSearchResponse::clear_memberlist() {
  memberlist_.Clear();
}
const ::micromsg::RadarSearchMember& RadarSearchResponse::memberlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchResponse.MemberList)
  return memberlist_.Get(index);
}
::micromsg::RadarSearchMember* RadarSearchResponse::mutable_memberlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.RadarSearchResponse.MemberList)
  return memberlist_.Mutable(index);
}
::micromsg::RadarSearchMember* RadarSearchResponse::add_memberlist() {
  // @@protoc_insertion_point(field_add:micromsg.RadarSearchResponse.MemberList)
  return memberlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::RadarSearchMember >*
RadarSearchResponse::mutable_memberlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.RadarSearchResponse.MemberList)
  return &memberlist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::RadarSearchMember >&
RadarSearchResponse::memberlist() const {
  // @@protoc_insertion_point(field_list:micromsg.RadarSearchResponse.MemberList)
  return memberlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RadarChatRoomMember::kUserNameFieldNumber;
const int RadarChatRoomMember::kAntispamTicketFieldNumber;
const int RadarChatRoomMember::kEncodeUserNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RadarChatRoomMember::RadarChatRoomMember()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.RadarChatRoomMember)
}
RadarChatRoomMember::RadarChatRoomMember(const RadarChatRoomMember& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  antispamticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_antispamticket()) {
    antispamticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.antispamticket_);
  }
  encodeusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_encodeusername()) {
    encodeusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encodeusername_);
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.RadarChatRoomMember)
}

void RadarChatRoomMember::SharedCtor() {
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  antispamticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encodeusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RadarChatRoomMember::~RadarChatRoomMember() {
  // @@protoc_insertion_point(destructor:micromsg.RadarChatRoomMember)
  SharedDtor();
}

void RadarChatRoomMember::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  antispamticket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encodeusername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RadarChatRoomMember::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RadarChatRoomMember::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RadarChatRoomMember& RadarChatRoomMember::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

RadarChatRoomMember* RadarChatRoomMember::New(::google::protobuf::Arena* arena) const {
  RadarChatRoomMember* n = new RadarChatRoomMember;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RadarChatRoomMember::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.RadarChatRoomMember)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_username()) {
      GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*username_.UnsafeRawStringPointer())->clear();
    }
    if (has_antispamticket()) {
      GOOGLE_DCHECK(!antispamticket_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*antispamticket_.UnsafeRawStringPointer())->clear();
    }
    if (has_encodeusername()) {
      GOOGLE_DCHECK(!encodeusername_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*encodeusername_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RadarChatRoomMember::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.RadarChatRoomMember)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string UserName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RadarChatRoomMember.UserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AntispamTicket = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_antispamticket()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->antispamticket().data(), this->antispamticket().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RadarChatRoomMember.AntispamTicket");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string EncodeUserName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_encodeusername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->encodeusername().data(), this->encodeusername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RadarChatRoomMember.EncodeUserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.RadarChatRoomMember)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.RadarChatRoomMember)
  return false;
#undef DO_
}

void RadarChatRoomMember::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.RadarChatRoomMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string UserName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RadarChatRoomMember.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // optional string AntispamTicket = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->antispamticket().data(), this->antispamticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RadarChatRoomMember.AntispamTicket");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->antispamticket(), output);
  }

  // optional string EncodeUserName = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->encodeusername().data(), this->encodeusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RadarChatRoomMember.EncodeUserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->encodeusername(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.RadarChatRoomMember)
}

::google::protobuf::uint8* RadarChatRoomMember::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.RadarChatRoomMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string UserName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RadarChatRoomMember.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // optional string AntispamTicket = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->antispamticket().data(), this->antispamticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RadarChatRoomMember.AntispamTicket");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->antispamticket(), target);
  }

  // optional string EncodeUserName = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->encodeusername().data(), this->encodeusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RadarChatRoomMember.EncodeUserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->encodeusername(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.RadarChatRoomMember)
  return target;
}

size_t RadarChatRoomMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.RadarChatRoomMember)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string UserName = 1;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional string AntispamTicket = 2;
    if (has_antispamticket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->antispamticket());
    }

    // optional string EncodeUserName = 3;
    if (has_encodeusername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->encodeusername());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RadarChatRoomMember::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.RadarChatRoomMember)
  GOOGLE_DCHECK_NE(&from, this);
  const RadarChatRoomMember* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RadarChatRoomMember>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.RadarChatRoomMember)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.RadarChatRoomMember)
    MergeFrom(*source);
  }
}

void RadarChatRoomMember::MergeFrom(const RadarChatRoomMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.RadarChatRoomMember)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_antispamticket();
      antispamticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.antispamticket_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_encodeusername();
      encodeusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encodeusername_);
    }
  }
}

void RadarChatRoomMember::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.RadarChatRoomMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RadarChatRoomMember::CopyFrom(const RadarChatRoomMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.RadarChatRoomMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RadarChatRoomMember::IsInitialized() const {
  return true;
}

void RadarChatRoomMember::Swap(RadarChatRoomMember* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RadarChatRoomMember::InternalSwap(RadarChatRoomMember* other) {
  username_.Swap(&other->username_);
  antispamticket_.Swap(&other->antispamticket_);
  encodeusername_.Swap(&other->encodeusername_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RadarChatRoomMember::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RadarChatRoomMember

// optional string UserName = 1;
bool RadarChatRoomMember::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RadarChatRoomMember::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
void RadarChatRoomMember::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
void RadarChatRoomMember::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& RadarChatRoomMember::username() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarChatRoomMember.UserName)
  return username_.GetNoArena();
}
void RadarChatRoomMember::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RadarChatRoomMember.UserName)
}
#if LANG_CXX11
void RadarChatRoomMember::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RadarChatRoomMember.UserName)
}
#endif
void RadarChatRoomMember::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RadarChatRoomMember.UserName)
}
void RadarChatRoomMember::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RadarChatRoomMember.UserName)
}
::std::string* RadarChatRoomMember::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.RadarChatRoomMember.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RadarChatRoomMember::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.RadarChatRoomMember.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RadarChatRoomMember::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarChatRoomMember.UserName)
}

// optional string AntispamTicket = 2;
bool RadarChatRoomMember::has_antispamticket() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RadarChatRoomMember::set_has_antispamticket() {
  _has_bits_[0] |= 0x00000002u;
}
void RadarChatRoomMember::clear_has_antispamticket() {
  _has_bits_[0] &= ~0x00000002u;
}
void RadarChatRoomMember::clear_antispamticket() {
  antispamticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_antispamticket();
}
const ::std::string& RadarChatRoomMember::antispamticket() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarChatRoomMember.AntispamTicket)
  return antispamticket_.GetNoArena();
}
void RadarChatRoomMember::set_antispamticket(const ::std::string& value) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RadarChatRoomMember.AntispamTicket)
}
#if LANG_CXX11
void RadarChatRoomMember::set_antispamticket(::std::string&& value) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RadarChatRoomMember.AntispamTicket)
}
#endif
void RadarChatRoomMember::set_antispamticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RadarChatRoomMember.AntispamTicket)
}
void RadarChatRoomMember::set_antispamticket(const char* value, size_t size) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RadarChatRoomMember.AntispamTicket)
}
::std::string* RadarChatRoomMember::mutable_antispamticket() {
  set_has_antispamticket();
  // @@protoc_insertion_point(field_mutable:micromsg.RadarChatRoomMember.AntispamTicket)
  return antispamticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RadarChatRoomMember::release_antispamticket() {
  // @@protoc_insertion_point(field_release:micromsg.RadarChatRoomMember.AntispamTicket)
  clear_has_antispamticket();
  return antispamticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RadarChatRoomMember::set_allocated_antispamticket(::std::string* antispamticket) {
  if (antispamticket != NULL) {
    set_has_antispamticket();
  } else {
    clear_has_antispamticket();
  }
  antispamticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), antispamticket);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarChatRoomMember.AntispamTicket)
}

// optional string EncodeUserName = 3;
bool RadarChatRoomMember::has_encodeusername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RadarChatRoomMember::set_has_encodeusername() {
  _has_bits_[0] |= 0x00000004u;
}
void RadarChatRoomMember::clear_has_encodeusername() {
  _has_bits_[0] &= ~0x00000004u;
}
void RadarChatRoomMember::clear_encodeusername() {
  encodeusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_encodeusername();
}
const ::std::string& RadarChatRoomMember::encodeusername() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarChatRoomMember.EncodeUserName)
  return encodeusername_.GetNoArena();
}
void RadarChatRoomMember::set_encodeusername(const ::std::string& value) {
  set_has_encodeusername();
  encodeusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RadarChatRoomMember.EncodeUserName)
}
#if LANG_CXX11
void RadarChatRoomMember::set_encodeusername(::std::string&& value) {
  set_has_encodeusername();
  encodeusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RadarChatRoomMember.EncodeUserName)
}
#endif
void RadarChatRoomMember::set_encodeusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_encodeusername();
  encodeusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RadarChatRoomMember.EncodeUserName)
}
void RadarChatRoomMember::set_encodeusername(const char* value, size_t size) {
  set_has_encodeusername();
  encodeusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RadarChatRoomMember.EncodeUserName)
}
::std::string* RadarChatRoomMember::mutable_encodeusername() {
  set_has_encodeusername();
  // @@protoc_insertion_point(field_mutable:micromsg.RadarChatRoomMember.EncodeUserName)
  return encodeusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RadarChatRoomMember::release_encodeusername() {
  // @@protoc_insertion_point(field_release:micromsg.RadarChatRoomMember.EncodeUserName)
  clear_has_encodeusername();
  return encodeusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RadarChatRoomMember::set_allocated_encodeusername(::std::string* encodeusername) {
  if (encodeusername != NULL) {
    set_has_encodeusername();
  } else {
    clear_has_encodeusername();
  }
  encodeusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), encodeusername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarChatRoomMember.EncodeUserName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RadarRelationChainRequest::kBaseRequestFieldNumber;
const int RadarRelationChainRequest::kMemberCountFieldNumber;
const int RadarRelationChainRequest::kMemberListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RadarRelationChainRequest::RadarRelationChainRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.RadarRelationChainRequest)
}
RadarRelationChainRequest::RadarRelationChainRequest(const RadarRelationChainRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      memberlist_(from.memberlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  membercount_ = from.membercount_;
  // @@protoc_insertion_point(copy_constructor:micromsg.RadarRelationChainRequest)
}

void RadarRelationChainRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&membercount_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(membercount_));
}

RadarRelationChainRequest::~RadarRelationChainRequest() {
  // @@protoc_insertion_point(destructor:micromsg.RadarRelationChainRequest)
  SharedDtor();
}

void RadarRelationChainRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void RadarRelationChainRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RadarRelationChainRequest::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RadarRelationChainRequest& RadarRelationChainRequest::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

RadarRelationChainRequest* RadarRelationChainRequest::New(::google::protobuf::Arena* arena) const {
  RadarRelationChainRequest* n = new RadarRelationChainRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RadarRelationChainRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.RadarRelationChainRequest)
  memberlist_.Clear();
  if (has_baserequest()) {
    GOOGLE_DCHECK(baserequest_ != NULL);
    baserequest_->::micromsg::BaseRequest::Clear();
  }
  membercount_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RadarRelationChainRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.RadarRelationChainRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 MemberCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_membercount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &membercount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.RadarChatRoomMember MemberList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_memberlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.RadarRelationChainRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.RadarRelationChainRequest)
  return false;
#undef DO_
}

void RadarRelationChainRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.RadarRelationChainRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required uint32 MemberCount = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->membercount(), output);
  }

  // repeated .micromsg.RadarChatRoomMember MemberList = 3;
  for (unsigned int i = 0, n = this->memberlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->memberlist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.RadarRelationChainRequest)
}

::google::protobuf::uint8* RadarRelationChainRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.RadarRelationChainRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required uint32 MemberCount = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->membercount(), target);
  }

  // repeated .micromsg.RadarChatRoomMember MemberList = 3;
  for (unsigned int i = 0, n = this->memberlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->memberlist(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.RadarRelationChainRequest)
  return target;
}

size_t RadarRelationChainRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.RadarRelationChainRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_membercount()) {
    // required uint32 MemberCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->membercount());
  }

  return total_size;
}
size_t RadarRelationChainRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.RadarRelationChainRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required uint32 MemberCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->membercount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.RadarChatRoomMember MemberList = 3;
  {
    unsigned int count = this->memberlist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->memberlist(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RadarRelationChainRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.RadarRelationChainRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RadarRelationChainRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RadarRelationChainRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.RadarRelationChainRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.RadarRelationChainRequest)
    MergeFrom(*source);
  }
}

void RadarRelationChainRequest::MergeFrom(const RadarRelationChainRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.RadarRelationChainRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  memberlist_.MergeFrom(from.memberlist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000002u) {
      membercount_ = from.membercount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RadarRelationChainRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.RadarRelationChainRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RadarRelationChainRequest::CopyFrom(const RadarRelationChainRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.RadarRelationChainRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RadarRelationChainRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void RadarRelationChainRequest::Swap(RadarRelationChainRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RadarRelationChainRequest::InternalSwap(RadarRelationChainRequest* other) {
  memberlist_.InternalSwap(&other->memberlist_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(membercount_, other->membercount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RadarRelationChainRequest::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RadarRelationChainRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool RadarRelationChainRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RadarRelationChainRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
void RadarRelationChainRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
void RadarRelationChainRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& RadarRelationChainRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarRelationChainRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* RadarRelationChainRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RadarRelationChainRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* RadarRelationChainRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.RadarRelationChainRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void RadarRelationChainRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarRelationChainRequest.BaseRequest)
}

// required uint32 MemberCount = 2;
bool RadarRelationChainRequest::has_membercount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RadarRelationChainRequest::set_has_membercount() {
  _has_bits_[0] |= 0x00000002u;
}
void RadarRelationChainRequest::clear_has_membercount() {
  _has_bits_[0] &= ~0x00000002u;
}
void RadarRelationChainRequest::clear_membercount() {
  membercount_ = 0u;
  clear_has_membercount();
}
::google::protobuf::uint32 RadarRelationChainRequest::membercount() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarRelationChainRequest.MemberCount)
  return membercount_;
}
void RadarRelationChainRequest::set_membercount(::google::protobuf::uint32 value) {
  set_has_membercount();
  membercount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RadarRelationChainRequest.MemberCount)
}

// repeated .micromsg.RadarChatRoomMember MemberList = 3;
int RadarRelationChainRequest::memberlist_size() const {
  return memberlist_.size();
}
void RadarRelationChainRequest::clear_memberlist() {
  memberlist_.Clear();
}
const ::micromsg::RadarChatRoomMember& RadarRelationChainRequest::memberlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.RadarRelationChainRequest.MemberList)
  return memberlist_.Get(index);
}
::micromsg::RadarChatRoomMember* RadarRelationChainRequest::mutable_memberlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.RadarRelationChainRequest.MemberList)
  return memberlist_.Mutable(index);
}
::micromsg::RadarChatRoomMember* RadarRelationChainRequest::add_memberlist() {
  // @@protoc_insertion_point(field_add:micromsg.RadarRelationChainRequest.MemberList)
  return memberlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::RadarChatRoomMember >*
RadarRelationChainRequest::mutable_memberlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.RadarRelationChainRequest.MemberList)
  return &memberlist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::RadarChatRoomMember >&
RadarRelationChainRequest::memberlist() const {
  // @@protoc_insertion_point(field_list:micromsg.RadarRelationChainRequest.MemberList)
  return memberlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RadarRelationChainResponse::kBaseResponseFieldNumber;
const int RadarRelationChainResponse::kTicketFieldNumber;
const int RadarRelationChainResponse::kMemberCountFieldNumber;
const int RadarRelationChainResponse::kMemberListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RadarRelationChainResponse::RadarRelationChainResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.RadarRelationChainResponse)
}
RadarRelationChainResponse::RadarRelationChainResponse(const RadarRelationChainResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      memberlist_(from.memberlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ticket()) {
    ticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ticket_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  membercount_ = from.membercount_;
  // @@protoc_insertion_point(copy_constructor:micromsg.RadarRelationChainResponse)
}

void RadarRelationChainResponse::SharedCtor() {
  _cached_size_ = 0;
  ticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&membercount_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(membercount_));
}

RadarRelationChainResponse::~RadarRelationChainResponse() {
  // @@protoc_insertion_point(destructor:micromsg.RadarRelationChainResponse)
  SharedDtor();
}

void RadarRelationChainResponse::SharedDtor() {
  ticket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void RadarRelationChainResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RadarRelationChainResponse::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RadarRelationChainResponse& RadarRelationChainResponse::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

RadarRelationChainResponse* RadarRelationChainResponse::New(::google::protobuf::Arena* arena) const {
  RadarRelationChainResponse* n = new RadarRelationChainResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RadarRelationChainResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.RadarRelationChainResponse)
  memberlist_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    if (has_ticket()) {
      GOOGLE_DCHECK(!ticket_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*ticket_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  membercount_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RadarRelationChainResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.RadarRelationChainResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Ticket = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ticket()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ticket().data(), this->ticket().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RadarRelationChainResponse.Ticket");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 MemberCount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_membercount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &membercount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.RadarChatRoomMember MemberList = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_memberlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.RadarRelationChainResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.RadarRelationChainResponse)
  return false;
#undef DO_
}

void RadarRelationChainResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.RadarRelationChainResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // optional string Ticket = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ticket().data(), this->ticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RadarRelationChainResponse.Ticket");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ticket(), output);
  }

  // required uint32 MemberCount = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->membercount(), output);
  }

  // repeated .micromsg.RadarChatRoomMember MemberList = 4;
  for (unsigned int i = 0, n = this->memberlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->memberlist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.RadarRelationChainResponse)
}

::google::protobuf::uint8* RadarRelationChainResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.RadarRelationChainResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // optional string Ticket = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ticket().data(), this->ticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RadarRelationChainResponse.Ticket");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ticket(), target);
  }

  // required uint32 MemberCount = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->membercount(), target);
  }

  // repeated .micromsg.RadarChatRoomMember MemberList = 4;
  for (unsigned int i = 0, n = this->memberlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->memberlist(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.RadarRelationChainResponse)
  return target;
}

size_t RadarRelationChainResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.RadarRelationChainResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_membercount()) {
    // required uint32 MemberCount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->membercount());
  }

  return total_size;
}
size_t RadarRelationChainResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.RadarRelationChainResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required uint32 MemberCount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->membercount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.RadarChatRoomMember MemberList = 4;
  {
    unsigned int count = this->memberlist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->memberlist(i));
    }
  }

  // optional string Ticket = 2;
  if (has_ticket()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ticket());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RadarRelationChainResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.RadarRelationChainResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RadarRelationChainResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RadarRelationChainResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.RadarRelationChainResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.RadarRelationChainResponse)
    MergeFrom(*source);
  }
}

void RadarRelationChainResponse::MergeFrom(const RadarRelationChainResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.RadarRelationChainResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  memberlist_.MergeFrom(from.memberlist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_ticket();
      ticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ticket_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000004u) {
      membercount_ = from.membercount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RadarRelationChainResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.RadarRelationChainResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RadarRelationChainResponse::CopyFrom(const RadarRelationChainResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.RadarRelationChainResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RadarRelationChainResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void RadarRelationChainResponse::Swap(RadarRelationChainResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RadarRelationChainResponse::InternalSwap(RadarRelationChainResponse* other) {
  memberlist_.InternalSwap(&other->memberlist_);
  ticket_.Swap(&other->ticket_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(membercount_, other->membercount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RadarRelationChainResponse::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RadarRelationChainResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool RadarRelationChainResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RadarRelationChainResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
void RadarRelationChainResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
void RadarRelationChainResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& RadarRelationChainResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarRelationChainResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* RadarRelationChainResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RadarRelationChainResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* RadarRelationChainResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.RadarRelationChainResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void RadarRelationChainResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarRelationChainResponse.BaseResponse)
}

// optional string Ticket = 2;
bool RadarRelationChainResponse::has_ticket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RadarRelationChainResponse::set_has_ticket() {
  _has_bits_[0] |= 0x00000001u;
}
void RadarRelationChainResponse::clear_has_ticket() {
  _has_bits_[0] &= ~0x00000001u;
}
void RadarRelationChainResponse::clear_ticket() {
  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ticket();
}
const ::std::string& RadarRelationChainResponse::ticket() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarRelationChainResponse.Ticket)
  return ticket_.GetNoArena();
}
void RadarRelationChainResponse::set_ticket(const ::std::string& value) {
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RadarRelationChainResponse.Ticket)
}
#if LANG_CXX11
void RadarRelationChainResponse::set_ticket(::std::string&& value) {
  set_has_ticket();
  ticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RadarRelationChainResponse.Ticket)
}
#endif
void RadarRelationChainResponse::set_ticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RadarRelationChainResponse.Ticket)
}
void RadarRelationChainResponse::set_ticket(const char* value, size_t size) {
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RadarRelationChainResponse.Ticket)
}
::std::string* RadarRelationChainResponse::mutable_ticket() {
  set_has_ticket();
  // @@protoc_insertion_point(field_mutable:micromsg.RadarRelationChainResponse.Ticket)
  return ticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RadarRelationChainResponse::release_ticket() {
  // @@protoc_insertion_point(field_release:micromsg.RadarRelationChainResponse.Ticket)
  clear_has_ticket();
  return ticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RadarRelationChainResponse::set_allocated_ticket(::std::string* ticket) {
  if (ticket != NULL) {
    set_has_ticket();
  } else {
    clear_has_ticket();
  }
  ticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ticket);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarRelationChainResponse.Ticket)
}

// required uint32 MemberCount = 3;
bool RadarRelationChainResponse::has_membercount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RadarRelationChainResponse::set_has_membercount() {
  _has_bits_[0] |= 0x00000004u;
}
void RadarRelationChainResponse::clear_has_membercount() {
  _has_bits_[0] &= ~0x00000004u;
}
void RadarRelationChainResponse::clear_membercount() {
  membercount_ = 0u;
  clear_has_membercount();
}
::google::protobuf::uint32 RadarRelationChainResponse::membercount() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarRelationChainResponse.MemberCount)
  return membercount_;
}
void RadarRelationChainResponse::set_membercount(::google::protobuf::uint32 value) {
  set_has_membercount();
  membercount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RadarRelationChainResponse.MemberCount)
}

// repeated .micromsg.RadarChatRoomMember MemberList = 4;
int RadarRelationChainResponse::memberlist_size() const {
  return memberlist_.size();
}
void RadarRelationChainResponse::clear_memberlist() {
  memberlist_.Clear();
}
const ::micromsg::RadarChatRoomMember& RadarRelationChainResponse::memberlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.RadarRelationChainResponse.MemberList)
  return memberlist_.Get(index);
}
::micromsg::RadarChatRoomMember* RadarRelationChainResponse::mutable_memberlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.RadarRelationChainResponse.MemberList)
  return memberlist_.Mutable(index);
}
::micromsg::RadarChatRoomMember* RadarRelationChainResponse::add_memberlist() {
  // @@protoc_insertion_point(field_add:micromsg.RadarRelationChainResponse.MemberList)
  return memberlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::RadarChatRoomMember >*
RadarRelationChainResponse::mutable_memberlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.RadarRelationChainResponse.MemberList)
  return &memberlist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::RadarChatRoomMember >&
RadarRelationChainResponse::memberlist() const {
  // @@protoc_insertion_point(field_list:micromsg.RadarRelationChainResponse.MemberList)
  return memberlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RadarCreateChatRoomRequest::kBaseRequestFieldNumber;
const int RadarCreateChatRoomRequest::kLongitudeFieldNumber;
const int RadarCreateChatRoomRequest::kLatitudeFieldNumber;
const int RadarCreateChatRoomRequest::kPrecisionFieldNumber;
const int RadarCreateChatRoomRequest::kMacAddrFieldNumber;
const int RadarCreateChatRoomRequest::kCellIdFieldNumber;
const int RadarCreateChatRoomRequest::kGPSSourceFieldNumber;
const int RadarCreateChatRoomRequest::kPassWordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RadarCreateChatRoomRequest::RadarCreateChatRoomRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.RadarCreateChatRoomRequest)
}
RadarCreateChatRoomRequest::RadarCreateChatRoomRequest(const RadarCreateChatRoomRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  macaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_macaddr()) {
    macaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macaddr_);
  }
  cellid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cellid()) {
    cellid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cellid_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  ::memcpy(&longitude_, &from.longitude_,
    reinterpret_cast<char*>(&gpssource_) -
    reinterpret_cast<char*>(&longitude_) + sizeof(gpssource_));
  // @@protoc_insertion_point(copy_constructor:micromsg.RadarCreateChatRoomRequest)
}

void RadarCreateChatRoomRequest::SharedCtor() {
  _cached_size_ = 0;
  macaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cellid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&gpssource_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(gpssource_));
}

RadarCreateChatRoomRequest::~RadarCreateChatRoomRequest() {
  // @@protoc_insertion_point(destructor:micromsg.RadarCreateChatRoomRequest)
  SharedDtor();
}

void RadarCreateChatRoomRequest::SharedDtor() {
  macaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cellid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void RadarCreateChatRoomRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RadarCreateChatRoomRequest::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RadarCreateChatRoomRequest& RadarCreateChatRoomRequest::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

RadarCreateChatRoomRequest* RadarCreateChatRoomRequest::New(::google::protobuf::Arena* arena) const {
  RadarCreateChatRoomRequest* n = new RadarCreateChatRoomRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RadarCreateChatRoomRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.RadarCreateChatRoomRequest)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_macaddr()) {
      GOOGLE_DCHECK(!macaddr_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*macaddr_.UnsafeRawStringPointer())->clear();
    }
    if (has_cellid()) {
      GOOGLE_DCHECK(!cellid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*cellid_.UnsafeRawStringPointer())->clear();
    }
    if (has_password()) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 240u) {
    ::memset(&longitude_, 0, reinterpret_cast<char*>(&gpssource_) -
      reinterpret_cast<char*>(&longitude_) + sizeof(gpssource_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RadarCreateChatRoomRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.RadarCreateChatRoomRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float Longitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u)) {
          set_has_longitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float Latitude = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u)) {
          set_has_latitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 Precision = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_precision();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &precision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string MacAddr = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_macaddr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->macaddr().data(), this->macaddr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RadarCreateChatRoomRequest.MacAddr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string CellId = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cellid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cellid().data(), this->cellid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RadarCreateChatRoomRequest.CellId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 GPSSource = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_gpssource();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gpssource_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string PassWord = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RadarCreateChatRoomRequest.PassWord");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.RadarCreateChatRoomRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.RadarCreateChatRoomRequest)
  return false;
#undef DO_
}

void RadarCreateChatRoomRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.RadarCreateChatRoomRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required float Longitude = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->longitude(), output);
  }

  // required float Latitude = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->latitude(), output);
  }

  // required int32 Precision = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->precision(), output);
  }

  // optional string MacAddr = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->macaddr().data(), this->macaddr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RadarCreateChatRoomRequest.MacAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->macaddr(), output);
  }

  // optional string CellId = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cellid().data(), this->cellid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RadarCreateChatRoomRequest.CellId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->cellid(), output);
  }

  // optional int32 GPSSource = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->gpssource(), output);
  }

  // optional string PassWord = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RadarCreateChatRoomRequest.PassWord");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.RadarCreateChatRoomRequest)
}

::google::protobuf::uint8* RadarCreateChatRoomRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.RadarCreateChatRoomRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required float Longitude = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->longitude(), target);
  }

  // required float Latitude = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->latitude(), target);
  }

  // required int32 Precision = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->precision(), target);
  }

  // optional string MacAddr = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->macaddr().data(), this->macaddr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RadarCreateChatRoomRequest.MacAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->macaddr(), target);
  }

  // optional string CellId = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cellid().data(), this->cellid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RadarCreateChatRoomRequest.CellId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->cellid(), target);
  }

  // optional int32 GPSSource = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->gpssource(), target);
  }

  // optional string PassWord = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RadarCreateChatRoomRequest.PassWord");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.RadarCreateChatRoomRequest)
  return target;
}

size_t RadarCreateChatRoomRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.RadarCreateChatRoomRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_longitude()) {
    // required float Longitude = 2;
    total_size += 1 + 4;
  }

  if (has_latitude()) {
    // required float Latitude = 3;
    total_size += 1 + 4;
  }

  if (has_precision()) {
    // required int32 Precision = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->precision());
  }

  return total_size;
}
size_t RadarCreateChatRoomRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.RadarCreateChatRoomRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000078) ^ 0x00000078) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required float Longitude = 2;
    total_size += 1 + 4;

    // required float Latitude = 3;
    total_size += 1 + 4;

    // required int32 Precision = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->precision());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string MacAddr = 5;
    if (has_macaddr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->macaddr());
    }

    // optional string CellId = 6;
    if (has_cellid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cellid());
    }

    // optional string PassWord = 8;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

  }
  // optional int32 GPSSource = 7;
  if (has_gpssource()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gpssource());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RadarCreateChatRoomRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.RadarCreateChatRoomRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RadarCreateChatRoomRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RadarCreateChatRoomRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.RadarCreateChatRoomRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.RadarCreateChatRoomRequest)
    MergeFrom(*source);
  }
}

void RadarCreateChatRoomRequest::MergeFrom(const RadarCreateChatRoomRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.RadarCreateChatRoomRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_macaddr();
      macaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macaddr_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_cellid();
      cellid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cellid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000010u) {
      longitude_ = from.longitude_;
    }
    if (cached_has_bits & 0x00000020u) {
      latitude_ = from.latitude_;
    }
    if (cached_has_bits & 0x00000040u) {
      precision_ = from.precision_;
    }
    if (cached_has_bits & 0x00000080u) {
      gpssource_ = from.gpssource_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RadarCreateChatRoomRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.RadarCreateChatRoomRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RadarCreateChatRoomRequest::CopyFrom(const RadarCreateChatRoomRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.RadarCreateChatRoomRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RadarCreateChatRoomRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000078) != 0x00000078) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void RadarCreateChatRoomRequest::Swap(RadarCreateChatRoomRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RadarCreateChatRoomRequest::InternalSwap(RadarCreateChatRoomRequest* other) {
  macaddr_.Swap(&other->macaddr_);
  cellid_.Swap(&other->cellid_);
  password_.Swap(&other->password_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(longitude_, other->longitude_);
  std::swap(latitude_, other->latitude_);
  std::swap(precision_, other->precision_);
  std::swap(gpssource_, other->gpssource_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RadarCreateChatRoomRequest::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RadarCreateChatRoomRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool RadarCreateChatRoomRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RadarCreateChatRoomRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000008u;
}
void RadarCreateChatRoomRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000008u;
}
void RadarCreateChatRoomRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& RadarCreateChatRoomRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarCreateChatRoomRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* RadarCreateChatRoomRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RadarCreateChatRoomRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* RadarCreateChatRoomRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.RadarCreateChatRoomRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void RadarCreateChatRoomRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarCreateChatRoomRequest.BaseRequest)
}

// required float Longitude = 2;
bool RadarCreateChatRoomRequest::has_longitude() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void RadarCreateChatRoomRequest::set_has_longitude() {
  _has_bits_[0] |= 0x00000010u;
}
void RadarCreateChatRoomRequest::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000010u;
}
void RadarCreateChatRoomRequest::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
float RadarCreateChatRoomRequest::longitude() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarCreateChatRoomRequest.Longitude)
  return longitude_;
}
void RadarCreateChatRoomRequest::set_longitude(float value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RadarCreateChatRoomRequest.Longitude)
}

// required float Latitude = 3;
bool RadarCreateChatRoomRequest::has_latitude() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void RadarCreateChatRoomRequest::set_has_latitude() {
  _has_bits_[0] |= 0x00000020u;
}
void RadarCreateChatRoomRequest::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000020u;
}
void RadarCreateChatRoomRequest::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
float RadarCreateChatRoomRequest::latitude() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarCreateChatRoomRequest.Latitude)
  return latitude_;
}
void RadarCreateChatRoomRequest::set_latitude(float value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RadarCreateChatRoomRequest.Latitude)
}

// required int32 Precision = 4;
bool RadarCreateChatRoomRequest::has_precision() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void RadarCreateChatRoomRequest::set_has_precision() {
  _has_bits_[0] |= 0x00000040u;
}
void RadarCreateChatRoomRequest::clear_has_precision() {
  _has_bits_[0] &= ~0x00000040u;
}
void RadarCreateChatRoomRequest::clear_precision() {
  precision_ = 0;
  clear_has_precision();
}
::google::protobuf::int32 RadarCreateChatRoomRequest::precision() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarCreateChatRoomRequest.Precision)
  return precision_;
}
void RadarCreateChatRoomRequest::set_precision(::google::protobuf::int32 value) {
  set_has_precision();
  precision_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RadarCreateChatRoomRequest.Precision)
}

// optional string MacAddr = 5;
bool RadarCreateChatRoomRequest::has_macaddr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RadarCreateChatRoomRequest::set_has_macaddr() {
  _has_bits_[0] |= 0x00000001u;
}
void RadarCreateChatRoomRequest::clear_has_macaddr() {
  _has_bits_[0] &= ~0x00000001u;
}
void RadarCreateChatRoomRequest::clear_macaddr() {
  macaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_macaddr();
}
const ::std::string& RadarCreateChatRoomRequest::macaddr() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarCreateChatRoomRequest.MacAddr)
  return macaddr_.GetNoArena();
}
void RadarCreateChatRoomRequest::set_macaddr(const ::std::string& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RadarCreateChatRoomRequest.MacAddr)
}
#if LANG_CXX11
void RadarCreateChatRoomRequest::set_macaddr(::std::string&& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RadarCreateChatRoomRequest.MacAddr)
}
#endif
void RadarCreateChatRoomRequest::set_macaddr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RadarCreateChatRoomRequest.MacAddr)
}
void RadarCreateChatRoomRequest::set_macaddr(const char* value, size_t size) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RadarCreateChatRoomRequest.MacAddr)
}
::std::string* RadarCreateChatRoomRequest::mutable_macaddr() {
  set_has_macaddr();
  // @@protoc_insertion_point(field_mutable:micromsg.RadarCreateChatRoomRequest.MacAddr)
  return macaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RadarCreateChatRoomRequest::release_macaddr() {
  // @@protoc_insertion_point(field_release:micromsg.RadarCreateChatRoomRequest.MacAddr)
  clear_has_macaddr();
  return macaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RadarCreateChatRoomRequest::set_allocated_macaddr(::std::string* macaddr) {
  if (macaddr != NULL) {
    set_has_macaddr();
  } else {
    clear_has_macaddr();
  }
  macaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), macaddr);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarCreateChatRoomRequest.MacAddr)
}

// optional string CellId = 6;
bool RadarCreateChatRoomRequest::has_cellid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RadarCreateChatRoomRequest::set_has_cellid() {
  _has_bits_[0] |= 0x00000002u;
}
void RadarCreateChatRoomRequest::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000002u;
}
void RadarCreateChatRoomRequest::clear_cellid() {
  cellid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cellid();
}
const ::std::string& RadarCreateChatRoomRequest::cellid() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarCreateChatRoomRequest.CellId)
  return cellid_.GetNoArena();
}
void RadarCreateChatRoomRequest::set_cellid(const ::std::string& value) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RadarCreateChatRoomRequest.CellId)
}
#if LANG_CXX11
void RadarCreateChatRoomRequest::set_cellid(::std::string&& value) {
  set_has_cellid();
  cellid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RadarCreateChatRoomRequest.CellId)
}
#endif
void RadarCreateChatRoomRequest::set_cellid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RadarCreateChatRoomRequest.CellId)
}
void RadarCreateChatRoomRequest::set_cellid(const char* value, size_t size) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RadarCreateChatRoomRequest.CellId)
}
::std::string* RadarCreateChatRoomRequest::mutable_cellid() {
  set_has_cellid();
  // @@protoc_insertion_point(field_mutable:micromsg.RadarCreateChatRoomRequest.CellId)
  return cellid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RadarCreateChatRoomRequest::release_cellid() {
  // @@protoc_insertion_point(field_release:micromsg.RadarCreateChatRoomRequest.CellId)
  clear_has_cellid();
  return cellid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RadarCreateChatRoomRequest::set_allocated_cellid(::std::string* cellid) {
  if (cellid != NULL) {
    set_has_cellid();
  } else {
    clear_has_cellid();
  }
  cellid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cellid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarCreateChatRoomRequest.CellId)
}

// optional int32 GPSSource = 7;
bool RadarCreateChatRoomRequest::has_gpssource() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void RadarCreateChatRoomRequest::set_has_gpssource() {
  _has_bits_[0] |= 0x00000080u;
}
void RadarCreateChatRoomRequest::clear_has_gpssource() {
  _has_bits_[0] &= ~0x00000080u;
}
void RadarCreateChatRoomRequest::clear_gpssource() {
  gpssource_ = 0;
  clear_has_gpssource();
}
::google::protobuf::int32 RadarCreateChatRoomRequest::gpssource() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarCreateChatRoomRequest.GPSSource)
  return gpssource_;
}
void RadarCreateChatRoomRequest::set_gpssource(::google::protobuf::int32 value) {
  set_has_gpssource();
  gpssource_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RadarCreateChatRoomRequest.GPSSource)
}

// optional string PassWord = 8;
bool RadarCreateChatRoomRequest::has_password() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RadarCreateChatRoomRequest::set_has_password() {
  _has_bits_[0] |= 0x00000004u;
}
void RadarCreateChatRoomRequest::clear_has_password() {
  _has_bits_[0] &= ~0x00000004u;
}
void RadarCreateChatRoomRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& RadarCreateChatRoomRequest::password() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarCreateChatRoomRequest.PassWord)
  return password_.GetNoArena();
}
void RadarCreateChatRoomRequest::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RadarCreateChatRoomRequest.PassWord)
}
#if LANG_CXX11
void RadarCreateChatRoomRequest::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RadarCreateChatRoomRequest.PassWord)
}
#endif
void RadarCreateChatRoomRequest::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RadarCreateChatRoomRequest.PassWord)
}
void RadarCreateChatRoomRequest::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RadarCreateChatRoomRequest.PassWord)
}
::std::string* RadarCreateChatRoomRequest::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:micromsg.RadarCreateChatRoomRequest.PassWord)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RadarCreateChatRoomRequest::release_password() {
  // @@protoc_insertion_point(field_release:micromsg.RadarCreateChatRoomRequest.PassWord)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RadarCreateChatRoomRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarCreateChatRoomRequest.PassWord)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RadarCreateChatRoomResponse::kBaseResponseFieldNumber;
const int RadarCreateChatRoomResponse::kChatRoomNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RadarCreateChatRoomResponse::RadarCreateChatRoomResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.RadarCreateChatRoomResponse)
}
RadarCreateChatRoomResponse::RadarCreateChatRoomResponse(const RadarCreateChatRoomResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chatroomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_chatroomname()) {
    chatroomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chatroomname_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.RadarCreateChatRoomResponse)
}

void RadarCreateChatRoomResponse::SharedCtor() {
  _cached_size_ = 0;
  chatroomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  baseresponse_ = NULL;
}

RadarCreateChatRoomResponse::~RadarCreateChatRoomResponse() {
  // @@protoc_insertion_point(destructor:micromsg.RadarCreateChatRoomResponse)
  SharedDtor();
}

void RadarCreateChatRoomResponse::SharedDtor() {
  chatroomname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void RadarCreateChatRoomResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RadarCreateChatRoomResponse::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RadarCreateChatRoomResponse& RadarCreateChatRoomResponse::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

RadarCreateChatRoomResponse* RadarCreateChatRoomResponse::New(::google::protobuf::Arena* arena) const {
  RadarCreateChatRoomResponse* n = new RadarCreateChatRoomResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RadarCreateChatRoomResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.RadarCreateChatRoomResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_chatroomname()) {
      GOOGLE_DCHECK(!chatroomname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*chatroomname_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RadarCreateChatRoomResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.RadarCreateChatRoomResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ChatRoomName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chatroomname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->chatroomname().data(), this->chatroomname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RadarCreateChatRoomResponse.ChatRoomName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.RadarCreateChatRoomResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.RadarCreateChatRoomResponse)
  return false;
#undef DO_
}

void RadarCreateChatRoomResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.RadarCreateChatRoomResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // optional string ChatRoomName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chatroomname().data(), this->chatroomname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RadarCreateChatRoomResponse.ChatRoomName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->chatroomname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.RadarCreateChatRoomResponse)
}

::google::protobuf::uint8* RadarCreateChatRoomResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.RadarCreateChatRoomResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // optional string ChatRoomName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chatroomname().data(), this->chatroomname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RadarCreateChatRoomResponse.ChatRoomName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->chatroomname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.RadarCreateChatRoomResponse)
  return target;
}

size_t RadarCreateChatRoomResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.RadarCreateChatRoomResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (has_baseresponse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }
  // optional string ChatRoomName = 2;
  if (has_chatroomname()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chatroomname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RadarCreateChatRoomResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.RadarCreateChatRoomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RadarCreateChatRoomResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RadarCreateChatRoomResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.RadarCreateChatRoomResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.RadarCreateChatRoomResponse)
    MergeFrom(*source);
  }
}

void RadarCreateChatRoomResponse::MergeFrom(const RadarCreateChatRoomResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.RadarCreateChatRoomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_chatroomname();
      chatroomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chatroomname_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
  }
}

void RadarCreateChatRoomResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.RadarCreateChatRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RadarCreateChatRoomResponse::CopyFrom(const RadarCreateChatRoomResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.RadarCreateChatRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RadarCreateChatRoomResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void RadarCreateChatRoomResponse::Swap(RadarCreateChatRoomResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RadarCreateChatRoomResponse::InternalSwap(RadarCreateChatRoomResponse* other) {
  chatroomname_.Swap(&other->chatroomname_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RadarCreateChatRoomResponse::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RadarCreateChatRoomResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool RadarCreateChatRoomResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RadarCreateChatRoomResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
void RadarCreateChatRoomResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
void RadarCreateChatRoomResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& RadarCreateChatRoomResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarCreateChatRoomResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* RadarCreateChatRoomResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RadarCreateChatRoomResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* RadarCreateChatRoomResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.RadarCreateChatRoomResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void RadarCreateChatRoomResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarCreateChatRoomResponse.BaseResponse)
}

// optional string ChatRoomName = 2;
bool RadarCreateChatRoomResponse::has_chatroomname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RadarCreateChatRoomResponse::set_has_chatroomname() {
  _has_bits_[0] |= 0x00000001u;
}
void RadarCreateChatRoomResponse::clear_has_chatroomname() {
  _has_bits_[0] &= ~0x00000001u;
}
void RadarCreateChatRoomResponse::clear_chatroomname() {
  chatroomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chatroomname();
}
const ::std::string& RadarCreateChatRoomResponse::chatroomname() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarCreateChatRoomResponse.ChatRoomName)
  return chatroomname_.GetNoArena();
}
void RadarCreateChatRoomResponse::set_chatroomname(const ::std::string& value) {
  set_has_chatroomname();
  chatroomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RadarCreateChatRoomResponse.ChatRoomName)
}
#if LANG_CXX11
void RadarCreateChatRoomResponse::set_chatroomname(::std::string&& value) {
  set_has_chatroomname();
  chatroomname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RadarCreateChatRoomResponse.ChatRoomName)
}
#endif
void RadarCreateChatRoomResponse::set_chatroomname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chatroomname();
  chatroomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RadarCreateChatRoomResponse.ChatRoomName)
}
void RadarCreateChatRoomResponse::set_chatroomname(const char* value, size_t size) {
  set_has_chatroomname();
  chatroomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RadarCreateChatRoomResponse.ChatRoomName)
}
::std::string* RadarCreateChatRoomResponse::mutable_chatroomname() {
  set_has_chatroomname();
  // @@protoc_insertion_point(field_mutable:micromsg.RadarCreateChatRoomResponse.ChatRoomName)
  return chatroomname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RadarCreateChatRoomResponse::release_chatroomname() {
  // @@protoc_insertion_point(field_release:micromsg.RadarCreateChatRoomResponse.ChatRoomName)
  clear_has_chatroomname();
  return chatroomname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RadarCreateChatRoomResponse::set_allocated_chatroomname(::std::string* chatroomname) {
  if (chatroomname != NULL) {
    set_has_chatroomname();
  } else {
    clear_has_chatroomname();
  }
  chatroomname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chatroomname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarCreateChatRoomResponse.ChatRoomName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPOIListRequest::kBaseRequestFieldNumber;
const int GetPOIListRequest::kSceneFieldNumber;
const int GetPOIListRequest::kOpCodeFieldNumber;
const int GetPOIListRequest::kKeywordFieldNumber;
const int GetPOIListRequest::kBuffFieldNumber;
const int GetPOIListRequest::kLongitudeFieldNumber;
const int GetPOIListRequest::kLatitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPOIListRequest::GetPOIListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetPOIListRequest)
}
GetPOIListRequest::GetPOIListRequest(const GetPOIListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  keyword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_keyword()) {
    keyword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keyword_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  if (from.has_buff()) {
    buff_ = new ::micromsg::SKBuiltinBuffer_t(*from.buff_);
  } else {
    buff_ = NULL;
  }
  ::memcpy(&scene_, &from.scene_,
    reinterpret_cast<char*>(&latitude_) -
    reinterpret_cast<char*>(&scene_) + sizeof(latitude_));
  // @@protoc_insertion_point(copy_constructor:micromsg.GetPOIListRequest)
}

void GetPOIListRequest::SharedCtor() {
  _cached_size_ = 0;
  keyword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&latitude_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(latitude_));
}

GetPOIListRequest::~GetPOIListRequest() {
  // @@protoc_insertion_point(destructor:micromsg.GetPOIListRequest)
  SharedDtor();
}

void GetPOIListRequest::SharedDtor() {
  keyword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
  if (this != internal_default_instance()) {
    delete buff_;
  }
}

void GetPOIListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPOIListRequest::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPOIListRequest& GetPOIListRequest::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetPOIListRequest* GetPOIListRequest::New(::google::protobuf::Arena* arena) const {
  GetPOIListRequest* n = new GetPOIListRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPOIListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetPOIListRequest)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_keyword()) {
      GOOGLE_DCHECK(!keyword_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*keyword_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
    if (has_buff()) {
      GOOGLE_DCHECK(buff_ != NULL);
      buff_->::micromsg::SKBuiltinBuffer_t::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 120u) {
    ::memset(&scene_, 0, reinterpret_cast<char*>(&latitude_) -
      reinterpret_cast<char*>(&scene_) + sizeof(latitude_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetPOIListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetPOIListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Scene = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_scene();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 OpCode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_opcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &opcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Keyword = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_keyword()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->keyword().data(), this->keyword().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetPOIListRequest.Keyword");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.SKBuiltinBuffer_t Buff = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_buff()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double Longitude = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u)) {
          set_has_longitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double Latitude = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u)) {
          set_has_latitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetPOIListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetPOIListRequest)
  return false;
#undef DO_
}

void GetPOIListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetPOIListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required uint32 Scene = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->scene(), output);
  }

  // required uint32 OpCode = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->opcode(), output);
  }

  // optional string Keyword = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keyword().data(), this->keyword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetPOIListRequest.Keyword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->keyword(), output);
  }

  // required .micromsg.SKBuiltinBuffer_t Buff = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->buff_, output);
  }

  // required double Longitude = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->longitude(), output);
  }

  // required double Latitude = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->latitude(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetPOIListRequest)
}

::google::protobuf::uint8* GetPOIListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetPOIListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required uint32 Scene = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->scene(), target);
  }

  // required uint32 OpCode = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->opcode(), target);
  }

  // optional string Keyword = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keyword().data(), this->keyword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetPOIListRequest.Keyword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->keyword(), target);
  }

  // required .micromsg.SKBuiltinBuffer_t Buff = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->buff_, deterministic, target);
  }

  // required double Longitude = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->longitude(), target);
  }

  // required double Latitude = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->latitude(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetPOIListRequest)
  return target;
}

size_t GetPOIListRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetPOIListRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_buff()) {
    // required .micromsg.SKBuiltinBuffer_t Buff = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->buff_);
  }

  if (has_scene()) {
    // required uint32 Scene = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene());
  }

  if (has_opcode()) {
    // required uint32 OpCode = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opcode());
  }

  if (has_longitude()) {
    // required double Longitude = 6;
    total_size += 1 + 8;
  }

  if (has_latitude()) {
    // required double Latitude = 7;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t GetPOIListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetPOIListRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000007e) ^ 0x0000007e) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required .micromsg.SKBuiltinBuffer_t Buff = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->buff_);

    // required uint32 Scene = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene());

    // required uint32 OpCode = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opcode());

    // required double Longitude = 6;
    total_size += 1 + 8;

    // required double Latitude = 7;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string Keyword = 4;
  if (has_keyword()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->keyword());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPOIListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetPOIListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPOIListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPOIListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetPOIListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetPOIListRequest)
    MergeFrom(*source);
  }
}

void GetPOIListRequest::MergeFrom(const GetPOIListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetPOIListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_keyword();
      keyword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keyword_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_buff()->::micromsg::SKBuiltinBuffer_t::MergeFrom(from.buff());
    }
    if (cached_has_bits & 0x00000008u) {
      scene_ = from.scene_;
    }
    if (cached_has_bits & 0x00000010u) {
      opcode_ = from.opcode_;
    }
    if (cached_has_bits & 0x00000020u) {
      longitude_ = from.longitude_;
    }
    if (cached_has_bits & 0x00000040u) {
      latitude_ = from.latitude_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetPOIListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetPOIListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPOIListRequest::CopyFrom(const GetPOIListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetPOIListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPOIListRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007e) != 0x0000007e) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  if (has_buff()) {
    if (!this->buff_->IsInitialized()) return false;
  }
  return true;
}

void GetPOIListRequest::Swap(GetPOIListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPOIListRequest::InternalSwap(GetPOIListRequest* other) {
  keyword_.Swap(&other->keyword_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(buff_, other->buff_);
  std::swap(scene_, other->scene_);
  std::swap(opcode_, other->opcode_);
  std::swap(longitude_, other->longitude_);
  std::swap(latitude_, other->latitude_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPOIListRequest::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPOIListRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool GetPOIListRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetPOIListRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
void GetPOIListRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetPOIListRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& GetPOIListRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetPOIListRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* GetPOIListRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetPOIListRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* GetPOIListRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetPOIListRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void GetPOIListRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetPOIListRequest.BaseRequest)
}

// required uint32 Scene = 2;
bool GetPOIListRequest::has_scene() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GetPOIListRequest::set_has_scene() {
  _has_bits_[0] |= 0x00000008u;
}
void GetPOIListRequest::clear_has_scene() {
  _has_bits_[0] &= ~0x00000008u;
}
void GetPOIListRequest::clear_scene() {
  scene_ = 0u;
  clear_has_scene();
}
::google::protobuf::uint32 GetPOIListRequest::scene() const {
  // @@protoc_insertion_point(field_get:micromsg.GetPOIListRequest.Scene)
  return scene_;
}
void GetPOIListRequest::set_scene(::google::protobuf::uint32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetPOIListRequest.Scene)
}

// required uint32 OpCode = 3;
bool GetPOIListRequest::has_opcode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GetPOIListRequest::set_has_opcode() {
  _has_bits_[0] |= 0x00000010u;
}
void GetPOIListRequest::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000010u;
}
void GetPOIListRequest::clear_opcode() {
  opcode_ = 0u;
  clear_has_opcode();
}
::google::protobuf::uint32 GetPOIListRequest::opcode() const {
  // @@protoc_insertion_point(field_get:micromsg.GetPOIListRequest.OpCode)
  return opcode_;
}
void GetPOIListRequest::set_opcode(::google::protobuf::uint32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetPOIListRequest.OpCode)
}

// optional string Keyword = 4;
bool GetPOIListRequest::has_keyword() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetPOIListRequest::set_has_keyword() {
  _has_bits_[0] |= 0x00000001u;
}
void GetPOIListRequest::clear_has_keyword() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetPOIListRequest::clear_keyword() {
  keyword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_keyword();
}
const ::std::string& GetPOIListRequest::keyword() const {
  // @@protoc_insertion_point(field_get:micromsg.GetPOIListRequest.Keyword)
  return keyword_.GetNoArena();
}
void GetPOIListRequest::set_keyword(const ::std::string& value) {
  set_has_keyword();
  keyword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetPOIListRequest.Keyword)
}
#if LANG_CXX11
void GetPOIListRequest::set_keyword(::std::string&& value) {
  set_has_keyword();
  keyword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetPOIListRequest.Keyword)
}
#endif
void GetPOIListRequest::set_keyword(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_keyword();
  keyword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetPOIListRequest.Keyword)
}
void GetPOIListRequest::set_keyword(const char* value, size_t size) {
  set_has_keyword();
  keyword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetPOIListRequest.Keyword)
}
::std::string* GetPOIListRequest::mutable_keyword() {
  set_has_keyword();
  // @@protoc_insertion_point(field_mutable:micromsg.GetPOIListRequest.Keyword)
  return keyword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPOIListRequest::release_keyword() {
  // @@protoc_insertion_point(field_release:micromsg.GetPOIListRequest.Keyword)
  clear_has_keyword();
  return keyword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPOIListRequest::set_allocated_keyword(::std::string* keyword) {
  if (keyword != NULL) {
    set_has_keyword();
  } else {
    clear_has_keyword();
  }
  keyword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keyword);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetPOIListRequest.Keyword)
}

// required .micromsg.SKBuiltinBuffer_t Buff = 5;
bool GetPOIListRequest::has_buff() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetPOIListRequest::set_has_buff() {
  _has_bits_[0] |= 0x00000004u;
}
void GetPOIListRequest::clear_has_buff() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetPOIListRequest::clear_buff() {
  if (buff_ != NULL) buff_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_buff();
}
const ::micromsg::SKBuiltinBuffer_t& GetPOIListRequest::buff() const {
  // @@protoc_insertion_point(field_get:micromsg.GetPOIListRequest.Buff)
  return buff_ != NULL ? *buff_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
::micromsg::SKBuiltinBuffer_t* GetPOIListRequest::mutable_buff() {
  set_has_buff();
  if (buff_ == NULL) {
    buff_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetPOIListRequest.Buff)
  return buff_;
}
::micromsg::SKBuiltinBuffer_t* GetPOIListRequest::release_buff() {
  // @@protoc_insertion_point(field_release:micromsg.GetPOIListRequest.Buff)
  clear_has_buff();
  ::micromsg::SKBuiltinBuffer_t* temp = buff_;
  buff_ = NULL;
  return temp;
}
void GetPOIListRequest::set_allocated_buff(::micromsg::SKBuiltinBuffer_t* buff) {
  delete buff_;
  buff_ = buff;
  if (buff) {
    set_has_buff();
  } else {
    clear_has_buff();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetPOIListRequest.Buff)
}

// required double Longitude = 6;
bool GetPOIListRequest::has_longitude() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void GetPOIListRequest::set_has_longitude() {
  _has_bits_[0] |= 0x00000020u;
}
void GetPOIListRequest::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000020u;
}
void GetPOIListRequest::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
double GetPOIListRequest::longitude() const {
  // @@protoc_insertion_point(field_get:micromsg.GetPOIListRequest.Longitude)
  return longitude_;
}
void GetPOIListRequest::set_longitude(double value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetPOIListRequest.Longitude)
}

// required double Latitude = 7;
bool GetPOIListRequest::has_latitude() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void GetPOIListRequest::set_has_latitude() {
  _has_bits_[0] |= 0x00000040u;
}
void GetPOIListRequest::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000040u;
}
void GetPOIListRequest::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
double GetPOIListRequest::latitude() const {
  // @@protoc_insertion_point(field_get:micromsg.GetPOIListRequest.Latitude)
  return latitude_;
}
void GetPOIListRequest::set_latitude(double value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetPOIListRequest.Latitude)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int POIItem::kNameFieldNumber;
const int POIItem::kAddrFieldNumber;
const int POIItem::kLongitudeFieldNumber;
const int POIItem::kLatitudeFieldNumber;
const int POIItem::kTypeIdFieldNumber;
const int POIItem::kLinkFieldNumber;
const int POIItem::kNationFieldNumber;
const int POIItem::kProvinceFieldNumber;
const int POIItem::kCityFieldNumber;
const int POIItem::kDistrictFieldNumber;
const int POIItem::kStreetFieldNumber;
const int POIItem::kSubAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

POIItem::POIItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.POIItem)
}
POIItem::POIItem(const POIItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_addr()) {
    addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_);
  }
  typeid__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_typeid_()) {
    typeid__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.typeid__);
  }
  link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_link()) {
    link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_);
  }
  nation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nation()) {
    nation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nation_);
  }
  province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_province()) {
    province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.province_);
  }
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_city()) {
    city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
  }
  district_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_district()) {
    district_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.district_);
  }
  street_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_street()) {
    street_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.street_);
  }
  subaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_subaddr()) {
    subaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subaddr_);
  }
  ::memcpy(&longitude_, &from.longitude_,
    reinterpret_cast<char*>(&latitude_) -
    reinterpret_cast<char*>(&longitude_) + sizeof(latitude_));
  // @@protoc_insertion_point(copy_constructor:micromsg.POIItem)
}

void POIItem::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  typeid__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nation_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  district_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  street_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&longitude_, 0, reinterpret_cast<char*>(&latitude_) -
    reinterpret_cast<char*>(&longitude_) + sizeof(latitude_));
}

POIItem::~POIItem() {
  // @@protoc_insertion_point(destructor:micromsg.POIItem)
  SharedDtor();
}

void POIItem::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  typeid__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nation_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  district_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  street_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void POIItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* POIItem::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const POIItem& POIItem::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

POIItem* POIItem::New(::google::protobuf::Arena* arena) const {
  POIItem* n = new POIItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void POIItem::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.POIItem)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_addr()) {
      GOOGLE_DCHECK(!addr_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*addr_.UnsafeRawStringPointer())->clear();
    }
    if (has_typeid_()) {
      GOOGLE_DCHECK(!typeid__.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*typeid__.UnsafeRawStringPointer())->clear();
    }
    if (has_link()) {
      GOOGLE_DCHECK(!link_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*link_.UnsafeRawStringPointer())->clear();
    }
    if (has_nation()) {
      GOOGLE_DCHECK(!nation_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*nation_.UnsafeRawStringPointer())->clear();
    }
    if (has_province()) {
      GOOGLE_DCHECK(!province_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*province_.UnsafeRawStringPointer())->clear();
    }
    if (has_city()) {
      GOOGLE_DCHECK(!city_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*city_.UnsafeRawStringPointer())->clear();
    }
    if (has_district()) {
      GOOGLE_DCHECK(!district_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*district_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[8 / 32] & 768u) {
    if (has_street()) {
      GOOGLE_DCHECK(!street_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*street_.UnsafeRawStringPointer())->clear();
    }
    if (has_subaddr()) {
      GOOGLE_DCHECK(!subaddr_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*subaddr_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[8 / 32] & 3072u) {
    ::memset(&longitude_, 0, reinterpret_cast<char*>(&latitude_) -
      reinterpret_cast<char*>(&longitude_) + sizeof(latitude_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool POIItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.POIItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.POIItem.Name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Addr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_addr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->addr().data(), this->addr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.POIItem.Addr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double Longitude = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {
          set_has_longitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double Latitude = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          set_has_latitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string TypeId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_typeid_()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->typeid_().data(), this->typeid_().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.POIItem.TypeId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Link = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_link()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->link().data(), this->link().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.POIItem.Link");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Nation = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nation()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nation().data(), this->nation().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.POIItem.Nation");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Province = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_province()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->province().data(), this->province().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.POIItem.Province");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string City = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_city()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->city().data(), this->city().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.POIItem.City");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string District = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_district()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->district().data(), this->district().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.POIItem.District");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Street = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_street()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->street().data(), this->street().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.POIItem.Street");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string SubAddr = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subaddr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->subaddr().data(), this->subaddr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.POIItem.SubAddr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.POIItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.POIItem)
  return false;
#undef DO_
}

void POIItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.POIItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string Name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.POIItem.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string Addr = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->addr().data(), this->addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.POIItem.Addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->addr(), output);
  }

  // required double Longitude = 3;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->longitude(), output);
  }

  // required double Latitude = 4;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->latitude(), output);
  }

  // optional string TypeId = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->typeid_().data(), this->typeid_().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.POIItem.TypeId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->typeid_(), output);
  }

  // optional string Link = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->link().data(), this->link().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.POIItem.Link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->link(), output);
  }

  // optional string Nation = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nation().data(), this->nation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.POIItem.Nation");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->nation(), output);
  }

  // optional string Province = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->province().data(), this->province().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.POIItem.Province");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->province(), output);
  }

  // optional string City = 9;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->city().data(), this->city().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.POIItem.City");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->city(), output);
  }

  // optional string District = 10;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->district().data(), this->district().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.POIItem.District");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->district(), output);
  }

  // optional string Street = 11;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->street().data(), this->street().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.POIItem.Street");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->street(), output);
  }

  // optional string SubAddr = 12;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->subaddr().data(), this->subaddr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.POIItem.SubAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->subaddr(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.POIItem)
}

::google::protobuf::uint8* POIItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.POIItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string Name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.POIItem.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string Addr = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->addr().data(), this->addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.POIItem.Addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->addr(), target);
  }

  // required double Longitude = 3;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->longitude(), target);
  }

  // required double Latitude = 4;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->latitude(), target);
  }

  // optional string TypeId = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->typeid_().data(), this->typeid_().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.POIItem.TypeId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->typeid_(), target);
  }

  // optional string Link = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->link().data(), this->link().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.POIItem.Link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->link(), target);
  }

  // optional string Nation = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nation().data(), this->nation().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.POIItem.Nation");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->nation(), target);
  }

  // optional string Province = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->province().data(), this->province().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.POIItem.Province");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->province(), target);
  }

  // optional string City = 9;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->city().data(), this->city().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.POIItem.City");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->city(), target);
  }

  // optional string District = 10;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->district().data(), this->district().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.POIItem.District");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->district(), target);
  }

  // optional string Street = 11;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->street().data(), this->street().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.POIItem.Street");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->street(), target);
  }

  // optional string SubAddr = 12;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->subaddr().data(), this->subaddr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.POIItem.SubAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->subaddr(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.POIItem)
  return target;
}

size_t POIItem::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.POIItem)
  size_t total_size = 0;

  if (has_longitude()) {
    // required double Longitude = 3;
    total_size += 1 + 8;
  }

  if (has_latitude()) {
    // required double Latitude = 4;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t POIItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.POIItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000c00) ^ 0x00000c00) == 0) {  // All required fields are present.
    // required double Longitude = 3;
    total_size += 1 + 8;

    // required double Latitude = 4;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string Name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string Addr = 2;
    if (has_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->addr());
    }

    // optional string TypeId = 5;
    if (has_typeid_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->typeid_());
    }

    // optional string Link = 6;
    if (has_link()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->link());
    }

    // optional string Nation = 7;
    if (has_nation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nation());
    }

    // optional string Province = 8;
    if (has_province()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->province());
    }

    // optional string City = 9;
    if (has_city()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->city());
    }

    // optional string District = 10;
    if (has_district()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->district());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional string Street = 11;
    if (has_street()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->street());
    }

    // optional string SubAddr = 12;
    if (has_subaddr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->subaddr());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void POIItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.POIItem)
  GOOGLE_DCHECK_NE(&from, this);
  const POIItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const POIItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.POIItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.POIItem)
    MergeFrom(*source);
  }
}

void POIItem::MergeFrom(const POIItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.POIItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_addr();
      addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_typeid_();
      typeid__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.typeid__);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_link();
      link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_nation();
      nation_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nation_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_province();
      province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.province_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_city();
      city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_district();
      district_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.district_);
    }
  }
  if (cached_has_bits & 3840u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_street();
      street_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.street_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has_subaddr();
      subaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subaddr_);
    }
    if (cached_has_bits & 0x00000400u) {
      longitude_ = from.longitude_;
    }
    if (cached_has_bits & 0x00000800u) {
      latitude_ = from.latitude_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void POIItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.POIItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void POIItem::CopyFrom(const POIItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.POIItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool POIItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000c00) != 0x00000c00) return false;
  return true;
}

void POIItem::Swap(POIItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void POIItem::InternalSwap(POIItem* other) {
  name_.Swap(&other->name_);
  addr_.Swap(&other->addr_);
  typeid__.Swap(&other->typeid__);
  link_.Swap(&other->link_);
  nation_.Swap(&other->nation_);
  province_.Swap(&other->province_);
  city_.Swap(&other->city_);
  district_.Swap(&other->district_);
  street_.Swap(&other->street_);
  subaddr_.Swap(&other->subaddr_);
  std::swap(longitude_, other->longitude_);
  std::swap(latitude_, other->latitude_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata POIItem::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// POIItem

// optional string Name = 1;
bool POIItem::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void POIItem::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void POIItem::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void POIItem::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& POIItem::name() const {
  // @@protoc_insertion_point(field_get:micromsg.POIItem.Name)
  return name_.GetNoArena();
}
void POIItem::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.POIItem.Name)
}
#if LANG_CXX11
void POIItem::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.POIItem.Name)
}
#endif
void POIItem::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.POIItem.Name)
}
void POIItem::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.POIItem.Name)
}
::std::string* POIItem::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:micromsg.POIItem.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* POIItem::release_name() {
  // @@protoc_insertion_point(field_release:micromsg.POIItem.Name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void POIItem::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:micromsg.POIItem.Name)
}

// optional string Addr = 2;
bool POIItem::has_addr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void POIItem::set_has_addr() {
  _has_bits_[0] |= 0x00000002u;
}
void POIItem::clear_has_addr() {
  _has_bits_[0] &= ~0x00000002u;
}
void POIItem::clear_addr() {
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_addr();
}
const ::std::string& POIItem::addr() const {
  // @@protoc_insertion_point(field_get:micromsg.POIItem.Addr)
  return addr_.GetNoArena();
}
void POIItem::set_addr(const ::std::string& value) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.POIItem.Addr)
}
#if LANG_CXX11
void POIItem::set_addr(::std::string&& value) {
  set_has_addr();
  addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.POIItem.Addr)
}
#endif
void POIItem::set_addr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.POIItem.Addr)
}
void POIItem::set_addr(const char* value, size_t size) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.POIItem.Addr)
}
::std::string* POIItem::mutable_addr() {
  set_has_addr();
  // @@protoc_insertion_point(field_mutable:micromsg.POIItem.Addr)
  return addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* POIItem::release_addr() {
  // @@protoc_insertion_point(field_release:micromsg.POIItem.Addr)
  clear_has_addr();
  return addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void POIItem::set_allocated_addr(::std::string* addr) {
  if (addr != NULL) {
    set_has_addr();
  } else {
    clear_has_addr();
  }
  addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr);
  // @@protoc_insertion_point(field_set_allocated:micromsg.POIItem.Addr)
}

// required double Longitude = 3;
bool POIItem::has_longitude() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void POIItem::set_has_longitude() {
  _has_bits_[0] |= 0x00000400u;
}
void POIItem::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000400u;
}
void POIItem::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
double POIItem::longitude() const {
  // @@protoc_insertion_point(field_get:micromsg.POIItem.Longitude)
  return longitude_;
}
void POIItem::set_longitude(double value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.POIItem.Longitude)
}

// required double Latitude = 4;
bool POIItem::has_latitude() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void POIItem::set_has_latitude() {
  _has_bits_[0] |= 0x00000800u;
}
void POIItem::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000800u;
}
void POIItem::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
double POIItem::latitude() const {
  // @@protoc_insertion_point(field_get:micromsg.POIItem.Latitude)
  return latitude_;
}
void POIItem::set_latitude(double value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.POIItem.Latitude)
}

// optional string TypeId = 5;
bool POIItem::has_typeid_() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void POIItem::set_has_typeid_() {
  _has_bits_[0] |= 0x00000004u;
}
void POIItem::clear_has_typeid_() {
  _has_bits_[0] &= ~0x00000004u;
}
void POIItem::clear_typeid_() {
  typeid__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_typeid_();
}
const ::std::string& POIItem::typeid_() const {
  // @@protoc_insertion_point(field_get:micromsg.POIItem.TypeId)
  return typeid__.GetNoArena();
}
void POIItem::set_typeid_(const ::std::string& value) {
  set_has_typeid_();
  typeid__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.POIItem.TypeId)
}
#if LANG_CXX11
void POIItem::set_typeid_(::std::string&& value) {
  set_has_typeid_();
  typeid__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.POIItem.TypeId)
}
#endif
void POIItem::set_typeid_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_typeid_();
  typeid__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.POIItem.TypeId)
}
void POIItem::set_typeid_(const char* value, size_t size) {
  set_has_typeid_();
  typeid__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.POIItem.TypeId)
}
::std::string* POIItem::mutable_typeid_() {
  set_has_typeid_();
  // @@protoc_insertion_point(field_mutable:micromsg.POIItem.TypeId)
  return typeid__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* POIItem::release_typeid_() {
  // @@protoc_insertion_point(field_release:micromsg.POIItem.TypeId)
  clear_has_typeid_();
  return typeid__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void POIItem::set_allocated_typeid_(::std::string* typeid_) {
  if (typeid_ != NULL) {
    set_has_typeid_();
  } else {
    clear_has_typeid_();
  }
  typeid__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), typeid_);
  // @@protoc_insertion_point(field_set_allocated:micromsg.POIItem.TypeId)
}

// optional string Link = 6;
bool POIItem::has_link() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void POIItem::set_has_link() {
  _has_bits_[0] |= 0x00000008u;
}
void POIItem::clear_has_link() {
  _has_bits_[0] &= ~0x00000008u;
}
void POIItem::clear_link() {
  link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_link();
}
const ::std::string& POIItem::link() const {
  // @@protoc_insertion_point(field_get:micromsg.POIItem.Link)
  return link_.GetNoArena();
}
void POIItem::set_link(const ::std::string& value) {
  set_has_link();
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.POIItem.Link)
}
#if LANG_CXX11
void POIItem::set_link(::std::string&& value) {
  set_has_link();
  link_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.POIItem.Link)
}
#endif
void POIItem::set_link(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_link();
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.POIItem.Link)
}
void POIItem::set_link(const char* value, size_t size) {
  set_has_link();
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.POIItem.Link)
}
::std::string* POIItem::mutable_link() {
  set_has_link();
  // @@protoc_insertion_point(field_mutable:micromsg.POIItem.Link)
  return link_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* POIItem::release_link() {
  // @@protoc_insertion_point(field_release:micromsg.POIItem.Link)
  clear_has_link();
  return link_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void POIItem::set_allocated_link(::std::string* link) {
  if (link != NULL) {
    set_has_link();
  } else {
    clear_has_link();
  }
  link_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), link);
  // @@protoc_insertion_point(field_set_allocated:micromsg.POIItem.Link)
}

// optional string Nation = 7;
bool POIItem::has_nation() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void POIItem::set_has_nation() {
  _has_bits_[0] |= 0x00000010u;
}
void POIItem::clear_has_nation() {
  _has_bits_[0] &= ~0x00000010u;
}
void POIItem::clear_nation() {
  nation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nation();
}
const ::std::string& POIItem::nation() const {
  // @@protoc_insertion_point(field_get:micromsg.POIItem.Nation)
  return nation_.GetNoArena();
}
void POIItem::set_nation(const ::std::string& value) {
  set_has_nation();
  nation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.POIItem.Nation)
}
#if LANG_CXX11
void POIItem::set_nation(::std::string&& value) {
  set_has_nation();
  nation_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.POIItem.Nation)
}
#endif
void POIItem::set_nation(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nation();
  nation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.POIItem.Nation)
}
void POIItem::set_nation(const char* value, size_t size) {
  set_has_nation();
  nation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.POIItem.Nation)
}
::std::string* POIItem::mutable_nation() {
  set_has_nation();
  // @@protoc_insertion_point(field_mutable:micromsg.POIItem.Nation)
  return nation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* POIItem::release_nation() {
  // @@protoc_insertion_point(field_release:micromsg.POIItem.Nation)
  clear_has_nation();
  return nation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void POIItem::set_allocated_nation(::std::string* nation) {
  if (nation != NULL) {
    set_has_nation();
  } else {
    clear_has_nation();
  }
  nation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nation);
  // @@protoc_insertion_point(field_set_allocated:micromsg.POIItem.Nation)
}

// optional string Province = 8;
bool POIItem::has_province() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void POIItem::set_has_province() {
  _has_bits_[0] |= 0x00000020u;
}
void POIItem::clear_has_province() {
  _has_bits_[0] &= ~0x00000020u;
}
void POIItem::clear_province() {
  province_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_province();
}
const ::std::string& POIItem::province() const {
  // @@protoc_insertion_point(field_get:micromsg.POIItem.Province)
  return province_.GetNoArena();
}
void POIItem::set_province(const ::std::string& value) {
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.POIItem.Province)
}
#if LANG_CXX11
void POIItem::set_province(::std::string&& value) {
  set_has_province();
  province_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.POIItem.Province)
}
#endif
void POIItem::set_province(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.POIItem.Province)
}
void POIItem::set_province(const char* value, size_t size) {
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.POIItem.Province)
}
::std::string* POIItem::mutable_province() {
  set_has_province();
  // @@protoc_insertion_point(field_mutable:micromsg.POIItem.Province)
  return province_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* POIItem::release_province() {
  // @@protoc_insertion_point(field_release:micromsg.POIItem.Province)
  clear_has_province();
  return province_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void POIItem::set_allocated_province(::std::string* province) {
  if (province != NULL) {
    set_has_province();
  } else {
    clear_has_province();
  }
  province_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), province);
  // @@protoc_insertion_point(field_set_allocated:micromsg.POIItem.Province)
}

// optional string City = 9;
bool POIItem::has_city() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void POIItem::set_has_city() {
  _has_bits_[0] |= 0x00000040u;
}
void POIItem::clear_has_city() {
  _has_bits_[0] &= ~0x00000040u;
}
void POIItem::clear_city() {
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_city();
}
const ::std::string& POIItem::city() const {
  // @@protoc_insertion_point(field_get:micromsg.POIItem.City)
  return city_.GetNoArena();
}
void POIItem::set_city(const ::std::string& value) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.POIItem.City)
}
#if LANG_CXX11
void POIItem::set_city(::std::string&& value) {
  set_has_city();
  city_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.POIItem.City)
}
#endif
void POIItem::set_city(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.POIItem.City)
}
void POIItem::set_city(const char* value, size_t size) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.POIItem.City)
}
::std::string* POIItem::mutable_city() {
  set_has_city();
  // @@protoc_insertion_point(field_mutable:micromsg.POIItem.City)
  return city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* POIItem::release_city() {
  // @@protoc_insertion_point(field_release:micromsg.POIItem.City)
  clear_has_city();
  return city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void POIItem::set_allocated_city(::std::string* city) {
  if (city != NULL) {
    set_has_city();
  } else {
    clear_has_city();
  }
  city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city);
  // @@protoc_insertion_point(field_set_allocated:micromsg.POIItem.City)
}

// optional string District = 10;
bool POIItem::has_district() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void POIItem::set_has_district() {
  _has_bits_[0] |= 0x00000080u;
}
void POIItem::clear_has_district() {
  _has_bits_[0] &= ~0x00000080u;
}
void POIItem::clear_district() {
  district_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_district();
}
const ::std::string& POIItem::district() const {
  // @@protoc_insertion_point(field_get:micromsg.POIItem.District)
  return district_.GetNoArena();
}
void POIItem::set_district(const ::std::string& value) {
  set_has_district();
  district_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.POIItem.District)
}
#if LANG_CXX11
void POIItem::set_district(::std::string&& value) {
  set_has_district();
  district_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.POIItem.District)
}
#endif
void POIItem::set_district(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_district();
  district_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.POIItem.District)
}
void POIItem::set_district(const char* value, size_t size) {
  set_has_district();
  district_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.POIItem.District)
}
::std::string* POIItem::mutable_district() {
  set_has_district();
  // @@protoc_insertion_point(field_mutable:micromsg.POIItem.District)
  return district_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* POIItem::release_district() {
  // @@protoc_insertion_point(field_release:micromsg.POIItem.District)
  clear_has_district();
  return district_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void POIItem::set_allocated_district(::std::string* district) {
  if (district != NULL) {
    set_has_district();
  } else {
    clear_has_district();
  }
  district_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), district);
  // @@protoc_insertion_point(field_set_allocated:micromsg.POIItem.District)
}

// optional string Street = 11;
bool POIItem::has_street() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void POIItem::set_has_street() {
  _has_bits_[0] |= 0x00000100u;
}
void POIItem::clear_has_street() {
  _has_bits_[0] &= ~0x00000100u;
}
void POIItem::clear_street() {
  street_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_street();
}
const ::std::string& POIItem::street() const {
  // @@protoc_insertion_point(field_get:micromsg.POIItem.Street)
  return street_.GetNoArena();
}
void POIItem::set_street(const ::std::string& value) {
  set_has_street();
  street_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.POIItem.Street)
}
#if LANG_CXX11
void POIItem::set_street(::std::string&& value) {
  set_has_street();
  street_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.POIItem.Street)
}
#endif
void POIItem::set_street(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_street();
  street_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.POIItem.Street)
}
void POIItem::set_street(const char* value, size_t size) {
  set_has_street();
  street_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.POIItem.Street)
}
::std::string* POIItem::mutable_street() {
  set_has_street();
  // @@protoc_insertion_point(field_mutable:micromsg.POIItem.Street)
  return street_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* POIItem::release_street() {
  // @@protoc_insertion_point(field_release:micromsg.POIItem.Street)
  clear_has_street();
  return street_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void POIItem::set_allocated_street(::std::string* street) {
  if (street != NULL) {
    set_has_street();
  } else {
    clear_has_street();
  }
  street_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), street);
  // @@protoc_insertion_point(field_set_allocated:micromsg.POIItem.Street)
}

// optional string SubAddr = 12;
bool POIItem::has_subaddr() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void POIItem::set_has_subaddr() {
  _has_bits_[0] |= 0x00000200u;
}
void POIItem::clear_has_subaddr() {
  _has_bits_[0] &= ~0x00000200u;
}
void POIItem::clear_subaddr() {
  subaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_subaddr();
}
const ::std::string& POIItem::subaddr() const {
  // @@protoc_insertion_point(field_get:micromsg.POIItem.SubAddr)
  return subaddr_.GetNoArena();
}
void POIItem::set_subaddr(const ::std::string& value) {
  set_has_subaddr();
  subaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.POIItem.SubAddr)
}
#if LANG_CXX11
void POIItem::set_subaddr(::std::string&& value) {
  set_has_subaddr();
  subaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.POIItem.SubAddr)
}
#endif
void POIItem::set_subaddr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_subaddr();
  subaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.POIItem.SubAddr)
}
void POIItem::set_subaddr(const char* value, size_t size) {
  set_has_subaddr();
  subaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.POIItem.SubAddr)
}
::std::string* POIItem::mutable_subaddr() {
  set_has_subaddr();
  // @@protoc_insertion_point(field_mutable:micromsg.POIItem.SubAddr)
  return subaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* POIItem::release_subaddr() {
  // @@protoc_insertion_point(field_release:micromsg.POIItem.SubAddr)
  clear_has_subaddr();
  return subaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void POIItem::set_allocated_subaddr(::std::string* subaddr) {
  if (subaddr != NULL) {
    set_has_subaddr();
  } else {
    clear_has_subaddr();
  }
  subaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subaddr);
  // @@protoc_insertion_point(field_set_allocated:micromsg.POIItem.SubAddr)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetPOIListResponse::kBaseResponseFieldNumber;
const int GetPOIListResponse::kListCountFieldNumber;
const int GetPOIListResponse::kPOIListFieldNumber;
const int GetPOIListResponse::kOpCodeFieldNumber;
const int GetPOIListResponse::kIsEndFieldNumber;
const int GetPOIListResponse::kBuffFieldNumber;
const int GetPOIListResponse::kUrlFieldNumber;
const int GetPOIListResponse::kLogoUrlFieldNumber;
const int GetPOIListResponse::kTextFieldNumber;
const int GetPOIListResponse::kOpenIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetPOIListResponse::GetPOIListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetPOIListResponse)
}
GetPOIListResponse::GetPOIListResponse(const GetPOIListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      poilist_(from.poilist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  logourl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_logourl()) {
    logourl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logourl_);
  }
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  openid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_openid()) {
    openid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.openid_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  if (from.has_buff()) {
    buff_ = new ::micromsg::SKBuiltinBuffer_t(*from.buff_);
  } else {
    buff_ = NULL;
  }
  ::memcpy(&listcount_, &from.listcount_,
    reinterpret_cast<char*>(&isend_) -
    reinterpret_cast<char*>(&listcount_) + sizeof(isend_));
  // @@protoc_insertion_point(copy_constructor:micromsg.GetPOIListResponse)
}

void GetPOIListResponse::SharedCtor() {
  _cached_size_ = 0;
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logourl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  openid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&isend_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(isend_));
}

GetPOIListResponse::~GetPOIListResponse() {
  // @@protoc_insertion_point(destructor:micromsg.GetPOIListResponse)
  SharedDtor();
}

void GetPOIListResponse::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  logourl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  openid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
  if (this != internal_default_instance()) {
    delete buff_;
  }
}

void GetPOIListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetPOIListResponse::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetPOIListResponse& GetPOIListResponse::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetPOIListResponse* GetPOIListResponse::New(::google::protobuf::Arena* arena) const {
  GetPOIListResponse* n = new GetPOIListResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetPOIListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetPOIListResponse)
  poilist_.Clear();
  if (_has_bits_[0 / 32] & 63u) {
    if (has_url()) {
      GOOGLE_DCHECK(!url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*url_.UnsafeRawStringPointer())->clear();
    }
    if (has_logourl()) {
      GOOGLE_DCHECK(!logourl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*logourl_.UnsafeRawStringPointer())->clear();
    }
    if (has_text()) {
      GOOGLE_DCHECK(!text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*text_.UnsafeRawStringPointer())->clear();
    }
    if (has_openid()) {
      GOOGLE_DCHECK(!openid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*openid_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
    if (has_buff()) {
      GOOGLE_DCHECK(buff_ != NULL);
      buff_->::micromsg::SKBuiltinBuffer_t::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 192u) {
    ::memset(&listcount_, 0, reinterpret_cast<char*>(&opcode_) -
      reinterpret_cast<char*>(&listcount_) + sizeof(opcode_));
  }
  isend_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetPOIListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetPOIListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ListCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_listcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &listcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.POIItem POIList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_poilist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 OpCode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_opcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &opcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 IsEnd = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_isend();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &isend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.SKBuiltinBuffer_t Buff = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_buff()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Url = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetPOIListResponse.Url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string LogoUrl = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logourl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->logourl().data(), this->logourl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetPOIListResponse.LogoUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Text = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetPOIListResponse.Text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string OpenId = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_openid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->openid().data(), this->openid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetPOIListResponse.OpenId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetPOIListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetPOIListResponse)
  return false;
#undef DO_
}

void GetPOIListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetPOIListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // required uint32 ListCount = 2;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->listcount(), output);
  }

  // repeated .micromsg.POIItem POIList = 3;
  for (unsigned int i = 0, n = this->poilist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->poilist(i), output);
  }

  // required uint32 OpCode = 4;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->opcode(), output);
  }

  // required uint32 IsEnd = 5;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->isend(), output);
  }

  // required .micromsg.SKBuiltinBuffer_t Buff = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->buff_, output);
  }

  // optional string Url = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetPOIListResponse.Url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->url(), output);
  }

  // optional string LogoUrl = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->logourl().data(), this->logourl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetPOIListResponse.LogoUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->logourl(), output);
  }

  // optional string Text = 9;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetPOIListResponse.Text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->text(), output);
  }

  // optional string OpenId = 10;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->openid().data(), this->openid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetPOIListResponse.OpenId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->openid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetPOIListResponse)
}

::google::protobuf::uint8* GetPOIListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetPOIListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // required uint32 ListCount = 2;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->listcount(), target);
  }

  // repeated .micromsg.POIItem POIList = 3;
  for (unsigned int i = 0, n = this->poilist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->poilist(i), deterministic, target);
  }

  // required uint32 OpCode = 4;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->opcode(), target);
  }

  // required uint32 IsEnd = 5;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->isend(), target);
  }

  // required .micromsg.SKBuiltinBuffer_t Buff = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->buff_, deterministic, target);
  }

  // optional string Url = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetPOIListResponse.Url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->url(), target);
  }

  // optional string LogoUrl = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->logourl().data(), this->logourl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetPOIListResponse.LogoUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->logourl(), target);
  }

  // optional string Text = 9;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetPOIListResponse.Text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->text(), target);
  }

  // optional string OpenId = 10;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->openid().data(), this->openid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetPOIListResponse.OpenId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->openid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetPOIListResponse)
  return target;
}

size_t GetPOIListResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetPOIListResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_buff()) {
    // required .micromsg.SKBuiltinBuffer_t Buff = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->buff_);
  }

  if (has_listcount()) {
    // required uint32 ListCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->listcount());
  }

  if (has_opcode()) {
    // required uint32 OpCode = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opcode());
  }

  if (has_isend()) {
    // required uint32 IsEnd = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->isend());
  }

  return total_size;
}
size_t GetPOIListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetPOIListResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x000001f0) ^ 0x000001f0) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required .micromsg.SKBuiltinBuffer_t Buff = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->buff_);

    // required uint32 ListCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->listcount());

    // required uint32 OpCode = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opcode());

    // required uint32 IsEnd = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->isend());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.POIItem POIList = 3;
  {
    unsigned int count = this->poilist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->poilist(i));
    }
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional string Url = 7;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional string LogoUrl = 8;
    if (has_logourl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->logourl());
    }

    // optional string Text = 9;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional string OpenId = 10;
    if (has_openid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->openid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetPOIListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetPOIListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetPOIListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetPOIListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetPOIListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetPOIListResponse)
    MergeFrom(*source);
  }
}

void GetPOIListResponse::MergeFrom(const GetPOIListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetPOIListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  poilist_.MergeFrom(from.poilist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_logourl();
      logourl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logourl_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_openid();
      openid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.openid_);
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_buff()->::micromsg::SKBuiltinBuffer_t::MergeFrom(from.buff());
    }
    if (cached_has_bits & 0x00000040u) {
      listcount_ = from.listcount_;
    }
    if (cached_has_bits & 0x00000080u) {
      opcode_ = from.opcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_isend(from.isend());
  }
}

void GetPOIListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetPOIListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetPOIListResponse::CopyFrom(const GetPOIListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetPOIListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPOIListResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001f0) != 0x000001f0) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->poilist())) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  if (has_buff()) {
    if (!this->buff_->IsInitialized()) return false;
  }
  return true;
}

void GetPOIListResponse::Swap(GetPOIListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetPOIListResponse::InternalSwap(GetPOIListResponse* other) {
  poilist_.InternalSwap(&other->poilist_);
  url_.Swap(&other->url_);
  logourl_.Swap(&other->logourl_);
  text_.Swap(&other->text_);
  openid_.Swap(&other->openid_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(buff_, other->buff_);
  std::swap(listcount_, other->listcount_);
  std::swap(opcode_, other->opcode_);
  std::swap(isend_, other->isend_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetPOIListResponse::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPOIListResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool GetPOIListResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GetPOIListResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000010u;
}
void GetPOIListResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000010u;
}
void GetPOIListResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& GetPOIListResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetPOIListResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* GetPOIListResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetPOIListResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* GetPOIListResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetPOIListResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void GetPOIListResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetPOIListResponse.BaseResponse)
}

// required uint32 ListCount = 2;
bool GetPOIListResponse::has_listcount() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void GetPOIListResponse::set_has_listcount() {
  _has_bits_[0] |= 0x00000040u;
}
void GetPOIListResponse::clear_has_listcount() {
  _has_bits_[0] &= ~0x00000040u;
}
void GetPOIListResponse::clear_listcount() {
  listcount_ = 0u;
  clear_has_listcount();
}
::google::protobuf::uint32 GetPOIListResponse::listcount() const {
  // @@protoc_insertion_point(field_get:micromsg.GetPOIListResponse.ListCount)
  return listcount_;
}
void GetPOIListResponse::set_listcount(::google::protobuf::uint32 value) {
  set_has_listcount();
  listcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetPOIListResponse.ListCount)
}

// repeated .micromsg.POIItem POIList = 3;
int GetPOIListResponse::poilist_size() const {
  return poilist_.size();
}
void GetPOIListResponse::clear_poilist() {
  poilist_.Clear();
}
const ::micromsg::POIItem& GetPOIListResponse::poilist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetPOIListResponse.POIList)
  return poilist_.Get(index);
}
::micromsg::POIItem* GetPOIListResponse::mutable_poilist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetPOIListResponse.POIList)
  return poilist_.Mutable(index);
}
::micromsg::POIItem* GetPOIListResponse::add_poilist() {
  // @@protoc_insertion_point(field_add:micromsg.GetPOIListResponse.POIList)
  return poilist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::POIItem >*
GetPOIListResponse::mutable_poilist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetPOIListResponse.POIList)
  return &poilist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::POIItem >&
GetPOIListResponse::poilist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetPOIListResponse.POIList)
  return poilist_;
}

// required uint32 OpCode = 4;
bool GetPOIListResponse::has_opcode() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void GetPOIListResponse::set_has_opcode() {
  _has_bits_[0] |= 0x00000080u;
}
void GetPOIListResponse::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000080u;
}
void GetPOIListResponse::clear_opcode() {
  opcode_ = 0u;
  clear_has_opcode();
}
::google::protobuf::uint32 GetPOIListResponse::opcode() const {
  // @@protoc_insertion_point(field_get:micromsg.GetPOIListResponse.OpCode)
  return opcode_;
}
void GetPOIListResponse::set_opcode(::google::protobuf::uint32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetPOIListResponse.OpCode)
}

// required uint32 IsEnd = 5;
bool GetPOIListResponse::has_isend() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void GetPOIListResponse::set_has_isend() {
  _has_bits_[0] |= 0x00000100u;
}
void GetPOIListResponse::clear_has_isend() {
  _has_bits_[0] &= ~0x00000100u;
}
void GetPOIListResponse::clear_isend() {
  isend_ = 0u;
  clear_has_isend();
}
::google::protobuf::uint32 GetPOIListResponse::isend() const {
  // @@protoc_insertion_point(field_get:micromsg.GetPOIListResponse.IsEnd)
  return isend_;
}
void GetPOIListResponse::set_isend(::google::protobuf::uint32 value) {
  set_has_isend();
  isend_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetPOIListResponse.IsEnd)
}

// required .micromsg.SKBuiltinBuffer_t Buff = 6;
bool GetPOIListResponse::has_buff() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void GetPOIListResponse::set_has_buff() {
  _has_bits_[0] |= 0x00000020u;
}
void GetPOIListResponse::clear_has_buff() {
  _has_bits_[0] &= ~0x00000020u;
}
void GetPOIListResponse::clear_buff() {
  if (buff_ != NULL) buff_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_buff();
}
const ::micromsg::SKBuiltinBuffer_t& GetPOIListResponse::buff() const {
  // @@protoc_insertion_point(field_get:micromsg.GetPOIListResponse.Buff)
  return buff_ != NULL ? *buff_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
::micromsg::SKBuiltinBuffer_t* GetPOIListResponse::mutable_buff() {
  set_has_buff();
  if (buff_ == NULL) {
    buff_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetPOIListResponse.Buff)
  return buff_;
}
::micromsg::SKBuiltinBuffer_t* GetPOIListResponse::release_buff() {
  // @@protoc_insertion_point(field_release:micromsg.GetPOIListResponse.Buff)
  clear_has_buff();
  ::micromsg::SKBuiltinBuffer_t* temp = buff_;
  buff_ = NULL;
  return temp;
}
void GetPOIListResponse::set_allocated_buff(::micromsg::SKBuiltinBuffer_t* buff) {
  delete buff_;
  buff_ = buff;
  if (buff) {
    set_has_buff();
  } else {
    clear_has_buff();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetPOIListResponse.Buff)
}

// optional string Url = 7;
bool GetPOIListResponse::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetPOIListResponse::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
void GetPOIListResponse::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetPOIListResponse::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
const ::std::string& GetPOIListResponse::url() const {
  // @@protoc_insertion_point(field_get:micromsg.GetPOIListResponse.Url)
  return url_.GetNoArena();
}
void GetPOIListResponse::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetPOIListResponse.Url)
}
#if LANG_CXX11
void GetPOIListResponse::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetPOIListResponse.Url)
}
#endif
void GetPOIListResponse::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetPOIListResponse.Url)
}
void GetPOIListResponse::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetPOIListResponse.Url)
}
::std::string* GetPOIListResponse::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:micromsg.GetPOIListResponse.Url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPOIListResponse::release_url() {
  // @@protoc_insertion_point(field_release:micromsg.GetPOIListResponse.Url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPOIListResponse::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetPOIListResponse.Url)
}

// optional string LogoUrl = 8;
bool GetPOIListResponse::has_logourl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetPOIListResponse::set_has_logourl() {
  _has_bits_[0] |= 0x00000002u;
}
void GetPOIListResponse::clear_has_logourl() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetPOIListResponse::clear_logourl() {
  logourl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_logourl();
}
const ::std::string& GetPOIListResponse::logourl() const {
  // @@protoc_insertion_point(field_get:micromsg.GetPOIListResponse.LogoUrl)
  return logourl_.GetNoArena();
}
void GetPOIListResponse::set_logourl(const ::std::string& value) {
  set_has_logourl();
  logourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetPOIListResponse.LogoUrl)
}
#if LANG_CXX11
void GetPOIListResponse::set_logourl(::std::string&& value) {
  set_has_logourl();
  logourl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetPOIListResponse.LogoUrl)
}
#endif
void GetPOIListResponse::set_logourl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_logourl();
  logourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetPOIListResponse.LogoUrl)
}
void GetPOIListResponse::set_logourl(const char* value, size_t size) {
  set_has_logourl();
  logourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetPOIListResponse.LogoUrl)
}
::std::string* GetPOIListResponse::mutable_logourl() {
  set_has_logourl();
  // @@protoc_insertion_point(field_mutable:micromsg.GetPOIListResponse.LogoUrl)
  return logourl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPOIListResponse::release_logourl() {
  // @@protoc_insertion_point(field_release:micromsg.GetPOIListResponse.LogoUrl)
  clear_has_logourl();
  return logourl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPOIListResponse::set_allocated_logourl(::std::string* logourl) {
  if (logourl != NULL) {
    set_has_logourl();
  } else {
    clear_has_logourl();
  }
  logourl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logourl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetPOIListResponse.LogoUrl)
}

// optional string Text = 9;
bool GetPOIListResponse::has_text() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetPOIListResponse::set_has_text() {
  _has_bits_[0] |= 0x00000004u;
}
void GetPOIListResponse::clear_has_text() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetPOIListResponse::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
const ::std::string& GetPOIListResponse::text() const {
  // @@protoc_insertion_point(field_get:micromsg.GetPOIListResponse.Text)
  return text_.GetNoArena();
}
void GetPOIListResponse::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetPOIListResponse.Text)
}
#if LANG_CXX11
void GetPOIListResponse::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetPOIListResponse.Text)
}
#endif
void GetPOIListResponse::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetPOIListResponse.Text)
}
void GetPOIListResponse::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetPOIListResponse.Text)
}
::std::string* GetPOIListResponse::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:micromsg.GetPOIListResponse.Text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPOIListResponse::release_text() {
  // @@protoc_insertion_point(field_release:micromsg.GetPOIListResponse.Text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPOIListResponse::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetPOIListResponse.Text)
}

// optional string OpenId = 10;
bool GetPOIListResponse::has_openid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GetPOIListResponse::set_has_openid() {
  _has_bits_[0] |= 0x00000008u;
}
void GetPOIListResponse::clear_has_openid() {
  _has_bits_[0] &= ~0x00000008u;
}
void GetPOIListResponse::clear_openid() {
  openid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_openid();
}
const ::std::string& GetPOIListResponse::openid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetPOIListResponse.OpenId)
  return openid_.GetNoArena();
}
void GetPOIListResponse::set_openid(const ::std::string& value) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetPOIListResponse.OpenId)
}
#if LANG_CXX11
void GetPOIListResponse::set_openid(::std::string&& value) {
  set_has_openid();
  openid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetPOIListResponse.OpenId)
}
#endif
void GetPOIListResponse::set_openid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetPOIListResponse.OpenId)
}
void GetPOIListResponse::set_openid(const char* value, size_t size) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetPOIListResponse.OpenId)
}
::std::string* GetPOIListResponse::mutable_openid() {
  set_has_openid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetPOIListResponse.OpenId)
  return openid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetPOIListResponse::release_openid() {
  // @@protoc_insertion_point(field_release:micromsg.GetPOIListResponse.OpenId)
  clear_has_openid();
  return openid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetPOIListResponse::set_allocated_openid(::std::string* openid) {
  if (openid != NULL) {
    set_has_openid();
  } else {
    clear_has_openid();
  }
  openid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetPOIListResponse.OpenId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FacingMember::kUserNameFieldNumber;
const int FacingMember::kEncodeUserNameFieldNumber;
const int FacingMember::kNickNameFieldNumber;
const int FacingMember::kSmallImgUrlFieldNumber;
const int FacingMember::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FacingMember::FacingMember()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.FacingMember)
}
FacingMember::FacingMember(const FacingMember& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  encodeusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_encodeusername()) {
    encodeusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encodeusername_);
  }
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  smallimgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_smallimgurl()) {
    smallimgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smallimgurl_);
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:micromsg.FacingMember)
}

void FacingMember::SharedCtor() {
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encodeusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smallimgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = 0u;
}

FacingMember::~FacingMember() {
  // @@protoc_insertion_point(destructor:micromsg.FacingMember)
  SharedDtor();
}

void FacingMember::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encodeusername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  smallimgurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FacingMember::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FacingMember::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FacingMember& FacingMember::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

FacingMember* FacingMember::New(::google::protobuf::Arena* arena) const {
  FacingMember* n = new FacingMember;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FacingMember::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.FacingMember)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_username()) {
      GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*username_.UnsafeRawStringPointer())->clear();
    }
    if (has_encodeusername()) {
      GOOGLE_DCHECK(!encodeusername_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*encodeusername_.UnsafeRawStringPointer())->clear();
    }
    if (has_nickname()) {
      GOOGLE_DCHECK(!nickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*nickname_.UnsafeRawStringPointer())->clear();
    }
    if (has_smallimgurl()) {
      GOOGLE_DCHECK(!smallimgurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*smallimgurl_.UnsafeRawStringPointer())->clear();
    }
  }
  status_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FacingMember::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.FacingMember)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string UserName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.FacingMember.UserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string EncodeUserName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_encodeusername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->encodeusername().data(), this->encodeusername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.FacingMember.EncodeUserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string NickName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.FacingMember.NickName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string SmallImgUrl = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_smallimgurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->smallimgurl().data(), this->smallimgurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.FacingMember.SmallImgUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Status = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.FacingMember)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.FacingMember)
  return false;
#undef DO_
}

void FacingMember::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.FacingMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string UserName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.FacingMember.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // optional string EncodeUserName = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->encodeusername().data(), this->encodeusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.FacingMember.EncodeUserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->encodeusername(), output);
  }

  // optional string NickName = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.FacingMember.NickName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->nickname(), output);
  }

  // optional string SmallImgUrl = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smallimgurl().data(), this->smallimgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.FacingMember.SmallImgUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->smallimgurl(), output);
  }

  // required uint32 Status = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->status(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.FacingMember)
}

::google::protobuf::uint8* FacingMember::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.FacingMember)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string UserName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.FacingMember.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // optional string EncodeUserName = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->encodeusername().data(), this->encodeusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.FacingMember.EncodeUserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->encodeusername(), target);
  }

  // optional string NickName = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.FacingMember.NickName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->nickname(), target);
  }

  // optional string SmallImgUrl = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->smallimgurl().data(), this->smallimgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.FacingMember.SmallImgUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->smallimgurl(), target);
  }

  // required uint32 Status = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->status(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.FacingMember)
  return target;
}

size_t FacingMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.FacingMember)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint32 Status = 5;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string UserName = 1;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional string EncodeUserName = 2;
    if (has_encodeusername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->encodeusername());
    }

    // optional string NickName = 3;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional string SmallImgUrl = 4;
    if (has_smallimgurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->smallimgurl());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FacingMember::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.FacingMember)
  GOOGLE_DCHECK_NE(&from, this);
  const FacingMember* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FacingMember>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.FacingMember)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.FacingMember)
    MergeFrom(*source);
  }
}

void FacingMember::MergeFrom(const FacingMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.FacingMember)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_encodeusername();
      encodeusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encodeusername_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_smallimgurl();
      smallimgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.smallimgurl_);
    }
    if (cached_has_bits & 0x00000010u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FacingMember::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.FacingMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FacingMember::CopyFrom(const FacingMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.FacingMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FacingMember::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000010) != 0x00000010) return false;
  return true;
}

void FacingMember::Swap(FacingMember* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FacingMember::InternalSwap(FacingMember* other) {
  username_.Swap(&other->username_);
  encodeusername_.Swap(&other->encodeusername_);
  nickname_.Swap(&other->nickname_);
  smallimgurl_.Swap(&other->smallimgurl_);
  std::swap(status_, other->status_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FacingMember::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FacingMember

// optional string UserName = 1;
bool FacingMember::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FacingMember::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
void FacingMember::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
void FacingMember::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& FacingMember::username() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingMember.UserName)
  return username_.GetNoArena();
}
void FacingMember::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.FacingMember.UserName)
}
#if LANG_CXX11
void FacingMember::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.FacingMember.UserName)
}
#endif
void FacingMember::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.FacingMember.UserName)
}
void FacingMember::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.FacingMember.UserName)
}
::std::string* FacingMember::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.FacingMember.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FacingMember::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.FacingMember.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FacingMember::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.FacingMember.UserName)
}

// optional string EncodeUserName = 2;
bool FacingMember::has_encodeusername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FacingMember::set_has_encodeusername() {
  _has_bits_[0] |= 0x00000002u;
}
void FacingMember::clear_has_encodeusername() {
  _has_bits_[0] &= ~0x00000002u;
}
void FacingMember::clear_encodeusername() {
  encodeusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_encodeusername();
}
const ::std::string& FacingMember::encodeusername() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingMember.EncodeUserName)
  return encodeusername_.GetNoArena();
}
void FacingMember::set_encodeusername(const ::std::string& value) {
  set_has_encodeusername();
  encodeusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.FacingMember.EncodeUserName)
}
#if LANG_CXX11
void FacingMember::set_encodeusername(::std::string&& value) {
  set_has_encodeusername();
  encodeusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.FacingMember.EncodeUserName)
}
#endif
void FacingMember::set_encodeusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_encodeusername();
  encodeusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.FacingMember.EncodeUserName)
}
void FacingMember::set_encodeusername(const char* value, size_t size) {
  set_has_encodeusername();
  encodeusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.FacingMember.EncodeUserName)
}
::std::string* FacingMember::mutable_encodeusername() {
  set_has_encodeusername();
  // @@protoc_insertion_point(field_mutable:micromsg.FacingMember.EncodeUserName)
  return encodeusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FacingMember::release_encodeusername() {
  // @@protoc_insertion_point(field_release:micromsg.FacingMember.EncodeUserName)
  clear_has_encodeusername();
  return encodeusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FacingMember::set_allocated_encodeusername(::std::string* encodeusername) {
  if (encodeusername != NULL) {
    set_has_encodeusername();
  } else {
    clear_has_encodeusername();
  }
  encodeusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), encodeusername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.FacingMember.EncodeUserName)
}

// optional string NickName = 3;
bool FacingMember::has_nickname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void FacingMember::set_has_nickname() {
  _has_bits_[0] |= 0x00000004u;
}
void FacingMember::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000004u;
}
void FacingMember::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
const ::std::string& FacingMember::nickname() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingMember.NickName)
  return nickname_.GetNoArena();
}
void FacingMember::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.FacingMember.NickName)
}
#if LANG_CXX11
void FacingMember::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.FacingMember.NickName)
}
#endif
void FacingMember::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.FacingMember.NickName)
}
void FacingMember::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.FacingMember.NickName)
}
::std::string* FacingMember::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:micromsg.FacingMember.NickName)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FacingMember::release_nickname() {
  // @@protoc_insertion_point(field_release:micromsg.FacingMember.NickName)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FacingMember::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.FacingMember.NickName)
}

// optional string SmallImgUrl = 4;
bool FacingMember::has_smallimgurl() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void FacingMember::set_has_smallimgurl() {
  _has_bits_[0] |= 0x00000008u;
}
void FacingMember::clear_has_smallimgurl() {
  _has_bits_[0] &= ~0x00000008u;
}
void FacingMember::clear_smallimgurl() {
  smallimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_smallimgurl();
}
const ::std::string& FacingMember::smallimgurl() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingMember.SmallImgUrl)
  return smallimgurl_.GetNoArena();
}
void FacingMember::set_smallimgurl(const ::std::string& value) {
  set_has_smallimgurl();
  smallimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.FacingMember.SmallImgUrl)
}
#if LANG_CXX11
void FacingMember::set_smallimgurl(::std::string&& value) {
  set_has_smallimgurl();
  smallimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.FacingMember.SmallImgUrl)
}
#endif
void FacingMember::set_smallimgurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_smallimgurl();
  smallimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.FacingMember.SmallImgUrl)
}
void FacingMember::set_smallimgurl(const char* value, size_t size) {
  set_has_smallimgurl();
  smallimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.FacingMember.SmallImgUrl)
}
::std::string* FacingMember::mutable_smallimgurl() {
  set_has_smallimgurl();
  // @@protoc_insertion_point(field_mutable:micromsg.FacingMember.SmallImgUrl)
  return smallimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FacingMember::release_smallimgurl() {
  // @@protoc_insertion_point(field_release:micromsg.FacingMember.SmallImgUrl)
  clear_has_smallimgurl();
  return smallimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FacingMember::set_allocated_smallimgurl(::std::string* smallimgurl) {
  if (smallimgurl != NULL) {
    set_has_smallimgurl();
  } else {
    clear_has_smallimgurl();
  }
  smallimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smallimgurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.FacingMember.SmallImgUrl)
}

// required uint32 Status = 5;
bool FacingMember::has_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void FacingMember::set_has_status() {
  _has_bits_[0] |= 0x00000010u;
}
void FacingMember::clear_has_status() {
  _has_bits_[0] &= ~0x00000010u;
}
void FacingMember::clear_status() {
  status_ = 0u;
  clear_has_status();
}
::google::protobuf::uint32 FacingMember::status() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingMember.Status)
  return status_;
}
void FacingMember::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:micromsg.FacingMember.Status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FacingCreateChatRoomRequest::kBaseRequestFieldNumber;
const int FacingCreateChatRoomRequest::kOpCodeFieldNumber;
const int FacingCreateChatRoomRequest::kPassWordFieldNumber;
const int FacingCreateChatRoomRequest::kLongitudeFieldNumber;
const int FacingCreateChatRoomRequest::kLatitudeFieldNumber;
const int FacingCreateChatRoomRequest::kPrecisionFieldNumber;
const int FacingCreateChatRoomRequest::kMacAddrFieldNumber;
const int FacingCreateChatRoomRequest::kCellIdFieldNumber;
const int FacingCreateChatRoomRequest::kGPSSourceFieldNumber;
const int FacingCreateChatRoomRequest::kTicketFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FacingCreateChatRoomRequest::FacingCreateChatRoomRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.FacingCreateChatRoomRequest)
}
FacingCreateChatRoomRequest::FacingCreateChatRoomRequest(const FacingCreateChatRoomRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  macaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_macaddr()) {
    macaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macaddr_);
  }
  cellid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cellid()) {
    cellid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cellid_);
  }
  ticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ticket()) {
    ticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ticket_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  ::memcpy(&opcode_, &from.opcode_,
    reinterpret_cast<char*>(&gpssource_) -
    reinterpret_cast<char*>(&opcode_) + sizeof(gpssource_));
  // @@protoc_insertion_point(copy_constructor:micromsg.FacingCreateChatRoomRequest)
}

void FacingCreateChatRoomRequest::SharedCtor() {
  _cached_size_ = 0;
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  macaddr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cellid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&gpssource_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(gpssource_));
}

FacingCreateChatRoomRequest::~FacingCreateChatRoomRequest() {
  // @@protoc_insertion_point(destructor:micromsg.FacingCreateChatRoomRequest)
  SharedDtor();
}

void FacingCreateChatRoomRequest::SharedDtor() {
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  macaddr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cellid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ticket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void FacingCreateChatRoomRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FacingCreateChatRoomRequest::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FacingCreateChatRoomRequest& FacingCreateChatRoomRequest::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

FacingCreateChatRoomRequest* FacingCreateChatRoomRequest::New(::google::protobuf::Arena* arena) const {
  FacingCreateChatRoomRequest* n = new FacingCreateChatRoomRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FacingCreateChatRoomRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.FacingCreateChatRoomRequest)
  if (_has_bits_[0 / 32] & 31u) {
    if (has_password()) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
    if (has_macaddr()) {
      GOOGLE_DCHECK(!macaddr_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*macaddr_.UnsafeRawStringPointer())->clear();
    }
    if (has_cellid()) {
      GOOGLE_DCHECK(!cellid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*cellid_.UnsafeRawStringPointer())->clear();
    }
    if (has_ticket()) {
      GOOGLE_DCHECK(!ticket_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*ticket_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 224u) {
    ::memset(&opcode_, 0, reinterpret_cast<char*>(&latitude_) -
      reinterpret_cast<char*>(&opcode_) + sizeof(latitude_));
  }
  if (_has_bits_[8 / 32] & 768u) {
    ::memset(&precision_, 0, reinterpret_cast<char*>(&gpssource_) -
      reinterpret_cast<char*>(&precision_) + sizeof(gpssource_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FacingCreateChatRoomRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.FacingCreateChatRoomRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 OpCode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_opcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &opcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string PassWord = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.FacingCreateChatRoomRequest.PassWord");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float Longitude = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u)) {
          set_has_longitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required float Latitude = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u)) {
          set_has_latitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 Precision = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_precision();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &precision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string MacAddr = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_macaddr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->macaddr().data(), this->macaddr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.FacingCreateChatRoomRequest.MacAddr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string CellId = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cellid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cellid().data(), this->cellid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.FacingCreateChatRoomRequest.CellId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 GPSSource = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_gpssource();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gpssource_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Ticket = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ticket()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ticket().data(), this->ticket().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.FacingCreateChatRoomRequest.Ticket");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.FacingCreateChatRoomRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.FacingCreateChatRoomRequest)
  return false;
#undef DO_
}

void FacingCreateChatRoomRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.FacingCreateChatRoomRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required uint32 OpCode = 2;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->opcode(), output);
  }

  // optional string PassWord = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.FacingCreateChatRoomRequest.PassWord");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->password(), output);
  }

  // required float Longitude = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->longitude(), output);
  }

  // required float Latitude = 5;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->latitude(), output);
  }

  // required int32 Precision = 6;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->precision(), output);
  }

  // optional string MacAddr = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->macaddr().data(), this->macaddr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.FacingCreateChatRoomRequest.MacAddr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->macaddr(), output);
  }

  // optional string CellId = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cellid().data(), this->cellid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.FacingCreateChatRoomRequest.CellId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->cellid(), output);
  }

  // optional int32 GPSSource = 9;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->gpssource(), output);
  }

  // optional string Ticket = 10;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ticket().data(), this->ticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.FacingCreateChatRoomRequest.Ticket");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->ticket(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.FacingCreateChatRoomRequest)
}

::google::protobuf::uint8* FacingCreateChatRoomRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.FacingCreateChatRoomRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required uint32 OpCode = 2;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->opcode(), target);
  }

  // optional string PassWord = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.FacingCreateChatRoomRequest.PassWord");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->password(), target);
  }

  // required float Longitude = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->longitude(), target);
  }

  // required float Latitude = 5;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->latitude(), target);
  }

  // required int32 Precision = 6;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->precision(), target);
  }

  // optional string MacAddr = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->macaddr().data(), this->macaddr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.FacingCreateChatRoomRequest.MacAddr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->macaddr(), target);
  }

  // optional string CellId = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cellid().data(), this->cellid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.FacingCreateChatRoomRequest.CellId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->cellid(), target);
  }

  // optional int32 GPSSource = 9;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->gpssource(), target);
  }

  // optional string Ticket = 10;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ticket().data(), this->ticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.FacingCreateChatRoomRequest.Ticket");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->ticket(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.FacingCreateChatRoomRequest)
  return target;
}

size_t FacingCreateChatRoomRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.FacingCreateChatRoomRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_opcode()) {
    // required uint32 OpCode = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opcode());
  }

  if (has_longitude()) {
    // required float Longitude = 4;
    total_size += 1 + 4;
  }

  if (has_latitude()) {
    // required float Latitude = 5;
    total_size += 1 + 4;
  }

  if (has_precision()) {
    // required int32 Precision = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->precision());
  }

  return total_size;
}
size_t FacingCreateChatRoomRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.FacingCreateChatRoomRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x000001f0) ^ 0x000001f0) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required uint32 OpCode = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opcode());

    // required float Longitude = 4;
    total_size += 1 + 4;

    // required float Latitude = 5;
    total_size += 1 + 4;

    // required int32 Precision = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->precision());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string PassWord = 3;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional string MacAddr = 7;
    if (has_macaddr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->macaddr());
    }

    // optional string CellId = 8;
    if (has_cellid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cellid());
    }

    // optional string Ticket = 10;
    if (has_ticket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ticket());
    }

  }
  // optional int32 GPSSource = 9;
  if (has_gpssource()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gpssource());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FacingCreateChatRoomRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.FacingCreateChatRoomRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FacingCreateChatRoomRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FacingCreateChatRoomRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.FacingCreateChatRoomRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.FacingCreateChatRoomRequest)
    MergeFrom(*source);
  }
}

void FacingCreateChatRoomRequest::MergeFrom(const FacingCreateChatRoomRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.FacingCreateChatRoomRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_macaddr();
      macaddr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macaddr_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_cellid();
      cellid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cellid_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_ticket();
      ticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ticket_);
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000020u) {
      opcode_ = from.opcode_;
    }
    if (cached_has_bits & 0x00000040u) {
      longitude_ = from.longitude_;
    }
    if (cached_has_bits & 0x00000080u) {
      latitude_ = from.latitude_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      precision_ = from.precision_;
    }
    if (cached_has_bits & 0x00000200u) {
      gpssource_ = from.gpssource_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FacingCreateChatRoomRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.FacingCreateChatRoomRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FacingCreateChatRoomRequest::CopyFrom(const FacingCreateChatRoomRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.FacingCreateChatRoomRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FacingCreateChatRoomRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x000001f0) != 0x000001f0) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void FacingCreateChatRoomRequest::Swap(FacingCreateChatRoomRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FacingCreateChatRoomRequest::InternalSwap(FacingCreateChatRoomRequest* other) {
  password_.Swap(&other->password_);
  macaddr_.Swap(&other->macaddr_);
  cellid_.Swap(&other->cellid_);
  ticket_.Swap(&other->ticket_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(opcode_, other->opcode_);
  std::swap(longitude_, other->longitude_);
  std::swap(latitude_, other->latitude_);
  std::swap(precision_, other->precision_);
  std::swap(gpssource_, other->gpssource_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FacingCreateChatRoomRequest::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FacingCreateChatRoomRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool FacingCreateChatRoomRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void FacingCreateChatRoomRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000010u;
}
void FacingCreateChatRoomRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000010u;
}
void FacingCreateChatRoomRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& FacingCreateChatRoomRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingCreateChatRoomRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* FacingCreateChatRoomRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.FacingCreateChatRoomRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* FacingCreateChatRoomRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.FacingCreateChatRoomRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void FacingCreateChatRoomRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.FacingCreateChatRoomRequest.BaseRequest)
}

// required uint32 OpCode = 2;
bool FacingCreateChatRoomRequest::has_opcode() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void FacingCreateChatRoomRequest::set_has_opcode() {
  _has_bits_[0] |= 0x00000020u;
}
void FacingCreateChatRoomRequest::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000020u;
}
void FacingCreateChatRoomRequest::clear_opcode() {
  opcode_ = 0u;
  clear_has_opcode();
}
::google::protobuf::uint32 FacingCreateChatRoomRequest::opcode() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingCreateChatRoomRequest.OpCode)
  return opcode_;
}
void FacingCreateChatRoomRequest::set_opcode(::google::protobuf::uint32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.FacingCreateChatRoomRequest.OpCode)
}

// optional string PassWord = 3;
bool FacingCreateChatRoomRequest::has_password() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FacingCreateChatRoomRequest::set_has_password() {
  _has_bits_[0] |= 0x00000001u;
}
void FacingCreateChatRoomRequest::clear_has_password() {
  _has_bits_[0] &= ~0x00000001u;
}
void FacingCreateChatRoomRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& FacingCreateChatRoomRequest::password() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingCreateChatRoomRequest.PassWord)
  return password_.GetNoArena();
}
void FacingCreateChatRoomRequest::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.FacingCreateChatRoomRequest.PassWord)
}
#if LANG_CXX11
void FacingCreateChatRoomRequest::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.FacingCreateChatRoomRequest.PassWord)
}
#endif
void FacingCreateChatRoomRequest::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.FacingCreateChatRoomRequest.PassWord)
}
void FacingCreateChatRoomRequest::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.FacingCreateChatRoomRequest.PassWord)
}
::std::string* FacingCreateChatRoomRequest::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:micromsg.FacingCreateChatRoomRequest.PassWord)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FacingCreateChatRoomRequest::release_password() {
  // @@protoc_insertion_point(field_release:micromsg.FacingCreateChatRoomRequest.PassWord)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FacingCreateChatRoomRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:micromsg.FacingCreateChatRoomRequest.PassWord)
}

// required float Longitude = 4;
bool FacingCreateChatRoomRequest::has_longitude() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void FacingCreateChatRoomRequest::set_has_longitude() {
  _has_bits_[0] |= 0x00000040u;
}
void FacingCreateChatRoomRequest::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000040u;
}
void FacingCreateChatRoomRequest::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
float FacingCreateChatRoomRequest::longitude() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingCreateChatRoomRequest.Longitude)
  return longitude_;
}
void FacingCreateChatRoomRequest::set_longitude(float value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.FacingCreateChatRoomRequest.Longitude)
}

// required float Latitude = 5;
bool FacingCreateChatRoomRequest::has_latitude() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void FacingCreateChatRoomRequest::set_has_latitude() {
  _has_bits_[0] |= 0x00000080u;
}
void FacingCreateChatRoomRequest::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000080u;
}
void FacingCreateChatRoomRequest::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
float FacingCreateChatRoomRequest::latitude() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingCreateChatRoomRequest.Latitude)
  return latitude_;
}
void FacingCreateChatRoomRequest::set_latitude(float value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.FacingCreateChatRoomRequest.Latitude)
}

// required int32 Precision = 6;
bool FacingCreateChatRoomRequest::has_precision() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void FacingCreateChatRoomRequest::set_has_precision() {
  _has_bits_[0] |= 0x00000100u;
}
void FacingCreateChatRoomRequest::clear_has_precision() {
  _has_bits_[0] &= ~0x00000100u;
}
void FacingCreateChatRoomRequest::clear_precision() {
  precision_ = 0;
  clear_has_precision();
}
::google::protobuf::int32 FacingCreateChatRoomRequest::precision() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingCreateChatRoomRequest.Precision)
  return precision_;
}
void FacingCreateChatRoomRequest::set_precision(::google::protobuf::int32 value) {
  set_has_precision();
  precision_ = value;
  // @@protoc_insertion_point(field_set:micromsg.FacingCreateChatRoomRequest.Precision)
}

// optional string MacAddr = 7;
bool FacingCreateChatRoomRequest::has_macaddr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FacingCreateChatRoomRequest::set_has_macaddr() {
  _has_bits_[0] |= 0x00000002u;
}
void FacingCreateChatRoomRequest::clear_has_macaddr() {
  _has_bits_[0] &= ~0x00000002u;
}
void FacingCreateChatRoomRequest::clear_macaddr() {
  macaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_macaddr();
}
const ::std::string& FacingCreateChatRoomRequest::macaddr() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingCreateChatRoomRequest.MacAddr)
  return macaddr_.GetNoArena();
}
void FacingCreateChatRoomRequest::set_macaddr(const ::std::string& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.FacingCreateChatRoomRequest.MacAddr)
}
#if LANG_CXX11
void FacingCreateChatRoomRequest::set_macaddr(::std::string&& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.FacingCreateChatRoomRequest.MacAddr)
}
#endif
void FacingCreateChatRoomRequest::set_macaddr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.FacingCreateChatRoomRequest.MacAddr)
}
void FacingCreateChatRoomRequest::set_macaddr(const char* value, size_t size) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.FacingCreateChatRoomRequest.MacAddr)
}
::std::string* FacingCreateChatRoomRequest::mutable_macaddr() {
  set_has_macaddr();
  // @@protoc_insertion_point(field_mutable:micromsg.FacingCreateChatRoomRequest.MacAddr)
  return macaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FacingCreateChatRoomRequest::release_macaddr() {
  // @@protoc_insertion_point(field_release:micromsg.FacingCreateChatRoomRequest.MacAddr)
  clear_has_macaddr();
  return macaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FacingCreateChatRoomRequest::set_allocated_macaddr(::std::string* macaddr) {
  if (macaddr != NULL) {
    set_has_macaddr();
  } else {
    clear_has_macaddr();
  }
  macaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), macaddr);
  // @@protoc_insertion_point(field_set_allocated:micromsg.FacingCreateChatRoomRequest.MacAddr)
}

// optional string CellId = 8;
bool FacingCreateChatRoomRequest::has_cellid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void FacingCreateChatRoomRequest::set_has_cellid() {
  _has_bits_[0] |= 0x00000004u;
}
void FacingCreateChatRoomRequest::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000004u;
}
void FacingCreateChatRoomRequest::clear_cellid() {
  cellid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cellid();
}
const ::std::string& FacingCreateChatRoomRequest::cellid() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingCreateChatRoomRequest.CellId)
  return cellid_.GetNoArena();
}
void FacingCreateChatRoomRequest::set_cellid(const ::std::string& value) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.FacingCreateChatRoomRequest.CellId)
}
#if LANG_CXX11
void FacingCreateChatRoomRequest::set_cellid(::std::string&& value) {
  set_has_cellid();
  cellid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.FacingCreateChatRoomRequest.CellId)
}
#endif
void FacingCreateChatRoomRequest::set_cellid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.FacingCreateChatRoomRequest.CellId)
}
void FacingCreateChatRoomRequest::set_cellid(const char* value, size_t size) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.FacingCreateChatRoomRequest.CellId)
}
::std::string* FacingCreateChatRoomRequest::mutable_cellid() {
  set_has_cellid();
  // @@protoc_insertion_point(field_mutable:micromsg.FacingCreateChatRoomRequest.CellId)
  return cellid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FacingCreateChatRoomRequest::release_cellid() {
  // @@protoc_insertion_point(field_release:micromsg.FacingCreateChatRoomRequest.CellId)
  clear_has_cellid();
  return cellid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FacingCreateChatRoomRequest::set_allocated_cellid(::std::string* cellid) {
  if (cellid != NULL) {
    set_has_cellid();
  } else {
    clear_has_cellid();
  }
  cellid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cellid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.FacingCreateChatRoomRequest.CellId)
}

// optional int32 GPSSource = 9;
bool FacingCreateChatRoomRequest::has_gpssource() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void FacingCreateChatRoomRequest::set_has_gpssource() {
  _has_bits_[0] |= 0x00000200u;
}
void FacingCreateChatRoomRequest::clear_has_gpssource() {
  _has_bits_[0] &= ~0x00000200u;
}
void FacingCreateChatRoomRequest::clear_gpssource() {
  gpssource_ = 0;
  clear_has_gpssource();
}
::google::protobuf::int32 FacingCreateChatRoomRequest::gpssource() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingCreateChatRoomRequest.GPSSource)
  return gpssource_;
}
void FacingCreateChatRoomRequest::set_gpssource(::google::protobuf::int32 value) {
  set_has_gpssource();
  gpssource_ = value;
  // @@protoc_insertion_point(field_set:micromsg.FacingCreateChatRoomRequest.GPSSource)
}

// optional string Ticket = 10;
bool FacingCreateChatRoomRequest::has_ticket() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void FacingCreateChatRoomRequest::set_has_ticket() {
  _has_bits_[0] |= 0x00000008u;
}
void FacingCreateChatRoomRequest::clear_has_ticket() {
  _has_bits_[0] &= ~0x00000008u;
}
void FacingCreateChatRoomRequest::clear_ticket() {
  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ticket();
}
const ::std::string& FacingCreateChatRoomRequest::ticket() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingCreateChatRoomRequest.Ticket)
  return ticket_.GetNoArena();
}
void FacingCreateChatRoomRequest::set_ticket(const ::std::string& value) {
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.FacingCreateChatRoomRequest.Ticket)
}
#if LANG_CXX11
void FacingCreateChatRoomRequest::set_ticket(::std::string&& value) {
  set_has_ticket();
  ticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.FacingCreateChatRoomRequest.Ticket)
}
#endif
void FacingCreateChatRoomRequest::set_ticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.FacingCreateChatRoomRequest.Ticket)
}
void FacingCreateChatRoomRequest::set_ticket(const char* value, size_t size) {
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.FacingCreateChatRoomRequest.Ticket)
}
::std::string* FacingCreateChatRoomRequest::mutable_ticket() {
  set_has_ticket();
  // @@protoc_insertion_point(field_mutable:micromsg.FacingCreateChatRoomRequest.Ticket)
  return ticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FacingCreateChatRoomRequest::release_ticket() {
  // @@protoc_insertion_point(field_release:micromsg.FacingCreateChatRoomRequest.Ticket)
  clear_has_ticket();
  return ticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FacingCreateChatRoomRequest::set_allocated_ticket(::std::string* ticket) {
  if (ticket != NULL) {
    set_has_ticket();
  } else {
    clear_has_ticket();
  }
  ticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ticket);
  // @@protoc_insertion_point(field_set_allocated:micromsg.FacingCreateChatRoomRequest.Ticket)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FacingCreateChatRoomResponse::kBaseResponseFieldNumber;
const int FacingCreateChatRoomResponse::kTicketFieldNumber;
const int FacingCreateChatRoomResponse::kMemberCountFieldNumber;
const int FacingCreateChatRoomResponse::kMemberListFieldNumber;
const int FacingCreateChatRoomResponse::kChatRoomNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FacingCreateChatRoomResponse::FacingCreateChatRoomResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.FacingCreateChatRoomResponse)
}
FacingCreateChatRoomResponse::FacingCreateChatRoomResponse(const FacingCreateChatRoomResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      memberlist_(from.memberlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ticket()) {
    ticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ticket_);
  }
  chatroomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_chatroomname()) {
    chatroomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chatroomname_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  membercount_ = from.membercount_;
  // @@protoc_insertion_point(copy_constructor:micromsg.FacingCreateChatRoomResponse)
}

void FacingCreateChatRoomResponse::SharedCtor() {
  _cached_size_ = 0;
  ticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chatroomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&membercount_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(membercount_));
}

FacingCreateChatRoomResponse::~FacingCreateChatRoomResponse() {
  // @@protoc_insertion_point(destructor:micromsg.FacingCreateChatRoomResponse)
  SharedDtor();
}

void FacingCreateChatRoomResponse::SharedDtor() {
  ticket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  chatroomname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void FacingCreateChatRoomResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FacingCreateChatRoomResponse::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FacingCreateChatRoomResponse& FacingCreateChatRoomResponse::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

FacingCreateChatRoomResponse* FacingCreateChatRoomResponse::New(::google::protobuf::Arena* arena) const {
  FacingCreateChatRoomResponse* n = new FacingCreateChatRoomResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FacingCreateChatRoomResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.FacingCreateChatRoomResponse)
  memberlist_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    if (has_ticket()) {
      GOOGLE_DCHECK(!ticket_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*ticket_.UnsafeRawStringPointer())->clear();
    }
    if (has_chatroomname()) {
      GOOGLE_DCHECK(!chatroomname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*chatroomname_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  membercount_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FacingCreateChatRoomResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.FacingCreateChatRoomResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Ticket = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ticket()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ticket().data(), this->ticket().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.FacingCreateChatRoomResponse.Ticket");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 MemberCount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_membercount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &membercount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.FacingMember MemberList = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_memberlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ChatRoomName = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chatroomname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->chatroomname().data(), this->chatroomname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.FacingCreateChatRoomResponse.ChatRoomName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.FacingCreateChatRoomResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.FacingCreateChatRoomResponse)
  return false;
#undef DO_
}

void FacingCreateChatRoomResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.FacingCreateChatRoomResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // optional string Ticket = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ticket().data(), this->ticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.FacingCreateChatRoomResponse.Ticket");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ticket(), output);
  }

  // required uint32 MemberCount = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->membercount(), output);
  }

  // repeated .micromsg.FacingMember MemberList = 4;
  for (unsigned int i = 0, n = this->memberlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->memberlist(i), output);
  }

  // optional string ChatRoomName = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chatroomname().data(), this->chatroomname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.FacingCreateChatRoomResponse.ChatRoomName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->chatroomname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.FacingCreateChatRoomResponse)
}

::google::protobuf::uint8* FacingCreateChatRoomResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.FacingCreateChatRoomResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // optional string Ticket = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ticket().data(), this->ticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.FacingCreateChatRoomResponse.Ticket");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ticket(), target);
  }

  // required uint32 MemberCount = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->membercount(), target);
  }

  // repeated .micromsg.FacingMember MemberList = 4;
  for (unsigned int i = 0, n = this->memberlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->memberlist(i), deterministic, target);
  }

  // optional string ChatRoomName = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->chatroomname().data(), this->chatroomname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.FacingCreateChatRoomResponse.ChatRoomName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->chatroomname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.FacingCreateChatRoomResponse)
  return target;
}

size_t FacingCreateChatRoomResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.FacingCreateChatRoomResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_membercount()) {
    // required uint32 MemberCount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->membercount());
  }

  return total_size;
}
size_t FacingCreateChatRoomResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.FacingCreateChatRoomResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000c) ^ 0x0000000c) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required uint32 MemberCount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->membercount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.FacingMember MemberList = 4;
  {
    unsigned int count = this->memberlist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->memberlist(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string Ticket = 2;
    if (has_ticket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ticket());
    }

    // optional string ChatRoomName = 5;
    if (has_chatroomname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->chatroomname());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FacingCreateChatRoomResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.FacingCreateChatRoomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FacingCreateChatRoomResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FacingCreateChatRoomResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.FacingCreateChatRoomResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.FacingCreateChatRoomResponse)
    MergeFrom(*source);
  }
}

void FacingCreateChatRoomResponse::MergeFrom(const FacingCreateChatRoomResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.FacingCreateChatRoomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  memberlist_.MergeFrom(from.memberlist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_ticket();
      ticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ticket_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_chatroomname();
      chatroomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chatroomname_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000008u) {
      membercount_ = from.membercount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FacingCreateChatRoomResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.FacingCreateChatRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FacingCreateChatRoomResponse::CopyFrom(const FacingCreateChatRoomResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.FacingCreateChatRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FacingCreateChatRoomResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->memberlist())) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void FacingCreateChatRoomResponse::Swap(FacingCreateChatRoomResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FacingCreateChatRoomResponse::InternalSwap(FacingCreateChatRoomResponse* other) {
  memberlist_.InternalSwap(&other->memberlist_);
  ticket_.Swap(&other->ticket_);
  chatroomname_.Swap(&other->chatroomname_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(membercount_, other->membercount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FacingCreateChatRoomResponse::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FacingCreateChatRoomResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool FacingCreateChatRoomResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void FacingCreateChatRoomResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000004u;
}
void FacingCreateChatRoomResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000004u;
}
void FacingCreateChatRoomResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& FacingCreateChatRoomResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingCreateChatRoomResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* FacingCreateChatRoomResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.FacingCreateChatRoomResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* FacingCreateChatRoomResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.FacingCreateChatRoomResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void FacingCreateChatRoomResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.FacingCreateChatRoomResponse.BaseResponse)
}

// optional string Ticket = 2;
bool FacingCreateChatRoomResponse::has_ticket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FacingCreateChatRoomResponse::set_has_ticket() {
  _has_bits_[0] |= 0x00000001u;
}
void FacingCreateChatRoomResponse::clear_has_ticket() {
  _has_bits_[0] &= ~0x00000001u;
}
void FacingCreateChatRoomResponse::clear_ticket() {
  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ticket();
}
const ::std::string& FacingCreateChatRoomResponse::ticket() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingCreateChatRoomResponse.Ticket)
  return ticket_.GetNoArena();
}
void FacingCreateChatRoomResponse::set_ticket(const ::std::string& value) {
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.FacingCreateChatRoomResponse.Ticket)
}
#if LANG_CXX11
void FacingCreateChatRoomResponse::set_ticket(::std::string&& value) {
  set_has_ticket();
  ticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.FacingCreateChatRoomResponse.Ticket)
}
#endif
void FacingCreateChatRoomResponse::set_ticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.FacingCreateChatRoomResponse.Ticket)
}
void FacingCreateChatRoomResponse::set_ticket(const char* value, size_t size) {
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.FacingCreateChatRoomResponse.Ticket)
}
::std::string* FacingCreateChatRoomResponse::mutable_ticket() {
  set_has_ticket();
  // @@protoc_insertion_point(field_mutable:micromsg.FacingCreateChatRoomResponse.Ticket)
  return ticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FacingCreateChatRoomResponse::release_ticket() {
  // @@protoc_insertion_point(field_release:micromsg.FacingCreateChatRoomResponse.Ticket)
  clear_has_ticket();
  return ticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FacingCreateChatRoomResponse::set_allocated_ticket(::std::string* ticket) {
  if (ticket != NULL) {
    set_has_ticket();
  } else {
    clear_has_ticket();
  }
  ticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ticket);
  // @@protoc_insertion_point(field_set_allocated:micromsg.FacingCreateChatRoomResponse.Ticket)
}

// required uint32 MemberCount = 3;
bool FacingCreateChatRoomResponse::has_membercount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void FacingCreateChatRoomResponse::set_has_membercount() {
  _has_bits_[0] |= 0x00000008u;
}
void FacingCreateChatRoomResponse::clear_has_membercount() {
  _has_bits_[0] &= ~0x00000008u;
}
void FacingCreateChatRoomResponse::clear_membercount() {
  membercount_ = 0u;
  clear_has_membercount();
}
::google::protobuf::uint32 FacingCreateChatRoomResponse::membercount() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingCreateChatRoomResponse.MemberCount)
  return membercount_;
}
void FacingCreateChatRoomResponse::set_membercount(::google::protobuf::uint32 value) {
  set_has_membercount();
  membercount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.FacingCreateChatRoomResponse.MemberCount)
}

// repeated .micromsg.FacingMember MemberList = 4;
int FacingCreateChatRoomResponse::memberlist_size() const {
  return memberlist_.size();
}
void FacingCreateChatRoomResponse::clear_memberlist() {
  memberlist_.Clear();
}
const ::micromsg::FacingMember& FacingCreateChatRoomResponse::memberlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.FacingCreateChatRoomResponse.MemberList)
  return memberlist_.Get(index);
}
::micromsg::FacingMember* FacingCreateChatRoomResponse::mutable_memberlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.FacingCreateChatRoomResponse.MemberList)
  return memberlist_.Mutable(index);
}
::micromsg::FacingMember* FacingCreateChatRoomResponse::add_memberlist() {
  // @@protoc_insertion_point(field_add:micromsg.FacingCreateChatRoomResponse.MemberList)
  return memberlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::FacingMember >*
FacingCreateChatRoomResponse::mutable_memberlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.FacingCreateChatRoomResponse.MemberList)
  return &memberlist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::FacingMember >&
FacingCreateChatRoomResponse::memberlist() const {
  // @@protoc_insertion_point(field_list:micromsg.FacingCreateChatRoomResponse.MemberList)
  return memberlist_;
}

// optional string ChatRoomName = 5;
bool FacingCreateChatRoomResponse::has_chatroomname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FacingCreateChatRoomResponse::set_has_chatroomname() {
  _has_bits_[0] |= 0x00000002u;
}
void FacingCreateChatRoomResponse::clear_has_chatroomname() {
  _has_bits_[0] &= ~0x00000002u;
}
void FacingCreateChatRoomResponse::clear_chatroomname() {
  chatroomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chatroomname();
}
const ::std::string& FacingCreateChatRoomResponse::chatroomname() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingCreateChatRoomResponse.ChatRoomName)
  return chatroomname_.GetNoArena();
}
void FacingCreateChatRoomResponse::set_chatroomname(const ::std::string& value) {
  set_has_chatroomname();
  chatroomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.FacingCreateChatRoomResponse.ChatRoomName)
}
#if LANG_CXX11
void FacingCreateChatRoomResponse::set_chatroomname(::std::string&& value) {
  set_has_chatroomname();
  chatroomname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.FacingCreateChatRoomResponse.ChatRoomName)
}
#endif
void FacingCreateChatRoomResponse::set_chatroomname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chatroomname();
  chatroomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.FacingCreateChatRoomResponse.ChatRoomName)
}
void FacingCreateChatRoomResponse::set_chatroomname(const char* value, size_t size) {
  set_has_chatroomname();
  chatroomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.FacingCreateChatRoomResponse.ChatRoomName)
}
::std::string* FacingCreateChatRoomResponse::mutable_chatroomname() {
  set_has_chatroomname();
  // @@protoc_insertion_point(field_mutable:micromsg.FacingCreateChatRoomResponse.ChatRoomName)
  return chatroomname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FacingCreateChatRoomResponse::release_chatroomname() {
  // @@protoc_insertion_point(field_release:micromsg.FacingCreateChatRoomResponse.ChatRoomName)
  clear_has_chatroomname();
  return chatroomname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FacingCreateChatRoomResponse::set_allocated_chatroomname(::std::string* chatroomname) {
  if (chatroomname != NULL) {
    set_has_chatroomname();
  } else {
    clear_has_chatroomname();
  }
  chatroomname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chatroomname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.FacingCreateChatRoomResponse.ChatRoomName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAddressRequest::kBaseRequestFieldNumber;
const int GetAddressRequest::kLongitudeFieldNumber;
const int GetAddressRequest::kLatitudeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAddressRequest::GetAddressRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetAddressRequest)
}
GetAddressRequest::GetAddressRequest(const GetAddressRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  ::memcpy(&longitude_, &from.longitude_,
    reinterpret_cast<char*>(&latitude_) -
    reinterpret_cast<char*>(&longitude_) + sizeof(latitude_));
  // @@protoc_insertion_point(copy_constructor:micromsg.GetAddressRequest)
}

void GetAddressRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&latitude_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(latitude_));
}

GetAddressRequest::~GetAddressRequest() {
  // @@protoc_insertion_point(destructor:micromsg.GetAddressRequest)
  SharedDtor();
}

void GetAddressRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void GetAddressRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAddressRequest::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAddressRequest& GetAddressRequest::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetAddressRequest* GetAddressRequest::New(::google::protobuf::Arena* arena) const {
  GetAddressRequest* n = new GetAddressRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAddressRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetAddressRequest)
  if (has_baserequest()) {
    GOOGLE_DCHECK(baserequest_ != NULL);
    baserequest_->::micromsg::BaseRequest::Clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&longitude_, 0, reinterpret_cast<char*>(&latitude_) -
      reinterpret_cast<char*>(&longitude_) + sizeof(latitude_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetAddressRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetAddressRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double Longitude = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_longitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &longitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required double Latitude = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {
          set_has_latitude();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &latitude_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetAddressRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetAddressRequest)
  return false;
#undef DO_
}

void GetAddressRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetAddressRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required double Longitude = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->longitude(), output);
  }

  // required double Latitude = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->latitude(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetAddressRequest)
}

::google::protobuf::uint8* GetAddressRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetAddressRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required double Longitude = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->longitude(), target);
  }

  // required double Latitude = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->latitude(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetAddressRequest)
  return target;
}

size_t GetAddressRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetAddressRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_longitude()) {
    // required double Longitude = 2;
    total_size += 1 + 8;
  }

  if (has_latitude()) {
    // required double Latitude = 3;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t GetAddressRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetAddressRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required double Longitude = 2;
    total_size += 1 + 8;

    // required double Latitude = 3;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAddressRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetAddressRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAddressRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAddressRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetAddressRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetAddressRequest)
    MergeFrom(*source);
  }
}

void GetAddressRequest::MergeFrom(const GetAddressRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetAddressRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000002u) {
      longitude_ = from.longitude_;
    }
    if (cached_has_bits & 0x00000004u) {
      latitude_ = from.latitude_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetAddressRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAddressRequest::CopyFrom(const GetAddressRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetAddressRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAddressRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void GetAddressRequest::Swap(GetAddressRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAddressRequest::InternalSwap(GetAddressRequest* other) {
  std::swap(baserequest_, other->baserequest_);
  std::swap(longitude_, other->longitude_);
  std::swap(latitude_, other->latitude_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAddressRequest::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetAddressRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool GetAddressRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetAddressRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
void GetAddressRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetAddressRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& GetAddressRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAddressRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* GetAddressRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetAddressRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* GetAddressRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetAddressRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void GetAddressRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAddressRequest.BaseRequest)
}

// required double Longitude = 2;
bool GetAddressRequest::has_longitude() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetAddressRequest::set_has_longitude() {
  _has_bits_[0] |= 0x00000002u;
}
void GetAddressRequest::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetAddressRequest::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
double GetAddressRequest::longitude() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAddressRequest.Longitude)
  return longitude_;
}
void GetAddressRequest::set_longitude(double value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetAddressRequest.Longitude)
}

// required double Latitude = 3;
bool GetAddressRequest::has_latitude() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetAddressRequest::set_has_latitude() {
  _has_bits_[0] |= 0x00000004u;
}
void GetAddressRequest::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetAddressRequest::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
double GetAddressRequest::latitude() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAddressRequest.Latitude)
  return latitude_;
}
void GetAddressRequest::set_latitude(double value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetAddressRequest.Latitude)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAddressResponse::kBaseResponseFieldNumber;
const int GetAddressResponse::kRetJsonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAddressResponse::GetAddressResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmlbs_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetAddressResponse)
}
GetAddressResponse::GetAddressResponse(const GetAddressResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retjson_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_retjson()) {
    retjson_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retjson_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.GetAddressResponse)
}

void GetAddressResponse::SharedCtor() {
  _cached_size_ = 0;
  retjson_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  baseresponse_ = NULL;
}

GetAddressResponse::~GetAddressResponse() {
  // @@protoc_insertion_point(destructor:micromsg.GetAddressResponse)
  SharedDtor();
}

void GetAddressResponse::SharedDtor() {
  retjson_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void GetAddressResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAddressResponse::descriptor() {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAddressResponse& GetAddressResponse::default_instance() {
  protobuf_mmlbs_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetAddressResponse* GetAddressResponse::New(::google::protobuf::Arena* arena) const {
  GetAddressResponse* n = new GetAddressResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAddressResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetAddressResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_retjson()) {
      GOOGLE_DCHECK(!retjson_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*retjson_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetAddressResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetAddressResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string RetJson = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retjson()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->retjson().data(), this->retjson().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetAddressResponse.RetJson");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetAddressResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetAddressResponse)
  return false;
#undef DO_
}

void GetAddressResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // optional string RetJson = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retjson().data(), this->retjson().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetAddressResponse.RetJson");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->retjson(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetAddressResponse)
}

::google::protobuf::uint8* GetAddressResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetAddressResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // optional string RetJson = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retjson().data(), this->retjson().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetAddressResponse.RetJson");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->retjson(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetAddressResponse)
  return target;
}

size_t GetAddressResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetAddressResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (has_baseresponse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }
  // optional string RetJson = 2;
  if (has_retjson()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->retjson());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAddressResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetAddressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAddressResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAddressResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetAddressResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetAddressResponse)
    MergeFrom(*source);
  }
}

void GetAddressResponse::MergeFrom(const GetAddressResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetAddressResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_retjson();
      retjson_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retjson_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
  }
}

void GetAddressResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAddressResponse::CopyFrom(const GetAddressResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetAddressResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAddressResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void GetAddressResponse::Swap(GetAddressResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAddressResponse::InternalSwap(GetAddressResponse* other) {
  retjson_.Swap(&other->retjson_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAddressResponse::GetMetadata() const {
  protobuf_mmlbs_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmlbs_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetAddressResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool GetAddressResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetAddressResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
void GetAddressResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetAddressResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& GetAddressResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAddressResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* GetAddressResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetAddressResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* GetAddressResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetAddressResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void GetAddressResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAddressResponse.BaseResponse)
}

// optional string RetJson = 2;
bool GetAddressResponse::has_retjson() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetAddressResponse::set_has_retjson() {
  _has_bits_[0] |= 0x00000001u;
}
void GetAddressResponse::clear_has_retjson() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetAddressResponse::clear_retjson() {
  retjson_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_retjson();
}
const ::std::string& GetAddressResponse::retjson() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAddressResponse.RetJson)
  return retjson_.GetNoArena();
}
void GetAddressResponse::set_retjson(const ::std::string& value) {
  set_has_retjson();
  retjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetAddressResponse.RetJson)
}
#if LANG_CXX11
void GetAddressResponse::set_retjson(::std::string&& value) {
  set_has_retjson();
  retjson_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetAddressResponse.RetJson)
}
#endif
void GetAddressResponse::set_retjson(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_retjson();
  retjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetAddressResponse.RetJson)
}
void GetAddressResponse::set_retjson(const char* value, size_t size) {
  set_has_retjson();
  retjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetAddressResponse.RetJson)
}
::std::string* GetAddressResponse::mutable_retjson() {
  set_has_retjson();
  // @@protoc_insertion_point(field_mutable:micromsg.GetAddressResponse.RetJson)
  return retjson_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetAddressResponse::release_retjson() {
  // @@protoc_insertion_point(field_release:micromsg.GetAddressResponse.RetJson)
  clear_has_retjson();
  return retjson_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetAddressResponse::set_allocated_retjson(::std::string* retjson) {
  if (retjson != NULL) {
    set_has_retjson();
  } else {
    clear_has_retjson();
  }
  retjson_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retjson);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAddressResponse.RetJson)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace micromsg

// @@protoc_insertion_point(global_scope)
