// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mmlbs.proto

#ifndef PROTOBUF_mmlbs_2eproto__INCLUDED
#define PROTOBUF_mmlbs_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "mmbuiltintype.pb.h"
#include "mmbase.pb.h"
// @@protoc_insertion_point(includes)
namespace micromsg {
class AdditionalContactList;
class AdditionalContactListDefaultTypeInternal;
extern AdditionalContactListDefaultTypeInternal _AdditionalContactList_default_instance_;
class AlbumLbsContactInfo;
class AlbumLbsContactInfoDefaultTypeInternal;
extern AlbumLbsContactInfoDefaultTypeInternal _AlbumLbsContactInfo_default_instance_;
class AlbumLbsRequest;
class AlbumLbsRequestDefaultTypeInternal;
extern AlbumLbsRequestDefaultTypeInternal _AlbumLbsRequest_default_instance_;
class AlbumLbsResponse;
class AlbumLbsResponseDefaultTypeInternal;
extern AlbumLbsResponseDefaultTypeInternal _AlbumLbsResponse_default_instance_;
class BaseRequest;
class BaseRequestDefaultTypeInternal;
extern BaseRequestDefaultTypeInternal _BaseRequest_default_instance_;
class BaseResponse;
class BaseResponseDefaultTypeInternal;
extern BaseResponseDefaultTypeInternal _BaseResponse_default_instance_;
class BindEmailRequest;
class BindEmailRequestDefaultTypeInternal;
extern BindEmailRequestDefaultTypeInternal _BindEmailRequest_default_instance_;
class BindEmailResponse;
class BindEmailResponseDefaultTypeInternal;
extern BindEmailResponseDefaultTypeInternal _BindEmailResponse_default_instance_;
class BuiltinIP;
class BuiltinIPDefaultTypeInternal;
extern BuiltinIPDefaultTypeInternal _BuiltinIP_default_instance_;
class BuiltinIPList;
class BuiltinIPListDefaultTypeInternal;
extern BuiltinIPListDefaultTypeInternal _BuiltinIPList_default_instance_;
class CDNDnsInfo;
class CDNDnsInfoDefaultTypeInternal;
extern CDNDnsInfoDefaultTypeInternal _CDNDnsInfo_default_instance_;
class ChatRoomMemberData;
class ChatRoomMemberDataDefaultTypeInternal;
extern ChatRoomMemberDataDefaultTypeInternal _ChatRoomMemberData_default_instance_;
class ChatRoomMemberInfo;
class ChatRoomMemberInfoDefaultTypeInternal;
extern ChatRoomMemberInfoDefaultTypeInternal _ChatRoomMemberInfo_default_instance_;
class CmdItem;
class CmdItemDefaultTypeInternal;
extern CmdItemDefaultTypeInternal _CmdItem_default_instance_;
class CmdList;
class CmdListDefaultTypeInternal;
extern CmdListDefaultTypeInternal _CmdList_default_instance_;
class CreatePoiRequest;
class CreatePoiRequestDefaultTypeInternal;
extern CreatePoiRequestDefaultTypeInternal _CreatePoiRequest_default_instance_;
class CreatePoiResponse;
class CreatePoiResponseDefaultTypeInternal;
extern CreatePoiResponseDefaultTypeInternal _CreatePoiResponse_default_instance_;
class CustomizedInfo;
class CustomizedInfoDefaultTypeInternal;
extern CustomizedInfoDefaultTypeInternal _CustomizedInfo_default_instance_;
class DelMemberReq;
class DelMemberReqDefaultTypeInternal;
extern DelMemberReqDefaultTypeInternal _DelMemberReq_default_instance_;
class DelMemberResp;
class DelMemberRespDefaultTypeInternal;
extern DelMemberRespDefaultTypeInternal _DelMemberResp_default_instance_;
class DisturbSetting;
class DisturbSettingDefaultTypeInternal;
extern DisturbSettingDefaultTypeInternal _DisturbSetting_default_instance_;
class DisturbTimeSpan;
class DisturbTimeSpanDefaultTypeInternal;
extern DisturbTimeSpanDefaultTypeInternal _DisturbTimeSpan_default_instance_;
class FacingCreateChatRoomRequest;
class FacingCreateChatRoomRequestDefaultTypeInternal;
extern FacingCreateChatRoomRequestDefaultTypeInternal _FacingCreateChatRoomRequest_default_instance_;
class FacingCreateChatRoomResponse;
class FacingCreateChatRoomResponseDefaultTypeInternal;
extern FacingCreateChatRoomResponseDefaultTypeInternal _FacingCreateChatRoomResponse_default_instance_;
class FacingMember;
class FacingMemberDefaultTypeInternal;
extern FacingMemberDefaultTypeInternal _FacingMember_default_instance_;
class GetAddressRequest;
class GetAddressRequestDefaultTypeInternal;
extern GetAddressRequestDefaultTypeInternal _GetAddressRequest_default_instance_;
class GetAddressResponse;
class GetAddressResponseDefaultTypeInternal;
extern GetAddressResponseDefaultTypeInternal _GetAddressResponse_default_instance_;
class GetLbsFunctionListRequest;
class GetLbsFunctionListRequestDefaultTypeInternal;
extern GetLbsFunctionListRequestDefaultTypeInternal _GetLbsFunctionListRequest_default_instance_;
class GetLbsFunctionListResponse;
class GetLbsFunctionListResponseDefaultTypeInternal;
extern GetLbsFunctionListResponseDefaultTypeInternal _GetLbsFunctionListResponse_default_instance_;
class GetLbsLifeDetailRequest;
class GetLbsLifeDetailRequestDefaultTypeInternal;
extern GetLbsLifeDetailRequestDefaultTypeInternal _GetLbsLifeDetailRequest_default_instance_;
class GetLbsLifeDetailResponse;
class GetLbsLifeDetailResponseDefaultTypeInternal;
extern GetLbsLifeDetailResponseDefaultTypeInternal _GetLbsLifeDetailResponse_default_instance_;
class GetLbsLifeListRequest;
class GetLbsLifeListRequestDefaultTypeInternal;
extern GetLbsLifeListRequestDefaultTypeInternal _GetLbsLifeListRequest_default_instance_;
class GetLbsLifeListResponse;
class GetLbsLifeListResponseDefaultTypeInternal;
extern GetLbsLifeListResponseDefaultTypeInternal _GetLbsLifeListResponse_default_instance_;
class GetLocationRequest;
class GetLocationRequestDefaultTypeInternal;
extern GetLocationRequestDefaultTypeInternal _GetLocationRequest_default_instance_;
class GetLocationResponse;
class GetLocationResponseDefaultTypeInternal;
extern GetLocationResponseDefaultTypeInternal _GetLocationResponse_default_instance_;
class GetPOIListRequest;
class GetPOIListRequestDefaultTypeInternal;
extern GetPOIListRequestDefaultTypeInternal _GetPOIListRequest_default_instance_;
class GetPOIListResponse;
class GetPOIListResponseDefaultTypeInternal;
extern GetPOIListResponseDefaultTypeInternal _GetPOIListResponse_default_instance_;
class GmailInfo;
class GmailInfoDefaultTypeInternal;
extern GmailInfoDefaultTypeInternal _GmailInfo_default_instance_;
class GmailList;
class GmailListDefaultTypeInternal;
extern GmailListDefaultTypeInternal _GmailList_default_instance_;
class HardDevice;
class HardDeviceDefaultTypeInternal;
extern HardDeviceDefaultTypeInternal _HardDevice_default_instance_;
class Host;
class HostDefaultTypeInternal;
extern HostDefaultTypeInternal _Host_default_instance_;
class HostList;
class HostListDefaultTypeInternal;
extern HostListDefaultTypeInternal _HostList_default_instance_;
class LBSLifeAction;
class LBSLifeActionDefaultTypeInternal;
extern LBSLifeActionDefaultTypeInternal _LBSLifeAction_default_instance_;
class LBSLifeActionBargain;
class LBSLifeActionBargainDefaultTypeInternal;
extern LBSLifeActionBargainDefaultTypeInternal _LBSLifeActionBargain_default_instance_;
class LBSLifeActionBooking;
class LBSLifeActionBookingDefaultTypeInternal;
extern LBSLifeActionBookingDefaultTypeInternal _LBSLifeActionBooking_default_instance_;
class LBSLifeActionList;
class LBSLifeActionListDefaultTypeInternal;
extern LBSLifeActionListDefaultTypeInternal _LBSLifeActionList_default_instance_;
class LbsContactInfo;
class LbsContactInfoDefaultTypeInternal;
extern LbsContactInfoDefaultTypeInternal _LbsContactInfo_default_instance_;
class LbsLife;
class LbsLifeDefaultTypeInternal;
extern LbsLifeDefaultTypeInternal _LbsLife_default_instance_;
class LbsLifeDetail;
class LbsLifeDetailDefaultTypeInternal;
extern LbsLifeDetailDefaultTypeInternal _LbsLifeDetail_default_instance_;
class LbsLifeExtInfo;
class LbsLifeExtInfoDefaultTypeInternal;
extern LbsLifeExtInfoDefaultTypeInternal _LbsLifeExtInfo_default_instance_;
class LbsLocation;
class LbsLocationDefaultTypeInternal;
extern LbsLocationDefaultTypeInternal _LbsLocation_default_instance_;
class LbsRequest;
class LbsRequestDefaultTypeInternal;
extern LbsRequestDefaultTypeInternal _LbsRequest_default_instance_;
class LbsResponse;
class LbsResponseDefaultTypeInternal;
extern LbsResponseDefaultTypeInternal _LbsResponse_default_instance_;
class LbsRoomMember;
class LbsRoomMemberDefaultTypeInternal;
extern LbsRoomMemberDefaultTypeInternal _LbsRoomMember_default_instance_;
class LbsRoomMemberRequest;
class LbsRoomMemberRequestDefaultTypeInternal;
extern LbsRoomMemberRequestDefaultTypeInternal _LbsRoomMemberRequest_default_instance_;
class LbsRoomMemberResponse;
class LbsRoomMemberResponseDefaultTypeInternal;
extern LbsRoomMemberResponseDefaultTypeInternal _LbsRoomMemberResponse_default_instance_;
class LbsRoomRequest;
class LbsRoomRequestDefaultTypeInternal;
extern LbsRoomRequestDefaultTypeInternal _LbsRoomRequest_default_instance_;
class LbsRoomResponse;
class LbsRoomResponseDefaultTypeInternal;
extern LbsRoomResponseDefaultTypeInternal _LbsRoomResponse_default_instance_;
class LinkedinContactItem;
class LinkedinContactItemDefaultTypeInternal;
extern LinkedinContactItemDefaultTypeInternal _LinkedinContactItem_default_instance_;
class MemberReq;
class MemberReqDefaultTypeInternal;
extern MemberReqDefaultTypeInternal _MemberReq_default_instance_;
class MemberResp;
class MemberRespDefaultTypeInternal;
extern MemberRespDefaultTypeInternal _MemberResp_default_instance_;
class ModContact;
class ModContactDefaultTypeInternal;
extern ModContactDefaultTypeInternal _ModContact_default_instance_;
class ModUserInfo;
class ModUserInfoDefaultTypeInternal;
extern ModUserInfoDefaultTypeInternal _ModUserInfo_default_instance_;
class NetworkControl;
class NetworkControlDefaultTypeInternal;
extern NetworkControlDefaultTypeInternal _NetworkControl_default_instance_;
class POIItem;
class POIItemDefaultTypeInternal;
extern POIItemDefaultTypeInternal _POIItem_default_instance_;
class PatternLockInfo;
class PatternLockInfoDefaultTypeInternal;
extern PatternLockInfoDefaultTypeInternal _PatternLockInfo_default_instance_;
class PluginKey;
class PluginKeyDefaultTypeInternal;
extern PluginKeyDefaultTypeInternal _PluginKey_default_instance_;
class PluginKeyList;
class PluginKeyListDefaultTypeInternal;
extern PluginKeyListDefaultTypeInternal _PluginKeyList_default_instance_;
class PositionInfo;
class PositionInfoDefaultTypeInternal;
extern PositionInfoDefaultTypeInternal _PositionInfo_default_instance_;
class RadarChatRoomMember;
class RadarChatRoomMemberDefaultTypeInternal;
extern RadarChatRoomMemberDefaultTypeInternal _RadarChatRoomMember_default_instance_;
class RadarCreateChatRoomRequest;
class RadarCreateChatRoomRequestDefaultTypeInternal;
extern RadarCreateChatRoomRequestDefaultTypeInternal _RadarCreateChatRoomRequest_default_instance_;
class RadarCreateChatRoomResponse;
class RadarCreateChatRoomResponseDefaultTypeInternal;
extern RadarCreateChatRoomResponseDefaultTypeInternal _RadarCreateChatRoomResponse_default_instance_;
class RadarRelationChainRequest;
class RadarRelationChainRequestDefaultTypeInternal;
extern RadarRelationChainRequestDefaultTypeInternal _RadarRelationChainRequest_default_instance_;
class RadarRelationChainResponse;
class RadarRelationChainResponseDefaultTypeInternal;
extern RadarRelationChainResponseDefaultTypeInternal _RadarRelationChainResponse_default_instance_;
class RadarSearchMember;
class RadarSearchMemberDefaultTypeInternal;
extern RadarSearchMemberDefaultTypeInternal _RadarSearchMember_default_instance_;
class RadarSearchRequest;
class RadarSearchRequestDefaultTypeInternal;
extern RadarSearchRequestDefaultTypeInternal _RadarSearchRequest_default_instance_;
class RadarSearchResponse;
class RadarSearchResponseDefaultTypeInternal;
extern RadarSearchResponseDefaultTypeInternal _RadarSearchResponse_default_instance_;
class RoomInfo;
class RoomInfoDefaultTypeInternal;
extern RoomInfoDefaultTypeInternal _RoomInfo_default_instance_;
class SKBuiltinBuffer_t;
class SKBuiltinBuffer_tDefaultTypeInternal;
extern SKBuiltinBuffer_tDefaultTypeInternal _SKBuiltinBuffer_t_default_instance_;
class SKBuiltinChar_t;
class SKBuiltinChar_tDefaultTypeInternal;
extern SKBuiltinChar_tDefaultTypeInternal _SKBuiltinChar_t_default_instance_;
class SKBuiltinDouble64_t;
class SKBuiltinDouble64_tDefaultTypeInternal;
extern SKBuiltinDouble64_tDefaultTypeInternal _SKBuiltinDouble64_t_default_instance_;
class SKBuiltinFloat32_t;
class SKBuiltinFloat32_tDefaultTypeInternal;
extern SKBuiltinFloat32_tDefaultTypeInternal _SKBuiltinFloat32_t_default_instance_;
class SKBuiltinInt16_t;
class SKBuiltinInt16_tDefaultTypeInternal;
extern SKBuiltinInt16_tDefaultTypeInternal _SKBuiltinInt16_t_default_instance_;
class SKBuiltinInt32_t;
class SKBuiltinInt32_tDefaultTypeInternal;
extern SKBuiltinInt32_tDefaultTypeInternal _SKBuiltinInt32_t_default_instance_;
class SKBuiltinInt64_t;
class SKBuiltinInt64_tDefaultTypeInternal;
extern SKBuiltinInt64_tDefaultTypeInternal _SKBuiltinInt64_t_default_instance_;
class SKBuiltinInt8_t;
class SKBuiltinInt8_tDefaultTypeInternal;
extern SKBuiltinInt8_tDefaultTypeInternal _SKBuiltinInt8_t_default_instance_;
class SKBuiltinString_t;
class SKBuiltinString_tDefaultTypeInternal;
extern SKBuiltinString_tDefaultTypeInternal _SKBuiltinString_t_default_instance_;
class SKBuiltinUchar_t;
class SKBuiltinUchar_tDefaultTypeInternal;
extern SKBuiltinUchar_tDefaultTypeInternal _SKBuiltinUchar_t_default_instance_;
class SKBuiltinUint16_t;
class SKBuiltinUint16_tDefaultTypeInternal;
extern SKBuiltinUint16_tDefaultTypeInternal _SKBuiltinUint16_t_default_instance_;
class SKBuiltinUint32_t;
class SKBuiltinUint32_tDefaultTypeInternal;
extern SKBuiltinUint32_tDefaultTypeInternal _SKBuiltinUint32_t_default_instance_;
class SKBuiltinUint64_t;
class SKBuiltinUint64_tDefaultTypeInternal;
extern SKBuiltinUint64_tDefaultTypeInternal _SKBuiltinUint64_t_default_instance_;
class SKBuiltinUint8_t;
class SKBuiltinUint8_tDefaultTypeInternal;
extern SKBuiltinUint8_tDefaultTypeInternal _SKBuiltinUint8_t_default_instance_;
class SafeDevice;
class SafeDeviceDefaultTypeInternal;
extern SafeDeviceDefaultTypeInternal _SafeDevice_default_instance_;
class SafeDeviceList;
class SafeDeviceListDefaultTypeInternal;
extern SafeDeviceListDefaultTypeInternal _SafeDeviceList_default_instance_;
class ScanStreetViewRequest;
class ScanStreetViewRequestDefaultTypeInternal;
extern ScanStreetViewRequestDefaultTypeInternal _ScanStreetViewRequest_default_instance_;
class ScanStreetViewResponse;
class ScanStreetViewResponseDefaultTypeInternal;
extern ScanStreetViewResponseDefaultTypeInternal _ScanStreetViewResponse_default_instance_;
class ShakeBuffer;
class ShakeBufferDefaultTypeInternal;
extern ShakeBufferDefaultTypeInternal _ShakeBuffer_default_instance_;
class ShakeGetItem;
class ShakeGetItemDefaultTypeInternal;
extern ShakeGetItemDefaultTypeInternal _ShakeGetItem_default_instance_;
class ShakeGetRequest;
class ShakeGetRequestDefaultTypeInternal;
extern ShakeGetRequestDefaultTypeInternal _ShakeGetRequest_default_instance_;
class ShakeGetResponse;
class ShakeGetResponseDefaultTypeInternal;
extern ShakeGetResponseDefaultTypeInternal _ShakeGetResponse_default_instance_;
class ShakeImgRequest;
class ShakeImgRequestDefaultTypeInternal;
extern ShakeImgRequestDefaultTypeInternal _ShakeImgRequest_default_instance_;
class ShakeImgResponse;
class ShakeImgResponseDefaultTypeInternal;
extern ShakeImgResponseDefaultTypeInternal _ShakeImgResponse_default_instance_;
class ShakeMatchRequest;
class ShakeMatchRequestDefaultTypeInternal;
extern ShakeMatchRequestDefaultTypeInternal _ShakeMatchRequest_default_instance_;
class ShakeMatchResponse;
class ShakeMatchResponseDefaultTypeInternal;
extern ShakeMatchResponseDefaultTypeInternal _ShakeMatchResponse_default_instance_;
class ShakeReportRequest;
class ShakeReportRequestDefaultTypeInternal;
extern ShakeReportRequestDefaultTypeInternal _ShakeReportRequest_default_instance_;
class ShakeReportResponse;
class ShakeReportResponseDefaultTypeInternal;
extern ShakeReportResponseDefaultTypeInternal _ShakeReportResponse_default_instance_;
class ShakeSyncRequest;
class ShakeSyncRequestDefaultTypeInternal;
extern ShakeSyncRequestDefaultTypeInternal _ShakeSyncRequest_default_instance_;
class ShakeSyncResponse;
class ShakeSyncResponseDefaultTypeInternal;
extern ShakeSyncResponseDefaultTypeInternal _ShakeSyncResponse_default_instance_;
class ShowStyleKey;
class ShowStyleKeyDefaultTypeInternal;
extern ShowStyleKeyDefaultTypeInternal _ShowStyleKey_default_instance_;
class SnsUserInfo;
class SnsUserInfoDefaultTypeInternal;
extern SnsUserInfoDefaultTypeInternal _SnsUserInfo_default_instance_;
class StyleKeyVal;
class StyleKeyValDefaultTypeInternal;
extern StyleKeyValDefaultTypeInternal _StyleKeyVal_default_instance_;
class UserInfoExt;
class UserInfoExtDefaultTypeInternal;
extern UserInfoExtDefaultTypeInternal _UserInfoExt_default_instance_;
}  // namespace micromsg

namespace micromsg {

namespace protobuf_mmlbs_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_mmlbs_2eproto

// ===================================================================

class LbsLifeExtInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.LbsLifeExtInfo) */ {
 public:
  LbsLifeExtInfo();
  virtual ~LbsLifeExtInfo();

  LbsLifeExtInfo(const LbsLifeExtInfo& from);

  inline LbsLifeExtInfo& operator=(const LbsLifeExtInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LbsLifeExtInfo& default_instance();

  static inline const LbsLifeExtInfo* internal_default_instance() {
    return reinterpret_cast<const LbsLifeExtInfo*>(
               &_LbsLifeExtInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(LbsLifeExtInfo* other);

  // implements Message ----------------------------------------------

  inline LbsLifeExtInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  LbsLifeExtInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LbsLifeExtInfo& from);
  void MergeFrom(const LbsLifeExtInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LbsLifeExtInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string sessiontoken = 3;
  bool has_sessiontoken() const;
  void clear_sessiontoken();
  static const int kSessiontokenFieldNumber = 3;
  const ::std::string& sessiontoken() const;
  void set_sessiontoken(const ::std::string& value);
  #if LANG_CXX11
  void set_sessiontoken(::std::string&& value);
  #endif
  void set_sessiontoken(const char* value);
  void set_sessiontoken(const char* value, size_t size);
  ::std::string* mutable_sessiontoken();
  ::std::string* release_sessiontoken();
  void set_allocated_sessiontoken(::std::string* sessiontoken);

  // required uint32 Limit = 1;
  bool has_limit() const;
  void clear_limit();
  static const int kLimitFieldNumber = 1;
  ::google::protobuf::uint32 limit() const;
  void set_limit(::google::protobuf::uint32 value);

  // required uint32 Page = 2;
  bool has_page() const;
  void clear_page();
  static const int kPageFieldNumber = 2;
  ::google::protobuf::uint32 page() const;
  void set_page(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.LbsLifeExtInfo)
 private:
  void set_has_limit();
  void clear_has_limit();
  void set_has_page();
  void clear_has_page();
  void set_has_sessiontoken();
  void clear_has_sessiontoken();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr sessiontoken_;
  ::google::protobuf::uint32 limit_;
  ::google::protobuf::uint32 page_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LbsLocation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.LbsLocation) */ {
 public:
  LbsLocation();
  virtual ~LbsLocation();

  LbsLocation(const LbsLocation& from);

  inline LbsLocation& operator=(const LbsLocation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LbsLocation& default_instance();

  static inline const LbsLocation* internal_default_instance() {
    return reinterpret_cast<const LbsLocation*>(
               &_LbsLocation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(LbsLocation* other);

  // implements Message ----------------------------------------------

  inline LbsLocation* New() const PROTOBUF_FINAL { return New(NULL); }

  LbsLocation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LbsLocation& from);
  void MergeFrom(const LbsLocation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LbsLocation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string MacAddr = 4;
  bool has_macaddr() const;
  void clear_macaddr();
  static const int kMacAddrFieldNumber = 4;
  const ::std::string& macaddr() const;
  void set_macaddr(const ::std::string& value);
  #if LANG_CXX11
  void set_macaddr(::std::string&& value);
  #endif
  void set_macaddr(const char* value);
  void set_macaddr(const char* value, size_t size);
  ::std::string* mutable_macaddr();
  ::std::string* release_macaddr();
  void set_allocated_macaddr(::std::string* macaddr);

  // optional string CellId = 5;
  bool has_cellid() const;
  void clear_cellid();
  static const int kCellIdFieldNumber = 5;
  const ::std::string& cellid() const;
  void set_cellid(const ::std::string& value);
  #if LANG_CXX11
  void set_cellid(::std::string&& value);
  #endif
  void set_cellid(const char* value);
  void set_cellid(const char* value, size_t size);
  ::std::string* mutable_cellid();
  ::std::string* release_cellid();
  void set_allocated_cellid(::std::string* cellid);

  // required float Longitude = 1;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 1;
  float longitude() const;
  void set_longitude(float value);

  // required float Latitude = 2;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 2;
  float latitude() const;
  void set_latitude(float value);

  // required int32 Precision = 3;
  bool has_precision() const;
  void clear_precision();
  static const int kPrecisionFieldNumber = 3;
  ::google::protobuf::int32 precision() const;
  void set_precision(::google::protobuf::int32 value);

  // optional int32 GPSSource = 6;
  bool has_gpssource() const;
  void clear_gpssource();
  static const int kGPSSourceFieldNumber = 6;
  ::google::protobuf::int32 gpssource() const;
  void set_gpssource(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.LbsLocation)
 private:
  void set_has_longitude();
  void clear_has_longitude();
  void set_has_latitude();
  void clear_has_latitude();
  void set_has_precision();
  void clear_has_precision();
  void set_has_macaddr();
  void clear_has_macaddr();
  void set_has_cellid();
  void clear_has_cellid();
  void set_has_gpssource();
  void clear_has_gpssource();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr macaddr_;
  ::google::protobuf::internal::ArenaStringPtr cellid_;
  float longitude_;
  float latitude_;
  ::google::protobuf::int32 precision_;
  ::google::protobuf::int32 gpssource_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreatePoiRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.CreatePoiRequest) */ {
 public:
  CreatePoiRequest();
  virtual ~CreatePoiRequest();

  CreatePoiRequest(const CreatePoiRequest& from);

  inline CreatePoiRequest& operator=(const CreatePoiRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreatePoiRequest& default_instance();

  static inline const CreatePoiRequest* internal_default_instance() {
    return reinterpret_cast<const CreatePoiRequest*>(
               &_CreatePoiRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CreatePoiRequest* other);

  // implements Message ----------------------------------------------

  inline CreatePoiRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreatePoiRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreatePoiRequest& from);
  void MergeFrom(const CreatePoiRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreatePoiRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.SKBuiltinString_t Categories = 7;
  int categories_size() const;
  void clear_categories();
  static const int kCategoriesFieldNumber = 7;
  const ::micromsg::SKBuiltinString_t& categories(int index) const;
  ::micromsg::SKBuiltinString_t* mutable_categories(int index);
  ::micromsg::SKBuiltinString_t* add_categories();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
      mutable_categories();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
      categories() const;

  // optional string Name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string District = 3;
  bool has_district() const;
  void clear_district();
  static const int kDistrictFieldNumber = 3;
  const ::std::string& district() const;
  void set_district(const ::std::string& value);
  #if LANG_CXX11
  void set_district(::std::string&& value);
  #endif
  void set_district(const char* value);
  void set_district(const char* value, size_t size);
  ::std::string* mutable_district();
  ::std::string* release_district();
  void set_allocated_district(::std::string* district);

  // optional string Street = 4;
  bool has_street() const;
  void clear_street();
  static const int kStreetFieldNumber = 4;
  const ::std::string& street() const;
  void set_street(const ::std::string& value);
  #if LANG_CXX11
  void set_street(::std::string&& value);
  #endif
  void set_street(const char* value);
  void set_street(const char* value, size_t size);
  ::std::string* mutable_street();
  ::std::string* release_street();
  void set_allocated_street(::std::string* street);

  // optional string Telephone = 8;
  bool has_telephone() const;
  void clear_telephone();
  static const int kTelephoneFieldNumber = 8;
  const ::std::string& telephone() const;
  void set_telephone(const ::std::string& value);
  #if LANG_CXX11
  void set_telephone(::std::string&& value);
  #endif
  void set_telephone(const char* value);
  void set_telephone(const char* value, size_t size);
  ::std::string* mutable_telephone();
  ::std::string* release_telephone();
  void set_allocated_telephone(::std::string* telephone);

  // optional string PhotoUrl = 9;
  bool has_photourl() const;
  void clear_photourl();
  static const int kPhotoUrlFieldNumber = 9;
  const ::std::string& photourl() const;
  void set_photourl(const ::std::string& value);
  #if LANG_CXX11
  void set_photourl(::std::string&& value);
  #endif
  void set_photourl(const char* value);
  void set_photourl(const char* value, size_t size);
  ::std::string* mutable_photourl();
  ::std::string* release_photourl();
  void set_allocated_photourl(::std::string* photourl);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.LbsLocation Loc = 5;
  bool has_loc() const;
  void clear_loc();
  static const int kLocFieldNumber = 5;
  const ::micromsg::LbsLocation& loc() const;
  ::micromsg::LbsLocation* mutable_loc();
  ::micromsg::LbsLocation* release_loc();
  void set_allocated_loc(::micromsg::LbsLocation* loc);

  // required uint32 Count = 6;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 6;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.CreatePoiRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_name();
  void clear_has_name();
  void set_has_district();
  void clear_has_district();
  void set_has_street();
  void clear_has_street();
  void set_has_loc();
  void clear_has_loc();
  void set_has_count();
  void clear_has_count();
  void set_has_telephone();
  void clear_has_telephone();
  void set_has_photourl();
  void clear_has_photourl();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t > categories_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr district_;
  ::google::protobuf::internal::ArenaStringPtr street_;
  ::google::protobuf::internal::ArenaStringPtr telephone_;
  ::google::protobuf::internal::ArenaStringPtr photourl_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::LbsLocation* loc_;
  ::google::protobuf::uint32 count_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreatePoiResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.CreatePoiResponse) */ {
 public:
  CreatePoiResponse();
  virtual ~CreatePoiResponse();

  CreatePoiResponse(const CreatePoiResponse& from);

  inline CreatePoiResponse& operator=(const CreatePoiResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreatePoiResponse& default_instance();

  static inline const CreatePoiResponse* internal_default_instance() {
    return reinterpret_cast<const CreatePoiResponse*>(
               &_CreatePoiResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CreatePoiResponse* other);

  // implements Message ----------------------------------------------

  inline CreatePoiResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CreatePoiResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreatePoiResponse& from);
  void MergeFrom(const CreatePoiResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreatePoiResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string PoiId = 2;
  bool has_poiid() const;
  void clear_poiid();
  static const int kPoiIdFieldNumber = 2;
  const ::std::string& poiid() const;
  void set_poiid(const ::std::string& value);
  #if LANG_CXX11
  void set_poiid(::std::string&& value);
  #endif
  void set_poiid(const char* value);
  void set_poiid(const char* value, size_t size);
  ::std::string* mutable_poiid();
  ::std::string* release_poiid();
  void set_allocated_poiid(::std::string* poiid);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // @@protoc_insertion_point(class_scope:micromsg.CreatePoiResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_poiid();
  void clear_has_poiid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr poiid_;
  ::micromsg::BaseResponse* baseresponse_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetLbsLifeListRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetLbsLifeListRequest) */ {
 public:
  GetLbsLifeListRequest();
  virtual ~GetLbsLifeListRequest();

  GetLbsLifeListRequest(const GetLbsLifeListRequest& from);

  inline GetLbsLifeListRequest& operator=(const GetLbsLifeListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetLbsLifeListRequest& default_instance();

  static inline const GetLbsLifeListRequest* internal_default_instance() {
    return reinterpret_cast<const GetLbsLifeListRequest*>(
               &_GetLbsLifeListRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(GetLbsLifeListRequest* other);

  // implements Message ----------------------------------------------

  inline GetLbsLifeListRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetLbsLifeListRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetLbsLifeListRequest& from);
  void MergeFrom(const GetLbsLifeListRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetLbsLifeListRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Keyword = 6;
  bool has_keyword() const;
  void clear_keyword();
  static const int kKeywordFieldNumber = 6;
  const ::std::string& keyword() const;
  void set_keyword(const ::std::string& value);
  #if LANG_CXX11
  void set_keyword(::std::string&& value);
  #endif
  void set_keyword(const char* value);
  void set_keyword(const char* value, size_t size);
  ::std::string* mutable_keyword();
  ::std::string* release_keyword();
  void set_allocated_keyword(::std::string* keyword);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // optional .micromsg.SKBuiltinBuffer_t Buff = 4;
  bool has_buff() const;
  void clear_buff();
  static const int kBuffFieldNumber = 4;
  const ::micromsg::SKBuiltinBuffer_t& buff() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_buff();
  ::micromsg::SKBuiltinBuffer_t* release_buff();
  void set_allocated_buff(::micromsg::SKBuiltinBuffer_t* buff);

  // required .micromsg.LbsLocation Loc = 5;
  bool has_loc() const;
  void clear_loc();
  static const int kLocFieldNumber = 5;
  const ::micromsg::LbsLocation& loc() const;
  ::micromsg::LbsLocation* mutable_loc();
  ::micromsg::LbsLocation* release_loc();
  void set_allocated_loc(::micromsg::LbsLocation* loc);

  // required uint32 Opcode = 2;
  bool has_opcode() const;
  void clear_opcode();
  static const int kOpcodeFieldNumber = 2;
  ::google::protobuf::uint32 opcode() const;
  void set_opcode(::google::protobuf::uint32 value);

  // required uint32 Scene = 3;
  bool has_scene() const;
  void clear_scene();
  static const int kSceneFieldNumber = 3;
  ::google::protobuf::uint32 scene() const;
  void set_scene(::google::protobuf::uint32 value);

  // optional uint32 EntryTime = 7;
  bool has_entrytime() const;
  void clear_entrytime();
  static const int kEntryTimeFieldNumber = 7;
  ::google::protobuf::uint32 entrytime() const;
  void set_entrytime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetLbsLifeListRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_opcode();
  void clear_has_opcode();
  void set_has_scene();
  void clear_has_scene();
  void set_has_buff();
  void clear_has_buff();
  void set_has_loc();
  void clear_has_loc();
  void set_has_keyword();
  void clear_has_keyword();
  void set_has_entrytime();
  void clear_has_entrytime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr keyword_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::SKBuiltinBuffer_t* buff_;
  ::micromsg::LbsLocation* loc_;
  ::google::protobuf::uint32 opcode_;
  ::google::protobuf::uint32 scene_;
  ::google::protobuf::uint32 entrytime_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LbsLife : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.LbsLife) */ {
 public:
  LbsLife();
  virtual ~LbsLife();

  LbsLife(const LbsLife& from);

  inline LbsLife& operator=(const LbsLife& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LbsLife& default_instance();

  static inline const LbsLife* internal_default_instance() {
    return reinterpret_cast<const LbsLife*>(
               &_LbsLife_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(LbsLife* other);

  // implements Message ----------------------------------------------

  inline LbsLife* New() const PROTOBUF_FINAL { return New(NULL); }

  LbsLife* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LbsLife& from);
  void MergeFrom(const LbsLife& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LbsLife* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 IconIdxList = 5 [packed = true];
  int iconidxlist_size() const;
  void clear_iconidxlist();
  static const int kIconIdxListFieldNumber = 5;
  ::google::protobuf::uint32 iconidxlist(int index) const;
  void set_iconidxlist(int index, ::google::protobuf::uint32 value);
  void add_iconidxlist(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      iconidxlist() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_iconidxlist();

  // repeated .micromsg.SKBuiltinString_t DescList = 7;
  int desclist_size() const;
  void clear_desclist();
  static const int kDescListFieldNumber = 7;
  const ::micromsg::SKBuiltinString_t& desclist(int index) const;
  ::micromsg::SKBuiltinString_t* mutable_desclist(int index);
  ::micromsg::SKBuiltinString_t* add_desclist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
      mutable_desclist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
      desclist() const;

  // optional string BId = 1;
  bool has_bid() const;
  void clear_bid();
  static const int kBIdFieldNumber = 1;
  const ::std::string& bid() const;
  void set_bid(const ::std::string& value);
  #if LANG_CXX11
  void set_bid(::std::string&& value);
  #endif
  void set_bid(const char* value);
  void set_bid(const char* value, size_t size);
  ::std::string* mutable_bid();
  ::std::string* release_bid();
  void set_allocated_bid(::std::string* bid);

  // optional string Title = 2;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 2;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional string Link = 9;
  bool has_link() const;
  void clear_link();
  static const int kLinkFieldNumber = 9;
  const ::std::string& link() const;
  void set_link(const ::std::string& value);
  #if LANG_CXX11
  void set_link(::std::string&& value);
  #endif
  void set_link(const char* value);
  void set_link(const char* value, size_t size);
  ::std::string* mutable_link();
  ::std::string* release_link();
  void set_allocated_link(::std::string* link);

  // required float Price = 3;
  bool has_price() const;
  void clear_price();
  static const int kPriceFieldNumber = 3;
  float price() const;
  void set_price(float value);

  // required uint32 IconIdxCount = 4;
  bool has_iconidxcount() const;
  void clear_iconidxcount();
  static const int kIconIdxCountFieldNumber = 4;
  ::google::protobuf::uint32 iconidxcount() const;
  void set_iconidxcount(::google::protobuf::uint32 value);

  // required uint32 DescCount = 6;
  bool has_desccount() const;
  void clear_desccount();
  static const int kDescCountFieldNumber = 6;
  ::google::protobuf::uint32 desccount() const;
  void set_desccount(::google::protobuf::uint32 value);

  // required float Rate = 8;
  bool has_rate() const;
  void clear_rate();
  static const int kRateFieldNumber = 8;
  float rate() const;
  void set_rate(float value);

  // optional uint32 Type = 10;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 10;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.LbsLife)
 private:
  void set_has_bid();
  void clear_has_bid();
  void set_has_title();
  void clear_has_title();
  void set_has_price();
  void clear_has_price();
  void set_has_iconidxcount();
  void clear_has_iconidxcount();
  void set_has_desccount();
  void clear_has_desccount();
  void set_has_rate();
  void clear_has_rate();
  void set_has_link();
  void clear_has_link();
  void set_has_type();
  void clear_has_type();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > iconidxlist_;
  mutable int _iconidxlist_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t > desclist_;
  ::google::protobuf::internal::ArenaStringPtr bid_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr link_;
  float price_;
  ::google::protobuf::uint32 iconidxcount_;
  ::google::protobuf::uint32 desccount_;
  float rate_;
  ::google::protobuf::uint32 type_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetLbsFunctionListRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetLbsFunctionListRequest) */ {
 public:
  GetLbsFunctionListRequest();
  virtual ~GetLbsFunctionListRequest();

  GetLbsFunctionListRequest(const GetLbsFunctionListRequest& from);

  inline GetLbsFunctionListRequest& operator=(const GetLbsFunctionListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetLbsFunctionListRequest& default_instance();

  static inline const GetLbsFunctionListRequest* internal_default_instance() {
    return reinterpret_cast<const GetLbsFunctionListRequest*>(
               &_GetLbsFunctionListRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(GetLbsFunctionListRequest* other);

  // implements Message ----------------------------------------------

  inline GetLbsFunctionListRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetLbsFunctionListRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetLbsFunctionListRequest& from);
  void MergeFrom(const GetLbsFunctionListRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetLbsFunctionListRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.LbsLocation Loc = 2;
  bool has_loc() const;
  void clear_loc();
  static const int kLocFieldNumber = 2;
  const ::micromsg::LbsLocation& loc() const;
  ::micromsg::LbsLocation* mutable_loc();
  ::micromsg::LbsLocation* release_loc();
  void set_allocated_loc(::micromsg::LbsLocation* loc);

  // @@protoc_insertion_point(class_scope:micromsg.GetLbsFunctionListRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_loc();
  void clear_has_loc();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::LbsLocation* loc_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetLbsFunctionListResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetLbsFunctionListResponse) */ {
 public:
  GetLbsFunctionListResponse();
  virtual ~GetLbsFunctionListResponse();

  GetLbsFunctionListResponse(const GetLbsFunctionListResponse& from);

  inline GetLbsFunctionListResponse& operator=(const GetLbsFunctionListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetLbsFunctionListResponse& default_instance();

  static inline const GetLbsFunctionListResponse* internal_default_instance() {
    return reinterpret_cast<const GetLbsFunctionListResponse*>(
               &_GetLbsFunctionListResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(GetLbsFunctionListResponse* other);

  // implements Message ----------------------------------------------

  inline GetLbsFunctionListResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetLbsFunctionListResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetLbsFunctionListResponse& from);
  void MergeFrom(const GetLbsFunctionListResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetLbsFunctionListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string LbsFunctionList = 2;
  bool has_lbsfunctionlist() const;
  void clear_lbsfunctionlist();
  static const int kLbsFunctionListFieldNumber = 2;
  const ::std::string& lbsfunctionlist() const;
  void set_lbsfunctionlist(const ::std::string& value);
  #if LANG_CXX11
  void set_lbsfunctionlist(::std::string&& value);
  #endif
  void set_lbsfunctionlist(const char* value);
  void set_lbsfunctionlist(const char* value, size_t size);
  ::std::string* mutable_lbsfunctionlist();
  ::std::string* release_lbsfunctionlist();
  void set_allocated_lbsfunctionlist(::std::string* lbsfunctionlist);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // @@protoc_insertion_point(class_scope:micromsg.GetLbsFunctionListResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_lbsfunctionlist();
  void clear_has_lbsfunctionlist();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr lbsfunctionlist_;
  ::micromsg::BaseResponse* baseresponse_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetLbsLifeListResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetLbsLifeListResponse) */ {
 public:
  GetLbsLifeListResponse();
  virtual ~GetLbsLifeListResponse();

  GetLbsLifeListResponse(const GetLbsLifeListResponse& from);

  inline GetLbsLifeListResponse& operator=(const GetLbsLifeListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetLbsLifeListResponse& default_instance();

  static inline const GetLbsLifeListResponse* internal_default_instance() {
    return reinterpret_cast<const GetLbsLifeListResponse*>(
               &_GetLbsLifeListResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(GetLbsLifeListResponse* other);

  // implements Message ----------------------------------------------

  inline GetLbsLifeListResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetLbsLifeListResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetLbsLifeListResponse& from);
  void MergeFrom(const GetLbsLifeListResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetLbsLifeListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.SKBuiltinString_t IconList = 4;
  int iconlist_size() const;
  void clear_iconlist();
  static const int kIconListFieldNumber = 4;
  const ::micromsg::SKBuiltinString_t& iconlist(int index) const;
  ::micromsg::SKBuiltinString_t* mutable_iconlist(int index);
  ::micromsg::SKBuiltinString_t* add_iconlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
      mutable_iconlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
      iconlist() const;

  // repeated .micromsg.LbsLife LifeList = 6;
  int lifelist_size() const;
  void clear_lifelist();
  static const int kLifeListFieldNumber = 6;
  const ::micromsg::LbsLife& lifelist(int index) const;
  ::micromsg::LbsLife* mutable_lifelist(int index);
  ::micromsg::LbsLife* add_lifelist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::LbsLife >*
      mutable_lifelist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::LbsLife >&
      lifelist() const;

  // optional string LogoUrl = 8;
  bool has_logourl() const;
  void clear_logourl();
  static const int kLogoUrlFieldNumber = 8;
  const ::std::string& logourl() const;
  void set_logourl(const ::std::string& value);
  #if LANG_CXX11
  void set_logourl(::std::string&& value);
  #endif
  void set_logourl(const char* value);
  void set_logourl(const char* value, size_t size);
  ::std::string* mutable_logourl();
  ::std::string* release_logourl();
  void set_allocated_logourl(::std::string* logourl);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.SKBuiltinBuffer_t Buff = 2;
  bool has_buff() const;
  void clear_buff();
  static const int kBuffFieldNumber = 2;
  const ::micromsg::SKBuiltinBuffer_t& buff() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_buff();
  ::micromsg::SKBuiltinBuffer_t* release_buff();
  void set_allocated_buff(::micromsg::SKBuiltinBuffer_t* buff);

  // required uint32 IconCount = 3;
  bool has_iconcount() const;
  void clear_iconcount();
  static const int kIconCountFieldNumber = 3;
  ::google::protobuf::uint32 iconcount() const;
  void set_iconcount(::google::protobuf::uint32 value);

  // required uint32 LifeCount = 5;
  bool has_lifecount() const;
  void clear_lifecount();
  static const int kLifeCountFieldNumber = 5;
  ::google::protobuf::uint32 lifecount() const;
  void set_lifecount(::google::protobuf::uint32 value);

  // required uint32 ContinueFlag = 7;
  bool has_continueflag() const;
  void clear_continueflag();
  static const int kContinueFlagFieldNumber = 7;
  ::google::protobuf::uint32 continueflag() const;
  void set_continueflag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetLbsLifeListResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_buff();
  void clear_has_buff();
  void set_has_iconcount();
  void clear_has_iconcount();
  void set_has_lifecount();
  void clear_has_lifecount();
  void set_has_continueflag();
  void clear_has_continueflag();
  void set_has_logourl();
  void clear_has_logourl();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t > iconlist_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::LbsLife > lifelist_;
  ::google::protobuf::internal::ArenaStringPtr logourl_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::SKBuiltinBuffer_t* buff_;
  ::google::protobuf::uint32 iconcount_;
  ::google::protobuf::uint32 lifecount_;
  ::google::protobuf::uint32 continueflag_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LBSLifeActionBooking : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.LBSLifeActionBooking) */ {
 public:
  LBSLifeActionBooking();
  virtual ~LBSLifeActionBooking();

  LBSLifeActionBooking(const LBSLifeActionBooking& from);

  inline LBSLifeActionBooking& operator=(const LBSLifeActionBooking& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LBSLifeActionBooking& default_instance();

  static inline const LBSLifeActionBooking* internal_default_instance() {
    return reinterpret_cast<const LBSLifeActionBooking*>(
               &_LBSLifeActionBooking_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(LBSLifeActionBooking* other);

  // implements Message ----------------------------------------------

  inline LBSLifeActionBooking* New() const PROTOBUF_FINAL { return New(NULL); }

  LBSLifeActionBooking* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LBSLifeActionBooking& from);
  void MergeFrom(const LBSLifeActionBooking& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LBSLifeActionBooking* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Title = 2;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 2;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional string Url = 3;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 3;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // required uint32 Type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.LBSLifeActionBooking)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_title();
  void clear_has_title();
  void set_has_url();
  void clear_has_url();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::uint32 type_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LBSLifeActionBargain : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.LBSLifeActionBargain) */ {
 public:
  LBSLifeActionBargain();
  virtual ~LBSLifeActionBargain();

  LBSLifeActionBargain(const LBSLifeActionBargain& from);

  inline LBSLifeActionBargain& operator=(const LBSLifeActionBargain& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LBSLifeActionBargain& default_instance();

  static inline const LBSLifeActionBargain* internal_default_instance() {
    return reinterpret_cast<const LBSLifeActionBargain*>(
               &_LBSLifeActionBargain_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(LBSLifeActionBargain* other);

  // implements Message ----------------------------------------------

  inline LBSLifeActionBargain* New() const PROTOBUF_FINAL { return New(NULL); }

  LBSLifeActionBargain* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LBSLifeActionBargain& from);
  void MergeFrom(const LBSLifeActionBargain& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LBSLifeActionBargain* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Desc = 1;
  bool has_desc() const;
  void clear_desc();
  static const int kDescFieldNumber = 1;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_desc(::std::string&& value);
  #endif
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // optional string Url = 2;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 2;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional string IconUrl = 3;
  bool has_iconurl() const;
  void clear_iconurl();
  static const int kIconUrlFieldNumber = 3;
  const ::std::string& iconurl() const;
  void set_iconurl(const ::std::string& value);
  #if LANG_CXX11
  void set_iconurl(::std::string&& value);
  #endif
  void set_iconurl(const char* value);
  void set_iconurl(const char* value, size_t size);
  ::std::string* mutable_iconurl();
  ::std::string* release_iconurl();
  void set_allocated_iconurl(::std::string* iconurl);

  // @@protoc_insertion_point(class_scope:micromsg.LBSLifeActionBargain)
 private:
  void set_has_desc();
  void clear_has_desc();
  void set_has_url();
  void clear_has_url();
  void set_has_iconurl();
  void clear_has_iconurl();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr iconurl_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LBSLifeAction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.LBSLifeAction) */ {
 public:
  LBSLifeAction();
  virtual ~LBSLifeAction();

  LBSLifeAction(const LBSLifeAction& from);

  inline LBSLifeAction& operator=(const LBSLifeAction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LBSLifeAction& default_instance();

  static inline const LBSLifeAction* internal_default_instance() {
    return reinterpret_cast<const LBSLifeAction*>(
               &_LBSLifeAction_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(LBSLifeAction* other);

  // implements Message ----------------------------------------------

  inline LBSLifeAction* New() const PROTOBUF_FINAL { return New(NULL); }

  LBSLifeAction* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LBSLifeAction& from);
  void MergeFrom(const LBSLifeAction& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LBSLifeAction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.LBSLifeActionBooking BookingList = 6;
  int bookinglist_size() const;
  void clear_bookinglist();
  static const int kBookingListFieldNumber = 6;
  const ::micromsg::LBSLifeActionBooking& bookinglist(int index) const;
  ::micromsg::LBSLifeActionBooking* mutable_bookinglist(int index);
  ::micromsg::LBSLifeActionBooking* add_bookinglist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::LBSLifeActionBooking >*
      mutable_bookinglist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::LBSLifeActionBooking >&
      bookinglist() const;

  // repeated .micromsg.LBSLifeActionBargain BargainList = 8;
  int bargainlist_size() const;
  void clear_bargainlist();
  static const int kBargainListFieldNumber = 8;
  const ::micromsg::LBSLifeActionBargain& bargainlist(int index) const;
  ::micromsg::LBSLifeActionBargain* mutable_bargainlist(int index);
  ::micromsg::LBSLifeActionBargain* add_bargainlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::LBSLifeActionBargain >*
      mutable_bargainlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::LBSLifeActionBargain >&
      bargainlist() const;

  // optional string Name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string Desc = 3;
  bool has_desc() const;
  void clear_desc();
  static const int kDescFieldNumber = 3;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_desc(::std::string&& value);
  #endif
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // optional string Link = 4;
  bool has_link() const;
  void clear_link();
  static const int kLinkFieldNumber = 4;
  const ::std::string& link() const;
  void set_link(const ::std::string& value);
  #if LANG_CXX11
  void set_link(::std::string&& value);
  #endif
  void set_link(const char* value);
  void set_link(const char* value, size_t size);
  ::std::string* mutable_link();
  ::std::string* release_link();
  void set_allocated_link(::std::string* link);

  // required uint32 Type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // required uint32 BookingCount = 5;
  bool has_bookingcount() const;
  void clear_bookingcount();
  static const int kBookingCountFieldNumber = 5;
  ::google::protobuf::uint32 bookingcount() const;
  void set_bookingcount(::google::protobuf::uint32 value);

  // required uint32 BargainCount = 7;
  bool has_bargaincount() const;
  void clear_bargaincount();
  static const int kBargainCountFieldNumber = 7;
  ::google::protobuf::uint32 bargaincount() const;
  void set_bargaincount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.LBSLifeAction)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_name();
  void clear_has_name();
  void set_has_desc();
  void clear_has_desc();
  void set_has_link();
  void clear_has_link();
  void set_has_bookingcount();
  void clear_has_bookingcount();
  void set_has_bargaincount();
  void clear_has_bargaincount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::LBSLifeActionBooking > bookinglist_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::LBSLifeActionBargain > bargainlist_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::internal::ArenaStringPtr link_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 bookingcount_;
  ::google::protobuf::uint32 bargaincount_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LBSLifeActionList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.LBSLifeActionList) */ {
 public:
  LBSLifeActionList();
  virtual ~LBSLifeActionList();

  LBSLifeActionList(const LBSLifeActionList& from);

  inline LBSLifeActionList& operator=(const LBSLifeActionList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LBSLifeActionList& default_instance();

  static inline const LBSLifeActionList* internal_default_instance() {
    return reinterpret_cast<const LBSLifeActionList*>(
               &_LBSLifeActionList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(LBSLifeActionList* other);

  // implements Message ----------------------------------------------

  inline LBSLifeActionList* New() const PROTOBUF_FINAL { return New(NULL); }

  LBSLifeActionList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LBSLifeActionList& from);
  void MergeFrom(const LBSLifeActionList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LBSLifeActionList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.LBSLifeAction LifeAction = 2;
  bool has_lifeaction() const;
  void clear_lifeaction();
  static const int kLifeActionFieldNumber = 2;
  const ::micromsg::LBSLifeAction& lifeaction() const;
  ::micromsg::LBSLifeAction* mutable_lifeaction();
  ::micromsg::LBSLifeAction* release_lifeaction();
  void set_allocated_lifeaction(::micromsg::LBSLifeAction* lifeaction);

  // required uint32 Type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.LBSLifeActionList)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_lifeaction();
  void clear_has_lifeaction();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::LBSLifeAction* lifeaction_;
  ::google::protobuf::uint32 type_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LbsLifeDetail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.LbsLifeDetail) */ {
 public:
  LbsLifeDetail();
  virtual ~LbsLifeDetail();

  LbsLifeDetail(const LbsLifeDetail& from);

  inline LbsLifeDetail& operator=(const LbsLifeDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LbsLifeDetail& default_instance();

  static inline const LbsLifeDetail* internal_default_instance() {
    return reinterpret_cast<const LbsLifeDetail*>(
               &_LbsLifeDetail_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(LbsLifeDetail* other);

  // implements Message ----------------------------------------------

  inline LbsLifeDetail* New() const PROTOBUF_FINAL { return New(NULL); }

  LbsLifeDetail* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LbsLifeDetail& from);
  void MergeFrom(const LbsLifeDetail& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LbsLifeDetail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.SKBuiltinString_t CIList = 3;
  int cilist_size() const;
  void clear_cilist();
  static const int kCIListFieldNumber = 3;
  const ::micromsg::SKBuiltinString_t& cilist(int index) const;
  ::micromsg::SKBuiltinString_t* mutable_cilist(int index);
  ::micromsg::SKBuiltinString_t* add_cilist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
      mutable_cilist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
      cilist() const;

  // repeated .micromsg.LBSLifeActionList ActionList = 7;
  int actionlist_size() const;
  void clear_actionlist();
  static const int kActionListFieldNumber = 7;
  const ::micromsg::LBSLifeActionList& actionlist(int index) const;
  ::micromsg::LBSLifeActionList* mutable_actionlist(int index);
  ::micromsg::LBSLifeActionList* add_actionlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::LBSLifeActionList >*
      mutable_actionlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::LBSLifeActionList >&
      actionlist() const;

  // optional string ThumbUrl = 4;
  bool has_thumburl() const;
  void clear_thumburl();
  static const int kThumbUrlFieldNumber = 4;
  const ::std::string& thumburl() const;
  void set_thumburl(const ::std::string& value);
  #if LANG_CXX11
  void set_thumburl(::std::string&& value);
  #endif
  void set_thumburl(const char* value);
  void set_thumburl(const char* value, size_t size);
  ::std::string* mutable_thumburl();
  ::std::string* release_thumburl();
  void set_allocated_thumburl(::std::string* thumburl);

  // optional string PhotoLink = 5;
  bool has_photolink() const;
  void clear_photolink();
  static const int kPhotoLinkFieldNumber = 5;
  const ::std::string& photolink() const;
  void set_photolink(const ::std::string& value);
  #if LANG_CXX11
  void set_photolink(::std::string&& value);
  #endif
  void set_photolink(const char* value);
  void set_photolink(const char* value, size_t size);
  ::std::string* mutable_photolink();
  ::std::string* release_photolink();
  void set_allocated_photolink(::std::string* photolink);

  // required .micromsg.LbsLife Life = 1;
  bool has_life() const;
  void clear_life();
  static const int kLifeFieldNumber = 1;
  const ::micromsg::LbsLife& life() const;
  ::micromsg::LbsLife* mutable_life();
  ::micromsg::LbsLife* release_life();
  void set_allocated_life(::micromsg::LbsLife* life);

  // required uint32 CICount = 2;
  bool has_cicount() const;
  void clear_cicount();
  static const int kCICountFieldNumber = 2;
  ::google::protobuf::uint32 cicount() const;
  void set_cicount(::google::protobuf::uint32 value);

  // required uint32 ActionCount = 6;
  bool has_actioncount() const;
  void clear_actioncount();
  static const int kActionCountFieldNumber = 6;
  ::google::protobuf::uint32 actioncount() const;
  void set_actioncount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.LbsLifeDetail)
 private:
  void set_has_life();
  void clear_has_life();
  void set_has_cicount();
  void clear_has_cicount();
  void set_has_thumburl();
  void clear_has_thumburl();
  void set_has_photolink();
  void clear_has_photolink();
  void set_has_actioncount();
  void clear_has_actioncount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t > cilist_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::LBSLifeActionList > actionlist_;
  ::google::protobuf::internal::ArenaStringPtr thumburl_;
  ::google::protobuf::internal::ArenaStringPtr photolink_;
  ::micromsg::LbsLife* life_;
  ::google::protobuf::uint32 cicount_;
  ::google::protobuf::uint32 actioncount_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetLbsLifeDetailRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetLbsLifeDetailRequest) */ {
 public:
  GetLbsLifeDetailRequest();
  virtual ~GetLbsLifeDetailRequest();

  GetLbsLifeDetailRequest(const GetLbsLifeDetailRequest& from);

  inline GetLbsLifeDetailRequest& operator=(const GetLbsLifeDetailRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetLbsLifeDetailRequest& default_instance();

  static inline const GetLbsLifeDetailRequest* internal_default_instance() {
    return reinterpret_cast<const GetLbsLifeDetailRequest*>(
               &_GetLbsLifeDetailRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(GetLbsLifeDetailRequest* other);

  // implements Message ----------------------------------------------

  inline GetLbsLifeDetailRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetLbsLifeDetailRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetLbsLifeDetailRequest& from);
  void MergeFrom(const GetLbsLifeDetailRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetLbsLifeDetailRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string BusinessId = 2;
  bool has_businessid() const;
  void clear_businessid();
  static const int kBusinessIdFieldNumber = 2;
  const ::std::string& businessid() const;
  void set_businessid(const ::std::string& value);
  #if LANG_CXX11
  void set_businessid(::std::string&& value);
  #endif
  void set_businessid(const char* value);
  void set_businessid(const char* value, size_t size);
  ::std::string* mutable_businessid();
  ::std::string* release_businessid();
  void set_allocated_businessid(::std::string* businessid);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // @@protoc_insertion_point(class_scope:micromsg.GetLbsLifeDetailRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_businessid();
  void clear_has_businessid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr businessid_;
  ::micromsg::BaseRequest* baserequest_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetLbsLifeDetailResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetLbsLifeDetailResponse) */ {
 public:
  GetLbsLifeDetailResponse();
  virtual ~GetLbsLifeDetailResponse();

  GetLbsLifeDetailResponse(const GetLbsLifeDetailResponse& from);

  inline GetLbsLifeDetailResponse& operator=(const GetLbsLifeDetailResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetLbsLifeDetailResponse& default_instance();

  static inline const GetLbsLifeDetailResponse* internal_default_instance() {
    return reinterpret_cast<const GetLbsLifeDetailResponse*>(
               &_GetLbsLifeDetailResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(GetLbsLifeDetailResponse* other);

  // implements Message ----------------------------------------------

  inline GetLbsLifeDetailResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetLbsLifeDetailResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetLbsLifeDetailResponse& from);
  void MergeFrom(const GetLbsLifeDetailResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetLbsLifeDetailResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.LbsLifeDetail LifeDetail = 2;
  bool has_lifedetail() const;
  void clear_lifedetail();
  static const int kLifeDetailFieldNumber = 2;
  const ::micromsg::LbsLifeDetail& lifedetail() const;
  ::micromsg::LbsLifeDetail* mutable_lifedetail();
  ::micromsg::LbsLifeDetail* release_lifedetail();
  void set_allocated_lifedetail(::micromsg::LbsLifeDetail* lifedetail);

  // @@protoc_insertion_point(class_scope:micromsg.GetLbsLifeDetailResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_lifedetail();
  void clear_has_lifedetail();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::LbsLifeDetail* lifedetail_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LbsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.LbsRequest) */ {
 public:
  LbsRequest();
  virtual ~LbsRequest();

  LbsRequest(const LbsRequest& from);

  inline LbsRequest& operator=(const LbsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LbsRequest& default_instance();

  static inline const LbsRequest* internal_default_instance() {
    return reinterpret_cast<const LbsRequest*>(
               &_LbsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(LbsRequest* other);

  // implements Message ----------------------------------------------

  inline LbsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  LbsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LbsRequest& from);
  void MergeFrom(const LbsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LbsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string MacAddr = 6;
  bool has_macaddr() const;
  void clear_macaddr();
  static const int kMacAddrFieldNumber = 6;
  const ::std::string& macaddr() const;
  void set_macaddr(const ::std::string& value);
  #if LANG_CXX11
  void set_macaddr(::std::string&& value);
  #endif
  void set_macaddr(const char* value);
  void set_macaddr(const char* value, size_t size);
  ::std::string* mutable_macaddr();
  ::std::string* release_macaddr();
  void set_allocated_macaddr(::std::string* macaddr);

  // optional string CellId = 7;
  bool has_cellid() const;
  void clear_cellid();
  static const int kCellIdFieldNumber = 7;
  const ::std::string& cellid() const;
  void set_cellid(const ::std::string& value);
  #if LANG_CXX11
  void set_cellid(::std::string&& value);
  #endif
  void set_cellid(const char* value);
  void set_cellid(const char* value, size_t size);
  ::std::string* mutable_cellid();
  ::std::string* release_cellid();
  void set_allocated_cellid(::std::string* cellid);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 OpCode = 2;
  bool has_opcode() const;
  void clear_opcode();
  static const int kOpCodeFieldNumber = 2;
  ::google::protobuf::uint32 opcode() const;
  void set_opcode(::google::protobuf::uint32 value);

  // required float Longitude = 3;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 3;
  float longitude() const;
  void set_longitude(float value);

  // required float Latitude = 4;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 4;
  float latitude() const;
  void set_latitude(float value);

  // required int32 Precision = 5;
  bool has_precision() const;
  void clear_precision();
  static const int kPrecisionFieldNumber = 5;
  ::google::protobuf::int32 precision() const;
  void set_precision(::google::protobuf::int32 value);

  // optional int32 GPSSource = 8;
  bool has_gpssource() const;
  void clear_gpssource();
  static const int kGPSSourceFieldNumber = 8;
  ::google::protobuf::int32 gpssource() const;
  void set_gpssource(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.LbsRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_opcode();
  void clear_has_opcode();
  void set_has_longitude();
  void clear_has_longitude();
  void set_has_latitude();
  void clear_has_latitude();
  void set_has_precision();
  void clear_has_precision();
  void set_has_macaddr();
  void clear_has_macaddr();
  void set_has_cellid();
  void clear_has_cellid();
  void set_has_gpssource();
  void clear_has_gpssource();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr macaddr_;
  ::google::protobuf::internal::ArenaStringPtr cellid_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 opcode_;
  float longitude_;
  float latitude_;
  ::google::protobuf::int32 precision_;
  ::google::protobuf::int32 gpssource_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AlbumLbsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.AlbumLbsRequest) */ {
 public:
  AlbumLbsRequest();
  virtual ~AlbumLbsRequest();

  AlbumLbsRequest(const AlbumLbsRequest& from);

  inline AlbumLbsRequest& operator=(const AlbumLbsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AlbumLbsRequest& default_instance();

  static inline const AlbumLbsRequest* internal_default_instance() {
    return reinterpret_cast<const AlbumLbsRequest*>(
               &_AlbumLbsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(AlbumLbsRequest* other);

  // implements Message ----------------------------------------------

  inline AlbumLbsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  AlbumLbsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AlbumLbsRequest& from);
  void MergeFrom(const AlbumLbsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AlbumLbsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string MacAddr = 6;
  bool has_macaddr() const;
  void clear_macaddr();
  static const int kMacAddrFieldNumber = 6;
  const ::std::string& macaddr() const;
  void set_macaddr(const ::std::string& value);
  #if LANG_CXX11
  void set_macaddr(::std::string&& value);
  #endif
  void set_macaddr(const char* value);
  void set_macaddr(const char* value, size_t size);
  ::std::string* mutable_macaddr();
  ::std::string* release_macaddr();
  void set_allocated_macaddr(::std::string* macaddr);

  // optional string CellId = 7;
  bool has_cellid() const;
  void clear_cellid();
  static const int kCellIdFieldNumber = 7;
  const ::std::string& cellid() const;
  void set_cellid(const ::std::string& value);
  #if LANG_CXX11
  void set_cellid(::std::string&& value);
  #endif
  void set_cellid(const char* value);
  void set_cellid(const char* value, size_t size);
  ::std::string* mutable_cellid();
  ::std::string* release_cellid();
  void set_allocated_cellid(::std::string* cellid);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 OpCode = 2;
  bool has_opcode() const;
  void clear_opcode();
  static const int kOpCodeFieldNumber = 2;
  ::google::protobuf::uint32 opcode() const;
  void set_opcode(::google::protobuf::uint32 value);

  // required float Longitude = 3;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 3;
  float longitude() const;
  void set_longitude(float value);

  // required float Latitude = 4;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 4;
  float latitude() const;
  void set_latitude(float value);

  // required int32 Precision = 5;
  bool has_precision() const;
  void clear_precision();
  static const int kPrecisionFieldNumber = 5;
  ::google::protobuf::int32 precision() const;
  void set_precision(::google::protobuf::int32 value);

  // required int32 GPSSource = 8;
  bool has_gpssource() const;
  void clear_gpssource();
  static const int kGPSSourceFieldNumber = 8;
  ::google::protobuf::int32 gpssource() const;
  void set_gpssource(::google::protobuf::int32 value);

  // required uint32 SBTime = 9;
  bool has_sbtime() const;
  void clear_sbtime();
  static const int kSBTimeFieldNumber = 9;
  ::google::protobuf::uint32 sbtime() const;
  void set_sbtime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.AlbumLbsRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_opcode();
  void clear_has_opcode();
  void set_has_longitude();
  void clear_has_longitude();
  void set_has_latitude();
  void clear_has_latitude();
  void set_has_precision();
  void clear_has_precision();
  void set_has_macaddr();
  void clear_has_macaddr();
  void set_has_cellid();
  void clear_has_cellid();
  void set_has_gpssource();
  void clear_has_gpssource();
  void set_has_sbtime();
  void clear_has_sbtime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr macaddr_;
  ::google::protobuf::internal::ArenaStringPtr cellid_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 opcode_;
  float longitude_;
  float latitude_;
  ::google::protobuf::int32 precision_;
  ::google::protobuf::int32 gpssource_;
  ::google::protobuf::uint32 sbtime_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LbsContactInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.LbsContactInfo) */ {
 public:
  LbsContactInfo();
  virtual ~LbsContactInfo();

  LbsContactInfo(const LbsContactInfo& from);

  inline LbsContactInfo& operator=(const LbsContactInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LbsContactInfo& default_instance();

  static inline const LbsContactInfo* internal_default_instance() {
    return reinterpret_cast<const LbsContactInfo*>(
               &_LbsContactInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(LbsContactInfo* other);

  // implements Message ----------------------------------------------

  inline LbsContactInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  LbsContactInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LbsContactInfo& from);
  void MergeFrom(const LbsContactInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LbsContactInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string UserName = 1;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string NickName = 2;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNickNameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional string Province = 3;
  bool has_province() const;
  void clear_province();
  static const int kProvinceFieldNumber = 3;
  const ::std::string& province() const;
  void set_province(const ::std::string& value);
  #if LANG_CXX11
  void set_province(::std::string&& value);
  #endif
  void set_province(const char* value);
  void set_province(const char* value, size_t size);
  ::std::string* mutable_province();
  ::std::string* release_province();
  void set_allocated_province(::std::string* province);

  // optional string City = 4;
  bool has_city() const;
  void clear_city();
  static const int kCityFieldNumber = 4;
  const ::std::string& city() const;
  void set_city(const ::std::string& value);
  #if LANG_CXX11
  void set_city(::std::string&& value);
  #endif
  void set_city(const char* value);
  void set_city(const char* value, size_t size);
  ::std::string* mutable_city();
  ::std::string* release_city();
  void set_allocated_city(::std::string* city);

  // optional string Signature = 5;
  bool has_signature() const;
  void clear_signature();
  static const int kSignatureFieldNumber = 5;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const char* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // optional string Distance = 6;
  bool has_distance() const;
  void clear_distance();
  static const int kDistanceFieldNumber = 6;
  const ::std::string& distance() const;
  void set_distance(const ::std::string& value);
  #if LANG_CXX11
  void set_distance(::std::string&& value);
  #endif
  void set_distance(const char* value);
  void set_distance(const char* value, size_t size);
  ::std::string* mutable_distance();
  ::std::string* release_distance();
  void set_allocated_distance(::std::string* distance);

  // optional string VerifyInfo = 10;
  bool has_verifyinfo() const;
  void clear_verifyinfo();
  static const int kVerifyInfoFieldNumber = 10;
  const ::std::string& verifyinfo() const;
  void set_verifyinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_verifyinfo(::std::string&& value);
  #endif
  void set_verifyinfo(const char* value);
  void set_verifyinfo(const char* value, size_t size);
  ::std::string* mutable_verifyinfo();
  ::std::string* release_verifyinfo();
  void set_allocated_verifyinfo(::std::string* verifyinfo);

  // optional string VerifyContent = 11;
  bool has_verifycontent() const;
  void clear_verifycontent();
  static const int kVerifyContentFieldNumber = 11;
  const ::std::string& verifycontent() const;
  void set_verifycontent(const ::std::string& value);
  #if LANG_CXX11
  void set_verifycontent(::std::string&& value);
  #endif
  void set_verifycontent(const char* value);
  void set_verifycontent(const char* value, size_t size);
  ::std::string* mutable_verifycontent();
  ::std::string* release_verifycontent();
  void set_allocated_verifycontent(::std::string* verifycontent);

  // optional string Alias = 12;
  bool has_alias() const;
  void clear_alias();
  static const int kAliasFieldNumber = 12;
  const ::std::string& alias() const;
  void set_alias(const ::std::string& value);
  #if LANG_CXX11
  void set_alias(::std::string&& value);
  #endif
  void set_alias(const char* value);
  void set_alias(const char* value, size_t size);
  ::std::string* mutable_alias();
  ::std::string* release_alias();
  void set_allocated_alias(::std::string* alias);

  // optional string Weibo = 13;
  bool has_weibo() const;
  void clear_weibo();
  static const int kWeiboFieldNumber = 13;
  const ::std::string& weibo() const;
  void set_weibo(const ::std::string& value);
  #if LANG_CXX11
  void set_weibo(::std::string&& value);
  #endif
  void set_weibo(const char* value);
  void set_weibo(const char* value, size_t size);
  ::std::string* mutable_weibo();
  ::std::string* release_weibo();
  void set_allocated_weibo(::std::string* weibo);

  // optional string WeiboNickname = 14;
  bool has_weibonickname() const;
  void clear_weibonickname();
  static const int kWeiboNicknameFieldNumber = 14;
  const ::std::string& weibonickname() const;
  void set_weibonickname(const ::std::string& value);
  #if LANG_CXX11
  void set_weibonickname(::std::string&& value);
  #endif
  void set_weibonickname(const char* value);
  void set_weibonickname(const char* value, size_t size);
  ::std::string* mutable_weibonickname();
  ::std::string* release_weibonickname();
  void set_allocated_weibonickname(::std::string* weibonickname);

  // optional string Country = 21;
  bool has_country() const;
  void clear_country();
  static const int kCountryFieldNumber = 21;
  const ::std::string& country() const;
  void set_country(const ::std::string& value);
  #if LANG_CXX11
  void set_country(::std::string&& value);
  #endif
  void set_country(const char* value);
  void set_country(const char* value, size_t size);
  ::std::string* mutable_country();
  ::std::string* release_country();
  void set_allocated_country(::std::string* country);

  // optional string BigHeadImgUrl = 22;
  bool has_bigheadimgurl() const;
  void clear_bigheadimgurl();
  static const int kBigHeadImgUrlFieldNumber = 22;
  const ::std::string& bigheadimgurl() const;
  void set_bigheadimgurl(const ::std::string& value);
  #if LANG_CXX11
  void set_bigheadimgurl(::std::string&& value);
  #endif
  void set_bigheadimgurl(const char* value);
  void set_bigheadimgurl(const char* value, size_t size);
  ::std::string* mutable_bigheadimgurl();
  ::std::string* release_bigheadimgurl();
  void set_allocated_bigheadimgurl(::std::string* bigheadimgurl);

  // optional string SmallHeadImgUrl = 23;
  bool has_smallheadimgurl() const;
  void clear_smallheadimgurl();
  static const int kSmallHeadImgUrlFieldNumber = 23;
  const ::std::string& smallheadimgurl() const;
  void set_smallheadimgurl(const ::std::string& value);
  #if LANG_CXX11
  void set_smallheadimgurl(::std::string&& value);
  #endif
  void set_smallheadimgurl(const char* value);
  void set_smallheadimgurl(const char* value, size_t size);
  ::std::string* mutable_smallheadimgurl();
  ::std::string* release_smallheadimgurl();
  void set_allocated_smallheadimgurl(::std::string* smallheadimgurl);

  // optional string MyBrandList = 24;
  bool has_mybrandlist() const;
  void clear_mybrandlist();
  static const int kMyBrandListFieldNumber = 24;
  const ::std::string& mybrandlist() const;
  void set_mybrandlist(const ::std::string& value);
  #if LANG_CXX11
  void set_mybrandlist(::std::string&& value);
  #endif
  void set_mybrandlist(const char* value);
  void set_mybrandlist(const char* value, size_t size);
  ::std::string* mutable_mybrandlist();
  ::std::string* release_mybrandlist();
  void set_allocated_mybrandlist(::std::string* mybrandlist);

  // optional string AntispamTicket = 26;
  bool has_antispamticket() const;
  void clear_antispamticket();
  static const int kAntispamTicketFieldNumber = 26;
  const ::std::string& antispamticket() const;
  void set_antispamticket(const ::std::string& value);
  #if LANG_CXX11
  void set_antispamticket(::std::string&& value);
  #endif
  void set_antispamticket(const char* value);
  void set_antispamticket(const char* value, size_t size);
  ::std::string* mutable_antispamticket();
  ::std::string* release_antispamticket();
  void set_allocated_antispamticket(::std::string* antispamticket);

  // optional .micromsg.SnsUserInfo SnsUserInfo = 20;
  bool has_snsuserinfo() const;
  void clear_snsuserinfo();
  static const int kSnsUserInfoFieldNumber = 20;
  const ::micromsg::SnsUserInfo& snsuserinfo() const;
  ::micromsg::SnsUserInfo* mutable_snsuserinfo();
  ::micromsg::SnsUserInfo* release_snsuserinfo();
  void set_allocated_snsuserinfo(::micromsg::SnsUserInfo* snsuserinfo);

  // optional .micromsg.CustomizedInfo CustomizedInfo = 25;
  bool has_customizedinfo() const;
  void clear_customizedinfo();
  static const int kCustomizedInfoFieldNumber = 25;
  const ::micromsg::CustomizedInfo& customizedinfo() const;
  ::micromsg::CustomizedInfo* mutable_customizedinfo();
  ::micromsg::CustomizedInfo* release_customizedinfo();
  void set_allocated_customizedinfo(::micromsg::CustomizedInfo* customizedinfo);

  // required int32 Sex = 7;
  bool has_sex() const;
  void clear_sex();
  static const int kSexFieldNumber = 7;
  ::google::protobuf::int32 sex() const;
  void set_sex(::google::protobuf::int32 value);

  // required uint32 ImgStatus = 8;
  bool has_imgstatus() const;
  void clear_imgstatus();
  static const int kImgStatusFieldNumber = 8;
  ::google::protobuf::uint32 imgstatus() const;
  void set_imgstatus(::google::protobuf::uint32 value);

  // optional uint32 VerifyFlag = 9;
  bool has_verifyflag() const;
  void clear_verifyflag();
  static const int kVerifyFlagFieldNumber = 9;
  ::google::protobuf::uint32 verifyflag() const;
  void set_verifyflag(::google::protobuf::uint32 value);

  // optional uint32 WeiboFlag = 15;
  bool has_weiboflag() const;
  void clear_weiboflag();
  static const int kWeiboFlagFieldNumber = 15;
  ::google::protobuf::uint32 weiboflag() const;
  void set_weiboflag(::google::protobuf::uint32 value);

  // optional int32 HeadImgVersion = 19;
  bool has_headimgversion() const;
  void clear_headimgversion();
  static const int kHeadImgVersionFieldNumber = 19;
  ::google::protobuf::int32 headimgversion() const;
  void set_headimgversion(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.LbsContactInfo)
 private:
  void set_has_username();
  void clear_has_username();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_province();
  void clear_has_province();
  void set_has_city();
  void clear_has_city();
  void set_has_signature();
  void clear_has_signature();
  void set_has_distance();
  void clear_has_distance();
  void set_has_sex();
  void clear_has_sex();
  void set_has_imgstatus();
  void clear_has_imgstatus();
  void set_has_verifyflag();
  void clear_has_verifyflag();
  void set_has_verifyinfo();
  void clear_has_verifyinfo();
  void set_has_verifycontent();
  void clear_has_verifycontent();
  void set_has_alias();
  void clear_has_alias();
  void set_has_weibo();
  void clear_has_weibo();
  void set_has_weibonickname();
  void clear_has_weibonickname();
  void set_has_weiboflag();
  void clear_has_weiboflag();
  void set_has_headimgversion();
  void clear_has_headimgversion();
  void set_has_snsuserinfo();
  void clear_has_snsuserinfo();
  void set_has_country();
  void clear_has_country();
  void set_has_bigheadimgurl();
  void clear_has_bigheadimgurl();
  void set_has_smallheadimgurl();
  void clear_has_smallheadimgurl();
  void set_has_mybrandlist();
  void clear_has_mybrandlist();
  void set_has_customizedinfo();
  void clear_has_customizedinfo();
  void set_has_antispamticket();
  void clear_has_antispamticket();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr province_;
  ::google::protobuf::internal::ArenaStringPtr city_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  ::google::protobuf::internal::ArenaStringPtr distance_;
  ::google::protobuf::internal::ArenaStringPtr verifyinfo_;
  ::google::protobuf::internal::ArenaStringPtr verifycontent_;
  ::google::protobuf::internal::ArenaStringPtr alias_;
  ::google::protobuf::internal::ArenaStringPtr weibo_;
  ::google::protobuf::internal::ArenaStringPtr weibonickname_;
  ::google::protobuf::internal::ArenaStringPtr country_;
  ::google::protobuf::internal::ArenaStringPtr bigheadimgurl_;
  ::google::protobuf::internal::ArenaStringPtr smallheadimgurl_;
  ::google::protobuf::internal::ArenaStringPtr mybrandlist_;
  ::google::protobuf::internal::ArenaStringPtr antispamticket_;
  ::micromsg::SnsUserInfo* snsuserinfo_;
  ::micromsg::CustomizedInfo* customizedinfo_;
  ::google::protobuf::int32 sex_;
  ::google::protobuf::uint32 imgstatus_;
  ::google::protobuf::uint32 verifyflag_;
  ::google::protobuf::uint32 weiboflag_;
  ::google::protobuf::int32 headimgversion_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LbsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.LbsResponse) */ {
 public:
  LbsResponse();
  virtual ~LbsResponse();

  LbsResponse(const LbsResponse& from);

  inline LbsResponse& operator=(const LbsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LbsResponse& default_instance();

  static inline const LbsResponse* internal_default_instance() {
    return reinterpret_cast<const LbsResponse*>(
               &_LbsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(LbsResponse* other);

  // implements Message ----------------------------------------------

  inline LbsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  LbsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LbsResponse& from);
  void MergeFrom(const LbsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LbsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.LbsContactInfo ContactList = 3;
  int contactlist_size() const;
  void clear_contactlist();
  static const int kContactListFieldNumber = 3;
  const ::micromsg::LbsContactInfo& contactlist(int index) const;
  ::micromsg::LbsContactInfo* mutable_contactlist(int index);
  ::micromsg::LbsContactInfo* add_contactlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::LbsContactInfo >*
      mutable_contactlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::LbsContactInfo >&
      contactlist() const;

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 ContactCount = 2;
  bool has_contactcount() const;
  void clear_contactcount();
  static const int kContactCountFieldNumber = 2;
  ::google::protobuf::uint32 contactcount() const;
  void set_contactcount(::google::protobuf::uint32 value);

  // optional uint32 State = 4;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 4;
  ::google::protobuf::uint32 state() const;
  void set_state(::google::protobuf::uint32 value);

  // optional uint32 FlushTime = 5;
  bool has_flushtime() const;
  void clear_flushtime();
  static const int kFlushTimeFieldNumber = 5;
  ::google::protobuf::uint32 flushtime() const;
  void set_flushtime(::google::protobuf::uint32 value);

  // optional uint32 IsShowRoom = 6;
  bool has_isshowroom() const;
  void clear_isshowroom();
  static const int kIsShowRoomFieldNumber = 6;
  ::google::protobuf::uint32 isshowroom() const;
  void set_isshowroom(::google::protobuf::uint32 value);

  // optional uint32 RoomMemberCount = 7;
  bool has_roommembercount() const;
  void clear_roommembercount();
  static const int kRoomMemberCountFieldNumber = 7;
  ::google::protobuf::uint32 roommembercount() const;
  void set_roommembercount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.LbsResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_contactcount();
  void clear_has_contactcount();
  void set_has_state();
  void clear_has_state();
  void set_has_flushtime();
  void clear_has_flushtime();
  void set_has_isshowroom();
  void clear_has_isshowroom();
  void set_has_roommembercount();
  void clear_has_roommembercount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::LbsContactInfo > contactlist_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 contactcount_;
  ::google::protobuf::uint32 state_;
  ::google::protobuf::uint32 flushtime_;
  ::google::protobuf::uint32 isshowroom_;
  ::google::protobuf::uint32 roommembercount_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AlbumLbsContactInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.AlbumLbsContactInfo) */ {
 public:
  AlbumLbsContactInfo();
  virtual ~AlbumLbsContactInfo();

  AlbumLbsContactInfo(const AlbumLbsContactInfo& from);

  inline AlbumLbsContactInfo& operator=(const AlbumLbsContactInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AlbumLbsContactInfo& default_instance();

  static inline const AlbumLbsContactInfo* internal_default_instance() {
    return reinterpret_cast<const AlbumLbsContactInfo*>(
               &_AlbumLbsContactInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(AlbumLbsContactInfo* other);

  // implements Message ----------------------------------------------

  inline AlbumLbsContactInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AlbumLbsContactInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AlbumLbsContactInfo& from);
  void MergeFrom(const AlbumLbsContactInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AlbumLbsContactInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string UserName = 1;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // @@protoc_insertion_point(class_scope:micromsg.AlbumLbsContactInfo)
 private:
  void set_has_username();
  void clear_has_username();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AlbumLbsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.AlbumLbsResponse) */ {
 public:
  AlbumLbsResponse();
  virtual ~AlbumLbsResponse();

  AlbumLbsResponse(const AlbumLbsResponse& from);

  inline AlbumLbsResponse& operator=(const AlbumLbsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AlbumLbsResponse& default_instance();

  static inline const AlbumLbsResponse* internal_default_instance() {
    return reinterpret_cast<const AlbumLbsResponse*>(
               &_AlbumLbsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(AlbumLbsResponse* other);

  // implements Message ----------------------------------------------

  inline AlbumLbsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  AlbumLbsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AlbumLbsResponse& from);
  void MergeFrom(const AlbumLbsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AlbumLbsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.AlbumLbsContactInfo ContactList = 3;
  int contactlist_size() const;
  void clear_contactlist();
  static const int kContactListFieldNumber = 3;
  const ::micromsg::AlbumLbsContactInfo& contactlist(int index) const;
  ::micromsg::AlbumLbsContactInfo* mutable_contactlist(int index);
  ::micromsg::AlbumLbsContactInfo* add_contactlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::AlbumLbsContactInfo >*
      mutable_contactlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::AlbumLbsContactInfo >&
      contactlist() const;

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 ContactCount = 2;
  bool has_contactcount() const;
  void clear_contactcount();
  static const int kContactCountFieldNumber = 2;
  ::google::protobuf::uint32 contactcount() const;
  void set_contactcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.AlbumLbsResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_contactcount();
  void clear_has_contactcount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::AlbumLbsContactInfo > contactlist_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 contactcount_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShakeReportRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ShakeReportRequest) */ {
 public:
  ShakeReportRequest();
  virtual ~ShakeReportRequest();

  ShakeReportRequest(const ShakeReportRequest& from);

  inline ShakeReportRequest& operator=(const ShakeReportRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShakeReportRequest& default_instance();

  static inline const ShakeReportRequest* internal_default_instance() {
    return reinterpret_cast<const ShakeReportRequest*>(
               &_ShakeReportRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(ShakeReportRequest* other);

  // implements Message ----------------------------------------------

  inline ShakeReportRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ShakeReportRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShakeReportRequest& from);
  void MergeFrom(const ShakeReportRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShakeReportRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string MacAddr = 6;
  bool has_macaddr() const;
  void clear_macaddr();
  static const int kMacAddrFieldNumber = 6;
  const ::std::string& macaddr() const;
  void set_macaddr(const ::std::string& value);
  #if LANG_CXX11
  void set_macaddr(::std::string&& value);
  #endif
  void set_macaddr(const char* value);
  void set_macaddr(const char* value, size_t size);
  ::std::string* mutable_macaddr();
  ::std::string* release_macaddr();
  void set_allocated_macaddr(::std::string* macaddr);

  // optional string CellId = 7;
  bool has_cellid() const;
  void clear_cellid();
  static const int kCellIdFieldNumber = 7;
  const ::std::string& cellid() const;
  void set_cellid(const ::std::string& value);
  #if LANG_CXX11
  void set_cellid(::std::string&& value);
  #endif
  void set_cellid(const char* value);
  void set_cellid(const char* value, size_t size);
  ::std::string* mutable_cellid();
  ::std::string* release_cellid();
  void set_allocated_cellid(::std::string* cellid);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 OpCode = 2;
  bool has_opcode() const;
  void clear_opcode();
  static const int kOpCodeFieldNumber = 2;
  ::google::protobuf::uint32 opcode() const;
  void set_opcode(::google::protobuf::uint32 value);

  // required float Longitude = 3;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 3;
  float longitude() const;
  void set_longitude(float value);

  // required float Latitude = 4;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 4;
  float latitude() const;
  void set_latitude(float value);

  // required int32 Precision = 5;
  bool has_precision() const;
  void clear_precision();
  static const int kPrecisionFieldNumber = 5;
  ::google::protobuf::int32 precision() const;
  void set_precision(::google::protobuf::int32 value);

  // required uint32 ImgId = 8;
  bool has_imgid() const;
  void clear_imgid();
  static const int kImgIdFieldNumber = 8;
  ::google::protobuf::uint32 imgid() const;
  void set_imgid(::google::protobuf::uint32 value);

  // required uint32 Times = 9;
  bool has_times() const;
  void clear_times();
  static const int kTimesFieldNumber = 9;
  ::google::protobuf::uint32 times() const;
  void set_times(::google::protobuf::uint32 value);

  // optional int32 GPSSource = 10;
  bool has_gpssource() const;
  void clear_gpssource();
  static const int kGPSSourceFieldNumber = 10;
  ::google::protobuf::int32 gpssource() const;
  void set_gpssource(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ShakeReportRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_opcode();
  void clear_has_opcode();
  void set_has_longitude();
  void clear_has_longitude();
  void set_has_latitude();
  void clear_has_latitude();
  void set_has_precision();
  void clear_has_precision();
  void set_has_macaddr();
  void clear_has_macaddr();
  void set_has_cellid();
  void clear_has_cellid();
  void set_has_imgid();
  void clear_has_imgid();
  void set_has_times();
  void clear_has_times();
  void set_has_gpssource();
  void clear_has_gpssource();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr macaddr_;
  ::google::protobuf::internal::ArenaStringPtr cellid_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 opcode_;
  float longitude_;
  float latitude_;
  ::google::protobuf::int32 precision_;
  ::google::protobuf::uint32 imgid_;
  ::google::protobuf::uint32 times_;
  ::google::protobuf::int32 gpssource_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShakeBuffer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ShakeBuffer) */ {
 public:
  ShakeBuffer();
  virtual ~ShakeBuffer();

  ShakeBuffer(const ShakeBuffer& from);

  inline ShakeBuffer& operator=(const ShakeBuffer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShakeBuffer& default_instance();

  static inline const ShakeBuffer* internal_default_instance() {
    return reinterpret_cast<const ShakeBuffer*>(
               &_ShakeBuffer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(ShakeBuffer* other);

  // implements Message ----------------------------------------------

  inline ShakeBuffer* New() const PROTOBUF_FINAL { return New(NULL); }

  ShakeBuffer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShakeBuffer& from);
  void MergeFrom(const ShakeBuffer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShakeBuffer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 ReportTime = 1;
  bool has_reporttime() const;
  void clear_reporttime();
  static const int kReportTimeFieldNumber = 1;
  ::google::protobuf::uint32 reporttime() const;
  void set_reporttime(::google::protobuf::uint32 value);

  // required uint32 X = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  ::google::protobuf::uint32 x() const;
  void set_x(::google::protobuf::uint32 value);

  // required uint32 Y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  ::google::protobuf::uint32 y() const;
  void set_y(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ShakeBuffer)
 private:
  void set_has_reporttime();
  void clear_has_reporttime();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 reporttime_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShakeReportResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ShakeReportResponse) */ {
 public:
  ShakeReportResponse();
  virtual ~ShakeReportResponse();

  ShakeReportResponse(const ShakeReportResponse& from);

  inline ShakeReportResponse& operator=(const ShakeReportResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShakeReportResponse& default_instance();

  static inline const ShakeReportResponse* internal_default_instance() {
    return reinterpret_cast<const ShakeReportResponse*>(
               &_ShakeReportResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(ShakeReportResponse* other);

  // implements Message ----------------------------------------------

  inline ShakeReportResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ShakeReportResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShakeReportResponse& from);
  void MergeFrom(const ShakeReportResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShakeReportResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.SKBuiltinBuffer_t Buffer = 2;
  bool has_buffer() const;
  void clear_buffer();
  static const int kBufferFieldNumber = 2;
  const ::micromsg::SKBuiltinBuffer_t& buffer() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_buffer();
  ::micromsg::SKBuiltinBuffer_t* release_buffer();
  void set_allocated_buffer(::micromsg::SKBuiltinBuffer_t* buffer);

  // required int32 Ret = 3;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 3;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // required uint32 ImgId = 4;
  bool has_imgid() const;
  void clear_imgid();
  static const int kImgIdFieldNumber = 4;
  ::google::protobuf::uint32 imgid() const;
  void set_imgid(::google::protobuf::uint32 value);

  // optional uint32 ImgTotoalLen = 5;
  bool has_imgtotoallen() const;
  void clear_imgtotoallen();
  static const int kImgTotoalLenFieldNumber = 5;
  ::google::protobuf::uint32 imgtotoallen() const;
  void set_imgtotoallen(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ShakeReportResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_buffer();
  void clear_has_buffer();
  void set_has_ret();
  void clear_has_ret();
  void set_has_imgid();
  void clear_has_imgid();
  void set_has_imgtotoallen();
  void clear_has_imgtotoallen();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::SKBuiltinBuffer_t* buffer_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::uint32 imgid_;
  ::google::protobuf::uint32 imgtotoallen_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShakeGetRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ShakeGetRequest) */ {
 public:
  ShakeGetRequest();
  virtual ~ShakeGetRequest();

  ShakeGetRequest(const ShakeGetRequest& from);

  inline ShakeGetRequest& operator=(const ShakeGetRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShakeGetRequest& default_instance();

  static inline const ShakeGetRequest* internal_default_instance() {
    return reinterpret_cast<const ShakeGetRequest*>(
               &_ShakeGetRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(ShakeGetRequest* other);

  // implements Message ----------------------------------------------

  inline ShakeGetRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ShakeGetRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShakeGetRequest& from);
  void MergeFrom(const ShakeGetRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShakeGetRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.SKBuiltinBuffer_t Buffer = 2;
  bool has_buffer() const;
  void clear_buffer();
  static const int kBufferFieldNumber = 2;
  const ::micromsg::SKBuiltinBuffer_t& buffer() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_buffer();
  ::micromsg::SKBuiltinBuffer_t* release_buffer();
  void set_allocated_buffer(::micromsg::SKBuiltinBuffer_t* buffer);

  // optional int32 IsNewVerson = 3;
  bool has_isnewverson() const;
  void clear_isnewverson();
  static const int kIsNewVersonFieldNumber = 3;
  ::google::protobuf::int32 isnewverson() const;
  void set_isnewverson(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ShakeGetRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_buffer();
  void clear_has_buffer();
  void set_has_isnewverson();
  void clear_has_isnewverson();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::SKBuiltinBuffer_t* buffer_;
  ::google::protobuf::int32 isnewverson_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShakeGetItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ShakeGetItem) */ {
 public:
  ShakeGetItem();
  virtual ~ShakeGetItem();

  ShakeGetItem(const ShakeGetItem& from);

  inline ShakeGetItem& operator=(const ShakeGetItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShakeGetItem& default_instance();

  static inline const ShakeGetItem* internal_default_instance() {
    return reinterpret_cast<const ShakeGetItem*>(
               &_ShakeGetItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(ShakeGetItem* other);

  // implements Message ----------------------------------------------

  inline ShakeGetItem* New() const PROTOBUF_FINAL { return New(NULL); }

  ShakeGetItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShakeGetItem& from);
  void MergeFrom(const ShakeGetItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShakeGetItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string UserName = 1;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string NickName = 2;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNickNameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional string Province = 3;
  bool has_province() const;
  void clear_province();
  static const int kProvinceFieldNumber = 3;
  const ::std::string& province() const;
  void set_province(const ::std::string& value);
  #if LANG_CXX11
  void set_province(::std::string&& value);
  #endif
  void set_province(const char* value);
  void set_province(const char* value, size_t size);
  ::std::string* mutable_province();
  ::std::string* release_province();
  void set_allocated_province(::std::string* province);

  // optional string City = 4;
  bool has_city() const;
  void clear_city();
  static const int kCityFieldNumber = 4;
  const ::std::string& city() const;
  void set_city(const ::std::string& value);
  #if LANG_CXX11
  void set_city(::std::string&& value);
  #endif
  void set_city(const char* value);
  void set_city(const char* value, size_t size);
  ::std::string* mutable_city();
  ::std::string* release_city();
  void set_allocated_city(::std::string* city);

  // optional string Signature = 5;
  bool has_signature() const;
  void clear_signature();
  static const int kSignatureFieldNumber = 5;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const char* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // optional string Distance = 6;
  bool has_distance() const;
  void clear_distance();
  static const int kDistanceFieldNumber = 6;
  const ::std::string& distance() const;
  void set_distance(const ::std::string& value);
  #if LANG_CXX11
  void set_distance(::std::string&& value);
  #endif
  void set_distance(const char* value);
  void set_distance(const char* value, size_t size);
  ::std::string* mutable_distance();
  ::std::string* release_distance();
  void set_allocated_distance(::std::string* distance);

  // optional string Weibo = 12;
  bool has_weibo() const;
  void clear_weibo();
  static const int kWeiboFieldNumber = 12;
  const ::std::string& weibo() const;
  void set_weibo(const ::std::string& value);
  #if LANG_CXX11
  void set_weibo(::std::string&& value);
  #endif
  void set_weibo(const char* value);
  void set_weibo(const char* value, size_t size);
  ::std::string* mutable_weibo();
  ::std::string* release_weibo();
  void set_allocated_weibo(::std::string* weibo);

  // optional string WeiboNickname = 13;
  bool has_weibonickname() const;
  void clear_weibonickname();
  static const int kWeiboNicknameFieldNumber = 13;
  const ::std::string& weibonickname() const;
  void set_weibonickname(const ::std::string& value);
  #if LANG_CXX11
  void set_weibonickname(::std::string&& value);
  #endif
  void set_weibonickname(const char* value);
  void set_weibonickname(const char* value, size_t size);
  ::std::string* mutable_weibonickname();
  ::std::string* release_weibonickname();
  void set_allocated_weibonickname(::std::string* weibonickname);

  // optional string VerifyInfo = 16;
  bool has_verifyinfo() const;
  void clear_verifyinfo();
  static const int kVerifyInfoFieldNumber = 16;
  const ::std::string& verifyinfo() const;
  void set_verifyinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_verifyinfo(::std::string&& value);
  #endif
  void set_verifyinfo(const char* value);
  void set_verifyinfo(const char* value, size_t size);
  ::std::string* mutable_verifyinfo();
  ::std::string* release_verifyinfo();
  void set_allocated_verifyinfo(::std::string* verifyinfo);

  // optional string VerifyContent = 17;
  bool has_verifycontent() const;
  void clear_verifycontent();
  static const int kVerifyContentFieldNumber = 17;
  const ::std::string& verifycontent() const;
  void set_verifycontent(const ::std::string& value);
  #if LANG_CXX11
  void set_verifycontent(::std::string&& value);
  #endif
  void set_verifycontent(const char* value);
  void set_verifycontent(const char* value, size_t size);
  ::std::string* mutable_verifycontent();
  ::std::string* release_verifycontent();
  void set_allocated_verifycontent(::std::string* verifycontent);

  // optional string Country = 23;
  bool has_country() const;
  void clear_country();
  static const int kCountryFieldNumber = 23;
  const ::std::string& country() const;
  void set_country(const ::std::string& value);
  #if LANG_CXX11
  void set_country(::std::string&& value);
  #endif
  void set_country(const char* value);
  void set_country(const char* value, size_t size);
  ::std::string* mutable_country();
  ::std::string* release_country();
  void set_allocated_country(::std::string* country);

  // optional string BigHeadImgUrl = 24;
  bool has_bigheadimgurl() const;
  void clear_bigheadimgurl();
  static const int kBigHeadImgUrlFieldNumber = 24;
  const ::std::string& bigheadimgurl() const;
  void set_bigheadimgurl(const ::std::string& value);
  #if LANG_CXX11
  void set_bigheadimgurl(::std::string&& value);
  #endif
  void set_bigheadimgurl(const char* value);
  void set_bigheadimgurl(const char* value, size_t size);
  ::std::string* mutable_bigheadimgurl();
  ::std::string* release_bigheadimgurl();
  void set_allocated_bigheadimgurl(::std::string* bigheadimgurl);

  // optional string SmallHeadImgUrl = 25;
  bool has_smallheadimgurl() const;
  void clear_smallheadimgurl();
  static const int kSmallHeadImgUrlFieldNumber = 25;
  const ::std::string& smallheadimgurl() const;
  void set_smallheadimgurl(const ::std::string& value);
  #if LANG_CXX11
  void set_smallheadimgurl(::std::string&& value);
  #endif
  void set_smallheadimgurl(const char* value);
  void set_smallheadimgurl(const char* value, size_t size);
  ::std::string* mutable_smallheadimgurl();
  ::std::string* release_smallheadimgurl();
  void set_allocated_smallheadimgurl(::std::string* smallheadimgurl);

  // optional string MyBrandList = 26;
  bool has_mybrandlist() const;
  void clear_mybrandlist();
  static const int kMyBrandListFieldNumber = 26;
  const ::std::string& mybrandlist() const;
  void set_mybrandlist(const ::std::string& value);
  #if LANG_CXX11
  void set_mybrandlist(::std::string&& value);
  #endif
  void set_mybrandlist(const char* value);
  void set_mybrandlist(const char* value, size_t size);
  ::std::string* mutable_mybrandlist();
  ::std::string* release_mybrandlist();
  void set_allocated_mybrandlist(::std::string* mybrandlist);

  // optional string AntispamTicket = 28;
  bool has_antispamticket() const;
  void clear_antispamticket();
  static const int kAntispamTicketFieldNumber = 28;
  const ::std::string& antispamticket() const;
  void set_antispamticket(const ::std::string& value);
  #if LANG_CXX11
  void set_antispamticket(::std::string&& value);
  #endif
  void set_antispamticket(const char* value);
  void set_antispamticket(const char* value, size_t size);
  ::std::string* mutable_antispamticket();
  ::std::string* release_antispamticket();
  void set_allocated_antispamticket(::std::string* antispamticket);

  // required .micromsg.SKBuiltinBuffer_t ImgBuffer = 10;
  bool has_imgbuffer() const;
  void clear_imgbuffer();
  static const int kImgBufferFieldNumber = 10;
  const ::micromsg::SKBuiltinBuffer_t& imgbuffer() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_imgbuffer();
  ::micromsg::SKBuiltinBuffer_t* release_imgbuffer();
  void set_allocated_imgbuffer(::micromsg::SKBuiltinBuffer_t* imgbuffer);

  // optional .micromsg.SnsUserInfo SnsUserInfo = 22;
  bool has_snsuserinfo() const;
  void clear_snsuserinfo();
  static const int kSnsUserInfoFieldNumber = 22;
  const ::micromsg::SnsUserInfo& snsuserinfo() const;
  ::micromsg::SnsUserInfo* mutable_snsuserinfo();
  ::micromsg::SnsUserInfo* release_snsuserinfo();
  void set_allocated_snsuserinfo(::micromsg::SnsUserInfo* snsuserinfo);

  // optional .micromsg.CustomizedInfo CustomizedInfo = 27;
  bool has_customizedinfo() const;
  void clear_customizedinfo();
  static const int kCustomizedInfoFieldNumber = 27;
  const ::micromsg::CustomizedInfo& customizedinfo() const;
  ::micromsg::CustomizedInfo* mutable_customizedinfo();
  ::micromsg::CustomizedInfo* release_customizedinfo();
  void set_allocated_customizedinfo(::micromsg::CustomizedInfo* customizedinfo);

  // required int32 Sex = 7;
  bool has_sex() const;
  void clear_sex();
  static const int kSexFieldNumber = 7;
  ::google::protobuf::int32 sex() const;
  void set_sex(::google::protobuf::int32 value);

  // required uint32 ImgStatus = 8;
  bool has_imgstatus() const;
  void clear_imgstatus();
  static const int kImgStatusFieldNumber = 8;
  ::google::protobuf::uint32 imgstatus() const;
  void set_imgstatus(::google::protobuf::uint32 value);

  // required uint32 HasHDImg = 9;
  bool has_hashdimg() const;
  void clear_hashdimg();
  static const int kHasHDImgFieldNumber = 9;
  ::google::protobuf::uint32 hashdimg() const;
  void set_hashdimg(::google::protobuf::uint32 value);

  // required uint32 NumDistance = 11;
  bool has_numdistance() const;
  void clear_numdistance();
  static const int kNumDistanceFieldNumber = 11;
  ::google::protobuf::uint32 numdistance() const;
  void set_numdistance(::google::protobuf::uint32 value);

  // optional uint32 WeiboFlag = 14;
  bool has_weiboflag() const;
  void clear_weiboflag();
  static const int kWeiboFlagFieldNumber = 14;
  ::google::protobuf::uint32 weiboflag() const;
  void set_weiboflag(::google::protobuf::uint32 value);

  // optional uint32 VerifyFlag = 15;
  bool has_verifyflag() const;
  void clear_verifyflag();
  static const int kVerifyFlagFieldNumber = 15;
  ::google::protobuf::uint32 verifyflag() const;
  void set_verifyflag(::google::protobuf::uint32 value);

  // optional int32 HeadImgVersion = 21;
  bool has_headimgversion() const;
  void clear_headimgversion();
  static const int kHeadImgVersionFieldNumber = 21;
  ::google::protobuf::int32 headimgversion() const;
  void set_headimgversion(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ShakeGetItem)
 private:
  void set_has_username();
  void clear_has_username();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_province();
  void clear_has_province();
  void set_has_city();
  void clear_has_city();
  void set_has_signature();
  void clear_has_signature();
  void set_has_distance();
  void clear_has_distance();
  void set_has_sex();
  void clear_has_sex();
  void set_has_imgstatus();
  void clear_has_imgstatus();
  void set_has_hashdimg();
  void clear_has_hashdimg();
  void set_has_imgbuffer();
  void clear_has_imgbuffer();
  void set_has_numdistance();
  void clear_has_numdistance();
  void set_has_weibo();
  void clear_has_weibo();
  void set_has_weibonickname();
  void clear_has_weibonickname();
  void set_has_weiboflag();
  void clear_has_weiboflag();
  void set_has_verifyflag();
  void clear_has_verifyflag();
  void set_has_verifyinfo();
  void clear_has_verifyinfo();
  void set_has_verifycontent();
  void clear_has_verifycontent();
  void set_has_headimgversion();
  void clear_has_headimgversion();
  void set_has_snsuserinfo();
  void clear_has_snsuserinfo();
  void set_has_country();
  void clear_has_country();
  void set_has_bigheadimgurl();
  void clear_has_bigheadimgurl();
  void set_has_smallheadimgurl();
  void clear_has_smallheadimgurl();
  void set_has_mybrandlist();
  void clear_has_mybrandlist();
  void set_has_customizedinfo();
  void clear_has_customizedinfo();
  void set_has_antispamticket();
  void clear_has_antispamticket();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr province_;
  ::google::protobuf::internal::ArenaStringPtr city_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  ::google::protobuf::internal::ArenaStringPtr distance_;
  ::google::protobuf::internal::ArenaStringPtr weibo_;
  ::google::protobuf::internal::ArenaStringPtr weibonickname_;
  ::google::protobuf::internal::ArenaStringPtr verifyinfo_;
  ::google::protobuf::internal::ArenaStringPtr verifycontent_;
  ::google::protobuf::internal::ArenaStringPtr country_;
  ::google::protobuf::internal::ArenaStringPtr bigheadimgurl_;
  ::google::protobuf::internal::ArenaStringPtr smallheadimgurl_;
  ::google::protobuf::internal::ArenaStringPtr mybrandlist_;
  ::google::protobuf::internal::ArenaStringPtr antispamticket_;
  ::micromsg::SKBuiltinBuffer_t* imgbuffer_;
  ::micromsg::SnsUserInfo* snsuserinfo_;
  ::micromsg::CustomizedInfo* customizedinfo_;
  ::google::protobuf::int32 sex_;
  ::google::protobuf::uint32 imgstatus_;
  ::google::protobuf::uint32 hashdimg_;
  ::google::protobuf::uint32 numdistance_;
  ::google::protobuf::uint32 weiboflag_;
  ::google::protobuf::uint32 verifyflag_;
  ::google::protobuf::int32 headimgversion_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShakeGetResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ShakeGetResponse) */ {
 public:
  ShakeGetResponse();
  virtual ~ShakeGetResponse();

  ShakeGetResponse(const ShakeGetResponse& from);

  inline ShakeGetResponse& operator=(const ShakeGetResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShakeGetResponse& default_instance();

  static inline const ShakeGetResponse* internal_default_instance() {
    return reinterpret_cast<const ShakeGetResponse*>(
               &_ShakeGetResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(ShakeGetResponse* other);

  // implements Message ----------------------------------------------

  inline ShakeGetResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ShakeGetResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShakeGetResponse& from);
  void MergeFrom(const ShakeGetResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShakeGetResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.ShakeGetItem ShakeGetList = 3;
  int shakegetlist_size() const;
  void clear_shakegetlist();
  static const int kShakeGetListFieldNumber = 3;
  const ::micromsg::ShakeGetItem& shakegetlist(int index) const;
  ::micromsg::ShakeGetItem* mutable_shakegetlist(int index);
  ::micromsg::ShakeGetItem* add_shakegetlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::ShakeGetItem >*
      mutable_shakegetlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::ShakeGetItem >&
      shakegetlist() const;

  // optional string Tips = 4;
  bool has_tips() const;
  void clear_tips();
  static const int kTipsFieldNumber = 4;
  const ::std::string& tips() const;
  void set_tips(const ::std::string& value);
  #if LANG_CXX11
  void set_tips(::std::string&& value);
  #endif
  void set_tips(const char* value);
  void set_tips(const char* value, size_t size);
  ::std::string* mutable_tips();
  ::std::string* release_tips();
  void set_allocated_tips(::std::string* tips);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 Count = 2;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // required uint32 Scence = 5;
  bool has_scence() const;
  void clear_scence();
  static const int kScenceFieldNumber = 5;
  ::google::protobuf::uint32 scence() const;
  void set_scence(::google::protobuf::uint32 value);

  // required int32 Ret = 6;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 6;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ShakeGetResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_count();
  void clear_has_count();
  void set_has_tips();
  void clear_has_tips();
  void set_has_scence();
  void clear_has_scence();
  void set_has_ret();
  void clear_has_ret();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::ShakeGetItem > shakegetlist_;
  ::google::protobuf::internal::ArenaStringPtr tips_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 scence_;
  ::google::protobuf::int32 ret_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShakeMatchRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ShakeMatchRequest) */ {
 public:
  ShakeMatchRequest();
  virtual ~ShakeMatchRequest();

  ShakeMatchRequest(const ShakeMatchRequest& from);

  inline ShakeMatchRequest& operator=(const ShakeMatchRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShakeMatchRequest& default_instance();

  static inline const ShakeMatchRequest* internal_default_instance() {
    return reinterpret_cast<const ShakeMatchRequest*>(
               &_ShakeMatchRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(ShakeMatchRequest* other);

  // implements Message ----------------------------------------------

  inline ShakeMatchRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ShakeMatchRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShakeMatchRequest& from);
  void MergeFrom(const ShakeMatchRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShakeMatchRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ToUserName = 3;
  bool has_tousername() const;
  void clear_tousername();
  static const int kToUserNameFieldNumber = 3;
  const ::std::string& tousername() const;
  void set_tousername(const ::std::string& value);
  #if LANG_CXX11
  void set_tousername(::std::string&& value);
  #endif
  void set_tousername(const char* value);
  void set_tousername(const char* value, size_t size);
  ::std::string* mutable_tousername();
  ::std::string* release_tousername();
  void set_allocated_tousername(::std::string* tousername);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 OpCode = 2;
  bool has_opcode() const;
  void clear_opcode();
  static const int kOpCodeFieldNumber = 2;
  ::google::protobuf::uint32 opcode() const;
  void set_opcode(::google::protobuf::uint32 value);

  // required uint32 Scence = 4;
  bool has_scence() const;
  void clear_scence();
  static const int kScenceFieldNumber = 4;
  ::google::protobuf::uint32 scence() const;
  void set_scence(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ShakeMatchRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_opcode();
  void clear_has_opcode();
  void set_has_tousername();
  void clear_has_tousername();
  void set_has_scence();
  void clear_has_scence();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr tousername_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 opcode_;
  ::google::protobuf::uint32 scence_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShakeMatchResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ShakeMatchResponse) */ {
 public:
  ShakeMatchResponse();
  virtual ~ShakeMatchResponse();

  ShakeMatchResponse(const ShakeMatchResponse& from);

  inline ShakeMatchResponse& operator=(const ShakeMatchResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShakeMatchResponse& default_instance();

  static inline const ShakeMatchResponse* internal_default_instance() {
    return reinterpret_cast<const ShakeMatchResponse*>(
               &_ShakeMatchResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(ShakeMatchResponse* other);

  // implements Message ----------------------------------------------

  inline ShakeMatchResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ShakeMatchResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShakeMatchResponse& from);
  void MergeFrom(const ShakeMatchResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShakeMatchResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Tips = 2;
  bool has_tips() const;
  void clear_tips();
  static const int kTipsFieldNumber = 2;
  const ::std::string& tips() const;
  void set_tips(const ::std::string& value);
  #if LANG_CXX11
  void set_tips(::std::string&& value);
  #endif
  void set_tips(const char* value);
  void set_tips(const char* value, size_t size);
  ::std::string* mutable_tips();
  ::std::string* release_tips();
  void set_allocated_tips(::std::string* tips);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 Ret = 3;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 3;
  ::google::protobuf::uint32 ret() const;
  void set_ret(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ShakeMatchResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_tips();
  void clear_has_tips();
  void set_has_ret();
  void clear_has_ret();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr tips_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 ret_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShakeImgRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ShakeImgRequest) */ {
 public:
  ShakeImgRequest();
  virtual ~ShakeImgRequest();

  ShakeImgRequest(const ShakeImgRequest& from);

  inline ShakeImgRequest& operator=(const ShakeImgRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShakeImgRequest& default_instance();

  static inline const ShakeImgRequest* internal_default_instance() {
    return reinterpret_cast<const ShakeImgRequest*>(
               &_ShakeImgRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(ShakeImgRequest* other);

  // implements Message ----------------------------------------------

  inline ShakeImgRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ShakeImgRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShakeImgRequest& from);
  void MergeFrom(const ShakeImgRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShakeImgRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 ImgId = 2;
  bool has_imgid() const;
  void clear_imgid();
  static const int kImgIdFieldNumber = 2;
  ::google::protobuf::uint32 imgid() const;
  void set_imgid(::google::protobuf::uint32 value);

  // required uint32 StartPos = 3;
  bool has_startpos() const;
  void clear_startpos();
  static const int kStartPosFieldNumber = 3;
  ::google::protobuf::uint32 startpos() const;
  void set_startpos(::google::protobuf::uint32 value);

  // required uint32 TotalLen = 4;
  bool has_totallen() const;
  void clear_totallen();
  static const int kTotalLenFieldNumber = 4;
  ::google::protobuf::uint32 totallen() const;
  void set_totallen(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ShakeImgRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_imgid();
  void clear_has_imgid();
  void set_has_startpos();
  void clear_has_startpos();
  void set_has_totallen();
  void clear_has_totallen();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 imgid_;
  ::google::protobuf::uint32 startpos_;
  ::google::protobuf::uint32 totallen_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShakeImgResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ShakeImgResponse) */ {
 public:
  ShakeImgResponse();
  virtual ~ShakeImgResponse();

  ShakeImgResponse(const ShakeImgResponse& from);

  inline ShakeImgResponse& operator=(const ShakeImgResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShakeImgResponse& default_instance();

  static inline const ShakeImgResponse* internal_default_instance() {
    return reinterpret_cast<const ShakeImgResponse*>(
               &_ShakeImgResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(ShakeImgResponse* other);

  // implements Message ----------------------------------------------

  inline ShakeImgResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ShakeImgResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShakeImgResponse& from);
  void MergeFrom(const ShakeImgResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShakeImgResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.SKBuiltinBuffer_t Buffer = 5;
  bool has_buffer() const;
  void clear_buffer();
  static const int kBufferFieldNumber = 5;
  const ::micromsg::SKBuiltinBuffer_t& buffer() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_buffer();
  ::micromsg::SKBuiltinBuffer_t* release_buffer();
  void set_allocated_buffer(::micromsg::SKBuiltinBuffer_t* buffer);

  // required uint32 ImgId = 2;
  bool has_imgid() const;
  void clear_imgid();
  static const int kImgIdFieldNumber = 2;
  ::google::protobuf::uint32 imgid() const;
  void set_imgid(::google::protobuf::uint32 value);

  // required uint32 TotalLen = 3;
  bool has_totallen() const;
  void clear_totallen();
  static const int kTotalLenFieldNumber = 3;
  ::google::protobuf::uint32 totallen() const;
  void set_totallen(::google::protobuf::uint32 value);

  // required uint32 StartPos = 4;
  bool has_startpos() const;
  void clear_startpos();
  static const int kStartPosFieldNumber = 4;
  ::google::protobuf::uint32 startpos() const;
  void set_startpos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ShakeImgResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_imgid();
  void clear_has_imgid();
  void set_has_totallen();
  void clear_has_totallen();
  void set_has_startpos();
  void clear_has_startpos();
  void set_has_buffer();
  void clear_has_buffer();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::SKBuiltinBuffer_t* buffer_;
  ::google::protobuf::uint32 imgid_;
  ::google::protobuf::uint32 totallen_;
  ::google::protobuf::uint32 startpos_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ScanStreetViewRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ScanStreetViewRequest) */ {
 public:
  ScanStreetViewRequest();
  virtual ~ScanStreetViewRequest();

  ScanStreetViewRequest(const ScanStreetViewRequest& from);

  inline ScanStreetViewRequest& operator=(const ScanStreetViewRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScanStreetViewRequest& default_instance();

  static inline const ScanStreetViewRequest* internal_default_instance() {
    return reinterpret_cast<const ScanStreetViewRequest*>(
               &_ScanStreetViewRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(ScanStreetViewRequest* other);

  // implements Message ----------------------------------------------

  inline ScanStreetViewRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ScanStreetViewRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScanStreetViewRequest& from);
  void MergeFrom(const ScanStreetViewRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScanStreetViewRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.PositionInfo UserPos = 2;
  bool has_userpos() const;
  void clear_userpos();
  static const int kUserPosFieldNumber = 2;
  const ::micromsg::PositionInfo& userpos() const;
  ::micromsg::PositionInfo* mutable_userpos();
  ::micromsg::PositionInfo* release_userpos();
  void set_allocated_userpos(::micromsg::PositionInfo* userpos);

  // optional uint32 Scene = 3;
  bool has_scene() const;
  void clear_scene();
  static const int kSceneFieldNumber = 3;
  ::google::protobuf::uint32 scene() const;
  void set_scene(::google::protobuf::uint32 value);

  // optional float Heading = 4;
  bool has_heading() const;
  void clear_heading();
  static const int kHeadingFieldNumber = 4;
  float heading() const;
  void set_heading(float value);

  // optional float Pitch = 5;
  bool has_pitch() const;
  void clear_pitch();
  static const int kPitchFieldNumber = 5;
  float pitch() const;
  void set_pitch(float value);

  // @@protoc_insertion_point(class_scope:micromsg.ScanStreetViewRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_userpos();
  void clear_has_userpos();
  void set_has_scene();
  void clear_has_scene();
  void set_has_heading();
  void clear_has_heading();
  void set_has_pitch();
  void clear_has_pitch();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::PositionInfo* userpos_;
  ::google::protobuf::uint32 scene_;
  float heading_;
  float pitch_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ScanStreetViewResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ScanStreetViewResponse) */ {
 public:
  ScanStreetViewResponse();
  virtual ~ScanStreetViewResponse();

  ScanStreetViewResponse(const ScanStreetViewResponse& from);

  inline ScanStreetViewResponse& operator=(const ScanStreetViewResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScanStreetViewResponse& default_instance();

  static inline const ScanStreetViewResponse* internal_default_instance() {
    return reinterpret_cast<const ScanStreetViewResponse*>(
               &_ScanStreetViewResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(ScanStreetViewResponse* other);

  // implements Message ----------------------------------------------

  inline ScanStreetViewResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ScanStreetViewResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScanStreetViewResponse& from);
  void MergeFrom(const ScanStreetViewResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScanStreetViewResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string DescriptionXML = 3;
  bool has_descriptionxml() const;
  void clear_descriptionxml();
  static const int kDescriptionXMLFieldNumber = 3;
  const ::std::string& descriptionxml() const;
  void set_descriptionxml(const ::std::string& value);
  #if LANG_CXX11
  void set_descriptionxml(::std::string&& value);
  #endif
  void set_descriptionxml(const char* value);
  void set_descriptionxml(const char* value, size_t size);
  ::std::string* mutable_descriptionxml();
  ::std::string* release_descriptionxml();
  void set_allocated_descriptionxml(::std::string* descriptionxml);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 Type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ScanStreetViewResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_type();
  void clear_has_type();
  void set_has_descriptionxml();
  void clear_has_descriptionxml();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr descriptionxml_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 type_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LbsRoomRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.LbsRoomRequest) */ {
 public:
  LbsRoomRequest();
  virtual ~LbsRoomRequest();

  LbsRoomRequest(const LbsRoomRequest& from);

  inline LbsRoomRequest& operator=(const LbsRoomRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LbsRoomRequest& default_instance();

  static inline const LbsRoomRequest* internal_default_instance() {
    return reinterpret_cast<const LbsRoomRequest*>(
               &_LbsRoomRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(LbsRoomRequest* other);

  // implements Message ----------------------------------------------

  inline LbsRoomRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  LbsRoomRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LbsRoomRequest& from);
  void MergeFrom(const LbsRoomRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LbsRoomRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string MacAddr = 6;
  bool has_macaddr() const;
  void clear_macaddr();
  static const int kMacAddrFieldNumber = 6;
  const ::std::string& macaddr() const;
  void set_macaddr(const ::std::string& value);
  #if LANG_CXX11
  void set_macaddr(::std::string&& value);
  #endif
  void set_macaddr(const char* value);
  void set_macaddr(const char* value, size_t size);
  ::std::string* mutable_macaddr();
  ::std::string* release_macaddr();
  void set_allocated_macaddr(::std::string* macaddr);

  // optional string CellId = 7;
  bool has_cellid() const;
  void clear_cellid();
  static const int kCellIdFieldNumber = 7;
  const ::std::string& cellid() const;
  void set_cellid(const ::std::string& value);
  #if LANG_CXX11
  void set_cellid(::std::string&& value);
  #endif
  void set_cellid(const char* value);
  void set_cellid(const char* value, size_t size);
  ::std::string* mutable_cellid();
  ::std::string* release_cellid();
  void set_allocated_cellid(::std::string* cellid);

  // optional string RoomName = 9;
  bool has_roomname() const;
  void clear_roomname();
  static const int kRoomNameFieldNumber = 9;
  const ::std::string& roomname() const;
  void set_roomname(const ::std::string& value);
  #if LANG_CXX11
  void set_roomname(::std::string&& value);
  #endif
  void set_roomname(const char* value);
  void set_roomname(const char* value, size_t size);
  ::std::string* mutable_roomname();
  ::std::string* release_roomname();
  void set_allocated_roomname(::std::string* roomname);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 OpCode = 2;
  bool has_opcode() const;
  void clear_opcode();
  static const int kOpCodeFieldNumber = 2;
  ::google::protobuf::uint32 opcode() const;
  void set_opcode(::google::protobuf::uint32 value);

  // required float Longitude = 3;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 3;
  float longitude() const;
  void set_longitude(float value);

  // required float Latitude = 4;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 4;
  float latitude() const;
  void set_latitude(float value);

  // required int32 Precision = 5;
  bool has_precision() const;
  void clear_precision();
  static const int kPrecisionFieldNumber = 5;
  ::google::protobuf::int32 precision() const;
  void set_precision(::google::protobuf::int32 value);

  // optional int32 GPSSource = 8;
  bool has_gpssource() const;
  void clear_gpssource();
  static const int kGPSSourceFieldNumber = 8;
  ::google::protobuf::int32 gpssource() const;
  void set_gpssource(::google::protobuf::int32 value);

  // optional int32 ExitScene = 10;
  bool has_exitscene() const;
  void clear_exitscene();
  static const int kExitSceneFieldNumber = 10;
  ::google::protobuf::int32 exitscene() const;
  void set_exitscene(::google::protobuf::int32 value);

  // optional int32 StayTime = 11;
  bool has_staytime() const;
  void clear_staytime();
  static const int kStayTimeFieldNumber = 11;
  ::google::protobuf::int32 staytime() const;
  void set_staytime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.LbsRoomRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_opcode();
  void clear_has_opcode();
  void set_has_longitude();
  void clear_has_longitude();
  void set_has_latitude();
  void clear_has_latitude();
  void set_has_precision();
  void clear_has_precision();
  void set_has_macaddr();
  void clear_has_macaddr();
  void set_has_cellid();
  void clear_has_cellid();
  void set_has_gpssource();
  void clear_has_gpssource();
  void set_has_roomname();
  void clear_has_roomname();
  void set_has_exitscene();
  void clear_has_exitscene();
  void set_has_staytime();
  void clear_has_staytime();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr macaddr_;
  ::google::protobuf::internal::ArenaStringPtr cellid_;
  ::google::protobuf::internal::ArenaStringPtr roomname_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 opcode_;
  float longitude_;
  float latitude_;
  ::google::protobuf::int32 precision_;
  ::google::protobuf::int32 gpssource_;
  ::google::protobuf::int32 exitscene_;
  ::google::protobuf::int32 staytime_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LbsRoomResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.LbsRoomResponse) */ {
 public:
  LbsRoomResponse();
  virtual ~LbsRoomResponse();

  LbsRoomResponse(const LbsRoomResponse& from);

  inline LbsRoomResponse& operator=(const LbsRoomResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LbsRoomResponse& default_instance();

  static inline const LbsRoomResponse* internal_default_instance() {
    return reinterpret_cast<const LbsRoomResponse*>(
               &_LbsRoomResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(LbsRoomResponse* other);

  // implements Message ----------------------------------------------

  inline LbsRoomResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  LbsRoomResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LbsRoomResponse& from);
  void MergeFrom(const LbsRoomResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LbsRoomResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string RoomName = 2;
  bool has_roomname() const;
  void clear_roomname();
  static const int kRoomNameFieldNumber = 2;
  const ::std::string& roomname() const;
  void set_roomname(const ::std::string& value);
  #if LANG_CXX11
  void set_roomname(::std::string&& value);
  #endif
  void set_roomname(const char* value);
  void set_roomname(const char* value, size_t size);
  ::std::string* mutable_roomname();
  ::std::string* release_roomname();
  void set_allocated_roomname(::std::string* roomname);

  // optional string RoomNickName = 3;
  bool has_roomnickname() const;
  void clear_roomnickname();
  static const int kRoomNickNameFieldNumber = 3;
  const ::std::string& roomnickname() const;
  void set_roomnickname(const ::std::string& value);
  #if LANG_CXX11
  void set_roomnickname(::std::string&& value);
  #endif
  void set_roomnickname(const char* value);
  void set_roomnickname(const char* value, size_t size);
  ::std::string* mutable_roomnickname();
  ::std::string* release_roomnickname();
  void set_allocated_roomnickname(::std::string* roomnickname);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // @@protoc_insertion_point(class_scope:micromsg.LbsRoomResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_roomname();
  void clear_has_roomname();
  void set_has_roomnickname();
  void clear_has_roomnickname();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr roomname_;
  ::google::protobuf::internal::ArenaStringPtr roomnickname_;
  ::micromsg::BaseResponse* baseresponse_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LbsRoomMemberRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.LbsRoomMemberRequest) */ {
 public:
  LbsRoomMemberRequest();
  virtual ~LbsRoomMemberRequest();

  LbsRoomMemberRequest(const LbsRoomMemberRequest& from);

  inline LbsRoomMemberRequest& operator=(const LbsRoomMemberRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LbsRoomMemberRequest& default_instance();

  static inline const LbsRoomMemberRequest* internal_default_instance() {
    return reinterpret_cast<const LbsRoomMemberRequest*>(
               &_LbsRoomMemberRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(LbsRoomMemberRequest* other);

  // implements Message ----------------------------------------------

  inline LbsRoomMemberRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  LbsRoomMemberRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LbsRoomMemberRequest& from);
  void MergeFrom(const LbsRoomMemberRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LbsRoomMemberRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string RoomName = 2;
  bool has_roomname() const;
  void clear_roomname();
  static const int kRoomNameFieldNumber = 2;
  const ::std::string& roomname() const;
  void set_roomname(const ::std::string& value);
  #if LANG_CXX11
  void set_roomname(::std::string&& value);
  #endif
  void set_roomname(const char* value);
  void set_roomname(const char* value, size_t size);
  ::std::string* mutable_roomname();
  ::std::string* release_roomname();
  void set_allocated_roomname(::std::string* roomname);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // @@protoc_insertion_point(class_scope:micromsg.LbsRoomMemberRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_roomname();
  void clear_has_roomname();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr roomname_;
  ::micromsg::BaseRequest* baserequest_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LbsRoomMember : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.LbsRoomMember) */ {
 public:
  LbsRoomMember();
  virtual ~LbsRoomMember();

  LbsRoomMember(const LbsRoomMember& from);

  inline LbsRoomMember& operator=(const LbsRoomMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LbsRoomMember& default_instance();

  static inline const LbsRoomMember* internal_default_instance() {
    return reinterpret_cast<const LbsRoomMember*>(
               &_LbsRoomMember_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(LbsRoomMember* other);

  // implements Message ----------------------------------------------

  inline LbsRoomMember* New() const PROTOBUF_FINAL { return New(NULL); }

  LbsRoomMember* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LbsRoomMember& from);
  void MergeFrom(const LbsRoomMember& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LbsRoomMember* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string UserName = 1;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string NickName = 2;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNickNameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional string BigHeadImgUrl = 3;
  bool has_bigheadimgurl() const;
  void clear_bigheadimgurl();
  static const int kBigHeadImgUrlFieldNumber = 3;
  const ::std::string& bigheadimgurl() const;
  void set_bigheadimgurl(const ::std::string& value);
  #if LANG_CXX11
  void set_bigheadimgurl(::std::string&& value);
  #endif
  void set_bigheadimgurl(const char* value);
  void set_bigheadimgurl(const char* value, size_t size);
  ::std::string* mutable_bigheadimgurl();
  ::std::string* release_bigheadimgurl();
  void set_allocated_bigheadimgurl(::std::string* bigheadimgurl);

  // optional string SmallHeadImgUrl = 4;
  bool has_smallheadimgurl() const;
  void clear_smallheadimgurl();
  static const int kSmallHeadImgUrlFieldNumber = 4;
  const ::std::string& smallheadimgurl() const;
  void set_smallheadimgurl(const ::std::string& value);
  #if LANG_CXX11
  void set_smallheadimgurl(::std::string&& value);
  #endif
  void set_smallheadimgurl(const char* value);
  void set_smallheadimgurl(const char* value, size_t size);
  ::std::string* mutable_smallheadimgurl();
  ::std::string* release_smallheadimgurl();
  void set_allocated_smallheadimgurl(::std::string* smallheadimgurl);

  // optional string AntispamTicket = 5;
  bool has_antispamticket() const;
  void clear_antispamticket();
  static const int kAntispamTicketFieldNumber = 5;
  const ::std::string& antispamticket() const;
  void set_antispamticket(const ::std::string& value);
  #if LANG_CXX11
  void set_antispamticket(::std::string&& value);
  #endif
  void set_antispamticket(const char* value);
  void set_antispamticket(const char* value, size_t size);
  ::std::string* mutable_antispamticket();
  ::std::string* release_antispamticket();
  void set_allocated_antispamticket(::std::string* antispamticket);

  // @@protoc_insertion_point(class_scope:micromsg.LbsRoomMember)
 private:
  void set_has_username();
  void clear_has_username();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_bigheadimgurl();
  void clear_has_bigheadimgurl();
  void set_has_smallheadimgurl();
  void clear_has_smallheadimgurl();
  void set_has_antispamticket();
  void clear_has_antispamticket();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr bigheadimgurl_;
  ::google::protobuf::internal::ArenaStringPtr smallheadimgurl_;
  ::google::protobuf::internal::ArenaStringPtr antispamticket_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LbsRoomMemberResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.LbsRoomMemberResponse) */ {
 public:
  LbsRoomMemberResponse();
  virtual ~LbsRoomMemberResponse();

  LbsRoomMemberResponse(const LbsRoomMemberResponse& from);

  inline LbsRoomMemberResponse& operator=(const LbsRoomMemberResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LbsRoomMemberResponse& default_instance();

  static inline const LbsRoomMemberResponse* internal_default_instance() {
    return reinterpret_cast<const LbsRoomMemberResponse*>(
               &_LbsRoomMemberResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(LbsRoomMemberResponse* other);

  // implements Message ----------------------------------------------

  inline LbsRoomMemberResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  LbsRoomMemberResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LbsRoomMemberResponse& from);
  void MergeFrom(const LbsRoomMemberResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LbsRoomMemberResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.LbsRoomMember MemberList = 3;
  int memberlist_size() const;
  void clear_memberlist();
  static const int kMemberListFieldNumber = 3;
  const ::micromsg::LbsRoomMember& memberlist(int index) const;
  ::micromsg::LbsRoomMember* mutable_memberlist(int index);
  ::micromsg::LbsRoomMember* add_memberlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::LbsRoomMember >*
      mutable_memberlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::LbsRoomMember >&
      memberlist() const;

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 MemberCount = 2;
  bool has_membercount() const;
  void clear_membercount();
  static const int kMemberCountFieldNumber = 2;
  ::google::protobuf::uint32 membercount() const;
  void set_membercount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.LbsRoomMemberResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_membercount();
  void clear_has_membercount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::LbsRoomMember > memberlist_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 membercount_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RadarSearchRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.RadarSearchRequest) */ {
 public:
  RadarSearchRequest();
  virtual ~RadarSearchRequest();

  RadarSearchRequest(const RadarSearchRequest& from);

  inline RadarSearchRequest& operator=(const RadarSearchRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RadarSearchRequest& default_instance();

  static inline const RadarSearchRequest* internal_default_instance() {
    return reinterpret_cast<const RadarSearchRequest*>(
               &_RadarSearchRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(RadarSearchRequest* other);

  // implements Message ----------------------------------------------

  inline RadarSearchRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  RadarSearchRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RadarSearchRequest& from);
  void MergeFrom(const RadarSearchRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RadarSearchRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string MacAddr = 6;
  bool has_macaddr() const;
  void clear_macaddr();
  static const int kMacAddrFieldNumber = 6;
  const ::std::string& macaddr() const;
  void set_macaddr(const ::std::string& value);
  #if LANG_CXX11
  void set_macaddr(::std::string&& value);
  #endif
  void set_macaddr(const char* value);
  void set_macaddr(const char* value, size_t size);
  ::std::string* mutable_macaddr();
  ::std::string* release_macaddr();
  void set_allocated_macaddr(::std::string* macaddr);

  // optional string CellId = 7;
  bool has_cellid() const;
  void clear_cellid();
  static const int kCellIdFieldNumber = 7;
  const ::std::string& cellid() const;
  void set_cellid(const ::std::string& value);
  #if LANG_CXX11
  void set_cellid(::std::string&& value);
  #endif
  void set_cellid(const char* value);
  void set_cellid(const char* value, size_t size);
  ::std::string* mutable_cellid();
  ::std::string* release_cellid();
  void set_allocated_cellid(::std::string* cellid);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 OpCode = 2;
  bool has_opcode() const;
  void clear_opcode();
  static const int kOpCodeFieldNumber = 2;
  ::google::protobuf::uint32 opcode() const;
  void set_opcode(::google::protobuf::uint32 value);

  // required float Longitude = 3;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 3;
  float longitude() const;
  void set_longitude(float value);

  // required float Latitude = 4;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 4;
  float latitude() const;
  void set_latitude(float value);

  // required int32 Precision = 5;
  bool has_precision() const;
  void clear_precision();
  static const int kPrecisionFieldNumber = 5;
  ::google::protobuf::int32 precision() const;
  void set_precision(::google::protobuf::int32 value);

  // optional int32 GPSSource = 8;
  bool has_gpssource() const;
  void clear_gpssource();
  static const int kGPSSourceFieldNumber = 8;
  ::google::protobuf::int32 gpssource() const;
  void set_gpssource(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.RadarSearchRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_opcode();
  void clear_has_opcode();
  void set_has_longitude();
  void clear_has_longitude();
  void set_has_latitude();
  void clear_has_latitude();
  void set_has_precision();
  void clear_has_precision();
  void set_has_macaddr();
  void clear_has_macaddr();
  void set_has_cellid();
  void clear_has_cellid();
  void set_has_gpssource();
  void clear_has_gpssource();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr macaddr_;
  ::google::protobuf::internal::ArenaStringPtr cellid_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 opcode_;
  float longitude_;
  float latitude_;
  ::google::protobuf::int32 precision_;
  ::google::protobuf::int32 gpssource_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RadarSearchMember : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.RadarSearchMember) */ {
 public:
  RadarSearchMember();
  virtual ~RadarSearchMember();

  RadarSearchMember(const RadarSearchMember& from);

  inline RadarSearchMember& operator=(const RadarSearchMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RadarSearchMember& default_instance();

  static inline const RadarSearchMember* internal_default_instance() {
    return reinterpret_cast<const RadarSearchMember*>(
               &_RadarSearchMember_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(RadarSearchMember* other);

  // implements Message ----------------------------------------------

  inline RadarSearchMember* New() const PROTOBUF_FINAL { return New(NULL); }

  RadarSearchMember* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RadarSearchMember& from);
  void MergeFrom(const RadarSearchMember& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RadarSearchMember* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string UserName = 1;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string NickName = 3;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNickNameFieldNumber = 3;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional string SmallImgUrl = 4;
  bool has_smallimgurl() const;
  void clear_smallimgurl();
  static const int kSmallImgUrlFieldNumber = 4;
  const ::std::string& smallimgurl() const;
  void set_smallimgurl(const ::std::string& value);
  #if LANG_CXX11
  void set_smallimgurl(::std::string&& value);
  #endif
  void set_smallimgurl(const char* value);
  void set_smallimgurl(const char* value, size_t size);
  ::std::string* mutable_smallimgurl();
  ::std::string* release_smallimgurl();
  void set_allocated_smallimgurl(::std::string* smallimgurl);

  // optional string EncodeUserName = 5;
  bool has_encodeusername() const;
  void clear_encodeusername();
  static const int kEncodeUserNameFieldNumber = 5;
  const ::std::string& encodeusername() const;
  void set_encodeusername(const ::std::string& value);
  #if LANG_CXX11
  void set_encodeusername(::std::string&& value);
  #endif
  void set_encodeusername(const char* value);
  void set_encodeusername(const char* value, size_t size);
  ::std::string* mutable_encodeusername();
  ::std::string* release_encodeusername();
  void set_allocated_encodeusername(::std::string* encodeusername);

  // optional string AntispamTicket = 6;
  bool has_antispamticket() const;
  void clear_antispamticket();
  static const int kAntispamTicketFieldNumber = 6;
  const ::std::string& antispamticket() const;
  void set_antispamticket(const ::std::string& value);
  #if LANG_CXX11
  void set_antispamticket(::std::string&& value);
  #endif
  void set_antispamticket(const char* value);
  void set_antispamticket(const char* value, size_t size);
  ::std::string* mutable_antispamticket();
  ::std::string* release_antispamticket();
  void set_allocated_antispamticket(::std::string* antispamticket);

  // required uint32 Distance = 2;
  bool has_distance() const;
  void clear_distance();
  static const int kDistanceFieldNumber = 2;
  ::google::protobuf::uint32 distance() const;
  void set_distance(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.RadarSearchMember)
 private:
  void set_has_username();
  void clear_has_username();
  void set_has_distance();
  void clear_has_distance();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_smallimgurl();
  void clear_has_smallimgurl();
  void set_has_encodeusername();
  void clear_has_encodeusername();
  void set_has_antispamticket();
  void clear_has_antispamticket();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr smallimgurl_;
  ::google::protobuf::internal::ArenaStringPtr encodeusername_;
  ::google::protobuf::internal::ArenaStringPtr antispamticket_;
  ::google::protobuf::uint32 distance_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RadarSearchResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.RadarSearchResponse) */ {
 public:
  RadarSearchResponse();
  virtual ~RadarSearchResponse();

  RadarSearchResponse(const RadarSearchResponse& from);

  inline RadarSearchResponse& operator=(const RadarSearchResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RadarSearchResponse& default_instance();

  static inline const RadarSearchResponse* internal_default_instance() {
    return reinterpret_cast<const RadarSearchResponse*>(
               &_RadarSearchResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(RadarSearchResponse* other);

  // implements Message ----------------------------------------------

  inline RadarSearchResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  RadarSearchResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RadarSearchResponse& from);
  void MergeFrom(const RadarSearchResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RadarSearchResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.RadarSearchMember MemberList = 5;
  int memberlist_size() const;
  void clear_memberlist();
  static const int kMemberListFieldNumber = 5;
  const ::micromsg::RadarSearchMember& memberlist(int index) const;
  ::micromsg::RadarSearchMember* mutable_memberlist(int index);
  ::micromsg::RadarSearchMember* add_memberlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::RadarSearchMember >*
      mutable_memberlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::RadarSearchMember >&
      memberlist() const;

  // optional string Ticket = 2;
  bool has_ticket() const;
  void clear_ticket();
  static const int kTicketFieldNumber = 2;
  const ::std::string& ticket() const;
  void set_ticket(const ::std::string& value);
  #if LANG_CXX11
  void set_ticket(::std::string&& value);
  #endif
  void set_ticket(const char* value);
  void set_ticket(const char* value, size_t size);
  ::std::string* mutable_ticket();
  ::std::string* release_ticket();
  void set_allocated_ticket(::std::string* ticket);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 OpCode = 3;
  bool has_opcode() const;
  void clear_opcode();
  static const int kOpCodeFieldNumber = 3;
  ::google::protobuf::uint32 opcode() const;
  void set_opcode(::google::protobuf::uint32 value);

  // required uint32 MemberCount = 4;
  bool has_membercount() const;
  void clear_membercount();
  static const int kMemberCountFieldNumber = 4;
  ::google::protobuf::uint32 membercount() const;
  void set_membercount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.RadarSearchResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_ticket();
  void clear_has_ticket();
  void set_has_opcode();
  void clear_has_opcode();
  void set_has_membercount();
  void clear_has_membercount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::RadarSearchMember > memberlist_;
  ::google::protobuf::internal::ArenaStringPtr ticket_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 opcode_;
  ::google::protobuf::uint32 membercount_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RadarChatRoomMember : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.RadarChatRoomMember) */ {
 public:
  RadarChatRoomMember();
  virtual ~RadarChatRoomMember();

  RadarChatRoomMember(const RadarChatRoomMember& from);

  inline RadarChatRoomMember& operator=(const RadarChatRoomMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RadarChatRoomMember& default_instance();

  static inline const RadarChatRoomMember* internal_default_instance() {
    return reinterpret_cast<const RadarChatRoomMember*>(
               &_RadarChatRoomMember_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(RadarChatRoomMember* other);

  // implements Message ----------------------------------------------

  inline RadarChatRoomMember* New() const PROTOBUF_FINAL { return New(NULL); }

  RadarChatRoomMember* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RadarChatRoomMember& from);
  void MergeFrom(const RadarChatRoomMember& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RadarChatRoomMember* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string UserName = 1;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string AntispamTicket = 2;
  bool has_antispamticket() const;
  void clear_antispamticket();
  static const int kAntispamTicketFieldNumber = 2;
  const ::std::string& antispamticket() const;
  void set_antispamticket(const ::std::string& value);
  #if LANG_CXX11
  void set_antispamticket(::std::string&& value);
  #endif
  void set_antispamticket(const char* value);
  void set_antispamticket(const char* value, size_t size);
  ::std::string* mutable_antispamticket();
  ::std::string* release_antispamticket();
  void set_allocated_antispamticket(::std::string* antispamticket);

  // optional string EncodeUserName = 3;
  bool has_encodeusername() const;
  void clear_encodeusername();
  static const int kEncodeUserNameFieldNumber = 3;
  const ::std::string& encodeusername() const;
  void set_encodeusername(const ::std::string& value);
  #if LANG_CXX11
  void set_encodeusername(::std::string&& value);
  #endif
  void set_encodeusername(const char* value);
  void set_encodeusername(const char* value, size_t size);
  ::std::string* mutable_encodeusername();
  ::std::string* release_encodeusername();
  void set_allocated_encodeusername(::std::string* encodeusername);

  // @@protoc_insertion_point(class_scope:micromsg.RadarChatRoomMember)
 private:
  void set_has_username();
  void clear_has_username();
  void set_has_antispamticket();
  void clear_has_antispamticket();
  void set_has_encodeusername();
  void clear_has_encodeusername();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr antispamticket_;
  ::google::protobuf::internal::ArenaStringPtr encodeusername_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RadarRelationChainRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.RadarRelationChainRequest) */ {
 public:
  RadarRelationChainRequest();
  virtual ~RadarRelationChainRequest();

  RadarRelationChainRequest(const RadarRelationChainRequest& from);

  inline RadarRelationChainRequest& operator=(const RadarRelationChainRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RadarRelationChainRequest& default_instance();

  static inline const RadarRelationChainRequest* internal_default_instance() {
    return reinterpret_cast<const RadarRelationChainRequest*>(
               &_RadarRelationChainRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(RadarRelationChainRequest* other);

  // implements Message ----------------------------------------------

  inline RadarRelationChainRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  RadarRelationChainRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RadarRelationChainRequest& from);
  void MergeFrom(const RadarRelationChainRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RadarRelationChainRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.RadarChatRoomMember MemberList = 3;
  int memberlist_size() const;
  void clear_memberlist();
  static const int kMemberListFieldNumber = 3;
  const ::micromsg::RadarChatRoomMember& memberlist(int index) const;
  ::micromsg::RadarChatRoomMember* mutable_memberlist(int index);
  ::micromsg::RadarChatRoomMember* add_memberlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::RadarChatRoomMember >*
      mutable_memberlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::RadarChatRoomMember >&
      memberlist() const;

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 MemberCount = 2;
  bool has_membercount() const;
  void clear_membercount();
  static const int kMemberCountFieldNumber = 2;
  ::google::protobuf::uint32 membercount() const;
  void set_membercount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.RadarRelationChainRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_membercount();
  void clear_has_membercount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::RadarChatRoomMember > memberlist_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 membercount_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RadarRelationChainResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.RadarRelationChainResponse) */ {
 public:
  RadarRelationChainResponse();
  virtual ~RadarRelationChainResponse();

  RadarRelationChainResponse(const RadarRelationChainResponse& from);

  inline RadarRelationChainResponse& operator=(const RadarRelationChainResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RadarRelationChainResponse& default_instance();

  static inline const RadarRelationChainResponse* internal_default_instance() {
    return reinterpret_cast<const RadarRelationChainResponse*>(
               &_RadarRelationChainResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(RadarRelationChainResponse* other);

  // implements Message ----------------------------------------------

  inline RadarRelationChainResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  RadarRelationChainResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RadarRelationChainResponse& from);
  void MergeFrom(const RadarRelationChainResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RadarRelationChainResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.RadarChatRoomMember MemberList = 4;
  int memberlist_size() const;
  void clear_memberlist();
  static const int kMemberListFieldNumber = 4;
  const ::micromsg::RadarChatRoomMember& memberlist(int index) const;
  ::micromsg::RadarChatRoomMember* mutable_memberlist(int index);
  ::micromsg::RadarChatRoomMember* add_memberlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::RadarChatRoomMember >*
      mutable_memberlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::RadarChatRoomMember >&
      memberlist() const;

  // optional string Ticket = 2;
  bool has_ticket() const;
  void clear_ticket();
  static const int kTicketFieldNumber = 2;
  const ::std::string& ticket() const;
  void set_ticket(const ::std::string& value);
  #if LANG_CXX11
  void set_ticket(::std::string&& value);
  #endif
  void set_ticket(const char* value);
  void set_ticket(const char* value, size_t size);
  ::std::string* mutable_ticket();
  ::std::string* release_ticket();
  void set_allocated_ticket(::std::string* ticket);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 MemberCount = 3;
  bool has_membercount() const;
  void clear_membercount();
  static const int kMemberCountFieldNumber = 3;
  ::google::protobuf::uint32 membercount() const;
  void set_membercount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.RadarRelationChainResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_ticket();
  void clear_has_ticket();
  void set_has_membercount();
  void clear_has_membercount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::RadarChatRoomMember > memberlist_;
  ::google::protobuf::internal::ArenaStringPtr ticket_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 membercount_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RadarCreateChatRoomRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.RadarCreateChatRoomRequest) */ {
 public:
  RadarCreateChatRoomRequest();
  virtual ~RadarCreateChatRoomRequest();

  RadarCreateChatRoomRequest(const RadarCreateChatRoomRequest& from);

  inline RadarCreateChatRoomRequest& operator=(const RadarCreateChatRoomRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RadarCreateChatRoomRequest& default_instance();

  static inline const RadarCreateChatRoomRequest* internal_default_instance() {
    return reinterpret_cast<const RadarCreateChatRoomRequest*>(
               &_RadarCreateChatRoomRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(RadarCreateChatRoomRequest* other);

  // implements Message ----------------------------------------------

  inline RadarCreateChatRoomRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  RadarCreateChatRoomRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RadarCreateChatRoomRequest& from);
  void MergeFrom(const RadarCreateChatRoomRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RadarCreateChatRoomRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string MacAddr = 5;
  bool has_macaddr() const;
  void clear_macaddr();
  static const int kMacAddrFieldNumber = 5;
  const ::std::string& macaddr() const;
  void set_macaddr(const ::std::string& value);
  #if LANG_CXX11
  void set_macaddr(::std::string&& value);
  #endif
  void set_macaddr(const char* value);
  void set_macaddr(const char* value, size_t size);
  ::std::string* mutable_macaddr();
  ::std::string* release_macaddr();
  void set_allocated_macaddr(::std::string* macaddr);

  // optional string CellId = 6;
  bool has_cellid() const;
  void clear_cellid();
  static const int kCellIdFieldNumber = 6;
  const ::std::string& cellid() const;
  void set_cellid(const ::std::string& value);
  #if LANG_CXX11
  void set_cellid(::std::string&& value);
  #endif
  void set_cellid(const char* value);
  void set_cellid(const char* value, size_t size);
  ::std::string* mutable_cellid();
  ::std::string* release_cellid();
  void set_allocated_cellid(::std::string* cellid);

  // optional string PassWord = 8;
  bool has_password() const;
  void clear_password();
  static const int kPassWordFieldNumber = 8;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required float Longitude = 2;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 2;
  float longitude() const;
  void set_longitude(float value);

  // required float Latitude = 3;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 3;
  float latitude() const;
  void set_latitude(float value);

  // required int32 Precision = 4;
  bool has_precision() const;
  void clear_precision();
  static const int kPrecisionFieldNumber = 4;
  ::google::protobuf::int32 precision() const;
  void set_precision(::google::protobuf::int32 value);

  // optional int32 GPSSource = 7;
  bool has_gpssource() const;
  void clear_gpssource();
  static const int kGPSSourceFieldNumber = 7;
  ::google::protobuf::int32 gpssource() const;
  void set_gpssource(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.RadarCreateChatRoomRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_longitude();
  void clear_has_longitude();
  void set_has_latitude();
  void clear_has_latitude();
  void set_has_precision();
  void clear_has_precision();
  void set_has_macaddr();
  void clear_has_macaddr();
  void set_has_cellid();
  void clear_has_cellid();
  void set_has_gpssource();
  void clear_has_gpssource();
  void set_has_password();
  void clear_has_password();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr macaddr_;
  ::google::protobuf::internal::ArenaStringPtr cellid_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::micromsg::BaseRequest* baserequest_;
  float longitude_;
  float latitude_;
  ::google::protobuf::int32 precision_;
  ::google::protobuf::int32 gpssource_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RadarCreateChatRoomResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.RadarCreateChatRoomResponse) */ {
 public:
  RadarCreateChatRoomResponse();
  virtual ~RadarCreateChatRoomResponse();

  RadarCreateChatRoomResponse(const RadarCreateChatRoomResponse& from);

  inline RadarCreateChatRoomResponse& operator=(const RadarCreateChatRoomResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RadarCreateChatRoomResponse& default_instance();

  static inline const RadarCreateChatRoomResponse* internal_default_instance() {
    return reinterpret_cast<const RadarCreateChatRoomResponse*>(
               &_RadarCreateChatRoomResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(RadarCreateChatRoomResponse* other);

  // implements Message ----------------------------------------------

  inline RadarCreateChatRoomResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  RadarCreateChatRoomResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RadarCreateChatRoomResponse& from);
  void MergeFrom(const RadarCreateChatRoomResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RadarCreateChatRoomResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ChatRoomName = 2;
  bool has_chatroomname() const;
  void clear_chatroomname();
  static const int kChatRoomNameFieldNumber = 2;
  const ::std::string& chatroomname() const;
  void set_chatroomname(const ::std::string& value);
  #if LANG_CXX11
  void set_chatroomname(::std::string&& value);
  #endif
  void set_chatroomname(const char* value);
  void set_chatroomname(const char* value, size_t size);
  ::std::string* mutable_chatroomname();
  ::std::string* release_chatroomname();
  void set_allocated_chatroomname(::std::string* chatroomname);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // @@protoc_insertion_point(class_scope:micromsg.RadarCreateChatRoomResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_chatroomname();
  void clear_has_chatroomname();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr chatroomname_;
  ::micromsg::BaseResponse* baseresponse_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetPOIListRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetPOIListRequest) */ {
 public:
  GetPOIListRequest();
  virtual ~GetPOIListRequest();

  GetPOIListRequest(const GetPOIListRequest& from);

  inline GetPOIListRequest& operator=(const GetPOIListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPOIListRequest& default_instance();

  static inline const GetPOIListRequest* internal_default_instance() {
    return reinterpret_cast<const GetPOIListRequest*>(
               &_GetPOIListRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(GetPOIListRequest* other);

  // implements Message ----------------------------------------------

  inline GetPOIListRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetPOIListRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetPOIListRequest& from);
  void MergeFrom(const GetPOIListRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetPOIListRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Keyword = 4;
  bool has_keyword() const;
  void clear_keyword();
  static const int kKeywordFieldNumber = 4;
  const ::std::string& keyword() const;
  void set_keyword(const ::std::string& value);
  #if LANG_CXX11
  void set_keyword(::std::string&& value);
  #endif
  void set_keyword(const char* value);
  void set_keyword(const char* value, size_t size);
  ::std::string* mutable_keyword();
  ::std::string* release_keyword();
  void set_allocated_keyword(::std::string* keyword);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.SKBuiltinBuffer_t Buff = 5;
  bool has_buff() const;
  void clear_buff();
  static const int kBuffFieldNumber = 5;
  const ::micromsg::SKBuiltinBuffer_t& buff() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_buff();
  ::micromsg::SKBuiltinBuffer_t* release_buff();
  void set_allocated_buff(::micromsg::SKBuiltinBuffer_t* buff);

  // required uint32 Scene = 2;
  bool has_scene() const;
  void clear_scene();
  static const int kSceneFieldNumber = 2;
  ::google::protobuf::uint32 scene() const;
  void set_scene(::google::protobuf::uint32 value);

  // required uint32 OpCode = 3;
  bool has_opcode() const;
  void clear_opcode();
  static const int kOpCodeFieldNumber = 3;
  ::google::protobuf::uint32 opcode() const;
  void set_opcode(::google::protobuf::uint32 value);

  // required double Longitude = 6;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 6;
  double longitude() const;
  void set_longitude(double value);

  // required double Latitude = 7;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 7;
  double latitude() const;
  void set_latitude(double value);

  // @@protoc_insertion_point(class_scope:micromsg.GetPOIListRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_scene();
  void clear_has_scene();
  void set_has_opcode();
  void clear_has_opcode();
  void set_has_keyword();
  void clear_has_keyword();
  void set_has_buff();
  void clear_has_buff();
  void set_has_longitude();
  void clear_has_longitude();
  void set_has_latitude();
  void clear_has_latitude();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr keyword_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::SKBuiltinBuffer_t* buff_;
  ::google::protobuf::uint32 scene_;
  ::google::protobuf::uint32 opcode_;
  double longitude_;
  double latitude_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class POIItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.POIItem) */ {
 public:
  POIItem();
  virtual ~POIItem();

  POIItem(const POIItem& from);

  inline POIItem& operator=(const POIItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const POIItem& default_instance();

  static inline const POIItem* internal_default_instance() {
    return reinterpret_cast<const POIItem*>(
               &_POIItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(POIItem* other);

  // implements Message ----------------------------------------------

  inline POIItem* New() const PROTOBUF_FINAL { return New(NULL); }

  POIItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const POIItem& from);
  void MergeFrom(const POIItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(POIItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string Addr = 2;
  bool has_addr() const;
  void clear_addr();
  static const int kAddrFieldNumber = 2;
  const ::std::string& addr() const;
  void set_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_addr(::std::string&& value);
  #endif
  void set_addr(const char* value);
  void set_addr(const char* value, size_t size);
  ::std::string* mutable_addr();
  ::std::string* release_addr();
  void set_allocated_addr(::std::string* addr);

  // optional string TypeId = 5;
  bool has_typeid_() const;
  void clear_typeid_();
  static const int kTypeIdFieldNumber = 5;
  const ::std::string& typeid_() const;
  void set_typeid_(const ::std::string& value);
  #if LANG_CXX11
  void set_typeid_(::std::string&& value);
  #endif
  void set_typeid_(const char* value);
  void set_typeid_(const char* value, size_t size);
  ::std::string* mutable_typeid_();
  ::std::string* release_typeid_();
  void set_allocated_typeid_(::std::string* typeid_);

  // optional string Link = 6;
  bool has_link() const;
  void clear_link();
  static const int kLinkFieldNumber = 6;
  const ::std::string& link() const;
  void set_link(const ::std::string& value);
  #if LANG_CXX11
  void set_link(::std::string&& value);
  #endif
  void set_link(const char* value);
  void set_link(const char* value, size_t size);
  ::std::string* mutable_link();
  ::std::string* release_link();
  void set_allocated_link(::std::string* link);

  // optional string Nation = 7;
  bool has_nation() const;
  void clear_nation();
  static const int kNationFieldNumber = 7;
  const ::std::string& nation() const;
  void set_nation(const ::std::string& value);
  #if LANG_CXX11
  void set_nation(::std::string&& value);
  #endif
  void set_nation(const char* value);
  void set_nation(const char* value, size_t size);
  ::std::string* mutable_nation();
  ::std::string* release_nation();
  void set_allocated_nation(::std::string* nation);

  // optional string Province = 8;
  bool has_province() const;
  void clear_province();
  static const int kProvinceFieldNumber = 8;
  const ::std::string& province() const;
  void set_province(const ::std::string& value);
  #if LANG_CXX11
  void set_province(::std::string&& value);
  #endif
  void set_province(const char* value);
  void set_province(const char* value, size_t size);
  ::std::string* mutable_province();
  ::std::string* release_province();
  void set_allocated_province(::std::string* province);

  // optional string City = 9;
  bool has_city() const;
  void clear_city();
  static const int kCityFieldNumber = 9;
  const ::std::string& city() const;
  void set_city(const ::std::string& value);
  #if LANG_CXX11
  void set_city(::std::string&& value);
  #endif
  void set_city(const char* value);
  void set_city(const char* value, size_t size);
  ::std::string* mutable_city();
  ::std::string* release_city();
  void set_allocated_city(::std::string* city);

  // optional string District = 10;
  bool has_district() const;
  void clear_district();
  static const int kDistrictFieldNumber = 10;
  const ::std::string& district() const;
  void set_district(const ::std::string& value);
  #if LANG_CXX11
  void set_district(::std::string&& value);
  #endif
  void set_district(const char* value);
  void set_district(const char* value, size_t size);
  ::std::string* mutable_district();
  ::std::string* release_district();
  void set_allocated_district(::std::string* district);

  // optional string Street = 11;
  bool has_street() const;
  void clear_street();
  static const int kStreetFieldNumber = 11;
  const ::std::string& street() const;
  void set_street(const ::std::string& value);
  #if LANG_CXX11
  void set_street(::std::string&& value);
  #endif
  void set_street(const char* value);
  void set_street(const char* value, size_t size);
  ::std::string* mutable_street();
  ::std::string* release_street();
  void set_allocated_street(::std::string* street);

  // optional string SubAddr = 12;
  bool has_subaddr() const;
  void clear_subaddr();
  static const int kSubAddrFieldNumber = 12;
  const ::std::string& subaddr() const;
  void set_subaddr(const ::std::string& value);
  #if LANG_CXX11
  void set_subaddr(::std::string&& value);
  #endif
  void set_subaddr(const char* value);
  void set_subaddr(const char* value, size_t size);
  ::std::string* mutable_subaddr();
  ::std::string* release_subaddr();
  void set_allocated_subaddr(::std::string* subaddr);

  // required double Longitude = 3;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 3;
  double longitude() const;
  void set_longitude(double value);

  // required double Latitude = 4;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 4;
  double latitude() const;
  void set_latitude(double value);

  // @@protoc_insertion_point(class_scope:micromsg.POIItem)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_addr();
  void clear_has_addr();
  void set_has_longitude();
  void clear_has_longitude();
  void set_has_latitude();
  void clear_has_latitude();
  void set_has_typeid_();
  void clear_has_typeid_();
  void set_has_link();
  void clear_has_link();
  void set_has_nation();
  void clear_has_nation();
  void set_has_province();
  void clear_has_province();
  void set_has_city();
  void clear_has_city();
  void set_has_district();
  void clear_has_district();
  void set_has_street();
  void clear_has_street();
  void set_has_subaddr();
  void clear_has_subaddr();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr addr_;
  ::google::protobuf::internal::ArenaStringPtr typeid__;
  ::google::protobuf::internal::ArenaStringPtr link_;
  ::google::protobuf::internal::ArenaStringPtr nation_;
  ::google::protobuf::internal::ArenaStringPtr province_;
  ::google::protobuf::internal::ArenaStringPtr city_;
  ::google::protobuf::internal::ArenaStringPtr district_;
  ::google::protobuf::internal::ArenaStringPtr street_;
  ::google::protobuf::internal::ArenaStringPtr subaddr_;
  double longitude_;
  double latitude_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetPOIListResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetPOIListResponse) */ {
 public:
  GetPOIListResponse();
  virtual ~GetPOIListResponse();

  GetPOIListResponse(const GetPOIListResponse& from);

  inline GetPOIListResponse& operator=(const GetPOIListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPOIListResponse& default_instance();

  static inline const GetPOIListResponse* internal_default_instance() {
    return reinterpret_cast<const GetPOIListResponse*>(
               &_GetPOIListResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(GetPOIListResponse* other);

  // implements Message ----------------------------------------------

  inline GetPOIListResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetPOIListResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetPOIListResponse& from);
  void MergeFrom(const GetPOIListResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetPOIListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.POIItem POIList = 3;
  int poilist_size() const;
  void clear_poilist();
  static const int kPOIListFieldNumber = 3;
  const ::micromsg::POIItem& poilist(int index) const;
  ::micromsg::POIItem* mutable_poilist(int index);
  ::micromsg::POIItem* add_poilist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::POIItem >*
      mutable_poilist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::POIItem >&
      poilist() const;

  // optional string Url = 7;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 7;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional string LogoUrl = 8;
  bool has_logourl() const;
  void clear_logourl();
  static const int kLogoUrlFieldNumber = 8;
  const ::std::string& logourl() const;
  void set_logourl(const ::std::string& value);
  #if LANG_CXX11
  void set_logourl(::std::string&& value);
  #endif
  void set_logourl(const char* value);
  void set_logourl(const char* value, size_t size);
  ::std::string* mutable_logourl();
  ::std::string* release_logourl();
  void set_allocated_logourl(::std::string* logourl);

  // optional string Text = 9;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 9;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // optional string OpenId = 10;
  bool has_openid() const;
  void clear_openid();
  static const int kOpenIdFieldNumber = 10;
  const ::std::string& openid() const;
  void set_openid(const ::std::string& value);
  #if LANG_CXX11
  void set_openid(::std::string&& value);
  #endif
  void set_openid(const char* value);
  void set_openid(const char* value, size_t size);
  ::std::string* mutable_openid();
  ::std::string* release_openid();
  void set_allocated_openid(::std::string* openid);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.SKBuiltinBuffer_t Buff = 6;
  bool has_buff() const;
  void clear_buff();
  static const int kBuffFieldNumber = 6;
  const ::micromsg::SKBuiltinBuffer_t& buff() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_buff();
  ::micromsg::SKBuiltinBuffer_t* release_buff();
  void set_allocated_buff(::micromsg::SKBuiltinBuffer_t* buff);

  // required uint32 ListCount = 2;
  bool has_listcount() const;
  void clear_listcount();
  static const int kListCountFieldNumber = 2;
  ::google::protobuf::uint32 listcount() const;
  void set_listcount(::google::protobuf::uint32 value);

  // required uint32 OpCode = 4;
  bool has_opcode() const;
  void clear_opcode();
  static const int kOpCodeFieldNumber = 4;
  ::google::protobuf::uint32 opcode() const;
  void set_opcode(::google::protobuf::uint32 value);

  // required uint32 IsEnd = 5;
  bool has_isend() const;
  void clear_isend();
  static const int kIsEndFieldNumber = 5;
  ::google::protobuf::uint32 isend() const;
  void set_isend(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetPOIListResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_listcount();
  void clear_has_listcount();
  void set_has_opcode();
  void clear_has_opcode();
  void set_has_isend();
  void clear_has_isend();
  void set_has_buff();
  void clear_has_buff();
  void set_has_url();
  void clear_has_url();
  void set_has_logourl();
  void clear_has_logourl();
  void set_has_text();
  void clear_has_text();
  void set_has_openid();
  void clear_has_openid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::POIItem > poilist_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr logourl_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::internal::ArenaStringPtr openid_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::SKBuiltinBuffer_t* buff_;
  ::google::protobuf::uint32 listcount_;
  ::google::protobuf::uint32 opcode_;
  ::google::protobuf::uint32 isend_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FacingMember : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.FacingMember) */ {
 public:
  FacingMember();
  virtual ~FacingMember();

  FacingMember(const FacingMember& from);

  inline FacingMember& operator=(const FacingMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacingMember& default_instance();

  static inline const FacingMember* internal_default_instance() {
    return reinterpret_cast<const FacingMember*>(
               &_FacingMember_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(FacingMember* other);

  // implements Message ----------------------------------------------

  inline FacingMember* New() const PROTOBUF_FINAL { return New(NULL); }

  FacingMember* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FacingMember& from);
  void MergeFrom(const FacingMember& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FacingMember* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string UserName = 1;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string EncodeUserName = 2;
  bool has_encodeusername() const;
  void clear_encodeusername();
  static const int kEncodeUserNameFieldNumber = 2;
  const ::std::string& encodeusername() const;
  void set_encodeusername(const ::std::string& value);
  #if LANG_CXX11
  void set_encodeusername(::std::string&& value);
  #endif
  void set_encodeusername(const char* value);
  void set_encodeusername(const char* value, size_t size);
  ::std::string* mutable_encodeusername();
  ::std::string* release_encodeusername();
  void set_allocated_encodeusername(::std::string* encodeusername);

  // optional string NickName = 3;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNickNameFieldNumber = 3;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional string SmallImgUrl = 4;
  bool has_smallimgurl() const;
  void clear_smallimgurl();
  static const int kSmallImgUrlFieldNumber = 4;
  const ::std::string& smallimgurl() const;
  void set_smallimgurl(const ::std::string& value);
  #if LANG_CXX11
  void set_smallimgurl(::std::string&& value);
  #endif
  void set_smallimgurl(const char* value);
  void set_smallimgurl(const char* value, size_t size);
  ::std::string* mutable_smallimgurl();
  ::std::string* release_smallimgurl();
  void set_allocated_smallimgurl(::std::string* smallimgurl);

  // required uint32 Status = 5;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 5;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.FacingMember)
 private:
  void set_has_username();
  void clear_has_username();
  void set_has_encodeusername();
  void clear_has_encodeusername();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_smallimgurl();
  void clear_has_smallimgurl();
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr encodeusername_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr smallimgurl_;
  ::google::protobuf::uint32 status_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FacingCreateChatRoomRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.FacingCreateChatRoomRequest) */ {
 public:
  FacingCreateChatRoomRequest();
  virtual ~FacingCreateChatRoomRequest();

  FacingCreateChatRoomRequest(const FacingCreateChatRoomRequest& from);

  inline FacingCreateChatRoomRequest& operator=(const FacingCreateChatRoomRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacingCreateChatRoomRequest& default_instance();

  static inline const FacingCreateChatRoomRequest* internal_default_instance() {
    return reinterpret_cast<const FacingCreateChatRoomRequest*>(
               &_FacingCreateChatRoomRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    51;

  void Swap(FacingCreateChatRoomRequest* other);

  // implements Message ----------------------------------------------

  inline FacingCreateChatRoomRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  FacingCreateChatRoomRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FacingCreateChatRoomRequest& from);
  void MergeFrom(const FacingCreateChatRoomRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FacingCreateChatRoomRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string PassWord = 3;
  bool has_password() const;
  void clear_password();
  static const int kPassWordFieldNumber = 3;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional string MacAddr = 7;
  bool has_macaddr() const;
  void clear_macaddr();
  static const int kMacAddrFieldNumber = 7;
  const ::std::string& macaddr() const;
  void set_macaddr(const ::std::string& value);
  #if LANG_CXX11
  void set_macaddr(::std::string&& value);
  #endif
  void set_macaddr(const char* value);
  void set_macaddr(const char* value, size_t size);
  ::std::string* mutable_macaddr();
  ::std::string* release_macaddr();
  void set_allocated_macaddr(::std::string* macaddr);

  // optional string CellId = 8;
  bool has_cellid() const;
  void clear_cellid();
  static const int kCellIdFieldNumber = 8;
  const ::std::string& cellid() const;
  void set_cellid(const ::std::string& value);
  #if LANG_CXX11
  void set_cellid(::std::string&& value);
  #endif
  void set_cellid(const char* value);
  void set_cellid(const char* value, size_t size);
  ::std::string* mutable_cellid();
  ::std::string* release_cellid();
  void set_allocated_cellid(::std::string* cellid);

  // optional string Ticket = 10;
  bool has_ticket() const;
  void clear_ticket();
  static const int kTicketFieldNumber = 10;
  const ::std::string& ticket() const;
  void set_ticket(const ::std::string& value);
  #if LANG_CXX11
  void set_ticket(::std::string&& value);
  #endif
  void set_ticket(const char* value);
  void set_ticket(const char* value, size_t size);
  ::std::string* mutable_ticket();
  ::std::string* release_ticket();
  void set_allocated_ticket(::std::string* ticket);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 OpCode = 2;
  bool has_opcode() const;
  void clear_opcode();
  static const int kOpCodeFieldNumber = 2;
  ::google::protobuf::uint32 opcode() const;
  void set_opcode(::google::protobuf::uint32 value);

  // required float Longitude = 4;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 4;
  float longitude() const;
  void set_longitude(float value);

  // required float Latitude = 5;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 5;
  float latitude() const;
  void set_latitude(float value);

  // required int32 Precision = 6;
  bool has_precision() const;
  void clear_precision();
  static const int kPrecisionFieldNumber = 6;
  ::google::protobuf::int32 precision() const;
  void set_precision(::google::protobuf::int32 value);

  // optional int32 GPSSource = 9;
  bool has_gpssource() const;
  void clear_gpssource();
  static const int kGPSSourceFieldNumber = 9;
  ::google::protobuf::int32 gpssource() const;
  void set_gpssource(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.FacingCreateChatRoomRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_opcode();
  void clear_has_opcode();
  void set_has_password();
  void clear_has_password();
  void set_has_longitude();
  void clear_has_longitude();
  void set_has_latitude();
  void clear_has_latitude();
  void set_has_precision();
  void clear_has_precision();
  void set_has_macaddr();
  void clear_has_macaddr();
  void set_has_cellid();
  void clear_has_cellid();
  void set_has_gpssource();
  void clear_has_gpssource();
  void set_has_ticket();
  void clear_has_ticket();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr macaddr_;
  ::google::protobuf::internal::ArenaStringPtr cellid_;
  ::google::protobuf::internal::ArenaStringPtr ticket_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 opcode_;
  float longitude_;
  float latitude_;
  ::google::protobuf::int32 precision_;
  ::google::protobuf::int32 gpssource_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FacingCreateChatRoomResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.FacingCreateChatRoomResponse) */ {
 public:
  FacingCreateChatRoomResponse();
  virtual ~FacingCreateChatRoomResponse();

  FacingCreateChatRoomResponse(const FacingCreateChatRoomResponse& from);

  inline FacingCreateChatRoomResponse& operator=(const FacingCreateChatRoomResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacingCreateChatRoomResponse& default_instance();

  static inline const FacingCreateChatRoomResponse* internal_default_instance() {
    return reinterpret_cast<const FacingCreateChatRoomResponse*>(
               &_FacingCreateChatRoomResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    52;

  void Swap(FacingCreateChatRoomResponse* other);

  // implements Message ----------------------------------------------

  inline FacingCreateChatRoomResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  FacingCreateChatRoomResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FacingCreateChatRoomResponse& from);
  void MergeFrom(const FacingCreateChatRoomResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FacingCreateChatRoomResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.FacingMember MemberList = 4;
  int memberlist_size() const;
  void clear_memberlist();
  static const int kMemberListFieldNumber = 4;
  const ::micromsg::FacingMember& memberlist(int index) const;
  ::micromsg::FacingMember* mutable_memberlist(int index);
  ::micromsg::FacingMember* add_memberlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::FacingMember >*
      mutable_memberlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::FacingMember >&
      memberlist() const;

  // optional string Ticket = 2;
  bool has_ticket() const;
  void clear_ticket();
  static const int kTicketFieldNumber = 2;
  const ::std::string& ticket() const;
  void set_ticket(const ::std::string& value);
  #if LANG_CXX11
  void set_ticket(::std::string&& value);
  #endif
  void set_ticket(const char* value);
  void set_ticket(const char* value, size_t size);
  ::std::string* mutable_ticket();
  ::std::string* release_ticket();
  void set_allocated_ticket(::std::string* ticket);

  // optional string ChatRoomName = 5;
  bool has_chatroomname() const;
  void clear_chatroomname();
  static const int kChatRoomNameFieldNumber = 5;
  const ::std::string& chatroomname() const;
  void set_chatroomname(const ::std::string& value);
  #if LANG_CXX11
  void set_chatroomname(::std::string&& value);
  #endif
  void set_chatroomname(const char* value);
  void set_chatroomname(const char* value, size_t size);
  ::std::string* mutable_chatroomname();
  ::std::string* release_chatroomname();
  void set_allocated_chatroomname(::std::string* chatroomname);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 MemberCount = 3;
  bool has_membercount() const;
  void clear_membercount();
  static const int kMemberCountFieldNumber = 3;
  ::google::protobuf::uint32 membercount() const;
  void set_membercount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.FacingCreateChatRoomResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_ticket();
  void clear_has_ticket();
  void set_has_membercount();
  void clear_has_membercount();
  void set_has_chatroomname();
  void clear_has_chatroomname();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::FacingMember > memberlist_;
  ::google::protobuf::internal::ArenaStringPtr ticket_;
  ::google::protobuf::internal::ArenaStringPtr chatroomname_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 membercount_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetAddressRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetAddressRequest) */ {
 public:
  GetAddressRequest();
  virtual ~GetAddressRequest();

  GetAddressRequest(const GetAddressRequest& from);

  inline GetAddressRequest& operator=(const GetAddressRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAddressRequest& default_instance();

  static inline const GetAddressRequest* internal_default_instance() {
    return reinterpret_cast<const GetAddressRequest*>(
               &_GetAddressRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    53;

  void Swap(GetAddressRequest* other);

  // implements Message ----------------------------------------------

  inline GetAddressRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetAddressRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetAddressRequest& from);
  void MergeFrom(const GetAddressRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetAddressRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required double Longitude = 2;
  bool has_longitude() const;
  void clear_longitude();
  static const int kLongitudeFieldNumber = 2;
  double longitude() const;
  void set_longitude(double value);

  // required double Latitude = 3;
  bool has_latitude() const;
  void clear_latitude();
  static const int kLatitudeFieldNumber = 3;
  double latitude() const;
  void set_latitude(double value);

  // @@protoc_insertion_point(class_scope:micromsg.GetAddressRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_longitude();
  void clear_has_longitude();
  void set_has_latitude();
  void clear_has_latitude();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  double longitude_;
  double latitude_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetAddressResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetAddressResponse) */ {
 public:
  GetAddressResponse();
  virtual ~GetAddressResponse();

  GetAddressResponse(const GetAddressResponse& from);

  inline GetAddressResponse& operator=(const GetAddressResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAddressResponse& default_instance();

  static inline const GetAddressResponse* internal_default_instance() {
    return reinterpret_cast<const GetAddressResponse*>(
               &_GetAddressResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    54;

  void Swap(GetAddressResponse* other);

  // implements Message ----------------------------------------------

  inline GetAddressResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetAddressResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetAddressResponse& from);
  void MergeFrom(const GetAddressResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetAddressResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string RetJson = 2;
  bool has_retjson() const;
  void clear_retjson();
  static const int kRetJsonFieldNumber = 2;
  const ::std::string& retjson() const;
  void set_retjson(const ::std::string& value);
  #if LANG_CXX11
  void set_retjson(::std::string&& value);
  #endif
  void set_retjson(const char* value);
  void set_retjson(const char* value, size_t size);
  ::std::string* mutable_retjson();
  ::std::string* release_retjson();
  void set_allocated_retjson(::std::string* retjson);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // @@protoc_insertion_point(class_scope:micromsg.GetAddressResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_retjson();
  void clear_has_retjson();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr retjson_;
  ::micromsg::BaseResponse* baseresponse_;
  friend struct protobuf_mmlbs_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// LbsLifeExtInfo

// required uint32 Limit = 1;
inline bool LbsLifeExtInfo::has_limit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LbsLifeExtInfo::set_has_limit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LbsLifeExtInfo::clear_has_limit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LbsLifeExtInfo::clear_limit() {
  limit_ = 0u;
  clear_has_limit();
}
inline ::google::protobuf::uint32 LbsLifeExtInfo::limit() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLifeExtInfo.Limit)
  return limit_;
}
inline void LbsLifeExtInfo::set_limit(::google::protobuf::uint32 value) {
  set_has_limit();
  limit_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsLifeExtInfo.Limit)
}

// required uint32 Page = 2;
inline bool LbsLifeExtInfo::has_page() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LbsLifeExtInfo::set_has_page() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LbsLifeExtInfo::clear_has_page() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LbsLifeExtInfo::clear_page() {
  page_ = 0u;
  clear_has_page();
}
inline ::google::protobuf::uint32 LbsLifeExtInfo::page() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLifeExtInfo.Page)
  return page_;
}
inline void LbsLifeExtInfo::set_page(::google::protobuf::uint32 value) {
  set_has_page();
  page_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsLifeExtInfo.Page)
}

// optional string sessiontoken = 3;
inline bool LbsLifeExtInfo::has_sessiontoken() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LbsLifeExtInfo::set_has_sessiontoken() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LbsLifeExtInfo::clear_has_sessiontoken() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LbsLifeExtInfo::clear_sessiontoken() {
  sessiontoken_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sessiontoken();
}
inline const ::std::string& LbsLifeExtInfo::sessiontoken() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLifeExtInfo.sessiontoken)
  return sessiontoken_.GetNoArena();
}
inline void LbsLifeExtInfo::set_sessiontoken(const ::std::string& value) {
  set_has_sessiontoken();
  sessiontoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsLifeExtInfo.sessiontoken)
}
#if LANG_CXX11
inline void LbsLifeExtInfo::set_sessiontoken(::std::string&& value) {
  set_has_sessiontoken();
  sessiontoken_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsLifeExtInfo.sessiontoken)
}
#endif
inline void LbsLifeExtInfo::set_sessiontoken(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sessiontoken();
  sessiontoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsLifeExtInfo.sessiontoken)
}
inline void LbsLifeExtInfo::set_sessiontoken(const char* value, size_t size) {
  set_has_sessiontoken();
  sessiontoken_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsLifeExtInfo.sessiontoken)
}
inline ::std::string* LbsLifeExtInfo::mutable_sessiontoken() {
  set_has_sessiontoken();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsLifeExtInfo.sessiontoken)
  return sessiontoken_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsLifeExtInfo::release_sessiontoken() {
  // @@protoc_insertion_point(field_release:micromsg.LbsLifeExtInfo.sessiontoken)
  clear_has_sessiontoken();
  return sessiontoken_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsLifeExtInfo::set_allocated_sessiontoken(::std::string* sessiontoken) {
  if (sessiontoken != NULL) {
    set_has_sessiontoken();
  } else {
    clear_has_sessiontoken();
  }
  sessiontoken_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sessiontoken);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsLifeExtInfo.sessiontoken)
}

// -------------------------------------------------------------------

// LbsLocation

// required float Longitude = 1;
inline bool LbsLocation::has_longitude() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LbsLocation::set_has_longitude() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LbsLocation::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LbsLocation::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline float LbsLocation::longitude() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLocation.Longitude)
  return longitude_;
}
inline void LbsLocation::set_longitude(float value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsLocation.Longitude)
}

// required float Latitude = 2;
inline bool LbsLocation::has_latitude() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LbsLocation::set_has_latitude() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LbsLocation::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LbsLocation::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline float LbsLocation::latitude() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLocation.Latitude)
  return latitude_;
}
inline void LbsLocation::set_latitude(float value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsLocation.Latitude)
}

// required int32 Precision = 3;
inline bool LbsLocation::has_precision() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LbsLocation::set_has_precision() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LbsLocation::clear_has_precision() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LbsLocation::clear_precision() {
  precision_ = 0;
  clear_has_precision();
}
inline ::google::protobuf::int32 LbsLocation::precision() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLocation.Precision)
  return precision_;
}
inline void LbsLocation::set_precision(::google::protobuf::int32 value) {
  set_has_precision();
  precision_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsLocation.Precision)
}

// optional string MacAddr = 4;
inline bool LbsLocation::has_macaddr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LbsLocation::set_has_macaddr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LbsLocation::clear_has_macaddr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LbsLocation::clear_macaddr() {
  macaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_macaddr();
}
inline const ::std::string& LbsLocation::macaddr() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLocation.MacAddr)
  return macaddr_.GetNoArena();
}
inline void LbsLocation::set_macaddr(const ::std::string& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsLocation.MacAddr)
}
#if LANG_CXX11
inline void LbsLocation::set_macaddr(::std::string&& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsLocation.MacAddr)
}
#endif
inline void LbsLocation::set_macaddr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsLocation.MacAddr)
}
inline void LbsLocation::set_macaddr(const char* value, size_t size) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsLocation.MacAddr)
}
inline ::std::string* LbsLocation::mutable_macaddr() {
  set_has_macaddr();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsLocation.MacAddr)
  return macaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsLocation::release_macaddr() {
  // @@protoc_insertion_point(field_release:micromsg.LbsLocation.MacAddr)
  clear_has_macaddr();
  return macaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsLocation::set_allocated_macaddr(::std::string* macaddr) {
  if (macaddr != NULL) {
    set_has_macaddr();
  } else {
    clear_has_macaddr();
  }
  macaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), macaddr);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsLocation.MacAddr)
}

// optional string CellId = 5;
inline bool LbsLocation::has_cellid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LbsLocation::set_has_cellid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LbsLocation::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LbsLocation::clear_cellid() {
  cellid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cellid();
}
inline const ::std::string& LbsLocation::cellid() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLocation.CellId)
  return cellid_.GetNoArena();
}
inline void LbsLocation::set_cellid(const ::std::string& value) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsLocation.CellId)
}
#if LANG_CXX11
inline void LbsLocation::set_cellid(::std::string&& value) {
  set_has_cellid();
  cellid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsLocation.CellId)
}
#endif
inline void LbsLocation::set_cellid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsLocation.CellId)
}
inline void LbsLocation::set_cellid(const char* value, size_t size) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsLocation.CellId)
}
inline ::std::string* LbsLocation::mutable_cellid() {
  set_has_cellid();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsLocation.CellId)
  return cellid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsLocation::release_cellid() {
  // @@protoc_insertion_point(field_release:micromsg.LbsLocation.CellId)
  clear_has_cellid();
  return cellid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsLocation::set_allocated_cellid(::std::string* cellid) {
  if (cellid != NULL) {
    set_has_cellid();
  } else {
    clear_has_cellid();
  }
  cellid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cellid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsLocation.CellId)
}

// optional int32 GPSSource = 6;
inline bool LbsLocation::has_gpssource() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LbsLocation::set_has_gpssource() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LbsLocation::clear_has_gpssource() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LbsLocation::clear_gpssource() {
  gpssource_ = 0;
  clear_has_gpssource();
}
inline ::google::protobuf::int32 LbsLocation::gpssource() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLocation.GPSSource)
  return gpssource_;
}
inline void LbsLocation::set_gpssource(::google::protobuf::int32 value) {
  set_has_gpssource();
  gpssource_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsLocation.GPSSource)
}

// -------------------------------------------------------------------

// CreatePoiRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool CreatePoiRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CreatePoiRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CreatePoiRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CreatePoiRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& CreatePoiRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.CreatePoiRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* CreatePoiRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.CreatePoiRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* CreatePoiRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.CreatePoiRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void CreatePoiRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.CreatePoiRequest.BaseRequest)
}

// optional string Name = 2;
inline bool CreatePoiRequest::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreatePoiRequest::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreatePoiRequest::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreatePoiRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CreatePoiRequest::name() const {
  // @@protoc_insertion_point(field_get:micromsg.CreatePoiRequest.Name)
  return name_.GetNoArena();
}
inline void CreatePoiRequest::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CreatePoiRequest.Name)
}
#if LANG_CXX11
inline void CreatePoiRequest::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CreatePoiRequest.Name)
}
#endif
inline void CreatePoiRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CreatePoiRequest.Name)
}
inline void CreatePoiRequest::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CreatePoiRequest.Name)
}
inline ::std::string* CreatePoiRequest::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:micromsg.CreatePoiRequest.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreatePoiRequest::release_name() {
  // @@protoc_insertion_point(field_release:micromsg.CreatePoiRequest.Name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreatePoiRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CreatePoiRequest.Name)
}

// optional string District = 3;
inline bool CreatePoiRequest::has_district() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreatePoiRequest::set_has_district() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreatePoiRequest::clear_has_district() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreatePoiRequest::clear_district() {
  district_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_district();
}
inline const ::std::string& CreatePoiRequest::district() const {
  // @@protoc_insertion_point(field_get:micromsg.CreatePoiRequest.District)
  return district_.GetNoArena();
}
inline void CreatePoiRequest::set_district(const ::std::string& value) {
  set_has_district();
  district_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CreatePoiRequest.District)
}
#if LANG_CXX11
inline void CreatePoiRequest::set_district(::std::string&& value) {
  set_has_district();
  district_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CreatePoiRequest.District)
}
#endif
inline void CreatePoiRequest::set_district(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_district();
  district_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CreatePoiRequest.District)
}
inline void CreatePoiRequest::set_district(const char* value, size_t size) {
  set_has_district();
  district_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CreatePoiRequest.District)
}
inline ::std::string* CreatePoiRequest::mutable_district() {
  set_has_district();
  // @@protoc_insertion_point(field_mutable:micromsg.CreatePoiRequest.District)
  return district_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreatePoiRequest::release_district() {
  // @@protoc_insertion_point(field_release:micromsg.CreatePoiRequest.District)
  clear_has_district();
  return district_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreatePoiRequest::set_allocated_district(::std::string* district) {
  if (district != NULL) {
    set_has_district();
  } else {
    clear_has_district();
  }
  district_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), district);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CreatePoiRequest.District)
}

// optional string Street = 4;
inline bool CreatePoiRequest::has_street() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CreatePoiRequest::set_has_street() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CreatePoiRequest::clear_has_street() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CreatePoiRequest::clear_street() {
  street_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_street();
}
inline const ::std::string& CreatePoiRequest::street() const {
  // @@protoc_insertion_point(field_get:micromsg.CreatePoiRequest.Street)
  return street_.GetNoArena();
}
inline void CreatePoiRequest::set_street(const ::std::string& value) {
  set_has_street();
  street_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CreatePoiRequest.Street)
}
#if LANG_CXX11
inline void CreatePoiRequest::set_street(::std::string&& value) {
  set_has_street();
  street_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CreatePoiRequest.Street)
}
#endif
inline void CreatePoiRequest::set_street(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_street();
  street_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CreatePoiRequest.Street)
}
inline void CreatePoiRequest::set_street(const char* value, size_t size) {
  set_has_street();
  street_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CreatePoiRequest.Street)
}
inline ::std::string* CreatePoiRequest::mutable_street() {
  set_has_street();
  // @@protoc_insertion_point(field_mutable:micromsg.CreatePoiRequest.Street)
  return street_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreatePoiRequest::release_street() {
  // @@protoc_insertion_point(field_release:micromsg.CreatePoiRequest.Street)
  clear_has_street();
  return street_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreatePoiRequest::set_allocated_street(::std::string* street) {
  if (street != NULL) {
    set_has_street();
  } else {
    clear_has_street();
  }
  street_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), street);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CreatePoiRequest.Street)
}

// required .micromsg.LbsLocation Loc = 5;
inline bool CreatePoiRequest::has_loc() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CreatePoiRequest::set_has_loc() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CreatePoiRequest::clear_has_loc() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CreatePoiRequest::clear_loc() {
  if (loc_ != NULL) loc_->::micromsg::LbsLocation::Clear();
  clear_has_loc();
}
inline const ::micromsg::LbsLocation& CreatePoiRequest::loc() const {
  // @@protoc_insertion_point(field_get:micromsg.CreatePoiRequest.Loc)
  return loc_ != NULL ? *loc_
                         : *::micromsg::LbsLocation::internal_default_instance();
}
inline ::micromsg::LbsLocation* CreatePoiRequest::mutable_loc() {
  set_has_loc();
  if (loc_ == NULL) {
    loc_ = new ::micromsg::LbsLocation;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.CreatePoiRequest.Loc)
  return loc_;
}
inline ::micromsg::LbsLocation* CreatePoiRequest::release_loc() {
  // @@protoc_insertion_point(field_release:micromsg.CreatePoiRequest.Loc)
  clear_has_loc();
  ::micromsg::LbsLocation* temp = loc_;
  loc_ = NULL;
  return temp;
}
inline void CreatePoiRequest::set_allocated_loc(::micromsg::LbsLocation* loc) {
  delete loc_;
  loc_ = loc;
  if (loc) {
    set_has_loc();
  } else {
    clear_has_loc();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.CreatePoiRequest.Loc)
}

// required uint32 Count = 6;
inline bool CreatePoiRequest::has_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CreatePoiRequest::set_has_count() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CreatePoiRequest::clear_has_count() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CreatePoiRequest::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 CreatePoiRequest::count() const {
  // @@protoc_insertion_point(field_get:micromsg.CreatePoiRequest.Count)
  return count_;
}
inline void CreatePoiRequest::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.CreatePoiRequest.Count)
}

// repeated .micromsg.SKBuiltinString_t Categories = 7;
inline int CreatePoiRequest::categories_size() const {
  return categories_.size();
}
inline void CreatePoiRequest::clear_categories() {
  categories_.Clear();
}
inline const ::micromsg::SKBuiltinString_t& CreatePoiRequest::categories(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.CreatePoiRequest.Categories)
  return categories_.Get(index);
}
inline ::micromsg::SKBuiltinString_t* CreatePoiRequest::mutable_categories(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.CreatePoiRequest.Categories)
  return categories_.Mutable(index);
}
inline ::micromsg::SKBuiltinString_t* CreatePoiRequest::add_categories() {
  // @@protoc_insertion_point(field_add:micromsg.CreatePoiRequest.Categories)
  return categories_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
CreatePoiRequest::mutable_categories() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.CreatePoiRequest.Categories)
  return &categories_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
CreatePoiRequest::categories() const {
  // @@protoc_insertion_point(field_list:micromsg.CreatePoiRequest.Categories)
  return categories_;
}

// optional string Telephone = 8;
inline bool CreatePoiRequest::has_telephone() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CreatePoiRequest::set_has_telephone() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CreatePoiRequest::clear_has_telephone() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CreatePoiRequest::clear_telephone() {
  telephone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_telephone();
}
inline const ::std::string& CreatePoiRequest::telephone() const {
  // @@protoc_insertion_point(field_get:micromsg.CreatePoiRequest.Telephone)
  return telephone_.GetNoArena();
}
inline void CreatePoiRequest::set_telephone(const ::std::string& value) {
  set_has_telephone();
  telephone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CreatePoiRequest.Telephone)
}
#if LANG_CXX11
inline void CreatePoiRequest::set_telephone(::std::string&& value) {
  set_has_telephone();
  telephone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CreatePoiRequest.Telephone)
}
#endif
inline void CreatePoiRequest::set_telephone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_telephone();
  telephone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CreatePoiRequest.Telephone)
}
inline void CreatePoiRequest::set_telephone(const char* value, size_t size) {
  set_has_telephone();
  telephone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CreatePoiRequest.Telephone)
}
inline ::std::string* CreatePoiRequest::mutable_telephone() {
  set_has_telephone();
  // @@protoc_insertion_point(field_mutable:micromsg.CreatePoiRequest.Telephone)
  return telephone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreatePoiRequest::release_telephone() {
  // @@protoc_insertion_point(field_release:micromsg.CreatePoiRequest.Telephone)
  clear_has_telephone();
  return telephone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreatePoiRequest::set_allocated_telephone(::std::string* telephone) {
  if (telephone != NULL) {
    set_has_telephone();
  } else {
    clear_has_telephone();
  }
  telephone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), telephone);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CreatePoiRequest.Telephone)
}

// optional string PhotoUrl = 9;
inline bool CreatePoiRequest::has_photourl() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CreatePoiRequest::set_has_photourl() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CreatePoiRequest::clear_has_photourl() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CreatePoiRequest::clear_photourl() {
  photourl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_photourl();
}
inline const ::std::string& CreatePoiRequest::photourl() const {
  // @@protoc_insertion_point(field_get:micromsg.CreatePoiRequest.PhotoUrl)
  return photourl_.GetNoArena();
}
inline void CreatePoiRequest::set_photourl(const ::std::string& value) {
  set_has_photourl();
  photourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CreatePoiRequest.PhotoUrl)
}
#if LANG_CXX11
inline void CreatePoiRequest::set_photourl(::std::string&& value) {
  set_has_photourl();
  photourl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CreatePoiRequest.PhotoUrl)
}
#endif
inline void CreatePoiRequest::set_photourl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_photourl();
  photourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CreatePoiRequest.PhotoUrl)
}
inline void CreatePoiRequest::set_photourl(const char* value, size_t size) {
  set_has_photourl();
  photourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CreatePoiRequest.PhotoUrl)
}
inline ::std::string* CreatePoiRequest::mutable_photourl() {
  set_has_photourl();
  // @@protoc_insertion_point(field_mutable:micromsg.CreatePoiRequest.PhotoUrl)
  return photourl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreatePoiRequest::release_photourl() {
  // @@protoc_insertion_point(field_release:micromsg.CreatePoiRequest.PhotoUrl)
  clear_has_photourl();
  return photourl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreatePoiRequest::set_allocated_photourl(::std::string* photourl) {
  if (photourl != NULL) {
    set_has_photourl();
  } else {
    clear_has_photourl();
  }
  photourl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), photourl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CreatePoiRequest.PhotoUrl)
}

// -------------------------------------------------------------------

// CreatePoiResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool CreatePoiResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CreatePoiResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CreatePoiResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CreatePoiResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& CreatePoiResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.CreatePoiResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* CreatePoiResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.CreatePoiResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* CreatePoiResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.CreatePoiResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void CreatePoiResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.CreatePoiResponse.BaseResponse)
}

// optional string PoiId = 2;
inline bool CreatePoiResponse::has_poiid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CreatePoiResponse::set_has_poiid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CreatePoiResponse::clear_has_poiid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CreatePoiResponse::clear_poiid() {
  poiid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_poiid();
}
inline const ::std::string& CreatePoiResponse::poiid() const {
  // @@protoc_insertion_point(field_get:micromsg.CreatePoiResponse.PoiId)
  return poiid_.GetNoArena();
}
inline void CreatePoiResponse::set_poiid(const ::std::string& value) {
  set_has_poiid();
  poiid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CreatePoiResponse.PoiId)
}
#if LANG_CXX11
inline void CreatePoiResponse::set_poiid(::std::string&& value) {
  set_has_poiid();
  poiid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CreatePoiResponse.PoiId)
}
#endif
inline void CreatePoiResponse::set_poiid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_poiid();
  poiid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CreatePoiResponse.PoiId)
}
inline void CreatePoiResponse::set_poiid(const char* value, size_t size) {
  set_has_poiid();
  poiid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CreatePoiResponse.PoiId)
}
inline ::std::string* CreatePoiResponse::mutable_poiid() {
  set_has_poiid();
  // @@protoc_insertion_point(field_mutable:micromsg.CreatePoiResponse.PoiId)
  return poiid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreatePoiResponse::release_poiid() {
  // @@protoc_insertion_point(field_release:micromsg.CreatePoiResponse.PoiId)
  clear_has_poiid();
  return poiid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreatePoiResponse::set_allocated_poiid(::std::string* poiid) {
  if (poiid != NULL) {
    set_has_poiid();
  } else {
    clear_has_poiid();
  }
  poiid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), poiid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CreatePoiResponse.PoiId)
}

// -------------------------------------------------------------------

// GetLbsLifeListRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetLbsLifeListRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetLbsLifeListRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetLbsLifeListRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetLbsLifeListRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetLbsLifeListRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeListRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetLbsLifeListRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetLbsLifeListRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetLbsLifeListRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetLbsLifeListRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetLbsLifeListRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLbsLifeListRequest.BaseRequest)
}

// required uint32 Opcode = 2;
inline bool GetLbsLifeListRequest::has_opcode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetLbsLifeListRequest::set_has_opcode() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetLbsLifeListRequest::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetLbsLifeListRequest::clear_opcode() {
  opcode_ = 0u;
  clear_has_opcode();
}
inline ::google::protobuf::uint32 GetLbsLifeListRequest::opcode() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeListRequest.Opcode)
  return opcode_;
}
inline void GetLbsLifeListRequest::set_opcode(::google::protobuf::uint32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetLbsLifeListRequest.Opcode)
}

// required uint32 Scene = 3;
inline bool GetLbsLifeListRequest::has_scene() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetLbsLifeListRequest::set_has_scene() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetLbsLifeListRequest::clear_has_scene() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetLbsLifeListRequest::clear_scene() {
  scene_ = 0u;
  clear_has_scene();
}
inline ::google::protobuf::uint32 GetLbsLifeListRequest::scene() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeListRequest.Scene)
  return scene_;
}
inline void GetLbsLifeListRequest::set_scene(::google::protobuf::uint32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetLbsLifeListRequest.Scene)
}

// optional .micromsg.SKBuiltinBuffer_t Buff = 4;
inline bool GetLbsLifeListRequest::has_buff() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetLbsLifeListRequest::set_has_buff() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetLbsLifeListRequest::clear_has_buff() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetLbsLifeListRequest::clear_buff() {
  if (buff_ != NULL) buff_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_buff();
}
inline const ::micromsg::SKBuiltinBuffer_t& GetLbsLifeListRequest::buff() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeListRequest.Buff)
  return buff_ != NULL ? *buff_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* GetLbsLifeListRequest::mutable_buff() {
  set_has_buff();
  if (buff_ == NULL) {
    buff_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetLbsLifeListRequest.Buff)
  return buff_;
}
inline ::micromsg::SKBuiltinBuffer_t* GetLbsLifeListRequest::release_buff() {
  // @@protoc_insertion_point(field_release:micromsg.GetLbsLifeListRequest.Buff)
  clear_has_buff();
  ::micromsg::SKBuiltinBuffer_t* temp = buff_;
  buff_ = NULL;
  return temp;
}
inline void GetLbsLifeListRequest::set_allocated_buff(::micromsg::SKBuiltinBuffer_t* buff) {
  delete buff_;
  buff_ = buff;
  if (buff) {
    set_has_buff();
  } else {
    clear_has_buff();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLbsLifeListRequest.Buff)
}

// required .micromsg.LbsLocation Loc = 5;
inline bool GetLbsLifeListRequest::has_loc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetLbsLifeListRequest::set_has_loc() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetLbsLifeListRequest::clear_has_loc() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetLbsLifeListRequest::clear_loc() {
  if (loc_ != NULL) loc_->::micromsg::LbsLocation::Clear();
  clear_has_loc();
}
inline const ::micromsg::LbsLocation& GetLbsLifeListRequest::loc() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeListRequest.Loc)
  return loc_ != NULL ? *loc_
                         : *::micromsg::LbsLocation::internal_default_instance();
}
inline ::micromsg::LbsLocation* GetLbsLifeListRequest::mutable_loc() {
  set_has_loc();
  if (loc_ == NULL) {
    loc_ = new ::micromsg::LbsLocation;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetLbsLifeListRequest.Loc)
  return loc_;
}
inline ::micromsg::LbsLocation* GetLbsLifeListRequest::release_loc() {
  // @@protoc_insertion_point(field_release:micromsg.GetLbsLifeListRequest.Loc)
  clear_has_loc();
  ::micromsg::LbsLocation* temp = loc_;
  loc_ = NULL;
  return temp;
}
inline void GetLbsLifeListRequest::set_allocated_loc(::micromsg::LbsLocation* loc) {
  delete loc_;
  loc_ = loc;
  if (loc) {
    set_has_loc();
  } else {
    clear_has_loc();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLbsLifeListRequest.Loc)
}

// optional string Keyword = 6;
inline bool GetLbsLifeListRequest::has_keyword() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetLbsLifeListRequest::set_has_keyword() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetLbsLifeListRequest::clear_has_keyword() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetLbsLifeListRequest::clear_keyword() {
  keyword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_keyword();
}
inline const ::std::string& GetLbsLifeListRequest::keyword() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeListRequest.Keyword)
  return keyword_.GetNoArena();
}
inline void GetLbsLifeListRequest::set_keyword(const ::std::string& value) {
  set_has_keyword();
  keyword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetLbsLifeListRequest.Keyword)
}
#if LANG_CXX11
inline void GetLbsLifeListRequest::set_keyword(::std::string&& value) {
  set_has_keyword();
  keyword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetLbsLifeListRequest.Keyword)
}
#endif
inline void GetLbsLifeListRequest::set_keyword(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_keyword();
  keyword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetLbsLifeListRequest.Keyword)
}
inline void GetLbsLifeListRequest::set_keyword(const char* value, size_t size) {
  set_has_keyword();
  keyword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetLbsLifeListRequest.Keyword)
}
inline ::std::string* GetLbsLifeListRequest::mutable_keyword() {
  set_has_keyword();
  // @@protoc_insertion_point(field_mutable:micromsg.GetLbsLifeListRequest.Keyword)
  return keyword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetLbsLifeListRequest::release_keyword() {
  // @@protoc_insertion_point(field_release:micromsg.GetLbsLifeListRequest.Keyword)
  clear_has_keyword();
  return keyword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetLbsLifeListRequest::set_allocated_keyword(::std::string* keyword) {
  if (keyword != NULL) {
    set_has_keyword();
  } else {
    clear_has_keyword();
  }
  keyword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keyword);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLbsLifeListRequest.Keyword)
}

// optional uint32 EntryTime = 7;
inline bool GetLbsLifeListRequest::has_entrytime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GetLbsLifeListRequest::set_has_entrytime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GetLbsLifeListRequest::clear_has_entrytime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GetLbsLifeListRequest::clear_entrytime() {
  entrytime_ = 0u;
  clear_has_entrytime();
}
inline ::google::protobuf::uint32 GetLbsLifeListRequest::entrytime() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeListRequest.EntryTime)
  return entrytime_;
}
inline void GetLbsLifeListRequest::set_entrytime(::google::protobuf::uint32 value) {
  set_has_entrytime();
  entrytime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetLbsLifeListRequest.EntryTime)
}

// -------------------------------------------------------------------

// LbsLife

// optional string BId = 1;
inline bool LbsLife::has_bid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LbsLife::set_has_bid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LbsLife::clear_has_bid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LbsLife::clear_bid() {
  bid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bid();
}
inline const ::std::string& LbsLife::bid() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLife.BId)
  return bid_.GetNoArena();
}
inline void LbsLife::set_bid(const ::std::string& value) {
  set_has_bid();
  bid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsLife.BId)
}
#if LANG_CXX11
inline void LbsLife::set_bid(::std::string&& value) {
  set_has_bid();
  bid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsLife.BId)
}
#endif
inline void LbsLife::set_bid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bid();
  bid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsLife.BId)
}
inline void LbsLife::set_bid(const char* value, size_t size) {
  set_has_bid();
  bid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsLife.BId)
}
inline ::std::string* LbsLife::mutable_bid() {
  set_has_bid();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsLife.BId)
  return bid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsLife::release_bid() {
  // @@protoc_insertion_point(field_release:micromsg.LbsLife.BId)
  clear_has_bid();
  return bid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsLife::set_allocated_bid(::std::string* bid) {
  if (bid != NULL) {
    set_has_bid();
  } else {
    clear_has_bid();
  }
  bid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsLife.BId)
}

// optional string Title = 2;
inline bool LbsLife::has_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LbsLife::set_has_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LbsLife::clear_has_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LbsLife::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& LbsLife::title() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLife.Title)
  return title_.GetNoArena();
}
inline void LbsLife::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsLife.Title)
}
#if LANG_CXX11
inline void LbsLife::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsLife.Title)
}
#endif
inline void LbsLife::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsLife.Title)
}
inline void LbsLife::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsLife.Title)
}
inline ::std::string* LbsLife::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsLife.Title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsLife::release_title() {
  // @@protoc_insertion_point(field_release:micromsg.LbsLife.Title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsLife::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsLife.Title)
}

// required float Price = 3;
inline bool LbsLife::has_price() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LbsLife::set_has_price() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LbsLife::clear_has_price() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LbsLife::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline float LbsLife::price() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLife.Price)
  return price_;
}
inline void LbsLife::set_price(float value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsLife.Price)
}

// required uint32 IconIdxCount = 4;
inline bool LbsLife::has_iconidxcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LbsLife::set_has_iconidxcount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LbsLife::clear_has_iconidxcount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LbsLife::clear_iconidxcount() {
  iconidxcount_ = 0u;
  clear_has_iconidxcount();
}
inline ::google::protobuf::uint32 LbsLife::iconidxcount() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLife.IconIdxCount)
  return iconidxcount_;
}
inline void LbsLife::set_iconidxcount(::google::protobuf::uint32 value) {
  set_has_iconidxcount();
  iconidxcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsLife.IconIdxCount)
}

// repeated uint32 IconIdxList = 5 [packed = true];
inline int LbsLife::iconidxlist_size() const {
  return iconidxlist_.size();
}
inline void LbsLife::clear_iconidxlist() {
  iconidxlist_.Clear();
}
inline ::google::protobuf::uint32 LbsLife::iconidxlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLife.IconIdxList)
  return iconidxlist_.Get(index);
}
inline void LbsLife::set_iconidxlist(int index, ::google::protobuf::uint32 value) {
  iconidxlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:micromsg.LbsLife.IconIdxList)
}
inline void LbsLife::add_iconidxlist(::google::protobuf::uint32 value) {
  iconidxlist_.Add(value);
  // @@protoc_insertion_point(field_add:micromsg.LbsLife.IconIdxList)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
LbsLife::iconidxlist() const {
  // @@protoc_insertion_point(field_list:micromsg.LbsLife.IconIdxList)
  return iconidxlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
LbsLife::mutable_iconidxlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.LbsLife.IconIdxList)
  return &iconidxlist_;
}

// required uint32 DescCount = 6;
inline bool LbsLife::has_desccount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LbsLife::set_has_desccount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LbsLife::clear_has_desccount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LbsLife::clear_desccount() {
  desccount_ = 0u;
  clear_has_desccount();
}
inline ::google::protobuf::uint32 LbsLife::desccount() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLife.DescCount)
  return desccount_;
}
inline void LbsLife::set_desccount(::google::protobuf::uint32 value) {
  set_has_desccount();
  desccount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsLife.DescCount)
}

// repeated .micromsg.SKBuiltinString_t DescList = 7;
inline int LbsLife::desclist_size() const {
  return desclist_.size();
}
inline void LbsLife::clear_desclist() {
  desclist_.Clear();
}
inline const ::micromsg::SKBuiltinString_t& LbsLife::desclist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLife.DescList)
  return desclist_.Get(index);
}
inline ::micromsg::SKBuiltinString_t* LbsLife::mutable_desclist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.LbsLife.DescList)
  return desclist_.Mutable(index);
}
inline ::micromsg::SKBuiltinString_t* LbsLife::add_desclist() {
  // @@protoc_insertion_point(field_add:micromsg.LbsLife.DescList)
  return desclist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
LbsLife::mutable_desclist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.LbsLife.DescList)
  return &desclist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
LbsLife::desclist() const {
  // @@protoc_insertion_point(field_list:micromsg.LbsLife.DescList)
  return desclist_;
}

// required float Rate = 8;
inline bool LbsLife::has_rate() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LbsLife::set_has_rate() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LbsLife::clear_has_rate() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LbsLife::clear_rate() {
  rate_ = 0;
  clear_has_rate();
}
inline float LbsLife::rate() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLife.Rate)
  return rate_;
}
inline void LbsLife::set_rate(float value) {
  set_has_rate();
  rate_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsLife.Rate)
}

// optional string Link = 9;
inline bool LbsLife::has_link() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LbsLife::set_has_link() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LbsLife::clear_has_link() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LbsLife::clear_link() {
  link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_link();
}
inline const ::std::string& LbsLife::link() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLife.Link)
  return link_.GetNoArena();
}
inline void LbsLife::set_link(const ::std::string& value) {
  set_has_link();
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsLife.Link)
}
#if LANG_CXX11
inline void LbsLife::set_link(::std::string&& value) {
  set_has_link();
  link_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsLife.Link)
}
#endif
inline void LbsLife::set_link(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_link();
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsLife.Link)
}
inline void LbsLife::set_link(const char* value, size_t size) {
  set_has_link();
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsLife.Link)
}
inline ::std::string* LbsLife::mutable_link() {
  set_has_link();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsLife.Link)
  return link_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsLife::release_link() {
  // @@protoc_insertion_point(field_release:micromsg.LbsLife.Link)
  clear_has_link();
  return link_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsLife::set_allocated_link(::std::string* link) {
  if (link != NULL) {
    set_has_link();
  } else {
    clear_has_link();
  }
  link_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), link);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsLife.Link)
}

// optional uint32 Type = 10;
inline bool LbsLife::has_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LbsLife::set_has_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LbsLife::clear_has_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LbsLife::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 LbsLife::type() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLife.Type)
  return type_;
}
inline void LbsLife::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsLife.Type)
}

// -------------------------------------------------------------------

// GetLbsFunctionListRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetLbsFunctionListRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetLbsFunctionListRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetLbsFunctionListRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetLbsFunctionListRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetLbsFunctionListRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsFunctionListRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetLbsFunctionListRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetLbsFunctionListRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetLbsFunctionListRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetLbsFunctionListRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetLbsFunctionListRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLbsFunctionListRequest.BaseRequest)
}

// required .micromsg.LbsLocation Loc = 2;
inline bool GetLbsFunctionListRequest::has_loc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetLbsFunctionListRequest::set_has_loc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetLbsFunctionListRequest::clear_has_loc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetLbsFunctionListRequest::clear_loc() {
  if (loc_ != NULL) loc_->::micromsg::LbsLocation::Clear();
  clear_has_loc();
}
inline const ::micromsg::LbsLocation& GetLbsFunctionListRequest::loc() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsFunctionListRequest.Loc)
  return loc_ != NULL ? *loc_
                         : *::micromsg::LbsLocation::internal_default_instance();
}
inline ::micromsg::LbsLocation* GetLbsFunctionListRequest::mutable_loc() {
  set_has_loc();
  if (loc_ == NULL) {
    loc_ = new ::micromsg::LbsLocation;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetLbsFunctionListRequest.Loc)
  return loc_;
}
inline ::micromsg::LbsLocation* GetLbsFunctionListRequest::release_loc() {
  // @@protoc_insertion_point(field_release:micromsg.GetLbsFunctionListRequest.Loc)
  clear_has_loc();
  ::micromsg::LbsLocation* temp = loc_;
  loc_ = NULL;
  return temp;
}
inline void GetLbsFunctionListRequest::set_allocated_loc(::micromsg::LbsLocation* loc) {
  delete loc_;
  loc_ = loc;
  if (loc) {
    set_has_loc();
  } else {
    clear_has_loc();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLbsFunctionListRequest.Loc)
}

// -------------------------------------------------------------------

// GetLbsFunctionListResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetLbsFunctionListResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetLbsFunctionListResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetLbsFunctionListResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetLbsFunctionListResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetLbsFunctionListResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsFunctionListResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetLbsFunctionListResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetLbsFunctionListResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetLbsFunctionListResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetLbsFunctionListResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetLbsFunctionListResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLbsFunctionListResponse.BaseResponse)
}

// optional string LbsFunctionList = 2;
inline bool GetLbsFunctionListResponse::has_lbsfunctionlist() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetLbsFunctionListResponse::set_has_lbsfunctionlist() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetLbsFunctionListResponse::clear_has_lbsfunctionlist() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetLbsFunctionListResponse::clear_lbsfunctionlist() {
  lbsfunctionlist_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lbsfunctionlist();
}
inline const ::std::string& GetLbsFunctionListResponse::lbsfunctionlist() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsFunctionListResponse.LbsFunctionList)
  return lbsfunctionlist_.GetNoArena();
}
inline void GetLbsFunctionListResponse::set_lbsfunctionlist(const ::std::string& value) {
  set_has_lbsfunctionlist();
  lbsfunctionlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetLbsFunctionListResponse.LbsFunctionList)
}
#if LANG_CXX11
inline void GetLbsFunctionListResponse::set_lbsfunctionlist(::std::string&& value) {
  set_has_lbsfunctionlist();
  lbsfunctionlist_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetLbsFunctionListResponse.LbsFunctionList)
}
#endif
inline void GetLbsFunctionListResponse::set_lbsfunctionlist(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_lbsfunctionlist();
  lbsfunctionlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetLbsFunctionListResponse.LbsFunctionList)
}
inline void GetLbsFunctionListResponse::set_lbsfunctionlist(const char* value, size_t size) {
  set_has_lbsfunctionlist();
  lbsfunctionlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetLbsFunctionListResponse.LbsFunctionList)
}
inline ::std::string* GetLbsFunctionListResponse::mutable_lbsfunctionlist() {
  set_has_lbsfunctionlist();
  // @@protoc_insertion_point(field_mutable:micromsg.GetLbsFunctionListResponse.LbsFunctionList)
  return lbsfunctionlist_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetLbsFunctionListResponse::release_lbsfunctionlist() {
  // @@protoc_insertion_point(field_release:micromsg.GetLbsFunctionListResponse.LbsFunctionList)
  clear_has_lbsfunctionlist();
  return lbsfunctionlist_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetLbsFunctionListResponse::set_allocated_lbsfunctionlist(::std::string* lbsfunctionlist) {
  if (lbsfunctionlist != NULL) {
    set_has_lbsfunctionlist();
  } else {
    clear_has_lbsfunctionlist();
  }
  lbsfunctionlist_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lbsfunctionlist);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLbsFunctionListResponse.LbsFunctionList)
}

// -------------------------------------------------------------------

// GetLbsLifeListResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetLbsLifeListResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetLbsLifeListResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetLbsLifeListResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetLbsLifeListResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetLbsLifeListResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeListResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetLbsLifeListResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetLbsLifeListResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetLbsLifeListResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetLbsLifeListResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetLbsLifeListResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLbsLifeListResponse.BaseResponse)
}

// required .micromsg.SKBuiltinBuffer_t Buff = 2;
inline bool GetLbsLifeListResponse::has_buff() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetLbsLifeListResponse::set_has_buff() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetLbsLifeListResponse::clear_has_buff() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetLbsLifeListResponse::clear_buff() {
  if (buff_ != NULL) buff_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_buff();
}
inline const ::micromsg::SKBuiltinBuffer_t& GetLbsLifeListResponse::buff() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeListResponse.Buff)
  return buff_ != NULL ? *buff_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* GetLbsLifeListResponse::mutable_buff() {
  set_has_buff();
  if (buff_ == NULL) {
    buff_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetLbsLifeListResponse.Buff)
  return buff_;
}
inline ::micromsg::SKBuiltinBuffer_t* GetLbsLifeListResponse::release_buff() {
  // @@protoc_insertion_point(field_release:micromsg.GetLbsLifeListResponse.Buff)
  clear_has_buff();
  ::micromsg::SKBuiltinBuffer_t* temp = buff_;
  buff_ = NULL;
  return temp;
}
inline void GetLbsLifeListResponse::set_allocated_buff(::micromsg::SKBuiltinBuffer_t* buff) {
  delete buff_;
  buff_ = buff;
  if (buff) {
    set_has_buff();
  } else {
    clear_has_buff();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLbsLifeListResponse.Buff)
}

// required uint32 IconCount = 3;
inline bool GetLbsLifeListResponse::has_iconcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetLbsLifeListResponse::set_has_iconcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetLbsLifeListResponse::clear_has_iconcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetLbsLifeListResponse::clear_iconcount() {
  iconcount_ = 0u;
  clear_has_iconcount();
}
inline ::google::protobuf::uint32 GetLbsLifeListResponse::iconcount() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeListResponse.IconCount)
  return iconcount_;
}
inline void GetLbsLifeListResponse::set_iconcount(::google::protobuf::uint32 value) {
  set_has_iconcount();
  iconcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetLbsLifeListResponse.IconCount)
}

// repeated .micromsg.SKBuiltinString_t IconList = 4;
inline int GetLbsLifeListResponse::iconlist_size() const {
  return iconlist_.size();
}
inline void GetLbsLifeListResponse::clear_iconlist() {
  iconlist_.Clear();
}
inline const ::micromsg::SKBuiltinString_t& GetLbsLifeListResponse::iconlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeListResponse.IconList)
  return iconlist_.Get(index);
}
inline ::micromsg::SKBuiltinString_t* GetLbsLifeListResponse::mutable_iconlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetLbsLifeListResponse.IconList)
  return iconlist_.Mutable(index);
}
inline ::micromsg::SKBuiltinString_t* GetLbsLifeListResponse::add_iconlist() {
  // @@protoc_insertion_point(field_add:micromsg.GetLbsLifeListResponse.IconList)
  return iconlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
GetLbsLifeListResponse::mutable_iconlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetLbsLifeListResponse.IconList)
  return &iconlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
GetLbsLifeListResponse::iconlist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetLbsLifeListResponse.IconList)
  return iconlist_;
}

// required uint32 LifeCount = 5;
inline bool GetLbsLifeListResponse::has_lifecount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetLbsLifeListResponse::set_has_lifecount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetLbsLifeListResponse::clear_has_lifecount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetLbsLifeListResponse::clear_lifecount() {
  lifecount_ = 0u;
  clear_has_lifecount();
}
inline ::google::protobuf::uint32 GetLbsLifeListResponse::lifecount() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeListResponse.LifeCount)
  return lifecount_;
}
inline void GetLbsLifeListResponse::set_lifecount(::google::protobuf::uint32 value) {
  set_has_lifecount();
  lifecount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetLbsLifeListResponse.LifeCount)
}

// repeated .micromsg.LbsLife LifeList = 6;
inline int GetLbsLifeListResponse::lifelist_size() const {
  return lifelist_.size();
}
inline void GetLbsLifeListResponse::clear_lifelist() {
  lifelist_.Clear();
}
inline const ::micromsg::LbsLife& GetLbsLifeListResponse::lifelist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeListResponse.LifeList)
  return lifelist_.Get(index);
}
inline ::micromsg::LbsLife* GetLbsLifeListResponse::mutable_lifelist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetLbsLifeListResponse.LifeList)
  return lifelist_.Mutable(index);
}
inline ::micromsg::LbsLife* GetLbsLifeListResponse::add_lifelist() {
  // @@protoc_insertion_point(field_add:micromsg.GetLbsLifeListResponse.LifeList)
  return lifelist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::LbsLife >*
GetLbsLifeListResponse::mutable_lifelist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetLbsLifeListResponse.LifeList)
  return &lifelist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::LbsLife >&
GetLbsLifeListResponse::lifelist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetLbsLifeListResponse.LifeList)
  return lifelist_;
}

// required uint32 ContinueFlag = 7;
inline bool GetLbsLifeListResponse::has_continueflag() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetLbsLifeListResponse::set_has_continueflag() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetLbsLifeListResponse::clear_has_continueflag() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetLbsLifeListResponse::clear_continueflag() {
  continueflag_ = 0u;
  clear_has_continueflag();
}
inline ::google::protobuf::uint32 GetLbsLifeListResponse::continueflag() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeListResponse.ContinueFlag)
  return continueflag_;
}
inline void GetLbsLifeListResponse::set_continueflag(::google::protobuf::uint32 value) {
  set_has_continueflag();
  continueflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetLbsLifeListResponse.ContinueFlag)
}

// optional string LogoUrl = 8;
inline bool GetLbsLifeListResponse::has_logourl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetLbsLifeListResponse::set_has_logourl() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetLbsLifeListResponse::clear_has_logourl() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetLbsLifeListResponse::clear_logourl() {
  logourl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_logourl();
}
inline const ::std::string& GetLbsLifeListResponse::logourl() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeListResponse.LogoUrl)
  return logourl_.GetNoArena();
}
inline void GetLbsLifeListResponse::set_logourl(const ::std::string& value) {
  set_has_logourl();
  logourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetLbsLifeListResponse.LogoUrl)
}
#if LANG_CXX11
inline void GetLbsLifeListResponse::set_logourl(::std::string&& value) {
  set_has_logourl();
  logourl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetLbsLifeListResponse.LogoUrl)
}
#endif
inline void GetLbsLifeListResponse::set_logourl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_logourl();
  logourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetLbsLifeListResponse.LogoUrl)
}
inline void GetLbsLifeListResponse::set_logourl(const char* value, size_t size) {
  set_has_logourl();
  logourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetLbsLifeListResponse.LogoUrl)
}
inline ::std::string* GetLbsLifeListResponse::mutable_logourl() {
  set_has_logourl();
  // @@protoc_insertion_point(field_mutable:micromsg.GetLbsLifeListResponse.LogoUrl)
  return logourl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetLbsLifeListResponse::release_logourl() {
  // @@protoc_insertion_point(field_release:micromsg.GetLbsLifeListResponse.LogoUrl)
  clear_has_logourl();
  return logourl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetLbsLifeListResponse::set_allocated_logourl(::std::string* logourl) {
  if (logourl != NULL) {
    set_has_logourl();
  } else {
    clear_has_logourl();
  }
  logourl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logourl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLbsLifeListResponse.LogoUrl)
}

// -------------------------------------------------------------------

// LBSLifeActionBooking

// required uint32 Type = 1;
inline bool LBSLifeActionBooking::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LBSLifeActionBooking::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LBSLifeActionBooking::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LBSLifeActionBooking::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 LBSLifeActionBooking::type() const {
  // @@protoc_insertion_point(field_get:micromsg.LBSLifeActionBooking.Type)
  return type_;
}
inline void LBSLifeActionBooking::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LBSLifeActionBooking.Type)
}

// optional string Title = 2;
inline bool LBSLifeActionBooking::has_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LBSLifeActionBooking::set_has_title() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LBSLifeActionBooking::clear_has_title() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LBSLifeActionBooking::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& LBSLifeActionBooking::title() const {
  // @@protoc_insertion_point(field_get:micromsg.LBSLifeActionBooking.Title)
  return title_.GetNoArena();
}
inline void LBSLifeActionBooking::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LBSLifeActionBooking.Title)
}
#if LANG_CXX11
inline void LBSLifeActionBooking::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LBSLifeActionBooking.Title)
}
#endif
inline void LBSLifeActionBooking::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LBSLifeActionBooking.Title)
}
inline void LBSLifeActionBooking::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LBSLifeActionBooking.Title)
}
inline ::std::string* LBSLifeActionBooking::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:micromsg.LBSLifeActionBooking.Title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LBSLifeActionBooking::release_title() {
  // @@protoc_insertion_point(field_release:micromsg.LBSLifeActionBooking.Title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LBSLifeActionBooking::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LBSLifeActionBooking.Title)
}

// optional string Url = 3;
inline bool LBSLifeActionBooking::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LBSLifeActionBooking::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LBSLifeActionBooking::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LBSLifeActionBooking::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& LBSLifeActionBooking::url() const {
  // @@protoc_insertion_point(field_get:micromsg.LBSLifeActionBooking.Url)
  return url_.GetNoArena();
}
inline void LBSLifeActionBooking::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LBSLifeActionBooking.Url)
}
#if LANG_CXX11
inline void LBSLifeActionBooking::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LBSLifeActionBooking.Url)
}
#endif
inline void LBSLifeActionBooking::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LBSLifeActionBooking.Url)
}
inline void LBSLifeActionBooking::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LBSLifeActionBooking.Url)
}
inline ::std::string* LBSLifeActionBooking::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:micromsg.LBSLifeActionBooking.Url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LBSLifeActionBooking::release_url() {
  // @@protoc_insertion_point(field_release:micromsg.LBSLifeActionBooking.Url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LBSLifeActionBooking::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LBSLifeActionBooking.Url)
}

// -------------------------------------------------------------------

// LBSLifeActionBargain

// optional string Desc = 1;
inline bool LBSLifeActionBargain::has_desc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LBSLifeActionBargain::set_has_desc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LBSLifeActionBargain::clear_has_desc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LBSLifeActionBargain::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_desc();
}
inline const ::std::string& LBSLifeActionBargain::desc() const {
  // @@protoc_insertion_point(field_get:micromsg.LBSLifeActionBargain.Desc)
  return desc_.GetNoArena();
}
inline void LBSLifeActionBargain::set_desc(const ::std::string& value) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LBSLifeActionBargain.Desc)
}
#if LANG_CXX11
inline void LBSLifeActionBargain::set_desc(::std::string&& value) {
  set_has_desc();
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LBSLifeActionBargain.Desc)
}
#endif
inline void LBSLifeActionBargain::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LBSLifeActionBargain.Desc)
}
inline void LBSLifeActionBargain::set_desc(const char* value, size_t size) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LBSLifeActionBargain.Desc)
}
inline ::std::string* LBSLifeActionBargain::mutable_desc() {
  set_has_desc();
  // @@protoc_insertion_point(field_mutable:micromsg.LBSLifeActionBargain.Desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LBSLifeActionBargain::release_desc() {
  // @@protoc_insertion_point(field_release:micromsg.LBSLifeActionBargain.Desc)
  clear_has_desc();
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LBSLifeActionBargain::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LBSLifeActionBargain.Desc)
}

// optional string Url = 2;
inline bool LBSLifeActionBargain::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LBSLifeActionBargain::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LBSLifeActionBargain::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LBSLifeActionBargain::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& LBSLifeActionBargain::url() const {
  // @@protoc_insertion_point(field_get:micromsg.LBSLifeActionBargain.Url)
  return url_.GetNoArena();
}
inline void LBSLifeActionBargain::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LBSLifeActionBargain.Url)
}
#if LANG_CXX11
inline void LBSLifeActionBargain::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LBSLifeActionBargain.Url)
}
#endif
inline void LBSLifeActionBargain::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LBSLifeActionBargain.Url)
}
inline void LBSLifeActionBargain::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LBSLifeActionBargain.Url)
}
inline ::std::string* LBSLifeActionBargain::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:micromsg.LBSLifeActionBargain.Url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LBSLifeActionBargain::release_url() {
  // @@protoc_insertion_point(field_release:micromsg.LBSLifeActionBargain.Url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LBSLifeActionBargain::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LBSLifeActionBargain.Url)
}

// optional string IconUrl = 3;
inline bool LBSLifeActionBargain::has_iconurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LBSLifeActionBargain::set_has_iconurl() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LBSLifeActionBargain::clear_has_iconurl() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LBSLifeActionBargain::clear_iconurl() {
  iconurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_iconurl();
}
inline const ::std::string& LBSLifeActionBargain::iconurl() const {
  // @@protoc_insertion_point(field_get:micromsg.LBSLifeActionBargain.IconUrl)
  return iconurl_.GetNoArena();
}
inline void LBSLifeActionBargain::set_iconurl(const ::std::string& value) {
  set_has_iconurl();
  iconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LBSLifeActionBargain.IconUrl)
}
#if LANG_CXX11
inline void LBSLifeActionBargain::set_iconurl(::std::string&& value) {
  set_has_iconurl();
  iconurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LBSLifeActionBargain.IconUrl)
}
#endif
inline void LBSLifeActionBargain::set_iconurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_iconurl();
  iconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LBSLifeActionBargain.IconUrl)
}
inline void LBSLifeActionBargain::set_iconurl(const char* value, size_t size) {
  set_has_iconurl();
  iconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LBSLifeActionBargain.IconUrl)
}
inline ::std::string* LBSLifeActionBargain::mutable_iconurl() {
  set_has_iconurl();
  // @@protoc_insertion_point(field_mutable:micromsg.LBSLifeActionBargain.IconUrl)
  return iconurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LBSLifeActionBargain::release_iconurl() {
  // @@protoc_insertion_point(field_release:micromsg.LBSLifeActionBargain.IconUrl)
  clear_has_iconurl();
  return iconurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LBSLifeActionBargain::set_allocated_iconurl(::std::string* iconurl) {
  if (iconurl != NULL) {
    set_has_iconurl();
  } else {
    clear_has_iconurl();
  }
  iconurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), iconurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LBSLifeActionBargain.IconUrl)
}

// -------------------------------------------------------------------

// LBSLifeAction

// required uint32 Type = 1;
inline bool LBSLifeAction::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LBSLifeAction::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LBSLifeAction::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LBSLifeAction::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 LBSLifeAction::type() const {
  // @@protoc_insertion_point(field_get:micromsg.LBSLifeAction.Type)
  return type_;
}
inline void LBSLifeAction::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LBSLifeAction.Type)
}

// optional string Name = 2;
inline bool LBSLifeAction::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LBSLifeAction::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LBSLifeAction::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LBSLifeAction::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& LBSLifeAction::name() const {
  // @@protoc_insertion_point(field_get:micromsg.LBSLifeAction.Name)
  return name_.GetNoArena();
}
inline void LBSLifeAction::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LBSLifeAction.Name)
}
#if LANG_CXX11
inline void LBSLifeAction::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LBSLifeAction.Name)
}
#endif
inline void LBSLifeAction::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LBSLifeAction.Name)
}
inline void LBSLifeAction::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LBSLifeAction.Name)
}
inline ::std::string* LBSLifeAction::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:micromsg.LBSLifeAction.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LBSLifeAction::release_name() {
  // @@protoc_insertion_point(field_release:micromsg.LBSLifeAction.Name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LBSLifeAction::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LBSLifeAction.Name)
}

// optional string Desc = 3;
inline bool LBSLifeAction::has_desc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LBSLifeAction::set_has_desc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LBSLifeAction::clear_has_desc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LBSLifeAction::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_desc();
}
inline const ::std::string& LBSLifeAction::desc() const {
  // @@protoc_insertion_point(field_get:micromsg.LBSLifeAction.Desc)
  return desc_.GetNoArena();
}
inline void LBSLifeAction::set_desc(const ::std::string& value) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LBSLifeAction.Desc)
}
#if LANG_CXX11
inline void LBSLifeAction::set_desc(::std::string&& value) {
  set_has_desc();
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LBSLifeAction.Desc)
}
#endif
inline void LBSLifeAction::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LBSLifeAction.Desc)
}
inline void LBSLifeAction::set_desc(const char* value, size_t size) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LBSLifeAction.Desc)
}
inline ::std::string* LBSLifeAction::mutable_desc() {
  set_has_desc();
  // @@protoc_insertion_point(field_mutable:micromsg.LBSLifeAction.Desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LBSLifeAction::release_desc() {
  // @@protoc_insertion_point(field_release:micromsg.LBSLifeAction.Desc)
  clear_has_desc();
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LBSLifeAction::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LBSLifeAction.Desc)
}

// optional string Link = 4;
inline bool LBSLifeAction::has_link() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LBSLifeAction::set_has_link() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LBSLifeAction::clear_has_link() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LBSLifeAction::clear_link() {
  link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_link();
}
inline const ::std::string& LBSLifeAction::link() const {
  // @@protoc_insertion_point(field_get:micromsg.LBSLifeAction.Link)
  return link_.GetNoArena();
}
inline void LBSLifeAction::set_link(const ::std::string& value) {
  set_has_link();
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LBSLifeAction.Link)
}
#if LANG_CXX11
inline void LBSLifeAction::set_link(::std::string&& value) {
  set_has_link();
  link_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LBSLifeAction.Link)
}
#endif
inline void LBSLifeAction::set_link(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_link();
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LBSLifeAction.Link)
}
inline void LBSLifeAction::set_link(const char* value, size_t size) {
  set_has_link();
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LBSLifeAction.Link)
}
inline ::std::string* LBSLifeAction::mutable_link() {
  set_has_link();
  // @@protoc_insertion_point(field_mutable:micromsg.LBSLifeAction.Link)
  return link_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LBSLifeAction::release_link() {
  // @@protoc_insertion_point(field_release:micromsg.LBSLifeAction.Link)
  clear_has_link();
  return link_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LBSLifeAction::set_allocated_link(::std::string* link) {
  if (link != NULL) {
    set_has_link();
  } else {
    clear_has_link();
  }
  link_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), link);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LBSLifeAction.Link)
}

// required uint32 BookingCount = 5;
inline bool LBSLifeAction::has_bookingcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LBSLifeAction::set_has_bookingcount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LBSLifeAction::clear_has_bookingcount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LBSLifeAction::clear_bookingcount() {
  bookingcount_ = 0u;
  clear_has_bookingcount();
}
inline ::google::protobuf::uint32 LBSLifeAction::bookingcount() const {
  // @@protoc_insertion_point(field_get:micromsg.LBSLifeAction.BookingCount)
  return bookingcount_;
}
inline void LBSLifeAction::set_bookingcount(::google::protobuf::uint32 value) {
  set_has_bookingcount();
  bookingcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LBSLifeAction.BookingCount)
}

// repeated .micromsg.LBSLifeActionBooking BookingList = 6;
inline int LBSLifeAction::bookinglist_size() const {
  return bookinglist_.size();
}
inline void LBSLifeAction::clear_bookinglist() {
  bookinglist_.Clear();
}
inline const ::micromsg::LBSLifeActionBooking& LBSLifeAction::bookinglist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.LBSLifeAction.BookingList)
  return bookinglist_.Get(index);
}
inline ::micromsg::LBSLifeActionBooking* LBSLifeAction::mutable_bookinglist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.LBSLifeAction.BookingList)
  return bookinglist_.Mutable(index);
}
inline ::micromsg::LBSLifeActionBooking* LBSLifeAction::add_bookinglist() {
  // @@protoc_insertion_point(field_add:micromsg.LBSLifeAction.BookingList)
  return bookinglist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::LBSLifeActionBooking >*
LBSLifeAction::mutable_bookinglist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.LBSLifeAction.BookingList)
  return &bookinglist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::LBSLifeActionBooking >&
LBSLifeAction::bookinglist() const {
  // @@protoc_insertion_point(field_list:micromsg.LBSLifeAction.BookingList)
  return bookinglist_;
}

// required uint32 BargainCount = 7;
inline bool LBSLifeAction::has_bargaincount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LBSLifeAction::set_has_bargaincount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LBSLifeAction::clear_has_bargaincount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LBSLifeAction::clear_bargaincount() {
  bargaincount_ = 0u;
  clear_has_bargaincount();
}
inline ::google::protobuf::uint32 LBSLifeAction::bargaincount() const {
  // @@protoc_insertion_point(field_get:micromsg.LBSLifeAction.BargainCount)
  return bargaincount_;
}
inline void LBSLifeAction::set_bargaincount(::google::protobuf::uint32 value) {
  set_has_bargaincount();
  bargaincount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LBSLifeAction.BargainCount)
}

// repeated .micromsg.LBSLifeActionBargain BargainList = 8;
inline int LBSLifeAction::bargainlist_size() const {
  return bargainlist_.size();
}
inline void LBSLifeAction::clear_bargainlist() {
  bargainlist_.Clear();
}
inline const ::micromsg::LBSLifeActionBargain& LBSLifeAction::bargainlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.LBSLifeAction.BargainList)
  return bargainlist_.Get(index);
}
inline ::micromsg::LBSLifeActionBargain* LBSLifeAction::mutable_bargainlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.LBSLifeAction.BargainList)
  return bargainlist_.Mutable(index);
}
inline ::micromsg::LBSLifeActionBargain* LBSLifeAction::add_bargainlist() {
  // @@protoc_insertion_point(field_add:micromsg.LBSLifeAction.BargainList)
  return bargainlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::LBSLifeActionBargain >*
LBSLifeAction::mutable_bargainlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.LBSLifeAction.BargainList)
  return &bargainlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::LBSLifeActionBargain >&
LBSLifeAction::bargainlist() const {
  // @@protoc_insertion_point(field_list:micromsg.LBSLifeAction.BargainList)
  return bargainlist_;
}

// -------------------------------------------------------------------

// LBSLifeActionList

// required uint32 Type = 1;
inline bool LBSLifeActionList::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LBSLifeActionList::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LBSLifeActionList::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LBSLifeActionList::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 LBSLifeActionList::type() const {
  // @@protoc_insertion_point(field_get:micromsg.LBSLifeActionList.Type)
  return type_;
}
inline void LBSLifeActionList::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LBSLifeActionList.Type)
}

// required .micromsg.LBSLifeAction LifeAction = 2;
inline bool LBSLifeActionList::has_lifeaction() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LBSLifeActionList::set_has_lifeaction() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LBSLifeActionList::clear_has_lifeaction() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LBSLifeActionList::clear_lifeaction() {
  if (lifeaction_ != NULL) lifeaction_->::micromsg::LBSLifeAction::Clear();
  clear_has_lifeaction();
}
inline const ::micromsg::LBSLifeAction& LBSLifeActionList::lifeaction() const {
  // @@protoc_insertion_point(field_get:micromsg.LBSLifeActionList.LifeAction)
  return lifeaction_ != NULL ? *lifeaction_
                         : *::micromsg::LBSLifeAction::internal_default_instance();
}
inline ::micromsg::LBSLifeAction* LBSLifeActionList::mutable_lifeaction() {
  set_has_lifeaction();
  if (lifeaction_ == NULL) {
    lifeaction_ = new ::micromsg::LBSLifeAction;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.LBSLifeActionList.LifeAction)
  return lifeaction_;
}
inline ::micromsg::LBSLifeAction* LBSLifeActionList::release_lifeaction() {
  // @@protoc_insertion_point(field_release:micromsg.LBSLifeActionList.LifeAction)
  clear_has_lifeaction();
  ::micromsg::LBSLifeAction* temp = lifeaction_;
  lifeaction_ = NULL;
  return temp;
}
inline void LBSLifeActionList::set_allocated_lifeaction(::micromsg::LBSLifeAction* lifeaction) {
  delete lifeaction_;
  lifeaction_ = lifeaction;
  if (lifeaction) {
    set_has_lifeaction();
  } else {
    clear_has_lifeaction();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.LBSLifeActionList.LifeAction)
}

// -------------------------------------------------------------------

// LbsLifeDetail

// required .micromsg.LbsLife Life = 1;
inline bool LbsLifeDetail::has_life() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LbsLifeDetail::set_has_life() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LbsLifeDetail::clear_has_life() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LbsLifeDetail::clear_life() {
  if (life_ != NULL) life_->::micromsg::LbsLife::Clear();
  clear_has_life();
}
inline const ::micromsg::LbsLife& LbsLifeDetail::life() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLifeDetail.Life)
  return life_ != NULL ? *life_
                         : *::micromsg::LbsLife::internal_default_instance();
}
inline ::micromsg::LbsLife* LbsLifeDetail::mutable_life() {
  set_has_life();
  if (life_ == NULL) {
    life_ = new ::micromsg::LbsLife;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.LbsLifeDetail.Life)
  return life_;
}
inline ::micromsg::LbsLife* LbsLifeDetail::release_life() {
  // @@protoc_insertion_point(field_release:micromsg.LbsLifeDetail.Life)
  clear_has_life();
  ::micromsg::LbsLife* temp = life_;
  life_ = NULL;
  return temp;
}
inline void LbsLifeDetail::set_allocated_life(::micromsg::LbsLife* life) {
  delete life_;
  life_ = life;
  if (life) {
    set_has_life();
  } else {
    clear_has_life();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsLifeDetail.Life)
}

// required uint32 CICount = 2;
inline bool LbsLifeDetail::has_cicount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LbsLifeDetail::set_has_cicount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LbsLifeDetail::clear_has_cicount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LbsLifeDetail::clear_cicount() {
  cicount_ = 0u;
  clear_has_cicount();
}
inline ::google::protobuf::uint32 LbsLifeDetail::cicount() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLifeDetail.CICount)
  return cicount_;
}
inline void LbsLifeDetail::set_cicount(::google::protobuf::uint32 value) {
  set_has_cicount();
  cicount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsLifeDetail.CICount)
}

// repeated .micromsg.SKBuiltinString_t CIList = 3;
inline int LbsLifeDetail::cilist_size() const {
  return cilist_.size();
}
inline void LbsLifeDetail::clear_cilist() {
  cilist_.Clear();
}
inline const ::micromsg::SKBuiltinString_t& LbsLifeDetail::cilist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLifeDetail.CIList)
  return cilist_.Get(index);
}
inline ::micromsg::SKBuiltinString_t* LbsLifeDetail::mutable_cilist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.LbsLifeDetail.CIList)
  return cilist_.Mutable(index);
}
inline ::micromsg::SKBuiltinString_t* LbsLifeDetail::add_cilist() {
  // @@protoc_insertion_point(field_add:micromsg.LbsLifeDetail.CIList)
  return cilist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
LbsLifeDetail::mutable_cilist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.LbsLifeDetail.CIList)
  return &cilist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
LbsLifeDetail::cilist() const {
  // @@protoc_insertion_point(field_list:micromsg.LbsLifeDetail.CIList)
  return cilist_;
}

// optional string ThumbUrl = 4;
inline bool LbsLifeDetail::has_thumburl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LbsLifeDetail::set_has_thumburl() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LbsLifeDetail::clear_has_thumburl() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LbsLifeDetail::clear_thumburl() {
  thumburl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_thumburl();
}
inline const ::std::string& LbsLifeDetail::thumburl() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLifeDetail.ThumbUrl)
  return thumburl_.GetNoArena();
}
inline void LbsLifeDetail::set_thumburl(const ::std::string& value) {
  set_has_thumburl();
  thumburl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsLifeDetail.ThumbUrl)
}
#if LANG_CXX11
inline void LbsLifeDetail::set_thumburl(::std::string&& value) {
  set_has_thumburl();
  thumburl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsLifeDetail.ThumbUrl)
}
#endif
inline void LbsLifeDetail::set_thumburl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_thumburl();
  thumburl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsLifeDetail.ThumbUrl)
}
inline void LbsLifeDetail::set_thumburl(const char* value, size_t size) {
  set_has_thumburl();
  thumburl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsLifeDetail.ThumbUrl)
}
inline ::std::string* LbsLifeDetail::mutable_thumburl() {
  set_has_thumburl();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsLifeDetail.ThumbUrl)
  return thumburl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsLifeDetail::release_thumburl() {
  // @@protoc_insertion_point(field_release:micromsg.LbsLifeDetail.ThumbUrl)
  clear_has_thumburl();
  return thumburl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsLifeDetail::set_allocated_thumburl(::std::string* thumburl) {
  if (thumburl != NULL) {
    set_has_thumburl();
  } else {
    clear_has_thumburl();
  }
  thumburl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), thumburl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsLifeDetail.ThumbUrl)
}

// optional string PhotoLink = 5;
inline bool LbsLifeDetail::has_photolink() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LbsLifeDetail::set_has_photolink() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LbsLifeDetail::clear_has_photolink() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LbsLifeDetail::clear_photolink() {
  photolink_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_photolink();
}
inline const ::std::string& LbsLifeDetail::photolink() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLifeDetail.PhotoLink)
  return photolink_.GetNoArena();
}
inline void LbsLifeDetail::set_photolink(const ::std::string& value) {
  set_has_photolink();
  photolink_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsLifeDetail.PhotoLink)
}
#if LANG_CXX11
inline void LbsLifeDetail::set_photolink(::std::string&& value) {
  set_has_photolink();
  photolink_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsLifeDetail.PhotoLink)
}
#endif
inline void LbsLifeDetail::set_photolink(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_photolink();
  photolink_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsLifeDetail.PhotoLink)
}
inline void LbsLifeDetail::set_photolink(const char* value, size_t size) {
  set_has_photolink();
  photolink_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsLifeDetail.PhotoLink)
}
inline ::std::string* LbsLifeDetail::mutable_photolink() {
  set_has_photolink();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsLifeDetail.PhotoLink)
  return photolink_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsLifeDetail::release_photolink() {
  // @@protoc_insertion_point(field_release:micromsg.LbsLifeDetail.PhotoLink)
  clear_has_photolink();
  return photolink_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsLifeDetail::set_allocated_photolink(::std::string* photolink) {
  if (photolink != NULL) {
    set_has_photolink();
  } else {
    clear_has_photolink();
  }
  photolink_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), photolink);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsLifeDetail.PhotoLink)
}

// required uint32 ActionCount = 6;
inline bool LbsLifeDetail::has_actioncount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LbsLifeDetail::set_has_actioncount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LbsLifeDetail::clear_has_actioncount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LbsLifeDetail::clear_actioncount() {
  actioncount_ = 0u;
  clear_has_actioncount();
}
inline ::google::protobuf::uint32 LbsLifeDetail::actioncount() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLifeDetail.ActionCount)
  return actioncount_;
}
inline void LbsLifeDetail::set_actioncount(::google::protobuf::uint32 value) {
  set_has_actioncount();
  actioncount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsLifeDetail.ActionCount)
}

// repeated .micromsg.LBSLifeActionList ActionList = 7;
inline int LbsLifeDetail::actionlist_size() const {
  return actionlist_.size();
}
inline void LbsLifeDetail::clear_actionlist() {
  actionlist_.Clear();
}
inline const ::micromsg::LBSLifeActionList& LbsLifeDetail::actionlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.LbsLifeDetail.ActionList)
  return actionlist_.Get(index);
}
inline ::micromsg::LBSLifeActionList* LbsLifeDetail::mutable_actionlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.LbsLifeDetail.ActionList)
  return actionlist_.Mutable(index);
}
inline ::micromsg::LBSLifeActionList* LbsLifeDetail::add_actionlist() {
  // @@protoc_insertion_point(field_add:micromsg.LbsLifeDetail.ActionList)
  return actionlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::LBSLifeActionList >*
LbsLifeDetail::mutable_actionlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.LbsLifeDetail.ActionList)
  return &actionlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::LBSLifeActionList >&
LbsLifeDetail::actionlist() const {
  // @@protoc_insertion_point(field_list:micromsg.LbsLifeDetail.ActionList)
  return actionlist_;
}

// -------------------------------------------------------------------

// GetLbsLifeDetailRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetLbsLifeDetailRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetLbsLifeDetailRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetLbsLifeDetailRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetLbsLifeDetailRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetLbsLifeDetailRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeDetailRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetLbsLifeDetailRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetLbsLifeDetailRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetLbsLifeDetailRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetLbsLifeDetailRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetLbsLifeDetailRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLbsLifeDetailRequest.BaseRequest)
}

// optional string BusinessId = 2;
inline bool GetLbsLifeDetailRequest::has_businessid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetLbsLifeDetailRequest::set_has_businessid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetLbsLifeDetailRequest::clear_has_businessid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetLbsLifeDetailRequest::clear_businessid() {
  businessid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_businessid();
}
inline const ::std::string& GetLbsLifeDetailRequest::businessid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeDetailRequest.BusinessId)
  return businessid_.GetNoArena();
}
inline void GetLbsLifeDetailRequest::set_businessid(const ::std::string& value) {
  set_has_businessid();
  businessid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetLbsLifeDetailRequest.BusinessId)
}
#if LANG_CXX11
inline void GetLbsLifeDetailRequest::set_businessid(::std::string&& value) {
  set_has_businessid();
  businessid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetLbsLifeDetailRequest.BusinessId)
}
#endif
inline void GetLbsLifeDetailRequest::set_businessid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_businessid();
  businessid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetLbsLifeDetailRequest.BusinessId)
}
inline void GetLbsLifeDetailRequest::set_businessid(const char* value, size_t size) {
  set_has_businessid();
  businessid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetLbsLifeDetailRequest.BusinessId)
}
inline ::std::string* GetLbsLifeDetailRequest::mutable_businessid() {
  set_has_businessid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetLbsLifeDetailRequest.BusinessId)
  return businessid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetLbsLifeDetailRequest::release_businessid() {
  // @@protoc_insertion_point(field_release:micromsg.GetLbsLifeDetailRequest.BusinessId)
  clear_has_businessid();
  return businessid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetLbsLifeDetailRequest::set_allocated_businessid(::std::string* businessid) {
  if (businessid != NULL) {
    set_has_businessid();
  } else {
    clear_has_businessid();
  }
  businessid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), businessid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLbsLifeDetailRequest.BusinessId)
}

// -------------------------------------------------------------------

// GetLbsLifeDetailResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetLbsLifeDetailResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetLbsLifeDetailResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetLbsLifeDetailResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetLbsLifeDetailResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetLbsLifeDetailResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeDetailResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetLbsLifeDetailResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetLbsLifeDetailResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetLbsLifeDetailResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetLbsLifeDetailResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetLbsLifeDetailResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLbsLifeDetailResponse.BaseResponse)
}

// required .micromsg.LbsLifeDetail LifeDetail = 2;
inline bool GetLbsLifeDetailResponse::has_lifedetail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetLbsLifeDetailResponse::set_has_lifedetail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetLbsLifeDetailResponse::clear_has_lifedetail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetLbsLifeDetailResponse::clear_lifedetail() {
  if (lifedetail_ != NULL) lifedetail_->::micromsg::LbsLifeDetail::Clear();
  clear_has_lifedetail();
}
inline const ::micromsg::LbsLifeDetail& GetLbsLifeDetailResponse::lifedetail() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLbsLifeDetailResponse.LifeDetail)
  return lifedetail_ != NULL ? *lifedetail_
                         : *::micromsg::LbsLifeDetail::internal_default_instance();
}
inline ::micromsg::LbsLifeDetail* GetLbsLifeDetailResponse::mutable_lifedetail() {
  set_has_lifedetail();
  if (lifedetail_ == NULL) {
    lifedetail_ = new ::micromsg::LbsLifeDetail;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetLbsLifeDetailResponse.LifeDetail)
  return lifedetail_;
}
inline ::micromsg::LbsLifeDetail* GetLbsLifeDetailResponse::release_lifedetail() {
  // @@protoc_insertion_point(field_release:micromsg.GetLbsLifeDetailResponse.LifeDetail)
  clear_has_lifedetail();
  ::micromsg::LbsLifeDetail* temp = lifedetail_;
  lifedetail_ = NULL;
  return temp;
}
inline void GetLbsLifeDetailResponse::set_allocated_lifedetail(::micromsg::LbsLifeDetail* lifedetail) {
  delete lifedetail_;
  lifedetail_ = lifedetail;
  if (lifedetail) {
    set_has_lifedetail();
  } else {
    clear_has_lifedetail();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLbsLifeDetailResponse.LifeDetail)
}

// -------------------------------------------------------------------

// LbsRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool LbsRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LbsRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LbsRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LbsRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& LbsRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* LbsRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* LbsRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void LbsRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRequest.BaseRequest)
}

// required uint32 OpCode = 2;
inline bool LbsRequest::has_opcode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LbsRequest::set_has_opcode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LbsRequest::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LbsRequest::clear_opcode() {
  opcode_ = 0u;
  clear_has_opcode();
}
inline ::google::protobuf::uint32 LbsRequest::opcode() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRequest.OpCode)
  return opcode_;
}
inline void LbsRequest::set_opcode(::google::protobuf::uint32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsRequest.OpCode)
}

// required float Longitude = 3;
inline bool LbsRequest::has_longitude() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LbsRequest::set_has_longitude() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LbsRequest::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LbsRequest::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline float LbsRequest::longitude() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRequest.Longitude)
  return longitude_;
}
inline void LbsRequest::set_longitude(float value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsRequest.Longitude)
}

// required float Latitude = 4;
inline bool LbsRequest::has_latitude() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LbsRequest::set_has_latitude() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LbsRequest::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LbsRequest::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline float LbsRequest::latitude() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRequest.Latitude)
  return latitude_;
}
inline void LbsRequest::set_latitude(float value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsRequest.Latitude)
}

// required int32 Precision = 5;
inline bool LbsRequest::has_precision() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LbsRequest::set_has_precision() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LbsRequest::clear_has_precision() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LbsRequest::clear_precision() {
  precision_ = 0;
  clear_has_precision();
}
inline ::google::protobuf::int32 LbsRequest::precision() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRequest.Precision)
  return precision_;
}
inline void LbsRequest::set_precision(::google::protobuf::int32 value) {
  set_has_precision();
  precision_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsRequest.Precision)
}

// optional string MacAddr = 6;
inline bool LbsRequest::has_macaddr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LbsRequest::set_has_macaddr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LbsRequest::clear_has_macaddr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LbsRequest::clear_macaddr() {
  macaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_macaddr();
}
inline const ::std::string& LbsRequest::macaddr() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRequest.MacAddr)
  return macaddr_.GetNoArena();
}
inline void LbsRequest::set_macaddr(const ::std::string& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsRequest.MacAddr)
}
#if LANG_CXX11
inline void LbsRequest::set_macaddr(::std::string&& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsRequest.MacAddr)
}
#endif
inline void LbsRequest::set_macaddr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsRequest.MacAddr)
}
inline void LbsRequest::set_macaddr(const char* value, size_t size) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsRequest.MacAddr)
}
inline ::std::string* LbsRequest::mutable_macaddr() {
  set_has_macaddr();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRequest.MacAddr)
  return macaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsRequest::release_macaddr() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRequest.MacAddr)
  clear_has_macaddr();
  return macaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsRequest::set_allocated_macaddr(::std::string* macaddr) {
  if (macaddr != NULL) {
    set_has_macaddr();
  } else {
    clear_has_macaddr();
  }
  macaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), macaddr);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRequest.MacAddr)
}

// optional string CellId = 7;
inline bool LbsRequest::has_cellid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LbsRequest::set_has_cellid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LbsRequest::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LbsRequest::clear_cellid() {
  cellid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cellid();
}
inline const ::std::string& LbsRequest::cellid() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRequest.CellId)
  return cellid_.GetNoArena();
}
inline void LbsRequest::set_cellid(const ::std::string& value) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsRequest.CellId)
}
#if LANG_CXX11
inline void LbsRequest::set_cellid(::std::string&& value) {
  set_has_cellid();
  cellid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsRequest.CellId)
}
#endif
inline void LbsRequest::set_cellid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsRequest.CellId)
}
inline void LbsRequest::set_cellid(const char* value, size_t size) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsRequest.CellId)
}
inline ::std::string* LbsRequest::mutable_cellid() {
  set_has_cellid();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRequest.CellId)
  return cellid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsRequest::release_cellid() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRequest.CellId)
  clear_has_cellid();
  return cellid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsRequest::set_allocated_cellid(::std::string* cellid) {
  if (cellid != NULL) {
    set_has_cellid();
  } else {
    clear_has_cellid();
  }
  cellid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cellid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRequest.CellId)
}

// optional int32 GPSSource = 8;
inline bool LbsRequest::has_gpssource() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LbsRequest::set_has_gpssource() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LbsRequest::clear_has_gpssource() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LbsRequest::clear_gpssource() {
  gpssource_ = 0;
  clear_has_gpssource();
}
inline ::google::protobuf::int32 LbsRequest::gpssource() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRequest.GPSSource)
  return gpssource_;
}
inline void LbsRequest::set_gpssource(::google::protobuf::int32 value) {
  set_has_gpssource();
  gpssource_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsRequest.GPSSource)
}

// -------------------------------------------------------------------

// AlbumLbsRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool AlbumLbsRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AlbumLbsRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AlbumLbsRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AlbumLbsRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& AlbumLbsRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.AlbumLbsRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* AlbumLbsRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.AlbumLbsRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* AlbumLbsRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.AlbumLbsRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void AlbumLbsRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.AlbumLbsRequest.BaseRequest)
}

// required uint32 OpCode = 2;
inline bool AlbumLbsRequest::has_opcode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AlbumLbsRequest::set_has_opcode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AlbumLbsRequest::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AlbumLbsRequest::clear_opcode() {
  opcode_ = 0u;
  clear_has_opcode();
}
inline ::google::protobuf::uint32 AlbumLbsRequest::opcode() const {
  // @@protoc_insertion_point(field_get:micromsg.AlbumLbsRequest.OpCode)
  return opcode_;
}
inline void AlbumLbsRequest::set_opcode(::google::protobuf::uint32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AlbumLbsRequest.OpCode)
}

// required float Longitude = 3;
inline bool AlbumLbsRequest::has_longitude() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AlbumLbsRequest::set_has_longitude() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AlbumLbsRequest::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AlbumLbsRequest::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline float AlbumLbsRequest::longitude() const {
  // @@protoc_insertion_point(field_get:micromsg.AlbumLbsRequest.Longitude)
  return longitude_;
}
inline void AlbumLbsRequest::set_longitude(float value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AlbumLbsRequest.Longitude)
}

// required float Latitude = 4;
inline bool AlbumLbsRequest::has_latitude() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AlbumLbsRequest::set_has_latitude() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AlbumLbsRequest::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AlbumLbsRequest::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline float AlbumLbsRequest::latitude() const {
  // @@protoc_insertion_point(field_get:micromsg.AlbumLbsRequest.Latitude)
  return latitude_;
}
inline void AlbumLbsRequest::set_latitude(float value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AlbumLbsRequest.Latitude)
}

// required int32 Precision = 5;
inline bool AlbumLbsRequest::has_precision() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AlbumLbsRequest::set_has_precision() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AlbumLbsRequest::clear_has_precision() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AlbumLbsRequest::clear_precision() {
  precision_ = 0;
  clear_has_precision();
}
inline ::google::protobuf::int32 AlbumLbsRequest::precision() const {
  // @@protoc_insertion_point(field_get:micromsg.AlbumLbsRequest.Precision)
  return precision_;
}
inline void AlbumLbsRequest::set_precision(::google::protobuf::int32 value) {
  set_has_precision();
  precision_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AlbumLbsRequest.Precision)
}

// optional string MacAddr = 6;
inline bool AlbumLbsRequest::has_macaddr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlbumLbsRequest::set_has_macaddr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlbumLbsRequest::clear_has_macaddr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlbumLbsRequest::clear_macaddr() {
  macaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_macaddr();
}
inline const ::std::string& AlbumLbsRequest::macaddr() const {
  // @@protoc_insertion_point(field_get:micromsg.AlbumLbsRequest.MacAddr)
  return macaddr_.GetNoArena();
}
inline void AlbumLbsRequest::set_macaddr(const ::std::string& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AlbumLbsRequest.MacAddr)
}
#if LANG_CXX11
inline void AlbumLbsRequest::set_macaddr(::std::string&& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AlbumLbsRequest.MacAddr)
}
#endif
inline void AlbumLbsRequest::set_macaddr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AlbumLbsRequest.MacAddr)
}
inline void AlbumLbsRequest::set_macaddr(const char* value, size_t size) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AlbumLbsRequest.MacAddr)
}
inline ::std::string* AlbumLbsRequest::mutable_macaddr() {
  set_has_macaddr();
  // @@protoc_insertion_point(field_mutable:micromsg.AlbumLbsRequest.MacAddr)
  return macaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlbumLbsRequest::release_macaddr() {
  // @@protoc_insertion_point(field_release:micromsg.AlbumLbsRequest.MacAddr)
  clear_has_macaddr();
  return macaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlbumLbsRequest::set_allocated_macaddr(::std::string* macaddr) {
  if (macaddr != NULL) {
    set_has_macaddr();
  } else {
    clear_has_macaddr();
  }
  macaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), macaddr);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AlbumLbsRequest.MacAddr)
}

// optional string CellId = 7;
inline bool AlbumLbsRequest::has_cellid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlbumLbsRequest::set_has_cellid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AlbumLbsRequest::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AlbumLbsRequest::clear_cellid() {
  cellid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cellid();
}
inline const ::std::string& AlbumLbsRequest::cellid() const {
  // @@protoc_insertion_point(field_get:micromsg.AlbumLbsRequest.CellId)
  return cellid_.GetNoArena();
}
inline void AlbumLbsRequest::set_cellid(const ::std::string& value) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AlbumLbsRequest.CellId)
}
#if LANG_CXX11
inline void AlbumLbsRequest::set_cellid(::std::string&& value) {
  set_has_cellid();
  cellid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AlbumLbsRequest.CellId)
}
#endif
inline void AlbumLbsRequest::set_cellid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AlbumLbsRequest.CellId)
}
inline void AlbumLbsRequest::set_cellid(const char* value, size_t size) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AlbumLbsRequest.CellId)
}
inline ::std::string* AlbumLbsRequest::mutable_cellid() {
  set_has_cellid();
  // @@protoc_insertion_point(field_mutable:micromsg.AlbumLbsRequest.CellId)
  return cellid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlbumLbsRequest::release_cellid() {
  // @@protoc_insertion_point(field_release:micromsg.AlbumLbsRequest.CellId)
  clear_has_cellid();
  return cellid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlbumLbsRequest::set_allocated_cellid(::std::string* cellid) {
  if (cellid != NULL) {
    set_has_cellid();
  } else {
    clear_has_cellid();
  }
  cellid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cellid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AlbumLbsRequest.CellId)
}

// required int32 GPSSource = 8;
inline bool AlbumLbsRequest::has_gpssource() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AlbumLbsRequest::set_has_gpssource() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AlbumLbsRequest::clear_has_gpssource() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AlbumLbsRequest::clear_gpssource() {
  gpssource_ = 0;
  clear_has_gpssource();
}
inline ::google::protobuf::int32 AlbumLbsRequest::gpssource() const {
  // @@protoc_insertion_point(field_get:micromsg.AlbumLbsRequest.GPSSource)
  return gpssource_;
}
inline void AlbumLbsRequest::set_gpssource(::google::protobuf::int32 value) {
  set_has_gpssource();
  gpssource_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AlbumLbsRequest.GPSSource)
}

// required uint32 SBTime = 9;
inline bool AlbumLbsRequest::has_sbtime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AlbumLbsRequest::set_has_sbtime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AlbumLbsRequest::clear_has_sbtime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AlbumLbsRequest::clear_sbtime() {
  sbtime_ = 0u;
  clear_has_sbtime();
}
inline ::google::protobuf::uint32 AlbumLbsRequest::sbtime() const {
  // @@protoc_insertion_point(field_get:micromsg.AlbumLbsRequest.SBTime)
  return sbtime_;
}
inline void AlbumLbsRequest::set_sbtime(::google::protobuf::uint32 value) {
  set_has_sbtime();
  sbtime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AlbumLbsRequest.SBTime)
}

// -------------------------------------------------------------------

// LbsContactInfo

// optional string UserName = 1;
inline bool LbsContactInfo::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LbsContactInfo::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LbsContactInfo::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LbsContactInfo::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& LbsContactInfo::username() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.UserName)
  return username_.GetNoArena();
}
inline void LbsContactInfo::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.UserName)
}
#if LANG_CXX11
inline void LbsContactInfo::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsContactInfo.UserName)
}
#endif
inline void LbsContactInfo::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsContactInfo.UserName)
}
inline void LbsContactInfo::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsContactInfo.UserName)
}
inline ::std::string* LbsContactInfo::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsContactInfo::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsContactInfo::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.UserName)
}

// optional string NickName = 2;
inline bool LbsContactInfo::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LbsContactInfo::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LbsContactInfo::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LbsContactInfo::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& LbsContactInfo::nickname() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.NickName)
  return nickname_.GetNoArena();
}
inline void LbsContactInfo::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.NickName)
}
#if LANG_CXX11
inline void LbsContactInfo::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsContactInfo.NickName)
}
#endif
inline void LbsContactInfo::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsContactInfo.NickName)
}
inline void LbsContactInfo::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsContactInfo.NickName)
}
inline ::std::string* LbsContactInfo::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.NickName)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsContactInfo::release_nickname() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.NickName)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsContactInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.NickName)
}

// optional string Province = 3;
inline bool LbsContactInfo::has_province() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LbsContactInfo::set_has_province() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LbsContactInfo::clear_has_province() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LbsContactInfo::clear_province() {
  province_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_province();
}
inline const ::std::string& LbsContactInfo::province() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.Province)
  return province_.GetNoArena();
}
inline void LbsContactInfo::set_province(const ::std::string& value) {
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.Province)
}
#if LANG_CXX11
inline void LbsContactInfo::set_province(::std::string&& value) {
  set_has_province();
  province_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsContactInfo.Province)
}
#endif
inline void LbsContactInfo::set_province(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsContactInfo.Province)
}
inline void LbsContactInfo::set_province(const char* value, size_t size) {
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsContactInfo.Province)
}
inline ::std::string* LbsContactInfo::mutable_province() {
  set_has_province();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.Province)
  return province_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsContactInfo::release_province() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.Province)
  clear_has_province();
  return province_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsContactInfo::set_allocated_province(::std::string* province) {
  if (province != NULL) {
    set_has_province();
  } else {
    clear_has_province();
  }
  province_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), province);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.Province)
}

// optional string City = 4;
inline bool LbsContactInfo::has_city() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LbsContactInfo::set_has_city() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LbsContactInfo::clear_has_city() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LbsContactInfo::clear_city() {
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_city();
}
inline const ::std::string& LbsContactInfo::city() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.City)
  return city_.GetNoArena();
}
inline void LbsContactInfo::set_city(const ::std::string& value) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.City)
}
#if LANG_CXX11
inline void LbsContactInfo::set_city(::std::string&& value) {
  set_has_city();
  city_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsContactInfo.City)
}
#endif
inline void LbsContactInfo::set_city(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsContactInfo.City)
}
inline void LbsContactInfo::set_city(const char* value, size_t size) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsContactInfo.City)
}
inline ::std::string* LbsContactInfo::mutable_city() {
  set_has_city();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.City)
  return city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsContactInfo::release_city() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.City)
  clear_has_city();
  return city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsContactInfo::set_allocated_city(::std::string* city) {
  if (city != NULL) {
    set_has_city();
  } else {
    clear_has_city();
  }
  city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.City)
}

// optional string Signature = 5;
inline bool LbsContactInfo::has_signature() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LbsContactInfo::set_has_signature() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LbsContactInfo::clear_has_signature() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LbsContactInfo::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_signature();
}
inline const ::std::string& LbsContactInfo::signature() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.Signature)
  return signature_.GetNoArena();
}
inline void LbsContactInfo::set_signature(const ::std::string& value) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.Signature)
}
#if LANG_CXX11
inline void LbsContactInfo::set_signature(::std::string&& value) {
  set_has_signature();
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsContactInfo.Signature)
}
#endif
inline void LbsContactInfo::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsContactInfo.Signature)
}
inline void LbsContactInfo::set_signature(const char* value, size_t size) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsContactInfo.Signature)
}
inline ::std::string* LbsContactInfo::mutable_signature() {
  set_has_signature();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.Signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsContactInfo::release_signature() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.Signature)
  clear_has_signature();
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsContactInfo::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    set_has_signature();
  } else {
    clear_has_signature();
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.Signature)
}

// optional string Distance = 6;
inline bool LbsContactInfo::has_distance() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LbsContactInfo::set_has_distance() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LbsContactInfo::clear_has_distance() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LbsContactInfo::clear_distance() {
  distance_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_distance();
}
inline const ::std::string& LbsContactInfo::distance() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.Distance)
  return distance_.GetNoArena();
}
inline void LbsContactInfo::set_distance(const ::std::string& value) {
  set_has_distance();
  distance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.Distance)
}
#if LANG_CXX11
inline void LbsContactInfo::set_distance(::std::string&& value) {
  set_has_distance();
  distance_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsContactInfo.Distance)
}
#endif
inline void LbsContactInfo::set_distance(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_distance();
  distance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsContactInfo.Distance)
}
inline void LbsContactInfo::set_distance(const char* value, size_t size) {
  set_has_distance();
  distance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsContactInfo.Distance)
}
inline ::std::string* LbsContactInfo::mutable_distance() {
  set_has_distance();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.Distance)
  return distance_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsContactInfo::release_distance() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.Distance)
  clear_has_distance();
  return distance_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsContactInfo::set_allocated_distance(::std::string* distance) {
  if (distance != NULL) {
    set_has_distance();
  } else {
    clear_has_distance();
  }
  distance_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), distance);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.Distance)
}

// required int32 Sex = 7;
inline bool LbsContactInfo::has_sex() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void LbsContactInfo::set_has_sex() {
  _has_bits_[0] |= 0x00040000u;
}
inline void LbsContactInfo::clear_has_sex() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void LbsContactInfo::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 LbsContactInfo::sex() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.Sex)
  return sex_;
}
inline void LbsContactInfo::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.Sex)
}

// required uint32 ImgStatus = 8;
inline bool LbsContactInfo::has_imgstatus() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void LbsContactInfo::set_has_imgstatus() {
  _has_bits_[0] |= 0x00080000u;
}
inline void LbsContactInfo::clear_has_imgstatus() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void LbsContactInfo::clear_imgstatus() {
  imgstatus_ = 0u;
  clear_has_imgstatus();
}
inline ::google::protobuf::uint32 LbsContactInfo::imgstatus() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.ImgStatus)
  return imgstatus_;
}
inline void LbsContactInfo::set_imgstatus(::google::protobuf::uint32 value) {
  set_has_imgstatus();
  imgstatus_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.ImgStatus)
}

// optional uint32 VerifyFlag = 9;
inline bool LbsContactInfo::has_verifyflag() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void LbsContactInfo::set_has_verifyflag() {
  _has_bits_[0] |= 0x00100000u;
}
inline void LbsContactInfo::clear_has_verifyflag() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void LbsContactInfo::clear_verifyflag() {
  verifyflag_ = 0u;
  clear_has_verifyflag();
}
inline ::google::protobuf::uint32 LbsContactInfo::verifyflag() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.VerifyFlag)
  return verifyflag_;
}
inline void LbsContactInfo::set_verifyflag(::google::protobuf::uint32 value) {
  set_has_verifyflag();
  verifyflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.VerifyFlag)
}

// optional string VerifyInfo = 10;
inline bool LbsContactInfo::has_verifyinfo() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LbsContactInfo::set_has_verifyinfo() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LbsContactInfo::clear_has_verifyinfo() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LbsContactInfo::clear_verifyinfo() {
  verifyinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_verifyinfo();
}
inline const ::std::string& LbsContactInfo::verifyinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.VerifyInfo)
  return verifyinfo_.GetNoArena();
}
inline void LbsContactInfo::set_verifyinfo(const ::std::string& value) {
  set_has_verifyinfo();
  verifyinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.VerifyInfo)
}
#if LANG_CXX11
inline void LbsContactInfo::set_verifyinfo(::std::string&& value) {
  set_has_verifyinfo();
  verifyinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsContactInfo.VerifyInfo)
}
#endif
inline void LbsContactInfo::set_verifyinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_verifyinfo();
  verifyinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsContactInfo.VerifyInfo)
}
inline void LbsContactInfo::set_verifyinfo(const char* value, size_t size) {
  set_has_verifyinfo();
  verifyinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsContactInfo.VerifyInfo)
}
inline ::std::string* LbsContactInfo::mutable_verifyinfo() {
  set_has_verifyinfo();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.VerifyInfo)
  return verifyinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsContactInfo::release_verifyinfo() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.VerifyInfo)
  clear_has_verifyinfo();
  return verifyinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsContactInfo::set_allocated_verifyinfo(::std::string* verifyinfo) {
  if (verifyinfo != NULL) {
    set_has_verifyinfo();
  } else {
    clear_has_verifyinfo();
  }
  verifyinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verifyinfo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.VerifyInfo)
}

// optional string VerifyContent = 11;
inline bool LbsContactInfo::has_verifycontent() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LbsContactInfo::set_has_verifycontent() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LbsContactInfo::clear_has_verifycontent() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LbsContactInfo::clear_verifycontent() {
  verifycontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_verifycontent();
}
inline const ::std::string& LbsContactInfo::verifycontent() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.VerifyContent)
  return verifycontent_.GetNoArena();
}
inline void LbsContactInfo::set_verifycontent(const ::std::string& value) {
  set_has_verifycontent();
  verifycontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.VerifyContent)
}
#if LANG_CXX11
inline void LbsContactInfo::set_verifycontent(::std::string&& value) {
  set_has_verifycontent();
  verifycontent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsContactInfo.VerifyContent)
}
#endif
inline void LbsContactInfo::set_verifycontent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_verifycontent();
  verifycontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsContactInfo.VerifyContent)
}
inline void LbsContactInfo::set_verifycontent(const char* value, size_t size) {
  set_has_verifycontent();
  verifycontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsContactInfo.VerifyContent)
}
inline ::std::string* LbsContactInfo::mutable_verifycontent() {
  set_has_verifycontent();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.VerifyContent)
  return verifycontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsContactInfo::release_verifycontent() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.VerifyContent)
  clear_has_verifycontent();
  return verifycontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsContactInfo::set_allocated_verifycontent(::std::string* verifycontent) {
  if (verifycontent != NULL) {
    set_has_verifycontent();
  } else {
    clear_has_verifycontent();
  }
  verifycontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verifycontent);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.VerifyContent)
}

// optional string Alias = 12;
inline bool LbsContactInfo::has_alias() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LbsContactInfo::set_has_alias() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LbsContactInfo::clear_has_alias() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LbsContactInfo::clear_alias() {
  alias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_alias();
}
inline const ::std::string& LbsContactInfo::alias() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.Alias)
  return alias_.GetNoArena();
}
inline void LbsContactInfo::set_alias(const ::std::string& value) {
  set_has_alias();
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.Alias)
}
#if LANG_CXX11
inline void LbsContactInfo::set_alias(::std::string&& value) {
  set_has_alias();
  alias_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsContactInfo.Alias)
}
#endif
inline void LbsContactInfo::set_alias(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_alias();
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsContactInfo.Alias)
}
inline void LbsContactInfo::set_alias(const char* value, size_t size) {
  set_has_alias();
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsContactInfo.Alias)
}
inline ::std::string* LbsContactInfo::mutable_alias() {
  set_has_alias();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.Alias)
  return alias_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsContactInfo::release_alias() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.Alias)
  clear_has_alias();
  return alias_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsContactInfo::set_allocated_alias(::std::string* alias) {
  if (alias != NULL) {
    set_has_alias();
  } else {
    clear_has_alias();
  }
  alias_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alias);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.Alias)
}

// optional string Weibo = 13;
inline bool LbsContactInfo::has_weibo() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void LbsContactInfo::set_has_weibo() {
  _has_bits_[0] |= 0x00000200u;
}
inline void LbsContactInfo::clear_has_weibo() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void LbsContactInfo::clear_weibo() {
  weibo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_weibo();
}
inline const ::std::string& LbsContactInfo::weibo() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.Weibo)
  return weibo_.GetNoArena();
}
inline void LbsContactInfo::set_weibo(const ::std::string& value) {
  set_has_weibo();
  weibo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.Weibo)
}
#if LANG_CXX11
inline void LbsContactInfo::set_weibo(::std::string&& value) {
  set_has_weibo();
  weibo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsContactInfo.Weibo)
}
#endif
inline void LbsContactInfo::set_weibo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_weibo();
  weibo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsContactInfo.Weibo)
}
inline void LbsContactInfo::set_weibo(const char* value, size_t size) {
  set_has_weibo();
  weibo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsContactInfo.Weibo)
}
inline ::std::string* LbsContactInfo::mutable_weibo() {
  set_has_weibo();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.Weibo)
  return weibo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsContactInfo::release_weibo() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.Weibo)
  clear_has_weibo();
  return weibo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsContactInfo::set_allocated_weibo(::std::string* weibo) {
  if (weibo != NULL) {
    set_has_weibo();
  } else {
    clear_has_weibo();
  }
  weibo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), weibo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.Weibo)
}

// optional string WeiboNickname = 14;
inline bool LbsContactInfo::has_weibonickname() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void LbsContactInfo::set_has_weibonickname() {
  _has_bits_[0] |= 0x00000400u;
}
inline void LbsContactInfo::clear_has_weibonickname() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void LbsContactInfo::clear_weibonickname() {
  weibonickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_weibonickname();
}
inline const ::std::string& LbsContactInfo::weibonickname() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.WeiboNickname)
  return weibonickname_.GetNoArena();
}
inline void LbsContactInfo::set_weibonickname(const ::std::string& value) {
  set_has_weibonickname();
  weibonickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.WeiboNickname)
}
#if LANG_CXX11
inline void LbsContactInfo::set_weibonickname(::std::string&& value) {
  set_has_weibonickname();
  weibonickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsContactInfo.WeiboNickname)
}
#endif
inline void LbsContactInfo::set_weibonickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_weibonickname();
  weibonickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsContactInfo.WeiboNickname)
}
inline void LbsContactInfo::set_weibonickname(const char* value, size_t size) {
  set_has_weibonickname();
  weibonickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsContactInfo.WeiboNickname)
}
inline ::std::string* LbsContactInfo::mutable_weibonickname() {
  set_has_weibonickname();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.WeiboNickname)
  return weibonickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsContactInfo::release_weibonickname() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.WeiboNickname)
  clear_has_weibonickname();
  return weibonickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsContactInfo::set_allocated_weibonickname(::std::string* weibonickname) {
  if (weibonickname != NULL) {
    set_has_weibonickname();
  } else {
    clear_has_weibonickname();
  }
  weibonickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), weibonickname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.WeiboNickname)
}

// optional uint32 WeiboFlag = 15;
inline bool LbsContactInfo::has_weiboflag() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void LbsContactInfo::set_has_weiboflag() {
  _has_bits_[0] |= 0x00200000u;
}
inline void LbsContactInfo::clear_has_weiboflag() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void LbsContactInfo::clear_weiboflag() {
  weiboflag_ = 0u;
  clear_has_weiboflag();
}
inline ::google::protobuf::uint32 LbsContactInfo::weiboflag() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.WeiboFlag)
  return weiboflag_;
}
inline void LbsContactInfo::set_weiboflag(::google::protobuf::uint32 value) {
  set_has_weiboflag();
  weiboflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.WeiboFlag)
}

// optional int32 HeadImgVersion = 19;
inline bool LbsContactInfo::has_headimgversion() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void LbsContactInfo::set_has_headimgversion() {
  _has_bits_[0] |= 0x00400000u;
}
inline void LbsContactInfo::clear_has_headimgversion() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void LbsContactInfo::clear_headimgversion() {
  headimgversion_ = 0;
  clear_has_headimgversion();
}
inline ::google::protobuf::int32 LbsContactInfo::headimgversion() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.HeadImgVersion)
  return headimgversion_;
}
inline void LbsContactInfo::set_headimgversion(::google::protobuf::int32 value) {
  set_has_headimgversion();
  headimgversion_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.HeadImgVersion)
}

// optional .micromsg.SnsUserInfo SnsUserInfo = 20;
inline bool LbsContactInfo::has_snsuserinfo() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void LbsContactInfo::set_has_snsuserinfo() {
  _has_bits_[0] |= 0x00010000u;
}
inline void LbsContactInfo::clear_has_snsuserinfo() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void LbsContactInfo::clear_snsuserinfo() {
  if (snsuserinfo_ != NULL) snsuserinfo_->::micromsg::SnsUserInfo::Clear();
  clear_has_snsuserinfo();
}
inline const ::micromsg::SnsUserInfo& LbsContactInfo::snsuserinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.SnsUserInfo)
  return snsuserinfo_ != NULL ? *snsuserinfo_
                         : *::micromsg::SnsUserInfo::internal_default_instance();
}
inline ::micromsg::SnsUserInfo* LbsContactInfo::mutable_snsuserinfo() {
  set_has_snsuserinfo();
  if (snsuserinfo_ == NULL) {
    snsuserinfo_ = new ::micromsg::SnsUserInfo;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.SnsUserInfo)
  return snsuserinfo_;
}
inline ::micromsg::SnsUserInfo* LbsContactInfo::release_snsuserinfo() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.SnsUserInfo)
  clear_has_snsuserinfo();
  ::micromsg::SnsUserInfo* temp = snsuserinfo_;
  snsuserinfo_ = NULL;
  return temp;
}
inline void LbsContactInfo::set_allocated_snsuserinfo(::micromsg::SnsUserInfo* snsuserinfo) {
  delete snsuserinfo_;
  snsuserinfo_ = snsuserinfo;
  if (snsuserinfo) {
    set_has_snsuserinfo();
  } else {
    clear_has_snsuserinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.SnsUserInfo)
}

// optional string Country = 21;
inline bool LbsContactInfo::has_country() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void LbsContactInfo::set_has_country() {
  _has_bits_[0] |= 0x00000800u;
}
inline void LbsContactInfo::clear_has_country() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void LbsContactInfo::clear_country() {
  country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_country();
}
inline const ::std::string& LbsContactInfo::country() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.Country)
  return country_.GetNoArena();
}
inline void LbsContactInfo::set_country(const ::std::string& value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.Country)
}
#if LANG_CXX11
inline void LbsContactInfo::set_country(::std::string&& value) {
  set_has_country();
  country_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsContactInfo.Country)
}
#endif
inline void LbsContactInfo::set_country(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsContactInfo.Country)
}
inline void LbsContactInfo::set_country(const char* value, size_t size) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsContactInfo.Country)
}
inline ::std::string* LbsContactInfo::mutable_country() {
  set_has_country();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.Country)
  return country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsContactInfo::release_country() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.Country)
  clear_has_country();
  return country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsContactInfo::set_allocated_country(::std::string* country) {
  if (country != NULL) {
    set_has_country();
  } else {
    clear_has_country();
  }
  country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.Country)
}

// optional string BigHeadImgUrl = 22;
inline bool LbsContactInfo::has_bigheadimgurl() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void LbsContactInfo::set_has_bigheadimgurl() {
  _has_bits_[0] |= 0x00001000u;
}
inline void LbsContactInfo::clear_has_bigheadimgurl() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void LbsContactInfo::clear_bigheadimgurl() {
  bigheadimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bigheadimgurl();
}
inline const ::std::string& LbsContactInfo::bigheadimgurl() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.BigHeadImgUrl)
  return bigheadimgurl_.GetNoArena();
}
inline void LbsContactInfo::set_bigheadimgurl(const ::std::string& value) {
  set_has_bigheadimgurl();
  bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.BigHeadImgUrl)
}
#if LANG_CXX11
inline void LbsContactInfo::set_bigheadimgurl(::std::string&& value) {
  set_has_bigheadimgurl();
  bigheadimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsContactInfo.BigHeadImgUrl)
}
#endif
inline void LbsContactInfo::set_bigheadimgurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bigheadimgurl();
  bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsContactInfo.BigHeadImgUrl)
}
inline void LbsContactInfo::set_bigheadimgurl(const char* value, size_t size) {
  set_has_bigheadimgurl();
  bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsContactInfo.BigHeadImgUrl)
}
inline ::std::string* LbsContactInfo::mutable_bigheadimgurl() {
  set_has_bigheadimgurl();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.BigHeadImgUrl)
  return bigheadimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsContactInfo::release_bigheadimgurl() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.BigHeadImgUrl)
  clear_has_bigheadimgurl();
  return bigheadimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsContactInfo::set_allocated_bigheadimgurl(::std::string* bigheadimgurl) {
  if (bigheadimgurl != NULL) {
    set_has_bigheadimgurl();
  } else {
    clear_has_bigheadimgurl();
  }
  bigheadimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bigheadimgurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.BigHeadImgUrl)
}

// optional string SmallHeadImgUrl = 23;
inline bool LbsContactInfo::has_smallheadimgurl() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void LbsContactInfo::set_has_smallheadimgurl() {
  _has_bits_[0] |= 0x00002000u;
}
inline void LbsContactInfo::clear_has_smallheadimgurl() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void LbsContactInfo::clear_smallheadimgurl() {
  smallheadimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_smallheadimgurl();
}
inline const ::std::string& LbsContactInfo::smallheadimgurl() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.SmallHeadImgUrl)
  return smallheadimgurl_.GetNoArena();
}
inline void LbsContactInfo::set_smallheadimgurl(const ::std::string& value) {
  set_has_smallheadimgurl();
  smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.SmallHeadImgUrl)
}
#if LANG_CXX11
inline void LbsContactInfo::set_smallheadimgurl(::std::string&& value) {
  set_has_smallheadimgurl();
  smallheadimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsContactInfo.SmallHeadImgUrl)
}
#endif
inline void LbsContactInfo::set_smallheadimgurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_smallheadimgurl();
  smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsContactInfo.SmallHeadImgUrl)
}
inline void LbsContactInfo::set_smallheadimgurl(const char* value, size_t size) {
  set_has_smallheadimgurl();
  smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsContactInfo.SmallHeadImgUrl)
}
inline ::std::string* LbsContactInfo::mutable_smallheadimgurl() {
  set_has_smallheadimgurl();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.SmallHeadImgUrl)
  return smallheadimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsContactInfo::release_smallheadimgurl() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.SmallHeadImgUrl)
  clear_has_smallheadimgurl();
  return smallheadimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsContactInfo::set_allocated_smallheadimgurl(::std::string* smallheadimgurl) {
  if (smallheadimgurl != NULL) {
    set_has_smallheadimgurl();
  } else {
    clear_has_smallheadimgurl();
  }
  smallheadimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smallheadimgurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.SmallHeadImgUrl)
}

// optional string MyBrandList = 24;
inline bool LbsContactInfo::has_mybrandlist() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void LbsContactInfo::set_has_mybrandlist() {
  _has_bits_[0] |= 0x00004000u;
}
inline void LbsContactInfo::clear_has_mybrandlist() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void LbsContactInfo::clear_mybrandlist() {
  mybrandlist_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mybrandlist();
}
inline const ::std::string& LbsContactInfo::mybrandlist() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.MyBrandList)
  return mybrandlist_.GetNoArena();
}
inline void LbsContactInfo::set_mybrandlist(const ::std::string& value) {
  set_has_mybrandlist();
  mybrandlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.MyBrandList)
}
#if LANG_CXX11
inline void LbsContactInfo::set_mybrandlist(::std::string&& value) {
  set_has_mybrandlist();
  mybrandlist_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsContactInfo.MyBrandList)
}
#endif
inline void LbsContactInfo::set_mybrandlist(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mybrandlist();
  mybrandlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsContactInfo.MyBrandList)
}
inline void LbsContactInfo::set_mybrandlist(const char* value, size_t size) {
  set_has_mybrandlist();
  mybrandlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsContactInfo.MyBrandList)
}
inline ::std::string* LbsContactInfo::mutable_mybrandlist() {
  set_has_mybrandlist();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.MyBrandList)
  return mybrandlist_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsContactInfo::release_mybrandlist() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.MyBrandList)
  clear_has_mybrandlist();
  return mybrandlist_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsContactInfo::set_allocated_mybrandlist(::std::string* mybrandlist) {
  if (mybrandlist != NULL) {
    set_has_mybrandlist();
  } else {
    clear_has_mybrandlist();
  }
  mybrandlist_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mybrandlist);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.MyBrandList)
}

// optional .micromsg.CustomizedInfo CustomizedInfo = 25;
inline bool LbsContactInfo::has_customizedinfo() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void LbsContactInfo::set_has_customizedinfo() {
  _has_bits_[0] |= 0x00020000u;
}
inline void LbsContactInfo::clear_has_customizedinfo() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void LbsContactInfo::clear_customizedinfo() {
  if (customizedinfo_ != NULL) customizedinfo_->::micromsg::CustomizedInfo::Clear();
  clear_has_customizedinfo();
}
inline const ::micromsg::CustomizedInfo& LbsContactInfo::customizedinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.CustomizedInfo)
  return customizedinfo_ != NULL ? *customizedinfo_
                         : *::micromsg::CustomizedInfo::internal_default_instance();
}
inline ::micromsg::CustomizedInfo* LbsContactInfo::mutable_customizedinfo() {
  set_has_customizedinfo();
  if (customizedinfo_ == NULL) {
    customizedinfo_ = new ::micromsg::CustomizedInfo;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.CustomizedInfo)
  return customizedinfo_;
}
inline ::micromsg::CustomizedInfo* LbsContactInfo::release_customizedinfo() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.CustomizedInfo)
  clear_has_customizedinfo();
  ::micromsg::CustomizedInfo* temp = customizedinfo_;
  customizedinfo_ = NULL;
  return temp;
}
inline void LbsContactInfo::set_allocated_customizedinfo(::micromsg::CustomizedInfo* customizedinfo) {
  delete customizedinfo_;
  customizedinfo_ = customizedinfo;
  if (customizedinfo) {
    set_has_customizedinfo();
  } else {
    clear_has_customizedinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.CustomizedInfo)
}

// optional string AntispamTicket = 26;
inline bool LbsContactInfo::has_antispamticket() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void LbsContactInfo::set_has_antispamticket() {
  _has_bits_[0] |= 0x00008000u;
}
inline void LbsContactInfo::clear_has_antispamticket() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void LbsContactInfo::clear_antispamticket() {
  antispamticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_antispamticket();
}
inline const ::std::string& LbsContactInfo::antispamticket() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsContactInfo.AntispamTicket)
  return antispamticket_.GetNoArena();
}
inline void LbsContactInfo::set_antispamticket(const ::std::string& value) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsContactInfo.AntispamTicket)
}
#if LANG_CXX11
inline void LbsContactInfo::set_antispamticket(::std::string&& value) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsContactInfo.AntispamTicket)
}
#endif
inline void LbsContactInfo::set_antispamticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsContactInfo.AntispamTicket)
}
inline void LbsContactInfo::set_antispamticket(const char* value, size_t size) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsContactInfo.AntispamTicket)
}
inline ::std::string* LbsContactInfo::mutable_antispamticket() {
  set_has_antispamticket();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsContactInfo.AntispamTicket)
  return antispamticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsContactInfo::release_antispamticket() {
  // @@protoc_insertion_point(field_release:micromsg.LbsContactInfo.AntispamTicket)
  clear_has_antispamticket();
  return antispamticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsContactInfo::set_allocated_antispamticket(::std::string* antispamticket) {
  if (antispamticket != NULL) {
    set_has_antispamticket();
  } else {
    clear_has_antispamticket();
  }
  antispamticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), antispamticket);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsContactInfo.AntispamTicket)
}

// -------------------------------------------------------------------

// LbsResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool LbsResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LbsResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LbsResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LbsResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& LbsResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* LbsResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.LbsResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* LbsResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.LbsResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void LbsResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsResponse.BaseResponse)
}

// required uint32 ContactCount = 2;
inline bool LbsResponse::has_contactcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LbsResponse::set_has_contactcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LbsResponse::clear_has_contactcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LbsResponse::clear_contactcount() {
  contactcount_ = 0u;
  clear_has_contactcount();
}
inline ::google::protobuf::uint32 LbsResponse::contactcount() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsResponse.ContactCount)
  return contactcount_;
}
inline void LbsResponse::set_contactcount(::google::protobuf::uint32 value) {
  set_has_contactcount();
  contactcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsResponse.ContactCount)
}

// repeated .micromsg.LbsContactInfo ContactList = 3;
inline int LbsResponse::contactlist_size() const {
  return contactlist_.size();
}
inline void LbsResponse::clear_contactlist() {
  contactlist_.Clear();
}
inline const ::micromsg::LbsContactInfo& LbsResponse::contactlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.LbsResponse.ContactList)
  return contactlist_.Get(index);
}
inline ::micromsg::LbsContactInfo* LbsResponse::mutable_contactlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.LbsResponse.ContactList)
  return contactlist_.Mutable(index);
}
inline ::micromsg::LbsContactInfo* LbsResponse::add_contactlist() {
  // @@protoc_insertion_point(field_add:micromsg.LbsResponse.ContactList)
  return contactlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::LbsContactInfo >*
LbsResponse::mutable_contactlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.LbsResponse.ContactList)
  return &contactlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::LbsContactInfo >&
LbsResponse::contactlist() const {
  // @@protoc_insertion_point(field_list:micromsg.LbsResponse.ContactList)
  return contactlist_;
}

// optional uint32 State = 4;
inline bool LbsResponse::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LbsResponse::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LbsResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LbsResponse::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 LbsResponse::state() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsResponse.State)
  return state_;
}
inline void LbsResponse::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsResponse.State)
}

// optional uint32 FlushTime = 5;
inline bool LbsResponse::has_flushtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LbsResponse::set_has_flushtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LbsResponse::clear_has_flushtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LbsResponse::clear_flushtime() {
  flushtime_ = 0u;
  clear_has_flushtime();
}
inline ::google::protobuf::uint32 LbsResponse::flushtime() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsResponse.FlushTime)
  return flushtime_;
}
inline void LbsResponse::set_flushtime(::google::protobuf::uint32 value) {
  set_has_flushtime();
  flushtime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsResponse.FlushTime)
}

// optional uint32 IsShowRoom = 6;
inline bool LbsResponse::has_isshowroom() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LbsResponse::set_has_isshowroom() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LbsResponse::clear_has_isshowroom() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LbsResponse::clear_isshowroom() {
  isshowroom_ = 0u;
  clear_has_isshowroom();
}
inline ::google::protobuf::uint32 LbsResponse::isshowroom() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsResponse.IsShowRoom)
  return isshowroom_;
}
inline void LbsResponse::set_isshowroom(::google::protobuf::uint32 value) {
  set_has_isshowroom();
  isshowroom_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsResponse.IsShowRoom)
}

// optional uint32 RoomMemberCount = 7;
inline bool LbsResponse::has_roommembercount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LbsResponse::set_has_roommembercount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LbsResponse::clear_has_roommembercount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LbsResponse::clear_roommembercount() {
  roommembercount_ = 0u;
  clear_has_roommembercount();
}
inline ::google::protobuf::uint32 LbsResponse::roommembercount() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsResponse.RoomMemberCount)
  return roommembercount_;
}
inline void LbsResponse::set_roommembercount(::google::protobuf::uint32 value) {
  set_has_roommembercount();
  roommembercount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsResponse.RoomMemberCount)
}

// -------------------------------------------------------------------

// AlbumLbsContactInfo

// optional string UserName = 1;
inline bool AlbumLbsContactInfo::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlbumLbsContactInfo::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlbumLbsContactInfo::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlbumLbsContactInfo::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& AlbumLbsContactInfo::username() const {
  // @@protoc_insertion_point(field_get:micromsg.AlbumLbsContactInfo.UserName)
  return username_.GetNoArena();
}
inline void AlbumLbsContactInfo::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AlbumLbsContactInfo.UserName)
}
#if LANG_CXX11
inline void AlbumLbsContactInfo::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AlbumLbsContactInfo.UserName)
}
#endif
inline void AlbumLbsContactInfo::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AlbumLbsContactInfo.UserName)
}
inline void AlbumLbsContactInfo::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AlbumLbsContactInfo.UserName)
}
inline ::std::string* AlbumLbsContactInfo::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.AlbumLbsContactInfo.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AlbumLbsContactInfo::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.AlbumLbsContactInfo.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AlbumLbsContactInfo::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AlbumLbsContactInfo.UserName)
}

// -------------------------------------------------------------------

// AlbumLbsResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool AlbumLbsResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlbumLbsResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlbumLbsResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlbumLbsResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& AlbumLbsResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.AlbumLbsResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* AlbumLbsResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.AlbumLbsResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* AlbumLbsResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.AlbumLbsResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void AlbumLbsResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.AlbumLbsResponse.BaseResponse)
}

// required uint32 ContactCount = 2;
inline bool AlbumLbsResponse::has_contactcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlbumLbsResponse::set_has_contactcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AlbumLbsResponse::clear_has_contactcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AlbumLbsResponse::clear_contactcount() {
  contactcount_ = 0u;
  clear_has_contactcount();
}
inline ::google::protobuf::uint32 AlbumLbsResponse::contactcount() const {
  // @@protoc_insertion_point(field_get:micromsg.AlbumLbsResponse.ContactCount)
  return contactcount_;
}
inline void AlbumLbsResponse::set_contactcount(::google::protobuf::uint32 value) {
  set_has_contactcount();
  contactcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AlbumLbsResponse.ContactCount)
}

// repeated .micromsg.AlbumLbsContactInfo ContactList = 3;
inline int AlbumLbsResponse::contactlist_size() const {
  return contactlist_.size();
}
inline void AlbumLbsResponse::clear_contactlist() {
  contactlist_.Clear();
}
inline const ::micromsg::AlbumLbsContactInfo& AlbumLbsResponse::contactlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.AlbumLbsResponse.ContactList)
  return contactlist_.Get(index);
}
inline ::micromsg::AlbumLbsContactInfo* AlbumLbsResponse::mutable_contactlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.AlbumLbsResponse.ContactList)
  return contactlist_.Mutable(index);
}
inline ::micromsg::AlbumLbsContactInfo* AlbumLbsResponse::add_contactlist() {
  // @@protoc_insertion_point(field_add:micromsg.AlbumLbsResponse.ContactList)
  return contactlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::AlbumLbsContactInfo >*
AlbumLbsResponse::mutable_contactlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.AlbumLbsResponse.ContactList)
  return &contactlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::AlbumLbsContactInfo >&
AlbumLbsResponse::contactlist() const {
  // @@protoc_insertion_point(field_list:micromsg.AlbumLbsResponse.ContactList)
  return contactlist_;
}

// -------------------------------------------------------------------

// ShakeReportRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool ShakeReportRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShakeReportRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShakeReportRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShakeReportRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& ShakeReportRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeReportRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* ShakeReportRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeReportRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* ShakeReportRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeReportRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void ShakeReportRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeReportRequest.BaseRequest)
}

// required uint32 OpCode = 2;
inline bool ShakeReportRequest::has_opcode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShakeReportRequest::set_has_opcode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShakeReportRequest::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShakeReportRequest::clear_opcode() {
  opcode_ = 0u;
  clear_has_opcode();
}
inline ::google::protobuf::uint32 ShakeReportRequest::opcode() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeReportRequest.OpCode)
  return opcode_;
}
inline void ShakeReportRequest::set_opcode(::google::protobuf::uint32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeReportRequest.OpCode)
}

// required float Longitude = 3;
inline bool ShakeReportRequest::has_longitude() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ShakeReportRequest::set_has_longitude() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ShakeReportRequest::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ShakeReportRequest::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline float ShakeReportRequest::longitude() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeReportRequest.Longitude)
  return longitude_;
}
inline void ShakeReportRequest::set_longitude(float value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeReportRequest.Longitude)
}

// required float Latitude = 4;
inline bool ShakeReportRequest::has_latitude() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ShakeReportRequest::set_has_latitude() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ShakeReportRequest::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ShakeReportRequest::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline float ShakeReportRequest::latitude() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeReportRequest.Latitude)
  return latitude_;
}
inline void ShakeReportRequest::set_latitude(float value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeReportRequest.Latitude)
}

// required int32 Precision = 5;
inline bool ShakeReportRequest::has_precision() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ShakeReportRequest::set_has_precision() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ShakeReportRequest::clear_has_precision() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ShakeReportRequest::clear_precision() {
  precision_ = 0;
  clear_has_precision();
}
inline ::google::protobuf::int32 ShakeReportRequest::precision() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeReportRequest.Precision)
  return precision_;
}
inline void ShakeReportRequest::set_precision(::google::protobuf::int32 value) {
  set_has_precision();
  precision_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeReportRequest.Precision)
}

// optional string MacAddr = 6;
inline bool ShakeReportRequest::has_macaddr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShakeReportRequest::set_has_macaddr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShakeReportRequest::clear_has_macaddr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShakeReportRequest::clear_macaddr() {
  macaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_macaddr();
}
inline const ::std::string& ShakeReportRequest::macaddr() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeReportRequest.MacAddr)
  return macaddr_.GetNoArena();
}
inline void ShakeReportRequest::set_macaddr(const ::std::string& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeReportRequest.MacAddr)
}
#if LANG_CXX11
inline void ShakeReportRequest::set_macaddr(::std::string&& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeReportRequest.MacAddr)
}
#endif
inline void ShakeReportRequest::set_macaddr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeReportRequest.MacAddr)
}
inline void ShakeReportRequest::set_macaddr(const char* value, size_t size) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeReportRequest.MacAddr)
}
inline ::std::string* ShakeReportRequest::mutable_macaddr() {
  set_has_macaddr();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeReportRequest.MacAddr)
  return macaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShakeReportRequest::release_macaddr() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeReportRequest.MacAddr)
  clear_has_macaddr();
  return macaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShakeReportRequest::set_allocated_macaddr(::std::string* macaddr) {
  if (macaddr != NULL) {
    set_has_macaddr();
  } else {
    clear_has_macaddr();
  }
  macaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), macaddr);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeReportRequest.MacAddr)
}

// optional string CellId = 7;
inline bool ShakeReportRequest::has_cellid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShakeReportRequest::set_has_cellid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShakeReportRequest::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShakeReportRequest::clear_cellid() {
  cellid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cellid();
}
inline const ::std::string& ShakeReportRequest::cellid() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeReportRequest.CellId)
  return cellid_.GetNoArena();
}
inline void ShakeReportRequest::set_cellid(const ::std::string& value) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeReportRequest.CellId)
}
#if LANG_CXX11
inline void ShakeReportRequest::set_cellid(::std::string&& value) {
  set_has_cellid();
  cellid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeReportRequest.CellId)
}
#endif
inline void ShakeReportRequest::set_cellid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeReportRequest.CellId)
}
inline void ShakeReportRequest::set_cellid(const char* value, size_t size) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeReportRequest.CellId)
}
inline ::std::string* ShakeReportRequest::mutable_cellid() {
  set_has_cellid();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeReportRequest.CellId)
  return cellid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShakeReportRequest::release_cellid() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeReportRequest.CellId)
  clear_has_cellid();
  return cellid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShakeReportRequest::set_allocated_cellid(::std::string* cellid) {
  if (cellid != NULL) {
    set_has_cellid();
  } else {
    clear_has_cellid();
  }
  cellid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cellid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeReportRequest.CellId)
}

// required uint32 ImgId = 8;
inline bool ShakeReportRequest::has_imgid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ShakeReportRequest::set_has_imgid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ShakeReportRequest::clear_has_imgid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ShakeReportRequest::clear_imgid() {
  imgid_ = 0u;
  clear_has_imgid();
}
inline ::google::protobuf::uint32 ShakeReportRequest::imgid() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeReportRequest.ImgId)
  return imgid_;
}
inline void ShakeReportRequest::set_imgid(::google::protobuf::uint32 value) {
  set_has_imgid();
  imgid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeReportRequest.ImgId)
}

// required uint32 Times = 9;
inline bool ShakeReportRequest::has_times() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ShakeReportRequest::set_has_times() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ShakeReportRequest::clear_has_times() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ShakeReportRequest::clear_times() {
  times_ = 0u;
  clear_has_times();
}
inline ::google::protobuf::uint32 ShakeReportRequest::times() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeReportRequest.Times)
  return times_;
}
inline void ShakeReportRequest::set_times(::google::protobuf::uint32 value) {
  set_has_times();
  times_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeReportRequest.Times)
}

// optional int32 GPSSource = 10;
inline bool ShakeReportRequest::has_gpssource() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ShakeReportRequest::set_has_gpssource() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ShakeReportRequest::clear_has_gpssource() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ShakeReportRequest::clear_gpssource() {
  gpssource_ = 0;
  clear_has_gpssource();
}
inline ::google::protobuf::int32 ShakeReportRequest::gpssource() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeReportRequest.GPSSource)
  return gpssource_;
}
inline void ShakeReportRequest::set_gpssource(::google::protobuf::int32 value) {
  set_has_gpssource();
  gpssource_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeReportRequest.GPSSource)
}

// -------------------------------------------------------------------

// ShakeBuffer

// required uint32 ReportTime = 1;
inline bool ShakeBuffer::has_reporttime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShakeBuffer::set_has_reporttime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShakeBuffer::clear_has_reporttime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShakeBuffer::clear_reporttime() {
  reporttime_ = 0u;
  clear_has_reporttime();
}
inline ::google::protobuf::uint32 ShakeBuffer::reporttime() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeBuffer.ReportTime)
  return reporttime_;
}
inline void ShakeBuffer::set_reporttime(::google::protobuf::uint32 value) {
  set_has_reporttime();
  reporttime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeBuffer.ReportTime)
}

// required uint32 X = 2;
inline bool ShakeBuffer::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShakeBuffer::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShakeBuffer::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShakeBuffer::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 ShakeBuffer::x() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeBuffer.X)
  return x_;
}
inline void ShakeBuffer::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeBuffer.X)
}

// required uint32 Y = 3;
inline bool ShakeBuffer::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShakeBuffer::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShakeBuffer::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShakeBuffer::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 ShakeBuffer::y() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeBuffer.Y)
  return y_;
}
inline void ShakeBuffer::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeBuffer.Y)
}

// -------------------------------------------------------------------

// ShakeReportResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool ShakeReportResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShakeReportResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShakeReportResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShakeReportResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& ShakeReportResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeReportResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* ShakeReportResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeReportResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* ShakeReportResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeReportResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void ShakeReportResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeReportResponse.BaseResponse)
}

// required .micromsg.SKBuiltinBuffer_t Buffer = 2;
inline bool ShakeReportResponse::has_buffer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShakeReportResponse::set_has_buffer() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShakeReportResponse::clear_has_buffer() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShakeReportResponse::clear_buffer() {
  if (buffer_ != NULL) buffer_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_buffer();
}
inline const ::micromsg::SKBuiltinBuffer_t& ShakeReportResponse::buffer() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeReportResponse.Buffer)
  return buffer_ != NULL ? *buffer_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* ShakeReportResponse::mutable_buffer() {
  set_has_buffer();
  if (buffer_ == NULL) {
    buffer_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeReportResponse.Buffer)
  return buffer_;
}
inline ::micromsg::SKBuiltinBuffer_t* ShakeReportResponse::release_buffer() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeReportResponse.Buffer)
  clear_has_buffer();
  ::micromsg::SKBuiltinBuffer_t* temp = buffer_;
  buffer_ = NULL;
  return temp;
}
inline void ShakeReportResponse::set_allocated_buffer(::micromsg::SKBuiltinBuffer_t* buffer) {
  delete buffer_;
  buffer_ = buffer;
  if (buffer) {
    set_has_buffer();
  } else {
    clear_has_buffer();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeReportResponse.Buffer)
}

// required int32 Ret = 3;
inline bool ShakeReportResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShakeReportResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShakeReportResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShakeReportResponse::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 ShakeReportResponse::ret() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeReportResponse.Ret)
  return ret_;
}
inline void ShakeReportResponse::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeReportResponse.Ret)
}

// required uint32 ImgId = 4;
inline bool ShakeReportResponse::has_imgid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShakeReportResponse::set_has_imgid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShakeReportResponse::clear_has_imgid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShakeReportResponse::clear_imgid() {
  imgid_ = 0u;
  clear_has_imgid();
}
inline ::google::protobuf::uint32 ShakeReportResponse::imgid() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeReportResponse.ImgId)
  return imgid_;
}
inline void ShakeReportResponse::set_imgid(::google::protobuf::uint32 value) {
  set_has_imgid();
  imgid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeReportResponse.ImgId)
}

// optional uint32 ImgTotoalLen = 5;
inline bool ShakeReportResponse::has_imgtotoallen() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ShakeReportResponse::set_has_imgtotoallen() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ShakeReportResponse::clear_has_imgtotoallen() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ShakeReportResponse::clear_imgtotoallen() {
  imgtotoallen_ = 0u;
  clear_has_imgtotoallen();
}
inline ::google::protobuf::uint32 ShakeReportResponse::imgtotoallen() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeReportResponse.ImgTotoalLen)
  return imgtotoallen_;
}
inline void ShakeReportResponse::set_imgtotoallen(::google::protobuf::uint32 value) {
  set_has_imgtotoallen();
  imgtotoallen_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeReportResponse.ImgTotoalLen)
}

// -------------------------------------------------------------------

// ShakeGetRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool ShakeGetRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShakeGetRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShakeGetRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShakeGetRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& ShakeGetRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* ShakeGetRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* ShakeGetRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void ShakeGetRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetRequest.BaseRequest)
}

// required .micromsg.SKBuiltinBuffer_t Buffer = 2;
inline bool ShakeGetRequest::has_buffer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShakeGetRequest::set_has_buffer() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShakeGetRequest::clear_has_buffer() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShakeGetRequest::clear_buffer() {
  if (buffer_ != NULL) buffer_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_buffer();
}
inline const ::micromsg::SKBuiltinBuffer_t& ShakeGetRequest::buffer() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetRequest.Buffer)
  return buffer_ != NULL ? *buffer_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* ShakeGetRequest::mutable_buffer() {
  set_has_buffer();
  if (buffer_ == NULL) {
    buffer_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetRequest.Buffer)
  return buffer_;
}
inline ::micromsg::SKBuiltinBuffer_t* ShakeGetRequest::release_buffer() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetRequest.Buffer)
  clear_has_buffer();
  ::micromsg::SKBuiltinBuffer_t* temp = buffer_;
  buffer_ = NULL;
  return temp;
}
inline void ShakeGetRequest::set_allocated_buffer(::micromsg::SKBuiltinBuffer_t* buffer) {
  delete buffer_;
  buffer_ = buffer;
  if (buffer) {
    set_has_buffer();
  } else {
    clear_has_buffer();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetRequest.Buffer)
}

// optional int32 IsNewVerson = 3;
inline bool ShakeGetRequest::has_isnewverson() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShakeGetRequest::set_has_isnewverson() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShakeGetRequest::clear_has_isnewverson() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShakeGetRequest::clear_isnewverson() {
  isnewverson_ = 0;
  clear_has_isnewverson();
}
inline ::google::protobuf::int32 ShakeGetRequest::isnewverson() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetRequest.IsNewVerson)
  return isnewverson_;
}
inline void ShakeGetRequest::set_isnewverson(::google::protobuf::int32 value) {
  set_has_isnewverson();
  isnewverson_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetRequest.IsNewVerson)
}

// -------------------------------------------------------------------

// ShakeGetItem

// optional string UserName = 1;
inline bool ShakeGetItem::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShakeGetItem::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShakeGetItem::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShakeGetItem::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& ShakeGetItem::username() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.UserName)
  return username_.GetNoArena();
}
inline void ShakeGetItem::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.UserName)
}
#if LANG_CXX11
inline void ShakeGetItem::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeGetItem.UserName)
}
#endif
inline void ShakeGetItem::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeGetItem.UserName)
}
inline void ShakeGetItem::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeGetItem.UserName)
}
inline ::std::string* ShakeGetItem::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShakeGetItem::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShakeGetItem::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.UserName)
}

// optional string NickName = 2;
inline bool ShakeGetItem::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShakeGetItem::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShakeGetItem::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShakeGetItem::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& ShakeGetItem::nickname() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.NickName)
  return nickname_.GetNoArena();
}
inline void ShakeGetItem::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.NickName)
}
#if LANG_CXX11
inline void ShakeGetItem::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeGetItem.NickName)
}
#endif
inline void ShakeGetItem::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeGetItem.NickName)
}
inline void ShakeGetItem::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeGetItem.NickName)
}
inline ::std::string* ShakeGetItem::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.NickName)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShakeGetItem::release_nickname() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.NickName)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShakeGetItem::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.NickName)
}

// optional string Province = 3;
inline bool ShakeGetItem::has_province() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShakeGetItem::set_has_province() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShakeGetItem::clear_has_province() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShakeGetItem::clear_province() {
  province_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_province();
}
inline const ::std::string& ShakeGetItem::province() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.Province)
  return province_.GetNoArena();
}
inline void ShakeGetItem::set_province(const ::std::string& value) {
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.Province)
}
#if LANG_CXX11
inline void ShakeGetItem::set_province(::std::string&& value) {
  set_has_province();
  province_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeGetItem.Province)
}
#endif
inline void ShakeGetItem::set_province(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeGetItem.Province)
}
inline void ShakeGetItem::set_province(const char* value, size_t size) {
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeGetItem.Province)
}
inline ::std::string* ShakeGetItem::mutable_province() {
  set_has_province();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.Province)
  return province_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShakeGetItem::release_province() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.Province)
  clear_has_province();
  return province_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShakeGetItem::set_allocated_province(::std::string* province) {
  if (province != NULL) {
    set_has_province();
  } else {
    clear_has_province();
  }
  province_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), province);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.Province)
}

// optional string City = 4;
inline bool ShakeGetItem::has_city() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShakeGetItem::set_has_city() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShakeGetItem::clear_has_city() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShakeGetItem::clear_city() {
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_city();
}
inline const ::std::string& ShakeGetItem::city() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.City)
  return city_.GetNoArena();
}
inline void ShakeGetItem::set_city(const ::std::string& value) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.City)
}
#if LANG_CXX11
inline void ShakeGetItem::set_city(::std::string&& value) {
  set_has_city();
  city_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeGetItem.City)
}
#endif
inline void ShakeGetItem::set_city(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeGetItem.City)
}
inline void ShakeGetItem::set_city(const char* value, size_t size) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeGetItem.City)
}
inline ::std::string* ShakeGetItem::mutable_city() {
  set_has_city();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.City)
  return city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShakeGetItem::release_city() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.City)
  clear_has_city();
  return city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShakeGetItem::set_allocated_city(::std::string* city) {
  if (city != NULL) {
    set_has_city();
  } else {
    clear_has_city();
  }
  city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.City)
}

// optional string Signature = 5;
inline bool ShakeGetItem::has_signature() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ShakeGetItem::set_has_signature() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ShakeGetItem::clear_has_signature() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ShakeGetItem::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_signature();
}
inline const ::std::string& ShakeGetItem::signature() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.Signature)
  return signature_.GetNoArena();
}
inline void ShakeGetItem::set_signature(const ::std::string& value) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.Signature)
}
#if LANG_CXX11
inline void ShakeGetItem::set_signature(::std::string&& value) {
  set_has_signature();
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeGetItem.Signature)
}
#endif
inline void ShakeGetItem::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeGetItem.Signature)
}
inline void ShakeGetItem::set_signature(const char* value, size_t size) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeGetItem.Signature)
}
inline ::std::string* ShakeGetItem::mutable_signature() {
  set_has_signature();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.Signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShakeGetItem::release_signature() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.Signature)
  clear_has_signature();
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShakeGetItem::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    set_has_signature();
  } else {
    clear_has_signature();
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.Signature)
}

// optional string Distance = 6;
inline bool ShakeGetItem::has_distance() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ShakeGetItem::set_has_distance() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ShakeGetItem::clear_has_distance() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ShakeGetItem::clear_distance() {
  distance_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_distance();
}
inline const ::std::string& ShakeGetItem::distance() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.Distance)
  return distance_.GetNoArena();
}
inline void ShakeGetItem::set_distance(const ::std::string& value) {
  set_has_distance();
  distance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.Distance)
}
#if LANG_CXX11
inline void ShakeGetItem::set_distance(::std::string&& value) {
  set_has_distance();
  distance_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeGetItem.Distance)
}
#endif
inline void ShakeGetItem::set_distance(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_distance();
  distance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeGetItem.Distance)
}
inline void ShakeGetItem::set_distance(const char* value, size_t size) {
  set_has_distance();
  distance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeGetItem.Distance)
}
inline ::std::string* ShakeGetItem::mutable_distance() {
  set_has_distance();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.Distance)
  return distance_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShakeGetItem::release_distance() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.Distance)
  clear_has_distance();
  return distance_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShakeGetItem::set_allocated_distance(::std::string* distance) {
  if (distance != NULL) {
    set_has_distance();
  } else {
    clear_has_distance();
  }
  distance_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), distance);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.Distance)
}

// required int32 Sex = 7;
inline bool ShakeGetItem::has_sex() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void ShakeGetItem::set_has_sex() {
  _has_bits_[0] |= 0x00040000u;
}
inline void ShakeGetItem::clear_has_sex() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void ShakeGetItem::clear_sex() {
  sex_ = 0;
  clear_has_sex();
}
inline ::google::protobuf::int32 ShakeGetItem::sex() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.Sex)
  return sex_;
}
inline void ShakeGetItem::set_sex(::google::protobuf::int32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.Sex)
}

// required uint32 ImgStatus = 8;
inline bool ShakeGetItem::has_imgstatus() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void ShakeGetItem::set_has_imgstatus() {
  _has_bits_[0] |= 0x00080000u;
}
inline void ShakeGetItem::clear_has_imgstatus() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void ShakeGetItem::clear_imgstatus() {
  imgstatus_ = 0u;
  clear_has_imgstatus();
}
inline ::google::protobuf::uint32 ShakeGetItem::imgstatus() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.ImgStatus)
  return imgstatus_;
}
inline void ShakeGetItem::set_imgstatus(::google::protobuf::uint32 value) {
  set_has_imgstatus();
  imgstatus_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.ImgStatus)
}

// required uint32 HasHDImg = 9;
inline bool ShakeGetItem::has_hashdimg() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void ShakeGetItem::set_has_hashdimg() {
  _has_bits_[0] |= 0x00100000u;
}
inline void ShakeGetItem::clear_has_hashdimg() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void ShakeGetItem::clear_hashdimg() {
  hashdimg_ = 0u;
  clear_has_hashdimg();
}
inline ::google::protobuf::uint32 ShakeGetItem::hashdimg() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.HasHDImg)
  return hashdimg_;
}
inline void ShakeGetItem::set_hashdimg(::google::protobuf::uint32 value) {
  set_has_hashdimg();
  hashdimg_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.HasHDImg)
}

// required .micromsg.SKBuiltinBuffer_t ImgBuffer = 10;
inline bool ShakeGetItem::has_imgbuffer() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void ShakeGetItem::set_has_imgbuffer() {
  _has_bits_[0] |= 0x00008000u;
}
inline void ShakeGetItem::clear_has_imgbuffer() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void ShakeGetItem::clear_imgbuffer() {
  if (imgbuffer_ != NULL) imgbuffer_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_imgbuffer();
}
inline const ::micromsg::SKBuiltinBuffer_t& ShakeGetItem::imgbuffer() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.ImgBuffer)
  return imgbuffer_ != NULL ? *imgbuffer_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* ShakeGetItem::mutable_imgbuffer() {
  set_has_imgbuffer();
  if (imgbuffer_ == NULL) {
    imgbuffer_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.ImgBuffer)
  return imgbuffer_;
}
inline ::micromsg::SKBuiltinBuffer_t* ShakeGetItem::release_imgbuffer() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.ImgBuffer)
  clear_has_imgbuffer();
  ::micromsg::SKBuiltinBuffer_t* temp = imgbuffer_;
  imgbuffer_ = NULL;
  return temp;
}
inline void ShakeGetItem::set_allocated_imgbuffer(::micromsg::SKBuiltinBuffer_t* imgbuffer) {
  delete imgbuffer_;
  imgbuffer_ = imgbuffer;
  if (imgbuffer) {
    set_has_imgbuffer();
  } else {
    clear_has_imgbuffer();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.ImgBuffer)
}

// required uint32 NumDistance = 11;
inline bool ShakeGetItem::has_numdistance() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void ShakeGetItem::set_has_numdistance() {
  _has_bits_[0] |= 0x00200000u;
}
inline void ShakeGetItem::clear_has_numdistance() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void ShakeGetItem::clear_numdistance() {
  numdistance_ = 0u;
  clear_has_numdistance();
}
inline ::google::protobuf::uint32 ShakeGetItem::numdistance() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.NumDistance)
  return numdistance_;
}
inline void ShakeGetItem::set_numdistance(::google::protobuf::uint32 value) {
  set_has_numdistance();
  numdistance_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.NumDistance)
}

// optional string Weibo = 12;
inline bool ShakeGetItem::has_weibo() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ShakeGetItem::set_has_weibo() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ShakeGetItem::clear_has_weibo() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ShakeGetItem::clear_weibo() {
  weibo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_weibo();
}
inline const ::std::string& ShakeGetItem::weibo() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.Weibo)
  return weibo_.GetNoArena();
}
inline void ShakeGetItem::set_weibo(const ::std::string& value) {
  set_has_weibo();
  weibo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.Weibo)
}
#if LANG_CXX11
inline void ShakeGetItem::set_weibo(::std::string&& value) {
  set_has_weibo();
  weibo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeGetItem.Weibo)
}
#endif
inline void ShakeGetItem::set_weibo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_weibo();
  weibo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeGetItem.Weibo)
}
inline void ShakeGetItem::set_weibo(const char* value, size_t size) {
  set_has_weibo();
  weibo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeGetItem.Weibo)
}
inline ::std::string* ShakeGetItem::mutable_weibo() {
  set_has_weibo();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.Weibo)
  return weibo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShakeGetItem::release_weibo() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.Weibo)
  clear_has_weibo();
  return weibo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShakeGetItem::set_allocated_weibo(::std::string* weibo) {
  if (weibo != NULL) {
    set_has_weibo();
  } else {
    clear_has_weibo();
  }
  weibo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), weibo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.Weibo)
}

// optional string WeiboNickname = 13;
inline bool ShakeGetItem::has_weibonickname() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ShakeGetItem::set_has_weibonickname() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ShakeGetItem::clear_has_weibonickname() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ShakeGetItem::clear_weibonickname() {
  weibonickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_weibonickname();
}
inline const ::std::string& ShakeGetItem::weibonickname() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.WeiboNickname)
  return weibonickname_.GetNoArena();
}
inline void ShakeGetItem::set_weibonickname(const ::std::string& value) {
  set_has_weibonickname();
  weibonickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.WeiboNickname)
}
#if LANG_CXX11
inline void ShakeGetItem::set_weibonickname(::std::string&& value) {
  set_has_weibonickname();
  weibonickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeGetItem.WeiboNickname)
}
#endif
inline void ShakeGetItem::set_weibonickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_weibonickname();
  weibonickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeGetItem.WeiboNickname)
}
inline void ShakeGetItem::set_weibonickname(const char* value, size_t size) {
  set_has_weibonickname();
  weibonickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeGetItem.WeiboNickname)
}
inline ::std::string* ShakeGetItem::mutable_weibonickname() {
  set_has_weibonickname();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.WeiboNickname)
  return weibonickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShakeGetItem::release_weibonickname() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.WeiboNickname)
  clear_has_weibonickname();
  return weibonickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShakeGetItem::set_allocated_weibonickname(::std::string* weibonickname) {
  if (weibonickname != NULL) {
    set_has_weibonickname();
  } else {
    clear_has_weibonickname();
  }
  weibonickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), weibonickname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.WeiboNickname)
}

// optional uint32 WeiboFlag = 14;
inline bool ShakeGetItem::has_weiboflag() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void ShakeGetItem::set_has_weiboflag() {
  _has_bits_[0] |= 0x00400000u;
}
inline void ShakeGetItem::clear_has_weiboflag() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void ShakeGetItem::clear_weiboflag() {
  weiboflag_ = 0u;
  clear_has_weiboflag();
}
inline ::google::protobuf::uint32 ShakeGetItem::weiboflag() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.WeiboFlag)
  return weiboflag_;
}
inline void ShakeGetItem::set_weiboflag(::google::protobuf::uint32 value) {
  set_has_weiboflag();
  weiboflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.WeiboFlag)
}

// optional uint32 VerifyFlag = 15;
inline bool ShakeGetItem::has_verifyflag() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void ShakeGetItem::set_has_verifyflag() {
  _has_bits_[0] |= 0x00800000u;
}
inline void ShakeGetItem::clear_has_verifyflag() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void ShakeGetItem::clear_verifyflag() {
  verifyflag_ = 0u;
  clear_has_verifyflag();
}
inline ::google::protobuf::uint32 ShakeGetItem::verifyflag() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.VerifyFlag)
  return verifyflag_;
}
inline void ShakeGetItem::set_verifyflag(::google::protobuf::uint32 value) {
  set_has_verifyflag();
  verifyflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.VerifyFlag)
}

// optional string VerifyInfo = 16;
inline bool ShakeGetItem::has_verifyinfo() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ShakeGetItem::set_has_verifyinfo() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ShakeGetItem::clear_has_verifyinfo() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ShakeGetItem::clear_verifyinfo() {
  verifyinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_verifyinfo();
}
inline const ::std::string& ShakeGetItem::verifyinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.VerifyInfo)
  return verifyinfo_.GetNoArena();
}
inline void ShakeGetItem::set_verifyinfo(const ::std::string& value) {
  set_has_verifyinfo();
  verifyinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.VerifyInfo)
}
#if LANG_CXX11
inline void ShakeGetItem::set_verifyinfo(::std::string&& value) {
  set_has_verifyinfo();
  verifyinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeGetItem.VerifyInfo)
}
#endif
inline void ShakeGetItem::set_verifyinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_verifyinfo();
  verifyinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeGetItem.VerifyInfo)
}
inline void ShakeGetItem::set_verifyinfo(const char* value, size_t size) {
  set_has_verifyinfo();
  verifyinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeGetItem.VerifyInfo)
}
inline ::std::string* ShakeGetItem::mutable_verifyinfo() {
  set_has_verifyinfo();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.VerifyInfo)
  return verifyinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShakeGetItem::release_verifyinfo() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.VerifyInfo)
  clear_has_verifyinfo();
  return verifyinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShakeGetItem::set_allocated_verifyinfo(::std::string* verifyinfo) {
  if (verifyinfo != NULL) {
    set_has_verifyinfo();
  } else {
    clear_has_verifyinfo();
  }
  verifyinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verifyinfo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.VerifyInfo)
}

// optional string VerifyContent = 17;
inline bool ShakeGetItem::has_verifycontent() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ShakeGetItem::set_has_verifycontent() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ShakeGetItem::clear_has_verifycontent() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ShakeGetItem::clear_verifycontent() {
  verifycontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_verifycontent();
}
inline const ::std::string& ShakeGetItem::verifycontent() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.VerifyContent)
  return verifycontent_.GetNoArena();
}
inline void ShakeGetItem::set_verifycontent(const ::std::string& value) {
  set_has_verifycontent();
  verifycontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.VerifyContent)
}
#if LANG_CXX11
inline void ShakeGetItem::set_verifycontent(::std::string&& value) {
  set_has_verifycontent();
  verifycontent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeGetItem.VerifyContent)
}
#endif
inline void ShakeGetItem::set_verifycontent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_verifycontent();
  verifycontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeGetItem.VerifyContent)
}
inline void ShakeGetItem::set_verifycontent(const char* value, size_t size) {
  set_has_verifycontent();
  verifycontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeGetItem.VerifyContent)
}
inline ::std::string* ShakeGetItem::mutable_verifycontent() {
  set_has_verifycontent();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.VerifyContent)
  return verifycontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShakeGetItem::release_verifycontent() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.VerifyContent)
  clear_has_verifycontent();
  return verifycontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShakeGetItem::set_allocated_verifycontent(::std::string* verifycontent) {
  if (verifycontent != NULL) {
    set_has_verifycontent();
  } else {
    clear_has_verifycontent();
  }
  verifycontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verifycontent);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.VerifyContent)
}

// optional int32 HeadImgVersion = 21;
inline bool ShakeGetItem::has_headimgversion() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void ShakeGetItem::set_has_headimgversion() {
  _has_bits_[0] |= 0x01000000u;
}
inline void ShakeGetItem::clear_has_headimgversion() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void ShakeGetItem::clear_headimgversion() {
  headimgversion_ = 0;
  clear_has_headimgversion();
}
inline ::google::protobuf::int32 ShakeGetItem::headimgversion() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.HeadImgVersion)
  return headimgversion_;
}
inline void ShakeGetItem::set_headimgversion(::google::protobuf::int32 value) {
  set_has_headimgversion();
  headimgversion_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.HeadImgVersion)
}

// optional .micromsg.SnsUserInfo SnsUserInfo = 22;
inline bool ShakeGetItem::has_snsuserinfo() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void ShakeGetItem::set_has_snsuserinfo() {
  _has_bits_[0] |= 0x00010000u;
}
inline void ShakeGetItem::clear_has_snsuserinfo() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void ShakeGetItem::clear_snsuserinfo() {
  if (snsuserinfo_ != NULL) snsuserinfo_->::micromsg::SnsUserInfo::Clear();
  clear_has_snsuserinfo();
}
inline const ::micromsg::SnsUserInfo& ShakeGetItem::snsuserinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.SnsUserInfo)
  return snsuserinfo_ != NULL ? *snsuserinfo_
                         : *::micromsg::SnsUserInfo::internal_default_instance();
}
inline ::micromsg::SnsUserInfo* ShakeGetItem::mutable_snsuserinfo() {
  set_has_snsuserinfo();
  if (snsuserinfo_ == NULL) {
    snsuserinfo_ = new ::micromsg::SnsUserInfo;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.SnsUserInfo)
  return snsuserinfo_;
}
inline ::micromsg::SnsUserInfo* ShakeGetItem::release_snsuserinfo() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.SnsUserInfo)
  clear_has_snsuserinfo();
  ::micromsg::SnsUserInfo* temp = snsuserinfo_;
  snsuserinfo_ = NULL;
  return temp;
}
inline void ShakeGetItem::set_allocated_snsuserinfo(::micromsg::SnsUserInfo* snsuserinfo) {
  delete snsuserinfo_;
  snsuserinfo_ = snsuserinfo;
  if (snsuserinfo) {
    set_has_snsuserinfo();
  } else {
    clear_has_snsuserinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.SnsUserInfo)
}

// optional string Country = 23;
inline bool ShakeGetItem::has_country() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ShakeGetItem::set_has_country() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ShakeGetItem::clear_has_country() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ShakeGetItem::clear_country() {
  country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_country();
}
inline const ::std::string& ShakeGetItem::country() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.Country)
  return country_.GetNoArena();
}
inline void ShakeGetItem::set_country(const ::std::string& value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.Country)
}
#if LANG_CXX11
inline void ShakeGetItem::set_country(::std::string&& value) {
  set_has_country();
  country_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeGetItem.Country)
}
#endif
inline void ShakeGetItem::set_country(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeGetItem.Country)
}
inline void ShakeGetItem::set_country(const char* value, size_t size) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeGetItem.Country)
}
inline ::std::string* ShakeGetItem::mutable_country() {
  set_has_country();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.Country)
  return country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShakeGetItem::release_country() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.Country)
  clear_has_country();
  return country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShakeGetItem::set_allocated_country(::std::string* country) {
  if (country != NULL) {
    set_has_country();
  } else {
    clear_has_country();
  }
  country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.Country)
}

// optional string BigHeadImgUrl = 24;
inline bool ShakeGetItem::has_bigheadimgurl() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ShakeGetItem::set_has_bigheadimgurl() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ShakeGetItem::clear_has_bigheadimgurl() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ShakeGetItem::clear_bigheadimgurl() {
  bigheadimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bigheadimgurl();
}
inline const ::std::string& ShakeGetItem::bigheadimgurl() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.BigHeadImgUrl)
  return bigheadimgurl_.GetNoArena();
}
inline void ShakeGetItem::set_bigheadimgurl(const ::std::string& value) {
  set_has_bigheadimgurl();
  bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.BigHeadImgUrl)
}
#if LANG_CXX11
inline void ShakeGetItem::set_bigheadimgurl(::std::string&& value) {
  set_has_bigheadimgurl();
  bigheadimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeGetItem.BigHeadImgUrl)
}
#endif
inline void ShakeGetItem::set_bigheadimgurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bigheadimgurl();
  bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeGetItem.BigHeadImgUrl)
}
inline void ShakeGetItem::set_bigheadimgurl(const char* value, size_t size) {
  set_has_bigheadimgurl();
  bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeGetItem.BigHeadImgUrl)
}
inline ::std::string* ShakeGetItem::mutable_bigheadimgurl() {
  set_has_bigheadimgurl();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.BigHeadImgUrl)
  return bigheadimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShakeGetItem::release_bigheadimgurl() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.BigHeadImgUrl)
  clear_has_bigheadimgurl();
  return bigheadimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShakeGetItem::set_allocated_bigheadimgurl(::std::string* bigheadimgurl) {
  if (bigheadimgurl != NULL) {
    set_has_bigheadimgurl();
  } else {
    clear_has_bigheadimgurl();
  }
  bigheadimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bigheadimgurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.BigHeadImgUrl)
}

// optional string SmallHeadImgUrl = 25;
inline bool ShakeGetItem::has_smallheadimgurl() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ShakeGetItem::set_has_smallheadimgurl() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ShakeGetItem::clear_has_smallheadimgurl() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ShakeGetItem::clear_smallheadimgurl() {
  smallheadimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_smallheadimgurl();
}
inline const ::std::string& ShakeGetItem::smallheadimgurl() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.SmallHeadImgUrl)
  return smallheadimgurl_.GetNoArena();
}
inline void ShakeGetItem::set_smallheadimgurl(const ::std::string& value) {
  set_has_smallheadimgurl();
  smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.SmallHeadImgUrl)
}
#if LANG_CXX11
inline void ShakeGetItem::set_smallheadimgurl(::std::string&& value) {
  set_has_smallheadimgurl();
  smallheadimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeGetItem.SmallHeadImgUrl)
}
#endif
inline void ShakeGetItem::set_smallheadimgurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_smallheadimgurl();
  smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeGetItem.SmallHeadImgUrl)
}
inline void ShakeGetItem::set_smallheadimgurl(const char* value, size_t size) {
  set_has_smallheadimgurl();
  smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeGetItem.SmallHeadImgUrl)
}
inline ::std::string* ShakeGetItem::mutable_smallheadimgurl() {
  set_has_smallheadimgurl();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.SmallHeadImgUrl)
  return smallheadimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShakeGetItem::release_smallheadimgurl() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.SmallHeadImgUrl)
  clear_has_smallheadimgurl();
  return smallheadimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShakeGetItem::set_allocated_smallheadimgurl(::std::string* smallheadimgurl) {
  if (smallheadimgurl != NULL) {
    set_has_smallheadimgurl();
  } else {
    clear_has_smallheadimgurl();
  }
  smallheadimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smallheadimgurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.SmallHeadImgUrl)
}

// optional string MyBrandList = 26;
inline bool ShakeGetItem::has_mybrandlist() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void ShakeGetItem::set_has_mybrandlist() {
  _has_bits_[0] |= 0x00002000u;
}
inline void ShakeGetItem::clear_has_mybrandlist() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void ShakeGetItem::clear_mybrandlist() {
  mybrandlist_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mybrandlist();
}
inline const ::std::string& ShakeGetItem::mybrandlist() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.MyBrandList)
  return mybrandlist_.GetNoArena();
}
inline void ShakeGetItem::set_mybrandlist(const ::std::string& value) {
  set_has_mybrandlist();
  mybrandlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.MyBrandList)
}
#if LANG_CXX11
inline void ShakeGetItem::set_mybrandlist(::std::string&& value) {
  set_has_mybrandlist();
  mybrandlist_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeGetItem.MyBrandList)
}
#endif
inline void ShakeGetItem::set_mybrandlist(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mybrandlist();
  mybrandlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeGetItem.MyBrandList)
}
inline void ShakeGetItem::set_mybrandlist(const char* value, size_t size) {
  set_has_mybrandlist();
  mybrandlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeGetItem.MyBrandList)
}
inline ::std::string* ShakeGetItem::mutable_mybrandlist() {
  set_has_mybrandlist();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.MyBrandList)
  return mybrandlist_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShakeGetItem::release_mybrandlist() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.MyBrandList)
  clear_has_mybrandlist();
  return mybrandlist_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShakeGetItem::set_allocated_mybrandlist(::std::string* mybrandlist) {
  if (mybrandlist != NULL) {
    set_has_mybrandlist();
  } else {
    clear_has_mybrandlist();
  }
  mybrandlist_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mybrandlist);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.MyBrandList)
}

// optional .micromsg.CustomizedInfo CustomizedInfo = 27;
inline bool ShakeGetItem::has_customizedinfo() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void ShakeGetItem::set_has_customizedinfo() {
  _has_bits_[0] |= 0x00020000u;
}
inline void ShakeGetItem::clear_has_customizedinfo() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void ShakeGetItem::clear_customizedinfo() {
  if (customizedinfo_ != NULL) customizedinfo_->::micromsg::CustomizedInfo::Clear();
  clear_has_customizedinfo();
}
inline const ::micromsg::CustomizedInfo& ShakeGetItem::customizedinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.CustomizedInfo)
  return customizedinfo_ != NULL ? *customizedinfo_
                         : *::micromsg::CustomizedInfo::internal_default_instance();
}
inline ::micromsg::CustomizedInfo* ShakeGetItem::mutable_customizedinfo() {
  set_has_customizedinfo();
  if (customizedinfo_ == NULL) {
    customizedinfo_ = new ::micromsg::CustomizedInfo;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.CustomizedInfo)
  return customizedinfo_;
}
inline ::micromsg::CustomizedInfo* ShakeGetItem::release_customizedinfo() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.CustomizedInfo)
  clear_has_customizedinfo();
  ::micromsg::CustomizedInfo* temp = customizedinfo_;
  customizedinfo_ = NULL;
  return temp;
}
inline void ShakeGetItem::set_allocated_customizedinfo(::micromsg::CustomizedInfo* customizedinfo) {
  delete customizedinfo_;
  customizedinfo_ = customizedinfo;
  if (customizedinfo) {
    set_has_customizedinfo();
  } else {
    clear_has_customizedinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.CustomizedInfo)
}

// optional string AntispamTicket = 28;
inline bool ShakeGetItem::has_antispamticket() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void ShakeGetItem::set_has_antispamticket() {
  _has_bits_[0] |= 0x00004000u;
}
inline void ShakeGetItem::clear_has_antispamticket() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void ShakeGetItem::clear_antispamticket() {
  antispamticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_antispamticket();
}
inline const ::std::string& ShakeGetItem::antispamticket() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetItem.AntispamTicket)
  return antispamticket_.GetNoArena();
}
inline void ShakeGetItem::set_antispamticket(const ::std::string& value) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetItem.AntispamTicket)
}
#if LANG_CXX11
inline void ShakeGetItem::set_antispamticket(::std::string&& value) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeGetItem.AntispamTicket)
}
#endif
inline void ShakeGetItem::set_antispamticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeGetItem.AntispamTicket)
}
inline void ShakeGetItem::set_antispamticket(const char* value, size_t size) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeGetItem.AntispamTicket)
}
inline ::std::string* ShakeGetItem::mutable_antispamticket() {
  set_has_antispamticket();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetItem.AntispamTicket)
  return antispamticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShakeGetItem::release_antispamticket() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetItem.AntispamTicket)
  clear_has_antispamticket();
  return antispamticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShakeGetItem::set_allocated_antispamticket(::std::string* antispamticket) {
  if (antispamticket != NULL) {
    set_has_antispamticket();
  } else {
    clear_has_antispamticket();
  }
  antispamticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), antispamticket);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetItem.AntispamTicket)
}

// -------------------------------------------------------------------

// ShakeGetResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool ShakeGetResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShakeGetResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShakeGetResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShakeGetResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& ShakeGetResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* ShakeGetResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* ShakeGetResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void ShakeGetResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetResponse.BaseResponse)
}

// required uint32 Count = 2;
inline bool ShakeGetResponse::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShakeGetResponse::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShakeGetResponse::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShakeGetResponse::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 ShakeGetResponse::count() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetResponse.Count)
  return count_;
}
inline void ShakeGetResponse::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetResponse.Count)
}

// repeated .micromsg.ShakeGetItem ShakeGetList = 3;
inline int ShakeGetResponse::shakegetlist_size() const {
  return shakegetlist_.size();
}
inline void ShakeGetResponse::clear_shakegetlist() {
  shakegetlist_.Clear();
}
inline const ::micromsg::ShakeGetItem& ShakeGetResponse::shakegetlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetResponse.ShakeGetList)
  return shakegetlist_.Get(index);
}
inline ::micromsg::ShakeGetItem* ShakeGetResponse::mutable_shakegetlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetResponse.ShakeGetList)
  return shakegetlist_.Mutable(index);
}
inline ::micromsg::ShakeGetItem* ShakeGetResponse::add_shakegetlist() {
  // @@protoc_insertion_point(field_add:micromsg.ShakeGetResponse.ShakeGetList)
  return shakegetlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::ShakeGetItem >*
ShakeGetResponse::mutable_shakegetlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.ShakeGetResponse.ShakeGetList)
  return &shakegetlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::ShakeGetItem >&
ShakeGetResponse::shakegetlist() const {
  // @@protoc_insertion_point(field_list:micromsg.ShakeGetResponse.ShakeGetList)
  return shakegetlist_;
}

// optional string Tips = 4;
inline bool ShakeGetResponse::has_tips() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShakeGetResponse::set_has_tips() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShakeGetResponse::clear_has_tips() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShakeGetResponse::clear_tips() {
  tips_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tips();
}
inline const ::std::string& ShakeGetResponse::tips() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetResponse.Tips)
  return tips_.GetNoArena();
}
inline void ShakeGetResponse::set_tips(const ::std::string& value) {
  set_has_tips();
  tips_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetResponse.Tips)
}
#if LANG_CXX11
inline void ShakeGetResponse::set_tips(::std::string&& value) {
  set_has_tips();
  tips_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeGetResponse.Tips)
}
#endif
inline void ShakeGetResponse::set_tips(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tips();
  tips_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeGetResponse.Tips)
}
inline void ShakeGetResponse::set_tips(const char* value, size_t size) {
  set_has_tips();
  tips_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeGetResponse.Tips)
}
inline ::std::string* ShakeGetResponse::mutable_tips() {
  set_has_tips();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeGetResponse.Tips)
  return tips_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShakeGetResponse::release_tips() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeGetResponse.Tips)
  clear_has_tips();
  return tips_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShakeGetResponse::set_allocated_tips(::std::string* tips) {
  if (tips != NULL) {
    set_has_tips();
  } else {
    clear_has_tips();
  }
  tips_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tips);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeGetResponse.Tips)
}

// required uint32 Scence = 5;
inline bool ShakeGetResponse::has_scence() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShakeGetResponse::set_has_scence() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShakeGetResponse::clear_has_scence() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShakeGetResponse::clear_scence() {
  scence_ = 0u;
  clear_has_scence();
}
inline ::google::protobuf::uint32 ShakeGetResponse::scence() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetResponse.Scence)
  return scence_;
}
inline void ShakeGetResponse::set_scence(::google::protobuf::uint32 value) {
  set_has_scence();
  scence_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetResponse.Scence)
}

// required int32 Ret = 6;
inline bool ShakeGetResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ShakeGetResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ShakeGetResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ShakeGetResponse::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 ShakeGetResponse::ret() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeGetResponse.Ret)
  return ret_;
}
inline void ShakeGetResponse::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeGetResponse.Ret)
}

// -------------------------------------------------------------------

// ShakeMatchRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool ShakeMatchRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShakeMatchRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShakeMatchRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShakeMatchRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& ShakeMatchRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMatchRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* ShakeMatchRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeMatchRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* ShakeMatchRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeMatchRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void ShakeMatchRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeMatchRequest.BaseRequest)
}

// required uint32 OpCode = 2;
inline bool ShakeMatchRequest::has_opcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShakeMatchRequest::set_has_opcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShakeMatchRequest::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShakeMatchRequest::clear_opcode() {
  opcode_ = 0u;
  clear_has_opcode();
}
inline ::google::protobuf::uint32 ShakeMatchRequest::opcode() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMatchRequest.OpCode)
  return opcode_;
}
inline void ShakeMatchRequest::set_opcode(::google::protobuf::uint32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeMatchRequest.OpCode)
}

// optional string ToUserName = 3;
inline bool ShakeMatchRequest::has_tousername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShakeMatchRequest::set_has_tousername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShakeMatchRequest::clear_has_tousername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShakeMatchRequest::clear_tousername() {
  tousername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tousername();
}
inline const ::std::string& ShakeMatchRequest::tousername() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMatchRequest.ToUserName)
  return tousername_.GetNoArena();
}
inline void ShakeMatchRequest::set_tousername(const ::std::string& value) {
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeMatchRequest.ToUserName)
}
#if LANG_CXX11
inline void ShakeMatchRequest::set_tousername(::std::string&& value) {
  set_has_tousername();
  tousername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeMatchRequest.ToUserName)
}
#endif
inline void ShakeMatchRequest::set_tousername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeMatchRequest.ToUserName)
}
inline void ShakeMatchRequest::set_tousername(const char* value, size_t size) {
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeMatchRequest.ToUserName)
}
inline ::std::string* ShakeMatchRequest::mutable_tousername() {
  set_has_tousername();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeMatchRequest.ToUserName)
  return tousername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShakeMatchRequest::release_tousername() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeMatchRequest.ToUserName)
  clear_has_tousername();
  return tousername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShakeMatchRequest::set_allocated_tousername(::std::string* tousername) {
  if (tousername != NULL) {
    set_has_tousername();
  } else {
    clear_has_tousername();
  }
  tousername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tousername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeMatchRequest.ToUserName)
}

// required uint32 Scence = 4;
inline bool ShakeMatchRequest::has_scence() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShakeMatchRequest::set_has_scence() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShakeMatchRequest::clear_has_scence() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShakeMatchRequest::clear_scence() {
  scence_ = 0u;
  clear_has_scence();
}
inline ::google::protobuf::uint32 ShakeMatchRequest::scence() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMatchRequest.Scence)
  return scence_;
}
inline void ShakeMatchRequest::set_scence(::google::protobuf::uint32 value) {
  set_has_scence();
  scence_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeMatchRequest.Scence)
}

// -------------------------------------------------------------------

// ShakeMatchResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool ShakeMatchResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShakeMatchResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShakeMatchResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShakeMatchResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& ShakeMatchResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMatchResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* ShakeMatchResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeMatchResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* ShakeMatchResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeMatchResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void ShakeMatchResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeMatchResponse.BaseResponse)
}

// optional string Tips = 2;
inline bool ShakeMatchResponse::has_tips() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShakeMatchResponse::set_has_tips() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShakeMatchResponse::clear_has_tips() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShakeMatchResponse::clear_tips() {
  tips_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tips();
}
inline const ::std::string& ShakeMatchResponse::tips() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMatchResponse.Tips)
  return tips_.GetNoArena();
}
inline void ShakeMatchResponse::set_tips(const ::std::string& value) {
  set_has_tips();
  tips_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ShakeMatchResponse.Tips)
}
#if LANG_CXX11
inline void ShakeMatchResponse::set_tips(::std::string&& value) {
  set_has_tips();
  tips_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ShakeMatchResponse.Tips)
}
#endif
inline void ShakeMatchResponse::set_tips(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tips();
  tips_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ShakeMatchResponse.Tips)
}
inline void ShakeMatchResponse::set_tips(const char* value, size_t size) {
  set_has_tips();
  tips_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ShakeMatchResponse.Tips)
}
inline ::std::string* ShakeMatchResponse::mutable_tips() {
  set_has_tips();
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeMatchResponse.Tips)
  return tips_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShakeMatchResponse::release_tips() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeMatchResponse.Tips)
  clear_has_tips();
  return tips_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShakeMatchResponse::set_allocated_tips(::std::string* tips) {
  if (tips != NULL) {
    set_has_tips();
  } else {
    clear_has_tips();
  }
  tips_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tips);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeMatchResponse.Tips)
}

// required uint32 Ret = 3;
inline bool ShakeMatchResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShakeMatchResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShakeMatchResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShakeMatchResponse::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
inline ::google::protobuf::uint32 ShakeMatchResponse::ret() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeMatchResponse.Ret)
  return ret_;
}
inline void ShakeMatchResponse::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeMatchResponse.Ret)
}

// -------------------------------------------------------------------

// ShakeImgRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool ShakeImgRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShakeImgRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShakeImgRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShakeImgRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& ShakeImgRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeImgRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* ShakeImgRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeImgRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* ShakeImgRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeImgRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void ShakeImgRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeImgRequest.BaseRequest)
}

// required uint32 ImgId = 2;
inline bool ShakeImgRequest::has_imgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShakeImgRequest::set_has_imgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShakeImgRequest::clear_has_imgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShakeImgRequest::clear_imgid() {
  imgid_ = 0u;
  clear_has_imgid();
}
inline ::google::protobuf::uint32 ShakeImgRequest::imgid() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeImgRequest.ImgId)
  return imgid_;
}
inline void ShakeImgRequest::set_imgid(::google::protobuf::uint32 value) {
  set_has_imgid();
  imgid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeImgRequest.ImgId)
}

// required uint32 StartPos = 3;
inline bool ShakeImgRequest::has_startpos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShakeImgRequest::set_has_startpos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShakeImgRequest::clear_has_startpos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShakeImgRequest::clear_startpos() {
  startpos_ = 0u;
  clear_has_startpos();
}
inline ::google::protobuf::uint32 ShakeImgRequest::startpos() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeImgRequest.StartPos)
  return startpos_;
}
inline void ShakeImgRequest::set_startpos(::google::protobuf::uint32 value) {
  set_has_startpos();
  startpos_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeImgRequest.StartPos)
}

// required uint32 TotalLen = 4;
inline bool ShakeImgRequest::has_totallen() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShakeImgRequest::set_has_totallen() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShakeImgRequest::clear_has_totallen() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShakeImgRequest::clear_totallen() {
  totallen_ = 0u;
  clear_has_totallen();
}
inline ::google::protobuf::uint32 ShakeImgRequest::totallen() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeImgRequest.TotalLen)
  return totallen_;
}
inline void ShakeImgRequest::set_totallen(::google::protobuf::uint32 value) {
  set_has_totallen();
  totallen_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeImgRequest.TotalLen)
}

// -------------------------------------------------------------------

// ShakeImgResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool ShakeImgResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShakeImgResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShakeImgResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShakeImgResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& ShakeImgResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeImgResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* ShakeImgResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeImgResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* ShakeImgResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeImgResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void ShakeImgResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeImgResponse.BaseResponse)
}

// required uint32 ImgId = 2;
inline bool ShakeImgResponse::has_imgid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShakeImgResponse::set_has_imgid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShakeImgResponse::clear_has_imgid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShakeImgResponse::clear_imgid() {
  imgid_ = 0u;
  clear_has_imgid();
}
inline ::google::protobuf::uint32 ShakeImgResponse::imgid() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeImgResponse.ImgId)
  return imgid_;
}
inline void ShakeImgResponse::set_imgid(::google::protobuf::uint32 value) {
  set_has_imgid();
  imgid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeImgResponse.ImgId)
}

// required uint32 TotalLen = 3;
inline bool ShakeImgResponse::has_totallen() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShakeImgResponse::set_has_totallen() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShakeImgResponse::clear_has_totallen() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShakeImgResponse::clear_totallen() {
  totallen_ = 0u;
  clear_has_totallen();
}
inline ::google::protobuf::uint32 ShakeImgResponse::totallen() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeImgResponse.TotalLen)
  return totallen_;
}
inline void ShakeImgResponse::set_totallen(::google::protobuf::uint32 value) {
  set_has_totallen();
  totallen_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeImgResponse.TotalLen)
}

// required uint32 StartPos = 4;
inline bool ShakeImgResponse::has_startpos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ShakeImgResponse::set_has_startpos() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ShakeImgResponse::clear_has_startpos() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ShakeImgResponse::clear_startpos() {
  startpos_ = 0u;
  clear_has_startpos();
}
inline ::google::protobuf::uint32 ShakeImgResponse::startpos() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeImgResponse.StartPos)
  return startpos_;
}
inline void ShakeImgResponse::set_startpos(::google::protobuf::uint32 value) {
  set_has_startpos();
  startpos_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ShakeImgResponse.StartPos)
}

// required .micromsg.SKBuiltinBuffer_t Buffer = 5;
inline bool ShakeImgResponse::has_buffer() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShakeImgResponse::set_has_buffer() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShakeImgResponse::clear_has_buffer() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShakeImgResponse::clear_buffer() {
  if (buffer_ != NULL) buffer_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_buffer();
}
inline const ::micromsg::SKBuiltinBuffer_t& ShakeImgResponse::buffer() const {
  // @@protoc_insertion_point(field_get:micromsg.ShakeImgResponse.Buffer)
  return buffer_ != NULL ? *buffer_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* ShakeImgResponse::mutable_buffer() {
  set_has_buffer();
  if (buffer_ == NULL) {
    buffer_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ShakeImgResponse.Buffer)
  return buffer_;
}
inline ::micromsg::SKBuiltinBuffer_t* ShakeImgResponse::release_buffer() {
  // @@protoc_insertion_point(field_release:micromsg.ShakeImgResponse.Buffer)
  clear_has_buffer();
  ::micromsg::SKBuiltinBuffer_t* temp = buffer_;
  buffer_ = NULL;
  return temp;
}
inline void ShakeImgResponse::set_allocated_buffer(::micromsg::SKBuiltinBuffer_t* buffer) {
  delete buffer_;
  buffer_ = buffer;
  if (buffer) {
    set_has_buffer();
  } else {
    clear_has_buffer();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ShakeImgResponse.Buffer)
}

// -------------------------------------------------------------------

// ScanStreetViewRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool ScanStreetViewRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScanStreetViewRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScanStreetViewRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScanStreetViewRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& ScanStreetViewRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanStreetViewRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* ScanStreetViewRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ScanStreetViewRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* ScanStreetViewRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.ScanStreetViewRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void ScanStreetViewRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ScanStreetViewRequest.BaseRequest)
}

// required .micromsg.PositionInfo UserPos = 2;
inline bool ScanStreetViewRequest::has_userpos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ScanStreetViewRequest::set_has_userpos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ScanStreetViewRequest::clear_has_userpos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ScanStreetViewRequest::clear_userpos() {
  if (userpos_ != NULL) userpos_->::micromsg::PositionInfo::Clear();
  clear_has_userpos();
}
inline const ::micromsg::PositionInfo& ScanStreetViewRequest::userpos() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanStreetViewRequest.UserPos)
  return userpos_ != NULL ? *userpos_
                         : *::micromsg::PositionInfo::internal_default_instance();
}
inline ::micromsg::PositionInfo* ScanStreetViewRequest::mutable_userpos() {
  set_has_userpos();
  if (userpos_ == NULL) {
    userpos_ = new ::micromsg::PositionInfo;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ScanStreetViewRequest.UserPos)
  return userpos_;
}
inline ::micromsg::PositionInfo* ScanStreetViewRequest::release_userpos() {
  // @@protoc_insertion_point(field_release:micromsg.ScanStreetViewRequest.UserPos)
  clear_has_userpos();
  ::micromsg::PositionInfo* temp = userpos_;
  userpos_ = NULL;
  return temp;
}
inline void ScanStreetViewRequest::set_allocated_userpos(::micromsg::PositionInfo* userpos) {
  delete userpos_;
  userpos_ = userpos;
  if (userpos) {
    set_has_userpos();
  } else {
    clear_has_userpos();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ScanStreetViewRequest.UserPos)
}

// optional uint32 Scene = 3;
inline bool ScanStreetViewRequest::has_scene() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ScanStreetViewRequest::set_has_scene() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ScanStreetViewRequest::clear_has_scene() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ScanStreetViewRequest::clear_scene() {
  scene_ = 0u;
  clear_has_scene();
}
inline ::google::protobuf::uint32 ScanStreetViewRequest::scene() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanStreetViewRequest.Scene)
  return scene_;
}
inline void ScanStreetViewRequest::set_scene(::google::protobuf::uint32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ScanStreetViewRequest.Scene)
}

// optional float Heading = 4;
inline bool ScanStreetViewRequest::has_heading() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ScanStreetViewRequest::set_has_heading() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ScanStreetViewRequest::clear_has_heading() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ScanStreetViewRequest::clear_heading() {
  heading_ = 0;
  clear_has_heading();
}
inline float ScanStreetViewRequest::heading() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanStreetViewRequest.Heading)
  return heading_;
}
inline void ScanStreetViewRequest::set_heading(float value) {
  set_has_heading();
  heading_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ScanStreetViewRequest.Heading)
}

// optional float Pitch = 5;
inline bool ScanStreetViewRequest::has_pitch() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ScanStreetViewRequest::set_has_pitch() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ScanStreetViewRequest::clear_has_pitch() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ScanStreetViewRequest::clear_pitch() {
  pitch_ = 0;
  clear_has_pitch();
}
inline float ScanStreetViewRequest::pitch() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanStreetViewRequest.Pitch)
  return pitch_;
}
inline void ScanStreetViewRequest::set_pitch(float value) {
  set_has_pitch();
  pitch_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ScanStreetViewRequest.Pitch)
}

// -------------------------------------------------------------------

// ScanStreetViewResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool ScanStreetViewResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ScanStreetViewResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ScanStreetViewResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ScanStreetViewResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& ScanStreetViewResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanStreetViewResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* ScanStreetViewResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.ScanStreetViewResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* ScanStreetViewResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.ScanStreetViewResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void ScanStreetViewResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.ScanStreetViewResponse.BaseResponse)
}

// required uint32 Type = 2;
inline bool ScanStreetViewResponse::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ScanStreetViewResponse::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ScanStreetViewResponse::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ScanStreetViewResponse::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 ScanStreetViewResponse::type() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanStreetViewResponse.Type)
  return type_;
}
inline void ScanStreetViewResponse::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ScanStreetViewResponse.Type)
}

// optional string DescriptionXML = 3;
inline bool ScanStreetViewResponse::has_descriptionxml() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScanStreetViewResponse::set_has_descriptionxml() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScanStreetViewResponse::clear_has_descriptionxml() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScanStreetViewResponse::clear_descriptionxml() {
  descriptionxml_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_descriptionxml();
}
inline const ::std::string& ScanStreetViewResponse::descriptionxml() const {
  // @@protoc_insertion_point(field_get:micromsg.ScanStreetViewResponse.DescriptionXML)
  return descriptionxml_.GetNoArena();
}
inline void ScanStreetViewResponse::set_descriptionxml(const ::std::string& value) {
  set_has_descriptionxml();
  descriptionxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ScanStreetViewResponse.DescriptionXML)
}
#if LANG_CXX11
inline void ScanStreetViewResponse::set_descriptionxml(::std::string&& value) {
  set_has_descriptionxml();
  descriptionxml_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ScanStreetViewResponse.DescriptionXML)
}
#endif
inline void ScanStreetViewResponse::set_descriptionxml(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_descriptionxml();
  descriptionxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ScanStreetViewResponse.DescriptionXML)
}
inline void ScanStreetViewResponse::set_descriptionxml(const char* value, size_t size) {
  set_has_descriptionxml();
  descriptionxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ScanStreetViewResponse.DescriptionXML)
}
inline ::std::string* ScanStreetViewResponse::mutable_descriptionxml() {
  set_has_descriptionxml();
  // @@protoc_insertion_point(field_mutable:micromsg.ScanStreetViewResponse.DescriptionXML)
  return descriptionxml_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScanStreetViewResponse::release_descriptionxml() {
  // @@protoc_insertion_point(field_release:micromsg.ScanStreetViewResponse.DescriptionXML)
  clear_has_descriptionxml();
  return descriptionxml_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScanStreetViewResponse::set_allocated_descriptionxml(::std::string* descriptionxml) {
  if (descriptionxml != NULL) {
    set_has_descriptionxml();
  } else {
    clear_has_descriptionxml();
  }
  descriptionxml_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), descriptionxml);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ScanStreetViewResponse.DescriptionXML)
}

// -------------------------------------------------------------------

// LbsRoomRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool LbsRoomRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LbsRoomRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LbsRoomRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LbsRoomRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& LbsRoomRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* LbsRoomRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRoomRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* LbsRoomRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRoomRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void LbsRoomRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRoomRequest.BaseRequest)
}

// required uint32 OpCode = 2;
inline bool LbsRoomRequest::has_opcode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LbsRoomRequest::set_has_opcode() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LbsRoomRequest::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LbsRoomRequest::clear_opcode() {
  opcode_ = 0u;
  clear_has_opcode();
}
inline ::google::protobuf::uint32 LbsRoomRequest::opcode() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomRequest.OpCode)
  return opcode_;
}
inline void LbsRoomRequest::set_opcode(::google::protobuf::uint32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomRequest.OpCode)
}

// required float Longitude = 3;
inline bool LbsRoomRequest::has_longitude() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LbsRoomRequest::set_has_longitude() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LbsRoomRequest::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LbsRoomRequest::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline float LbsRoomRequest::longitude() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomRequest.Longitude)
  return longitude_;
}
inline void LbsRoomRequest::set_longitude(float value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomRequest.Longitude)
}

// required float Latitude = 4;
inline bool LbsRoomRequest::has_latitude() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LbsRoomRequest::set_has_latitude() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LbsRoomRequest::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LbsRoomRequest::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline float LbsRoomRequest::latitude() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomRequest.Latitude)
  return latitude_;
}
inline void LbsRoomRequest::set_latitude(float value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomRequest.Latitude)
}

// required int32 Precision = 5;
inline bool LbsRoomRequest::has_precision() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LbsRoomRequest::set_has_precision() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LbsRoomRequest::clear_has_precision() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LbsRoomRequest::clear_precision() {
  precision_ = 0;
  clear_has_precision();
}
inline ::google::protobuf::int32 LbsRoomRequest::precision() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomRequest.Precision)
  return precision_;
}
inline void LbsRoomRequest::set_precision(::google::protobuf::int32 value) {
  set_has_precision();
  precision_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomRequest.Precision)
}

// optional string MacAddr = 6;
inline bool LbsRoomRequest::has_macaddr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LbsRoomRequest::set_has_macaddr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LbsRoomRequest::clear_has_macaddr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LbsRoomRequest::clear_macaddr() {
  macaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_macaddr();
}
inline const ::std::string& LbsRoomRequest::macaddr() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomRequest.MacAddr)
  return macaddr_.GetNoArena();
}
inline void LbsRoomRequest::set_macaddr(const ::std::string& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomRequest.MacAddr)
}
#if LANG_CXX11
inline void LbsRoomRequest::set_macaddr(::std::string&& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsRoomRequest.MacAddr)
}
#endif
inline void LbsRoomRequest::set_macaddr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsRoomRequest.MacAddr)
}
inline void LbsRoomRequest::set_macaddr(const char* value, size_t size) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsRoomRequest.MacAddr)
}
inline ::std::string* LbsRoomRequest::mutable_macaddr() {
  set_has_macaddr();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRoomRequest.MacAddr)
  return macaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsRoomRequest::release_macaddr() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRoomRequest.MacAddr)
  clear_has_macaddr();
  return macaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsRoomRequest::set_allocated_macaddr(::std::string* macaddr) {
  if (macaddr != NULL) {
    set_has_macaddr();
  } else {
    clear_has_macaddr();
  }
  macaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), macaddr);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRoomRequest.MacAddr)
}

// optional string CellId = 7;
inline bool LbsRoomRequest::has_cellid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LbsRoomRequest::set_has_cellid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LbsRoomRequest::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LbsRoomRequest::clear_cellid() {
  cellid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cellid();
}
inline const ::std::string& LbsRoomRequest::cellid() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomRequest.CellId)
  return cellid_.GetNoArena();
}
inline void LbsRoomRequest::set_cellid(const ::std::string& value) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomRequest.CellId)
}
#if LANG_CXX11
inline void LbsRoomRequest::set_cellid(::std::string&& value) {
  set_has_cellid();
  cellid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsRoomRequest.CellId)
}
#endif
inline void LbsRoomRequest::set_cellid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsRoomRequest.CellId)
}
inline void LbsRoomRequest::set_cellid(const char* value, size_t size) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsRoomRequest.CellId)
}
inline ::std::string* LbsRoomRequest::mutable_cellid() {
  set_has_cellid();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRoomRequest.CellId)
  return cellid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsRoomRequest::release_cellid() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRoomRequest.CellId)
  clear_has_cellid();
  return cellid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsRoomRequest::set_allocated_cellid(::std::string* cellid) {
  if (cellid != NULL) {
    set_has_cellid();
  } else {
    clear_has_cellid();
  }
  cellid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cellid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRoomRequest.CellId)
}

// optional int32 GPSSource = 8;
inline bool LbsRoomRequest::has_gpssource() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LbsRoomRequest::set_has_gpssource() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LbsRoomRequest::clear_has_gpssource() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LbsRoomRequest::clear_gpssource() {
  gpssource_ = 0;
  clear_has_gpssource();
}
inline ::google::protobuf::int32 LbsRoomRequest::gpssource() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomRequest.GPSSource)
  return gpssource_;
}
inline void LbsRoomRequest::set_gpssource(::google::protobuf::int32 value) {
  set_has_gpssource();
  gpssource_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomRequest.GPSSource)
}

// optional string RoomName = 9;
inline bool LbsRoomRequest::has_roomname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LbsRoomRequest::set_has_roomname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LbsRoomRequest::clear_has_roomname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LbsRoomRequest::clear_roomname() {
  roomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_roomname();
}
inline const ::std::string& LbsRoomRequest::roomname() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomRequest.RoomName)
  return roomname_.GetNoArena();
}
inline void LbsRoomRequest::set_roomname(const ::std::string& value) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomRequest.RoomName)
}
#if LANG_CXX11
inline void LbsRoomRequest::set_roomname(::std::string&& value) {
  set_has_roomname();
  roomname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsRoomRequest.RoomName)
}
#endif
inline void LbsRoomRequest::set_roomname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsRoomRequest.RoomName)
}
inline void LbsRoomRequest::set_roomname(const char* value, size_t size) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsRoomRequest.RoomName)
}
inline ::std::string* LbsRoomRequest::mutable_roomname() {
  set_has_roomname();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRoomRequest.RoomName)
  return roomname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsRoomRequest::release_roomname() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRoomRequest.RoomName)
  clear_has_roomname();
  return roomname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsRoomRequest::set_allocated_roomname(::std::string* roomname) {
  if (roomname != NULL) {
    set_has_roomname();
  } else {
    clear_has_roomname();
  }
  roomname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRoomRequest.RoomName)
}

// optional int32 ExitScene = 10;
inline bool LbsRoomRequest::has_exitscene() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void LbsRoomRequest::set_has_exitscene() {
  _has_bits_[0] |= 0x00000200u;
}
inline void LbsRoomRequest::clear_has_exitscene() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void LbsRoomRequest::clear_exitscene() {
  exitscene_ = 0;
  clear_has_exitscene();
}
inline ::google::protobuf::int32 LbsRoomRequest::exitscene() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomRequest.ExitScene)
  return exitscene_;
}
inline void LbsRoomRequest::set_exitscene(::google::protobuf::int32 value) {
  set_has_exitscene();
  exitscene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomRequest.ExitScene)
}

// optional int32 StayTime = 11;
inline bool LbsRoomRequest::has_staytime() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void LbsRoomRequest::set_has_staytime() {
  _has_bits_[0] |= 0x00000400u;
}
inline void LbsRoomRequest::clear_has_staytime() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void LbsRoomRequest::clear_staytime() {
  staytime_ = 0;
  clear_has_staytime();
}
inline ::google::protobuf::int32 LbsRoomRequest::staytime() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomRequest.StayTime)
  return staytime_;
}
inline void LbsRoomRequest::set_staytime(::google::protobuf::int32 value) {
  set_has_staytime();
  staytime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomRequest.StayTime)
}

// -------------------------------------------------------------------

// LbsRoomResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool LbsRoomResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LbsRoomResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LbsRoomResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LbsRoomResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& LbsRoomResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* LbsRoomResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRoomResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* LbsRoomResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRoomResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void LbsRoomResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRoomResponse.BaseResponse)
}

// optional string RoomName = 2;
inline bool LbsRoomResponse::has_roomname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LbsRoomResponse::set_has_roomname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LbsRoomResponse::clear_has_roomname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LbsRoomResponse::clear_roomname() {
  roomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_roomname();
}
inline const ::std::string& LbsRoomResponse::roomname() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomResponse.RoomName)
  return roomname_.GetNoArena();
}
inline void LbsRoomResponse::set_roomname(const ::std::string& value) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomResponse.RoomName)
}
#if LANG_CXX11
inline void LbsRoomResponse::set_roomname(::std::string&& value) {
  set_has_roomname();
  roomname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsRoomResponse.RoomName)
}
#endif
inline void LbsRoomResponse::set_roomname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsRoomResponse.RoomName)
}
inline void LbsRoomResponse::set_roomname(const char* value, size_t size) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsRoomResponse.RoomName)
}
inline ::std::string* LbsRoomResponse::mutable_roomname() {
  set_has_roomname();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRoomResponse.RoomName)
  return roomname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsRoomResponse::release_roomname() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRoomResponse.RoomName)
  clear_has_roomname();
  return roomname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsRoomResponse::set_allocated_roomname(::std::string* roomname) {
  if (roomname != NULL) {
    set_has_roomname();
  } else {
    clear_has_roomname();
  }
  roomname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRoomResponse.RoomName)
}

// optional string RoomNickName = 3;
inline bool LbsRoomResponse::has_roomnickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LbsRoomResponse::set_has_roomnickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LbsRoomResponse::clear_has_roomnickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LbsRoomResponse::clear_roomnickname() {
  roomnickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_roomnickname();
}
inline const ::std::string& LbsRoomResponse::roomnickname() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomResponse.RoomNickName)
  return roomnickname_.GetNoArena();
}
inline void LbsRoomResponse::set_roomnickname(const ::std::string& value) {
  set_has_roomnickname();
  roomnickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomResponse.RoomNickName)
}
#if LANG_CXX11
inline void LbsRoomResponse::set_roomnickname(::std::string&& value) {
  set_has_roomnickname();
  roomnickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsRoomResponse.RoomNickName)
}
#endif
inline void LbsRoomResponse::set_roomnickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_roomnickname();
  roomnickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsRoomResponse.RoomNickName)
}
inline void LbsRoomResponse::set_roomnickname(const char* value, size_t size) {
  set_has_roomnickname();
  roomnickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsRoomResponse.RoomNickName)
}
inline ::std::string* LbsRoomResponse::mutable_roomnickname() {
  set_has_roomnickname();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRoomResponse.RoomNickName)
  return roomnickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsRoomResponse::release_roomnickname() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRoomResponse.RoomNickName)
  clear_has_roomnickname();
  return roomnickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsRoomResponse::set_allocated_roomnickname(::std::string* roomnickname) {
  if (roomnickname != NULL) {
    set_has_roomnickname();
  } else {
    clear_has_roomnickname();
  }
  roomnickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomnickname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRoomResponse.RoomNickName)
}

// -------------------------------------------------------------------

// LbsRoomMemberRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool LbsRoomMemberRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LbsRoomMemberRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LbsRoomMemberRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LbsRoomMemberRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& LbsRoomMemberRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomMemberRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* LbsRoomMemberRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRoomMemberRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* LbsRoomMemberRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRoomMemberRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void LbsRoomMemberRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRoomMemberRequest.BaseRequest)
}

// optional string RoomName = 2;
inline bool LbsRoomMemberRequest::has_roomname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LbsRoomMemberRequest::set_has_roomname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LbsRoomMemberRequest::clear_has_roomname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LbsRoomMemberRequest::clear_roomname() {
  roomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_roomname();
}
inline const ::std::string& LbsRoomMemberRequest::roomname() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomMemberRequest.RoomName)
  return roomname_.GetNoArena();
}
inline void LbsRoomMemberRequest::set_roomname(const ::std::string& value) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomMemberRequest.RoomName)
}
#if LANG_CXX11
inline void LbsRoomMemberRequest::set_roomname(::std::string&& value) {
  set_has_roomname();
  roomname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsRoomMemberRequest.RoomName)
}
#endif
inline void LbsRoomMemberRequest::set_roomname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsRoomMemberRequest.RoomName)
}
inline void LbsRoomMemberRequest::set_roomname(const char* value, size_t size) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsRoomMemberRequest.RoomName)
}
inline ::std::string* LbsRoomMemberRequest::mutable_roomname() {
  set_has_roomname();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRoomMemberRequest.RoomName)
  return roomname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsRoomMemberRequest::release_roomname() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRoomMemberRequest.RoomName)
  clear_has_roomname();
  return roomname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsRoomMemberRequest::set_allocated_roomname(::std::string* roomname) {
  if (roomname != NULL) {
    set_has_roomname();
  } else {
    clear_has_roomname();
  }
  roomname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRoomMemberRequest.RoomName)
}

// -------------------------------------------------------------------

// LbsRoomMember

// optional string UserName = 1;
inline bool LbsRoomMember::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LbsRoomMember::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LbsRoomMember::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LbsRoomMember::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& LbsRoomMember::username() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomMember.UserName)
  return username_.GetNoArena();
}
inline void LbsRoomMember::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomMember.UserName)
}
#if LANG_CXX11
inline void LbsRoomMember::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsRoomMember.UserName)
}
#endif
inline void LbsRoomMember::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsRoomMember.UserName)
}
inline void LbsRoomMember::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsRoomMember.UserName)
}
inline ::std::string* LbsRoomMember::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRoomMember.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsRoomMember::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRoomMember.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsRoomMember::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRoomMember.UserName)
}

// optional string NickName = 2;
inline bool LbsRoomMember::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LbsRoomMember::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LbsRoomMember::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LbsRoomMember::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& LbsRoomMember::nickname() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomMember.NickName)
  return nickname_.GetNoArena();
}
inline void LbsRoomMember::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomMember.NickName)
}
#if LANG_CXX11
inline void LbsRoomMember::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsRoomMember.NickName)
}
#endif
inline void LbsRoomMember::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsRoomMember.NickName)
}
inline void LbsRoomMember::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsRoomMember.NickName)
}
inline ::std::string* LbsRoomMember::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRoomMember.NickName)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsRoomMember::release_nickname() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRoomMember.NickName)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsRoomMember::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRoomMember.NickName)
}

// optional string BigHeadImgUrl = 3;
inline bool LbsRoomMember::has_bigheadimgurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LbsRoomMember::set_has_bigheadimgurl() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LbsRoomMember::clear_has_bigheadimgurl() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LbsRoomMember::clear_bigheadimgurl() {
  bigheadimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bigheadimgurl();
}
inline const ::std::string& LbsRoomMember::bigheadimgurl() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomMember.BigHeadImgUrl)
  return bigheadimgurl_.GetNoArena();
}
inline void LbsRoomMember::set_bigheadimgurl(const ::std::string& value) {
  set_has_bigheadimgurl();
  bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomMember.BigHeadImgUrl)
}
#if LANG_CXX11
inline void LbsRoomMember::set_bigheadimgurl(::std::string&& value) {
  set_has_bigheadimgurl();
  bigheadimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsRoomMember.BigHeadImgUrl)
}
#endif
inline void LbsRoomMember::set_bigheadimgurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bigheadimgurl();
  bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsRoomMember.BigHeadImgUrl)
}
inline void LbsRoomMember::set_bigheadimgurl(const char* value, size_t size) {
  set_has_bigheadimgurl();
  bigheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsRoomMember.BigHeadImgUrl)
}
inline ::std::string* LbsRoomMember::mutable_bigheadimgurl() {
  set_has_bigheadimgurl();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRoomMember.BigHeadImgUrl)
  return bigheadimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsRoomMember::release_bigheadimgurl() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRoomMember.BigHeadImgUrl)
  clear_has_bigheadimgurl();
  return bigheadimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsRoomMember::set_allocated_bigheadimgurl(::std::string* bigheadimgurl) {
  if (bigheadimgurl != NULL) {
    set_has_bigheadimgurl();
  } else {
    clear_has_bigheadimgurl();
  }
  bigheadimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bigheadimgurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRoomMember.BigHeadImgUrl)
}

// optional string SmallHeadImgUrl = 4;
inline bool LbsRoomMember::has_smallheadimgurl() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LbsRoomMember::set_has_smallheadimgurl() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LbsRoomMember::clear_has_smallheadimgurl() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LbsRoomMember::clear_smallheadimgurl() {
  smallheadimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_smallheadimgurl();
}
inline const ::std::string& LbsRoomMember::smallheadimgurl() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomMember.SmallHeadImgUrl)
  return smallheadimgurl_.GetNoArena();
}
inline void LbsRoomMember::set_smallheadimgurl(const ::std::string& value) {
  set_has_smallheadimgurl();
  smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomMember.SmallHeadImgUrl)
}
#if LANG_CXX11
inline void LbsRoomMember::set_smallheadimgurl(::std::string&& value) {
  set_has_smallheadimgurl();
  smallheadimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsRoomMember.SmallHeadImgUrl)
}
#endif
inline void LbsRoomMember::set_smallheadimgurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_smallheadimgurl();
  smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsRoomMember.SmallHeadImgUrl)
}
inline void LbsRoomMember::set_smallheadimgurl(const char* value, size_t size) {
  set_has_smallheadimgurl();
  smallheadimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsRoomMember.SmallHeadImgUrl)
}
inline ::std::string* LbsRoomMember::mutable_smallheadimgurl() {
  set_has_smallheadimgurl();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRoomMember.SmallHeadImgUrl)
  return smallheadimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsRoomMember::release_smallheadimgurl() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRoomMember.SmallHeadImgUrl)
  clear_has_smallheadimgurl();
  return smallheadimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsRoomMember::set_allocated_smallheadimgurl(::std::string* smallheadimgurl) {
  if (smallheadimgurl != NULL) {
    set_has_smallheadimgurl();
  } else {
    clear_has_smallheadimgurl();
  }
  smallheadimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smallheadimgurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRoomMember.SmallHeadImgUrl)
}

// optional string AntispamTicket = 5;
inline bool LbsRoomMember::has_antispamticket() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LbsRoomMember::set_has_antispamticket() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LbsRoomMember::clear_has_antispamticket() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LbsRoomMember::clear_antispamticket() {
  antispamticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_antispamticket();
}
inline const ::std::string& LbsRoomMember::antispamticket() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomMember.AntispamTicket)
  return antispamticket_.GetNoArena();
}
inline void LbsRoomMember::set_antispamticket(const ::std::string& value) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomMember.AntispamTicket)
}
#if LANG_CXX11
inline void LbsRoomMember::set_antispamticket(::std::string&& value) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LbsRoomMember.AntispamTicket)
}
#endif
inline void LbsRoomMember::set_antispamticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LbsRoomMember.AntispamTicket)
}
inline void LbsRoomMember::set_antispamticket(const char* value, size_t size) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LbsRoomMember.AntispamTicket)
}
inline ::std::string* LbsRoomMember::mutable_antispamticket() {
  set_has_antispamticket();
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRoomMember.AntispamTicket)
  return antispamticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LbsRoomMember::release_antispamticket() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRoomMember.AntispamTicket)
  clear_has_antispamticket();
  return antispamticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LbsRoomMember::set_allocated_antispamticket(::std::string* antispamticket) {
  if (antispamticket != NULL) {
    set_has_antispamticket();
  } else {
    clear_has_antispamticket();
  }
  antispamticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), antispamticket);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRoomMember.AntispamTicket)
}

// -------------------------------------------------------------------

// LbsRoomMemberResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool LbsRoomMemberResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LbsRoomMemberResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LbsRoomMemberResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LbsRoomMemberResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& LbsRoomMemberResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomMemberResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* LbsRoomMemberResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRoomMemberResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* LbsRoomMemberResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.LbsRoomMemberResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void LbsRoomMemberResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.LbsRoomMemberResponse.BaseResponse)
}

// required uint32 MemberCount = 2;
inline bool LbsRoomMemberResponse::has_membercount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LbsRoomMemberResponse::set_has_membercount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LbsRoomMemberResponse::clear_has_membercount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LbsRoomMemberResponse::clear_membercount() {
  membercount_ = 0u;
  clear_has_membercount();
}
inline ::google::protobuf::uint32 LbsRoomMemberResponse::membercount() const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomMemberResponse.MemberCount)
  return membercount_;
}
inline void LbsRoomMemberResponse::set_membercount(::google::protobuf::uint32 value) {
  set_has_membercount();
  membercount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LbsRoomMemberResponse.MemberCount)
}

// repeated .micromsg.LbsRoomMember MemberList = 3;
inline int LbsRoomMemberResponse::memberlist_size() const {
  return memberlist_.size();
}
inline void LbsRoomMemberResponse::clear_memberlist() {
  memberlist_.Clear();
}
inline const ::micromsg::LbsRoomMember& LbsRoomMemberResponse::memberlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.LbsRoomMemberResponse.MemberList)
  return memberlist_.Get(index);
}
inline ::micromsg::LbsRoomMember* LbsRoomMemberResponse::mutable_memberlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.LbsRoomMemberResponse.MemberList)
  return memberlist_.Mutable(index);
}
inline ::micromsg::LbsRoomMember* LbsRoomMemberResponse::add_memberlist() {
  // @@protoc_insertion_point(field_add:micromsg.LbsRoomMemberResponse.MemberList)
  return memberlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::LbsRoomMember >*
LbsRoomMemberResponse::mutable_memberlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.LbsRoomMemberResponse.MemberList)
  return &memberlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::LbsRoomMember >&
LbsRoomMemberResponse::memberlist() const {
  // @@protoc_insertion_point(field_list:micromsg.LbsRoomMemberResponse.MemberList)
  return memberlist_;
}

// -------------------------------------------------------------------

// RadarSearchRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool RadarSearchRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RadarSearchRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RadarSearchRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RadarSearchRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& RadarSearchRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* RadarSearchRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RadarSearchRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* RadarSearchRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.RadarSearchRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void RadarSearchRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarSearchRequest.BaseRequest)
}

// required uint32 OpCode = 2;
inline bool RadarSearchRequest::has_opcode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RadarSearchRequest::set_has_opcode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RadarSearchRequest::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RadarSearchRequest::clear_opcode() {
  opcode_ = 0u;
  clear_has_opcode();
}
inline ::google::protobuf::uint32 RadarSearchRequest::opcode() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchRequest.OpCode)
  return opcode_;
}
inline void RadarSearchRequest::set_opcode(::google::protobuf::uint32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RadarSearchRequest.OpCode)
}

// required float Longitude = 3;
inline bool RadarSearchRequest::has_longitude() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RadarSearchRequest::set_has_longitude() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RadarSearchRequest::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RadarSearchRequest::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline float RadarSearchRequest::longitude() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchRequest.Longitude)
  return longitude_;
}
inline void RadarSearchRequest::set_longitude(float value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RadarSearchRequest.Longitude)
}

// required float Latitude = 4;
inline bool RadarSearchRequest::has_latitude() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RadarSearchRequest::set_has_latitude() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RadarSearchRequest::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RadarSearchRequest::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline float RadarSearchRequest::latitude() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchRequest.Latitude)
  return latitude_;
}
inline void RadarSearchRequest::set_latitude(float value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RadarSearchRequest.Latitude)
}

// required int32 Precision = 5;
inline bool RadarSearchRequest::has_precision() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RadarSearchRequest::set_has_precision() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RadarSearchRequest::clear_has_precision() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RadarSearchRequest::clear_precision() {
  precision_ = 0;
  clear_has_precision();
}
inline ::google::protobuf::int32 RadarSearchRequest::precision() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchRequest.Precision)
  return precision_;
}
inline void RadarSearchRequest::set_precision(::google::protobuf::int32 value) {
  set_has_precision();
  precision_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RadarSearchRequest.Precision)
}

// optional string MacAddr = 6;
inline bool RadarSearchRequest::has_macaddr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RadarSearchRequest::set_has_macaddr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RadarSearchRequest::clear_has_macaddr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RadarSearchRequest::clear_macaddr() {
  macaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_macaddr();
}
inline const ::std::string& RadarSearchRequest::macaddr() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchRequest.MacAddr)
  return macaddr_.GetNoArena();
}
inline void RadarSearchRequest::set_macaddr(const ::std::string& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RadarSearchRequest.MacAddr)
}
#if LANG_CXX11
inline void RadarSearchRequest::set_macaddr(::std::string&& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RadarSearchRequest.MacAddr)
}
#endif
inline void RadarSearchRequest::set_macaddr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RadarSearchRequest.MacAddr)
}
inline void RadarSearchRequest::set_macaddr(const char* value, size_t size) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RadarSearchRequest.MacAddr)
}
inline ::std::string* RadarSearchRequest::mutable_macaddr() {
  set_has_macaddr();
  // @@protoc_insertion_point(field_mutable:micromsg.RadarSearchRequest.MacAddr)
  return macaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RadarSearchRequest::release_macaddr() {
  // @@protoc_insertion_point(field_release:micromsg.RadarSearchRequest.MacAddr)
  clear_has_macaddr();
  return macaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RadarSearchRequest::set_allocated_macaddr(::std::string* macaddr) {
  if (macaddr != NULL) {
    set_has_macaddr();
  } else {
    clear_has_macaddr();
  }
  macaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), macaddr);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarSearchRequest.MacAddr)
}

// optional string CellId = 7;
inline bool RadarSearchRequest::has_cellid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RadarSearchRequest::set_has_cellid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RadarSearchRequest::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RadarSearchRequest::clear_cellid() {
  cellid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cellid();
}
inline const ::std::string& RadarSearchRequest::cellid() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchRequest.CellId)
  return cellid_.GetNoArena();
}
inline void RadarSearchRequest::set_cellid(const ::std::string& value) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RadarSearchRequest.CellId)
}
#if LANG_CXX11
inline void RadarSearchRequest::set_cellid(::std::string&& value) {
  set_has_cellid();
  cellid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RadarSearchRequest.CellId)
}
#endif
inline void RadarSearchRequest::set_cellid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RadarSearchRequest.CellId)
}
inline void RadarSearchRequest::set_cellid(const char* value, size_t size) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RadarSearchRequest.CellId)
}
inline ::std::string* RadarSearchRequest::mutable_cellid() {
  set_has_cellid();
  // @@protoc_insertion_point(field_mutable:micromsg.RadarSearchRequest.CellId)
  return cellid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RadarSearchRequest::release_cellid() {
  // @@protoc_insertion_point(field_release:micromsg.RadarSearchRequest.CellId)
  clear_has_cellid();
  return cellid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RadarSearchRequest::set_allocated_cellid(::std::string* cellid) {
  if (cellid != NULL) {
    set_has_cellid();
  } else {
    clear_has_cellid();
  }
  cellid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cellid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarSearchRequest.CellId)
}

// optional int32 GPSSource = 8;
inline bool RadarSearchRequest::has_gpssource() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RadarSearchRequest::set_has_gpssource() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RadarSearchRequest::clear_has_gpssource() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RadarSearchRequest::clear_gpssource() {
  gpssource_ = 0;
  clear_has_gpssource();
}
inline ::google::protobuf::int32 RadarSearchRequest::gpssource() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchRequest.GPSSource)
  return gpssource_;
}
inline void RadarSearchRequest::set_gpssource(::google::protobuf::int32 value) {
  set_has_gpssource();
  gpssource_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RadarSearchRequest.GPSSource)
}

// -------------------------------------------------------------------

// RadarSearchMember

// optional string UserName = 1;
inline bool RadarSearchMember::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RadarSearchMember::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RadarSearchMember::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RadarSearchMember::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& RadarSearchMember::username() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchMember.UserName)
  return username_.GetNoArena();
}
inline void RadarSearchMember::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RadarSearchMember.UserName)
}
#if LANG_CXX11
inline void RadarSearchMember::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RadarSearchMember.UserName)
}
#endif
inline void RadarSearchMember::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RadarSearchMember.UserName)
}
inline void RadarSearchMember::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RadarSearchMember.UserName)
}
inline ::std::string* RadarSearchMember::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.RadarSearchMember.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RadarSearchMember::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.RadarSearchMember.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RadarSearchMember::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarSearchMember.UserName)
}

// required uint32 Distance = 2;
inline bool RadarSearchMember::has_distance() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RadarSearchMember::set_has_distance() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RadarSearchMember::clear_has_distance() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RadarSearchMember::clear_distance() {
  distance_ = 0u;
  clear_has_distance();
}
inline ::google::protobuf::uint32 RadarSearchMember::distance() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchMember.Distance)
  return distance_;
}
inline void RadarSearchMember::set_distance(::google::protobuf::uint32 value) {
  set_has_distance();
  distance_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RadarSearchMember.Distance)
}

// optional string NickName = 3;
inline bool RadarSearchMember::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RadarSearchMember::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RadarSearchMember::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RadarSearchMember::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& RadarSearchMember::nickname() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchMember.NickName)
  return nickname_.GetNoArena();
}
inline void RadarSearchMember::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RadarSearchMember.NickName)
}
#if LANG_CXX11
inline void RadarSearchMember::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RadarSearchMember.NickName)
}
#endif
inline void RadarSearchMember::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RadarSearchMember.NickName)
}
inline void RadarSearchMember::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RadarSearchMember.NickName)
}
inline ::std::string* RadarSearchMember::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:micromsg.RadarSearchMember.NickName)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RadarSearchMember::release_nickname() {
  // @@protoc_insertion_point(field_release:micromsg.RadarSearchMember.NickName)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RadarSearchMember::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarSearchMember.NickName)
}

// optional string SmallImgUrl = 4;
inline bool RadarSearchMember::has_smallimgurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RadarSearchMember::set_has_smallimgurl() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RadarSearchMember::clear_has_smallimgurl() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RadarSearchMember::clear_smallimgurl() {
  smallimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_smallimgurl();
}
inline const ::std::string& RadarSearchMember::smallimgurl() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchMember.SmallImgUrl)
  return smallimgurl_.GetNoArena();
}
inline void RadarSearchMember::set_smallimgurl(const ::std::string& value) {
  set_has_smallimgurl();
  smallimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RadarSearchMember.SmallImgUrl)
}
#if LANG_CXX11
inline void RadarSearchMember::set_smallimgurl(::std::string&& value) {
  set_has_smallimgurl();
  smallimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RadarSearchMember.SmallImgUrl)
}
#endif
inline void RadarSearchMember::set_smallimgurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_smallimgurl();
  smallimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RadarSearchMember.SmallImgUrl)
}
inline void RadarSearchMember::set_smallimgurl(const char* value, size_t size) {
  set_has_smallimgurl();
  smallimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RadarSearchMember.SmallImgUrl)
}
inline ::std::string* RadarSearchMember::mutable_smallimgurl() {
  set_has_smallimgurl();
  // @@protoc_insertion_point(field_mutable:micromsg.RadarSearchMember.SmallImgUrl)
  return smallimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RadarSearchMember::release_smallimgurl() {
  // @@protoc_insertion_point(field_release:micromsg.RadarSearchMember.SmallImgUrl)
  clear_has_smallimgurl();
  return smallimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RadarSearchMember::set_allocated_smallimgurl(::std::string* smallimgurl) {
  if (smallimgurl != NULL) {
    set_has_smallimgurl();
  } else {
    clear_has_smallimgurl();
  }
  smallimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smallimgurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarSearchMember.SmallImgUrl)
}

// optional string EncodeUserName = 5;
inline bool RadarSearchMember::has_encodeusername() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RadarSearchMember::set_has_encodeusername() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RadarSearchMember::clear_has_encodeusername() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RadarSearchMember::clear_encodeusername() {
  encodeusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_encodeusername();
}
inline const ::std::string& RadarSearchMember::encodeusername() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchMember.EncodeUserName)
  return encodeusername_.GetNoArena();
}
inline void RadarSearchMember::set_encodeusername(const ::std::string& value) {
  set_has_encodeusername();
  encodeusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RadarSearchMember.EncodeUserName)
}
#if LANG_CXX11
inline void RadarSearchMember::set_encodeusername(::std::string&& value) {
  set_has_encodeusername();
  encodeusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RadarSearchMember.EncodeUserName)
}
#endif
inline void RadarSearchMember::set_encodeusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_encodeusername();
  encodeusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RadarSearchMember.EncodeUserName)
}
inline void RadarSearchMember::set_encodeusername(const char* value, size_t size) {
  set_has_encodeusername();
  encodeusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RadarSearchMember.EncodeUserName)
}
inline ::std::string* RadarSearchMember::mutable_encodeusername() {
  set_has_encodeusername();
  // @@protoc_insertion_point(field_mutable:micromsg.RadarSearchMember.EncodeUserName)
  return encodeusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RadarSearchMember::release_encodeusername() {
  // @@protoc_insertion_point(field_release:micromsg.RadarSearchMember.EncodeUserName)
  clear_has_encodeusername();
  return encodeusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RadarSearchMember::set_allocated_encodeusername(::std::string* encodeusername) {
  if (encodeusername != NULL) {
    set_has_encodeusername();
  } else {
    clear_has_encodeusername();
  }
  encodeusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), encodeusername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarSearchMember.EncodeUserName)
}

// optional string AntispamTicket = 6;
inline bool RadarSearchMember::has_antispamticket() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RadarSearchMember::set_has_antispamticket() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RadarSearchMember::clear_has_antispamticket() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RadarSearchMember::clear_antispamticket() {
  antispamticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_antispamticket();
}
inline const ::std::string& RadarSearchMember::antispamticket() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchMember.AntispamTicket)
  return antispamticket_.GetNoArena();
}
inline void RadarSearchMember::set_antispamticket(const ::std::string& value) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RadarSearchMember.AntispamTicket)
}
#if LANG_CXX11
inline void RadarSearchMember::set_antispamticket(::std::string&& value) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RadarSearchMember.AntispamTicket)
}
#endif
inline void RadarSearchMember::set_antispamticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RadarSearchMember.AntispamTicket)
}
inline void RadarSearchMember::set_antispamticket(const char* value, size_t size) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RadarSearchMember.AntispamTicket)
}
inline ::std::string* RadarSearchMember::mutable_antispamticket() {
  set_has_antispamticket();
  // @@protoc_insertion_point(field_mutable:micromsg.RadarSearchMember.AntispamTicket)
  return antispamticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RadarSearchMember::release_antispamticket() {
  // @@protoc_insertion_point(field_release:micromsg.RadarSearchMember.AntispamTicket)
  clear_has_antispamticket();
  return antispamticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RadarSearchMember::set_allocated_antispamticket(::std::string* antispamticket) {
  if (antispamticket != NULL) {
    set_has_antispamticket();
  } else {
    clear_has_antispamticket();
  }
  antispamticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), antispamticket);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarSearchMember.AntispamTicket)
}

// -------------------------------------------------------------------

// RadarSearchResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool RadarSearchResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RadarSearchResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RadarSearchResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RadarSearchResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& RadarSearchResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* RadarSearchResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RadarSearchResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* RadarSearchResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.RadarSearchResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void RadarSearchResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarSearchResponse.BaseResponse)
}

// optional string Ticket = 2;
inline bool RadarSearchResponse::has_ticket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RadarSearchResponse::set_has_ticket() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RadarSearchResponse::clear_has_ticket() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RadarSearchResponse::clear_ticket() {
  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ticket();
}
inline const ::std::string& RadarSearchResponse::ticket() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchResponse.Ticket)
  return ticket_.GetNoArena();
}
inline void RadarSearchResponse::set_ticket(const ::std::string& value) {
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RadarSearchResponse.Ticket)
}
#if LANG_CXX11
inline void RadarSearchResponse::set_ticket(::std::string&& value) {
  set_has_ticket();
  ticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RadarSearchResponse.Ticket)
}
#endif
inline void RadarSearchResponse::set_ticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RadarSearchResponse.Ticket)
}
inline void RadarSearchResponse::set_ticket(const char* value, size_t size) {
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RadarSearchResponse.Ticket)
}
inline ::std::string* RadarSearchResponse::mutable_ticket() {
  set_has_ticket();
  // @@protoc_insertion_point(field_mutable:micromsg.RadarSearchResponse.Ticket)
  return ticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RadarSearchResponse::release_ticket() {
  // @@protoc_insertion_point(field_release:micromsg.RadarSearchResponse.Ticket)
  clear_has_ticket();
  return ticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RadarSearchResponse::set_allocated_ticket(::std::string* ticket) {
  if (ticket != NULL) {
    set_has_ticket();
  } else {
    clear_has_ticket();
  }
  ticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ticket);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarSearchResponse.Ticket)
}

// required uint32 OpCode = 3;
inline bool RadarSearchResponse::has_opcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RadarSearchResponse::set_has_opcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RadarSearchResponse::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RadarSearchResponse::clear_opcode() {
  opcode_ = 0u;
  clear_has_opcode();
}
inline ::google::protobuf::uint32 RadarSearchResponse::opcode() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchResponse.OpCode)
  return opcode_;
}
inline void RadarSearchResponse::set_opcode(::google::protobuf::uint32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RadarSearchResponse.OpCode)
}

// required uint32 MemberCount = 4;
inline bool RadarSearchResponse::has_membercount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RadarSearchResponse::set_has_membercount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RadarSearchResponse::clear_has_membercount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RadarSearchResponse::clear_membercount() {
  membercount_ = 0u;
  clear_has_membercount();
}
inline ::google::protobuf::uint32 RadarSearchResponse::membercount() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchResponse.MemberCount)
  return membercount_;
}
inline void RadarSearchResponse::set_membercount(::google::protobuf::uint32 value) {
  set_has_membercount();
  membercount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RadarSearchResponse.MemberCount)
}

// repeated .micromsg.RadarSearchMember MemberList = 5;
inline int RadarSearchResponse::memberlist_size() const {
  return memberlist_.size();
}
inline void RadarSearchResponse::clear_memberlist() {
  memberlist_.Clear();
}
inline const ::micromsg::RadarSearchMember& RadarSearchResponse::memberlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.RadarSearchResponse.MemberList)
  return memberlist_.Get(index);
}
inline ::micromsg::RadarSearchMember* RadarSearchResponse::mutable_memberlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.RadarSearchResponse.MemberList)
  return memberlist_.Mutable(index);
}
inline ::micromsg::RadarSearchMember* RadarSearchResponse::add_memberlist() {
  // @@protoc_insertion_point(field_add:micromsg.RadarSearchResponse.MemberList)
  return memberlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::RadarSearchMember >*
RadarSearchResponse::mutable_memberlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.RadarSearchResponse.MemberList)
  return &memberlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::RadarSearchMember >&
RadarSearchResponse::memberlist() const {
  // @@protoc_insertion_point(field_list:micromsg.RadarSearchResponse.MemberList)
  return memberlist_;
}

// -------------------------------------------------------------------

// RadarChatRoomMember

// optional string UserName = 1;
inline bool RadarChatRoomMember::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RadarChatRoomMember::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RadarChatRoomMember::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RadarChatRoomMember::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& RadarChatRoomMember::username() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarChatRoomMember.UserName)
  return username_.GetNoArena();
}
inline void RadarChatRoomMember::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RadarChatRoomMember.UserName)
}
#if LANG_CXX11
inline void RadarChatRoomMember::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RadarChatRoomMember.UserName)
}
#endif
inline void RadarChatRoomMember::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RadarChatRoomMember.UserName)
}
inline void RadarChatRoomMember::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RadarChatRoomMember.UserName)
}
inline ::std::string* RadarChatRoomMember::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.RadarChatRoomMember.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RadarChatRoomMember::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.RadarChatRoomMember.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RadarChatRoomMember::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarChatRoomMember.UserName)
}

// optional string AntispamTicket = 2;
inline bool RadarChatRoomMember::has_antispamticket() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RadarChatRoomMember::set_has_antispamticket() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RadarChatRoomMember::clear_has_antispamticket() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RadarChatRoomMember::clear_antispamticket() {
  antispamticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_antispamticket();
}
inline const ::std::string& RadarChatRoomMember::antispamticket() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarChatRoomMember.AntispamTicket)
  return antispamticket_.GetNoArena();
}
inline void RadarChatRoomMember::set_antispamticket(const ::std::string& value) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RadarChatRoomMember.AntispamTicket)
}
#if LANG_CXX11
inline void RadarChatRoomMember::set_antispamticket(::std::string&& value) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RadarChatRoomMember.AntispamTicket)
}
#endif
inline void RadarChatRoomMember::set_antispamticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RadarChatRoomMember.AntispamTicket)
}
inline void RadarChatRoomMember::set_antispamticket(const char* value, size_t size) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RadarChatRoomMember.AntispamTicket)
}
inline ::std::string* RadarChatRoomMember::mutable_antispamticket() {
  set_has_antispamticket();
  // @@protoc_insertion_point(field_mutable:micromsg.RadarChatRoomMember.AntispamTicket)
  return antispamticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RadarChatRoomMember::release_antispamticket() {
  // @@protoc_insertion_point(field_release:micromsg.RadarChatRoomMember.AntispamTicket)
  clear_has_antispamticket();
  return antispamticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RadarChatRoomMember::set_allocated_antispamticket(::std::string* antispamticket) {
  if (antispamticket != NULL) {
    set_has_antispamticket();
  } else {
    clear_has_antispamticket();
  }
  antispamticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), antispamticket);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarChatRoomMember.AntispamTicket)
}

// optional string EncodeUserName = 3;
inline bool RadarChatRoomMember::has_encodeusername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RadarChatRoomMember::set_has_encodeusername() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RadarChatRoomMember::clear_has_encodeusername() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RadarChatRoomMember::clear_encodeusername() {
  encodeusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_encodeusername();
}
inline const ::std::string& RadarChatRoomMember::encodeusername() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarChatRoomMember.EncodeUserName)
  return encodeusername_.GetNoArena();
}
inline void RadarChatRoomMember::set_encodeusername(const ::std::string& value) {
  set_has_encodeusername();
  encodeusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RadarChatRoomMember.EncodeUserName)
}
#if LANG_CXX11
inline void RadarChatRoomMember::set_encodeusername(::std::string&& value) {
  set_has_encodeusername();
  encodeusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RadarChatRoomMember.EncodeUserName)
}
#endif
inline void RadarChatRoomMember::set_encodeusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_encodeusername();
  encodeusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RadarChatRoomMember.EncodeUserName)
}
inline void RadarChatRoomMember::set_encodeusername(const char* value, size_t size) {
  set_has_encodeusername();
  encodeusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RadarChatRoomMember.EncodeUserName)
}
inline ::std::string* RadarChatRoomMember::mutable_encodeusername() {
  set_has_encodeusername();
  // @@protoc_insertion_point(field_mutable:micromsg.RadarChatRoomMember.EncodeUserName)
  return encodeusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RadarChatRoomMember::release_encodeusername() {
  // @@protoc_insertion_point(field_release:micromsg.RadarChatRoomMember.EncodeUserName)
  clear_has_encodeusername();
  return encodeusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RadarChatRoomMember::set_allocated_encodeusername(::std::string* encodeusername) {
  if (encodeusername != NULL) {
    set_has_encodeusername();
  } else {
    clear_has_encodeusername();
  }
  encodeusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), encodeusername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarChatRoomMember.EncodeUserName)
}

// -------------------------------------------------------------------

// RadarRelationChainRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool RadarRelationChainRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RadarRelationChainRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RadarRelationChainRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RadarRelationChainRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& RadarRelationChainRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarRelationChainRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* RadarRelationChainRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RadarRelationChainRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* RadarRelationChainRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.RadarRelationChainRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void RadarRelationChainRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarRelationChainRequest.BaseRequest)
}

// required uint32 MemberCount = 2;
inline bool RadarRelationChainRequest::has_membercount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RadarRelationChainRequest::set_has_membercount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RadarRelationChainRequest::clear_has_membercount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RadarRelationChainRequest::clear_membercount() {
  membercount_ = 0u;
  clear_has_membercount();
}
inline ::google::protobuf::uint32 RadarRelationChainRequest::membercount() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarRelationChainRequest.MemberCount)
  return membercount_;
}
inline void RadarRelationChainRequest::set_membercount(::google::protobuf::uint32 value) {
  set_has_membercount();
  membercount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RadarRelationChainRequest.MemberCount)
}

// repeated .micromsg.RadarChatRoomMember MemberList = 3;
inline int RadarRelationChainRequest::memberlist_size() const {
  return memberlist_.size();
}
inline void RadarRelationChainRequest::clear_memberlist() {
  memberlist_.Clear();
}
inline const ::micromsg::RadarChatRoomMember& RadarRelationChainRequest::memberlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.RadarRelationChainRequest.MemberList)
  return memberlist_.Get(index);
}
inline ::micromsg::RadarChatRoomMember* RadarRelationChainRequest::mutable_memberlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.RadarRelationChainRequest.MemberList)
  return memberlist_.Mutable(index);
}
inline ::micromsg::RadarChatRoomMember* RadarRelationChainRequest::add_memberlist() {
  // @@protoc_insertion_point(field_add:micromsg.RadarRelationChainRequest.MemberList)
  return memberlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::RadarChatRoomMember >*
RadarRelationChainRequest::mutable_memberlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.RadarRelationChainRequest.MemberList)
  return &memberlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::RadarChatRoomMember >&
RadarRelationChainRequest::memberlist() const {
  // @@protoc_insertion_point(field_list:micromsg.RadarRelationChainRequest.MemberList)
  return memberlist_;
}

// -------------------------------------------------------------------

// RadarRelationChainResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool RadarRelationChainResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RadarRelationChainResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RadarRelationChainResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RadarRelationChainResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& RadarRelationChainResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarRelationChainResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* RadarRelationChainResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RadarRelationChainResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* RadarRelationChainResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.RadarRelationChainResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void RadarRelationChainResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarRelationChainResponse.BaseResponse)
}

// optional string Ticket = 2;
inline bool RadarRelationChainResponse::has_ticket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RadarRelationChainResponse::set_has_ticket() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RadarRelationChainResponse::clear_has_ticket() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RadarRelationChainResponse::clear_ticket() {
  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ticket();
}
inline const ::std::string& RadarRelationChainResponse::ticket() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarRelationChainResponse.Ticket)
  return ticket_.GetNoArena();
}
inline void RadarRelationChainResponse::set_ticket(const ::std::string& value) {
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RadarRelationChainResponse.Ticket)
}
#if LANG_CXX11
inline void RadarRelationChainResponse::set_ticket(::std::string&& value) {
  set_has_ticket();
  ticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RadarRelationChainResponse.Ticket)
}
#endif
inline void RadarRelationChainResponse::set_ticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RadarRelationChainResponse.Ticket)
}
inline void RadarRelationChainResponse::set_ticket(const char* value, size_t size) {
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RadarRelationChainResponse.Ticket)
}
inline ::std::string* RadarRelationChainResponse::mutable_ticket() {
  set_has_ticket();
  // @@protoc_insertion_point(field_mutable:micromsg.RadarRelationChainResponse.Ticket)
  return ticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RadarRelationChainResponse::release_ticket() {
  // @@protoc_insertion_point(field_release:micromsg.RadarRelationChainResponse.Ticket)
  clear_has_ticket();
  return ticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RadarRelationChainResponse::set_allocated_ticket(::std::string* ticket) {
  if (ticket != NULL) {
    set_has_ticket();
  } else {
    clear_has_ticket();
  }
  ticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ticket);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarRelationChainResponse.Ticket)
}

// required uint32 MemberCount = 3;
inline bool RadarRelationChainResponse::has_membercount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RadarRelationChainResponse::set_has_membercount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RadarRelationChainResponse::clear_has_membercount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RadarRelationChainResponse::clear_membercount() {
  membercount_ = 0u;
  clear_has_membercount();
}
inline ::google::protobuf::uint32 RadarRelationChainResponse::membercount() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarRelationChainResponse.MemberCount)
  return membercount_;
}
inline void RadarRelationChainResponse::set_membercount(::google::protobuf::uint32 value) {
  set_has_membercount();
  membercount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RadarRelationChainResponse.MemberCount)
}

// repeated .micromsg.RadarChatRoomMember MemberList = 4;
inline int RadarRelationChainResponse::memberlist_size() const {
  return memberlist_.size();
}
inline void RadarRelationChainResponse::clear_memberlist() {
  memberlist_.Clear();
}
inline const ::micromsg::RadarChatRoomMember& RadarRelationChainResponse::memberlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.RadarRelationChainResponse.MemberList)
  return memberlist_.Get(index);
}
inline ::micromsg::RadarChatRoomMember* RadarRelationChainResponse::mutable_memberlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.RadarRelationChainResponse.MemberList)
  return memberlist_.Mutable(index);
}
inline ::micromsg::RadarChatRoomMember* RadarRelationChainResponse::add_memberlist() {
  // @@protoc_insertion_point(field_add:micromsg.RadarRelationChainResponse.MemberList)
  return memberlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::RadarChatRoomMember >*
RadarRelationChainResponse::mutable_memberlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.RadarRelationChainResponse.MemberList)
  return &memberlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::RadarChatRoomMember >&
RadarRelationChainResponse::memberlist() const {
  // @@protoc_insertion_point(field_list:micromsg.RadarRelationChainResponse.MemberList)
  return memberlist_;
}

// -------------------------------------------------------------------

// RadarCreateChatRoomRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool RadarCreateChatRoomRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RadarCreateChatRoomRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RadarCreateChatRoomRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RadarCreateChatRoomRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& RadarCreateChatRoomRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarCreateChatRoomRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* RadarCreateChatRoomRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RadarCreateChatRoomRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* RadarCreateChatRoomRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.RadarCreateChatRoomRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void RadarCreateChatRoomRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarCreateChatRoomRequest.BaseRequest)
}

// required float Longitude = 2;
inline bool RadarCreateChatRoomRequest::has_longitude() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RadarCreateChatRoomRequest::set_has_longitude() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RadarCreateChatRoomRequest::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RadarCreateChatRoomRequest::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline float RadarCreateChatRoomRequest::longitude() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarCreateChatRoomRequest.Longitude)
  return longitude_;
}
inline void RadarCreateChatRoomRequest::set_longitude(float value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RadarCreateChatRoomRequest.Longitude)
}

// required float Latitude = 3;
inline bool RadarCreateChatRoomRequest::has_latitude() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RadarCreateChatRoomRequest::set_has_latitude() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RadarCreateChatRoomRequest::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RadarCreateChatRoomRequest::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline float RadarCreateChatRoomRequest::latitude() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarCreateChatRoomRequest.Latitude)
  return latitude_;
}
inline void RadarCreateChatRoomRequest::set_latitude(float value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RadarCreateChatRoomRequest.Latitude)
}

// required int32 Precision = 4;
inline bool RadarCreateChatRoomRequest::has_precision() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RadarCreateChatRoomRequest::set_has_precision() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RadarCreateChatRoomRequest::clear_has_precision() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RadarCreateChatRoomRequest::clear_precision() {
  precision_ = 0;
  clear_has_precision();
}
inline ::google::protobuf::int32 RadarCreateChatRoomRequest::precision() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarCreateChatRoomRequest.Precision)
  return precision_;
}
inline void RadarCreateChatRoomRequest::set_precision(::google::protobuf::int32 value) {
  set_has_precision();
  precision_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RadarCreateChatRoomRequest.Precision)
}

// optional string MacAddr = 5;
inline bool RadarCreateChatRoomRequest::has_macaddr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RadarCreateChatRoomRequest::set_has_macaddr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RadarCreateChatRoomRequest::clear_has_macaddr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RadarCreateChatRoomRequest::clear_macaddr() {
  macaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_macaddr();
}
inline const ::std::string& RadarCreateChatRoomRequest::macaddr() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarCreateChatRoomRequest.MacAddr)
  return macaddr_.GetNoArena();
}
inline void RadarCreateChatRoomRequest::set_macaddr(const ::std::string& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RadarCreateChatRoomRequest.MacAddr)
}
#if LANG_CXX11
inline void RadarCreateChatRoomRequest::set_macaddr(::std::string&& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RadarCreateChatRoomRequest.MacAddr)
}
#endif
inline void RadarCreateChatRoomRequest::set_macaddr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RadarCreateChatRoomRequest.MacAddr)
}
inline void RadarCreateChatRoomRequest::set_macaddr(const char* value, size_t size) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RadarCreateChatRoomRequest.MacAddr)
}
inline ::std::string* RadarCreateChatRoomRequest::mutable_macaddr() {
  set_has_macaddr();
  // @@protoc_insertion_point(field_mutable:micromsg.RadarCreateChatRoomRequest.MacAddr)
  return macaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RadarCreateChatRoomRequest::release_macaddr() {
  // @@protoc_insertion_point(field_release:micromsg.RadarCreateChatRoomRequest.MacAddr)
  clear_has_macaddr();
  return macaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RadarCreateChatRoomRequest::set_allocated_macaddr(::std::string* macaddr) {
  if (macaddr != NULL) {
    set_has_macaddr();
  } else {
    clear_has_macaddr();
  }
  macaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), macaddr);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarCreateChatRoomRequest.MacAddr)
}

// optional string CellId = 6;
inline bool RadarCreateChatRoomRequest::has_cellid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RadarCreateChatRoomRequest::set_has_cellid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RadarCreateChatRoomRequest::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RadarCreateChatRoomRequest::clear_cellid() {
  cellid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cellid();
}
inline const ::std::string& RadarCreateChatRoomRequest::cellid() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarCreateChatRoomRequest.CellId)
  return cellid_.GetNoArena();
}
inline void RadarCreateChatRoomRequest::set_cellid(const ::std::string& value) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RadarCreateChatRoomRequest.CellId)
}
#if LANG_CXX11
inline void RadarCreateChatRoomRequest::set_cellid(::std::string&& value) {
  set_has_cellid();
  cellid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RadarCreateChatRoomRequest.CellId)
}
#endif
inline void RadarCreateChatRoomRequest::set_cellid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RadarCreateChatRoomRequest.CellId)
}
inline void RadarCreateChatRoomRequest::set_cellid(const char* value, size_t size) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RadarCreateChatRoomRequest.CellId)
}
inline ::std::string* RadarCreateChatRoomRequest::mutable_cellid() {
  set_has_cellid();
  // @@protoc_insertion_point(field_mutable:micromsg.RadarCreateChatRoomRequest.CellId)
  return cellid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RadarCreateChatRoomRequest::release_cellid() {
  // @@protoc_insertion_point(field_release:micromsg.RadarCreateChatRoomRequest.CellId)
  clear_has_cellid();
  return cellid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RadarCreateChatRoomRequest::set_allocated_cellid(::std::string* cellid) {
  if (cellid != NULL) {
    set_has_cellid();
  } else {
    clear_has_cellid();
  }
  cellid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cellid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarCreateChatRoomRequest.CellId)
}

// optional int32 GPSSource = 7;
inline bool RadarCreateChatRoomRequest::has_gpssource() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RadarCreateChatRoomRequest::set_has_gpssource() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RadarCreateChatRoomRequest::clear_has_gpssource() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RadarCreateChatRoomRequest::clear_gpssource() {
  gpssource_ = 0;
  clear_has_gpssource();
}
inline ::google::protobuf::int32 RadarCreateChatRoomRequest::gpssource() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarCreateChatRoomRequest.GPSSource)
  return gpssource_;
}
inline void RadarCreateChatRoomRequest::set_gpssource(::google::protobuf::int32 value) {
  set_has_gpssource();
  gpssource_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RadarCreateChatRoomRequest.GPSSource)
}

// optional string PassWord = 8;
inline bool RadarCreateChatRoomRequest::has_password() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RadarCreateChatRoomRequest::set_has_password() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RadarCreateChatRoomRequest::clear_has_password() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RadarCreateChatRoomRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& RadarCreateChatRoomRequest::password() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarCreateChatRoomRequest.PassWord)
  return password_.GetNoArena();
}
inline void RadarCreateChatRoomRequest::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RadarCreateChatRoomRequest.PassWord)
}
#if LANG_CXX11
inline void RadarCreateChatRoomRequest::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RadarCreateChatRoomRequest.PassWord)
}
#endif
inline void RadarCreateChatRoomRequest::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RadarCreateChatRoomRequest.PassWord)
}
inline void RadarCreateChatRoomRequest::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RadarCreateChatRoomRequest.PassWord)
}
inline ::std::string* RadarCreateChatRoomRequest::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:micromsg.RadarCreateChatRoomRequest.PassWord)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RadarCreateChatRoomRequest::release_password() {
  // @@protoc_insertion_point(field_release:micromsg.RadarCreateChatRoomRequest.PassWord)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RadarCreateChatRoomRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarCreateChatRoomRequest.PassWord)
}

// -------------------------------------------------------------------

// RadarCreateChatRoomResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool RadarCreateChatRoomResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RadarCreateChatRoomResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RadarCreateChatRoomResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RadarCreateChatRoomResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& RadarCreateChatRoomResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarCreateChatRoomResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* RadarCreateChatRoomResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RadarCreateChatRoomResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* RadarCreateChatRoomResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.RadarCreateChatRoomResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void RadarCreateChatRoomResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarCreateChatRoomResponse.BaseResponse)
}

// optional string ChatRoomName = 2;
inline bool RadarCreateChatRoomResponse::has_chatroomname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RadarCreateChatRoomResponse::set_has_chatroomname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RadarCreateChatRoomResponse::clear_has_chatroomname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RadarCreateChatRoomResponse::clear_chatroomname() {
  chatroomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chatroomname();
}
inline const ::std::string& RadarCreateChatRoomResponse::chatroomname() const {
  // @@protoc_insertion_point(field_get:micromsg.RadarCreateChatRoomResponse.ChatRoomName)
  return chatroomname_.GetNoArena();
}
inline void RadarCreateChatRoomResponse::set_chatroomname(const ::std::string& value) {
  set_has_chatroomname();
  chatroomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RadarCreateChatRoomResponse.ChatRoomName)
}
#if LANG_CXX11
inline void RadarCreateChatRoomResponse::set_chatroomname(::std::string&& value) {
  set_has_chatroomname();
  chatroomname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RadarCreateChatRoomResponse.ChatRoomName)
}
#endif
inline void RadarCreateChatRoomResponse::set_chatroomname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chatroomname();
  chatroomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RadarCreateChatRoomResponse.ChatRoomName)
}
inline void RadarCreateChatRoomResponse::set_chatroomname(const char* value, size_t size) {
  set_has_chatroomname();
  chatroomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RadarCreateChatRoomResponse.ChatRoomName)
}
inline ::std::string* RadarCreateChatRoomResponse::mutable_chatroomname() {
  set_has_chatroomname();
  // @@protoc_insertion_point(field_mutable:micromsg.RadarCreateChatRoomResponse.ChatRoomName)
  return chatroomname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RadarCreateChatRoomResponse::release_chatroomname() {
  // @@protoc_insertion_point(field_release:micromsg.RadarCreateChatRoomResponse.ChatRoomName)
  clear_has_chatroomname();
  return chatroomname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RadarCreateChatRoomResponse::set_allocated_chatroomname(::std::string* chatroomname) {
  if (chatroomname != NULL) {
    set_has_chatroomname();
  } else {
    clear_has_chatroomname();
  }
  chatroomname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chatroomname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RadarCreateChatRoomResponse.ChatRoomName)
}

// -------------------------------------------------------------------

// GetPOIListRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetPOIListRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetPOIListRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetPOIListRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetPOIListRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetPOIListRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetPOIListRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetPOIListRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetPOIListRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetPOIListRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetPOIListRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetPOIListRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetPOIListRequest.BaseRequest)
}

// required uint32 Scene = 2;
inline bool GetPOIListRequest::has_scene() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetPOIListRequest::set_has_scene() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetPOIListRequest::clear_has_scene() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetPOIListRequest::clear_scene() {
  scene_ = 0u;
  clear_has_scene();
}
inline ::google::protobuf::uint32 GetPOIListRequest::scene() const {
  // @@protoc_insertion_point(field_get:micromsg.GetPOIListRequest.Scene)
  return scene_;
}
inline void GetPOIListRequest::set_scene(::google::protobuf::uint32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetPOIListRequest.Scene)
}

// required uint32 OpCode = 3;
inline bool GetPOIListRequest::has_opcode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetPOIListRequest::set_has_opcode() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetPOIListRequest::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetPOIListRequest::clear_opcode() {
  opcode_ = 0u;
  clear_has_opcode();
}
inline ::google::protobuf::uint32 GetPOIListRequest::opcode() const {
  // @@protoc_insertion_point(field_get:micromsg.GetPOIListRequest.OpCode)
  return opcode_;
}
inline void GetPOIListRequest::set_opcode(::google::protobuf::uint32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetPOIListRequest.OpCode)
}

// optional string Keyword = 4;
inline bool GetPOIListRequest::has_keyword() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetPOIListRequest::set_has_keyword() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetPOIListRequest::clear_has_keyword() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetPOIListRequest::clear_keyword() {
  keyword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_keyword();
}
inline const ::std::string& GetPOIListRequest::keyword() const {
  // @@protoc_insertion_point(field_get:micromsg.GetPOIListRequest.Keyword)
  return keyword_.GetNoArena();
}
inline void GetPOIListRequest::set_keyword(const ::std::string& value) {
  set_has_keyword();
  keyword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetPOIListRequest.Keyword)
}
#if LANG_CXX11
inline void GetPOIListRequest::set_keyword(::std::string&& value) {
  set_has_keyword();
  keyword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetPOIListRequest.Keyword)
}
#endif
inline void GetPOIListRequest::set_keyword(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_keyword();
  keyword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetPOIListRequest.Keyword)
}
inline void GetPOIListRequest::set_keyword(const char* value, size_t size) {
  set_has_keyword();
  keyword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetPOIListRequest.Keyword)
}
inline ::std::string* GetPOIListRequest::mutable_keyword() {
  set_has_keyword();
  // @@protoc_insertion_point(field_mutable:micromsg.GetPOIListRequest.Keyword)
  return keyword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPOIListRequest::release_keyword() {
  // @@protoc_insertion_point(field_release:micromsg.GetPOIListRequest.Keyword)
  clear_has_keyword();
  return keyword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPOIListRequest::set_allocated_keyword(::std::string* keyword) {
  if (keyword != NULL) {
    set_has_keyword();
  } else {
    clear_has_keyword();
  }
  keyword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keyword);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetPOIListRequest.Keyword)
}

// required .micromsg.SKBuiltinBuffer_t Buff = 5;
inline bool GetPOIListRequest::has_buff() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetPOIListRequest::set_has_buff() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetPOIListRequest::clear_has_buff() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetPOIListRequest::clear_buff() {
  if (buff_ != NULL) buff_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_buff();
}
inline const ::micromsg::SKBuiltinBuffer_t& GetPOIListRequest::buff() const {
  // @@protoc_insertion_point(field_get:micromsg.GetPOIListRequest.Buff)
  return buff_ != NULL ? *buff_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* GetPOIListRequest::mutable_buff() {
  set_has_buff();
  if (buff_ == NULL) {
    buff_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetPOIListRequest.Buff)
  return buff_;
}
inline ::micromsg::SKBuiltinBuffer_t* GetPOIListRequest::release_buff() {
  // @@protoc_insertion_point(field_release:micromsg.GetPOIListRequest.Buff)
  clear_has_buff();
  ::micromsg::SKBuiltinBuffer_t* temp = buff_;
  buff_ = NULL;
  return temp;
}
inline void GetPOIListRequest::set_allocated_buff(::micromsg::SKBuiltinBuffer_t* buff) {
  delete buff_;
  buff_ = buff;
  if (buff) {
    set_has_buff();
  } else {
    clear_has_buff();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetPOIListRequest.Buff)
}

// required double Longitude = 6;
inline bool GetPOIListRequest::has_longitude() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetPOIListRequest::set_has_longitude() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetPOIListRequest::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetPOIListRequest::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline double GetPOIListRequest::longitude() const {
  // @@protoc_insertion_point(field_get:micromsg.GetPOIListRequest.Longitude)
  return longitude_;
}
inline void GetPOIListRequest::set_longitude(double value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetPOIListRequest.Longitude)
}

// required double Latitude = 7;
inline bool GetPOIListRequest::has_latitude() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GetPOIListRequest::set_has_latitude() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GetPOIListRequest::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GetPOIListRequest::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline double GetPOIListRequest::latitude() const {
  // @@protoc_insertion_point(field_get:micromsg.GetPOIListRequest.Latitude)
  return latitude_;
}
inline void GetPOIListRequest::set_latitude(double value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetPOIListRequest.Latitude)
}

// -------------------------------------------------------------------

// POIItem

// optional string Name = 1;
inline bool POIItem::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void POIItem::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void POIItem::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void POIItem::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& POIItem::name() const {
  // @@protoc_insertion_point(field_get:micromsg.POIItem.Name)
  return name_.GetNoArena();
}
inline void POIItem::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.POIItem.Name)
}
#if LANG_CXX11
inline void POIItem::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.POIItem.Name)
}
#endif
inline void POIItem::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.POIItem.Name)
}
inline void POIItem::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.POIItem.Name)
}
inline ::std::string* POIItem::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:micromsg.POIItem.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* POIItem::release_name() {
  // @@protoc_insertion_point(field_release:micromsg.POIItem.Name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void POIItem::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:micromsg.POIItem.Name)
}

// optional string Addr = 2;
inline bool POIItem::has_addr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void POIItem::set_has_addr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void POIItem::clear_has_addr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void POIItem::clear_addr() {
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_addr();
}
inline const ::std::string& POIItem::addr() const {
  // @@protoc_insertion_point(field_get:micromsg.POIItem.Addr)
  return addr_.GetNoArena();
}
inline void POIItem::set_addr(const ::std::string& value) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.POIItem.Addr)
}
#if LANG_CXX11
inline void POIItem::set_addr(::std::string&& value) {
  set_has_addr();
  addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.POIItem.Addr)
}
#endif
inline void POIItem::set_addr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.POIItem.Addr)
}
inline void POIItem::set_addr(const char* value, size_t size) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.POIItem.Addr)
}
inline ::std::string* POIItem::mutable_addr() {
  set_has_addr();
  // @@protoc_insertion_point(field_mutable:micromsg.POIItem.Addr)
  return addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* POIItem::release_addr() {
  // @@protoc_insertion_point(field_release:micromsg.POIItem.Addr)
  clear_has_addr();
  return addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void POIItem::set_allocated_addr(::std::string* addr) {
  if (addr != NULL) {
    set_has_addr();
  } else {
    clear_has_addr();
  }
  addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr);
  // @@protoc_insertion_point(field_set_allocated:micromsg.POIItem.Addr)
}

// required double Longitude = 3;
inline bool POIItem::has_longitude() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void POIItem::set_has_longitude() {
  _has_bits_[0] |= 0x00000400u;
}
inline void POIItem::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void POIItem::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline double POIItem::longitude() const {
  // @@protoc_insertion_point(field_get:micromsg.POIItem.Longitude)
  return longitude_;
}
inline void POIItem::set_longitude(double value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.POIItem.Longitude)
}

// required double Latitude = 4;
inline bool POIItem::has_latitude() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void POIItem::set_has_latitude() {
  _has_bits_[0] |= 0x00000800u;
}
inline void POIItem::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void POIItem::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline double POIItem::latitude() const {
  // @@protoc_insertion_point(field_get:micromsg.POIItem.Latitude)
  return latitude_;
}
inline void POIItem::set_latitude(double value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.POIItem.Latitude)
}

// optional string TypeId = 5;
inline bool POIItem::has_typeid_() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void POIItem::set_has_typeid_() {
  _has_bits_[0] |= 0x00000004u;
}
inline void POIItem::clear_has_typeid_() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void POIItem::clear_typeid_() {
  typeid__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_typeid_();
}
inline const ::std::string& POIItem::typeid_() const {
  // @@protoc_insertion_point(field_get:micromsg.POIItem.TypeId)
  return typeid__.GetNoArena();
}
inline void POIItem::set_typeid_(const ::std::string& value) {
  set_has_typeid_();
  typeid__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.POIItem.TypeId)
}
#if LANG_CXX11
inline void POIItem::set_typeid_(::std::string&& value) {
  set_has_typeid_();
  typeid__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.POIItem.TypeId)
}
#endif
inline void POIItem::set_typeid_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_typeid_();
  typeid__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.POIItem.TypeId)
}
inline void POIItem::set_typeid_(const char* value, size_t size) {
  set_has_typeid_();
  typeid__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.POIItem.TypeId)
}
inline ::std::string* POIItem::mutable_typeid_() {
  set_has_typeid_();
  // @@protoc_insertion_point(field_mutable:micromsg.POIItem.TypeId)
  return typeid__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* POIItem::release_typeid_() {
  // @@protoc_insertion_point(field_release:micromsg.POIItem.TypeId)
  clear_has_typeid_();
  return typeid__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void POIItem::set_allocated_typeid_(::std::string* typeid_) {
  if (typeid_ != NULL) {
    set_has_typeid_();
  } else {
    clear_has_typeid_();
  }
  typeid__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), typeid_);
  // @@protoc_insertion_point(field_set_allocated:micromsg.POIItem.TypeId)
}

// optional string Link = 6;
inline bool POIItem::has_link() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void POIItem::set_has_link() {
  _has_bits_[0] |= 0x00000008u;
}
inline void POIItem::clear_has_link() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void POIItem::clear_link() {
  link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_link();
}
inline const ::std::string& POIItem::link() const {
  // @@protoc_insertion_point(field_get:micromsg.POIItem.Link)
  return link_.GetNoArena();
}
inline void POIItem::set_link(const ::std::string& value) {
  set_has_link();
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.POIItem.Link)
}
#if LANG_CXX11
inline void POIItem::set_link(::std::string&& value) {
  set_has_link();
  link_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.POIItem.Link)
}
#endif
inline void POIItem::set_link(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_link();
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.POIItem.Link)
}
inline void POIItem::set_link(const char* value, size_t size) {
  set_has_link();
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.POIItem.Link)
}
inline ::std::string* POIItem::mutable_link() {
  set_has_link();
  // @@protoc_insertion_point(field_mutable:micromsg.POIItem.Link)
  return link_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* POIItem::release_link() {
  // @@protoc_insertion_point(field_release:micromsg.POIItem.Link)
  clear_has_link();
  return link_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void POIItem::set_allocated_link(::std::string* link) {
  if (link != NULL) {
    set_has_link();
  } else {
    clear_has_link();
  }
  link_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), link);
  // @@protoc_insertion_point(field_set_allocated:micromsg.POIItem.Link)
}

// optional string Nation = 7;
inline bool POIItem::has_nation() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void POIItem::set_has_nation() {
  _has_bits_[0] |= 0x00000010u;
}
inline void POIItem::clear_has_nation() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void POIItem::clear_nation() {
  nation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nation();
}
inline const ::std::string& POIItem::nation() const {
  // @@protoc_insertion_point(field_get:micromsg.POIItem.Nation)
  return nation_.GetNoArena();
}
inline void POIItem::set_nation(const ::std::string& value) {
  set_has_nation();
  nation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.POIItem.Nation)
}
#if LANG_CXX11
inline void POIItem::set_nation(::std::string&& value) {
  set_has_nation();
  nation_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.POIItem.Nation)
}
#endif
inline void POIItem::set_nation(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nation();
  nation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.POIItem.Nation)
}
inline void POIItem::set_nation(const char* value, size_t size) {
  set_has_nation();
  nation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.POIItem.Nation)
}
inline ::std::string* POIItem::mutable_nation() {
  set_has_nation();
  // @@protoc_insertion_point(field_mutable:micromsg.POIItem.Nation)
  return nation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* POIItem::release_nation() {
  // @@protoc_insertion_point(field_release:micromsg.POIItem.Nation)
  clear_has_nation();
  return nation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void POIItem::set_allocated_nation(::std::string* nation) {
  if (nation != NULL) {
    set_has_nation();
  } else {
    clear_has_nation();
  }
  nation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nation);
  // @@protoc_insertion_point(field_set_allocated:micromsg.POIItem.Nation)
}

// optional string Province = 8;
inline bool POIItem::has_province() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void POIItem::set_has_province() {
  _has_bits_[0] |= 0x00000020u;
}
inline void POIItem::clear_has_province() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void POIItem::clear_province() {
  province_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_province();
}
inline const ::std::string& POIItem::province() const {
  // @@protoc_insertion_point(field_get:micromsg.POIItem.Province)
  return province_.GetNoArena();
}
inline void POIItem::set_province(const ::std::string& value) {
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.POIItem.Province)
}
#if LANG_CXX11
inline void POIItem::set_province(::std::string&& value) {
  set_has_province();
  province_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.POIItem.Province)
}
#endif
inline void POIItem::set_province(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.POIItem.Province)
}
inline void POIItem::set_province(const char* value, size_t size) {
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.POIItem.Province)
}
inline ::std::string* POIItem::mutable_province() {
  set_has_province();
  // @@protoc_insertion_point(field_mutable:micromsg.POIItem.Province)
  return province_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* POIItem::release_province() {
  // @@protoc_insertion_point(field_release:micromsg.POIItem.Province)
  clear_has_province();
  return province_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void POIItem::set_allocated_province(::std::string* province) {
  if (province != NULL) {
    set_has_province();
  } else {
    clear_has_province();
  }
  province_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), province);
  // @@protoc_insertion_point(field_set_allocated:micromsg.POIItem.Province)
}

// optional string City = 9;
inline bool POIItem::has_city() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void POIItem::set_has_city() {
  _has_bits_[0] |= 0x00000040u;
}
inline void POIItem::clear_has_city() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void POIItem::clear_city() {
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_city();
}
inline const ::std::string& POIItem::city() const {
  // @@protoc_insertion_point(field_get:micromsg.POIItem.City)
  return city_.GetNoArena();
}
inline void POIItem::set_city(const ::std::string& value) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.POIItem.City)
}
#if LANG_CXX11
inline void POIItem::set_city(::std::string&& value) {
  set_has_city();
  city_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.POIItem.City)
}
#endif
inline void POIItem::set_city(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.POIItem.City)
}
inline void POIItem::set_city(const char* value, size_t size) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.POIItem.City)
}
inline ::std::string* POIItem::mutable_city() {
  set_has_city();
  // @@protoc_insertion_point(field_mutable:micromsg.POIItem.City)
  return city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* POIItem::release_city() {
  // @@protoc_insertion_point(field_release:micromsg.POIItem.City)
  clear_has_city();
  return city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void POIItem::set_allocated_city(::std::string* city) {
  if (city != NULL) {
    set_has_city();
  } else {
    clear_has_city();
  }
  city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city);
  // @@protoc_insertion_point(field_set_allocated:micromsg.POIItem.City)
}

// optional string District = 10;
inline bool POIItem::has_district() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void POIItem::set_has_district() {
  _has_bits_[0] |= 0x00000080u;
}
inline void POIItem::clear_has_district() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void POIItem::clear_district() {
  district_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_district();
}
inline const ::std::string& POIItem::district() const {
  // @@protoc_insertion_point(field_get:micromsg.POIItem.District)
  return district_.GetNoArena();
}
inline void POIItem::set_district(const ::std::string& value) {
  set_has_district();
  district_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.POIItem.District)
}
#if LANG_CXX11
inline void POIItem::set_district(::std::string&& value) {
  set_has_district();
  district_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.POIItem.District)
}
#endif
inline void POIItem::set_district(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_district();
  district_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.POIItem.District)
}
inline void POIItem::set_district(const char* value, size_t size) {
  set_has_district();
  district_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.POIItem.District)
}
inline ::std::string* POIItem::mutable_district() {
  set_has_district();
  // @@protoc_insertion_point(field_mutable:micromsg.POIItem.District)
  return district_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* POIItem::release_district() {
  // @@protoc_insertion_point(field_release:micromsg.POIItem.District)
  clear_has_district();
  return district_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void POIItem::set_allocated_district(::std::string* district) {
  if (district != NULL) {
    set_has_district();
  } else {
    clear_has_district();
  }
  district_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), district);
  // @@protoc_insertion_point(field_set_allocated:micromsg.POIItem.District)
}

// optional string Street = 11;
inline bool POIItem::has_street() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void POIItem::set_has_street() {
  _has_bits_[0] |= 0x00000100u;
}
inline void POIItem::clear_has_street() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void POIItem::clear_street() {
  street_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_street();
}
inline const ::std::string& POIItem::street() const {
  // @@protoc_insertion_point(field_get:micromsg.POIItem.Street)
  return street_.GetNoArena();
}
inline void POIItem::set_street(const ::std::string& value) {
  set_has_street();
  street_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.POIItem.Street)
}
#if LANG_CXX11
inline void POIItem::set_street(::std::string&& value) {
  set_has_street();
  street_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.POIItem.Street)
}
#endif
inline void POIItem::set_street(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_street();
  street_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.POIItem.Street)
}
inline void POIItem::set_street(const char* value, size_t size) {
  set_has_street();
  street_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.POIItem.Street)
}
inline ::std::string* POIItem::mutable_street() {
  set_has_street();
  // @@protoc_insertion_point(field_mutable:micromsg.POIItem.Street)
  return street_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* POIItem::release_street() {
  // @@protoc_insertion_point(field_release:micromsg.POIItem.Street)
  clear_has_street();
  return street_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void POIItem::set_allocated_street(::std::string* street) {
  if (street != NULL) {
    set_has_street();
  } else {
    clear_has_street();
  }
  street_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), street);
  // @@protoc_insertion_point(field_set_allocated:micromsg.POIItem.Street)
}

// optional string SubAddr = 12;
inline bool POIItem::has_subaddr() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void POIItem::set_has_subaddr() {
  _has_bits_[0] |= 0x00000200u;
}
inline void POIItem::clear_has_subaddr() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void POIItem::clear_subaddr() {
  subaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_subaddr();
}
inline const ::std::string& POIItem::subaddr() const {
  // @@protoc_insertion_point(field_get:micromsg.POIItem.SubAddr)
  return subaddr_.GetNoArena();
}
inline void POIItem::set_subaddr(const ::std::string& value) {
  set_has_subaddr();
  subaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.POIItem.SubAddr)
}
#if LANG_CXX11
inline void POIItem::set_subaddr(::std::string&& value) {
  set_has_subaddr();
  subaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.POIItem.SubAddr)
}
#endif
inline void POIItem::set_subaddr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_subaddr();
  subaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.POIItem.SubAddr)
}
inline void POIItem::set_subaddr(const char* value, size_t size) {
  set_has_subaddr();
  subaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.POIItem.SubAddr)
}
inline ::std::string* POIItem::mutable_subaddr() {
  set_has_subaddr();
  // @@protoc_insertion_point(field_mutable:micromsg.POIItem.SubAddr)
  return subaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* POIItem::release_subaddr() {
  // @@protoc_insertion_point(field_release:micromsg.POIItem.SubAddr)
  clear_has_subaddr();
  return subaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void POIItem::set_allocated_subaddr(::std::string* subaddr) {
  if (subaddr != NULL) {
    set_has_subaddr();
  } else {
    clear_has_subaddr();
  }
  subaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subaddr);
  // @@protoc_insertion_point(field_set_allocated:micromsg.POIItem.SubAddr)
}

// -------------------------------------------------------------------

// GetPOIListResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetPOIListResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetPOIListResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetPOIListResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetPOIListResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetPOIListResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetPOIListResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetPOIListResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetPOIListResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetPOIListResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetPOIListResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetPOIListResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetPOIListResponse.BaseResponse)
}

// required uint32 ListCount = 2;
inline bool GetPOIListResponse::has_listcount() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GetPOIListResponse::set_has_listcount() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GetPOIListResponse::clear_has_listcount() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GetPOIListResponse::clear_listcount() {
  listcount_ = 0u;
  clear_has_listcount();
}
inline ::google::protobuf::uint32 GetPOIListResponse::listcount() const {
  // @@protoc_insertion_point(field_get:micromsg.GetPOIListResponse.ListCount)
  return listcount_;
}
inline void GetPOIListResponse::set_listcount(::google::protobuf::uint32 value) {
  set_has_listcount();
  listcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetPOIListResponse.ListCount)
}

// repeated .micromsg.POIItem POIList = 3;
inline int GetPOIListResponse::poilist_size() const {
  return poilist_.size();
}
inline void GetPOIListResponse::clear_poilist() {
  poilist_.Clear();
}
inline const ::micromsg::POIItem& GetPOIListResponse::poilist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetPOIListResponse.POIList)
  return poilist_.Get(index);
}
inline ::micromsg::POIItem* GetPOIListResponse::mutable_poilist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetPOIListResponse.POIList)
  return poilist_.Mutable(index);
}
inline ::micromsg::POIItem* GetPOIListResponse::add_poilist() {
  // @@protoc_insertion_point(field_add:micromsg.GetPOIListResponse.POIList)
  return poilist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::POIItem >*
GetPOIListResponse::mutable_poilist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetPOIListResponse.POIList)
  return &poilist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::POIItem >&
GetPOIListResponse::poilist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetPOIListResponse.POIList)
  return poilist_;
}

// required uint32 OpCode = 4;
inline bool GetPOIListResponse::has_opcode() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GetPOIListResponse::set_has_opcode() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GetPOIListResponse::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GetPOIListResponse::clear_opcode() {
  opcode_ = 0u;
  clear_has_opcode();
}
inline ::google::protobuf::uint32 GetPOIListResponse::opcode() const {
  // @@protoc_insertion_point(field_get:micromsg.GetPOIListResponse.OpCode)
  return opcode_;
}
inline void GetPOIListResponse::set_opcode(::google::protobuf::uint32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetPOIListResponse.OpCode)
}

// required uint32 IsEnd = 5;
inline bool GetPOIListResponse::has_isend() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GetPOIListResponse::set_has_isend() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GetPOIListResponse::clear_has_isend() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GetPOIListResponse::clear_isend() {
  isend_ = 0u;
  clear_has_isend();
}
inline ::google::protobuf::uint32 GetPOIListResponse::isend() const {
  // @@protoc_insertion_point(field_get:micromsg.GetPOIListResponse.IsEnd)
  return isend_;
}
inline void GetPOIListResponse::set_isend(::google::protobuf::uint32 value) {
  set_has_isend();
  isend_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetPOIListResponse.IsEnd)
}

// required .micromsg.SKBuiltinBuffer_t Buff = 6;
inline bool GetPOIListResponse::has_buff() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetPOIListResponse::set_has_buff() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetPOIListResponse::clear_has_buff() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetPOIListResponse::clear_buff() {
  if (buff_ != NULL) buff_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_buff();
}
inline const ::micromsg::SKBuiltinBuffer_t& GetPOIListResponse::buff() const {
  // @@protoc_insertion_point(field_get:micromsg.GetPOIListResponse.Buff)
  return buff_ != NULL ? *buff_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* GetPOIListResponse::mutable_buff() {
  set_has_buff();
  if (buff_ == NULL) {
    buff_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetPOIListResponse.Buff)
  return buff_;
}
inline ::micromsg::SKBuiltinBuffer_t* GetPOIListResponse::release_buff() {
  // @@protoc_insertion_point(field_release:micromsg.GetPOIListResponse.Buff)
  clear_has_buff();
  ::micromsg::SKBuiltinBuffer_t* temp = buff_;
  buff_ = NULL;
  return temp;
}
inline void GetPOIListResponse::set_allocated_buff(::micromsg::SKBuiltinBuffer_t* buff) {
  delete buff_;
  buff_ = buff;
  if (buff) {
    set_has_buff();
  } else {
    clear_has_buff();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetPOIListResponse.Buff)
}

// optional string Url = 7;
inline bool GetPOIListResponse::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetPOIListResponse::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetPOIListResponse::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetPOIListResponse::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& GetPOIListResponse::url() const {
  // @@protoc_insertion_point(field_get:micromsg.GetPOIListResponse.Url)
  return url_.GetNoArena();
}
inline void GetPOIListResponse::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetPOIListResponse.Url)
}
#if LANG_CXX11
inline void GetPOIListResponse::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetPOIListResponse.Url)
}
#endif
inline void GetPOIListResponse::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetPOIListResponse.Url)
}
inline void GetPOIListResponse::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetPOIListResponse.Url)
}
inline ::std::string* GetPOIListResponse::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:micromsg.GetPOIListResponse.Url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPOIListResponse::release_url() {
  // @@protoc_insertion_point(field_release:micromsg.GetPOIListResponse.Url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPOIListResponse::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetPOIListResponse.Url)
}

// optional string LogoUrl = 8;
inline bool GetPOIListResponse::has_logourl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetPOIListResponse::set_has_logourl() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetPOIListResponse::clear_has_logourl() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetPOIListResponse::clear_logourl() {
  logourl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_logourl();
}
inline const ::std::string& GetPOIListResponse::logourl() const {
  // @@protoc_insertion_point(field_get:micromsg.GetPOIListResponse.LogoUrl)
  return logourl_.GetNoArena();
}
inline void GetPOIListResponse::set_logourl(const ::std::string& value) {
  set_has_logourl();
  logourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetPOIListResponse.LogoUrl)
}
#if LANG_CXX11
inline void GetPOIListResponse::set_logourl(::std::string&& value) {
  set_has_logourl();
  logourl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetPOIListResponse.LogoUrl)
}
#endif
inline void GetPOIListResponse::set_logourl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_logourl();
  logourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetPOIListResponse.LogoUrl)
}
inline void GetPOIListResponse::set_logourl(const char* value, size_t size) {
  set_has_logourl();
  logourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetPOIListResponse.LogoUrl)
}
inline ::std::string* GetPOIListResponse::mutable_logourl() {
  set_has_logourl();
  // @@protoc_insertion_point(field_mutable:micromsg.GetPOIListResponse.LogoUrl)
  return logourl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPOIListResponse::release_logourl() {
  // @@protoc_insertion_point(field_release:micromsg.GetPOIListResponse.LogoUrl)
  clear_has_logourl();
  return logourl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPOIListResponse::set_allocated_logourl(::std::string* logourl) {
  if (logourl != NULL) {
    set_has_logourl();
  } else {
    clear_has_logourl();
  }
  logourl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logourl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetPOIListResponse.LogoUrl)
}

// optional string Text = 9;
inline bool GetPOIListResponse::has_text() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetPOIListResponse::set_has_text() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetPOIListResponse::clear_has_text() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetPOIListResponse::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& GetPOIListResponse::text() const {
  // @@protoc_insertion_point(field_get:micromsg.GetPOIListResponse.Text)
  return text_.GetNoArena();
}
inline void GetPOIListResponse::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetPOIListResponse.Text)
}
#if LANG_CXX11
inline void GetPOIListResponse::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetPOIListResponse.Text)
}
#endif
inline void GetPOIListResponse::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetPOIListResponse.Text)
}
inline void GetPOIListResponse::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetPOIListResponse.Text)
}
inline ::std::string* GetPOIListResponse::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:micromsg.GetPOIListResponse.Text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPOIListResponse::release_text() {
  // @@protoc_insertion_point(field_release:micromsg.GetPOIListResponse.Text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPOIListResponse::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetPOIListResponse.Text)
}

// optional string OpenId = 10;
inline bool GetPOIListResponse::has_openid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetPOIListResponse::set_has_openid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetPOIListResponse::clear_has_openid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetPOIListResponse::clear_openid() {
  openid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_openid();
}
inline const ::std::string& GetPOIListResponse::openid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetPOIListResponse.OpenId)
  return openid_.GetNoArena();
}
inline void GetPOIListResponse::set_openid(const ::std::string& value) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetPOIListResponse.OpenId)
}
#if LANG_CXX11
inline void GetPOIListResponse::set_openid(::std::string&& value) {
  set_has_openid();
  openid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetPOIListResponse.OpenId)
}
#endif
inline void GetPOIListResponse::set_openid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetPOIListResponse.OpenId)
}
inline void GetPOIListResponse::set_openid(const char* value, size_t size) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetPOIListResponse.OpenId)
}
inline ::std::string* GetPOIListResponse::mutable_openid() {
  set_has_openid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetPOIListResponse.OpenId)
  return openid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPOIListResponse::release_openid() {
  // @@protoc_insertion_point(field_release:micromsg.GetPOIListResponse.OpenId)
  clear_has_openid();
  return openid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPOIListResponse::set_allocated_openid(::std::string* openid) {
  if (openid != NULL) {
    set_has_openid();
  } else {
    clear_has_openid();
  }
  openid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetPOIListResponse.OpenId)
}

// -------------------------------------------------------------------

// FacingMember

// optional string UserName = 1;
inline bool FacingMember::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacingMember::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacingMember::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacingMember::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& FacingMember::username() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingMember.UserName)
  return username_.GetNoArena();
}
inline void FacingMember::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.FacingMember.UserName)
}
#if LANG_CXX11
inline void FacingMember::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.FacingMember.UserName)
}
#endif
inline void FacingMember::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.FacingMember.UserName)
}
inline void FacingMember::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.FacingMember.UserName)
}
inline ::std::string* FacingMember::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.FacingMember.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FacingMember::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.FacingMember.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FacingMember::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.FacingMember.UserName)
}

// optional string EncodeUserName = 2;
inline bool FacingMember::has_encodeusername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacingMember::set_has_encodeusername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacingMember::clear_has_encodeusername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacingMember::clear_encodeusername() {
  encodeusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_encodeusername();
}
inline const ::std::string& FacingMember::encodeusername() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingMember.EncodeUserName)
  return encodeusername_.GetNoArena();
}
inline void FacingMember::set_encodeusername(const ::std::string& value) {
  set_has_encodeusername();
  encodeusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.FacingMember.EncodeUserName)
}
#if LANG_CXX11
inline void FacingMember::set_encodeusername(::std::string&& value) {
  set_has_encodeusername();
  encodeusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.FacingMember.EncodeUserName)
}
#endif
inline void FacingMember::set_encodeusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_encodeusername();
  encodeusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.FacingMember.EncodeUserName)
}
inline void FacingMember::set_encodeusername(const char* value, size_t size) {
  set_has_encodeusername();
  encodeusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.FacingMember.EncodeUserName)
}
inline ::std::string* FacingMember::mutable_encodeusername() {
  set_has_encodeusername();
  // @@protoc_insertion_point(field_mutable:micromsg.FacingMember.EncodeUserName)
  return encodeusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FacingMember::release_encodeusername() {
  // @@protoc_insertion_point(field_release:micromsg.FacingMember.EncodeUserName)
  clear_has_encodeusername();
  return encodeusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FacingMember::set_allocated_encodeusername(::std::string* encodeusername) {
  if (encodeusername != NULL) {
    set_has_encodeusername();
  } else {
    clear_has_encodeusername();
  }
  encodeusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), encodeusername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.FacingMember.EncodeUserName)
}

// optional string NickName = 3;
inline bool FacingMember::has_nickname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FacingMember::set_has_nickname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FacingMember::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FacingMember::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& FacingMember::nickname() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingMember.NickName)
  return nickname_.GetNoArena();
}
inline void FacingMember::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.FacingMember.NickName)
}
#if LANG_CXX11
inline void FacingMember::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.FacingMember.NickName)
}
#endif
inline void FacingMember::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.FacingMember.NickName)
}
inline void FacingMember::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.FacingMember.NickName)
}
inline ::std::string* FacingMember::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:micromsg.FacingMember.NickName)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FacingMember::release_nickname() {
  // @@protoc_insertion_point(field_release:micromsg.FacingMember.NickName)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FacingMember::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.FacingMember.NickName)
}

// optional string SmallImgUrl = 4;
inline bool FacingMember::has_smallimgurl() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FacingMember::set_has_smallimgurl() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FacingMember::clear_has_smallimgurl() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FacingMember::clear_smallimgurl() {
  smallimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_smallimgurl();
}
inline const ::std::string& FacingMember::smallimgurl() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingMember.SmallImgUrl)
  return smallimgurl_.GetNoArena();
}
inline void FacingMember::set_smallimgurl(const ::std::string& value) {
  set_has_smallimgurl();
  smallimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.FacingMember.SmallImgUrl)
}
#if LANG_CXX11
inline void FacingMember::set_smallimgurl(::std::string&& value) {
  set_has_smallimgurl();
  smallimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.FacingMember.SmallImgUrl)
}
#endif
inline void FacingMember::set_smallimgurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_smallimgurl();
  smallimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.FacingMember.SmallImgUrl)
}
inline void FacingMember::set_smallimgurl(const char* value, size_t size) {
  set_has_smallimgurl();
  smallimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.FacingMember.SmallImgUrl)
}
inline ::std::string* FacingMember::mutable_smallimgurl() {
  set_has_smallimgurl();
  // @@protoc_insertion_point(field_mutable:micromsg.FacingMember.SmallImgUrl)
  return smallimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FacingMember::release_smallimgurl() {
  // @@protoc_insertion_point(field_release:micromsg.FacingMember.SmallImgUrl)
  clear_has_smallimgurl();
  return smallimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FacingMember::set_allocated_smallimgurl(::std::string* smallimgurl) {
  if (smallimgurl != NULL) {
    set_has_smallimgurl();
  } else {
    clear_has_smallimgurl();
  }
  smallimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), smallimgurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.FacingMember.SmallImgUrl)
}

// required uint32 Status = 5;
inline bool FacingMember::has_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FacingMember::set_has_status() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FacingMember::clear_has_status() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FacingMember::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 FacingMember::status() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingMember.Status)
  return status_;
}
inline void FacingMember::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:micromsg.FacingMember.Status)
}

// -------------------------------------------------------------------

// FacingCreateChatRoomRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool FacingCreateChatRoomRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FacingCreateChatRoomRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FacingCreateChatRoomRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FacingCreateChatRoomRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& FacingCreateChatRoomRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingCreateChatRoomRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* FacingCreateChatRoomRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.FacingCreateChatRoomRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* FacingCreateChatRoomRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.FacingCreateChatRoomRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void FacingCreateChatRoomRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.FacingCreateChatRoomRequest.BaseRequest)
}

// required uint32 OpCode = 2;
inline bool FacingCreateChatRoomRequest::has_opcode() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FacingCreateChatRoomRequest::set_has_opcode() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FacingCreateChatRoomRequest::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FacingCreateChatRoomRequest::clear_opcode() {
  opcode_ = 0u;
  clear_has_opcode();
}
inline ::google::protobuf::uint32 FacingCreateChatRoomRequest::opcode() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingCreateChatRoomRequest.OpCode)
  return opcode_;
}
inline void FacingCreateChatRoomRequest::set_opcode(::google::protobuf::uint32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.FacingCreateChatRoomRequest.OpCode)
}

// optional string PassWord = 3;
inline bool FacingCreateChatRoomRequest::has_password() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacingCreateChatRoomRequest::set_has_password() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacingCreateChatRoomRequest::clear_has_password() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacingCreateChatRoomRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& FacingCreateChatRoomRequest::password() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingCreateChatRoomRequest.PassWord)
  return password_.GetNoArena();
}
inline void FacingCreateChatRoomRequest::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.FacingCreateChatRoomRequest.PassWord)
}
#if LANG_CXX11
inline void FacingCreateChatRoomRequest::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.FacingCreateChatRoomRequest.PassWord)
}
#endif
inline void FacingCreateChatRoomRequest::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.FacingCreateChatRoomRequest.PassWord)
}
inline void FacingCreateChatRoomRequest::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.FacingCreateChatRoomRequest.PassWord)
}
inline ::std::string* FacingCreateChatRoomRequest::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:micromsg.FacingCreateChatRoomRequest.PassWord)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FacingCreateChatRoomRequest::release_password() {
  // @@protoc_insertion_point(field_release:micromsg.FacingCreateChatRoomRequest.PassWord)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FacingCreateChatRoomRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:micromsg.FacingCreateChatRoomRequest.PassWord)
}

// required float Longitude = 4;
inline bool FacingCreateChatRoomRequest::has_longitude() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FacingCreateChatRoomRequest::set_has_longitude() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FacingCreateChatRoomRequest::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FacingCreateChatRoomRequest::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline float FacingCreateChatRoomRequest::longitude() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingCreateChatRoomRequest.Longitude)
  return longitude_;
}
inline void FacingCreateChatRoomRequest::set_longitude(float value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.FacingCreateChatRoomRequest.Longitude)
}

// required float Latitude = 5;
inline bool FacingCreateChatRoomRequest::has_latitude() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FacingCreateChatRoomRequest::set_has_latitude() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FacingCreateChatRoomRequest::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FacingCreateChatRoomRequest::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline float FacingCreateChatRoomRequest::latitude() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingCreateChatRoomRequest.Latitude)
  return latitude_;
}
inline void FacingCreateChatRoomRequest::set_latitude(float value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.FacingCreateChatRoomRequest.Latitude)
}

// required int32 Precision = 6;
inline bool FacingCreateChatRoomRequest::has_precision() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void FacingCreateChatRoomRequest::set_has_precision() {
  _has_bits_[0] |= 0x00000100u;
}
inline void FacingCreateChatRoomRequest::clear_has_precision() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void FacingCreateChatRoomRequest::clear_precision() {
  precision_ = 0;
  clear_has_precision();
}
inline ::google::protobuf::int32 FacingCreateChatRoomRequest::precision() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingCreateChatRoomRequest.Precision)
  return precision_;
}
inline void FacingCreateChatRoomRequest::set_precision(::google::protobuf::int32 value) {
  set_has_precision();
  precision_ = value;
  // @@protoc_insertion_point(field_set:micromsg.FacingCreateChatRoomRequest.Precision)
}

// optional string MacAddr = 7;
inline bool FacingCreateChatRoomRequest::has_macaddr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacingCreateChatRoomRequest::set_has_macaddr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacingCreateChatRoomRequest::clear_has_macaddr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacingCreateChatRoomRequest::clear_macaddr() {
  macaddr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_macaddr();
}
inline const ::std::string& FacingCreateChatRoomRequest::macaddr() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingCreateChatRoomRequest.MacAddr)
  return macaddr_.GetNoArena();
}
inline void FacingCreateChatRoomRequest::set_macaddr(const ::std::string& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.FacingCreateChatRoomRequest.MacAddr)
}
#if LANG_CXX11
inline void FacingCreateChatRoomRequest::set_macaddr(::std::string&& value) {
  set_has_macaddr();
  macaddr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.FacingCreateChatRoomRequest.MacAddr)
}
#endif
inline void FacingCreateChatRoomRequest::set_macaddr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.FacingCreateChatRoomRequest.MacAddr)
}
inline void FacingCreateChatRoomRequest::set_macaddr(const char* value, size_t size) {
  set_has_macaddr();
  macaddr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.FacingCreateChatRoomRequest.MacAddr)
}
inline ::std::string* FacingCreateChatRoomRequest::mutable_macaddr() {
  set_has_macaddr();
  // @@protoc_insertion_point(field_mutable:micromsg.FacingCreateChatRoomRequest.MacAddr)
  return macaddr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FacingCreateChatRoomRequest::release_macaddr() {
  // @@protoc_insertion_point(field_release:micromsg.FacingCreateChatRoomRequest.MacAddr)
  clear_has_macaddr();
  return macaddr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FacingCreateChatRoomRequest::set_allocated_macaddr(::std::string* macaddr) {
  if (macaddr != NULL) {
    set_has_macaddr();
  } else {
    clear_has_macaddr();
  }
  macaddr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), macaddr);
  // @@protoc_insertion_point(field_set_allocated:micromsg.FacingCreateChatRoomRequest.MacAddr)
}

// optional string CellId = 8;
inline bool FacingCreateChatRoomRequest::has_cellid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FacingCreateChatRoomRequest::set_has_cellid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FacingCreateChatRoomRequest::clear_has_cellid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FacingCreateChatRoomRequest::clear_cellid() {
  cellid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cellid();
}
inline const ::std::string& FacingCreateChatRoomRequest::cellid() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingCreateChatRoomRequest.CellId)
  return cellid_.GetNoArena();
}
inline void FacingCreateChatRoomRequest::set_cellid(const ::std::string& value) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.FacingCreateChatRoomRequest.CellId)
}
#if LANG_CXX11
inline void FacingCreateChatRoomRequest::set_cellid(::std::string&& value) {
  set_has_cellid();
  cellid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.FacingCreateChatRoomRequest.CellId)
}
#endif
inline void FacingCreateChatRoomRequest::set_cellid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.FacingCreateChatRoomRequest.CellId)
}
inline void FacingCreateChatRoomRequest::set_cellid(const char* value, size_t size) {
  set_has_cellid();
  cellid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.FacingCreateChatRoomRequest.CellId)
}
inline ::std::string* FacingCreateChatRoomRequest::mutable_cellid() {
  set_has_cellid();
  // @@protoc_insertion_point(field_mutable:micromsg.FacingCreateChatRoomRequest.CellId)
  return cellid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FacingCreateChatRoomRequest::release_cellid() {
  // @@protoc_insertion_point(field_release:micromsg.FacingCreateChatRoomRequest.CellId)
  clear_has_cellid();
  return cellid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FacingCreateChatRoomRequest::set_allocated_cellid(::std::string* cellid) {
  if (cellid != NULL) {
    set_has_cellid();
  } else {
    clear_has_cellid();
  }
  cellid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cellid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.FacingCreateChatRoomRequest.CellId)
}

// optional int32 GPSSource = 9;
inline bool FacingCreateChatRoomRequest::has_gpssource() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void FacingCreateChatRoomRequest::set_has_gpssource() {
  _has_bits_[0] |= 0x00000200u;
}
inline void FacingCreateChatRoomRequest::clear_has_gpssource() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void FacingCreateChatRoomRequest::clear_gpssource() {
  gpssource_ = 0;
  clear_has_gpssource();
}
inline ::google::protobuf::int32 FacingCreateChatRoomRequest::gpssource() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingCreateChatRoomRequest.GPSSource)
  return gpssource_;
}
inline void FacingCreateChatRoomRequest::set_gpssource(::google::protobuf::int32 value) {
  set_has_gpssource();
  gpssource_ = value;
  // @@protoc_insertion_point(field_set:micromsg.FacingCreateChatRoomRequest.GPSSource)
}

// optional string Ticket = 10;
inline bool FacingCreateChatRoomRequest::has_ticket() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FacingCreateChatRoomRequest::set_has_ticket() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FacingCreateChatRoomRequest::clear_has_ticket() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FacingCreateChatRoomRequest::clear_ticket() {
  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ticket();
}
inline const ::std::string& FacingCreateChatRoomRequest::ticket() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingCreateChatRoomRequest.Ticket)
  return ticket_.GetNoArena();
}
inline void FacingCreateChatRoomRequest::set_ticket(const ::std::string& value) {
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.FacingCreateChatRoomRequest.Ticket)
}
#if LANG_CXX11
inline void FacingCreateChatRoomRequest::set_ticket(::std::string&& value) {
  set_has_ticket();
  ticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.FacingCreateChatRoomRequest.Ticket)
}
#endif
inline void FacingCreateChatRoomRequest::set_ticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.FacingCreateChatRoomRequest.Ticket)
}
inline void FacingCreateChatRoomRequest::set_ticket(const char* value, size_t size) {
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.FacingCreateChatRoomRequest.Ticket)
}
inline ::std::string* FacingCreateChatRoomRequest::mutable_ticket() {
  set_has_ticket();
  // @@protoc_insertion_point(field_mutable:micromsg.FacingCreateChatRoomRequest.Ticket)
  return ticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FacingCreateChatRoomRequest::release_ticket() {
  // @@protoc_insertion_point(field_release:micromsg.FacingCreateChatRoomRequest.Ticket)
  clear_has_ticket();
  return ticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FacingCreateChatRoomRequest::set_allocated_ticket(::std::string* ticket) {
  if (ticket != NULL) {
    set_has_ticket();
  } else {
    clear_has_ticket();
  }
  ticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ticket);
  // @@protoc_insertion_point(field_set_allocated:micromsg.FacingCreateChatRoomRequest.Ticket)
}

// -------------------------------------------------------------------

// FacingCreateChatRoomResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool FacingCreateChatRoomResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FacingCreateChatRoomResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FacingCreateChatRoomResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FacingCreateChatRoomResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& FacingCreateChatRoomResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingCreateChatRoomResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* FacingCreateChatRoomResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.FacingCreateChatRoomResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* FacingCreateChatRoomResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.FacingCreateChatRoomResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void FacingCreateChatRoomResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.FacingCreateChatRoomResponse.BaseResponse)
}

// optional string Ticket = 2;
inline bool FacingCreateChatRoomResponse::has_ticket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FacingCreateChatRoomResponse::set_has_ticket() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FacingCreateChatRoomResponse::clear_has_ticket() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FacingCreateChatRoomResponse::clear_ticket() {
  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ticket();
}
inline const ::std::string& FacingCreateChatRoomResponse::ticket() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingCreateChatRoomResponse.Ticket)
  return ticket_.GetNoArena();
}
inline void FacingCreateChatRoomResponse::set_ticket(const ::std::string& value) {
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.FacingCreateChatRoomResponse.Ticket)
}
#if LANG_CXX11
inline void FacingCreateChatRoomResponse::set_ticket(::std::string&& value) {
  set_has_ticket();
  ticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.FacingCreateChatRoomResponse.Ticket)
}
#endif
inline void FacingCreateChatRoomResponse::set_ticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.FacingCreateChatRoomResponse.Ticket)
}
inline void FacingCreateChatRoomResponse::set_ticket(const char* value, size_t size) {
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.FacingCreateChatRoomResponse.Ticket)
}
inline ::std::string* FacingCreateChatRoomResponse::mutable_ticket() {
  set_has_ticket();
  // @@protoc_insertion_point(field_mutable:micromsg.FacingCreateChatRoomResponse.Ticket)
  return ticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FacingCreateChatRoomResponse::release_ticket() {
  // @@protoc_insertion_point(field_release:micromsg.FacingCreateChatRoomResponse.Ticket)
  clear_has_ticket();
  return ticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FacingCreateChatRoomResponse::set_allocated_ticket(::std::string* ticket) {
  if (ticket != NULL) {
    set_has_ticket();
  } else {
    clear_has_ticket();
  }
  ticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ticket);
  // @@protoc_insertion_point(field_set_allocated:micromsg.FacingCreateChatRoomResponse.Ticket)
}

// required uint32 MemberCount = 3;
inline bool FacingCreateChatRoomResponse::has_membercount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FacingCreateChatRoomResponse::set_has_membercount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FacingCreateChatRoomResponse::clear_has_membercount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FacingCreateChatRoomResponse::clear_membercount() {
  membercount_ = 0u;
  clear_has_membercount();
}
inline ::google::protobuf::uint32 FacingCreateChatRoomResponse::membercount() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingCreateChatRoomResponse.MemberCount)
  return membercount_;
}
inline void FacingCreateChatRoomResponse::set_membercount(::google::protobuf::uint32 value) {
  set_has_membercount();
  membercount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.FacingCreateChatRoomResponse.MemberCount)
}

// repeated .micromsg.FacingMember MemberList = 4;
inline int FacingCreateChatRoomResponse::memberlist_size() const {
  return memberlist_.size();
}
inline void FacingCreateChatRoomResponse::clear_memberlist() {
  memberlist_.Clear();
}
inline const ::micromsg::FacingMember& FacingCreateChatRoomResponse::memberlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.FacingCreateChatRoomResponse.MemberList)
  return memberlist_.Get(index);
}
inline ::micromsg::FacingMember* FacingCreateChatRoomResponse::mutable_memberlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.FacingCreateChatRoomResponse.MemberList)
  return memberlist_.Mutable(index);
}
inline ::micromsg::FacingMember* FacingCreateChatRoomResponse::add_memberlist() {
  // @@protoc_insertion_point(field_add:micromsg.FacingCreateChatRoomResponse.MemberList)
  return memberlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::FacingMember >*
FacingCreateChatRoomResponse::mutable_memberlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.FacingCreateChatRoomResponse.MemberList)
  return &memberlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::FacingMember >&
FacingCreateChatRoomResponse::memberlist() const {
  // @@protoc_insertion_point(field_list:micromsg.FacingCreateChatRoomResponse.MemberList)
  return memberlist_;
}

// optional string ChatRoomName = 5;
inline bool FacingCreateChatRoomResponse::has_chatroomname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FacingCreateChatRoomResponse::set_has_chatroomname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FacingCreateChatRoomResponse::clear_has_chatroomname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FacingCreateChatRoomResponse::clear_chatroomname() {
  chatroomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_chatroomname();
}
inline const ::std::string& FacingCreateChatRoomResponse::chatroomname() const {
  // @@protoc_insertion_point(field_get:micromsg.FacingCreateChatRoomResponse.ChatRoomName)
  return chatroomname_.GetNoArena();
}
inline void FacingCreateChatRoomResponse::set_chatroomname(const ::std::string& value) {
  set_has_chatroomname();
  chatroomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.FacingCreateChatRoomResponse.ChatRoomName)
}
#if LANG_CXX11
inline void FacingCreateChatRoomResponse::set_chatroomname(::std::string&& value) {
  set_has_chatroomname();
  chatroomname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.FacingCreateChatRoomResponse.ChatRoomName)
}
#endif
inline void FacingCreateChatRoomResponse::set_chatroomname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_chatroomname();
  chatroomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.FacingCreateChatRoomResponse.ChatRoomName)
}
inline void FacingCreateChatRoomResponse::set_chatroomname(const char* value, size_t size) {
  set_has_chatroomname();
  chatroomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.FacingCreateChatRoomResponse.ChatRoomName)
}
inline ::std::string* FacingCreateChatRoomResponse::mutable_chatroomname() {
  set_has_chatroomname();
  // @@protoc_insertion_point(field_mutable:micromsg.FacingCreateChatRoomResponse.ChatRoomName)
  return chatroomname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FacingCreateChatRoomResponse::release_chatroomname() {
  // @@protoc_insertion_point(field_release:micromsg.FacingCreateChatRoomResponse.ChatRoomName)
  clear_has_chatroomname();
  return chatroomname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FacingCreateChatRoomResponse::set_allocated_chatroomname(::std::string* chatroomname) {
  if (chatroomname != NULL) {
    set_has_chatroomname();
  } else {
    clear_has_chatroomname();
  }
  chatroomname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chatroomname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.FacingCreateChatRoomResponse.ChatRoomName)
}

// -------------------------------------------------------------------

// GetAddressRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetAddressRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAddressRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAddressRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAddressRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetAddressRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAddressRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetAddressRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetAddressRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetAddressRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetAddressRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetAddressRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAddressRequest.BaseRequest)
}

// required double Longitude = 2;
inline bool GetAddressRequest::has_longitude() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetAddressRequest::set_has_longitude() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetAddressRequest::clear_has_longitude() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetAddressRequest::clear_longitude() {
  longitude_ = 0;
  clear_has_longitude();
}
inline double GetAddressRequest::longitude() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAddressRequest.Longitude)
  return longitude_;
}
inline void GetAddressRequest::set_longitude(double value) {
  set_has_longitude();
  longitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetAddressRequest.Longitude)
}

// required double Latitude = 3;
inline bool GetAddressRequest::has_latitude() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetAddressRequest::set_has_latitude() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetAddressRequest::clear_has_latitude() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetAddressRequest::clear_latitude() {
  latitude_ = 0;
  clear_has_latitude();
}
inline double GetAddressRequest::latitude() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAddressRequest.Latitude)
  return latitude_;
}
inline void GetAddressRequest::set_latitude(double value) {
  set_has_latitude();
  latitude_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetAddressRequest.Latitude)
}

// -------------------------------------------------------------------

// GetAddressResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetAddressResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetAddressResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetAddressResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetAddressResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetAddressResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAddressResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetAddressResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetAddressResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetAddressResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetAddressResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetAddressResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAddressResponse.BaseResponse)
}

// optional string RetJson = 2;
inline bool GetAddressResponse::has_retjson() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAddressResponse::set_has_retjson() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAddressResponse::clear_has_retjson() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAddressResponse::clear_retjson() {
  retjson_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_retjson();
}
inline const ::std::string& GetAddressResponse::retjson() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAddressResponse.RetJson)
  return retjson_.GetNoArena();
}
inline void GetAddressResponse::set_retjson(const ::std::string& value) {
  set_has_retjson();
  retjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetAddressResponse.RetJson)
}
#if LANG_CXX11
inline void GetAddressResponse::set_retjson(::std::string&& value) {
  set_has_retjson();
  retjson_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetAddressResponse.RetJson)
}
#endif
inline void GetAddressResponse::set_retjson(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_retjson();
  retjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetAddressResponse.RetJson)
}
inline void GetAddressResponse::set_retjson(const char* value, size_t size) {
  set_has_retjson();
  retjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetAddressResponse.RetJson)
}
inline ::std::string* GetAddressResponse::mutable_retjson() {
  set_has_retjson();
  // @@protoc_insertion_point(field_mutable:micromsg.GetAddressResponse.RetJson)
  return retjson_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAddressResponse::release_retjson() {
  // @@protoc_insertion_point(field_release:micromsg.GetAddressResponse.RetJson)
  clear_has_retjson();
  return retjson_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAddressResponse::set_allocated_retjson(::std::string* retjson) {
  if (retjson != NULL) {
    set_has_retjson();
  } else {
    clear_has_retjson();
  }
  retjson_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retjson);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAddressResponse.RetJson)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace micromsg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mmlbs_2eproto__INCLUDED
