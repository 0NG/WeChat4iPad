// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mmopenapi.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mmopenapi.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace micromsg {
class GetA8KeyReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetA8KeyReq> {
} _GetA8KeyReq_default_instance_;
class JSAPIPermissionBitSetDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<JSAPIPermissionBitSet> {
} _JSAPIPermissionBitSet_default_instance_;
class GeneralControlBitSetDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GeneralControlBitSet> {
} _GeneralControlBitSet_default_instance_;
class DeepLinkBitSetDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DeepLinkBitSet> {
} _DeepLinkBitSet_default_instance_;
class BizApiInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BizApiInfo> {
} _BizApiInfo_default_instance_;
class BizScopeInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BizScopeInfo> {
} _BizScopeInfo_default_instance_;
class YYBStructDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<YYBStruct> {
} _YYBStruct_default_instance_;
class GetA8KeyRespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetA8KeyResp> {
} _GetA8KeyResp_default_instance_;
class AdAppListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AdAppList> {
} _AdAppList_default_instance_;
class GiftListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GiftList> {
} _GiftList_default_instance_;
class GiftEntranceItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GiftEntranceItem> {
} _GiftEntranceItem_default_instance_;
class RcAppListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RcAppList> {
} _RcAppList_default_instance_;
class GetGameIntroListRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetGameIntroListRequest> {
} _GetGameIntroListRequest_default_instance_;
class GameIntroDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GameIntro> {
} _GameIntro_default_instance_;
class GetGameIntroListResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetGameIntroListResponse> {
} _GetGameIntroListResponse_default_instance_;
class GetAppPersonalInfoListRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetAppPersonalInfoListRequest> {
} _GetAppPersonalInfoListRequest_default_instance_;
class AppPersonalInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AppPersonalInfo> {
} _AppPersonalInfo_default_instance_;
class GetAppPersonalInfoListResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetAppPersonalInfoListResponse> {
} _GetAppPersonalInfoListResponse_default_instance_;
class GetSuggestionAppDetailRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetSuggestionAppDetailRequest> {
} _GetSuggestionAppDetailRequest_default_instance_;
class GetSuggestionAppDetailResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetSuggestionAppDetailResponse> {
} _GetSuggestionAppDetailResponse_default_instance_;
class UserGameRankInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UserGameRankInfo> {
} _UserGameRankInfo_default_instance_;
class GetGameRankListRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetGameRankListRequest> {
} _GetGameRankListRequest_default_instance_;
class GetGameRankListResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetGameRankListResponse> {
} _GetGameRankListResponse_default_instance_;
class GetAppInfoListRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetAppInfoListRequest> {
} _GetAppInfoListRequest_default_instance_;
class BizAppInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BizAppInfo> {
} _BizAppInfo_default_instance_;
class GetAppInfoListResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetAppInfoListResponse> {
} _GetAppInfoListResponse_default_instance_;
class AppCenterRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AppCenterRequest> {
} _AppCenterRequest_default_instance_;
class AppCenterResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AppCenterResponse> {
} _AppCenterResponse_default_instance_;
class GetAuthAppListRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetAuthAppListRequest> {
} _GetAuthAppListRequest_default_instance_;
class AuthAppBaseInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AuthAppBaseInfo> {
} _AuthAppBaseInfo_default_instance_;
class GetAuthAppListResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetAuthAppListResponse> {
} _GetAuthAppListResponse_default_instance_;
class GetAuthAppInfoRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetAuthAppInfoRequest> {
} _GetAuthAppInfoRequest_default_instance_;
class GetAuthAppInfoResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetAuthAppInfoResponse> {
} _GetAuthAppInfoResponse_default_instance_;
class SetAppSettingRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SetAppSettingRequest> {
} _SetAppSettingRequest_default_instance_;
class SetAppSettingResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SetAppSettingResponse> {
} _SetAppSettingResponse_default_instance_;
class AppSettingReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AppSettingReq> {
} _AppSettingReq_default_instance_;
class AppSettingDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AppSetting> {
} _AppSetting_default_instance_;
class GetAppSettingRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetAppSettingRequest> {
} _GetAppSettingRequest_default_instance_;
class GetAppSettingResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetAppSettingResponse> {
} _GetAppSettingResponse_default_instance_;
class GetSuggestionAppListRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetSuggestionAppListRequest> {
} _GetSuggestionAppListRequest_default_instance_;
class GetSuggestionAppListResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetSuggestionAppListResponse> {
} _GetSuggestionAppListResponse_default_instance_;
class JSOAuthRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<JSOAuthRequest> {
} _JSOAuthRequest_default_instance_;
class JSOAuthResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<JSOAuthResponse> {
} _JSOAuthResponse_default_instance_;
class SetOAuthScopeRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SetOAuthScopeRequest> {
} _SetOAuthScopeRequest_default_instance_;
class SetOAuthScopeResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SetOAuthScopeResponse> {
} _SetOAuthScopeResponse_default_instance_;
class GetUserInfoInAppRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetUserInfoInAppRequest> {
} _GetUserInfoInAppRequest_default_instance_;
class UserInfoInAppDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UserInfoInApp> {
} _UserInfoInApp_default_instance_;
class GetUserInfoInAppResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetUserInfoInAppResponse> {
} _GetUserInfoInAppResponse_default_instance_;
class CheckCanSubscribeBizRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CheckCanSubscribeBizRequest> {
} _CheckCanSubscribeBizRequest_default_instance_;
class CheckCanSubscribeBizResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CheckCanSubscribeBizResponse> {
} _CheckCanSubscribeBizResponse_default_instance_;

namespace protobuf_mmopenapi_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[50];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyReq, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyReq, opcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyReq, a2key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyReq, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyReq, scope_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyReq, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyReq, requrl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyReq, friendusername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyReq, friendqq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyReq, scene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyReq, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyReq, bundleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyReq, a2keynew_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyReq, reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyReq, fontscale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyReq, flag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyReq, nettype_),
  4,
  11,
  5,
  6,
  7,
  8,
  9,
  0,
  12,
  13,
  1,
  2,
  10,
  14,
  15,
  16,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSAPIPermissionBitSet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSAPIPermissionBitSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSAPIPermissionBitSet, bitvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSAPIPermissionBitSet, bitvalue2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSAPIPermissionBitSet, bitvalue3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSAPIPermissionBitSet, bitvalue4_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralControlBitSet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralControlBitSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralControlBitSet, bitvalue_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeepLinkBitSet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeepLinkBitSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeepLinkBitSet, bitvalue_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizApiInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizApiInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizApiInfo, apiname_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizScopeInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizScopeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizScopeInfo, scope_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizScopeInfo, scopestatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizScopeInfo, scopedesc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizScopeInfo, apicount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizScopeInfo, apilist_),
  0,
  2,
  1,
  3,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YYBStruct, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YYBStruct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YYBStruct, androiddownloadflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YYBStruct, downloadurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YYBStruct, apkmd5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YYBStruct, preemptiveurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YYBStruct, extinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YYBStruct, downloadtipswording_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YYBStruct, supportedversioncode_),
  5,
  0,
  1,
  2,
  3,
  4,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyResp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyResp, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyResp, fullurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyResp, a8key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyResp, actioncode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyResp, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyResp, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyResp, jsapipermission_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyResp, generalcontrolbitset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyResp, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyResp, shareurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyResp, scopecount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyResp, scopelist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyResp, antispamticket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyResp, ssid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyResp, mid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyResp, deeplinkbitset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetA8KeyResp, jsapicontrolbytes_),
  9,
  0,
  1,
  14,
  2,
  3,
  10,
  11,
  4,
  5,
  15,
  ~0u,
  6,
  7,
  8,
  12,
  13,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdAppList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdAppList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdAppList, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdAppList, appcoverurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdAppList, appdownloadurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdAppList, androidapkmd5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdAppList, appname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdAppList, appiconurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdAppList, appsnsdesc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdAppList, androidpackagename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdAppList, googleplaydownloadurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdAppList, syyb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdAppList, extasxml_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  10,
  9,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftList, giftid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftList, iconurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftList, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftList, desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftList, gifturl_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftEntranceItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftEntranceItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftEntranceItem, celltitle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftEntranceItem, enrancewording_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GiftEntranceItem, allgifturl_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcAppList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcAppList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcAppList, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcAppList, appname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcAppList, appiconurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcAppList, appdesc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcAppList, appdownloadurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcAppList, appcoverurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcAppList, appdevinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcAppList, appscreenshotcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcAppList, appscreenshotlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcAppList, appsnsdesc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcAppList, appsnapshoturl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcAppList, appdetaildesc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcAppList, friendcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcAppList, apptype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcAppList, androidapkmd5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcAppList, androidpackagename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcAppList, appnamezhtw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcAppList, appnameenus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcAppList, googleplaydownloadurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcAppList, appsuggestioniconurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcAppList, appsuggestionintrourl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcAppList, syyb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcAppList, applaunchscheme_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcAppList, googleplaydownloadflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcAppList, appinfoflag_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  20,
  ~0u,
  7,
  8,
  9,
  21,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  19,
  18,
  22,
  23,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameIntroListRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameIntroListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameIntroListRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameIntroListRequest, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameIntroListRequest, appidlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameIntroListRequest, deviceplatform_),
  1,
  2,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameIntro, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameIntro, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameIntro, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameIntro, gameintropage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameIntro, androidapkmd5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameIntro, appdownloadurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameIntro, googleplaydownloadurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameIntro, syyb_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameIntroListResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameIntroListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameIntroListResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameIntroListResponse, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameIntroListResponse, gameintrolist_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppPersonalInfoListRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppPersonalInfoListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppPersonalInfoListRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppPersonalInfoListRequest, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppPersonalInfoListRequest, appidlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppPersonalInfoListRequest, scene_),
  0,
  1,
  ~0u,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppPersonalInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppPersonalInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppPersonalInfo, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppPersonalInfo, personalsettingxml_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppPersonalInfoListResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppPersonalInfoListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppPersonalInfoListResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppPersonalInfoListResponse, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppPersonalInfoListResponse, apppersonalinfolist_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionAppDetailRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionAppDetailRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionAppDetailRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionAppDetailRequest, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionAppDetailRequest, lang_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionAppDetailResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionAppDetailResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionAppDetailResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionAppDetailResponse, rcdetail_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserGameRankInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserGameRankInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserGameRankInfo, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserGameRankInfo, score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserGameRankInfo, rank_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameRankListRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameRankListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameRankListRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameRankListRequest, appid_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameRankListResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameRankListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameRankListResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameRankListResponse, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameRankListResponse, ranklist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameRankListResponse, friendscount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameRankListResponse, hasreportscore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetGameRankListResponse, syyb_),
  0,
  2,
  ~0u,
  3,
  4,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppInfoListRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppInfoListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppInfoListRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppInfoListRequest, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppInfoListRequest, appidlist_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppInfo, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppInfo, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppInfo, name4enus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppInfo, description4enus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppInfo, name4zhtw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppInfo, description4zhtw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppInfo, iconurlsd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppInfo, iconurlhd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppInfo, storeurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppInfo, watermarkurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppInfo, androidpackagename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppInfo, androidsignature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppInfo, apptype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppInfo, devinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppInfo, appinfoflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppInfo, appversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppInfo, appupdateversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppInfo, iconurlmdpi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppInfo, downloadurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppInfo, downloadurlmd5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BizAppInfo, googleplaydownloadurl_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  19,
  20,
  21,
  15,
  16,
  17,
  18,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppInfoListResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppInfoListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppInfoListResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppInfoListResponse, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppInfoListResponse, appinfolist_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppCenterRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppCenterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppCenterRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppCenterRequest, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppCenterRequest, reqbuf_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppCenterResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppCenterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppCenterResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppCenterResponse, respbuf_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAuthAppListRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAuthAppListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAuthAppListRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAuthAppListRequest, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAuthAppListRequest, lang_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthAppBaseInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthAppBaseInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthAppBaseInfo, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthAppBaseInfo, apptype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthAppBaseInfo, iconurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthAppBaseInfo, appname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthAppBaseInfo, appflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthAppBaseInfo, externinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthAppBaseInfo, authinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AuthAppBaseInfo, devinfo_),
  0,
  1,
  2,
  3,
  7,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAuthAppListResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAuthAppListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAuthAppListResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAuthAppListResponse, appcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAuthAppListResponse, authapplist_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAuthAppInfoRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAuthAppInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAuthAppInfoRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAuthAppInfoRequest, appid_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAuthAppInfoResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAuthAppInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAuthAppInfoResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAuthAppInfoResponse, baseinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAuthAppInfoResponse, authinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAuthAppInfoResponse, devinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAuthAppInfoResponse, externinfo_),
  3,
  4,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetAppSettingRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetAppSettingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetAppSettingRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetAppSettingRequest, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetAppSettingRequest, cmdid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetAppSettingRequest, cmdvalue_),
  2,
  0,
  3,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetAppSettingResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetAppSettingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetAppSettingResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetAppSettingResponse, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetAppSettingResponse, appflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetAppSettingResponse, cmdid_),
  1,
  0,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppSettingReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppSettingReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppSettingReq, appid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppSetting, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppSetting, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppSetting, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppSetting, appflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AppSetting, openid_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppSettingRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppSettingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppSettingRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppSettingRequest, appcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppSettingRequest, appsettingreqlist_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppSettingResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppSettingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppSettingResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppSettingResponse, appcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetAppSettingResponse, settinglist_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionAppListRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionAppListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionAppListRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionAppListRequest, apptype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionAppListRequest, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionAppListRequest, limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionAppListRequest, lang_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionAppListRequest, installedappcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionAppListRequest, installedapplist_),
  1,
  2,
  3,
  4,
  0,
  5,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionAppListResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionAppListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionAppListResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionAppListResponse, rccount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionAppListResponse, rclist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionAppListResponse, isinternaldownload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionAppListResponse, adcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionAppListResponse, adlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionAppListResponse, giftcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionAppListResponse, giftlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSuggestionAppListResponse, giftentranceitem_),
  0,
  2,
  ~0u,
  3,
  4,
  ~0u,
  5,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSOAuthRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSOAuthRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSOAuthRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSOAuthRequest, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSOAuthRequest, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSOAuthRequest, scope_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSOAuthRequest, signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSOAuthRequest, signature_method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSOAuthRequest, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSOAuthRequest, nonce_),
  7,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSOAuthResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSOAuthResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSOAuthResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSOAuthResponse, scopecount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSOAuthResponse, scopelist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JSOAuthResponse, oauthtitle_),
  1,
  2,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetOAuthScopeRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetOAuthScopeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetOAuthScopeRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetOAuthScopeRequest, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetOAuthScopeRequest, scopecount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetOAuthScopeRequest, scopelist_),
  1,
  0,
  2,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetOAuthScopeResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetOAuthScopeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetOAuthScopeResponse, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetOAuthScopeResponse, scopecount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetOAuthScopeResponse, scopelist_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetUserInfoInAppRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetUserInfoInAppRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetUserInfoInAppRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetUserInfoInAppRequest, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetUserInfoInAppRequest, usercount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetUserInfoInAppRequest, usernamelist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetUserInfoInAppRequest, scene_),
  1,
  0,
  2,
  ~0u,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfoInApp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfoInApp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfoInApp, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfoInApp, personalsettingxml_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetUserInfoInAppResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetUserInfoInAppResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetUserInfoInAppResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetUserInfoInAppResponse, usercount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetUserInfoInAppResponse, userinfolist_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckCanSubscribeBizRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckCanSubscribeBizRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckCanSubscribeBizRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckCanSubscribeBizRequest, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckCanSubscribeBizRequest, tousername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckCanSubscribeBizRequest, extinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckCanSubscribeBizRequest, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckCanSubscribeBizRequest, packnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckCanSubscribeBizRequest, androidpacknamelist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckCanSubscribeBizRequest, iosbunddleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckCanSubscribeBizRequest, fromurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckCanSubscribeBizRequest, scene_),
  5,
  6,
  0,
  1,
  2,
  7,
  ~0u,
  3,
  4,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckCanSubscribeBizResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckCanSubscribeBizResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckCanSubscribeBizResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckCanSubscribeBizResponse, checkticket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckCanSubscribeBizResponse, tousername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckCanSubscribeBizResponse, webviewurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckCanSubscribeBizResponse, showword_),
  4,
  0,
  1,
  2,
  3,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 22, sizeof(GetA8KeyReq)},
  { 39, 48, sizeof(JSAPIPermissionBitSet)},
  { 52, 58, sizeof(GeneralControlBitSet)},
  { 59, 65, sizeof(DeepLinkBitSet)},
  { 66, 72, sizeof(BizApiInfo)},
  { 73, 83, sizeof(BizScopeInfo)},
  { 88, 100, sizeof(YYBStruct)},
  { 107, 129, sizeof(GetA8KeyResp)},
  { 146, 162, sizeof(AdAppList)},
  { 173, 183, sizeof(GiftList)},
  { 188, 196, sizeof(GiftEntranceItem)},
  { 199, 229, sizeof(RcAppList)},
  { 254, 263, sizeof(GetGameIntroListRequest)},
  { 267, 278, sizeof(GameIntro)},
  { 284, 292, sizeof(GetGameIntroListResponse)},
  { 295, 304, sizeof(GetAppPersonalInfoListRequest)},
  { 308, 315, sizeof(AppPersonalInfo)},
  { 317, 325, sizeof(GetAppPersonalInfoListResponse)},
  { 328, 336, sizeof(GetSuggestionAppDetailRequest)},
  { 339, 346, sizeof(GetSuggestionAppDetailResponse)},
  { 348, 356, sizeof(UserGameRankInfo)},
  { 359, 366, sizeof(GetGameRankListRequest)},
  { 368, 379, sizeof(GetGameRankListResponse)},
  { 385, 393, sizeof(GetAppInfoListRequest)},
  { 396, 423, sizeof(BizAppInfo)},
  { 445, 453, sizeof(GetAppInfoListResponse)},
  { 456, 464, sizeof(AppCenterRequest)},
  { 467, 474, sizeof(AppCenterResponse)},
  { 476, 484, sizeof(GetAuthAppListRequest)},
  { 487, 500, sizeof(AuthAppBaseInfo)},
  { 508, 516, sizeof(GetAuthAppListResponse)},
  { 519, 526, sizeof(GetAuthAppInfoRequest)},
  { 528, 538, sizeof(GetAuthAppInfoResponse)},
  { 543, 552, sizeof(SetAppSettingRequest)},
  { 556, 565, sizeof(SetAppSettingResponse)},
  { 569, 575, sizeof(AppSettingReq)},
  { 576, 584, sizeof(AppSetting)},
  { 587, 595, sizeof(GetAppSettingRequest)},
  { 598, 606, sizeof(GetAppSettingResponse)},
  { 609, 621, sizeof(GetSuggestionAppListRequest)},
  { 628, 642, sizeof(GetSuggestionAppListResponse)},
  { 651, 664, sizeof(JSOAuthRequest)},
  { 672, 681, sizeof(JSOAuthResponse)},
  { 685, 694, sizeof(SetOAuthScopeRequest)},
  { 698, 706, sizeof(SetOAuthScopeResponse)},
  { 709, 719, sizeof(GetUserInfoInAppRequest)},
  { 724, 731, sizeof(UserInfoInApp)},
  { 733, 741, sizeof(GetUserInfoInAppResponse)},
  { 744, 759, sizeof(CheckCanSubscribeBizRequest)},
  { 769, 779, sizeof(CheckCanSubscribeBizResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetA8KeyReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_JSAPIPermissionBitSet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GeneralControlBitSet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeepLinkBitSet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BizApiInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BizScopeInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_YYBStruct_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetA8KeyResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AdAppList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GiftList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GiftEntranceItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RcAppList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetGameIntroListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GameIntro_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetGameIntroListResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetAppPersonalInfoListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AppPersonalInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetAppPersonalInfoListResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetSuggestionAppDetailRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetSuggestionAppDetailResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserGameRankInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetGameRankListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetGameRankListResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetAppInfoListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BizAppInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetAppInfoListResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AppCenterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AppCenterResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetAuthAppListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AuthAppBaseInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetAuthAppListResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetAuthAppInfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetAuthAppInfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetAppSettingRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetAppSettingResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AppSettingReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AppSetting_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetAppSettingRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetAppSettingResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetSuggestionAppListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetSuggestionAppListResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_JSOAuthRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_JSOAuthResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetOAuthScopeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetOAuthScopeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetUserInfoInAppRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserInfoInApp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetUserInfoInAppResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CheckCanSubscribeBizRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CheckCanSubscribeBizResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "mmopenapi.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 50);
}

}  // namespace

void TableStruct::Shutdown() {
  _GetA8KeyReq_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _JSAPIPermissionBitSet_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _GeneralControlBitSet_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _DeepLinkBitSet_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _BizApiInfo_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _BizScopeInfo_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _YYBStruct_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _GetA8KeyResp_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _AdAppList_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _GiftList_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _GiftEntranceItem_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _RcAppList_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _GetGameIntroListRequest_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _GameIntro_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _GetGameIntroListResponse_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _GetAppPersonalInfoListRequest_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _AppPersonalInfo_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _GetAppPersonalInfoListResponse_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _GetSuggestionAppDetailRequest_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _GetSuggestionAppDetailResponse_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _UserGameRankInfo_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _GetGameRankListRequest_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
  _GetGameRankListResponse_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
  _GetAppInfoListRequest_default_instance_.Shutdown();
  delete file_level_metadata[23].reflection;
  _BizAppInfo_default_instance_.Shutdown();
  delete file_level_metadata[24].reflection;
  _GetAppInfoListResponse_default_instance_.Shutdown();
  delete file_level_metadata[25].reflection;
  _AppCenterRequest_default_instance_.Shutdown();
  delete file_level_metadata[26].reflection;
  _AppCenterResponse_default_instance_.Shutdown();
  delete file_level_metadata[27].reflection;
  _GetAuthAppListRequest_default_instance_.Shutdown();
  delete file_level_metadata[28].reflection;
  _AuthAppBaseInfo_default_instance_.Shutdown();
  delete file_level_metadata[29].reflection;
  _GetAuthAppListResponse_default_instance_.Shutdown();
  delete file_level_metadata[30].reflection;
  _GetAuthAppInfoRequest_default_instance_.Shutdown();
  delete file_level_metadata[31].reflection;
  _GetAuthAppInfoResponse_default_instance_.Shutdown();
  delete file_level_metadata[32].reflection;
  _SetAppSettingRequest_default_instance_.Shutdown();
  delete file_level_metadata[33].reflection;
  _SetAppSettingResponse_default_instance_.Shutdown();
  delete file_level_metadata[34].reflection;
  _AppSettingReq_default_instance_.Shutdown();
  delete file_level_metadata[35].reflection;
  _AppSetting_default_instance_.Shutdown();
  delete file_level_metadata[36].reflection;
  _GetAppSettingRequest_default_instance_.Shutdown();
  delete file_level_metadata[37].reflection;
  _GetAppSettingResponse_default_instance_.Shutdown();
  delete file_level_metadata[38].reflection;
  _GetSuggestionAppListRequest_default_instance_.Shutdown();
  delete file_level_metadata[39].reflection;
  _GetSuggestionAppListResponse_default_instance_.Shutdown();
  delete file_level_metadata[40].reflection;
  _JSOAuthRequest_default_instance_.Shutdown();
  delete file_level_metadata[41].reflection;
  _JSOAuthResponse_default_instance_.Shutdown();
  delete file_level_metadata[42].reflection;
  _SetOAuthScopeRequest_default_instance_.Shutdown();
  delete file_level_metadata[43].reflection;
  _SetOAuthScopeResponse_default_instance_.Shutdown();
  delete file_level_metadata[44].reflection;
  _GetUserInfoInAppRequest_default_instance_.Shutdown();
  delete file_level_metadata[45].reflection;
  _UserInfoInApp_default_instance_.Shutdown();
  delete file_level_metadata[46].reflection;
  _GetUserInfoInAppResponse_default_instance_.Shutdown();
  delete file_level_metadata[47].reflection;
  _CheckCanSubscribeBizRequest_default_instance_.Shutdown();
  delete file_level_metadata[48].reflection;
  _CheckCanSubscribeBizResponse_default_instance_.Shutdown();
  delete file_level_metadata[49].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::micromsg::protobuf_mmbuiltintype_2eproto::InitDefaults();
  ::micromsg::protobuf_mmbase_2eproto::InitDefaults();
  _GetA8KeyReq_default_instance_.DefaultConstruct();
  _JSAPIPermissionBitSet_default_instance_.DefaultConstruct();
  _GeneralControlBitSet_default_instance_.DefaultConstruct();
  _DeepLinkBitSet_default_instance_.DefaultConstruct();
  _BizApiInfo_default_instance_.DefaultConstruct();
  _BizScopeInfo_default_instance_.DefaultConstruct();
  _YYBStruct_default_instance_.DefaultConstruct();
  _GetA8KeyResp_default_instance_.DefaultConstruct();
  _AdAppList_default_instance_.DefaultConstruct();
  _GiftList_default_instance_.DefaultConstruct();
  _GiftEntranceItem_default_instance_.DefaultConstruct();
  _RcAppList_default_instance_.DefaultConstruct();
  _GetGameIntroListRequest_default_instance_.DefaultConstruct();
  _GameIntro_default_instance_.DefaultConstruct();
  _GetGameIntroListResponse_default_instance_.DefaultConstruct();
  _GetAppPersonalInfoListRequest_default_instance_.DefaultConstruct();
  _AppPersonalInfo_default_instance_.DefaultConstruct();
  _GetAppPersonalInfoListResponse_default_instance_.DefaultConstruct();
  _GetSuggestionAppDetailRequest_default_instance_.DefaultConstruct();
  _GetSuggestionAppDetailResponse_default_instance_.DefaultConstruct();
  _UserGameRankInfo_default_instance_.DefaultConstruct();
  _GetGameRankListRequest_default_instance_.DefaultConstruct();
  _GetGameRankListResponse_default_instance_.DefaultConstruct();
  _GetAppInfoListRequest_default_instance_.DefaultConstruct();
  _BizAppInfo_default_instance_.DefaultConstruct();
  _GetAppInfoListResponse_default_instance_.DefaultConstruct();
  _AppCenterRequest_default_instance_.DefaultConstruct();
  _AppCenterResponse_default_instance_.DefaultConstruct();
  _GetAuthAppListRequest_default_instance_.DefaultConstruct();
  _AuthAppBaseInfo_default_instance_.DefaultConstruct();
  _GetAuthAppListResponse_default_instance_.DefaultConstruct();
  _GetAuthAppInfoRequest_default_instance_.DefaultConstruct();
  _GetAuthAppInfoResponse_default_instance_.DefaultConstruct();
  _SetAppSettingRequest_default_instance_.DefaultConstruct();
  _SetAppSettingResponse_default_instance_.DefaultConstruct();
  _AppSettingReq_default_instance_.DefaultConstruct();
  _AppSetting_default_instance_.DefaultConstruct();
  _GetAppSettingRequest_default_instance_.DefaultConstruct();
  _GetAppSettingResponse_default_instance_.DefaultConstruct();
  _GetSuggestionAppListRequest_default_instance_.DefaultConstruct();
  _GetSuggestionAppListResponse_default_instance_.DefaultConstruct();
  _JSOAuthRequest_default_instance_.DefaultConstruct();
  _JSOAuthResponse_default_instance_.DefaultConstruct();
  _SetOAuthScopeRequest_default_instance_.DefaultConstruct();
  _SetOAuthScopeResponse_default_instance_.DefaultConstruct();
  _GetUserInfoInAppRequest_default_instance_.DefaultConstruct();
  _UserInfoInApp_default_instance_.DefaultConstruct();
  _GetUserInfoInAppResponse_default_instance_.DefaultConstruct();
  _CheckCanSubscribeBizRequest_default_instance_.DefaultConstruct();
  _CheckCanSubscribeBizResponse_default_instance_.DefaultConstruct();
  _GetA8KeyReq_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _GetA8KeyReq_default_instance_.get_mutable()->a2key_ = const_cast< ::micromsg::SKBuiltinBuffer_t*>(
      ::micromsg::SKBuiltinBuffer_t::internal_default_instance());
  _GetA8KeyReq_default_instance_.get_mutable()->appid_ = const_cast< ::micromsg::SKBuiltinString_t*>(
      ::micromsg::SKBuiltinString_t::internal_default_instance());
  _GetA8KeyReq_default_instance_.get_mutable()->scope_ = const_cast< ::micromsg::SKBuiltinString_t*>(
      ::micromsg::SKBuiltinString_t::internal_default_instance());
  _GetA8KeyReq_default_instance_.get_mutable()->state_ = const_cast< ::micromsg::SKBuiltinString_t*>(
      ::micromsg::SKBuiltinString_t::internal_default_instance());
  _GetA8KeyReq_default_instance_.get_mutable()->requrl_ = const_cast< ::micromsg::SKBuiltinString_t*>(
      ::micromsg::SKBuiltinString_t::internal_default_instance());
  _GetA8KeyReq_default_instance_.get_mutable()->a2keynew_ = const_cast< ::micromsg::SKBuiltinBuffer_t*>(
      ::micromsg::SKBuiltinBuffer_t::internal_default_instance());
  _GetA8KeyResp_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _GetA8KeyResp_default_instance_.get_mutable()->jsapipermission_ = const_cast< ::micromsg::JSAPIPermissionBitSet*>(
      ::micromsg::JSAPIPermissionBitSet::internal_default_instance());
  _GetA8KeyResp_default_instance_.get_mutable()->generalcontrolbitset_ = const_cast< ::micromsg::GeneralControlBitSet*>(
      ::micromsg::GeneralControlBitSet::internal_default_instance());
  _GetA8KeyResp_default_instance_.get_mutable()->deeplinkbitset_ = const_cast< ::micromsg::DeepLinkBitSet*>(
      ::micromsg::DeepLinkBitSet::internal_default_instance());
  _GetA8KeyResp_default_instance_.get_mutable()->jsapicontrolbytes_ = const_cast< ::micromsg::SKBuiltinBuffer_t*>(
      ::micromsg::SKBuiltinBuffer_t::internal_default_instance());
  _AdAppList_default_instance_.get_mutable()->syyb_ = const_cast< ::micromsg::YYBStruct*>(
      ::micromsg::YYBStruct::internal_default_instance());
  _RcAppList_default_instance_.get_mutable()->syyb_ = const_cast< ::micromsg::YYBStruct*>(
      ::micromsg::YYBStruct::internal_default_instance());
  _GetGameIntroListRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _GameIntro_default_instance_.get_mutable()->syyb_ = const_cast< ::micromsg::YYBStruct*>(
      ::micromsg::YYBStruct::internal_default_instance());
  _GetGameIntroListResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _GetAppPersonalInfoListRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _GetAppPersonalInfoListResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _GetSuggestionAppDetailRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _GetSuggestionAppDetailResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _GetSuggestionAppDetailResponse_default_instance_.get_mutable()->rcdetail_ = const_cast< ::micromsg::RcAppList*>(
      ::micromsg::RcAppList::internal_default_instance());
  _GetGameRankListRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _GetGameRankListResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _GetGameRankListResponse_default_instance_.get_mutable()->syyb_ = const_cast< ::micromsg::YYBStruct*>(
      ::micromsg::YYBStruct::internal_default_instance());
  _GetAppInfoListRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _GetAppInfoListResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _AppCenterRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _AppCenterRequest_default_instance_.get_mutable()->reqbuf_ = const_cast< ::micromsg::SKBuiltinBuffer_t*>(
      ::micromsg::SKBuiltinBuffer_t::internal_default_instance());
  _AppCenterResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _AppCenterResponse_default_instance_.get_mutable()->respbuf_ = const_cast< ::micromsg::SKBuiltinBuffer_t*>(
      ::micromsg::SKBuiltinBuffer_t::internal_default_instance());
  _GetAuthAppListRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _GetAuthAppListResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _GetAuthAppInfoRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _GetAuthAppInfoResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _GetAuthAppInfoResponse_default_instance_.get_mutable()->baseinfo_ = const_cast< ::micromsg::AuthAppBaseInfo*>(
      ::micromsg::AuthAppBaseInfo::internal_default_instance());
  _SetAppSettingRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _SetAppSettingResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _GetAppSettingRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _GetAppSettingResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _GetSuggestionAppListRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _GetSuggestionAppListResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _GetSuggestionAppListResponse_default_instance_.get_mutable()->giftentranceitem_ = const_cast< ::micromsg::GiftEntranceItem*>(
      ::micromsg::GiftEntranceItem::internal_default_instance());
  _JSOAuthRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _JSOAuthResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _SetOAuthScopeRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _SetOAuthScopeResponse_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _GetUserInfoInAppRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _GetUserInfoInAppResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _CheckCanSubscribeBizRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _CheckCanSubscribeBizResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\017mmopenapi.proto\022\010micromsg\032\023mmbuiltinty"
      "pe.proto\032\014mmbase.proto\"\364\003\n\013GetA8KeyReq\022*"
      "\n\013BaseRequest\030\001 \002(\0132\025.micromsg.BaseReque"
      "st\022\016\n\006OpCode\030\002 \002(\r\022*\n\005A2Key\030\003 \001(\0132\033.micr"
      "omsg.SKBuiltinBuffer_t\022*\n\005AppID\030\004 \001(\0132\033."
      "micromsg.SKBuiltinString_t\022*\n\005Scope\030\005 \001("
      "\0132\033.micromsg.SKBuiltinString_t\022*\n\005State\030"
      "\006 \001(\0132\033.micromsg.SKBuiltinString_t\022+\n\006Re"
      "qUrl\030\007 \001(\0132\033.micromsg.SKBuiltinString_t\022"
      "\026\n\016FriendUserName\030\010 \001(\t\022\020\n\010FriendQQ\030\t \001("
      "\r\022\r\n\005Scene\030\n \001(\r\022\020\n\010UserName\030\013 \001(\t\022\020\n\010Bu"
      "ndleID\030\014 \001(\t\022-\n\010A2KeyNew\030\r \001(\0132\033.microms"
      "g.SKBuiltinBuffer_t\022\016\n\006Reason\030\016 \001(\r\022\021\n\tF"
      "ontScale\030\017 \001(\r\022\014\n\004Flag\030\020 \001(\r\022\017\n\007NetType\030"
      "\021 \001(\t\"b\n\025JSAPIPermissionBitSet\022\020\n\010BitVal"
      "ue\030\001 \002(\r\022\021\n\tBitValue2\030\002 \001(\r\022\021\n\tBitValue3"
      "\030\003 \001(\r\022\021\n\tBitValue4\030\004 \001(\r\"(\n\024GeneralCont"
      "rolBitSet\022\020\n\010BitValue\030\001 \002(\r\"\"\n\016DeepLinkB"
      "itSet\022\020\n\010BitValue\030\001 \002(\004\"\035\n\nBizApiInfo\022\017\n"
      "\007ApiName\030\001 \001(\t\"~\n\014BizScopeInfo\022\r\n\005Scope\030"
      "\001 \001(\t\022\023\n\013ScopeStatus\030\002 \002(\r\022\021\n\tScopeDesc\030"
      "\003 \001(\t\022\020\n\010ApiCount\030\004 \002(\r\022%\n\007ApiList\030\005 \003(\013"
      "2\024.micromsg.BizApiInfo\"\260\001\n\tYYBStruct\022\033\n\023"
      "AndroidDownloadFlag\030\001 \001(\r\022\023\n\013DownloadUrl"
      "\030\002 \001(\t\022\016\n\006ApkMd5\030\003 \001(\t\022\025\n\rPreemptiveUrl\030"
      "\004 \001(\t\022\017\n\007ExtInfo\030\005 \001(\t\022\033\n\023DownloadTipsWo"
      "rding\030\006 \001(\t\022\034\n\024SupportedVersionCode\030\007 \001("
      "\005\"\210\004\n\014GetA8KeyResp\022,\n\014BaseResponse\030\001 \002(\013"
      "2\026.micromsg.BaseResponse\022\017\n\007FullURL\030\002 \001("
      "\t\022\r\n\005A8Key\030\003 \001(\t\022\022\n\nActionCode\030\004 \001(\r\022\r\n\005"
      "Title\030\005 \001(\t\022\017\n\007Content\030\006 \001(\t\0228\n\017JSAPIPer"
      "mission\030\007 \001(\0132\037.micromsg.JSAPIPermission"
      "BitSet\022<\n\024GeneralControlBitSet\030\010 \001(\0132\036.m"
      "icromsg.GeneralControlBitSet\022\020\n\010UserName"
      "\030\t \001(\t\022\020\n\010ShareURL\030\017 \001(\t\022\022\n\nScopeCount\030\020"
      " \001(\r\022)\n\tScopeList\030\021 \003(\0132\026.micromsg.BizSc"
      "opeInfo\022\026\n\016AntispamTicket\030\022 \001(\t\022\014\n\004SSID\030"
      "\024 \001(\t\022\013\n\003MID\030\025 \001(\t\0220\n\016DeepLinkBitSet\030\026 \001"
      "(\0132\030.micromsg.DeepLinkBitSet\0226\n\021JSAPICon"
      "trolBytes\030\027 \001(\0132\033.micromsg.SKBuiltinBuff"
      "er_t\"\207\002\n\tAdAppList\022\r\n\005AppID\030\001 \001(\t\022\023\n\013App"
      "CoverUrl\030\002 \001(\t\022\026\n\016AppDownloadUrl\030\003 \001(\t\022\025"
      "\n\rAndroidApkMd5\030\004 \001(\t\022\017\n\007AppName\030\005 \001(\t\022\022"
      "\n\nAppIconUrl\030\006 \001(\t\022\022\n\nAppSnsDesc\030\007 \001(\t\022\032"
      "\n\022AndroidPackageName\030\010 \001(\t\022\035\n\025GooglePlay"
      "DownloadUrl\030\t \001(\t\022!\n\004SYYB\030\n \001(\0132\023.microm"
      "sg.YYBStruct\022\020\n\010ExtAsXML\030\013 \001(\t\"Y\n\010GiftLi"
      "st\022\016\n\006GiftID\030\001 \001(\t\022\017\n\007IconUrl\030\002 \001(\t\022\r\n\005T"
      "itle\030\003 \001(\t\022\014\n\004Desc\030\004 \001(\t\022\017\n\007GiftUrl\030\005 \001("
      "\t\"Q\n\020GiftEntranceItem\022\021\n\tCellTitle\030\001 \001(\t"
      "\022\026\n\016EnranceWording\030\002 \001(\t\022\022\n\nAllGiftUrl\030\003"
      " \001(\t\"\370\004\n\tRcAppList\022\r\n\005AppID\030\001 \001(\t\022\017\n\007App"
      "Name\030\002 \001(\t\022\022\n\nAppIconUrl\030\003 \001(\t\022\017\n\007AppDes"
      "c\030\004 \001(\t\022\026\n\016AppDownloadUrl\030\005 \001(\t\022\023\n\013AppCo"
      "verUrl\030\006 \001(\t\022\022\n\nAppDevInfo\030\007 \001(\t\022\032\n\022AppS"
      "creenShotCount\030\010 \002(\005\0226\n\021AppScreenShotLis"
      "t\030\t \003(\0132\033.micromsg.SKBuiltinString_t\022\022\n\n"
      "AppSnsDesc\030\n \001(\t\022\026\n\016AppSnapshotUrl\030\013 \001(\t"
      "\022\025\n\rAppDetailDesc\030\014 \001(\t\022\023\n\013FriendCount\030\r"
      " \001(\r\022\017\n\007AppType\030\016 \001(\t\022\025\n\rAndroidApkMd5\030\017"
      " \001(\t\022\032\n\022AndroidPackageName\030\020 \001(\t\022\023\n\013AppN"
      "amezhTW\030\021 \001(\t\022\023\n\013AppNameEnUS\030\022 \001(\t\022\035\n\025Go"
      "oglePlayDownloadUrl\030\023 \001(\t\022\034\n\024AppSuggesti"
      "onIconUrl\030\024 \001(\t\022\035\n\025AppSuggestionIntroUrl"
      "\030\025 \001(\t\022!\n\004SYYB\030\026 \001(\0132\023.micromsg.YYBStruc"
      "t\022\027\n\017AppLaunchScheme\030\027 \001(\t\022\036\n\026GooglePlay"
      "DownloadFlag\030\030 \001(\r\022\023\n\013AppInfoFlag\030\031 \001(\r\""
      "\234\001\n\027GetGameIntroListRequest\022*\n\013BaseReque"
      "st\030\001 \002(\0132\025.micromsg.BaseRequest\022\r\n\005Count"
      "\030\002 \002(\r\022.\n\tAppIdList\030\003 \003(\0132\033.micromsg.SKB"
      "uiltinString_t\022\026\n\016DevicePlatform\030\004 \001(\t\"\242"
      "\001\n\tGameIntro\022\r\n\005AppID\030\001 \001(\t\022\025\n\rGameIntro"
      "Page\030\002 \001(\t\022\025\n\rAndroidApkMd5\030\003 \001(\t\022\026\n\016App"
      "DownloadUrl\030\004 \001(\t\022\035\n\025GooglePlayDownloadU"
      "rl\030\005 \001(\t\022!\n\004SYYB\030\006 \001(\0132\023.micromsg.YYBStr"
      "uct\"\203\001\n\030GetGameIntroListResponse\022,\n\014Base"
      "Response\030\001 \002(\0132\026.micromsg.BaseResponse\022\r"
      "\n\005Count\030\002 \002(\r\022*\n\rGameIntroList\030\003 \003(\0132\023.m"
      "icromsg.GameIntro\"\231\001\n\035GetAppPersonalInfo"
      "ListRequest\022*\n\013BaseRequest\030\001 \002(\0132\025.micro"
      "msg.BaseRequest\022\r\n\005Count\030\002 \002(\r\022.\n\tAppIdL"
      "ist\030\003 \003(\0132\033.micromsg.SKBuiltinString_t\022\r"
      "\n\005Scene\030\004 \001(\r\"<\n\017AppPersonalInfo\022\r\n\005AppI"
      "D\030\001 \001(\t\022\032\n\022PersonalSettingXml\030\002 \001(\t\"\225\001\n\036"
      "GetAppPersonalInfoListResponse\022,\n\014BaseRe"
      "sponse\030\001 \002(\0132\026.micromsg.BaseResponse\022\r\n\005"
      "Count\030\002 \002(\r\0226\n\023AppPersonalInfoList\030\003 \003(\013"
      "2\031.micromsg.AppPersonalInfo\"h\n\035GetSugges"
      "tionAppDetailRequest\022*\n\013BaseRequest\030\001 \002("
      "\0132\025.micromsg.BaseRequest\022\r\n\005AppID\030\002 \001(\t\022"
      "\014\n\004Lang\030\003 \001(\t\"u\n\036GetSuggestionAppDetailR"
      "esponse\022,\n\014BaseResponse\030\001 \002(\0132\026.micromsg"
      ".BaseResponse\022%\n\010RcDetail\030\002 \002(\0132\023.microm"
      "sg.RcAppList\"A\n\020UserGameRankInfo\022\020\n\010User"
      "Name\030\001 \001(\t\022\r\n\005Score\030\002 \002(\r\022\014\n\004Rank\030\003 \001(\r\""
      "S\n\026GetGameRankListRequest\022*\n\013BaseRequest"
      "\030\001 \002(\0132\025.micromsg.BaseRequest\022\r\n\005AppID\030\002"
      " \001(\t\"\325\001\n\027GetGameRankListResponse\022,\n\014Base"
      "Response\030\001 \002(\0132\026.micromsg.BaseResponse\022\r"
      "\n\005Count\030\002 \002(\r\022,\n\010RankList\030\003 \003(\0132\032.microm"
      "sg.UserGameRankInfo\022\024\n\014FriendsCount\030\004 \001("
      "\r\022\026\n\016HasReportScore\030\005 \001(\r\022!\n\004SYYB\030\006 \001(\0132"
      "\023.micromsg.YYBStruct\"\202\001\n\025GetAppInfoListR"
      "equest\022*\n\013BaseRequest\030\001 \002(\0132\025.micromsg.B"
      "aseRequest\022\r\n\005Count\030\002 \002(\005\022.\n\tAppIdList\030\003"
      " \003(\0132\033.micromsg.SKBuiltinString_t\"\342\003\n\nBi"
      "zAppInfo\022\r\n\005AppId\030\001 \001(\t\022\014\n\004Name\030\002 \001(\t\022\023\n"
      "\013Description\030\003 \001(\t\022\021\n\tName4EnUS\030\004 \001(\t\022\030\n"
      "\020Description4EnUS\030\005 \001(\t\022\021\n\tName4ZhTW\030\006 \001"
      "(\t\022\030\n\020Description4ZhTW\030\007 \001(\t\022\021\n\tIconUrlS"
      "D\030\010 \001(\t\022\021\n\tIconUrlHD\030\t \001(\t\022\020\n\010StoreUrl\030\n"
      " \001(\t\022\024\n\014WatermarkUrl\030\013 \001(\t\022\032\n\022AndroidPac"
      "kageName\030\014 \001(\t\022\030\n\020AndroidSignature\030\r \001(\t"
      "\022\017\n\007AppType\030\016 \001(\t\022\017\n\007DevInfo\030\017 \001(\t\022\023\n\013Ap"
      "pInfoFlag\030\020 \002(\r\022\022\n\nAppVersion\030\021 \002(\r\022\030\n\020A"
      "ppUpdateVersion\030\022 \001(\r\022\023\n\013IconUrlMDPI\030\023 \001"
      "(\t\022\023\n\013DownloadUrl\030\024 \001(\t\022\026\n\016DownloadUrlMd"
      "5\030\025 \001(\t\022\035\n\025GooglePlayDownloadUrl\030\026 \001(\t\"\200"
      "\001\n\026GetAppInfoListResponse\022,\n\014BaseRespons"
      "e\030\001 \002(\0132\026.micromsg.BaseResponse\022\r\n\005Count"
      "\030\002 \002(\005\022)\n\013AppInfoList\030\003 \003(\0132\024.micromsg.B"
      "izAppInfo\"y\n\020AppCenterRequest\022*\n\013BaseReq"
      "uest\030\001 \002(\0132\025.micromsg.BaseRequest\022\014\n\004Typ"
      "e\030\002 \002(\r\022+\n\006ReqBuf\030\003 \002(\0132\033.micromsg.SKBui"
      "ltinBuffer_t\"o\n\021AppCenterResponse\022,\n\014Bas"
      "eResponse\030\001 \002(\0132\026.micromsg.BaseResponse\022"
      ",\n\007RespBuf\030\002 \002(\0132\033.micromsg.SKBuiltinBuf"
      "fer_t\"_\n\025GetAuthAppListRequest\022*\n\013BaseRe"
      "quest\030\001 \002(\0132\025.micromsg.BaseRequest\022\014\n\004Ty"
      "pe\030\002 \002(\r\022\014\n\004Lang\030\003 \001(\t\"\233\001\n\017AuthAppBaseIn"
      "fo\022\r\n\005AppID\030\001 \001(\t\022\017\n\007AppType\030\002 \001(\t\022\017\n\007Ic"
      "onUrl\030\003 \001(\t\022\017\n\007AppName\030\004 \001(\t\022\017\n\007AppFlag\030"
      "\005 \002(\r\022\022\n\nExternInfo\030\006 \001(\t\022\020\n\010AuthInfo\030\007 "
      "\001(\t\022\017\n\007DevInfo\030\010 \001(\t\"\210\001\n\026GetAuthAppListR"
      "esponse\022,\n\014BaseResponse\030\001 \002(\0132\026.micromsg"
      ".BaseResponse\022\020\n\010AppCount\030\002 \002(\r\022.\n\013AuthA"
      "ppList\030\003 \003(\0132\031.micromsg.AuthAppBaseInfo\""
      "R\n\025GetAuthAppInfoRequest\022*\n\013BaseRequest\030"
      "\001 \002(\0132\025.micromsg.BaseRequest\022\r\n\005AppID\030\002 "
      "\001(\t\"\252\001\n\026GetAuthAppInfoResponse\022,\n\014BaseRe"
      "sponse\030\001 \002(\0132\026.micromsg.BaseResponse\022+\n\010"
      "BaseInfo\030\002 \002(\0132\031.micromsg.AuthAppBaseInf"
      "o\022\020\n\010AuthInfo\030\003 \001(\t\022\017\n\007DevInfo\030\004 \001(\t\022\022\n\n"
      "ExternInfo\030\005 \001(\t\"r\n\024SetAppSettingRequest"
      "\022*\n\013BaseRequest\030\001 \002(\0132\025.micromsg.BaseReq"
      "uest\022\r\n\005AppID\030\002 \001(\t\022\r\n\005CmdID\030\003 \002(\r\022\020\n\010Cm"
      "dValue\030\004 \001(\t\"t\n\025SetAppSettingResponse\022,\n"
      "\014BaseResponse\030\001 \002(\0132\026.micromsg.BaseRespo"
      "nse\022\r\n\005AppID\030\002 \001(\t\022\017\n\007AppFlag\030\003 \002(\r\022\r\n\005C"
      "mdID\030\004 \002(\r\"\036\n\rAppSettingReq\022\r\n\005AppID\030\001 \001"
      "(\t\"<\n\nAppSetting\022\r\n\005AppID\030\001 \001(\t\022\017\n\007AppFl"
      "ag\030\002 \002(\r\022\016\n\006OpenID\030\003 \001(\t\"\210\001\n\024GetAppSetti"
      "ngRequest\022*\n\013BaseRequest\030\001 \002(\0132\025.microms"
      "g.BaseRequest\022\020\n\010AppCount\030\002 \002(\r\0222\n\021AppSe"
      "ttingReqList\030\003 \003(\0132\027.micromsg.AppSetting"
      "Req\"\202\001\n\025GetAppSettingResponse\022,\n\014BaseRes"
      "ponse\030\001 \002(\0132\026.micromsg.BaseResponse\022\020\n\010A"
      "ppCount\030\002 \002(\r\022)\n\013SettingList\030\003 \003(\0132\024.mic"
      "romsg.AppSetting\"\331\001\n\033GetSuggestionAppLis"
      "tRequest\022*\n\013BaseRequest\030\001 \002(\0132\025.micromsg"
      ".BaseRequest\022\017\n\007AppType\030\002 \002(\r\022\016\n\006OffSet\030"
      "\003 \002(\r\022\r\n\005Limit\030\004 \002(\r\022\014\n\004Lang\030\005 \001(\t\022\031\n\021In"
      "stalledAppCount\030\006 \001(\r\0225\n\020InstalledAppLis"
      "t\030\007 \003(\0132\033.micromsg.SKBuiltinString_t\"\303\002\n"
      "\034GetSuggestionAppListResponse\022,\n\014BaseRes"
      "ponse\030\001 \002(\0132\026.micromsg.BaseResponse\022\017\n\007R"
      "cCount\030\002 \002(\r\022#\n\006RcList\030\003 \003(\0132\023.micromsg."
      "RcAppList\022\032\n\022IsInternalDownload\030\004 \001(\r\022\017\n"
      "\007AdCount\030\005 \001(\r\022#\n\006AdList\030\006 \003(\0132\023.microms"
      "g.AdAppList\022\021\n\tGiftCount\030\007 \001(\r\022$\n\010GiftLi"
      "st\030\010 \003(\0132\022.micromsg.GiftList\0224\n\020GiftEntr"
      "anceItem\030\t \001(\0132\032.micromsg.GiftEntranceIt"
      "em\"\266\001\n\016JSOAuthRequest\022*\n\013BaseRequest\030\001 \002"
      "(\0132\025.micromsg.BaseRequest\022\r\n\005AppID\030\002 \001(\t"
      "\022\013\n\003Url\030\003 \001(\t\022\r\n\005Scope\030\004 \001(\t\022\021\n\tSignatur"
      "e\030\005 \001(\t\022\030\n\020Signature_method\030\006 \001(\t\022\021\n\tTim"
      "eStamp\030\007 \001(\t\022\r\n\005Nonce\030\010 \001(\t\"\222\001\n\017JSOAuthR"
      "esponse\022,\n\014BaseResponse\030\001 \002(\0132\026.micromsg"
      ".BaseResponse\022\022\n\nScopeCount\030\002 \002(\r\022)\n\tSco"
      "peList\030\003 \003(\0132\026.micromsg.BizScopeInfo\022\022\n\n"
      "OAuthTitle\030\004 \001(\t\"\220\001\n\024SetOAuthScopeReques"
      "t\022*\n\013BaseRequest\030\001 \002(\0132\025.micromsg.BaseRe"
      "quest\022\r\n\005AppID\030\002 \001(\t\022\022\n\nScopeCount\030\003 \002(\r"
      "\022)\n\tScopeList\030\004 \003(\0132\026.micromsg.BizScopeI"
      "nfo\"\202\001\n\025SetOAuthScopeResponse\022*\n\013BaseReq"
      "uest\030\001 \002(\0132\025.micromsg.BaseRequest\022\022\n\nSco"
      "peCount\030\002 \002(\r\022)\n\tScopeList\030\003 \003(\0132\026.micro"
      "msg.BizScopeInfo\"\251\001\n\027GetUserInfoInAppReq"
      "uest\022*\n\013BaseRequest\030\001 \002(\0132\025.micromsg.Bas"
      "eRequest\022\r\n\005AppID\030\002 \001(\t\022\021\n\tUserCount\030\003 \002"
      "(\r\0221\n\014UserNameList\030\004 \003(\0132\033.micromsg.SKBu"
      "iltinString_t\022\r\n\005Scene\030\005 \002(\r\"=\n\rUserInfo"
      "InApp\022\020\n\010UserName\030\001 \001(\t\022\032\n\022PersonalSetti"
      "ngXml\030\002 \001(\t\"\212\001\n\030GetUserInfoInAppResponse"
      "\022,\n\014BaseResponse\030\001 \002(\0132\026.micromsg.BaseRe"
      "sponse\022\021\n\tUserCount\030\002 \002(\r\022-\n\014UserInfoLis"
      "t\030\003 \003(\0132\027.micromsg.UserInfoInApp\"\216\002\n\033Che"
      "ckCanSubscribeBizRequest\022*\n\013BaseRequest\030"
      "\001 \002(\0132\025.micromsg.BaseRequest\022\016\n\006Source\030\002"
      " \002(\r\022\022\n\nToUserName\030\003 \001(\t\022\017\n\007ExtInfo\030\004 \001("
      "\t\022\r\n\005AppID\030\005 \001(\t\022\017\n\007PackNum\030\006 \002(\r\0228\n\023And"
      "roidPackNameList\030\007 \003(\0132\033.micromsg.SKBuil"
      "tinString_t\022\024\n\014IosBunddleID\030\010 \001(\t\022\017\n\007Fro"
      "mURL\030\t \001(\t\022\r\n\005Scene\030\n \001(\r\"\233\001\n\034CheckCanSu"
      "bscribeBizResponse\022,\n\014BaseResponse\030\001 \002(\013"
      "2\026.micromsg.BaseResponse\022\023\n\013CheckTicket\030"
      "\002 \001(\t\022\022\n\nToUserName\030\003 \001(\t\022\022\n\nWebViewUrl\030"
      "\004 \001(\t\022\020\n\010ShowWord\030\005 \001(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 8303);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mmopenapi.proto", &protobuf_RegisterTypes);
  ::micromsg::protobuf_mmbuiltintype_2eproto::AddDescriptors();
  ::micromsg::protobuf_mmbase_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_mmopenapi_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetA8KeyReq::kBaseRequestFieldNumber;
const int GetA8KeyReq::kOpCodeFieldNumber;
const int GetA8KeyReq::kA2KeyFieldNumber;
const int GetA8KeyReq::kAppIDFieldNumber;
const int GetA8KeyReq::kScopeFieldNumber;
const int GetA8KeyReq::kStateFieldNumber;
const int GetA8KeyReq::kReqUrlFieldNumber;
const int GetA8KeyReq::kFriendUserNameFieldNumber;
const int GetA8KeyReq::kFriendQQFieldNumber;
const int GetA8KeyReq::kSceneFieldNumber;
const int GetA8KeyReq::kUserNameFieldNumber;
const int GetA8KeyReq::kBundleIDFieldNumber;
const int GetA8KeyReq::kA2KeyNewFieldNumber;
const int GetA8KeyReq::kReasonFieldNumber;
const int GetA8KeyReq::kFontScaleFieldNumber;
const int GetA8KeyReq::kFlagFieldNumber;
const int GetA8KeyReq::kNetTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetA8KeyReq::GetA8KeyReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetA8KeyReq)
}
GetA8KeyReq::GetA8KeyReq(const GetA8KeyReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  friendusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_friendusername()) {
    friendusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friendusername_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  bundleid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bundleid()) {
    bundleid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bundleid_);
  }
  nettype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nettype()) {
    nettype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nettype_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  if (from.has_a2key()) {
    a2key_ = new ::micromsg::SKBuiltinBuffer_t(*from.a2key_);
  } else {
    a2key_ = NULL;
  }
  if (from.has_appid()) {
    appid_ = new ::micromsg::SKBuiltinString_t(*from.appid_);
  } else {
    appid_ = NULL;
  }
  if (from.has_scope()) {
    scope_ = new ::micromsg::SKBuiltinString_t(*from.scope_);
  } else {
    scope_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::micromsg::SKBuiltinString_t(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_requrl()) {
    requrl_ = new ::micromsg::SKBuiltinString_t(*from.requrl_);
  } else {
    requrl_ = NULL;
  }
  if (from.has_a2keynew()) {
    a2keynew_ = new ::micromsg::SKBuiltinBuffer_t(*from.a2keynew_);
  } else {
    a2keynew_ = NULL;
  }
  ::memcpy(&opcode_, &from.opcode_,
    reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&opcode_) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:micromsg.GetA8KeyReq)
}

void GetA8KeyReq::SharedCtor() {
  _cached_size_ = 0;
  friendusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bundleid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nettype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(flag_));
}

GetA8KeyReq::~GetA8KeyReq() {
  // @@protoc_insertion_point(destructor:micromsg.GetA8KeyReq)
  SharedDtor();
}

void GetA8KeyReq::SharedDtor() {
  friendusername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bundleid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nettype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
  if (this != internal_default_instance()) {
    delete a2key_;
  }
  if (this != internal_default_instance()) {
    delete appid_;
  }
  if (this != internal_default_instance()) {
    delete scope_;
  }
  if (this != internal_default_instance()) {
    delete state_;
  }
  if (this != internal_default_instance()) {
    delete requrl_;
  }
  if (this != internal_default_instance()) {
    delete a2keynew_;
  }
}

void GetA8KeyReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetA8KeyReq::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetA8KeyReq& GetA8KeyReq::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetA8KeyReq* GetA8KeyReq::New(::google::protobuf::Arena* arena) const {
  GetA8KeyReq* n = new GetA8KeyReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetA8KeyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetA8KeyReq)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_friendusername()) {
      GOOGLE_DCHECK(!friendusername_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*friendusername_.UnsafeRawStringPointer())->clear();
    }
    if (has_username()) {
      GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*username_.UnsafeRawStringPointer())->clear();
    }
    if (has_bundleid()) {
      GOOGLE_DCHECK(!bundleid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*bundleid_.UnsafeRawStringPointer())->clear();
    }
    if (has_nettype()) {
      GOOGLE_DCHECK(!nettype_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*nettype_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
    if (has_a2key()) {
      GOOGLE_DCHECK(a2key_ != NULL);
      a2key_->::micromsg::SKBuiltinBuffer_t::Clear();
    }
    if (has_appid()) {
      GOOGLE_DCHECK(appid_ != NULL);
      appid_->::micromsg::SKBuiltinString_t::Clear();
    }
    if (has_scope()) {
      GOOGLE_DCHECK(scope_ != NULL);
      scope_->::micromsg::SKBuiltinString_t::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 1792u) {
    if (has_state()) {
      GOOGLE_DCHECK(state_ != NULL);
      state_->::micromsg::SKBuiltinString_t::Clear();
    }
    if (has_requrl()) {
      GOOGLE_DCHECK(requrl_ != NULL);
      requrl_->::micromsg::SKBuiltinString_t::Clear();
    }
    if (has_a2keynew()) {
      GOOGLE_DCHECK(a2keynew_ != NULL);
      a2keynew_->::micromsg::SKBuiltinBuffer_t::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 63488u) {
    ::memset(&opcode_, 0, reinterpret_cast<char*>(&fontscale_) -
      reinterpret_cast<char*>(&opcode_) + sizeof(fontscale_));
  }
  flag_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetA8KeyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetA8KeyReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 OpCode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_opcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &opcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .micromsg.SKBuiltinBuffer_t A2Key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_a2key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .micromsg.SKBuiltinString_t AppID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_appid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .micromsg.SKBuiltinString_t Scope = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_scope()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .micromsg.SKBuiltinString_t State = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .micromsg.SKBuiltinString_t ReqUrl = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_requrl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string FriendUserName = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friendusername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->friendusername().data(), this->friendusername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetA8KeyReq.FriendUserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 FriendQQ = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_friendqq();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friendqq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 Scene = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has_scene();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string UserName = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetA8KeyReq.UserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string BundleID = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bundleid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bundleid().data(), this->bundleid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetA8KeyReq.BundleID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .micromsg.SKBuiltinBuffer_t A2KeyNew = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_a2keynew()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 Reason = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {
          set_has_reason();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reason_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 FontScale = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u)) {
          set_has_fontscale();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &fontscale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 Flag = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {
          set_has_flag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string NetType = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nettype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nettype().data(), this->nettype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetA8KeyReq.NetType");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetA8KeyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetA8KeyReq)
  return false;
#undef DO_
}

void GetA8KeyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetA8KeyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required uint32 OpCode = 2;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->opcode(), output);
  }

  // optional .micromsg.SKBuiltinBuffer_t A2Key = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->a2key_, output);
  }

  // optional .micromsg.SKBuiltinString_t AppID = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->appid_, output);
  }

  // optional .micromsg.SKBuiltinString_t Scope = 5;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->scope_, output);
  }

  // optional .micromsg.SKBuiltinString_t State = 6;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->state_, output);
  }

  // optional .micromsg.SKBuiltinString_t ReqUrl = 7;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->requrl_, output);
  }

  // optional string FriendUserName = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->friendusername().data(), this->friendusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetA8KeyReq.FriendUserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->friendusername(), output);
  }

  // optional uint32 FriendQQ = 9;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->friendqq(), output);
  }

  // optional uint32 Scene = 10;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->scene(), output);
  }

  // optional string UserName = 11;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetA8KeyReq.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->username(), output);
  }

  // optional string BundleID = 12;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bundleid().data(), this->bundleid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetA8KeyReq.BundleID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->bundleid(), output);
  }

  // optional .micromsg.SKBuiltinBuffer_t A2KeyNew = 13;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->a2keynew_, output);
  }

  // optional uint32 Reason = 14;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->reason(), output);
  }

  // optional uint32 FontScale = 15;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->fontscale(), output);
  }

  // optional uint32 Flag = 16;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->flag(), output);
  }

  // optional string NetType = 17;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nettype().data(), this->nettype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetA8KeyReq.NetType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->nettype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetA8KeyReq)
}

::google::protobuf::uint8* GetA8KeyReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetA8KeyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required uint32 OpCode = 2;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->opcode(), target);
  }

  // optional .micromsg.SKBuiltinBuffer_t A2Key = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->a2key_, deterministic, target);
  }

  // optional .micromsg.SKBuiltinString_t AppID = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->appid_, deterministic, target);
  }

  // optional .micromsg.SKBuiltinString_t Scope = 5;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->scope_, deterministic, target);
  }

  // optional .micromsg.SKBuiltinString_t State = 6;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->state_, deterministic, target);
  }

  // optional .micromsg.SKBuiltinString_t ReqUrl = 7;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->requrl_, deterministic, target);
  }

  // optional string FriendUserName = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->friendusername().data(), this->friendusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetA8KeyReq.FriendUserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->friendusername(), target);
  }

  // optional uint32 FriendQQ = 9;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->friendqq(), target);
  }

  // optional uint32 Scene = 10;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->scene(), target);
  }

  // optional string UserName = 11;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetA8KeyReq.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->username(), target);
  }

  // optional string BundleID = 12;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bundleid().data(), this->bundleid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetA8KeyReq.BundleID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->bundleid(), target);
  }

  // optional .micromsg.SKBuiltinBuffer_t A2KeyNew = 13;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->a2keynew_, deterministic, target);
  }

  // optional uint32 Reason = 14;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->reason(), target);
  }

  // optional uint32 FontScale = 15;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->fontscale(), target);
  }

  // optional uint32 Flag = 16;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->flag(), target);
  }

  // optional string NetType = 17;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nettype().data(), this->nettype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetA8KeyReq.NetType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->nettype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetA8KeyReq)
  return target;
}

size_t GetA8KeyReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetA8KeyReq)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_opcode()) {
    // required uint32 OpCode = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opcode());
  }

  return total_size;
}
size_t GetA8KeyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetA8KeyReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000810) ^ 0x00000810) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required uint32 OpCode = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->opcode());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string FriendUserName = 8;
    if (has_friendusername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->friendusername());
    }

    // optional string UserName = 11;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional string BundleID = 12;
    if (has_bundleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bundleid());
    }

    // optional string NetType = 17;
    if (has_nettype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nettype());
    }

  }
  if (_has_bits_[0 / 32] & 224u) {
    // optional .micromsg.SKBuiltinBuffer_t A2Key = 3;
    if (has_a2key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->a2key_);
    }

    // optional .micromsg.SKBuiltinString_t AppID = 4;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->appid_);
    }

    // optional .micromsg.SKBuiltinString_t Scope = 5;
    if (has_scope()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->scope_);
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional .micromsg.SKBuiltinString_t State = 6;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->state_);
    }

    // optional .micromsg.SKBuiltinString_t ReqUrl = 7;
    if (has_requrl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->requrl_);
    }

    // optional .micromsg.SKBuiltinBuffer_t A2KeyNew = 13;
    if (has_a2keynew()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->a2keynew_);
    }

  }
  if (_has_bits_[8 / 32] & 61440u) {
    // optional uint32 FriendQQ = 9;
    if (has_friendqq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->friendqq());
    }

    // optional uint32 Scene = 10;
    if (has_scene()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->scene());
    }

    // optional uint32 Reason = 14;
    if (has_reason()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->reason());
    }

    // optional uint32 FontScale = 15;
    if (has_fontscale()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->fontscale());
    }

  }
  // optional uint32 Flag = 16;
  if (has_flag()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flag());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetA8KeyReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetA8KeyReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetA8KeyReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetA8KeyReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetA8KeyReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetA8KeyReq)
    MergeFrom(*source);
  }
}

void GetA8KeyReq::MergeFrom(const GetA8KeyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetA8KeyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_friendusername();
      friendusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friendusername_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_bundleid();
      bundleid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bundleid_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_nettype();
      nettype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nettype_);
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_a2key()->::micromsg::SKBuiltinBuffer_t::MergeFrom(from.a2key());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_appid()->::micromsg::SKBuiltinString_t::MergeFrom(from.appid());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_scope()->::micromsg::SKBuiltinString_t::MergeFrom(from.scope());
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_state()->::micromsg::SKBuiltinString_t::MergeFrom(from.state());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_requrl()->::micromsg::SKBuiltinString_t::MergeFrom(from.requrl());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_a2keynew()->::micromsg::SKBuiltinBuffer_t::MergeFrom(from.a2keynew());
    }
    if (cached_has_bits & 0x00000800u) {
      opcode_ = from.opcode_;
    }
    if (cached_has_bits & 0x00001000u) {
      friendqq_ = from.friendqq_;
    }
    if (cached_has_bits & 0x00002000u) {
      scene_ = from.scene_;
    }
    if (cached_has_bits & 0x00004000u) {
      reason_ = from.reason_;
    }
    if (cached_has_bits & 0x00008000u) {
      fontscale_ = from.fontscale_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00010000u) {
    set_flag(from.flag());
  }
}

void GetA8KeyReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetA8KeyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetA8KeyReq::CopyFrom(const GetA8KeyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetA8KeyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetA8KeyReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000810) != 0x00000810) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  if (has_a2key()) {
    if (!this->a2key_->IsInitialized()) return false;
  }
  if (has_a2keynew()) {
    if (!this->a2keynew_->IsInitialized()) return false;
  }
  return true;
}

void GetA8KeyReq::Swap(GetA8KeyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetA8KeyReq::InternalSwap(GetA8KeyReq* other) {
  friendusername_.Swap(&other->friendusername_);
  username_.Swap(&other->username_);
  bundleid_.Swap(&other->bundleid_);
  nettype_.Swap(&other->nettype_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(a2key_, other->a2key_);
  std::swap(appid_, other->appid_);
  std::swap(scope_, other->scope_);
  std::swap(state_, other->state_);
  std::swap(requrl_, other->requrl_);
  std::swap(a2keynew_, other->a2keynew_);
  std::swap(opcode_, other->opcode_);
  std::swap(friendqq_, other->friendqq_);
  std::swap(scene_, other->scene_);
  std::swap(reason_, other->reason_);
  std::swap(fontscale_, other->fontscale_);
  std::swap(flag_, other->flag_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetA8KeyReq::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetA8KeyReq

// required .micromsg.BaseRequest BaseRequest = 1;
bool GetA8KeyReq::has_baserequest() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GetA8KeyReq::set_has_baserequest() {
  _has_bits_[0] |= 0x00000010u;
}
void GetA8KeyReq::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000010u;
}
void GetA8KeyReq::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& GetA8KeyReq::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyReq.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* GetA8KeyReq::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyReq.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* GetA8KeyReq::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyReq.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void GetA8KeyReq::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyReq.BaseRequest)
}

// required uint32 OpCode = 2;
bool GetA8KeyReq::has_opcode() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void GetA8KeyReq::set_has_opcode() {
  _has_bits_[0] |= 0x00000800u;
}
void GetA8KeyReq::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000800u;
}
void GetA8KeyReq::clear_opcode() {
  opcode_ = 0u;
  clear_has_opcode();
}
::google::protobuf::uint32 GetA8KeyReq::opcode() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyReq.OpCode)
  return opcode_;
}
void GetA8KeyReq::set_opcode(::google::protobuf::uint32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyReq.OpCode)
}

// optional .micromsg.SKBuiltinBuffer_t A2Key = 3;
bool GetA8KeyReq::has_a2key() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void GetA8KeyReq::set_has_a2key() {
  _has_bits_[0] |= 0x00000020u;
}
void GetA8KeyReq::clear_has_a2key() {
  _has_bits_[0] &= ~0x00000020u;
}
void GetA8KeyReq::clear_a2key() {
  if (a2key_ != NULL) a2key_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_a2key();
}
const ::micromsg::SKBuiltinBuffer_t& GetA8KeyReq::a2key() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyReq.A2Key)
  return a2key_ != NULL ? *a2key_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
::micromsg::SKBuiltinBuffer_t* GetA8KeyReq::mutable_a2key() {
  set_has_a2key();
  if (a2key_ == NULL) {
    a2key_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyReq.A2Key)
  return a2key_;
}
::micromsg::SKBuiltinBuffer_t* GetA8KeyReq::release_a2key() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyReq.A2Key)
  clear_has_a2key();
  ::micromsg::SKBuiltinBuffer_t* temp = a2key_;
  a2key_ = NULL;
  return temp;
}
void GetA8KeyReq::set_allocated_a2key(::micromsg::SKBuiltinBuffer_t* a2key) {
  delete a2key_;
  a2key_ = a2key;
  if (a2key) {
    set_has_a2key();
  } else {
    clear_has_a2key();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyReq.A2Key)
}

// optional .micromsg.SKBuiltinString_t AppID = 4;
bool GetA8KeyReq::has_appid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void GetA8KeyReq::set_has_appid() {
  _has_bits_[0] |= 0x00000040u;
}
void GetA8KeyReq::clear_has_appid() {
  _has_bits_[0] &= ~0x00000040u;
}
void GetA8KeyReq::clear_appid() {
  if (appid_ != NULL) appid_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_appid();
}
const ::micromsg::SKBuiltinString_t& GetA8KeyReq::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyReq.AppID)
  return appid_ != NULL ? *appid_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
::micromsg::SKBuiltinString_t* GetA8KeyReq::mutable_appid() {
  set_has_appid();
  if (appid_ == NULL) {
    appid_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyReq.AppID)
  return appid_;
}
::micromsg::SKBuiltinString_t* GetA8KeyReq::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyReq.AppID)
  clear_has_appid();
  ::micromsg::SKBuiltinString_t* temp = appid_;
  appid_ = NULL;
  return temp;
}
void GetA8KeyReq::set_allocated_appid(::micromsg::SKBuiltinString_t* appid) {
  delete appid_;
  appid_ = appid;
  if (appid) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyReq.AppID)
}

// optional .micromsg.SKBuiltinString_t Scope = 5;
bool GetA8KeyReq::has_scope() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void GetA8KeyReq::set_has_scope() {
  _has_bits_[0] |= 0x00000080u;
}
void GetA8KeyReq::clear_has_scope() {
  _has_bits_[0] &= ~0x00000080u;
}
void GetA8KeyReq::clear_scope() {
  if (scope_ != NULL) scope_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_scope();
}
const ::micromsg::SKBuiltinString_t& GetA8KeyReq::scope() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyReq.Scope)
  return scope_ != NULL ? *scope_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
::micromsg::SKBuiltinString_t* GetA8KeyReq::mutable_scope() {
  set_has_scope();
  if (scope_ == NULL) {
    scope_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyReq.Scope)
  return scope_;
}
::micromsg::SKBuiltinString_t* GetA8KeyReq::release_scope() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyReq.Scope)
  clear_has_scope();
  ::micromsg::SKBuiltinString_t* temp = scope_;
  scope_ = NULL;
  return temp;
}
void GetA8KeyReq::set_allocated_scope(::micromsg::SKBuiltinString_t* scope) {
  delete scope_;
  scope_ = scope;
  if (scope) {
    set_has_scope();
  } else {
    clear_has_scope();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyReq.Scope)
}

// optional .micromsg.SKBuiltinString_t State = 6;
bool GetA8KeyReq::has_state() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void GetA8KeyReq::set_has_state() {
  _has_bits_[0] |= 0x00000100u;
}
void GetA8KeyReq::clear_has_state() {
  _has_bits_[0] &= ~0x00000100u;
}
void GetA8KeyReq::clear_state() {
  if (state_ != NULL) state_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_state();
}
const ::micromsg::SKBuiltinString_t& GetA8KeyReq::state() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyReq.State)
  return state_ != NULL ? *state_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
::micromsg::SKBuiltinString_t* GetA8KeyReq::mutable_state() {
  set_has_state();
  if (state_ == NULL) {
    state_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyReq.State)
  return state_;
}
::micromsg::SKBuiltinString_t* GetA8KeyReq::release_state() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyReq.State)
  clear_has_state();
  ::micromsg::SKBuiltinString_t* temp = state_;
  state_ = NULL;
  return temp;
}
void GetA8KeyReq::set_allocated_state(::micromsg::SKBuiltinString_t* state) {
  delete state_;
  state_ = state;
  if (state) {
    set_has_state();
  } else {
    clear_has_state();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyReq.State)
}

// optional .micromsg.SKBuiltinString_t ReqUrl = 7;
bool GetA8KeyReq::has_requrl() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void GetA8KeyReq::set_has_requrl() {
  _has_bits_[0] |= 0x00000200u;
}
void GetA8KeyReq::clear_has_requrl() {
  _has_bits_[0] &= ~0x00000200u;
}
void GetA8KeyReq::clear_requrl() {
  if (requrl_ != NULL) requrl_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_requrl();
}
const ::micromsg::SKBuiltinString_t& GetA8KeyReq::requrl() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyReq.ReqUrl)
  return requrl_ != NULL ? *requrl_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
::micromsg::SKBuiltinString_t* GetA8KeyReq::mutable_requrl() {
  set_has_requrl();
  if (requrl_ == NULL) {
    requrl_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyReq.ReqUrl)
  return requrl_;
}
::micromsg::SKBuiltinString_t* GetA8KeyReq::release_requrl() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyReq.ReqUrl)
  clear_has_requrl();
  ::micromsg::SKBuiltinString_t* temp = requrl_;
  requrl_ = NULL;
  return temp;
}
void GetA8KeyReq::set_allocated_requrl(::micromsg::SKBuiltinString_t* requrl) {
  delete requrl_;
  requrl_ = requrl;
  if (requrl) {
    set_has_requrl();
  } else {
    clear_has_requrl();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyReq.ReqUrl)
}

// optional string FriendUserName = 8;
bool GetA8KeyReq::has_friendusername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetA8KeyReq::set_has_friendusername() {
  _has_bits_[0] |= 0x00000001u;
}
void GetA8KeyReq::clear_has_friendusername() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetA8KeyReq::clear_friendusername() {
  friendusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_friendusername();
}
const ::std::string& GetA8KeyReq::friendusername() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyReq.FriendUserName)
  return friendusername_.GetNoArena();
}
void GetA8KeyReq::set_friendusername(const ::std::string& value) {
  set_has_friendusername();
  friendusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyReq.FriendUserName)
}
#if LANG_CXX11
void GetA8KeyReq::set_friendusername(::std::string&& value) {
  set_has_friendusername();
  friendusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetA8KeyReq.FriendUserName)
}
#endif
void GetA8KeyReq::set_friendusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_friendusername();
  friendusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetA8KeyReq.FriendUserName)
}
void GetA8KeyReq::set_friendusername(const char* value, size_t size) {
  set_has_friendusername();
  friendusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetA8KeyReq.FriendUserName)
}
::std::string* GetA8KeyReq::mutable_friendusername() {
  set_has_friendusername();
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyReq.FriendUserName)
  return friendusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetA8KeyReq::release_friendusername() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyReq.FriendUserName)
  clear_has_friendusername();
  return friendusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetA8KeyReq::set_allocated_friendusername(::std::string* friendusername) {
  if (friendusername != NULL) {
    set_has_friendusername();
  } else {
    clear_has_friendusername();
  }
  friendusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), friendusername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyReq.FriendUserName)
}

// optional uint32 FriendQQ = 9;
bool GetA8KeyReq::has_friendqq() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void GetA8KeyReq::set_has_friendqq() {
  _has_bits_[0] |= 0x00001000u;
}
void GetA8KeyReq::clear_has_friendqq() {
  _has_bits_[0] &= ~0x00001000u;
}
void GetA8KeyReq::clear_friendqq() {
  friendqq_ = 0u;
  clear_has_friendqq();
}
::google::protobuf::uint32 GetA8KeyReq::friendqq() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyReq.FriendQQ)
  return friendqq_;
}
void GetA8KeyReq::set_friendqq(::google::protobuf::uint32 value) {
  set_has_friendqq();
  friendqq_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyReq.FriendQQ)
}

// optional uint32 Scene = 10;
bool GetA8KeyReq::has_scene() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void GetA8KeyReq::set_has_scene() {
  _has_bits_[0] |= 0x00002000u;
}
void GetA8KeyReq::clear_has_scene() {
  _has_bits_[0] &= ~0x00002000u;
}
void GetA8KeyReq::clear_scene() {
  scene_ = 0u;
  clear_has_scene();
}
::google::protobuf::uint32 GetA8KeyReq::scene() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyReq.Scene)
  return scene_;
}
void GetA8KeyReq::set_scene(::google::protobuf::uint32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyReq.Scene)
}

// optional string UserName = 11;
bool GetA8KeyReq::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetA8KeyReq::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
void GetA8KeyReq::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetA8KeyReq::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& GetA8KeyReq::username() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyReq.UserName)
  return username_.GetNoArena();
}
void GetA8KeyReq::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyReq.UserName)
}
#if LANG_CXX11
void GetA8KeyReq::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetA8KeyReq.UserName)
}
#endif
void GetA8KeyReq::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetA8KeyReq.UserName)
}
void GetA8KeyReq::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetA8KeyReq.UserName)
}
::std::string* GetA8KeyReq::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyReq.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetA8KeyReq::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyReq.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetA8KeyReq::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyReq.UserName)
}

// optional string BundleID = 12;
bool GetA8KeyReq::has_bundleid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetA8KeyReq::set_has_bundleid() {
  _has_bits_[0] |= 0x00000004u;
}
void GetA8KeyReq::clear_has_bundleid() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetA8KeyReq::clear_bundleid() {
  bundleid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bundleid();
}
const ::std::string& GetA8KeyReq::bundleid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyReq.BundleID)
  return bundleid_.GetNoArena();
}
void GetA8KeyReq::set_bundleid(const ::std::string& value) {
  set_has_bundleid();
  bundleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyReq.BundleID)
}
#if LANG_CXX11
void GetA8KeyReq::set_bundleid(::std::string&& value) {
  set_has_bundleid();
  bundleid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetA8KeyReq.BundleID)
}
#endif
void GetA8KeyReq::set_bundleid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bundleid();
  bundleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetA8KeyReq.BundleID)
}
void GetA8KeyReq::set_bundleid(const char* value, size_t size) {
  set_has_bundleid();
  bundleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetA8KeyReq.BundleID)
}
::std::string* GetA8KeyReq::mutable_bundleid() {
  set_has_bundleid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyReq.BundleID)
  return bundleid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetA8KeyReq::release_bundleid() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyReq.BundleID)
  clear_has_bundleid();
  return bundleid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetA8KeyReq::set_allocated_bundleid(::std::string* bundleid) {
  if (bundleid != NULL) {
    set_has_bundleid();
  } else {
    clear_has_bundleid();
  }
  bundleid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bundleid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyReq.BundleID)
}

// optional .micromsg.SKBuiltinBuffer_t A2KeyNew = 13;
bool GetA8KeyReq::has_a2keynew() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void GetA8KeyReq::set_has_a2keynew() {
  _has_bits_[0] |= 0x00000400u;
}
void GetA8KeyReq::clear_has_a2keynew() {
  _has_bits_[0] &= ~0x00000400u;
}
void GetA8KeyReq::clear_a2keynew() {
  if (a2keynew_ != NULL) a2keynew_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_a2keynew();
}
const ::micromsg::SKBuiltinBuffer_t& GetA8KeyReq::a2keynew() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyReq.A2KeyNew)
  return a2keynew_ != NULL ? *a2keynew_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
::micromsg::SKBuiltinBuffer_t* GetA8KeyReq::mutable_a2keynew() {
  set_has_a2keynew();
  if (a2keynew_ == NULL) {
    a2keynew_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyReq.A2KeyNew)
  return a2keynew_;
}
::micromsg::SKBuiltinBuffer_t* GetA8KeyReq::release_a2keynew() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyReq.A2KeyNew)
  clear_has_a2keynew();
  ::micromsg::SKBuiltinBuffer_t* temp = a2keynew_;
  a2keynew_ = NULL;
  return temp;
}
void GetA8KeyReq::set_allocated_a2keynew(::micromsg::SKBuiltinBuffer_t* a2keynew) {
  delete a2keynew_;
  a2keynew_ = a2keynew;
  if (a2keynew) {
    set_has_a2keynew();
  } else {
    clear_has_a2keynew();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyReq.A2KeyNew)
}

// optional uint32 Reason = 14;
bool GetA8KeyReq::has_reason() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void GetA8KeyReq::set_has_reason() {
  _has_bits_[0] |= 0x00004000u;
}
void GetA8KeyReq::clear_has_reason() {
  _has_bits_[0] &= ~0x00004000u;
}
void GetA8KeyReq::clear_reason() {
  reason_ = 0u;
  clear_has_reason();
}
::google::protobuf::uint32 GetA8KeyReq::reason() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyReq.Reason)
  return reason_;
}
void GetA8KeyReq::set_reason(::google::protobuf::uint32 value) {
  set_has_reason();
  reason_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyReq.Reason)
}

// optional uint32 FontScale = 15;
bool GetA8KeyReq::has_fontscale() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void GetA8KeyReq::set_has_fontscale() {
  _has_bits_[0] |= 0x00008000u;
}
void GetA8KeyReq::clear_has_fontscale() {
  _has_bits_[0] &= ~0x00008000u;
}
void GetA8KeyReq::clear_fontscale() {
  fontscale_ = 0u;
  clear_has_fontscale();
}
::google::protobuf::uint32 GetA8KeyReq::fontscale() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyReq.FontScale)
  return fontscale_;
}
void GetA8KeyReq::set_fontscale(::google::protobuf::uint32 value) {
  set_has_fontscale();
  fontscale_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyReq.FontScale)
}

// optional uint32 Flag = 16;
bool GetA8KeyReq::has_flag() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void GetA8KeyReq::set_has_flag() {
  _has_bits_[0] |= 0x00010000u;
}
void GetA8KeyReq::clear_has_flag() {
  _has_bits_[0] &= ~0x00010000u;
}
void GetA8KeyReq::clear_flag() {
  flag_ = 0u;
  clear_has_flag();
}
::google::protobuf::uint32 GetA8KeyReq::flag() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyReq.Flag)
  return flag_;
}
void GetA8KeyReq::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyReq.Flag)
}

// optional string NetType = 17;
bool GetA8KeyReq::has_nettype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GetA8KeyReq::set_has_nettype() {
  _has_bits_[0] |= 0x00000008u;
}
void GetA8KeyReq::clear_has_nettype() {
  _has_bits_[0] &= ~0x00000008u;
}
void GetA8KeyReq::clear_nettype() {
  nettype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nettype();
}
const ::std::string& GetA8KeyReq::nettype() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyReq.NetType)
  return nettype_.GetNoArena();
}
void GetA8KeyReq::set_nettype(const ::std::string& value) {
  set_has_nettype();
  nettype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyReq.NetType)
}
#if LANG_CXX11
void GetA8KeyReq::set_nettype(::std::string&& value) {
  set_has_nettype();
  nettype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetA8KeyReq.NetType)
}
#endif
void GetA8KeyReq::set_nettype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nettype();
  nettype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetA8KeyReq.NetType)
}
void GetA8KeyReq::set_nettype(const char* value, size_t size) {
  set_has_nettype();
  nettype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetA8KeyReq.NetType)
}
::std::string* GetA8KeyReq::mutable_nettype() {
  set_has_nettype();
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyReq.NetType)
  return nettype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetA8KeyReq::release_nettype() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyReq.NetType)
  clear_has_nettype();
  return nettype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetA8KeyReq::set_allocated_nettype(::std::string* nettype) {
  if (nettype != NULL) {
    set_has_nettype();
  } else {
    clear_has_nettype();
  }
  nettype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nettype);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyReq.NetType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JSAPIPermissionBitSet::kBitValueFieldNumber;
const int JSAPIPermissionBitSet::kBitValue2FieldNumber;
const int JSAPIPermissionBitSet::kBitValue3FieldNumber;
const int JSAPIPermissionBitSet::kBitValue4FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JSAPIPermissionBitSet::JSAPIPermissionBitSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.JSAPIPermissionBitSet)
}
JSAPIPermissionBitSet::JSAPIPermissionBitSet(const JSAPIPermissionBitSet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bitvalue_, &from.bitvalue_,
    reinterpret_cast<char*>(&bitvalue4_) -
    reinterpret_cast<char*>(&bitvalue_) + sizeof(bitvalue4_));
  // @@protoc_insertion_point(copy_constructor:micromsg.JSAPIPermissionBitSet)
}

void JSAPIPermissionBitSet::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&bitvalue_, 0, reinterpret_cast<char*>(&bitvalue4_) -
    reinterpret_cast<char*>(&bitvalue_) + sizeof(bitvalue4_));
}

JSAPIPermissionBitSet::~JSAPIPermissionBitSet() {
  // @@protoc_insertion_point(destructor:micromsg.JSAPIPermissionBitSet)
  SharedDtor();
}

void JSAPIPermissionBitSet::SharedDtor() {
}

void JSAPIPermissionBitSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JSAPIPermissionBitSet::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JSAPIPermissionBitSet& JSAPIPermissionBitSet::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

JSAPIPermissionBitSet* JSAPIPermissionBitSet::New(::google::protobuf::Arena* arena) const {
  JSAPIPermissionBitSet* n = new JSAPIPermissionBitSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JSAPIPermissionBitSet::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.JSAPIPermissionBitSet)
  if (_has_bits_[0 / 32] & 15u) {
    ::memset(&bitvalue_, 0, reinterpret_cast<char*>(&bitvalue4_) -
      reinterpret_cast<char*>(&bitvalue_) + sizeof(bitvalue4_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool JSAPIPermissionBitSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.JSAPIPermissionBitSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 BitValue = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_bitvalue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bitvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 BitValue2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_bitvalue2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bitvalue2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 BitValue3 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_bitvalue3();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bitvalue3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 BitValue4 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_bitvalue4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bitvalue4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.JSAPIPermissionBitSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.JSAPIPermissionBitSet)
  return false;
#undef DO_
}

void JSAPIPermissionBitSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.JSAPIPermissionBitSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 BitValue = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->bitvalue(), output);
  }

  // optional uint32 BitValue2 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->bitvalue2(), output);
  }

  // optional uint32 BitValue3 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->bitvalue3(), output);
  }

  // optional uint32 BitValue4 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->bitvalue4(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.JSAPIPermissionBitSet)
}

::google::protobuf::uint8* JSAPIPermissionBitSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.JSAPIPermissionBitSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 BitValue = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->bitvalue(), target);
  }

  // optional uint32 BitValue2 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->bitvalue2(), target);
  }

  // optional uint32 BitValue3 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->bitvalue3(), target);
  }

  // optional uint32 BitValue4 = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->bitvalue4(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.JSAPIPermissionBitSet)
  return target;
}

size_t JSAPIPermissionBitSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.JSAPIPermissionBitSet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint32 BitValue = 1;
  if (has_bitvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bitvalue());
  }
  if (_has_bits_[0 / 32] & 14u) {
    // optional uint32 BitValue2 = 2;
    if (has_bitvalue2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bitvalue2());
    }

    // optional uint32 BitValue3 = 3;
    if (has_bitvalue3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bitvalue3());
    }

    // optional uint32 BitValue4 = 4;
    if (has_bitvalue4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bitvalue4());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JSAPIPermissionBitSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.JSAPIPermissionBitSet)
  GOOGLE_DCHECK_NE(&from, this);
  const JSAPIPermissionBitSet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JSAPIPermissionBitSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.JSAPIPermissionBitSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.JSAPIPermissionBitSet)
    MergeFrom(*source);
  }
}

void JSAPIPermissionBitSet::MergeFrom(const JSAPIPermissionBitSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.JSAPIPermissionBitSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      bitvalue_ = from.bitvalue_;
    }
    if (cached_has_bits & 0x00000002u) {
      bitvalue2_ = from.bitvalue2_;
    }
    if (cached_has_bits & 0x00000004u) {
      bitvalue3_ = from.bitvalue3_;
    }
    if (cached_has_bits & 0x00000008u) {
      bitvalue4_ = from.bitvalue4_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void JSAPIPermissionBitSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.JSAPIPermissionBitSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JSAPIPermissionBitSet::CopyFrom(const JSAPIPermissionBitSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.JSAPIPermissionBitSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JSAPIPermissionBitSet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void JSAPIPermissionBitSet::Swap(JSAPIPermissionBitSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JSAPIPermissionBitSet::InternalSwap(JSAPIPermissionBitSet* other) {
  std::swap(bitvalue_, other->bitvalue_);
  std::swap(bitvalue2_, other->bitvalue2_);
  std::swap(bitvalue3_, other->bitvalue3_);
  std::swap(bitvalue4_, other->bitvalue4_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JSAPIPermissionBitSet::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// JSAPIPermissionBitSet

// required uint32 BitValue = 1;
bool JSAPIPermissionBitSet::has_bitvalue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void JSAPIPermissionBitSet::set_has_bitvalue() {
  _has_bits_[0] |= 0x00000001u;
}
void JSAPIPermissionBitSet::clear_has_bitvalue() {
  _has_bits_[0] &= ~0x00000001u;
}
void JSAPIPermissionBitSet::clear_bitvalue() {
  bitvalue_ = 0u;
  clear_has_bitvalue();
}
::google::protobuf::uint32 JSAPIPermissionBitSet::bitvalue() const {
  // @@protoc_insertion_point(field_get:micromsg.JSAPIPermissionBitSet.BitValue)
  return bitvalue_;
}
void JSAPIPermissionBitSet::set_bitvalue(::google::protobuf::uint32 value) {
  set_has_bitvalue();
  bitvalue_ = value;
  // @@protoc_insertion_point(field_set:micromsg.JSAPIPermissionBitSet.BitValue)
}

// optional uint32 BitValue2 = 2;
bool JSAPIPermissionBitSet::has_bitvalue2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void JSAPIPermissionBitSet::set_has_bitvalue2() {
  _has_bits_[0] |= 0x00000002u;
}
void JSAPIPermissionBitSet::clear_has_bitvalue2() {
  _has_bits_[0] &= ~0x00000002u;
}
void JSAPIPermissionBitSet::clear_bitvalue2() {
  bitvalue2_ = 0u;
  clear_has_bitvalue2();
}
::google::protobuf::uint32 JSAPIPermissionBitSet::bitvalue2() const {
  // @@protoc_insertion_point(field_get:micromsg.JSAPIPermissionBitSet.BitValue2)
  return bitvalue2_;
}
void JSAPIPermissionBitSet::set_bitvalue2(::google::protobuf::uint32 value) {
  set_has_bitvalue2();
  bitvalue2_ = value;
  // @@protoc_insertion_point(field_set:micromsg.JSAPIPermissionBitSet.BitValue2)
}

// optional uint32 BitValue3 = 3;
bool JSAPIPermissionBitSet::has_bitvalue3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void JSAPIPermissionBitSet::set_has_bitvalue3() {
  _has_bits_[0] |= 0x00000004u;
}
void JSAPIPermissionBitSet::clear_has_bitvalue3() {
  _has_bits_[0] &= ~0x00000004u;
}
void JSAPIPermissionBitSet::clear_bitvalue3() {
  bitvalue3_ = 0u;
  clear_has_bitvalue3();
}
::google::protobuf::uint32 JSAPIPermissionBitSet::bitvalue3() const {
  // @@protoc_insertion_point(field_get:micromsg.JSAPIPermissionBitSet.BitValue3)
  return bitvalue3_;
}
void JSAPIPermissionBitSet::set_bitvalue3(::google::protobuf::uint32 value) {
  set_has_bitvalue3();
  bitvalue3_ = value;
  // @@protoc_insertion_point(field_set:micromsg.JSAPIPermissionBitSet.BitValue3)
}

// optional uint32 BitValue4 = 4;
bool JSAPIPermissionBitSet::has_bitvalue4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void JSAPIPermissionBitSet::set_has_bitvalue4() {
  _has_bits_[0] |= 0x00000008u;
}
void JSAPIPermissionBitSet::clear_has_bitvalue4() {
  _has_bits_[0] &= ~0x00000008u;
}
void JSAPIPermissionBitSet::clear_bitvalue4() {
  bitvalue4_ = 0u;
  clear_has_bitvalue4();
}
::google::protobuf::uint32 JSAPIPermissionBitSet::bitvalue4() const {
  // @@protoc_insertion_point(field_get:micromsg.JSAPIPermissionBitSet.BitValue4)
  return bitvalue4_;
}
void JSAPIPermissionBitSet::set_bitvalue4(::google::protobuf::uint32 value) {
  set_has_bitvalue4();
  bitvalue4_ = value;
  // @@protoc_insertion_point(field_set:micromsg.JSAPIPermissionBitSet.BitValue4)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GeneralControlBitSet::kBitValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GeneralControlBitSet::GeneralControlBitSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GeneralControlBitSet)
}
GeneralControlBitSet::GeneralControlBitSet(const GeneralControlBitSet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bitvalue_ = from.bitvalue_;
  // @@protoc_insertion_point(copy_constructor:micromsg.GeneralControlBitSet)
}

void GeneralControlBitSet::SharedCtor() {
  _cached_size_ = 0;
  bitvalue_ = 0u;
}

GeneralControlBitSet::~GeneralControlBitSet() {
  // @@protoc_insertion_point(destructor:micromsg.GeneralControlBitSet)
  SharedDtor();
}

void GeneralControlBitSet::SharedDtor() {
}

void GeneralControlBitSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GeneralControlBitSet::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GeneralControlBitSet& GeneralControlBitSet::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

GeneralControlBitSet* GeneralControlBitSet::New(::google::protobuf::Arena* arena) const {
  GeneralControlBitSet* n = new GeneralControlBitSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GeneralControlBitSet::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GeneralControlBitSet)
  bitvalue_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GeneralControlBitSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GeneralControlBitSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 BitValue = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_bitvalue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bitvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GeneralControlBitSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GeneralControlBitSet)
  return false;
#undef DO_
}

void GeneralControlBitSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GeneralControlBitSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 BitValue = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->bitvalue(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GeneralControlBitSet)
}

::google::protobuf::uint8* GeneralControlBitSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GeneralControlBitSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 BitValue = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->bitvalue(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GeneralControlBitSet)
  return target;
}

size_t GeneralControlBitSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GeneralControlBitSet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint32 BitValue = 1;
  if (has_bitvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bitvalue());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GeneralControlBitSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GeneralControlBitSet)
  GOOGLE_DCHECK_NE(&from, this);
  const GeneralControlBitSet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GeneralControlBitSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GeneralControlBitSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GeneralControlBitSet)
    MergeFrom(*source);
  }
}

void GeneralControlBitSet::MergeFrom(const GeneralControlBitSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GeneralControlBitSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bitvalue()) {
    set_bitvalue(from.bitvalue());
  }
}

void GeneralControlBitSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GeneralControlBitSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GeneralControlBitSet::CopyFrom(const GeneralControlBitSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GeneralControlBitSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GeneralControlBitSet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void GeneralControlBitSet::Swap(GeneralControlBitSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GeneralControlBitSet::InternalSwap(GeneralControlBitSet* other) {
  std::swap(bitvalue_, other->bitvalue_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GeneralControlBitSet::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GeneralControlBitSet

// required uint32 BitValue = 1;
bool GeneralControlBitSet::has_bitvalue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GeneralControlBitSet::set_has_bitvalue() {
  _has_bits_[0] |= 0x00000001u;
}
void GeneralControlBitSet::clear_has_bitvalue() {
  _has_bits_[0] &= ~0x00000001u;
}
void GeneralControlBitSet::clear_bitvalue() {
  bitvalue_ = 0u;
  clear_has_bitvalue();
}
::google::protobuf::uint32 GeneralControlBitSet::bitvalue() const {
  // @@protoc_insertion_point(field_get:micromsg.GeneralControlBitSet.BitValue)
  return bitvalue_;
}
void GeneralControlBitSet::set_bitvalue(::google::protobuf::uint32 value) {
  set_has_bitvalue();
  bitvalue_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GeneralControlBitSet.BitValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeepLinkBitSet::kBitValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeepLinkBitSet::DeepLinkBitSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.DeepLinkBitSet)
}
DeepLinkBitSet::DeepLinkBitSet(const DeepLinkBitSet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bitvalue_ = from.bitvalue_;
  // @@protoc_insertion_point(copy_constructor:micromsg.DeepLinkBitSet)
}

void DeepLinkBitSet::SharedCtor() {
  _cached_size_ = 0;
  bitvalue_ = GOOGLE_ULONGLONG(0);
}

DeepLinkBitSet::~DeepLinkBitSet() {
  // @@protoc_insertion_point(destructor:micromsg.DeepLinkBitSet)
  SharedDtor();
}

void DeepLinkBitSet::SharedDtor() {
}

void DeepLinkBitSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeepLinkBitSet::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeepLinkBitSet& DeepLinkBitSet::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeepLinkBitSet* DeepLinkBitSet::New(::google::protobuf::Arena* arena) const {
  DeepLinkBitSet* n = new DeepLinkBitSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeepLinkBitSet::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.DeepLinkBitSet)
  bitvalue_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DeepLinkBitSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.DeepLinkBitSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint64 BitValue = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_bitvalue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bitvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.DeepLinkBitSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.DeepLinkBitSet)
  return false;
#undef DO_
}

void DeepLinkBitSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.DeepLinkBitSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 BitValue = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->bitvalue(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.DeepLinkBitSet)
}

::google::protobuf::uint8* DeepLinkBitSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.DeepLinkBitSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint64 BitValue = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->bitvalue(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.DeepLinkBitSet)
  return target;
}

size_t DeepLinkBitSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.DeepLinkBitSet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint64 BitValue = 1;
  if (has_bitvalue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bitvalue());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeepLinkBitSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.DeepLinkBitSet)
  GOOGLE_DCHECK_NE(&from, this);
  const DeepLinkBitSet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeepLinkBitSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.DeepLinkBitSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.DeepLinkBitSet)
    MergeFrom(*source);
  }
}

void DeepLinkBitSet::MergeFrom(const DeepLinkBitSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.DeepLinkBitSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bitvalue()) {
    set_bitvalue(from.bitvalue());
  }
}

void DeepLinkBitSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.DeepLinkBitSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeepLinkBitSet::CopyFrom(const DeepLinkBitSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.DeepLinkBitSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeepLinkBitSet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void DeepLinkBitSet::Swap(DeepLinkBitSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeepLinkBitSet::InternalSwap(DeepLinkBitSet* other) {
  std::swap(bitvalue_, other->bitvalue_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeepLinkBitSet::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeepLinkBitSet

// required uint64 BitValue = 1;
bool DeepLinkBitSet::has_bitvalue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DeepLinkBitSet::set_has_bitvalue() {
  _has_bits_[0] |= 0x00000001u;
}
void DeepLinkBitSet::clear_has_bitvalue() {
  _has_bits_[0] &= ~0x00000001u;
}
void DeepLinkBitSet::clear_bitvalue() {
  bitvalue_ = GOOGLE_ULONGLONG(0);
  clear_has_bitvalue();
}
::google::protobuf::uint64 DeepLinkBitSet::bitvalue() const {
  // @@protoc_insertion_point(field_get:micromsg.DeepLinkBitSet.BitValue)
  return bitvalue_;
}
void DeepLinkBitSet::set_bitvalue(::google::protobuf::uint64 value) {
  set_has_bitvalue();
  bitvalue_ = value;
  // @@protoc_insertion_point(field_set:micromsg.DeepLinkBitSet.BitValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BizApiInfo::kApiNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BizApiInfo::BizApiInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.BizApiInfo)
}
BizApiInfo::BizApiInfo(const BizApiInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  apiname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_apiname()) {
    apiname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apiname_);
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.BizApiInfo)
}

void BizApiInfo::SharedCtor() {
  _cached_size_ = 0;
  apiname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BizApiInfo::~BizApiInfo() {
  // @@protoc_insertion_point(destructor:micromsg.BizApiInfo)
  SharedDtor();
}

void BizApiInfo::SharedDtor() {
  apiname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BizApiInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BizApiInfo::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BizApiInfo& BizApiInfo::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

BizApiInfo* BizApiInfo::New(::google::protobuf::Arena* arena) const {
  BizApiInfo* n = new BizApiInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BizApiInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.BizApiInfo)
  if (has_apiname()) {
    GOOGLE_DCHECK(!apiname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*apiname_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BizApiInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.BizApiInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string ApiName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apiname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->apiname().data(), this->apiname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.BizApiInfo.ApiName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.BizApiInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.BizApiInfo)
  return false;
#undef DO_
}

void BizApiInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.BizApiInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string ApiName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->apiname().data(), this->apiname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizApiInfo.ApiName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->apiname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.BizApiInfo)
}

::google::protobuf::uint8* BizApiInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.BizApiInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string ApiName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->apiname().data(), this->apiname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizApiInfo.ApiName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->apiname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.BizApiInfo)
  return target;
}

size_t BizApiInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.BizApiInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string ApiName = 1;
  if (has_apiname()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->apiname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BizApiInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.BizApiInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BizApiInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BizApiInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.BizApiInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.BizApiInfo)
    MergeFrom(*source);
  }
}

void BizApiInfo::MergeFrom(const BizApiInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.BizApiInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_apiname()) {
    set_has_apiname();
    apiname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apiname_);
  }
}

void BizApiInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.BizApiInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BizApiInfo::CopyFrom(const BizApiInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.BizApiInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BizApiInfo::IsInitialized() const {
  return true;
}

void BizApiInfo::Swap(BizApiInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BizApiInfo::InternalSwap(BizApiInfo* other) {
  apiname_.Swap(&other->apiname_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BizApiInfo::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BizApiInfo

// optional string ApiName = 1;
bool BizApiInfo::has_apiname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BizApiInfo::set_has_apiname() {
  _has_bits_[0] |= 0x00000001u;
}
void BizApiInfo::clear_has_apiname() {
  _has_bits_[0] &= ~0x00000001u;
}
void BizApiInfo::clear_apiname() {
  apiname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_apiname();
}
const ::std::string& BizApiInfo::apiname() const {
  // @@protoc_insertion_point(field_get:micromsg.BizApiInfo.ApiName)
  return apiname_.GetNoArena();
}
void BizApiInfo::set_apiname(const ::std::string& value) {
  set_has_apiname();
  apiname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizApiInfo.ApiName)
}
#if LANG_CXX11
void BizApiInfo::set_apiname(::std::string&& value) {
  set_has_apiname();
  apiname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizApiInfo.ApiName)
}
#endif
void BizApiInfo::set_apiname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_apiname();
  apiname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizApiInfo.ApiName)
}
void BizApiInfo::set_apiname(const char* value, size_t size) {
  set_has_apiname();
  apiname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizApiInfo.ApiName)
}
::std::string* BizApiInfo::mutable_apiname() {
  set_has_apiname();
  // @@protoc_insertion_point(field_mutable:micromsg.BizApiInfo.ApiName)
  return apiname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizApiInfo::release_apiname() {
  // @@protoc_insertion_point(field_release:micromsg.BizApiInfo.ApiName)
  clear_has_apiname();
  return apiname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizApiInfo::set_allocated_apiname(::std::string* apiname) {
  if (apiname != NULL) {
    set_has_apiname();
  } else {
    clear_has_apiname();
  }
  apiname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), apiname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizApiInfo.ApiName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BizScopeInfo::kScopeFieldNumber;
const int BizScopeInfo::kScopeStatusFieldNumber;
const int BizScopeInfo::kScopeDescFieldNumber;
const int BizScopeInfo::kApiCountFieldNumber;
const int BizScopeInfo::kApiListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BizScopeInfo::BizScopeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.BizScopeInfo)
}
BizScopeInfo::BizScopeInfo(const BizScopeInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      apilist_(from.apilist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  scope_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_scope()) {
    scope_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scope_);
  }
  scopedesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_scopedesc()) {
    scopedesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scopedesc_);
  }
  ::memcpy(&scopestatus_, &from.scopestatus_,
    reinterpret_cast<char*>(&apicount_) -
    reinterpret_cast<char*>(&scopestatus_) + sizeof(apicount_));
  // @@protoc_insertion_point(copy_constructor:micromsg.BizScopeInfo)
}

void BizScopeInfo::SharedCtor() {
  _cached_size_ = 0;
  scope_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scopedesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&scopestatus_, 0, reinterpret_cast<char*>(&apicount_) -
    reinterpret_cast<char*>(&scopestatus_) + sizeof(apicount_));
}

BizScopeInfo::~BizScopeInfo() {
  // @@protoc_insertion_point(destructor:micromsg.BizScopeInfo)
  SharedDtor();
}

void BizScopeInfo::SharedDtor() {
  scope_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scopedesc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BizScopeInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BizScopeInfo::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BizScopeInfo& BizScopeInfo::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

BizScopeInfo* BizScopeInfo::New(::google::protobuf::Arena* arena) const {
  BizScopeInfo* n = new BizScopeInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BizScopeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.BizScopeInfo)
  apilist_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    if (has_scope()) {
      GOOGLE_DCHECK(!scope_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*scope_.UnsafeRawStringPointer())->clear();
    }
    if (has_scopedesc()) {
      GOOGLE_DCHECK(!scopedesc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*scopedesc_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 12u) {
    ::memset(&scopestatus_, 0, reinterpret_cast<char*>(&apicount_) -
      reinterpret_cast<char*>(&scopestatus_) + sizeof(apicount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BizScopeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.BizScopeInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Scope = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scope()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->scope().data(), this->scope().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.BizScopeInfo.Scope");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ScopeStatus = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_scopestatus();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scopestatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ScopeDesc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scopedesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->scopedesc().data(), this->scopedesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.BizScopeInfo.ScopeDesc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ApiCount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_apicount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &apicount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.BizApiInfo ApiList = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_apilist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.BizScopeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.BizScopeInfo)
  return false;
#undef DO_
}

void BizScopeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.BizScopeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string Scope = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scope().data(), this->scope().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizScopeInfo.Scope");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->scope(), output);
  }

  // required uint32 ScopeStatus = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->scopestatus(), output);
  }

  // optional string ScopeDesc = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scopedesc().data(), this->scopedesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizScopeInfo.ScopeDesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->scopedesc(), output);
  }

  // required uint32 ApiCount = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->apicount(), output);
  }

  // repeated .micromsg.BizApiInfo ApiList = 5;
  for (unsigned int i = 0, n = this->apilist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->apilist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.BizScopeInfo)
}

::google::protobuf::uint8* BizScopeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.BizScopeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string Scope = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scope().data(), this->scope().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizScopeInfo.Scope");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->scope(), target);
  }

  // required uint32 ScopeStatus = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->scopestatus(), target);
  }

  // optional string ScopeDesc = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scopedesc().data(), this->scopedesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizScopeInfo.ScopeDesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->scopedesc(), target);
  }

  // required uint32 ApiCount = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->apicount(), target);
  }

  // repeated .micromsg.BizApiInfo ApiList = 5;
  for (unsigned int i = 0, n = this->apilist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->apilist(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.BizScopeInfo)
  return target;
}

size_t BizScopeInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.BizScopeInfo)
  size_t total_size = 0;

  if (has_scopestatus()) {
    // required uint32 ScopeStatus = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scopestatus());
  }

  if (has_apicount()) {
    // required uint32 ApiCount = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->apicount());
  }

  return total_size;
}
size_t BizScopeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.BizScopeInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000c) ^ 0x0000000c) == 0) {  // All required fields are present.
    // required uint32 ScopeStatus = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scopestatus());

    // required uint32 ApiCount = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->apicount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.BizApiInfo ApiList = 5;
  {
    unsigned int count = this->apilist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->apilist(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string Scope = 1;
    if (has_scope()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->scope());
    }

    // optional string ScopeDesc = 3;
    if (has_scopedesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->scopedesc());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BizScopeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.BizScopeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BizScopeInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BizScopeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.BizScopeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.BizScopeInfo)
    MergeFrom(*source);
  }
}

void BizScopeInfo::MergeFrom(const BizScopeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.BizScopeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  apilist_.MergeFrom(from.apilist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_scope();
      scope_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scope_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_scopedesc();
      scopedesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scopedesc_);
    }
    if (cached_has_bits & 0x00000004u) {
      scopestatus_ = from.scopestatus_;
    }
    if (cached_has_bits & 0x00000008u) {
      apicount_ = from.apicount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BizScopeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.BizScopeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BizScopeInfo::CopyFrom(const BizScopeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.BizScopeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BizScopeInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;
  return true;
}

void BizScopeInfo::Swap(BizScopeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BizScopeInfo::InternalSwap(BizScopeInfo* other) {
  apilist_.InternalSwap(&other->apilist_);
  scope_.Swap(&other->scope_);
  scopedesc_.Swap(&other->scopedesc_);
  std::swap(scopestatus_, other->scopestatus_);
  std::swap(apicount_, other->apicount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BizScopeInfo::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BizScopeInfo

// optional string Scope = 1;
bool BizScopeInfo::has_scope() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BizScopeInfo::set_has_scope() {
  _has_bits_[0] |= 0x00000001u;
}
void BizScopeInfo::clear_has_scope() {
  _has_bits_[0] &= ~0x00000001u;
}
void BizScopeInfo::clear_scope() {
  scope_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_scope();
}
const ::std::string& BizScopeInfo::scope() const {
  // @@protoc_insertion_point(field_get:micromsg.BizScopeInfo.Scope)
  return scope_.GetNoArena();
}
void BizScopeInfo::set_scope(const ::std::string& value) {
  set_has_scope();
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizScopeInfo.Scope)
}
#if LANG_CXX11
void BizScopeInfo::set_scope(::std::string&& value) {
  set_has_scope();
  scope_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizScopeInfo.Scope)
}
#endif
void BizScopeInfo::set_scope(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_scope();
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizScopeInfo.Scope)
}
void BizScopeInfo::set_scope(const char* value, size_t size) {
  set_has_scope();
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizScopeInfo.Scope)
}
::std::string* BizScopeInfo::mutable_scope() {
  set_has_scope();
  // @@protoc_insertion_point(field_mutable:micromsg.BizScopeInfo.Scope)
  return scope_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizScopeInfo::release_scope() {
  // @@protoc_insertion_point(field_release:micromsg.BizScopeInfo.Scope)
  clear_has_scope();
  return scope_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizScopeInfo::set_allocated_scope(::std::string* scope) {
  if (scope != NULL) {
    set_has_scope();
  } else {
    clear_has_scope();
  }
  scope_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scope);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizScopeInfo.Scope)
}

// required uint32 ScopeStatus = 2;
bool BizScopeInfo::has_scopestatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BizScopeInfo::set_has_scopestatus() {
  _has_bits_[0] |= 0x00000004u;
}
void BizScopeInfo::clear_has_scopestatus() {
  _has_bits_[0] &= ~0x00000004u;
}
void BizScopeInfo::clear_scopestatus() {
  scopestatus_ = 0u;
  clear_has_scopestatus();
}
::google::protobuf::uint32 BizScopeInfo::scopestatus() const {
  // @@protoc_insertion_point(field_get:micromsg.BizScopeInfo.ScopeStatus)
  return scopestatus_;
}
void BizScopeInfo::set_scopestatus(::google::protobuf::uint32 value) {
  set_has_scopestatus();
  scopestatus_ = value;
  // @@protoc_insertion_point(field_set:micromsg.BizScopeInfo.ScopeStatus)
}

// optional string ScopeDesc = 3;
bool BizScopeInfo::has_scopedesc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BizScopeInfo::set_has_scopedesc() {
  _has_bits_[0] |= 0x00000002u;
}
void BizScopeInfo::clear_has_scopedesc() {
  _has_bits_[0] &= ~0x00000002u;
}
void BizScopeInfo::clear_scopedesc() {
  scopedesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_scopedesc();
}
const ::std::string& BizScopeInfo::scopedesc() const {
  // @@protoc_insertion_point(field_get:micromsg.BizScopeInfo.ScopeDesc)
  return scopedesc_.GetNoArena();
}
void BizScopeInfo::set_scopedesc(const ::std::string& value) {
  set_has_scopedesc();
  scopedesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizScopeInfo.ScopeDesc)
}
#if LANG_CXX11
void BizScopeInfo::set_scopedesc(::std::string&& value) {
  set_has_scopedesc();
  scopedesc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizScopeInfo.ScopeDesc)
}
#endif
void BizScopeInfo::set_scopedesc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_scopedesc();
  scopedesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizScopeInfo.ScopeDesc)
}
void BizScopeInfo::set_scopedesc(const char* value, size_t size) {
  set_has_scopedesc();
  scopedesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizScopeInfo.ScopeDesc)
}
::std::string* BizScopeInfo::mutable_scopedesc() {
  set_has_scopedesc();
  // @@protoc_insertion_point(field_mutable:micromsg.BizScopeInfo.ScopeDesc)
  return scopedesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizScopeInfo::release_scopedesc() {
  // @@protoc_insertion_point(field_release:micromsg.BizScopeInfo.ScopeDesc)
  clear_has_scopedesc();
  return scopedesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizScopeInfo::set_allocated_scopedesc(::std::string* scopedesc) {
  if (scopedesc != NULL) {
    set_has_scopedesc();
  } else {
    clear_has_scopedesc();
  }
  scopedesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scopedesc);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizScopeInfo.ScopeDesc)
}

// required uint32 ApiCount = 4;
bool BizScopeInfo::has_apicount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BizScopeInfo::set_has_apicount() {
  _has_bits_[0] |= 0x00000008u;
}
void BizScopeInfo::clear_has_apicount() {
  _has_bits_[0] &= ~0x00000008u;
}
void BizScopeInfo::clear_apicount() {
  apicount_ = 0u;
  clear_has_apicount();
}
::google::protobuf::uint32 BizScopeInfo::apicount() const {
  // @@protoc_insertion_point(field_get:micromsg.BizScopeInfo.ApiCount)
  return apicount_;
}
void BizScopeInfo::set_apicount(::google::protobuf::uint32 value) {
  set_has_apicount();
  apicount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.BizScopeInfo.ApiCount)
}

// repeated .micromsg.BizApiInfo ApiList = 5;
int BizScopeInfo::apilist_size() const {
  return apilist_.size();
}
void BizScopeInfo::clear_apilist() {
  apilist_.Clear();
}
const ::micromsg::BizApiInfo& BizScopeInfo::apilist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.BizScopeInfo.ApiList)
  return apilist_.Get(index);
}
::micromsg::BizApiInfo* BizScopeInfo::mutable_apilist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.BizScopeInfo.ApiList)
  return apilist_.Mutable(index);
}
::micromsg::BizApiInfo* BizScopeInfo::add_apilist() {
  // @@protoc_insertion_point(field_add:micromsg.BizScopeInfo.ApiList)
  return apilist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::BizApiInfo >*
BizScopeInfo::mutable_apilist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.BizScopeInfo.ApiList)
  return &apilist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::BizApiInfo >&
BizScopeInfo::apilist() const {
  // @@protoc_insertion_point(field_list:micromsg.BizScopeInfo.ApiList)
  return apilist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YYBStruct::kAndroidDownloadFlagFieldNumber;
const int YYBStruct::kDownloadUrlFieldNumber;
const int YYBStruct::kApkMd5FieldNumber;
const int YYBStruct::kPreemptiveUrlFieldNumber;
const int YYBStruct::kExtInfoFieldNumber;
const int YYBStruct::kDownloadTipsWordingFieldNumber;
const int YYBStruct::kSupportedVersionCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YYBStruct::YYBStruct()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.YYBStruct)
}
YYBStruct::YYBStruct(const YYBStruct& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  downloadurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_downloadurl()) {
    downloadurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.downloadurl_);
  }
  apkmd5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_apkmd5()) {
    apkmd5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apkmd5_);
  }
  preemptiveurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_preemptiveurl()) {
    preemptiveurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.preemptiveurl_);
  }
  extinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_extinfo()) {
    extinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extinfo_);
  }
  downloadtipswording_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_downloadtipswording()) {
    downloadtipswording_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.downloadtipswording_);
  }
  ::memcpy(&androiddownloadflag_, &from.androiddownloadflag_,
    reinterpret_cast<char*>(&supportedversioncode_) -
    reinterpret_cast<char*>(&androiddownloadflag_) + sizeof(supportedversioncode_));
  // @@protoc_insertion_point(copy_constructor:micromsg.YYBStruct)
}

void YYBStruct::SharedCtor() {
  _cached_size_ = 0;
  downloadurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apkmd5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preemptiveurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  downloadtipswording_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&androiddownloadflag_, 0, reinterpret_cast<char*>(&supportedversioncode_) -
    reinterpret_cast<char*>(&androiddownloadflag_) + sizeof(supportedversioncode_));
}

YYBStruct::~YYBStruct() {
  // @@protoc_insertion_point(destructor:micromsg.YYBStruct)
  SharedDtor();
}

void YYBStruct::SharedDtor() {
  downloadurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apkmd5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preemptiveurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  downloadtipswording_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void YYBStruct::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YYBStruct::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const YYBStruct& YYBStruct::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

YYBStruct* YYBStruct::New(::google::protobuf::Arena* arena) const {
  YYBStruct* n = new YYBStruct;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YYBStruct::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.YYBStruct)
  if (_has_bits_[0 / 32] & 31u) {
    if (has_downloadurl()) {
      GOOGLE_DCHECK(!downloadurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*downloadurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_apkmd5()) {
      GOOGLE_DCHECK(!apkmd5_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*apkmd5_.UnsafeRawStringPointer())->clear();
    }
    if (has_preemptiveurl()) {
      GOOGLE_DCHECK(!preemptiveurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*preemptiveurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_extinfo()) {
      GOOGLE_DCHECK(!extinfo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*extinfo_.UnsafeRawStringPointer())->clear();
    }
    if (has_downloadtipswording()) {
      GOOGLE_DCHECK(!downloadtipswording_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*downloadtipswording_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 96u) {
    ::memset(&androiddownloadflag_, 0, reinterpret_cast<char*>(&supportedversioncode_) -
      reinterpret_cast<char*>(&androiddownloadflag_) + sizeof(supportedversioncode_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool YYBStruct::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.YYBStruct)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 AndroidDownloadFlag = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_androiddownloadflag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &androiddownloadflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string DownloadUrl = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_downloadurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->downloadurl().data(), this->downloadurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.YYBStruct.DownloadUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ApkMd5 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apkmd5()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->apkmd5().data(), this->apkmd5().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.YYBStruct.ApkMd5");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string PreemptiveUrl = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_preemptiveurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->preemptiveurl().data(), this->preemptiveurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.YYBStruct.PreemptiveUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ExtInfo = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->extinfo().data(), this->extinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.YYBStruct.ExtInfo");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string DownloadTipsWording = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_downloadtipswording()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->downloadtipswording().data(), this->downloadtipswording().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.YYBStruct.DownloadTipsWording");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 SupportedVersionCode = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_supportedversioncode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &supportedversioncode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.YYBStruct)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.YYBStruct)
  return false;
#undef DO_
}

void YYBStruct::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.YYBStruct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 AndroidDownloadFlag = 1;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->androiddownloadflag(), output);
  }

  // optional string DownloadUrl = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->downloadurl().data(), this->downloadurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.YYBStruct.DownloadUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->downloadurl(), output);
  }

  // optional string ApkMd5 = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->apkmd5().data(), this->apkmd5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.YYBStruct.ApkMd5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->apkmd5(), output);
  }

  // optional string PreemptiveUrl = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->preemptiveurl().data(), this->preemptiveurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.YYBStruct.PreemptiveUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->preemptiveurl(), output);
  }

  // optional string ExtInfo = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extinfo().data(), this->extinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.YYBStruct.ExtInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->extinfo(), output);
  }

  // optional string DownloadTipsWording = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->downloadtipswording().data(), this->downloadtipswording().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.YYBStruct.DownloadTipsWording");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->downloadtipswording(), output);
  }

  // optional int32 SupportedVersionCode = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->supportedversioncode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.YYBStruct)
}

::google::protobuf::uint8* YYBStruct::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.YYBStruct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 AndroidDownloadFlag = 1;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->androiddownloadflag(), target);
  }

  // optional string DownloadUrl = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->downloadurl().data(), this->downloadurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.YYBStruct.DownloadUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->downloadurl(), target);
  }

  // optional string ApkMd5 = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->apkmd5().data(), this->apkmd5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.YYBStruct.ApkMd5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->apkmd5(), target);
  }

  // optional string PreemptiveUrl = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->preemptiveurl().data(), this->preemptiveurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.YYBStruct.PreemptiveUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->preemptiveurl(), target);
  }

  // optional string ExtInfo = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extinfo().data(), this->extinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.YYBStruct.ExtInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->extinfo(), target);
  }

  // optional string DownloadTipsWording = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->downloadtipswording().data(), this->downloadtipswording().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.YYBStruct.DownloadTipsWording");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->downloadtipswording(), target);
  }

  // optional int32 SupportedVersionCode = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->supportedversioncode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.YYBStruct)
  return target;
}

size_t YYBStruct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.YYBStruct)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string DownloadUrl = 2;
    if (has_downloadurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->downloadurl());
    }

    // optional string ApkMd5 = 3;
    if (has_apkmd5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->apkmd5());
    }

    // optional string PreemptiveUrl = 4;
    if (has_preemptiveurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->preemptiveurl());
    }

    // optional string ExtInfo = 5;
    if (has_extinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extinfo());
    }

    // optional string DownloadTipsWording = 6;
    if (has_downloadtipswording()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->downloadtipswording());
    }

    // optional uint32 AndroidDownloadFlag = 1;
    if (has_androiddownloadflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->androiddownloadflag());
    }

    // optional int32 SupportedVersionCode = 7;
    if (has_supportedversioncode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->supportedversioncode());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YYBStruct::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.YYBStruct)
  GOOGLE_DCHECK_NE(&from, this);
  const YYBStruct* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YYBStruct>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.YYBStruct)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.YYBStruct)
    MergeFrom(*source);
  }
}

void YYBStruct::MergeFrom(const YYBStruct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.YYBStruct)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_downloadurl();
      downloadurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.downloadurl_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_apkmd5();
      apkmd5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apkmd5_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_preemptiveurl();
      preemptiveurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.preemptiveurl_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_extinfo();
      extinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extinfo_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_downloadtipswording();
      downloadtipswording_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.downloadtipswording_);
    }
    if (cached_has_bits & 0x00000020u) {
      androiddownloadflag_ = from.androiddownloadflag_;
    }
    if (cached_has_bits & 0x00000040u) {
      supportedversioncode_ = from.supportedversioncode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void YYBStruct::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.YYBStruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YYBStruct::CopyFrom(const YYBStruct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.YYBStruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YYBStruct::IsInitialized() const {
  return true;
}

void YYBStruct::Swap(YYBStruct* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YYBStruct::InternalSwap(YYBStruct* other) {
  downloadurl_.Swap(&other->downloadurl_);
  apkmd5_.Swap(&other->apkmd5_);
  preemptiveurl_.Swap(&other->preemptiveurl_);
  extinfo_.Swap(&other->extinfo_);
  downloadtipswording_.Swap(&other->downloadtipswording_);
  std::swap(androiddownloadflag_, other->androiddownloadflag_);
  std::swap(supportedversioncode_, other->supportedversioncode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YYBStruct::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YYBStruct

// optional uint32 AndroidDownloadFlag = 1;
bool YYBStruct::has_androiddownloadflag() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void YYBStruct::set_has_androiddownloadflag() {
  _has_bits_[0] |= 0x00000020u;
}
void YYBStruct::clear_has_androiddownloadflag() {
  _has_bits_[0] &= ~0x00000020u;
}
void YYBStruct::clear_androiddownloadflag() {
  androiddownloadflag_ = 0u;
  clear_has_androiddownloadflag();
}
::google::protobuf::uint32 YYBStruct::androiddownloadflag() const {
  // @@protoc_insertion_point(field_get:micromsg.YYBStruct.AndroidDownloadFlag)
  return androiddownloadflag_;
}
void YYBStruct::set_androiddownloadflag(::google::protobuf::uint32 value) {
  set_has_androiddownloadflag();
  androiddownloadflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.YYBStruct.AndroidDownloadFlag)
}

// optional string DownloadUrl = 2;
bool YYBStruct::has_downloadurl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void YYBStruct::set_has_downloadurl() {
  _has_bits_[0] |= 0x00000001u;
}
void YYBStruct::clear_has_downloadurl() {
  _has_bits_[0] &= ~0x00000001u;
}
void YYBStruct::clear_downloadurl() {
  downloadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_downloadurl();
}
const ::std::string& YYBStruct::downloadurl() const {
  // @@protoc_insertion_point(field_get:micromsg.YYBStruct.DownloadUrl)
  return downloadurl_.GetNoArena();
}
void YYBStruct::set_downloadurl(const ::std::string& value) {
  set_has_downloadurl();
  downloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.YYBStruct.DownloadUrl)
}
#if LANG_CXX11
void YYBStruct::set_downloadurl(::std::string&& value) {
  set_has_downloadurl();
  downloadurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.YYBStruct.DownloadUrl)
}
#endif
void YYBStruct::set_downloadurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_downloadurl();
  downloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.YYBStruct.DownloadUrl)
}
void YYBStruct::set_downloadurl(const char* value, size_t size) {
  set_has_downloadurl();
  downloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.YYBStruct.DownloadUrl)
}
::std::string* YYBStruct::mutable_downloadurl() {
  set_has_downloadurl();
  // @@protoc_insertion_point(field_mutable:micromsg.YYBStruct.DownloadUrl)
  return downloadurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YYBStruct::release_downloadurl() {
  // @@protoc_insertion_point(field_release:micromsg.YYBStruct.DownloadUrl)
  clear_has_downloadurl();
  return downloadurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YYBStruct::set_allocated_downloadurl(::std::string* downloadurl) {
  if (downloadurl != NULL) {
    set_has_downloadurl();
  } else {
    clear_has_downloadurl();
  }
  downloadurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), downloadurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.YYBStruct.DownloadUrl)
}

// optional string ApkMd5 = 3;
bool YYBStruct::has_apkmd5() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void YYBStruct::set_has_apkmd5() {
  _has_bits_[0] |= 0x00000002u;
}
void YYBStruct::clear_has_apkmd5() {
  _has_bits_[0] &= ~0x00000002u;
}
void YYBStruct::clear_apkmd5() {
  apkmd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_apkmd5();
}
const ::std::string& YYBStruct::apkmd5() const {
  // @@protoc_insertion_point(field_get:micromsg.YYBStruct.ApkMd5)
  return apkmd5_.GetNoArena();
}
void YYBStruct::set_apkmd5(const ::std::string& value) {
  set_has_apkmd5();
  apkmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.YYBStruct.ApkMd5)
}
#if LANG_CXX11
void YYBStruct::set_apkmd5(::std::string&& value) {
  set_has_apkmd5();
  apkmd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.YYBStruct.ApkMd5)
}
#endif
void YYBStruct::set_apkmd5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_apkmd5();
  apkmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.YYBStruct.ApkMd5)
}
void YYBStruct::set_apkmd5(const char* value, size_t size) {
  set_has_apkmd5();
  apkmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.YYBStruct.ApkMd5)
}
::std::string* YYBStruct::mutable_apkmd5() {
  set_has_apkmd5();
  // @@protoc_insertion_point(field_mutable:micromsg.YYBStruct.ApkMd5)
  return apkmd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YYBStruct::release_apkmd5() {
  // @@protoc_insertion_point(field_release:micromsg.YYBStruct.ApkMd5)
  clear_has_apkmd5();
  return apkmd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YYBStruct::set_allocated_apkmd5(::std::string* apkmd5) {
  if (apkmd5 != NULL) {
    set_has_apkmd5();
  } else {
    clear_has_apkmd5();
  }
  apkmd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), apkmd5);
  // @@protoc_insertion_point(field_set_allocated:micromsg.YYBStruct.ApkMd5)
}

// optional string PreemptiveUrl = 4;
bool YYBStruct::has_preemptiveurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void YYBStruct::set_has_preemptiveurl() {
  _has_bits_[0] |= 0x00000004u;
}
void YYBStruct::clear_has_preemptiveurl() {
  _has_bits_[0] &= ~0x00000004u;
}
void YYBStruct::clear_preemptiveurl() {
  preemptiveurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_preemptiveurl();
}
const ::std::string& YYBStruct::preemptiveurl() const {
  // @@protoc_insertion_point(field_get:micromsg.YYBStruct.PreemptiveUrl)
  return preemptiveurl_.GetNoArena();
}
void YYBStruct::set_preemptiveurl(const ::std::string& value) {
  set_has_preemptiveurl();
  preemptiveurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.YYBStruct.PreemptiveUrl)
}
#if LANG_CXX11
void YYBStruct::set_preemptiveurl(::std::string&& value) {
  set_has_preemptiveurl();
  preemptiveurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.YYBStruct.PreemptiveUrl)
}
#endif
void YYBStruct::set_preemptiveurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_preemptiveurl();
  preemptiveurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.YYBStruct.PreemptiveUrl)
}
void YYBStruct::set_preemptiveurl(const char* value, size_t size) {
  set_has_preemptiveurl();
  preemptiveurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.YYBStruct.PreemptiveUrl)
}
::std::string* YYBStruct::mutable_preemptiveurl() {
  set_has_preemptiveurl();
  // @@protoc_insertion_point(field_mutable:micromsg.YYBStruct.PreemptiveUrl)
  return preemptiveurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YYBStruct::release_preemptiveurl() {
  // @@protoc_insertion_point(field_release:micromsg.YYBStruct.PreemptiveUrl)
  clear_has_preemptiveurl();
  return preemptiveurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YYBStruct::set_allocated_preemptiveurl(::std::string* preemptiveurl) {
  if (preemptiveurl != NULL) {
    set_has_preemptiveurl();
  } else {
    clear_has_preemptiveurl();
  }
  preemptiveurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), preemptiveurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.YYBStruct.PreemptiveUrl)
}

// optional string ExtInfo = 5;
bool YYBStruct::has_extinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void YYBStruct::set_has_extinfo() {
  _has_bits_[0] |= 0x00000008u;
}
void YYBStruct::clear_has_extinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
void YYBStruct::clear_extinfo() {
  extinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_extinfo();
}
const ::std::string& YYBStruct::extinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.YYBStruct.ExtInfo)
  return extinfo_.GetNoArena();
}
void YYBStruct::set_extinfo(const ::std::string& value) {
  set_has_extinfo();
  extinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.YYBStruct.ExtInfo)
}
#if LANG_CXX11
void YYBStruct::set_extinfo(::std::string&& value) {
  set_has_extinfo();
  extinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.YYBStruct.ExtInfo)
}
#endif
void YYBStruct::set_extinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_extinfo();
  extinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.YYBStruct.ExtInfo)
}
void YYBStruct::set_extinfo(const char* value, size_t size) {
  set_has_extinfo();
  extinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.YYBStruct.ExtInfo)
}
::std::string* YYBStruct::mutable_extinfo() {
  set_has_extinfo();
  // @@protoc_insertion_point(field_mutable:micromsg.YYBStruct.ExtInfo)
  return extinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YYBStruct::release_extinfo() {
  // @@protoc_insertion_point(field_release:micromsg.YYBStruct.ExtInfo)
  clear_has_extinfo();
  return extinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YYBStruct::set_allocated_extinfo(::std::string* extinfo) {
  if (extinfo != NULL) {
    set_has_extinfo();
  } else {
    clear_has_extinfo();
  }
  extinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extinfo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.YYBStruct.ExtInfo)
}

// optional string DownloadTipsWording = 6;
bool YYBStruct::has_downloadtipswording() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void YYBStruct::set_has_downloadtipswording() {
  _has_bits_[0] |= 0x00000010u;
}
void YYBStruct::clear_has_downloadtipswording() {
  _has_bits_[0] &= ~0x00000010u;
}
void YYBStruct::clear_downloadtipswording() {
  downloadtipswording_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_downloadtipswording();
}
const ::std::string& YYBStruct::downloadtipswording() const {
  // @@protoc_insertion_point(field_get:micromsg.YYBStruct.DownloadTipsWording)
  return downloadtipswording_.GetNoArena();
}
void YYBStruct::set_downloadtipswording(const ::std::string& value) {
  set_has_downloadtipswording();
  downloadtipswording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.YYBStruct.DownloadTipsWording)
}
#if LANG_CXX11
void YYBStruct::set_downloadtipswording(::std::string&& value) {
  set_has_downloadtipswording();
  downloadtipswording_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.YYBStruct.DownloadTipsWording)
}
#endif
void YYBStruct::set_downloadtipswording(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_downloadtipswording();
  downloadtipswording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.YYBStruct.DownloadTipsWording)
}
void YYBStruct::set_downloadtipswording(const char* value, size_t size) {
  set_has_downloadtipswording();
  downloadtipswording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.YYBStruct.DownloadTipsWording)
}
::std::string* YYBStruct::mutable_downloadtipswording() {
  set_has_downloadtipswording();
  // @@protoc_insertion_point(field_mutable:micromsg.YYBStruct.DownloadTipsWording)
  return downloadtipswording_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YYBStruct::release_downloadtipswording() {
  // @@protoc_insertion_point(field_release:micromsg.YYBStruct.DownloadTipsWording)
  clear_has_downloadtipswording();
  return downloadtipswording_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YYBStruct::set_allocated_downloadtipswording(::std::string* downloadtipswording) {
  if (downloadtipswording != NULL) {
    set_has_downloadtipswording();
  } else {
    clear_has_downloadtipswording();
  }
  downloadtipswording_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), downloadtipswording);
  // @@protoc_insertion_point(field_set_allocated:micromsg.YYBStruct.DownloadTipsWording)
}

// optional int32 SupportedVersionCode = 7;
bool YYBStruct::has_supportedversioncode() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void YYBStruct::set_has_supportedversioncode() {
  _has_bits_[0] |= 0x00000040u;
}
void YYBStruct::clear_has_supportedversioncode() {
  _has_bits_[0] &= ~0x00000040u;
}
void YYBStruct::clear_supportedversioncode() {
  supportedversioncode_ = 0;
  clear_has_supportedversioncode();
}
::google::protobuf::int32 YYBStruct::supportedversioncode() const {
  // @@protoc_insertion_point(field_get:micromsg.YYBStruct.SupportedVersionCode)
  return supportedversioncode_;
}
void YYBStruct::set_supportedversioncode(::google::protobuf::int32 value) {
  set_has_supportedversioncode();
  supportedversioncode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.YYBStruct.SupportedVersionCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetA8KeyResp::kBaseResponseFieldNumber;
const int GetA8KeyResp::kFullURLFieldNumber;
const int GetA8KeyResp::kA8KeyFieldNumber;
const int GetA8KeyResp::kActionCodeFieldNumber;
const int GetA8KeyResp::kTitleFieldNumber;
const int GetA8KeyResp::kContentFieldNumber;
const int GetA8KeyResp::kJSAPIPermissionFieldNumber;
const int GetA8KeyResp::kGeneralControlBitSetFieldNumber;
const int GetA8KeyResp::kUserNameFieldNumber;
const int GetA8KeyResp::kShareURLFieldNumber;
const int GetA8KeyResp::kScopeCountFieldNumber;
const int GetA8KeyResp::kScopeListFieldNumber;
const int GetA8KeyResp::kAntispamTicketFieldNumber;
const int GetA8KeyResp::kSSIDFieldNumber;
const int GetA8KeyResp::kMIDFieldNumber;
const int GetA8KeyResp::kDeepLinkBitSetFieldNumber;
const int GetA8KeyResp::kJSAPIControlBytesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetA8KeyResp::GetA8KeyResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetA8KeyResp)
}
GetA8KeyResp::GetA8KeyResp(const GetA8KeyResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      scopelist_(from.scopelist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fullurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_fullurl()) {
    fullurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fullurl_);
  }
  a8key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_a8key()) {
    a8key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.a8key_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_content()) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  shareurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_shareurl()) {
    shareurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shareurl_);
  }
  antispamticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_antispamticket()) {
    antispamticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.antispamticket_);
  }
  ssid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ssid()) {
    ssid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ssid_);
  }
  mid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mid()) {
    mid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mid_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  if (from.has_jsapipermission()) {
    jsapipermission_ = new ::micromsg::JSAPIPermissionBitSet(*from.jsapipermission_);
  } else {
    jsapipermission_ = NULL;
  }
  if (from.has_generalcontrolbitset()) {
    generalcontrolbitset_ = new ::micromsg::GeneralControlBitSet(*from.generalcontrolbitset_);
  } else {
    generalcontrolbitset_ = NULL;
  }
  if (from.has_deeplinkbitset()) {
    deeplinkbitset_ = new ::micromsg::DeepLinkBitSet(*from.deeplinkbitset_);
  } else {
    deeplinkbitset_ = NULL;
  }
  if (from.has_jsapicontrolbytes()) {
    jsapicontrolbytes_ = new ::micromsg::SKBuiltinBuffer_t(*from.jsapicontrolbytes_);
  } else {
    jsapicontrolbytes_ = NULL;
  }
  ::memcpy(&actioncode_, &from.actioncode_,
    reinterpret_cast<char*>(&scopecount_) -
    reinterpret_cast<char*>(&actioncode_) + sizeof(scopecount_));
  // @@protoc_insertion_point(copy_constructor:micromsg.GetA8KeyResp)
}

void GetA8KeyResp::SharedCtor() {
  _cached_size_ = 0;
  fullurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  a8key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shareurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  antispamticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ssid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&scopecount_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(scopecount_));
}

GetA8KeyResp::~GetA8KeyResp() {
  // @@protoc_insertion_point(destructor:micromsg.GetA8KeyResp)
  SharedDtor();
}

void GetA8KeyResp::SharedDtor() {
  fullurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  a8key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shareurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  antispamticket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ssid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
  if (this != internal_default_instance()) {
    delete jsapipermission_;
  }
  if (this != internal_default_instance()) {
    delete generalcontrolbitset_;
  }
  if (this != internal_default_instance()) {
    delete deeplinkbitset_;
  }
  if (this != internal_default_instance()) {
    delete jsapicontrolbytes_;
  }
}

void GetA8KeyResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetA8KeyResp::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetA8KeyResp& GetA8KeyResp::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetA8KeyResp* GetA8KeyResp::New(::google::protobuf::Arena* arena) const {
  GetA8KeyResp* n = new GetA8KeyResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetA8KeyResp::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetA8KeyResp)
  scopelist_.Clear();
  if (_has_bits_[0 / 32] & 255u) {
    if (has_fullurl()) {
      GOOGLE_DCHECK(!fullurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*fullurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_a8key()) {
      GOOGLE_DCHECK(!a8key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*a8key_.UnsafeRawStringPointer())->clear();
    }
    if (has_title()) {
      GOOGLE_DCHECK(!title_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*title_.UnsafeRawStringPointer())->clear();
    }
    if (has_content()) {
      GOOGLE_DCHECK(!content_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*content_.UnsafeRawStringPointer())->clear();
    }
    if (has_username()) {
      GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*username_.UnsafeRawStringPointer())->clear();
    }
    if (has_shareurl()) {
      GOOGLE_DCHECK(!shareurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*shareurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_antispamticket()) {
      GOOGLE_DCHECK(!antispamticket_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*antispamticket_.UnsafeRawStringPointer())->clear();
    }
    if (has_ssid()) {
      GOOGLE_DCHECK(!ssid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*ssid_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[8 / 32] & 16128u) {
    if (has_mid()) {
      GOOGLE_DCHECK(!mid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*mid_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
    if (has_jsapipermission()) {
      GOOGLE_DCHECK(jsapipermission_ != NULL);
      jsapipermission_->::micromsg::JSAPIPermissionBitSet::Clear();
    }
    if (has_generalcontrolbitset()) {
      GOOGLE_DCHECK(generalcontrolbitset_ != NULL);
      generalcontrolbitset_->::micromsg::GeneralControlBitSet::Clear();
    }
    if (has_deeplinkbitset()) {
      GOOGLE_DCHECK(deeplinkbitset_ != NULL);
      deeplinkbitset_->::micromsg::DeepLinkBitSet::Clear();
    }
    if (has_jsapicontrolbytes()) {
      GOOGLE_DCHECK(jsapicontrolbytes_ != NULL);
      jsapicontrolbytes_->::micromsg::SKBuiltinBuffer_t::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 49152u) {
    ::memset(&actioncode_, 0, reinterpret_cast<char*>(&scopecount_) -
      reinterpret_cast<char*>(&actioncode_) + sizeof(scopecount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetA8KeyResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetA8KeyResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string FullURL = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fullurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fullurl().data(), this->fullurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetA8KeyResp.FullURL");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string A8Key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_a8key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->a8key().data(), this->a8key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetA8KeyResp.A8Key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ActionCode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_actioncode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &actioncode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Title = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetA8KeyResp.Title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Content = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetA8KeyResp.Content");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .micromsg.JSAPIPermissionBitSet JSAPIPermission = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_jsapipermission()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .micromsg.GeneralControlBitSet GeneralControlBitSet = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_generalcontrolbitset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string UserName = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetA8KeyResp.UserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ShareURL = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shareurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->shareurl().data(), this->shareurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetA8KeyResp.ShareURL");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ScopeCount = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {
          set_has_scopecount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scopecount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.BizScopeInfo ScopeList = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_scopelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AntispamTicket = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_antispamticket()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->antispamticket().data(), this->antispamticket().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetA8KeyResp.AntispamTicket");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string SSID = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ssid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ssid().data(), this->ssid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetA8KeyResp.SSID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string MID = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mid().data(), this->mid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetA8KeyResp.MID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .micromsg.DeepLinkBitSet DeepLinkBitSet = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_deeplinkbitset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .micromsg.SKBuiltinBuffer_t JSAPIControlBytes = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_jsapicontrolbytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetA8KeyResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetA8KeyResp)
  return false;
#undef DO_
}

void GetA8KeyResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetA8KeyResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // optional string FullURL = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fullurl().data(), this->fullurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetA8KeyResp.FullURL");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->fullurl(), output);
  }

  // optional string A8Key = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->a8key().data(), this->a8key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetA8KeyResp.A8Key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->a8key(), output);
  }

  // optional uint32 ActionCode = 4;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->actioncode(), output);
  }

  // optional string Title = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetA8KeyResp.Title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->title(), output);
  }

  // optional string Content = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetA8KeyResp.Content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->content(), output);
  }

  // optional .micromsg.JSAPIPermissionBitSet JSAPIPermission = 7;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->jsapipermission_, output);
  }

  // optional .micromsg.GeneralControlBitSet GeneralControlBitSet = 8;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->generalcontrolbitset_, output);
  }

  // optional string UserName = 9;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetA8KeyResp.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->username(), output);
  }

  // optional string ShareURL = 15;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->shareurl().data(), this->shareurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetA8KeyResp.ShareURL");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->shareurl(), output);
  }

  // optional uint32 ScopeCount = 16;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->scopecount(), output);
  }

  // repeated .micromsg.BizScopeInfo ScopeList = 17;
  for (unsigned int i = 0, n = this->scopelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->scopelist(i), output);
  }

  // optional string AntispamTicket = 18;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->antispamticket().data(), this->antispamticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetA8KeyResp.AntispamTicket");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->antispamticket(), output);
  }

  // optional string SSID = 20;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ssid().data(), this->ssid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetA8KeyResp.SSID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->ssid(), output);
  }

  // optional string MID = 21;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mid().data(), this->mid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetA8KeyResp.MID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->mid(), output);
  }

  // optional .micromsg.DeepLinkBitSet DeepLinkBitSet = 22;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, *this->deeplinkbitset_, output);
  }

  // optional .micromsg.SKBuiltinBuffer_t JSAPIControlBytes = 23;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, *this->jsapicontrolbytes_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetA8KeyResp)
}

::google::protobuf::uint8* GetA8KeyResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetA8KeyResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // optional string FullURL = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fullurl().data(), this->fullurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetA8KeyResp.FullURL");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->fullurl(), target);
  }

  // optional string A8Key = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->a8key().data(), this->a8key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetA8KeyResp.A8Key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->a8key(), target);
  }

  // optional uint32 ActionCode = 4;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->actioncode(), target);
  }

  // optional string Title = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetA8KeyResp.Title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->title(), target);
  }

  // optional string Content = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetA8KeyResp.Content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->content(), target);
  }

  // optional .micromsg.JSAPIPermissionBitSet JSAPIPermission = 7;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->jsapipermission_, deterministic, target);
  }

  // optional .micromsg.GeneralControlBitSet GeneralControlBitSet = 8;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->generalcontrolbitset_, deterministic, target);
  }

  // optional string UserName = 9;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetA8KeyResp.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->username(), target);
  }

  // optional string ShareURL = 15;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->shareurl().data(), this->shareurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetA8KeyResp.ShareURL");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->shareurl(), target);
  }

  // optional uint32 ScopeCount = 16;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->scopecount(), target);
  }

  // repeated .micromsg.BizScopeInfo ScopeList = 17;
  for (unsigned int i = 0, n = this->scopelist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        17, this->scopelist(i), deterministic, target);
  }

  // optional string AntispamTicket = 18;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->antispamticket().data(), this->antispamticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetA8KeyResp.AntispamTicket");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->antispamticket(), target);
  }

  // optional string SSID = 20;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ssid().data(), this->ssid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetA8KeyResp.SSID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->ssid(), target);
  }

  // optional string MID = 21;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mid().data(), this->mid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetA8KeyResp.MID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->mid(), target);
  }

  // optional .micromsg.DeepLinkBitSet DeepLinkBitSet = 22;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        22, *this->deeplinkbitset_, deterministic, target);
  }

  // optional .micromsg.SKBuiltinBuffer_t JSAPIControlBytes = 23;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        23, *this->jsapicontrolbytes_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetA8KeyResp)
  return target;
}

size_t GetA8KeyResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetA8KeyResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (has_baseresponse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }
  // repeated .micromsg.BizScopeInfo ScopeList = 17;
  {
    unsigned int count = this->scopelist_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->scopelist(i));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string FullURL = 2;
    if (has_fullurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fullurl());
    }

    // optional string A8Key = 3;
    if (has_a8key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->a8key());
    }

    // optional string Title = 5;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string Content = 6;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }

    // optional string UserName = 9;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional string ShareURL = 15;
    if (has_shareurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->shareurl());
    }

    // optional string AntispamTicket = 18;
    if (has_antispamticket()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->antispamticket());
    }

    // optional string SSID = 20;
    if (has_ssid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ssid());
    }

  }
  // optional string MID = 21;
  if (has_mid()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mid());
  }

  if (_has_bits_[8 / 32] & 64512u) {
    // optional .micromsg.JSAPIPermissionBitSet JSAPIPermission = 7;
    if (has_jsapipermission()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->jsapipermission_);
    }

    // optional .micromsg.GeneralControlBitSet GeneralControlBitSet = 8;
    if (has_generalcontrolbitset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->generalcontrolbitset_);
    }

    // optional .micromsg.DeepLinkBitSet DeepLinkBitSet = 22;
    if (has_deeplinkbitset()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->deeplinkbitset_);
    }

    // optional .micromsg.SKBuiltinBuffer_t JSAPIControlBytes = 23;
    if (has_jsapicontrolbytes()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->jsapicontrolbytes_);
    }

    // optional uint32 ActionCode = 4;
    if (has_actioncode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->actioncode());
    }

    // optional uint32 ScopeCount = 16;
    if (has_scopecount()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->scopecount());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetA8KeyResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetA8KeyResp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetA8KeyResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetA8KeyResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetA8KeyResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetA8KeyResp)
    MergeFrom(*source);
  }
}

void GetA8KeyResp::MergeFrom(const GetA8KeyResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetA8KeyResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  scopelist_.MergeFrom(from.scopelist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_fullurl();
      fullurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fullurl_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_a8key();
      a8key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.a8key_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_content();
      content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_shareurl();
      shareurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shareurl_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_antispamticket();
      antispamticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.antispamticket_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_ssid();
      ssid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ssid_);
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_mid();
      mid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mid_);
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_jsapipermission()->::micromsg::JSAPIPermissionBitSet::MergeFrom(from.jsapipermission());
    }
    if (cached_has_bits & 0x00000800u) {
      mutable_generalcontrolbitset()->::micromsg::GeneralControlBitSet::MergeFrom(from.generalcontrolbitset());
    }
    if (cached_has_bits & 0x00001000u) {
      mutable_deeplinkbitset()->::micromsg::DeepLinkBitSet::MergeFrom(from.deeplinkbitset());
    }
    if (cached_has_bits & 0x00002000u) {
      mutable_jsapicontrolbytes()->::micromsg::SKBuiltinBuffer_t::MergeFrom(from.jsapicontrolbytes());
    }
    if (cached_has_bits & 0x00004000u) {
      actioncode_ = from.actioncode_;
    }
    if (cached_has_bits & 0x00008000u) {
      scopecount_ = from.scopecount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetA8KeyResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetA8KeyResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetA8KeyResp::CopyFrom(const GetA8KeyResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetA8KeyResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetA8KeyResp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000200) != 0x00000200) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->scopelist())) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  if (has_jsapipermission()) {
    if (!this->jsapipermission_->IsInitialized()) return false;
  }
  if (has_generalcontrolbitset()) {
    if (!this->generalcontrolbitset_->IsInitialized()) return false;
  }
  if (has_deeplinkbitset()) {
    if (!this->deeplinkbitset_->IsInitialized()) return false;
  }
  if (has_jsapicontrolbytes()) {
    if (!this->jsapicontrolbytes_->IsInitialized()) return false;
  }
  return true;
}

void GetA8KeyResp::Swap(GetA8KeyResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetA8KeyResp::InternalSwap(GetA8KeyResp* other) {
  scopelist_.InternalSwap(&other->scopelist_);
  fullurl_.Swap(&other->fullurl_);
  a8key_.Swap(&other->a8key_);
  title_.Swap(&other->title_);
  content_.Swap(&other->content_);
  username_.Swap(&other->username_);
  shareurl_.Swap(&other->shareurl_);
  antispamticket_.Swap(&other->antispamticket_);
  ssid_.Swap(&other->ssid_);
  mid_.Swap(&other->mid_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(jsapipermission_, other->jsapipermission_);
  std::swap(generalcontrolbitset_, other->generalcontrolbitset_);
  std::swap(deeplinkbitset_, other->deeplinkbitset_);
  std::swap(jsapicontrolbytes_, other->jsapicontrolbytes_);
  std::swap(actioncode_, other->actioncode_);
  std::swap(scopecount_, other->scopecount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetA8KeyResp::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetA8KeyResp

// required .micromsg.BaseResponse BaseResponse = 1;
bool GetA8KeyResp::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void GetA8KeyResp::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000200u;
}
void GetA8KeyResp::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000200u;
}
void GetA8KeyResp::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& GetA8KeyResp::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyResp.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* GetA8KeyResp::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyResp.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* GetA8KeyResp::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyResp.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void GetA8KeyResp::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyResp.BaseResponse)
}

// optional string FullURL = 2;
bool GetA8KeyResp::has_fullurl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetA8KeyResp::set_has_fullurl() {
  _has_bits_[0] |= 0x00000001u;
}
void GetA8KeyResp::clear_has_fullurl() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetA8KeyResp::clear_fullurl() {
  fullurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fullurl();
}
const ::std::string& GetA8KeyResp::fullurl() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyResp.FullURL)
  return fullurl_.GetNoArena();
}
void GetA8KeyResp::set_fullurl(const ::std::string& value) {
  set_has_fullurl();
  fullurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyResp.FullURL)
}
#if LANG_CXX11
void GetA8KeyResp::set_fullurl(::std::string&& value) {
  set_has_fullurl();
  fullurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetA8KeyResp.FullURL)
}
#endif
void GetA8KeyResp::set_fullurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_fullurl();
  fullurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetA8KeyResp.FullURL)
}
void GetA8KeyResp::set_fullurl(const char* value, size_t size) {
  set_has_fullurl();
  fullurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetA8KeyResp.FullURL)
}
::std::string* GetA8KeyResp::mutable_fullurl() {
  set_has_fullurl();
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyResp.FullURL)
  return fullurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetA8KeyResp::release_fullurl() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyResp.FullURL)
  clear_has_fullurl();
  return fullurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetA8KeyResp::set_allocated_fullurl(::std::string* fullurl) {
  if (fullurl != NULL) {
    set_has_fullurl();
  } else {
    clear_has_fullurl();
  }
  fullurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fullurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyResp.FullURL)
}

// optional string A8Key = 3;
bool GetA8KeyResp::has_a8key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetA8KeyResp::set_has_a8key() {
  _has_bits_[0] |= 0x00000002u;
}
void GetA8KeyResp::clear_has_a8key() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetA8KeyResp::clear_a8key() {
  a8key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_a8key();
}
const ::std::string& GetA8KeyResp::a8key() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyResp.A8Key)
  return a8key_.GetNoArena();
}
void GetA8KeyResp::set_a8key(const ::std::string& value) {
  set_has_a8key();
  a8key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyResp.A8Key)
}
#if LANG_CXX11
void GetA8KeyResp::set_a8key(::std::string&& value) {
  set_has_a8key();
  a8key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetA8KeyResp.A8Key)
}
#endif
void GetA8KeyResp::set_a8key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_a8key();
  a8key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetA8KeyResp.A8Key)
}
void GetA8KeyResp::set_a8key(const char* value, size_t size) {
  set_has_a8key();
  a8key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetA8KeyResp.A8Key)
}
::std::string* GetA8KeyResp::mutable_a8key() {
  set_has_a8key();
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyResp.A8Key)
  return a8key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetA8KeyResp::release_a8key() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyResp.A8Key)
  clear_has_a8key();
  return a8key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetA8KeyResp::set_allocated_a8key(::std::string* a8key) {
  if (a8key != NULL) {
    set_has_a8key();
  } else {
    clear_has_a8key();
  }
  a8key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), a8key);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyResp.A8Key)
}

// optional uint32 ActionCode = 4;
bool GetA8KeyResp::has_actioncode() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void GetA8KeyResp::set_has_actioncode() {
  _has_bits_[0] |= 0x00004000u;
}
void GetA8KeyResp::clear_has_actioncode() {
  _has_bits_[0] &= ~0x00004000u;
}
void GetA8KeyResp::clear_actioncode() {
  actioncode_ = 0u;
  clear_has_actioncode();
}
::google::protobuf::uint32 GetA8KeyResp::actioncode() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyResp.ActionCode)
  return actioncode_;
}
void GetA8KeyResp::set_actioncode(::google::protobuf::uint32 value) {
  set_has_actioncode();
  actioncode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyResp.ActionCode)
}

// optional string Title = 5;
bool GetA8KeyResp::has_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetA8KeyResp::set_has_title() {
  _has_bits_[0] |= 0x00000004u;
}
void GetA8KeyResp::clear_has_title() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetA8KeyResp::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
const ::std::string& GetA8KeyResp::title() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyResp.Title)
  return title_.GetNoArena();
}
void GetA8KeyResp::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyResp.Title)
}
#if LANG_CXX11
void GetA8KeyResp::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetA8KeyResp.Title)
}
#endif
void GetA8KeyResp::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetA8KeyResp.Title)
}
void GetA8KeyResp::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetA8KeyResp.Title)
}
::std::string* GetA8KeyResp::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyResp.Title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetA8KeyResp::release_title() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyResp.Title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetA8KeyResp::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyResp.Title)
}

// optional string Content = 6;
bool GetA8KeyResp::has_content() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GetA8KeyResp::set_has_content() {
  _has_bits_[0] |= 0x00000008u;
}
void GetA8KeyResp::clear_has_content() {
  _has_bits_[0] &= ~0x00000008u;
}
void GetA8KeyResp::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
const ::std::string& GetA8KeyResp::content() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyResp.Content)
  return content_.GetNoArena();
}
void GetA8KeyResp::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyResp.Content)
}
#if LANG_CXX11
void GetA8KeyResp::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetA8KeyResp.Content)
}
#endif
void GetA8KeyResp::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetA8KeyResp.Content)
}
void GetA8KeyResp::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetA8KeyResp.Content)
}
::std::string* GetA8KeyResp::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyResp.Content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetA8KeyResp::release_content() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyResp.Content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetA8KeyResp::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyResp.Content)
}

// optional .micromsg.JSAPIPermissionBitSet JSAPIPermission = 7;
bool GetA8KeyResp::has_jsapipermission() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void GetA8KeyResp::set_has_jsapipermission() {
  _has_bits_[0] |= 0x00000400u;
}
void GetA8KeyResp::clear_has_jsapipermission() {
  _has_bits_[0] &= ~0x00000400u;
}
void GetA8KeyResp::clear_jsapipermission() {
  if (jsapipermission_ != NULL) jsapipermission_->::micromsg::JSAPIPermissionBitSet::Clear();
  clear_has_jsapipermission();
}
const ::micromsg::JSAPIPermissionBitSet& GetA8KeyResp::jsapipermission() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyResp.JSAPIPermission)
  return jsapipermission_ != NULL ? *jsapipermission_
                         : *::micromsg::JSAPIPermissionBitSet::internal_default_instance();
}
::micromsg::JSAPIPermissionBitSet* GetA8KeyResp::mutable_jsapipermission() {
  set_has_jsapipermission();
  if (jsapipermission_ == NULL) {
    jsapipermission_ = new ::micromsg::JSAPIPermissionBitSet;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyResp.JSAPIPermission)
  return jsapipermission_;
}
::micromsg::JSAPIPermissionBitSet* GetA8KeyResp::release_jsapipermission() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyResp.JSAPIPermission)
  clear_has_jsapipermission();
  ::micromsg::JSAPIPermissionBitSet* temp = jsapipermission_;
  jsapipermission_ = NULL;
  return temp;
}
void GetA8KeyResp::set_allocated_jsapipermission(::micromsg::JSAPIPermissionBitSet* jsapipermission) {
  delete jsapipermission_;
  jsapipermission_ = jsapipermission;
  if (jsapipermission) {
    set_has_jsapipermission();
  } else {
    clear_has_jsapipermission();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyResp.JSAPIPermission)
}

// optional .micromsg.GeneralControlBitSet GeneralControlBitSet = 8;
bool GetA8KeyResp::has_generalcontrolbitset() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void GetA8KeyResp::set_has_generalcontrolbitset() {
  _has_bits_[0] |= 0x00000800u;
}
void GetA8KeyResp::clear_has_generalcontrolbitset() {
  _has_bits_[0] &= ~0x00000800u;
}
void GetA8KeyResp::clear_generalcontrolbitset() {
  if (generalcontrolbitset_ != NULL) generalcontrolbitset_->::micromsg::GeneralControlBitSet::Clear();
  clear_has_generalcontrolbitset();
}
const ::micromsg::GeneralControlBitSet& GetA8KeyResp::generalcontrolbitset() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyResp.GeneralControlBitSet)
  return generalcontrolbitset_ != NULL ? *generalcontrolbitset_
                         : *::micromsg::GeneralControlBitSet::internal_default_instance();
}
::micromsg::GeneralControlBitSet* GetA8KeyResp::mutable_generalcontrolbitset() {
  set_has_generalcontrolbitset();
  if (generalcontrolbitset_ == NULL) {
    generalcontrolbitset_ = new ::micromsg::GeneralControlBitSet;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyResp.GeneralControlBitSet)
  return generalcontrolbitset_;
}
::micromsg::GeneralControlBitSet* GetA8KeyResp::release_generalcontrolbitset() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyResp.GeneralControlBitSet)
  clear_has_generalcontrolbitset();
  ::micromsg::GeneralControlBitSet* temp = generalcontrolbitset_;
  generalcontrolbitset_ = NULL;
  return temp;
}
void GetA8KeyResp::set_allocated_generalcontrolbitset(::micromsg::GeneralControlBitSet* generalcontrolbitset) {
  delete generalcontrolbitset_;
  generalcontrolbitset_ = generalcontrolbitset;
  if (generalcontrolbitset) {
    set_has_generalcontrolbitset();
  } else {
    clear_has_generalcontrolbitset();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyResp.GeneralControlBitSet)
}

// optional string UserName = 9;
bool GetA8KeyResp::has_username() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GetA8KeyResp::set_has_username() {
  _has_bits_[0] |= 0x00000010u;
}
void GetA8KeyResp::clear_has_username() {
  _has_bits_[0] &= ~0x00000010u;
}
void GetA8KeyResp::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& GetA8KeyResp::username() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyResp.UserName)
  return username_.GetNoArena();
}
void GetA8KeyResp::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyResp.UserName)
}
#if LANG_CXX11
void GetA8KeyResp::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetA8KeyResp.UserName)
}
#endif
void GetA8KeyResp::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetA8KeyResp.UserName)
}
void GetA8KeyResp::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetA8KeyResp.UserName)
}
::std::string* GetA8KeyResp::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyResp.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetA8KeyResp::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyResp.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetA8KeyResp::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyResp.UserName)
}

// optional string ShareURL = 15;
bool GetA8KeyResp::has_shareurl() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void GetA8KeyResp::set_has_shareurl() {
  _has_bits_[0] |= 0x00000020u;
}
void GetA8KeyResp::clear_has_shareurl() {
  _has_bits_[0] &= ~0x00000020u;
}
void GetA8KeyResp::clear_shareurl() {
  shareurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_shareurl();
}
const ::std::string& GetA8KeyResp::shareurl() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyResp.ShareURL)
  return shareurl_.GetNoArena();
}
void GetA8KeyResp::set_shareurl(const ::std::string& value) {
  set_has_shareurl();
  shareurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyResp.ShareURL)
}
#if LANG_CXX11
void GetA8KeyResp::set_shareurl(::std::string&& value) {
  set_has_shareurl();
  shareurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetA8KeyResp.ShareURL)
}
#endif
void GetA8KeyResp::set_shareurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_shareurl();
  shareurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetA8KeyResp.ShareURL)
}
void GetA8KeyResp::set_shareurl(const char* value, size_t size) {
  set_has_shareurl();
  shareurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetA8KeyResp.ShareURL)
}
::std::string* GetA8KeyResp::mutable_shareurl() {
  set_has_shareurl();
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyResp.ShareURL)
  return shareurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetA8KeyResp::release_shareurl() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyResp.ShareURL)
  clear_has_shareurl();
  return shareurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetA8KeyResp::set_allocated_shareurl(::std::string* shareurl) {
  if (shareurl != NULL) {
    set_has_shareurl();
  } else {
    clear_has_shareurl();
  }
  shareurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shareurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyResp.ShareURL)
}

// optional uint32 ScopeCount = 16;
bool GetA8KeyResp::has_scopecount() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void GetA8KeyResp::set_has_scopecount() {
  _has_bits_[0] |= 0x00008000u;
}
void GetA8KeyResp::clear_has_scopecount() {
  _has_bits_[0] &= ~0x00008000u;
}
void GetA8KeyResp::clear_scopecount() {
  scopecount_ = 0u;
  clear_has_scopecount();
}
::google::protobuf::uint32 GetA8KeyResp::scopecount() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyResp.ScopeCount)
  return scopecount_;
}
void GetA8KeyResp::set_scopecount(::google::protobuf::uint32 value) {
  set_has_scopecount();
  scopecount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyResp.ScopeCount)
}

// repeated .micromsg.BizScopeInfo ScopeList = 17;
int GetA8KeyResp::scopelist_size() const {
  return scopelist_.size();
}
void GetA8KeyResp::clear_scopelist() {
  scopelist_.Clear();
}
const ::micromsg::BizScopeInfo& GetA8KeyResp::scopelist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyResp.ScopeList)
  return scopelist_.Get(index);
}
::micromsg::BizScopeInfo* GetA8KeyResp::mutable_scopelist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyResp.ScopeList)
  return scopelist_.Mutable(index);
}
::micromsg::BizScopeInfo* GetA8KeyResp::add_scopelist() {
  // @@protoc_insertion_point(field_add:micromsg.GetA8KeyResp.ScopeList)
  return scopelist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::BizScopeInfo >*
GetA8KeyResp::mutable_scopelist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetA8KeyResp.ScopeList)
  return &scopelist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::BizScopeInfo >&
GetA8KeyResp::scopelist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetA8KeyResp.ScopeList)
  return scopelist_;
}

// optional string AntispamTicket = 18;
bool GetA8KeyResp::has_antispamticket() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void GetA8KeyResp::set_has_antispamticket() {
  _has_bits_[0] |= 0x00000040u;
}
void GetA8KeyResp::clear_has_antispamticket() {
  _has_bits_[0] &= ~0x00000040u;
}
void GetA8KeyResp::clear_antispamticket() {
  antispamticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_antispamticket();
}
const ::std::string& GetA8KeyResp::antispamticket() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyResp.AntispamTicket)
  return antispamticket_.GetNoArena();
}
void GetA8KeyResp::set_antispamticket(const ::std::string& value) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyResp.AntispamTicket)
}
#if LANG_CXX11
void GetA8KeyResp::set_antispamticket(::std::string&& value) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetA8KeyResp.AntispamTicket)
}
#endif
void GetA8KeyResp::set_antispamticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetA8KeyResp.AntispamTicket)
}
void GetA8KeyResp::set_antispamticket(const char* value, size_t size) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetA8KeyResp.AntispamTicket)
}
::std::string* GetA8KeyResp::mutable_antispamticket() {
  set_has_antispamticket();
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyResp.AntispamTicket)
  return antispamticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetA8KeyResp::release_antispamticket() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyResp.AntispamTicket)
  clear_has_antispamticket();
  return antispamticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetA8KeyResp::set_allocated_antispamticket(::std::string* antispamticket) {
  if (antispamticket != NULL) {
    set_has_antispamticket();
  } else {
    clear_has_antispamticket();
  }
  antispamticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), antispamticket);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyResp.AntispamTicket)
}

// optional string SSID = 20;
bool GetA8KeyResp::has_ssid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void GetA8KeyResp::set_has_ssid() {
  _has_bits_[0] |= 0x00000080u;
}
void GetA8KeyResp::clear_has_ssid() {
  _has_bits_[0] &= ~0x00000080u;
}
void GetA8KeyResp::clear_ssid() {
  ssid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ssid();
}
const ::std::string& GetA8KeyResp::ssid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyResp.SSID)
  return ssid_.GetNoArena();
}
void GetA8KeyResp::set_ssid(const ::std::string& value) {
  set_has_ssid();
  ssid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyResp.SSID)
}
#if LANG_CXX11
void GetA8KeyResp::set_ssid(::std::string&& value) {
  set_has_ssid();
  ssid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetA8KeyResp.SSID)
}
#endif
void GetA8KeyResp::set_ssid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ssid();
  ssid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetA8KeyResp.SSID)
}
void GetA8KeyResp::set_ssid(const char* value, size_t size) {
  set_has_ssid();
  ssid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetA8KeyResp.SSID)
}
::std::string* GetA8KeyResp::mutable_ssid() {
  set_has_ssid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyResp.SSID)
  return ssid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetA8KeyResp::release_ssid() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyResp.SSID)
  clear_has_ssid();
  return ssid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetA8KeyResp::set_allocated_ssid(::std::string* ssid) {
  if (ssid != NULL) {
    set_has_ssid();
  } else {
    clear_has_ssid();
  }
  ssid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ssid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyResp.SSID)
}

// optional string MID = 21;
bool GetA8KeyResp::has_mid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void GetA8KeyResp::set_has_mid() {
  _has_bits_[0] |= 0x00000100u;
}
void GetA8KeyResp::clear_has_mid() {
  _has_bits_[0] &= ~0x00000100u;
}
void GetA8KeyResp::clear_mid() {
  mid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mid();
}
const ::std::string& GetA8KeyResp::mid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyResp.MID)
  return mid_.GetNoArena();
}
void GetA8KeyResp::set_mid(const ::std::string& value) {
  set_has_mid();
  mid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyResp.MID)
}
#if LANG_CXX11
void GetA8KeyResp::set_mid(::std::string&& value) {
  set_has_mid();
  mid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetA8KeyResp.MID)
}
#endif
void GetA8KeyResp::set_mid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mid();
  mid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetA8KeyResp.MID)
}
void GetA8KeyResp::set_mid(const char* value, size_t size) {
  set_has_mid();
  mid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetA8KeyResp.MID)
}
::std::string* GetA8KeyResp::mutable_mid() {
  set_has_mid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyResp.MID)
  return mid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetA8KeyResp::release_mid() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyResp.MID)
  clear_has_mid();
  return mid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetA8KeyResp::set_allocated_mid(::std::string* mid) {
  if (mid != NULL) {
    set_has_mid();
  } else {
    clear_has_mid();
  }
  mid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyResp.MID)
}

// optional .micromsg.DeepLinkBitSet DeepLinkBitSet = 22;
bool GetA8KeyResp::has_deeplinkbitset() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void GetA8KeyResp::set_has_deeplinkbitset() {
  _has_bits_[0] |= 0x00001000u;
}
void GetA8KeyResp::clear_has_deeplinkbitset() {
  _has_bits_[0] &= ~0x00001000u;
}
void GetA8KeyResp::clear_deeplinkbitset() {
  if (deeplinkbitset_ != NULL) deeplinkbitset_->::micromsg::DeepLinkBitSet::Clear();
  clear_has_deeplinkbitset();
}
const ::micromsg::DeepLinkBitSet& GetA8KeyResp::deeplinkbitset() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyResp.DeepLinkBitSet)
  return deeplinkbitset_ != NULL ? *deeplinkbitset_
                         : *::micromsg::DeepLinkBitSet::internal_default_instance();
}
::micromsg::DeepLinkBitSet* GetA8KeyResp::mutable_deeplinkbitset() {
  set_has_deeplinkbitset();
  if (deeplinkbitset_ == NULL) {
    deeplinkbitset_ = new ::micromsg::DeepLinkBitSet;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyResp.DeepLinkBitSet)
  return deeplinkbitset_;
}
::micromsg::DeepLinkBitSet* GetA8KeyResp::release_deeplinkbitset() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyResp.DeepLinkBitSet)
  clear_has_deeplinkbitset();
  ::micromsg::DeepLinkBitSet* temp = deeplinkbitset_;
  deeplinkbitset_ = NULL;
  return temp;
}
void GetA8KeyResp::set_allocated_deeplinkbitset(::micromsg::DeepLinkBitSet* deeplinkbitset) {
  delete deeplinkbitset_;
  deeplinkbitset_ = deeplinkbitset;
  if (deeplinkbitset) {
    set_has_deeplinkbitset();
  } else {
    clear_has_deeplinkbitset();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyResp.DeepLinkBitSet)
}

// optional .micromsg.SKBuiltinBuffer_t JSAPIControlBytes = 23;
bool GetA8KeyResp::has_jsapicontrolbytes() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void GetA8KeyResp::set_has_jsapicontrolbytes() {
  _has_bits_[0] |= 0x00002000u;
}
void GetA8KeyResp::clear_has_jsapicontrolbytes() {
  _has_bits_[0] &= ~0x00002000u;
}
void GetA8KeyResp::clear_jsapicontrolbytes() {
  if (jsapicontrolbytes_ != NULL) jsapicontrolbytes_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_jsapicontrolbytes();
}
const ::micromsg::SKBuiltinBuffer_t& GetA8KeyResp::jsapicontrolbytes() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyResp.JSAPIControlBytes)
  return jsapicontrolbytes_ != NULL ? *jsapicontrolbytes_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
::micromsg::SKBuiltinBuffer_t* GetA8KeyResp::mutable_jsapicontrolbytes() {
  set_has_jsapicontrolbytes();
  if (jsapicontrolbytes_ == NULL) {
    jsapicontrolbytes_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyResp.JSAPIControlBytes)
  return jsapicontrolbytes_;
}
::micromsg::SKBuiltinBuffer_t* GetA8KeyResp::release_jsapicontrolbytes() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyResp.JSAPIControlBytes)
  clear_has_jsapicontrolbytes();
  ::micromsg::SKBuiltinBuffer_t* temp = jsapicontrolbytes_;
  jsapicontrolbytes_ = NULL;
  return temp;
}
void GetA8KeyResp::set_allocated_jsapicontrolbytes(::micromsg::SKBuiltinBuffer_t* jsapicontrolbytes) {
  delete jsapicontrolbytes_;
  jsapicontrolbytes_ = jsapicontrolbytes;
  if (jsapicontrolbytes) {
    set_has_jsapicontrolbytes();
  } else {
    clear_has_jsapicontrolbytes();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyResp.JSAPIControlBytes)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdAppList::kAppIDFieldNumber;
const int AdAppList::kAppCoverUrlFieldNumber;
const int AdAppList::kAppDownloadUrlFieldNumber;
const int AdAppList::kAndroidApkMd5FieldNumber;
const int AdAppList::kAppNameFieldNumber;
const int AdAppList::kAppIconUrlFieldNumber;
const int AdAppList::kAppSnsDescFieldNumber;
const int AdAppList::kAndroidPackageNameFieldNumber;
const int AdAppList::kGooglePlayDownloadUrlFieldNumber;
const int AdAppList::kSYYBFieldNumber;
const int AdAppList::kExtAsXMLFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdAppList::AdAppList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.AdAppList)
}
AdAppList::AdAppList(const AdAppList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appid()) {
    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  appcoverurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appcoverurl()) {
    appcoverurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appcoverurl_);
  }
  appdownloadurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appdownloadurl()) {
    appdownloadurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appdownloadurl_);
  }
  androidapkmd5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_androidapkmd5()) {
    androidapkmd5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.androidapkmd5_);
  }
  appname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appname()) {
    appname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appname_);
  }
  appiconurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appiconurl()) {
    appiconurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appiconurl_);
  }
  appsnsdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appsnsdesc()) {
    appsnsdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appsnsdesc_);
  }
  androidpackagename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_androidpackagename()) {
    androidpackagename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.androidpackagename_);
  }
  googleplaydownloadurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_googleplaydownloadurl()) {
    googleplaydownloadurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.googleplaydownloadurl_);
  }
  extasxml_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_extasxml()) {
    extasxml_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extasxml_);
  }
  if (from.has_syyb()) {
    syyb_ = new ::micromsg::YYBStruct(*from.syyb_);
  } else {
    syyb_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.AdAppList)
}

void AdAppList::SharedCtor() {
  _cached_size_ = 0;
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appcoverurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appdownloadurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  androidapkmd5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appiconurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appsnsdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  androidpackagename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  googleplaydownloadurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extasxml_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  syyb_ = NULL;
}

AdAppList::~AdAppList() {
  // @@protoc_insertion_point(destructor:micromsg.AdAppList)
  SharedDtor();
}

void AdAppList::SharedDtor() {
  appid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appcoverurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appdownloadurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  androidapkmd5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appiconurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appsnsdesc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  androidpackagename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  googleplaydownloadurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extasxml_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete syyb_;
  }
}

void AdAppList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AdAppList::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AdAppList& AdAppList::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

AdAppList* AdAppList::New(::google::protobuf::Arena* arena) const {
  AdAppList* n = new AdAppList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AdAppList::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.AdAppList)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_appid()) {
      GOOGLE_DCHECK(!appid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appid_.UnsafeRawStringPointer())->clear();
    }
    if (has_appcoverurl()) {
      GOOGLE_DCHECK(!appcoverurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appcoverurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_appdownloadurl()) {
      GOOGLE_DCHECK(!appdownloadurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appdownloadurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_androidapkmd5()) {
      GOOGLE_DCHECK(!androidapkmd5_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*androidapkmd5_.UnsafeRawStringPointer())->clear();
    }
    if (has_appname()) {
      GOOGLE_DCHECK(!appname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appname_.UnsafeRawStringPointer())->clear();
    }
    if (has_appiconurl()) {
      GOOGLE_DCHECK(!appiconurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appiconurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_appsnsdesc()) {
      GOOGLE_DCHECK(!appsnsdesc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appsnsdesc_.UnsafeRawStringPointer())->clear();
    }
    if (has_androidpackagename()) {
      GOOGLE_DCHECK(!androidpackagename_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*androidpackagename_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[8 / 32] & 1792u) {
    if (has_googleplaydownloadurl()) {
      GOOGLE_DCHECK(!googleplaydownloadurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*googleplaydownloadurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_extasxml()) {
      GOOGLE_DCHECK(!extasxml_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*extasxml_.UnsafeRawStringPointer())->clear();
    }
    if (has_syyb()) {
      GOOGLE_DCHECK(syyb_ != NULL);
      syyb_->::micromsg::YYBStruct::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AdAppList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.AdAppList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string AppID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appid().data(), this->appid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.AdAppList.AppID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppCoverUrl = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appcoverurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appcoverurl().data(), this->appcoverurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.AdAppList.AppCoverUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppDownloadUrl = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appdownloadurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appdownloadurl().data(), this->appdownloadurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.AdAppList.AppDownloadUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AndroidApkMd5 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_androidapkmd5()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->androidapkmd5().data(), this->androidapkmd5().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.AdAppList.AndroidApkMd5");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppName = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appname().data(), this->appname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.AdAppList.AppName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppIconUrl = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appiconurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appiconurl().data(), this->appiconurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.AdAppList.AppIconUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppSnsDesc = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appsnsdesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appsnsdesc().data(), this->appsnsdesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.AdAppList.AppSnsDesc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AndroidPackageName = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_androidpackagename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->androidpackagename().data(), this->androidpackagename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.AdAppList.AndroidPackageName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string GooglePlayDownloadUrl = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_googleplaydownloadurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->googleplaydownloadurl().data(), this->googleplaydownloadurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.AdAppList.GooglePlayDownloadUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .micromsg.YYBStruct SYYB = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_syyb()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ExtAsXML = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extasxml()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->extasxml().data(), this->extasxml().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.AdAppList.ExtAsXML");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.AdAppList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.AdAppList)
  return false;
#undef DO_
}

void AdAppList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.AdAppList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string AppID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AdAppList.AppID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appid(), output);
  }

  // optional string AppCoverUrl = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appcoverurl().data(), this->appcoverurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AdAppList.AppCoverUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appcoverurl(), output);
  }

  // optional string AppDownloadUrl = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appdownloadurl().data(), this->appdownloadurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AdAppList.AppDownloadUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->appdownloadurl(), output);
  }

  // optional string AndroidApkMd5 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->androidapkmd5().data(), this->androidapkmd5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AdAppList.AndroidApkMd5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->androidapkmd5(), output);
  }

  // optional string AppName = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appname().data(), this->appname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AdAppList.AppName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->appname(), output);
  }

  // optional string AppIconUrl = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appiconurl().data(), this->appiconurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AdAppList.AppIconUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->appiconurl(), output);
  }

  // optional string AppSnsDesc = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appsnsdesc().data(), this->appsnsdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AdAppList.AppSnsDesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->appsnsdesc(), output);
  }

  // optional string AndroidPackageName = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->androidpackagename().data(), this->androidpackagename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AdAppList.AndroidPackageName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->androidpackagename(), output);
  }

  // optional string GooglePlayDownloadUrl = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->googleplaydownloadurl().data(), this->googleplaydownloadurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AdAppList.GooglePlayDownloadUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->googleplaydownloadurl(), output);
  }

  // optional .micromsg.YYBStruct SYYB = 10;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->syyb_, output);
  }

  // optional string ExtAsXML = 11;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extasxml().data(), this->extasxml().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AdAppList.ExtAsXML");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->extasxml(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.AdAppList)
}

::google::protobuf::uint8* AdAppList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.AdAppList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string AppID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AdAppList.AppID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appid(), target);
  }

  // optional string AppCoverUrl = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appcoverurl().data(), this->appcoverurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AdAppList.AppCoverUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appcoverurl(), target);
  }

  // optional string AppDownloadUrl = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appdownloadurl().data(), this->appdownloadurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AdAppList.AppDownloadUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->appdownloadurl(), target);
  }

  // optional string AndroidApkMd5 = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->androidapkmd5().data(), this->androidapkmd5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AdAppList.AndroidApkMd5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->androidapkmd5(), target);
  }

  // optional string AppName = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appname().data(), this->appname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AdAppList.AppName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->appname(), target);
  }

  // optional string AppIconUrl = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appiconurl().data(), this->appiconurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AdAppList.AppIconUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->appiconurl(), target);
  }

  // optional string AppSnsDesc = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appsnsdesc().data(), this->appsnsdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AdAppList.AppSnsDesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->appsnsdesc(), target);
  }

  // optional string AndroidPackageName = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->androidpackagename().data(), this->androidpackagename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AdAppList.AndroidPackageName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->androidpackagename(), target);
  }

  // optional string GooglePlayDownloadUrl = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->googleplaydownloadurl().data(), this->googleplaydownloadurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AdAppList.GooglePlayDownloadUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->googleplaydownloadurl(), target);
  }

  // optional .micromsg.YYBStruct SYYB = 10;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->syyb_, deterministic, target);
  }

  // optional string ExtAsXML = 11;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extasxml().data(), this->extasxml().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AdAppList.ExtAsXML");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->extasxml(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.AdAppList)
  return target;
}

size_t AdAppList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.AdAppList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string AppID = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appid());
    }

    // optional string AppCoverUrl = 2;
    if (has_appcoverurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appcoverurl());
    }

    // optional string AppDownloadUrl = 3;
    if (has_appdownloadurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appdownloadurl());
    }

    // optional string AndroidApkMd5 = 4;
    if (has_androidapkmd5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->androidapkmd5());
    }

    // optional string AppName = 5;
    if (has_appname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appname());
    }

    // optional string AppIconUrl = 6;
    if (has_appiconurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appiconurl());
    }

    // optional string AppSnsDesc = 7;
    if (has_appsnsdesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appsnsdesc());
    }

    // optional string AndroidPackageName = 8;
    if (has_androidpackagename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->androidpackagename());
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional string GooglePlayDownloadUrl = 9;
    if (has_googleplaydownloadurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->googleplaydownloadurl());
    }

    // optional string ExtAsXML = 11;
    if (has_extasxml()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extasxml());
    }

    // optional .micromsg.YYBStruct SYYB = 10;
    if (has_syyb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->syyb_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AdAppList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.AdAppList)
  GOOGLE_DCHECK_NE(&from, this);
  const AdAppList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AdAppList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.AdAppList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.AdAppList)
    MergeFrom(*source);
  }
}

void AdAppList::MergeFrom(const AdAppList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.AdAppList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_appid();
      appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_appcoverurl();
      appcoverurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appcoverurl_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_appdownloadurl();
      appdownloadurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appdownloadurl_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_androidapkmd5();
      androidapkmd5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.androidapkmd5_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_appname();
      appname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appname_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_appiconurl();
      appiconurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appiconurl_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_appsnsdesc();
      appsnsdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appsnsdesc_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_androidpackagename();
      androidpackagename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.androidpackagename_);
    }
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_googleplaydownloadurl();
      googleplaydownloadurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.googleplaydownloadurl_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has_extasxml();
      extasxml_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extasxml_);
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_syyb()->::micromsg::YYBStruct::MergeFrom(from.syyb());
    }
  }
}

void AdAppList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.AdAppList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdAppList::CopyFrom(const AdAppList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.AdAppList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdAppList::IsInitialized() const {
  return true;
}

void AdAppList::Swap(AdAppList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdAppList::InternalSwap(AdAppList* other) {
  appid_.Swap(&other->appid_);
  appcoverurl_.Swap(&other->appcoverurl_);
  appdownloadurl_.Swap(&other->appdownloadurl_);
  androidapkmd5_.Swap(&other->androidapkmd5_);
  appname_.Swap(&other->appname_);
  appiconurl_.Swap(&other->appiconurl_);
  appsnsdesc_.Swap(&other->appsnsdesc_);
  androidpackagename_.Swap(&other->androidpackagename_);
  googleplaydownloadurl_.Swap(&other->googleplaydownloadurl_);
  extasxml_.Swap(&other->extasxml_);
  std::swap(syyb_, other->syyb_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AdAppList::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AdAppList

// optional string AppID = 1;
bool AdAppList::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AdAppList::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
void AdAppList::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
void AdAppList::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
const ::std::string& AdAppList::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.AdAppList.AppID)
  return appid_.GetNoArena();
}
void AdAppList::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AdAppList.AppID)
}
#if LANG_CXX11
void AdAppList::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AdAppList.AppID)
}
#endif
void AdAppList::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AdAppList.AppID)
}
void AdAppList::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AdAppList.AppID)
}
::std::string* AdAppList::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.AdAppList.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AdAppList::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.AdAppList.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AdAppList::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AdAppList.AppID)
}

// optional string AppCoverUrl = 2;
bool AdAppList::has_appcoverurl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AdAppList::set_has_appcoverurl() {
  _has_bits_[0] |= 0x00000002u;
}
void AdAppList::clear_has_appcoverurl() {
  _has_bits_[0] &= ~0x00000002u;
}
void AdAppList::clear_appcoverurl() {
  appcoverurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appcoverurl();
}
const ::std::string& AdAppList::appcoverurl() const {
  // @@protoc_insertion_point(field_get:micromsg.AdAppList.AppCoverUrl)
  return appcoverurl_.GetNoArena();
}
void AdAppList::set_appcoverurl(const ::std::string& value) {
  set_has_appcoverurl();
  appcoverurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AdAppList.AppCoverUrl)
}
#if LANG_CXX11
void AdAppList::set_appcoverurl(::std::string&& value) {
  set_has_appcoverurl();
  appcoverurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AdAppList.AppCoverUrl)
}
#endif
void AdAppList::set_appcoverurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appcoverurl();
  appcoverurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AdAppList.AppCoverUrl)
}
void AdAppList::set_appcoverurl(const char* value, size_t size) {
  set_has_appcoverurl();
  appcoverurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AdAppList.AppCoverUrl)
}
::std::string* AdAppList::mutable_appcoverurl() {
  set_has_appcoverurl();
  // @@protoc_insertion_point(field_mutable:micromsg.AdAppList.AppCoverUrl)
  return appcoverurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AdAppList::release_appcoverurl() {
  // @@protoc_insertion_point(field_release:micromsg.AdAppList.AppCoverUrl)
  clear_has_appcoverurl();
  return appcoverurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AdAppList::set_allocated_appcoverurl(::std::string* appcoverurl) {
  if (appcoverurl != NULL) {
    set_has_appcoverurl();
  } else {
    clear_has_appcoverurl();
  }
  appcoverurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appcoverurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AdAppList.AppCoverUrl)
}

// optional string AppDownloadUrl = 3;
bool AdAppList::has_appdownloadurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AdAppList::set_has_appdownloadurl() {
  _has_bits_[0] |= 0x00000004u;
}
void AdAppList::clear_has_appdownloadurl() {
  _has_bits_[0] &= ~0x00000004u;
}
void AdAppList::clear_appdownloadurl() {
  appdownloadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appdownloadurl();
}
const ::std::string& AdAppList::appdownloadurl() const {
  // @@protoc_insertion_point(field_get:micromsg.AdAppList.AppDownloadUrl)
  return appdownloadurl_.GetNoArena();
}
void AdAppList::set_appdownloadurl(const ::std::string& value) {
  set_has_appdownloadurl();
  appdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AdAppList.AppDownloadUrl)
}
#if LANG_CXX11
void AdAppList::set_appdownloadurl(::std::string&& value) {
  set_has_appdownloadurl();
  appdownloadurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AdAppList.AppDownloadUrl)
}
#endif
void AdAppList::set_appdownloadurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appdownloadurl();
  appdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AdAppList.AppDownloadUrl)
}
void AdAppList::set_appdownloadurl(const char* value, size_t size) {
  set_has_appdownloadurl();
  appdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AdAppList.AppDownloadUrl)
}
::std::string* AdAppList::mutable_appdownloadurl() {
  set_has_appdownloadurl();
  // @@protoc_insertion_point(field_mutable:micromsg.AdAppList.AppDownloadUrl)
  return appdownloadurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AdAppList::release_appdownloadurl() {
  // @@protoc_insertion_point(field_release:micromsg.AdAppList.AppDownloadUrl)
  clear_has_appdownloadurl();
  return appdownloadurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AdAppList::set_allocated_appdownloadurl(::std::string* appdownloadurl) {
  if (appdownloadurl != NULL) {
    set_has_appdownloadurl();
  } else {
    clear_has_appdownloadurl();
  }
  appdownloadurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appdownloadurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AdAppList.AppDownloadUrl)
}

// optional string AndroidApkMd5 = 4;
bool AdAppList::has_androidapkmd5() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void AdAppList::set_has_androidapkmd5() {
  _has_bits_[0] |= 0x00000008u;
}
void AdAppList::clear_has_androidapkmd5() {
  _has_bits_[0] &= ~0x00000008u;
}
void AdAppList::clear_androidapkmd5() {
  androidapkmd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_androidapkmd5();
}
const ::std::string& AdAppList::androidapkmd5() const {
  // @@protoc_insertion_point(field_get:micromsg.AdAppList.AndroidApkMd5)
  return androidapkmd5_.GetNoArena();
}
void AdAppList::set_androidapkmd5(const ::std::string& value) {
  set_has_androidapkmd5();
  androidapkmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AdAppList.AndroidApkMd5)
}
#if LANG_CXX11
void AdAppList::set_androidapkmd5(::std::string&& value) {
  set_has_androidapkmd5();
  androidapkmd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AdAppList.AndroidApkMd5)
}
#endif
void AdAppList::set_androidapkmd5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_androidapkmd5();
  androidapkmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AdAppList.AndroidApkMd5)
}
void AdAppList::set_androidapkmd5(const char* value, size_t size) {
  set_has_androidapkmd5();
  androidapkmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AdAppList.AndroidApkMd5)
}
::std::string* AdAppList::mutable_androidapkmd5() {
  set_has_androidapkmd5();
  // @@protoc_insertion_point(field_mutable:micromsg.AdAppList.AndroidApkMd5)
  return androidapkmd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AdAppList::release_androidapkmd5() {
  // @@protoc_insertion_point(field_release:micromsg.AdAppList.AndroidApkMd5)
  clear_has_androidapkmd5();
  return androidapkmd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AdAppList::set_allocated_androidapkmd5(::std::string* androidapkmd5) {
  if (androidapkmd5 != NULL) {
    set_has_androidapkmd5();
  } else {
    clear_has_androidapkmd5();
  }
  androidapkmd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), androidapkmd5);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AdAppList.AndroidApkMd5)
}

// optional string AppName = 5;
bool AdAppList::has_appname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void AdAppList::set_has_appname() {
  _has_bits_[0] |= 0x00000010u;
}
void AdAppList::clear_has_appname() {
  _has_bits_[0] &= ~0x00000010u;
}
void AdAppList::clear_appname() {
  appname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appname();
}
const ::std::string& AdAppList::appname() const {
  // @@protoc_insertion_point(field_get:micromsg.AdAppList.AppName)
  return appname_.GetNoArena();
}
void AdAppList::set_appname(const ::std::string& value) {
  set_has_appname();
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AdAppList.AppName)
}
#if LANG_CXX11
void AdAppList::set_appname(::std::string&& value) {
  set_has_appname();
  appname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AdAppList.AppName)
}
#endif
void AdAppList::set_appname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appname();
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AdAppList.AppName)
}
void AdAppList::set_appname(const char* value, size_t size) {
  set_has_appname();
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AdAppList.AppName)
}
::std::string* AdAppList::mutable_appname() {
  set_has_appname();
  // @@protoc_insertion_point(field_mutable:micromsg.AdAppList.AppName)
  return appname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AdAppList::release_appname() {
  // @@protoc_insertion_point(field_release:micromsg.AdAppList.AppName)
  clear_has_appname();
  return appname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AdAppList::set_allocated_appname(::std::string* appname) {
  if (appname != NULL) {
    set_has_appname();
  } else {
    clear_has_appname();
  }
  appname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AdAppList.AppName)
}

// optional string AppIconUrl = 6;
bool AdAppList::has_appiconurl() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void AdAppList::set_has_appiconurl() {
  _has_bits_[0] |= 0x00000020u;
}
void AdAppList::clear_has_appiconurl() {
  _has_bits_[0] &= ~0x00000020u;
}
void AdAppList::clear_appiconurl() {
  appiconurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appiconurl();
}
const ::std::string& AdAppList::appiconurl() const {
  // @@protoc_insertion_point(field_get:micromsg.AdAppList.AppIconUrl)
  return appiconurl_.GetNoArena();
}
void AdAppList::set_appiconurl(const ::std::string& value) {
  set_has_appiconurl();
  appiconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AdAppList.AppIconUrl)
}
#if LANG_CXX11
void AdAppList::set_appiconurl(::std::string&& value) {
  set_has_appiconurl();
  appiconurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AdAppList.AppIconUrl)
}
#endif
void AdAppList::set_appiconurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appiconurl();
  appiconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AdAppList.AppIconUrl)
}
void AdAppList::set_appiconurl(const char* value, size_t size) {
  set_has_appiconurl();
  appiconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AdAppList.AppIconUrl)
}
::std::string* AdAppList::mutable_appiconurl() {
  set_has_appiconurl();
  // @@protoc_insertion_point(field_mutable:micromsg.AdAppList.AppIconUrl)
  return appiconurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AdAppList::release_appiconurl() {
  // @@protoc_insertion_point(field_release:micromsg.AdAppList.AppIconUrl)
  clear_has_appiconurl();
  return appiconurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AdAppList::set_allocated_appiconurl(::std::string* appiconurl) {
  if (appiconurl != NULL) {
    set_has_appiconurl();
  } else {
    clear_has_appiconurl();
  }
  appiconurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appiconurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AdAppList.AppIconUrl)
}

// optional string AppSnsDesc = 7;
bool AdAppList::has_appsnsdesc() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void AdAppList::set_has_appsnsdesc() {
  _has_bits_[0] |= 0x00000040u;
}
void AdAppList::clear_has_appsnsdesc() {
  _has_bits_[0] &= ~0x00000040u;
}
void AdAppList::clear_appsnsdesc() {
  appsnsdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appsnsdesc();
}
const ::std::string& AdAppList::appsnsdesc() const {
  // @@protoc_insertion_point(field_get:micromsg.AdAppList.AppSnsDesc)
  return appsnsdesc_.GetNoArena();
}
void AdAppList::set_appsnsdesc(const ::std::string& value) {
  set_has_appsnsdesc();
  appsnsdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AdAppList.AppSnsDesc)
}
#if LANG_CXX11
void AdAppList::set_appsnsdesc(::std::string&& value) {
  set_has_appsnsdesc();
  appsnsdesc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AdAppList.AppSnsDesc)
}
#endif
void AdAppList::set_appsnsdesc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appsnsdesc();
  appsnsdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AdAppList.AppSnsDesc)
}
void AdAppList::set_appsnsdesc(const char* value, size_t size) {
  set_has_appsnsdesc();
  appsnsdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AdAppList.AppSnsDesc)
}
::std::string* AdAppList::mutable_appsnsdesc() {
  set_has_appsnsdesc();
  // @@protoc_insertion_point(field_mutable:micromsg.AdAppList.AppSnsDesc)
  return appsnsdesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AdAppList::release_appsnsdesc() {
  // @@protoc_insertion_point(field_release:micromsg.AdAppList.AppSnsDesc)
  clear_has_appsnsdesc();
  return appsnsdesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AdAppList::set_allocated_appsnsdesc(::std::string* appsnsdesc) {
  if (appsnsdesc != NULL) {
    set_has_appsnsdesc();
  } else {
    clear_has_appsnsdesc();
  }
  appsnsdesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appsnsdesc);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AdAppList.AppSnsDesc)
}

// optional string AndroidPackageName = 8;
bool AdAppList::has_androidpackagename() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void AdAppList::set_has_androidpackagename() {
  _has_bits_[0] |= 0x00000080u;
}
void AdAppList::clear_has_androidpackagename() {
  _has_bits_[0] &= ~0x00000080u;
}
void AdAppList::clear_androidpackagename() {
  androidpackagename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_androidpackagename();
}
const ::std::string& AdAppList::androidpackagename() const {
  // @@protoc_insertion_point(field_get:micromsg.AdAppList.AndroidPackageName)
  return androidpackagename_.GetNoArena();
}
void AdAppList::set_androidpackagename(const ::std::string& value) {
  set_has_androidpackagename();
  androidpackagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AdAppList.AndroidPackageName)
}
#if LANG_CXX11
void AdAppList::set_androidpackagename(::std::string&& value) {
  set_has_androidpackagename();
  androidpackagename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AdAppList.AndroidPackageName)
}
#endif
void AdAppList::set_androidpackagename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_androidpackagename();
  androidpackagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AdAppList.AndroidPackageName)
}
void AdAppList::set_androidpackagename(const char* value, size_t size) {
  set_has_androidpackagename();
  androidpackagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AdAppList.AndroidPackageName)
}
::std::string* AdAppList::mutable_androidpackagename() {
  set_has_androidpackagename();
  // @@protoc_insertion_point(field_mutable:micromsg.AdAppList.AndroidPackageName)
  return androidpackagename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AdAppList::release_androidpackagename() {
  // @@protoc_insertion_point(field_release:micromsg.AdAppList.AndroidPackageName)
  clear_has_androidpackagename();
  return androidpackagename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AdAppList::set_allocated_androidpackagename(::std::string* androidpackagename) {
  if (androidpackagename != NULL) {
    set_has_androidpackagename();
  } else {
    clear_has_androidpackagename();
  }
  androidpackagename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), androidpackagename);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AdAppList.AndroidPackageName)
}

// optional string GooglePlayDownloadUrl = 9;
bool AdAppList::has_googleplaydownloadurl() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void AdAppList::set_has_googleplaydownloadurl() {
  _has_bits_[0] |= 0x00000100u;
}
void AdAppList::clear_has_googleplaydownloadurl() {
  _has_bits_[0] &= ~0x00000100u;
}
void AdAppList::clear_googleplaydownloadurl() {
  googleplaydownloadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_googleplaydownloadurl();
}
const ::std::string& AdAppList::googleplaydownloadurl() const {
  // @@protoc_insertion_point(field_get:micromsg.AdAppList.GooglePlayDownloadUrl)
  return googleplaydownloadurl_.GetNoArena();
}
void AdAppList::set_googleplaydownloadurl(const ::std::string& value) {
  set_has_googleplaydownloadurl();
  googleplaydownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AdAppList.GooglePlayDownloadUrl)
}
#if LANG_CXX11
void AdAppList::set_googleplaydownloadurl(::std::string&& value) {
  set_has_googleplaydownloadurl();
  googleplaydownloadurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AdAppList.GooglePlayDownloadUrl)
}
#endif
void AdAppList::set_googleplaydownloadurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_googleplaydownloadurl();
  googleplaydownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AdAppList.GooglePlayDownloadUrl)
}
void AdAppList::set_googleplaydownloadurl(const char* value, size_t size) {
  set_has_googleplaydownloadurl();
  googleplaydownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AdAppList.GooglePlayDownloadUrl)
}
::std::string* AdAppList::mutable_googleplaydownloadurl() {
  set_has_googleplaydownloadurl();
  // @@protoc_insertion_point(field_mutable:micromsg.AdAppList.GooglePlayDownloadUrl)
  return googleplaydownloadurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AdAppList::release_googleplaydownloadurl() {
  // @@protoc_insertion_point(field_release:micromsg.AdAppList.GooglePlayDownloadUrl)
  clear_has_googleplaydownloadurl();
  return googleplaydownloadurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AdAppList::set_allocated_googleplaydownloadurl(::std::string* googleplaydownloadurl) {
  if (googleplaydownloadurl != NULL) {
    set_has_googleplaydownloadurl();
  } else {
    clear_has_googleplaydownloadurl();
  }
  googleplaydownloadurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), googleplaydownloadurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AdAppList.GooglePlayDownloadUrl)
}

// optional .micromsg.YYBStruct SYYB = 10;
bool AdAppList::has_syyb() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void AdAppList::set_has_syyb() {
  _has_bits_[0] |= 0x00000400u;
}
void AdAppList::clear_has_syyb() {
  _has_bits_[0] &= ~0x00000400u;
}
void AdAppList::clear_syyb() {
  if (syyb_ != NULL) syyb_->::micromsg::YYBStruct::Clear();
  clear_has_syyb();
}
const ::micromsg::YYBStruct& AdAppList::syyb() const {
  // @@protoc_insertion_point(field_get:micromsg.AdAppList.SYYB)
  return syyb_ != NULL ? *syyb_
                         : *::micromsg::YYBStruct::internal_default_instance();
}
::micromsg::YYBStruct* AdAppList::mutable_syyb() {
  set_has_syyb();
  if (syyb_ == NULL) {
    syyb_ = new ::micromsg::YYBStruct;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.AdAppList.SYYB)
  return syyb_;
}
::micromsg::YYBStruct* AdAppList::release_syyb() {
  // @@protoc_insertion_point(field_release:micromsg.AdAppList.SYYB)
  clear_has_syyb();
  ::micromsg::YYBStruct* temp = syyb_;
  syyb_ = NULL;
  return temp;
}
void AdAppList::set_allocated_syyb(::micromsg::YYBStruct* syyb) {
  delete syyb_;
  syyb_ = syyb;
  if (syyb) {
    set_has_syyb();
  } else {
    clear_has_syyb();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.AdAppList.SYYB)
}

// optional string ExtAsXML = 11;
bool AdAppList::has_extasxml() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void AdAppList::set_has_extasxml() {
  _has_bits_[0] |= 0x00000200u;
}
void AdAppList::clear_has_extasxml() {
  _has_bits_[0] &= ~0x00000200u;
}
void AdAppList::clear_extasxml() {
  extasxml_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_extasxml();
}
const ::std::string& AdAppList::extasxml() const {
  // @@protoc_insertion_point(field_get:micromsg.AdAppList.ExtAsXML)
  return extasxml_.GetNoArena();
}
void AdAppList::set_extasxml(const ::std::string& value) {
  set_has_extasxml();
  extasxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AdAppList.ExtAsXML)
}
#if LANG_CXX11
void AdAppList::set_extasxml(::std::string&& value) {
  set_has_extasxml();
  extasxml_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AdAppList.ExtAsXML)
}
#endif
void AdAppList::set_extasxml(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_extasxml();
  extasxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AdAppList.ExtAsXML)
}
void AdAppList::set_extasxml(const char* value, size_t size) {
  set_has_extasxml();
  extasxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AdAppList.ExtAsXML)
}
::std::string* AdAppList::mutable_extasxml() {
  set_has_extasxml();
  // @@protoc_insertion_point(field_mutable:micromsg.AdAppList.ExtAsXML)
  return extasxml_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AdAppList::release_extasxml() {
  // @@protoc_insertion_point(field_release:micromsg.AdAppList.ExtAsXML)
  clear_has_extasxml();
  return extasxml_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AdAppList::set_allocated_extasxml(::std::string* extasxml) {
  if (extasxml != NULL) {
    set_has_extasxml();
  } else {
    clear_has_extasxml();
  }
  extasxml_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extasxml);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AdAppList.ExtAsXML)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GiftList::kGiftIDFieldNumber;
const int GiftList::kIconUrlFieldNumber;
const int GiftList::kTitleFieldNumber;
const int GiftList::kDescFieldNumber;
const int GiftList::kGiftUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GiftList::GiftList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GiftList)
}
GiftList::GiftList(const GiftList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  giftid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_giftid()) {
    giftid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.giftid_);
  }
  iconurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_iconurl()) {
    iconurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iconurl_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_desc()) {
    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  gifturl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gifturl()) {
    gifturl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gifturl_);
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.GiftList)
}

void GiftList::SharedCtor() {
  _cached_size_ = 0;
  giftid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iconurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gifturl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GiftList::~GiftList() {
  // @@protoc_insertion_point(destructor:micromsg.GiftList)
  SharedDtor();
}

void GiftList::SharedDtor() {
  giftid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iconurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gifturl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GiftList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GiftList::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GiftList& GiftList::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

GiftList* GiftList::New(::google::protobuf::Arena* arena) const {
  GiftList* n = new GiftList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GiftList::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GiftList)
  if (_has_bits_[0 / 32] & 31u) {
    if (has_giftid()) {
      GOOGLE_DCHECK(!giftid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*giftid_.UnsafeRawStringPointer())->clear();
    }
    if (has_iconurl()) {
      GOOGLE_DCHECK(!iconurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*iconurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_title()) {
      GOOGLE_DCHECK(!title_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*title_.UnsafeRawStringPointer())->clear();
    }
    if (has_desc()) {
      GOOGLE_DCHECK(!desc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*desc_.UnsafeRawStringPointer())->clear();
    }
    if (has_gifturl()) {
      GOOGLE_DCHECK(!gifturl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*gifturl_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GiftList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GiftList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string GiftID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_giftid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->giftid().data(), this->giftid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GiftList.GiftID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string IconUrl = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_iconurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->iconurl().data(), this->iconurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GiftList.IconUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Title = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GiftList.Title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Desc = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->desc().data(), this->desc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GiftList.Desc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string GiftUrl = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gifturl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gifturl().data(), this->gifturl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GiftList.GiftUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GiftList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GiftList)
  return false;
#undef DO_
}

void GiftList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GiftList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string GiftID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->giftid().data(), this->giftid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GiftList.GiftID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->giftid(), output);
  }

  // optional string IconUrl = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->iconurl().data(), this->iconurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GiftList.IconUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->iconurl(), output);
  }

  // optional string Title = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GiftList.Title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->title(), output);
  }

  // optional string Desc = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GiftList.Desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->desc(), output);
  }

  // optional string GiftUrl = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gifturl().data(), this->gifturl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GiftList.GiftUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->gifturl(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GiftList)
}

::google::protobuf::uint8* GiftList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GiftList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string GiftID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->giftid().data(), this->giftid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GiftList.GiftID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->giftid(), target);
  }

  // optional string IconUrl = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->iconurl().data(), this->iconurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GiftList.IconUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->iconurl(), target);
  }

  // optional string Title = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GiftList.Title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->title(), target);
  }

  // optional string Desc = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GiftList.Desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->desc(), target);
  }

  // optional string GiftUrl = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gifturl().data(), this->gifturl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GiftList.GiftUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->gifturl(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GiftList)
  return target;
}

size_t GiftList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GiftList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string GiftID = 1;
    if (has_giftid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->giftid());
    }

    // optional string IconUrl = 2;
    if (has_iconurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->iconurl());
    }

    // optional string Title = 3;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string Desc = 4;
    if (has_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->desc());
    }

    // optional string GiftUrl = 5;
    if (has_gifturl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gifturl());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GiftList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GiftList)
  GOOGLE_DCHECK_NE(&from, this);
  const GiftList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GiftList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GiftList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GiftList)
    MergeFrom(*source);
  }
}

void GiftList::MergeFrom(const GiftList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GiftList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_giftid();
      giftid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.giftid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_iconurl();
      iconurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iconurl_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_desc();
      desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_gifturl();
      gifturl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gifturl_);
    }
  }
}

void GiftList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GiftList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GiftList::CopyFrom(const GiftList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GiftList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GiftList::IsInitialized() const {
  return true;
}

void GiftList::Swap(GiftList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GiftList::InternalSwap(GiftList* other) {
  giftid_.Swap(&other->giftid_);
  iconurl_.Swap(&other->iconurl_);
  title_.Swap(&other->title_);
  desc_.Swap(&other->desc_);
  gifturl_.Swap(&other->gifturl_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GiftList::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GiftList

// optional string GiftID = 1;
bool GiftList::has_giftid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GiftList::set_has_giftid() {
  _has_bits_[0] |= 0x00000001u;
}
void GiftList::clear_has_giftid() {
  _has_bits_[0] &= ~0x00000001u;
}
void GiftList::clear_giftid() {
  giftid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_giftid();
}
const ::std::string& GiftList::giftid() const {
  // @@protoc_insertion_point(field_get:micromsg.GiftList.GiftID)
  return giftid_.GetNoArena();
}
void GiftList::set_giftid(const ::std::string& value) {
  set_has_giftid();
  giftid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GiftList.GiftID)
}
#if LANG_CXX11
void GiftList::set_giftid(::std::string&& value) {
  set_has_giftid();
  giftid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GiftList.GiftID)
}
#endif
void GiftList::set_giftid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_giftid();
  giftid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GiftList.GiftID)
}
void GiftList::set_giftid(const char* value, size_t size) {
  set_has_giftid();
  giftid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GiftList.GiftID)
}
::std::string* GiftList::mutable_giftid() {
  set_has_giftid();
  // @@protoc_insertion_point(field_mutable:micromsg.GiftList.GiftID)
  return giftid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GiftList::release_giftid() {
  // @@protoc_insertion_point(field_release:micromsg.GiftList.GiftID)
  clear_has_giftid();
  return giftid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GiftList::set_allocated_giftid(::std::string* giftid) {
  if (giftid != NULL) {
    set_has_giftid();
  } else {
    clear_has_giftid();
  }
  giftid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), giftid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GiftList.GiftID)
}

// optional string IconUrl = 2;
bool GiftList::has_iconurl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GiftList::set_has_iconurl() {
  _has_bits_[0] |= 0x00000002u;
}
void GiftList::clear_has_iconurl() {
  _has_bits_[0] &= ~0x00000002u;
}
void GiftList::clear_iconurl() {
  iconurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_iconurl();
}
const ::std::string& GiftList::iconurl() const {
  // @@protoc_insertion_point(field_get:micromsg.GiftList.IconUrl)
  return iconurl_.GetNoArena();
}
void GiftList::set_iconurl(const ::std::string& value) {
  set_has_iconurl();
  iconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GiftList.IconUrl)
}
#if LANG_CXX11
void GiftList::set_iconurl(::std::string&& value) {
  set_has_iconurl();
  iconurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GiftList.IconUrl)
}
#endif
void GiftList::set_iconurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_iconurl();
  iconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GiftList.IconUrl)
}
void GiftList::set_iconurl(const char* value, size_t size) {
  set_has_iconurl();
  iconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GiftList.IconUrl)
}
::std::string* GiftList::mutable_iconurl() {
  set_has_iconurl();
  // @@protoc_insertion_point(field_mutable:micromsg.GiftList.IconUrl)
  return iconurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GiftList::release_iconurl() {
  // @@protoc_insertion_point(field_release:micromsg.GiftList.IconUrl)
  clear_has_iconurl();
  return iconurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GiftList::set_allocated_iconurl(::std::string* iconurl) {
  if (iconurl != NULL) {
    set_has_iconurl();
  } else {
    clear_has_iconurl();
  }
  iconurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), iconurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GiftList.IconUrl)
}

// optional string Title = 3;
bool GiftList::has_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GiftList::set_has_title() {
  _has_bits_[0] |= 0x00000004u;
}
void GiftList::clear_has_title() {
  _has_bits_[0] &= ~0x00000004u;
}
void GiftList::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
const ::std::string& GiftList::title() const {
  // @@protoc_insertion_point(field_get:micromsg.GiftList.Title)
  return title_.GetNoArena();
}
void GiftList::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GiftList.Title)
}
#if LANG_CXX11
void GiftList::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GiftList.Title)
}
#endif
void GiftList::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GiftList.Title)
}
void GiftList::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GiftList.Title)
}
::std::string* GiftList::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:micromsg.GiftList.Title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GiftList::release_title() {
  // @@protoc_insertion_point(field_release:micromsg.GiftList.Title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GiftList::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GiftList.Title)
}

// optional string Desc = 4;
bool GiftList::has_desc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GiftList::set_has_desc() {
  _has_bits_[0] |= 0x00000008u;
}
void GiftList::clear_has_desc() {
  _has_bits_[0] &= ~0x00000008u;
}
void GiftList::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_desc();
}
const ::std::string& GiftList::desc() const {
  // @@protoc_insertion_point(field_get:micromsg.GiftList.Desc)
  return desc_.GetNoArena();
}
void GiftList::set_desc(const ::std::string& value) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GiftList.Desc)
}
#if LANG_CXX11
void GiftList::set_desc(::std::string&& value) {
  set_has_desc();
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GiftList.Desc)
}
#endif
void GiftList::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GiftList.Desc)
}
void GiftList::set_desc(const char* value, size_t size) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GiftList.Desc)
}
::std::string* GiftList::mutable_desc() {
  set_has_desc();
  // @@protoc_insertion_point(field_mutable:micromsg.GiftList.Desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GiftList::release_desc() {
  // @@protoc_insertion_point(field_release:micromsg.GiftList.Desc)
  clear_has_desc();
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GiftList::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GiftList.Desc)
}

// optional string GiftUrl = 5;
bool GiftList::has_gifturl() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GiftList::set_has_gifturl() {
  _has_bits_[0] |= 0x00000010u;
}
void GiftList::clear_has_gifturl() {
  _has_bits_[0] &= ~0x00000010u;
}
void GiftList::clear_gifturl() {
  gifturl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gifturl();
}
const ::std::string& GiftList::gifturl() const {
  // @@protoc_insertion_point(field_get:micromsg.GiftList.GiftUrl)
  return gifturl_.GetNoArena();
}
void GiftList::set_gifturl(const ::std::string& value) {
  set_has_gifturl();
  gifturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GiftList.GiftUrl)
}
#if LANG_CXX11
void GiftList::set_gifturl(::std::string&& value) {
  set_has_gifturl();
  gifturl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GiftList.GiftUrl)
}
#endif
void GiftList::set_gifturl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_gifturl();
  gifturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GiftList.GiftUrl)
}
void GiftList::set_gifturl(const char* value, size_t size) {
  set_has_gifturl();
  gifturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GiftList.GiftUrl)
}
::std::string* GiftList::mutable_gifturl() {
  set_has_gifturl();
  // @@protoc_insertion_point(field_mutable:micromsg.GiftList.GiftUrl)
  return gifturl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GiftList::release_gifturl() {
  // @@protoc_insertion_point(field_release:micromsg.GiftList.GiftUrl)
  clear_has_gifturl();
  return gifturl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GiftList::set_allocated_gifturl(::std::string* gifturl) {
  if (gifturl != NULL) {
    set_has_gifturl();
  } else {
    clear_has_gifturl();
  }
  gifturl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gifturl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GiftList.GiftUrl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GiftEntranceItem::kCellTitleFieldNumber;
const int GiftEntranceItem::kEnranceWordingFieldNumber;
const int GiftEntranceItem::kAllGiftUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GiftEntranceItem::GiftEntranceItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GiftEntranceItem)
}
GiftEntranceItem::GiftEntranceItem(const GiftEntranceItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  celltitle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_celltitle()) {
    celltitle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.celltitle_);
  }
  enrancewording_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_enrancewording()) {
    enrancewording_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.enrancewording_);
  }
  allgifturl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_allgifturl()) {
    allgifturl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.allgifturl_);
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.GiftEntranceItem)
}

void GiftEntranceItem::SharedCtor() {
  _cached_size_ = 0;
  celltitle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enrancewording_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  allgifturl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GiftEntranceItem::~GiftEntranceItem() {
  // @@protoc_insertion_point(destructor:micromsg.GiftEntranceItem)
  SharedDtor();
}

void GiftEntranceItem::SharedDtor() {
  celltitle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enrancewording_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  allgifturl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GiftEntranceItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GiftEntranceItem::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GiftEntranceItem& GiftEntranceItem::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

GiftEntranceItem* GiftEntranceItem::New(::google::protobuf::Arena* arena) const {
  GiftEntranceItem* n = new GiftEntranceItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GiftEntranceItem::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GiftEntranceItem)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_celltitle()) {
      GOOGLE_DCHECK(!celltitle_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*celltitle_.UnsafeRawStringPointer())->clear();
    }
    if (has_enrancewording()) {
      GOOGLE_DCHECK(!enrancewording_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*enrancewording_.UnsafeRawStringPointer())->clear();
    }
    if (has_allgifturl()) {
      GOOGLE_DCHECK(!allgifturl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*allgifturl_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GiftEntranceItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GiftEntranceItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string CellTitle = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_celltitle()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->celltitle().data(), this->celltitle().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GiftEntranceItem.CellTitle");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string EnranceWording = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_enrancewording()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->enrancewording().data(), this->enrancewording().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GiftEntranceItem.EnranceWording");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AllGiftUrl = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_allgifturl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->allgifturl().data(), this->allgifturl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GiftEntranceItem.AllGiftUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GiftEntranceItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GiftEntranceItem)
  return false;
#undef DO_
}

void GiftEntranceItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GiftEntranceItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string CellTitle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->celltitle().data(), this->celltitle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GiftEntranceItem.CellTitle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->celltitle(), output);
  }

  // optional string EnranceWording = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->enrancewording().data(), this->enrancewording().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GiftEntranceItem.EnranceWording");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->enrancewording(), output);
  }

  // optional string AllGiftUrl = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->allgifturl().data(), this->allgifturl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GiftEntranceItem.AllGiftUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->allgifturl(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GiftEntranceItem)
}

::google::protobuf::uint8* GiftEntranceItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GiftEntranceItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string CellTitle = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->celltitle().data(), this->celltitle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GiftEntranceItem.CellTitle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->celltitle(), target);
  }

  // optional string EnranceWording = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->enrancewording().data(), this->enrancewording().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GiftEntranceItem.EnranceWording");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->enrancewording(), target);
  }

  // optional string AllGiftUrl = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->allgifturl().data(), this->allgifturl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GiftEntranceItem.AllGiftUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->allgifturl(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GiftEntranceItem)
  return target;
}

size_t GiftEntranceItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GiftEntranceItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string CellTitle = 1;
    if (has_celltitle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->celltitle());
    }

    // optional string EnranceWording = 2;
    if (has_enrancewording()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->enrancewording());
    }

    // optional string AllGiftUrl = 3;
    if (has_allgifturl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->allgifturl());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GiftEntranceItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GiftEntranceItem)
  GOOGLE_DCHECK_NE(&from, this);
  const GiftEntranceItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GiftEntranceItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GiftEntranceItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GiftEntranceItem)
    MergeFrom(*source);
  }
}

void GiftEntranceItem::MergeFrom(const GiftEntranceItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GiftEntranceItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_celltitle();
      celltitle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.celltitle_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_enrancewording();
      enrancewording_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.enrancewording_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_allgifturl();
      allgifturl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.allgifturl_);
    }
  }
}

void GiftEntranceItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GiftEntranceItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GiftEntranceItem::CopyFrom(const GiftEntranceItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GiftEntranceItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GiftEntranceItem::IsInitialized() const {
  return true;
}

void GiftEntranceItem::Swap(GiftEntranceItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GiftEntranceItem::InternalSwap(GiftEntranceItem* other) {
  celltitle_.Swap(&other->celltitle_);
  enrancewording_.Swap(&other->enrancewording_);
  allgifturl_.Swap(&other->allgifturl_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GiftEntranceItem::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GiftEntranceItem

// optional string CellTitle = 1;
bool GiftEntranceItem::has_celltitle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GiftEntranceItem::set_has_celltitle() {
  _has_bits_[0] |= 0x00000001u;
}
void GiftEntranceItem::clear_has_celltitle() {
  _has_bits_[0] &= ~0x00000001u;
}
void GiftEntranceItem::clear_celltitle() {
  celltitle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_celltitle();
}
const ::std::string& GiftEntranceItem::celltitle() const {
  // @@protoc_insertion_point(field_get:micromsg.GiftEntranceItem.CellTitle)
  return celltitle_.GetNoArena();
}
void GiftEntranceItem::set_celltitle(const ::std::string& value) {
  set_has_celltitle();
  celltitle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GiftEntranceItem.CellTitle)
}
#if LANG_CXX11
void GiftEntranceItem::set_celltitle(::std::string&& value) {
  set_has_celltitle();
  celltitle_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GiftEntranceItem.CellTitle)
}
#endif
void GiftEntranceItem::set_celltitle(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_celltitle();
  celltitle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GiftEntranceItem.CellTitle)
}
void GiftEntranceItem::set_celltitle(const char* value, size_t size) {
  set_has_celltitle();
  celltitle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GiftEntranceItem.CellTitle)
}
::std::string* GiftEntranceItem::mutable_celltitle() {
  set_has_celltitle();
  // @@protoc_insertion_point(field_mutable:micromsg.GiftEntranceItem.CellTitle)
  return celltitle_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GiftEntranceItem::release_celltitle() {
  // @@protoc_insertion_point(field_release:micromsg.GiftEntranceItem.CellTitle)
  clear_has_celltitle();
  return celltitle_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GiftEntranceItem::set_allocated_celltitle(::std::string* celltitle) {
  if (celltitle != NULL) {
    set_has_celltitle();
  } else {
    clear_has_celltitle();
  }
  celltitle_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), celltitle);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GiftEntranceItem.CellTitle)
}

// optional string EnranceWording = 2;
bool GiftEntranceItem::has_enrancewording() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GiftEntranceItem::set_has_enrancewording() {
  _has_bits_[0] |= 0x00000002u;
}
void GiftEntranceItem::clear_has_enrancewording() {
  _has_bits_[0] &= ~0x00000002u;
}
void GiftEntranceItem::clear_enrancewording() {
  enrancewording_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_enrancewording();
}
const ::std::string& GiftEntranceItem::enrancewording() const {
  // @@protoc_insertion_point(field_get:micromsg.GiftEntranceItem.EnranceWording)
  return enrancewording_.GetNoArena();
}
void GiftEntranceItem::set_enrancewording(const ::std::string& value) {
  set_has_enrancewording();
  enrancewording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GiftEntranceItem.EnranceWording)
}
#if LANG_CXX11
void GiftEntranceItem::set_enrancewording(::std::string&& value) {
  set_has_enrancewording();
  enrancewording_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GiftEntranceItem.EnranceWording)
}
#endif
void GiftEntranceItem::set_enrancewording(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_enrancewording();
  enrancewording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GiftEntranceItem.EnranceWording)
}
void GiftEntranceItem::set_enrancewording(const char* value, size_t size) {
  set_has_enrancewording();
  enrancewording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GiftEntranceItem.EnranceWording)
}
::std::string* GiftEntranceItem::mutable_enrancewording() {
  set_has_enrancewording();
  // @@protoc_insertion_point(field_mutable:micromsg.GiftEntranceItem.EnranceWording)
  return enrancewording_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GiftEntranceItem::release_enrancewording() {
  // @@protoc_insertion_point(field_release:micromsg.GiftEntranceItem.EnranceWording)
  clear_has_enrancewording();
  return enrancewording_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GiftEntranceItem::set_allocated_enrancewording(::std::string* enrancewording) {
  if (enrancewording != NULL) {
    set_has_enrancewording();
  } else {
    clear_has_enrancewording();
  }
  enrancewording_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), enrancewording);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GiftEntranceItem.EnranceWording)
}

// optional string AllGiftUrl = 3;
bool GiftEntranceItem::has_allgifturl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GiftEntranceItem::set_has_allgifturl() {
  _has_bits_[0] |= 0x00000004u;
}
void GiftEntranceItem::clear_has_allgifturl() {
  _has_bits_[0] &= ~0x00000004u;
}
void GiftEntranceItem::clear_allgifturl() {
  allgifturl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_allgifturl();
}
const ::std::string& GiftEntranceItem::allgifturl() const {
  // @@protoc_insertion_point(field_get:micromsg.GiftEntranceItem.AllGiftUrl)
  return allgifturl_.GetNoArena();
}
void GiftEntranceItem::set_allgifturl(const ::std::string& value) {
  set_has_allgifturl();
  allgifturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GiftEntranceItem.AllGiftUrl)
}
#if LANG_CXX11
void GiftEntranceItem::set_allgifturl(::std::string&& value) {
  set_has_allgifturl();
  allgifturl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GiftEntranceItem.AllGiftUrl)
}
#endif
void GiftEntranceItem::set_allgifturl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_allgifturl();
  allgifturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GiftEntranceItem.AllGiftUrl)
}
void GiftEntranceItem::set_allgifturl(const char* value, size_t size) {
  set_has_allgifturl();
  allgifturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GiftEntranceItem.AllGiftUrl)
}
::std::string* GiftEntranceItem::mutable_allgifturl() {
  set_has_allgifturl();
  // @@protoc_insertion_point(field_mutable:micromsg.GiftEntranceItem.AllGiftUrl)
  return allgifturl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GiftEntranceItem::release_allgifturl() {
  // @@protoc_insertion_point(field_release:micromsg.GiftEntranceItem.AllGiftUrl)
  clear_has_allgifturl();
  return allgifturl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GiftEntranceItem::set_allocated_allgifturl(::std::string* allgifturl) {
  if (allgifturl != NULL) {
    set_has_allgifturl();
  } else {
    clear_has_allgifturl();
  }
  allgifturl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), allgifturl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GiftEntranceItem.AllGiftUrl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RcAppList::kAppIDFieldNumber;
const int RcAppList::kAppNameFieldNumber;
const int RcAppList::kAppIconUrlFieldNumber;
const int RcAppList::kAppDescFieldNumber;
const int RcAppList::kAppDownloadUrlFieldNumber;
const int RcAppList::kAppCoverUrlFieldNumber;
const int RcAppList::kAppDevInfoFieldNumber;
const int RcAppList::kAppScreenShotCountFieldNumber;
const int RcAppList::kAppScreenShotListFieldNumber;
const int RcAppList::kAppSnsDescFieldNumber;
const int RcAppList::kAppSnapshotUrlFieldNumber;
const int RcAppList::kAppDetailDescFieldNumber;
const int RcAppList::kFriendCountFieldNumber;
const int RcAppList::kAppTypeFieldNumber;
const int RcAppList::kAndroidApkMd5FieldNumber;
const int RcAppList::kAndroidPackageNameFieldNumber;
const int RcAppList::kAppNamezhTWFieldNumber;
const int RcAppList::kAppNameEnUSFieldNumber;
const int RcAppList::kGooglePlayDownloadUrlFieldNumber;
const int RcAppList::kAppSuggestionIconUrlFieldNumber;
const int RcAppList::kAppSuggestionIntroUrlFieldNumber;
const int RcAppList::kSYYBFieldNumber;
const int RcAppList::kAppLaunchSchemeFieldNumber;
const int RcAppList::kGooglePlayDownloadFlagFieldNumber;
const int RcAppList::kAppInfoFlagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RcAppList::RcAppList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.RcAppList)
}
RcAppList::RcAppList(const RcAppList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      appscreenshotlist_(from.appscreenshotlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appid()) {
    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  appname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appname()) {
    appname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appname_);
  }
  appiconurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appiconurl()) {
    appiconurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appiconurl_);
  }
  appdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appdesc()) {
    appdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appdesc_);
  }
  appdownloadurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appdownloadurl()) {
    appdownloadurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appdownloadurl_);
  }
  appcoverurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appcoverurl()) {
    appcoverurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appcoverurl_);
  }
  appdevinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appdevinfo()) {
    appdevinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appdevinfo_);
  }
  appsnsdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appsnsdesc()) {
    appsnsdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appsnsdesc_);
  }
  appsnapshoturl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appsnapshoturl()) {
    appsnapshoturl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appsnapshoturl_);
  }
  appdetaildesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appdetaildesc()) {
    appdetaildesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appdetaildesc_);
  }
  apptype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_apptype()) {
    apptype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apptype_);
  }
  androidapkmd5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_androidapkmd5()) {
    androidapkmd5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.androidapkmd5_);
  }
  androidpackagename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_androidpackagename()) {
    androidpackagename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.androidpackagename_);
  }
  appnamezhtw_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appnamezhtw()) {
    appnamezhtw_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appnamezhtw_);
  }
  appnameenus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appnameenus()) {
    appnameenus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appnameenus_);
  }
  googleplaydownloadurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_googleplaydownloadurl()) {
    googleplaydownloadurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.googleplaydownloadurl_);
  }
  appsuggestioniconurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appsuggestioniconurl()) {
    appsuggestioniconurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appsuggestioniconurl_);
  }
  appsuggestionintrourl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appsuggestionintrourl()) {
    appsuggestionintrourl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appsuggestionintrourl_);
  }
  applaunchscheme_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_applaunchscheme()) {
    applaunchscheme_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.applaunchscheme_);
  }
  if (from.has_syyb()) {
    syyb_ = new ::micromsg::YYBStruct(*from.syyb_);
  } else {
    syyb_ = NULL;
  }
  ::memcpy(&appscreenshotcount_, &from.appscreenshotcount_,
    reinterpret_cast<char*>(&appinfoflag_) -
    reinterpret_cast<char*>(&appscreenshotcount_) + sizeof(appinfoflag_));
  // @@protoc_insertion_point(copy_constructor:micromsg.RcAppList)
}

void RcAppList::SharedCtor() {
  _cached_size_ = 0;
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appiconurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appdownloadurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appcoverurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appdevinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appsnsdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appsnapshoturl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appdetaildesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apptype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  androidapkmd5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  androidpackagename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appnamezhtw_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appnameenus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  googleplaydownloadurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appsuggestioniconurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appsuggestionintrourl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  applaunchscheme_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&syyb_, 0, reinterpret_cast<char*>(&appinfoflag_) -
    reinterpret_cast<char*>(&syyb_) + sizeof(appinfoflag_));
}

RcAppList::~RcAppList() {
  // @@protoc_insertion_point(destructor:micromsg.RcAppList)
  SharedDtor();
}

void RcAppList::SharedDtor() {
  appid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appiconurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appdesc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appdownloadurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appcoverurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appdevinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appsnsdesc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appsnapshoturl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appdetaildesc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apptype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  androidapkmd5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  androidpackagename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appnamezhtw_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appnameenus_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  googleplaydownloadurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appsuggestioniconurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appsuggestionintrourl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  applaunchscheme_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete syyb_;
  }
}

void RcAppList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RcAppList::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RcAppList& RcAppList::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

RcAppList* RcAppList::New(::google::protobuf::Arena* arena) const {
  RcAppList* n = new RcAppList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RcAppList::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.RcAppList)
  appscreenshotlist_.Clear();
  if (_has_bits_[0 / 32] & 255u) {
    if (has_appid()) {
      GOOGLE_DCHECK(!appid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appid_.UnsafeRawStringPointer())->clear();
    }
    if (has_appname()) {
      GOOGLE_DCHECK(!appname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appname_.UnsafeRawStringPointer())->clear();
    }
    if (has_appiconurl()) {
      GOOGLE_DCHECK(!appiconurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appiconurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_appdesc()) {
      GOOGLE_DCHECK(!appdesc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appdesc_.UnsafeRawStringPointer())->clear();
    }
    if (has_appdownloadurl()) {
      GOOGLE_DCHECK(!appdownloadurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appdownloadurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_appcoverurl()) {
      GOOGLE_DCHECK(!appcoverurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appcoverurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_appdevinfo()) {
      GOOGLE_DCHECK(!appdevinfo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appdevinfo_.UnsafeRawStringPointer())->clear();
    }
    if (has_appsnsdesc()) {
      GOOGLE_DCHECK(!appsnsdesc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appsnsdesc_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    if (has_appsnapshoturl()) {
      GOOGLE_DCHECK(!appsnapshoturl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appsnapshoturl_.UnsafeRawStringPointer())->clear();
    }
    if (has_appdetaildesc()) {
      GOOGLE_DCHECK(!appdetaildesc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appdetaildesc_.UnsafeRawStringPointer())->clear();
    }
    if (has_apptype()) {
      GOOGLE_DCHECK(!apptype_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*apptype_.UnsafeRawStringPointer())->clear();
    }
    if (has_androidapkmd5()) {
      GOOGLE_DCHECK(!androidapkmd5_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*androidapkmd5_.UnsafeRawStringPointer())->clear();
    }
    if (has_androidpackagename()) {
      GOOGLE_DCHECK(!androidpackagename_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*androidpackagename_.UnsafeRawStringPointer())->clear();
    }
    if (has_appnamezhtw()) {
      GOOGLE_DCHECK(!appnamezhtw_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appnamezhtw_.UnsafeRawStringPointer())->clear();
    }
    if (has_appnameenus()) {
      GOOGLE_DCHECK(!appnameenus_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appnameenus_.UnsafeRawStringPointer())->clear();
    }
    if (has_googleplaydownloadurl()) {
      GOOGLE_DCHECK(!googleplaydownloadurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*googleplaydownloadurl_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[16 / 32] & 983040u) {
    if (has_appsuggestioniconurl()) {
      GOOGLE_DCHECK(!appsuggestioniconurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appsuggestioniconurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_appsuggestionintrourl()) {
      GOOGLE_DCHECK(!appsuggestionintrourl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appsuggestionintrourl_.UnsafeRawStringPointer())->clear();
    }
    if (has_applaunchscheme()) {
      GOOGLE_DCHECK(!applaunchscheme_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*applaunchscheme_.UnsafeRawStringPointer())->clear();
    }
    if (has_syyb()) {
      GOOGLE_DCHECK(syyb_ != NULL);
      syyb_->::micromsg::YYBStruct::Clear();
    }
  }
  if (_has_bits_[16 / 32] & 15728640u) {
    ::memset(&appscreenshotcount_, 0, reinterpret_cast<char*>(&appinfoflag_) -
      reinterpret_cast<char*>(&appscreenshotcount_) + sizeof(appinfoflag_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RcAppList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.RcAppList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string AppID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appid().data(), this->appid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RcAppList.AppID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appname().data(), this->appname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RcAppList.AppName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppIconUrl = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appiconurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appiconurl().data(), this->appiconurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RcAppList.AppIconUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppDesc = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appdesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appdesc().data(), this->appdesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RcAppList.AppDesc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppDownloadUrl = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appdownloadurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appdownloadurl().data(), this->appdownloadurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RcAppList.AppDownloadUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppCoverUrl = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appcoverurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appcoverurl().data(), this->appcoverurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RcAppList.AppCoverUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppDevInfo = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appdevinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appdevinfo().data(), this->appdevinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RcAppList.AppDevInfo");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 AppScreenShotCount = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_appscreenshotcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &appscreenshotcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.SKBuiltinString_t AppScreenShotList = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_appscreenshotlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppSnsDesc = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appsnsdesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appsnsdesc().data(), this->appsnsdesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RcAppList.AppSnsDesc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppSnapshotUrl = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appsnapshoturl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appsnapshoturl().data(), this->appsnapshoturl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RcAppList.AppSnapshotUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppDetailDesc = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appdetaildesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appdetaildesc().data(), this->appdetaildesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RcAppList.AppDetailDesc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 FriendCount = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {
          set_has_friendcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friendcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppType = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apptype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->apptype().data(), this->apptype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RcAppList.AppType");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AndroidApkMd5 = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_androidapkmd5()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->androidapkmd5().data(), this->androidapkmd5().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RcAppList.AndroidApkMd5");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AndroidPackageName = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_androidpackagename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->androidpackagename().data(), this->androidpackagename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RcAppList.AndroidPackageName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppNamezhTW = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appnamezhtw()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appnamezhtw().data(), this->appnamezhtw().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RcAppList.AppNamezhTW");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppNameEnUS = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appnameenus()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appnameenus().data(), this->appnameenus().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RcAppList.AppNameEnUS");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string GooglePlayDownloadUrl = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_googleplaydownloadurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->googleplaydownloadurl().data(), this->googleplaydownloadurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RcAppList.GooglePlayDownloadUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppSuggestionIconUrl = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appsuggestioniconurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appsuggestioniconurl().data(), this->appsuggestioniconurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RcAppList.AppSuggestionIconUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppSuggestionIntroUrl = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appsuggestionintrourl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appsuggestionintrourl().data(), this->appsuggestionintrourl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RcAppList.AppSuggestionIntroUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .micromsg.YYBStruct SYYB = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_syyb()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppLaunchScheme = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_applaunchscheme()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->applaunchscheme().data(), this->applaunchscheme().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RcAppList.AppLaunchScheme");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 GooglePlayDownloadFlag = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u)) {
          set_has_googleplaydownloadflag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &googleplaydownloadflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 AppInfoFlag = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u)) {
          set_has_appinfoflag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appinfoflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.RcAppList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.RcAppList)
  return false;
#undef DO_
}

void RcAppList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.RcAppList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string AppID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AppID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appid(), output);
  }

  // optional string AppName = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appname().data(), this->appname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AppName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appname(), output);
  }

  // optional string AppIconUrl = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appiconurl().data(), this->appiconurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AppIconUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->appiconurl(), output);
  }

  // optional string AppDesc = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appdesc().data(), this->appdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AppDesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->appdesc(), output);
  }

  // optional string AppDownloadUrl = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appdownloadurl().data(), this->appdownloadurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AppDownloadUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->appdownloadurl(), output);
  }

  // optional string AppCoverUrl = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appcoverurl().data(), this->appcoverurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AppCoverUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->appcoverurl(), output);
  }

  // optional string AppDevInfo = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appdevinfo().data(), this->appdevinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AppDevInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->appdevinfo(), output);
  }

  // required int32 AppScreenShotCount = 8;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->appscreenshotcount(), output);
  }

  // repeated .micromsg.SKBuiltinString_t AppScreenShotList = 9;
  for (unsigned int i = 0, n = this->appscreenshotlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->appscreenshotlist(i), output);
  }

  // optional string AppSnsDesc = 10;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appsnsdesc().data(), this->appsnsdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AppSnsDesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->appsnsdesc(), output);
  }

  // optional string AppSnapshotUrl = 11;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appsnapshoturl().data(), this->appsnapshoturl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AppSnapshotUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->appsnapshoturl(), output);
  }

  // optional string AppDetailDesc = 12;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appdetaildesc().data(), this->appdetaildesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AppDetailDesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->appdetaildesc(), output);
  }

  // optional uint32 FriendCount = 13;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->friendcount(), output);
  }

  // optional string AppType = 14;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->apptype().data(), this->apptype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AppType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->apptype(), output);
  }

  // optional string AndroidApkMd5 = 15;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->androidapkmd5().data(), this->androidapkmd5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AndroidApkMd5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->androidapkmd5(), output);
  }

  // optional string AndroidPackageName = 16;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->androidpackagename().data(), this->androidpackagename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AndroidPackageName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->androidpackagename(), output);
  }

  // optional string AppNamezhTW = 17;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appnamezhtw().data(), this->appnamezhtw().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AppNamezhTW");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->appnamezhtw(), output);
  }

  // optional string AppNameEnUS = 18;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appnameenus().data(), this->appnameenus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AppNameEnUS");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->appnameenus(), output);
  }

  // optional string GooglePlayDownloadUrl = 19;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->googleplaydownloadurl().data(), this->googleplaydownloadurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.GooglePlayDownloadUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->googleplaydownloadurl(), output);
  }

  // optional string AppSuggestionIconUrl = 20;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appsuggestioniconurl().data(), this->appsuggestioniconurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AppSuggestionIconUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->appsuggestioniconurl(), output);
  }

  // optional string AppSuggestionIntroUrl = 21;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appsuggestionintrourl().data(), this->appsuggestionintrourl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AppSuggestionIntroUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->appsuggestionintrourl(), output);
  }

  // optional .micromsg.YYBStruct SYYB = 22;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, *this->syyb_, output);
  }

  // optional string AppLaunchScheme = 23;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->applaunchscheme().data(), this->applaunchscheme().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AppLaunchScheme");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->applaunchscheme(), output);
  }

  // optional uint32 GooglePlayDownloadFlag = 24;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(24, this->googleplaydownloadflag(), output);
  }

  // optional uint32 AppInfoFlag = 25;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(25, this->appinfoflag(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.RcAppList)
}

::google::protobuf::uint8* RcAppList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.RcAppList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string AppID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AppID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appid(), target);
  }

  // optional string AppName = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appname().data(), this->appname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AppName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appname(), target);
  }

  // optional string AppIconUrl = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appiconurl().data(), this->appiconurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AppIconUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->appiconurl(), target);
  }

  // optional string AppDesc = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appdesc().data(), this->appdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AppDesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->appdesc(), target);
  }

  // optional string AppDownloadUrl = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appdownloadurl().data(), this->appdownloadurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AppDownloadUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->appdownloadurl(), target);
  }

  // optional string AppCoverUrl = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appcoverurl().data(), this->appcoverurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AppCoverUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->appcoverurl(), target);
  }

  // optional string AppDevInfo = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appdevinfo().data(), this->appdevinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AppDevInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->appdevinfo(), target);
  }

  // required int32 AppScreenShotCount = 8;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->appscreenshotcount(), target);
  }

  // repeated .micromsg.SKBuiltinString_t AppScreenShotList = 9;
  for (unsigned int i = 0, n = this->appscreenshotlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->appscreenshotlist(i), deterministic, target);
  }

  // optional string AppSnsDesc = 10;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appsnsdesc().data(), this->appsnsdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AppSnsDesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->appsnsdesc(), target);
  }

  // optional string AppSnapshotUrl = 11;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appsnapshoturl().data(), this->appsnapshoturl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AppSnapshotUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->appsnapshoturl(), target);
  }

  // optional string AppDetailDesc = 12;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appdetaildesc().data(), this->appdetaildesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AppDetailDesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->appdetaildesc(), target);
  }

  // optional uint32 FriendCount = 13;
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->friendcount(), target);
  }

  // optional string AppType = 14;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->apptype().data(), this->apptype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AppType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->apptype(), target);
  }

  // optional string AndroidApkMd5 = 15;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->androidapkmd5().data(), this->androidapkmd5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AndroidApkMd5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->androidapkmd5(), target);
  }

  // optional string AndroidPackageName = 16;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->androidpackagename().data(), this->androidpackagename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AndroidPackageName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->androidpackagename(), target);
  }

  // optional string AppNamezhTW = 17;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appnamezhtw().data(), this->appnamezhtw().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AppNamezhTW");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->appnamezhtw(), target);
  }

  // optional string AppNameEnUS = 18;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appnameenus().data(), this->appnameenus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AppNameEnUS");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->appnameenus(), target);
  }

  // optional string GooglePlayDownloadUrl = 19;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->googleplaydownloadurl().data(), this->googleplaydownloadurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.GooglePlayDownloadUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->googleplaydownloadurl(), target);
  }

  // optional string AppSuggestionIconUrl = 20;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appsuggestioniconurl().data(), this->appsuggestioniconurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AppSuggestionIconUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->appsuggestioniconurl(), target);
  }

  // optional string AppSuggestionIntroUrl = 21;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appsuggestionintrourl().data(), this->appsuggestionintrourl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AppSuggestionIntroUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->appsuggestionintrourl(), target);
  }

  // optional .micromsg.YYBStruct SYYB = 22;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        22, *this->syyb_, deterministic, target);
  }

  // optional string AppLaunchScheme = 23;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->applaunchscheme().data(), this->applaunchscheme().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcAppList.AppLaunchScheme");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->applaunchscheme(), target);
  }

  // optional uint32 GooglePlayDownloadFlag = 24;
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(24, this->googleplaydownloadflag(), target);
  }

  // optional uint32 AppInfoFlag = 25;
  if (cached_has_bits & 0x00800000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(25, this->appinfoflag(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.RcAppList)
  return target;
}

size_t RcAppList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.RcAppList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required int32 AppScreenShotCount = 8;
  if (has_appscreenshotcount()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->appscreenshotcount());
  }
  // repeated .micromsg.SKBuiltinString_t AppScreenShotList = 9;
  {
    unsigned int count = this->appscreenshotlist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->appscreenshotlist(i));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string AppID = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appid());
    }

    // optional string AppName = 2;
    if (has_appname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appname());
    }

    // optional string AppIconUrl = 3;
    if (has_appiconurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appiconurl());
    }

    // optional string AppDesc = 4;
    if (has_appdesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appdesc());
    }

    // optional string AppDownloadUrl = 5;
    if (has_appdownloadurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appdownloadurl());
    }

    // optional string AppCoverUrl = 6;
    if (has_appcoverurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appcoverurl());
    }

    // optional string AppDevInfo = 7;
    if (has_appdevinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appdevinfo());
    }

    // optional string AppSnsDesc = 10;
    if (has_appsnsdesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appsnsdesc());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional string AppSnapshotUrl = 11;
    if (has_appsnapshoturl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appsnapshoturl());
    }

    // optional string AppDetailDesc = 12;
    if (has_appdetaildesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appdetaildesc());
    }

    // optional string AppType = 14;
    if (has_apptype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->apptype());
    }

    // optional string AndroidApkMd5 = 15;
    if (has_androidapkmd5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->androidapkmd5());
    }

    // optional string AndroidPackageName = 16;
    if (has_androidpackagename()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->androidpackagename());
    }

    // optional string AppNamezhTW = 17;
    if (has_appnamezhtw()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appnamezhtw());
    }

    // optional string AppNameEnUS = 18;
    if (has_appnameenus()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appnameenus());
    }

    // optional string GooglePlayDownloadUrl = 19;
    if (has_googleplaydownloadurl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->googleplaydownloadurl());
    }

  }
  if (_has_bits_[16 / 32] & 983040u) {
    // optional string AppSuggestionIconUrl = 20;
    if (has_appsuggestioniconurl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appsuggestioniconurl());
    }

    // optional string AppSuggestionIntroUrl = 21;
    if (has_appsuggestionintrourl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appsuggestionintrourl());
    }

    // optional string AppLaunchScheme = 23;
    if (has_applaunchscheme()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->applaunchscheme());
    }

    // optional .micromsg.YYBStruct SYYB = 22;
    if (has_syyb()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->syyb_);
    }

  }
  if (_has_bits_[16 / 32] & 14680064u) {
    // optional uint32 FriendCount = 13;
    if (has_friendcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->friendcount());
    }

    // optional uint32 GooglePlayDownloadFlag = 24;
    if (has_googleplaydownloadflag()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->googleplaydownloadflag());
    }

    // optional uint32 AppInfoFlag = 25;
    if (has_appinfoflag()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appinfoflag());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RcAppList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.RcAppList)
  GOOGLE_DCHECK_NE(&from, this);
  const RcAppList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RcAppList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.RcAppList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.RcAppList)
    MergeFrom(*source);
  }
}

void RcAppList::MergeFrom(const RcAppList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.RcAppList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  appscreenshotlist_.MergeFrom(from.appscreenshotlist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_appid();
      appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_appname();
      appname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appname_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_appiconurl();
      appiconurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appiconurl_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_appdesc();
      appdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appdesc_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_appdownloadurl();
      appdownloadurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appdownloadurl_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_appcoverurl();
      appcoverurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appcoverurl_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_appdevinfo();
      appdevinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appdevinfo_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_appsnsdesc();
      appsnsdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appsnsdesc_);
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_appsnapshoturl();
      appsnapshoturl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appsnapshoturl_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has_appdetaildesc();
      appdetaildesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appdetaildesc_);
    }
    if (cached_has_bits & 0x00000400u) {
      set_has_apptype();
      apptype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apptype_);
    }
    if (cached_has_bits & 0x00000800u) {
      set_has_androidapkmd5();
      androidapkmd5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.androidapkmd5_);
    }
    if (cached_has_bits & 0x00001000u) {
      set_has_androidpackagename();
      androidpackagename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.androidpackagename_);
    }
    if (cached_has_bits & 0x00002000u) {
      set_has_appnamezhtw();
      appnamezhtw_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appnamezhtw_);
    }
    if (cached_has_bits & 0x00004000u) {
      set_has_appnameenus();
      appnameenus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appnameenus_);
    }
    if (cached_has_bits & 0x00008000u) {
      set_has_googleplaydownloadurl();
      googleplaydownloadurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.googleplaydownloadurl_);
    }
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      set_has_appsuggestioniconurl();
      appsuggestioniconurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appsuggestioniconurl_);
    }
    if (cached_has_bits & 0x00020000u) {
      set_has_appsuggestionintrourl();
      appsuggestionintrourl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appsuggestionintrourl_);
    }
    if (cached_has_bits & 0x00040000u) {
      set_has_applaunchscheme();
      applaunchscheme_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.applaunchscheme_);
    }
    if (cached_has_bits & 0x00080000u) {
      mutable_syyb()->::micromsg::YYBStruct::MergeFrom(from.syyb());
    }
    if (cached_has_bits & 0x00100000u) {
      appscreenshotcount_ = from.appscreenshotcount_;
    }
    if (cached_has_bits & 0x00200000u) {
      friendcount_ = from.friendcount_;
    }
    if (cached_has_bits & 0x00400000u) {
      googleplaydownloadflag_ = from.googleplaydownloadflag_;
    }
    if (cached_has_bits & 0x00800000u) {
      appinfoflag_ = from.appinfoflag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RcAppList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.RcAppList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RcAppList::CopyFrom(const RcAppList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.RcAppList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RcAppList::IsInitialized() const {
  if ((_has_bits_[0] & 0x00100000) != 0x00100000) return false;
  return true;
}

void RcAppList::Swap(RcAppList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RcAppList::InternalSwap(RcAppList* other) {
  appscreenshotlist_.InternalSwap(&other->appscreenshotlist_);
  appid_.Swap(&other->appid_);
  appname_.Swap(&other->appname_);
  appiconurl_.Swap(&other->appiconurl_);
  appdesc_.Swap(&other->appdesc_);
  appdownloadurl_.Swap(&other->appdownloadurl_);
  appcoverurl_.Swap(&other->appcoverurl_);
  appdevinfo_.Swap(&other->appdevinfo_);
  appsnsdesc_.Swap(&other->appsnsdesc_);
  appsnapshoturl_.Swap(&other->appsnapshoturl_);
  appdetaildesc_.Swap(&other->appdetaildesc_);
  apptype_.Swap(&other->apptype_);
  androidapkmd5_.Swap(&other->androidapkmd5_);
  androidpackagename_.Swap(&other->androidpackagename_);
  appnamezhtw_.Swap(&other->appnamezhtw_);
  appnameenus_.Swap(&other->appnameenus_);
  googleplaydownloadurl_.Swap(&other->googleplaydownloadurl_);
  appsuggestioniconurl_.Swap(&other->appsuggestioniconurl_);
  appsuggestionintrourl_.Swap(&other->appsuggestionintrourl_);
  applaunchscheme_.Swap(&other->applaunchscheme_);
  std::swap(syyb_, other->syyb_);
  std::swap(appscreenshotcount_, other->appscreenshotcount_);
  std::swap(friendcount_, other->friendcount_);
  std::swap(googleplaydownloadflag_, other->googleplaydownloadflag_);
  std::swap(appinfoflag_, other->appinfoflag_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RcAppList::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RcAppList

// optional string AppID = 1;
bool RcAppList::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RcAppList::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
void RcAppList::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
void RcAppList::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
const ::std::string& RcAppList::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppID)
  return appid_.GetNoArena();
}
void RcAppList::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppID)
}
#if LANG_CXX11
void RcAppList::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AppID)
}
#endif
void RcAppList::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AppID)
}
void RcAppList::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AppID)
}
::std::string* RcAppList::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RcAppList::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RcAppList::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AppID)
}

// optional string AppName = 2;
bool RcAppList::has_appname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RcAppList::set_has_appname() {
  _has_bits_[0] |= 0x00000002u;
}
void RcAppList::clear_has_appname() {
  _has_bits_[0] &= ~0x00000002u;
}
void RcAppList::clear_appname() {
  appname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appname();
}
const ::std::string& RcAppList::appname() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppName)
  return appname_.GetNoArena();
}
void RcAppList::set_appname(const ::std::string& value) {
  set_has_appname();
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppName)
}
#if LANG_CXX11
void RcAppList::set_appname(::std::string&& value) {
  set_has_appname();
  appname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AppName)
}
#endif
void RcAppList::set_appname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appname();
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AppName)
}
void RcAppList::set_appname(const char* value, size_t size) {
  set_has_appname();
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AppName)
}
::std::string* RcAppList::mutable_appname() {
  set_has_appname();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AppName)
  return appname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RcAppList::release_appname() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AppName)
  clear_has_appname();
  return appname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RcAppList::set_allocated_appname(::std::string* appname) {
  if (appname != NULL) {
    set_has_appname();
  } else {
    clear_has_appname();
  }
  appname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AppName)
}

// optional string AppIconUrl = 3;
bool RcAppList::has_appiconurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RcAppList::set_has_appiconurl() {
  _has_bits_[0] |= 0x00000004u;
}
void RcAppList::clear_has_appiconurl() {
  _has_bits_[0] &= ~0x00000004u;
}
void RcAppList::clear_appiconurl() {
  appiconurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appiconurl();
}
const ::std::string& RcAppList::appiconurl() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppIconUrl)
  return appiconurl_.GetNoArena();
}
void RcAppList::set_appiconurl(const ::std::string& value) {
  set_has_appiconurl();
  appiconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppIconUrl)
}
#if LANG_CXX11
void RcAppList::set_appiconurl(::std::string&& value) {
  set_has_appiconurl();
  appiconurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AppIconUrl)
}
#endif
void RcAppList::set_appiconurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appiconurl();
  appiconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AppIconUrl)
}
void RcAppList::set_appiconurl(const char* value, size_t size) {
  set_has_appiconurl();
  appiconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AppIconUrl)
}
::std::string* RcAppList::mutable_appiconurl() {
  set_has_appiconurl();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AppIconUrl)
  return appiconurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RcAppList::release_appiconurl() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AppIconUrl)
  clear_has_appiconurl();
  return appiconurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RcAppList::set_allocated_appiconurl(::std::string* appiconurl) {
  if (appiconurl != NULL) {
    set_has_appiconurl();
  } else {
    clear_has_appiconurl();
  }
  appiconurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appiconurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AppIconUrl)
}

// optional string AppDesc = 4;
bool RcAppList::has_appdesc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RcAppList::set_has_appdesc() {
  _has_bits_[0] |= 0x00000008u;
}
void RcAppList::clear_has_appdesc() {
  _has_bits_[0] &= ~0x00000008u;
}
void RcAppList::clear_appdesc() {
  appdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appdesc();
}
const ::std::string& RcAppList::appdesc() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppDesc)
  return appdesc_.GetNoArena();
}
void RcAppList::set_appdesc(const ::std::string& value) {
  set_has_appdesc();
  appdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppDesc)
}
#if LANG_CXX11
void RcAppList::set_appdesc(::std::string&& value) {
  set_has_appdesc();
  appdesc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AppDesc)
}
#endif
void RcAppList::set_appdesc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appdesc();
  appdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AppDesc)
}
void RcAppList::set_appdesc(const char* value, size_t size) {
  set_has_appdesc();
  appdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AppDesc)
}
::std::string* RcAppList::mutable_appdesc() {
  set_has_appdesc();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AppDesc)
  return appdesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RcAppList::release_appdesc() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AppDesc)
  clear_has_appdesc();
  return appdesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RcAppList::set_allocated_appdesc(::std::string* appdesc) {
  if (appdesc != NULL) {
    set_has_appdesc();
  } else {
    clear_has_appdesc();
  }
  appdesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appdesc);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AppDesc)
}

// optional string AppDownloadUrl = 5;
bool RcAppList::has_appdownloadurl() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void RcAppList::set_has_appdownloadurl() {
  _has_bits_[0] |= 0x00000010u;
}
void RcAppList::clear_has_appdownloadurl() {
  _has_bits_[0] &= ~0x00000010u;
}
void RcAppList::clear_appdownloadurl() {
  appdownloadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appdownloadurl();
}
const ::std::string& RcAppList::appdownloadurl() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppDownloadUrl)
  return appdownloadurl_.GetNoArena();
}
void RcAppList::set_appdownloadurl(const ::std::string& value) {
  set_has_appdownloadurl();
  appdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppDownloadUrl)
}
#if LANG_CXX11
void RcAppList::set_appdownloadurl(::std::string&& value) {
  set_has_appdownloadurl();
  appdownloadurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AppDownloadUrl)
}
#endif
void RcAppList::set_appdownloadurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appdownloadurl();
  appdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AppDownloadUrl)
}
void RcAppList::set_appdownloadurl(const char* value, size_t size) {
  set_has_appdownloadurl();
  appdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AppDownloadUrl)
}
::std::string* RcAppList::mutable_appdownloadurl() {
  set_has_appdownloadurl();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AppDownloadUrl)
  return appdownloadurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RcAppList::release_appdownloadurl() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AppDownloadUrl)
  clear_has_appdownloadurl();
  return appdownloadurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RcAppList::set_allocated_appdownloadurl(::std::string* appdownloadurl) {
  if (appdownloadurl != NULL) {
    set_has_appdownloadurl();
  } else {
    clear_has_appdownloadurl();
  }
  appdownloadurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appdownloadurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AppDownloadUrl)
}

// optional string AppCoverUrl = 6;
bool RcAppList::has_appcoverurl() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void RcAppList::set_has_appcoverurl() {
  _has_bits_[0] |= 0x00000020u;
}
void RcAppList::clear_has_appcoverurl() {
  _has_bits_[0] &= ~0x00000020u;
}
void RcAppList::clear_appcoverurl() {
  appcoverurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appcoverurl();
}
const ::std::string& RcAppList::appcoverurl() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppCoverUrl)
  return appcoverurl_.GetNoArena();
}
void RcAppList::set_appcoverurl(const ::std::string& value) {
  set_has_appcoverurl();
  appcoverurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppCoverUrl)
}
#if LANG_CXX11
void RcAppList::set_appcoverurl(::std::string&& value) {
  set_has_appcoverurl();
  appcoverurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AppCoverUrl)
}
#endif
void RcAppList::set_appcoverurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appcoverurl();
  appcoverurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AppCoverUrl)
}
void RcAppList::set_appcoverurl(const char* value, size_t size) {
  set_has_appcoverurl();
  appcoverurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AppCoverUrl)
}
::std::string* RcAppList::mutable_appcoverurl() {
  set_has_appcoverurl();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AppCoverUrl)
  return appcoverurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RcAppList::release_appcoverurl() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AppCoverUrl)
  clear_has_appcoverurl();
  return appcoverurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RcAppList::set_allocated_appcoverurl(::std::string* appcoverurl) {
  if (appcoverurl != NULL) {
    set_has_appcoverurl();
  } else {
    clear_has_appcoverurl();
  }
  appcoverurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appcoverurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AppCoverUrl)
}

// optional string AppDevInfo = 7;
bool RcAppList::has_appdevinfo() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void RcAppList::set_has_appdevinfo() {
  _has_bits_[0] |= 0x00000040u;
}
void RcAppList::clear_has_appdevinfo() {
  _has_bits_[0] &= ~0x00000040u;
}
void RcAppList::clear_appdevinfo() {
  appdevinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appdevinfo();
}
const ::std::string& RcAppList::appdevinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppDevInfo)
  return appdevinfo_.GetNoArena();
}
void RcAppList::set_appdevinfo(const ::std::string& value) {
  set_has_appdevinfo();
  appdevinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppDevInfo)
}
#if LANG_CXX11
void RcAppList::set_appdevinfo(::std::string&& value) {
  set_has_appdevinfo();
  appdevinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AppDevInfo)
}
#endif
void RcAppList::set_appdevinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appdevinfo();
  appdevinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AppDevInfo)
}
void RcAppList::set_appdevinfo(const char* value, size_t size) {
  set_has_appdevinfo();
  appdevinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AppDevInfo)
}
::std::string* RcAppList::mutable_appdevinfo() {
  set_has_appdevinfo();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AppDevInfo)
  return appdevinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RcAppList::release_appdevinfo() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AppDevInfo)
  clear_has_appdevinfo();
  return appdevinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RcAppList::set_allocated_appdevinfo(::std::string* appdevinfo) {
  if (appdevinfo != NULL) {
    set_has_appdevinfo();
  } else {
    clear_has_appdevinfo();
  }
  appdevinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appdevinfo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AppDevInfo)
}

// required int32 AppScreenShotCount = 8;
bool RcAppList::has_appscreenshotcount() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void RcAppList::set_has_appscreenshotcount() {
  _has_bits_[0] |= 0x00100000u;
}
void RcAppList::clear_has_appscreenshotcount() {
  _has_bits_[0] &= ~0x00100000u;
}
void RcAppList::clear_appscreenshotcount() {
  appscreenshotcount_ = 0;
  clear_has_appscreenshotcount();
}
::google::protobuf::int32 RcAppList::appscreenshotcount() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppScreenShotCount)
  return appscreenshotcount_;
}
void RcAppList::set_appscreenshotcount(::google::protobuf::int32 value) {
  set_has_appscreenshotcount();
  appscreenshotcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppScreenShotCount)
}

// repeated .micromsg.SKBuiltinString_t AppScreenShotList = 9;
int RcAppList::appscreenshotlist_size() const {
  return appscreenshotlist_.size();
}
void RcAppList::clear_appscreenshotlist() {
  appscreenshotlist_.Clear();
}
const ::micromsg::SKBuiltinString_t& RcAppList::appscreenshotlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppScreenShotList)
  return appscreenshotlist_.Get(index);
}
::micromsg::SKBuiltinString_t* RcAppList::mutable_appscreenshotlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AppScreenShotList)
  return appscreenshotlist_.Mutable(index);
}
::micromsg::SKBuiltinString_t* RcAppList::add_appscreenshotlist() {
  // @@protoc_insertion_point(field_add:micromsg.RcAppList.AppScreenShotList)
  return appscreenshotlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
RcAppList::mutable_appscreenshotlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.RcAppList.AppScreenShotList)
  return &appscreenshotlist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
RcAppList::appscreenshotlist() const {
  // @@protoc_insertion_point(field_list:micromsg.RcAppList.AppScreenShotList)
  return appscreenshotlist_;
}

// optional string AppSnsDesc = 10;
bool RcAppList::has_appsnsdesc() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void RcAppList::set_has_appsnsdesc() {
  _has_bits_[0] |= 0x00000080u;
}
void RcAppList::clear_has_appsnsdesc() {
  _has_bits_[0] &= ~0x00000080u;
}
void RcAppList::clear_appsnsdesc() {
  appsnsdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appsnsdesc();
}
const ::std::string& RcAppList::appsnsdesc() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppSnsDesc)
  return appsnsdesc_.GetNoArena();
}
void RcAppList::set_appsnsdesc(const ::std::string& value) {
  set_has_appsnsdesc();
  appsnsdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppSnsDesc)
}
#if LANG_CXX11
void RcAppList::set_appsnsdesc(::std::string&& value) {
  set_has_appsnsdesc();
  appsnsdesc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AppSnsDesc)
}
#endif
void RcAppList::set_appsnsdesc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appsnsdesc();
  appsnsdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AppSnsDesc)
}
void RcAppList::set_appsnsdesc(const char* value, size_t size) {
  set_has_appsnsdesc();
  appsnsdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AppSnsDesc)
}
::std::string* RcAppList::mutable_appsnsdesc() {
  set_has_appsnsdesc();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AppSnsDesc)
  return appsnsdesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RcAppList::release_appsnsdesc() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AppSnsDesc)
  clear_has_appsnsdesc();
  return appsnsdesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RcAppList::set_allocated_appsnsdesc(::std::string* appsnsdesc) {
  if (appsnsdesc != NULL) {
    set_has_appsnsdesc();
  } else {
    clear_has_appsnsdesc();
  }
  appsnsdesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appsnsdesc);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AppSnsDesc)
}

// optional string AppSnapshotUrl = 11;
bool RcAppList::has_appsnapshoturl() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void RcAppList::set_has_appsnapshoturl() {
  _has_bits_[0] |= 0x00000100u;
}
void RcAppList::clear_has_appsnapshoturl() {
  _has_bits_[0] &= ~0x00000100u;
}
void RcAppList::clear_appsnapshoturl() {
  appsnapshoturl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appsnapshoturl();
}
const ::std::string& RcAppList::appsnapshoturl() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppSnapshotUrl)
  return appsnapshoturl_.GetNoArena();
}
void RcAppList::set_appsnapshoturl(const ::std::string& value) {
  set_has_appsnapshoturl();
  appsnapshoturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppSnapshotUrl)
}
#if LANG_CXX11
void RcAppList::set_appsnapshoturl(::std::string&& value) {
  set_has_appsnapshoturl();
  appsnapshoturl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AppSnapshotUrl)
}
#endif
void RcAppList::set_appsnapshoturl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appsnapshoturl();
  appsnapshoturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AppSnapshotUrl)
}
void RcAppList::set_appsnapshoturl(const char* value, size_t size) {
  set_has_appsnapshoturl();
  appsnapshoturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AppSnapshotUrl)
}
::std::string* RcAppList::mutable_appsnapshoturl() {
  set_has_appsnapshoturl();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AppSnapshotUrl)
  return appsnapshoturl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RcAppList::release_appsnapshoturl() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AppSnapshotUrl)
  clear_has_appsnapshoturl();
  return appsnapshoturl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RcAppList::set_allocated_appsnapshoturl(::std::string* appsnapshoturl) {
  if (appsnapshoturl != NULL) {
    set_has_appsnapshoturl();
  } else {
    clear_has_appsnapshoturl();
  }
  appsnapshoturl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appsnapshoturl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AppSnapshotUrl)
}

// optional string AppDetailDesc = 12;
bool RcAppList::has_appdetaildesc() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void RcAppList::set_has_appdetaildesc() {
  _has_bits_[0] |= 0x00000200u;
}
void RcAppList::clear_has_appdetaildesc() {
  _has_bits_[0] &= ~0x00000200u;
}
void RcAppList::clear_appdetaildesc() {
  appdetaildesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appdetaildesc();
}
const ::std::string& RcAppList::appdetaildesc() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppDetailDesc)
  return appdetaildesc_.GetNoArena();
}
void RcAppList::set_appdetaildesc(const ::std::string& value) {
  set_has_appdetaildesc();
  appdetaildesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppDetailDesc)
}
#if LANG_CXX11
void RcAppList::set_appdetaildesc(::std::string&& value) {
  set_has_appdetaildesc();
  appdetaildesc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AppDetailDesc)
}
#endif
void RcAppList::set_appdetaildesc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appdetaildesc();
  appdetaildesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AppDetailDesc)
}
void RcAppList::set_appdetaildesc(const char* value, size_t size) {
  set_has_appdetaildesc();
  appdetaildesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AppDetailDesc)
}
::std::string* RcAppList::mutable_appdetaildesc() {
  set_has_appdetaildesc();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AppDetailDesc)
  return appdetaildesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RcAppList::release_appdetaildesc() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AppDetailDesc)
  clear_has_appdetaildesc();
  return appdetaildesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RcAppList::set_allocated_appdetaildesc(::std::string* appdetaildesc) {
  if (appdetaildesc != NULL) {
    set_has_appdetaildesc();
  } else {
    clear_has_appdetaildesc();
  }
  appdetaildesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appdetaildesc);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AppDetailDesc)
}

// optional uint32 FriendCount = 13;
bool RcAppList::has_friendcount() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void RcAppList::set_has_friendcount() {
  _has_bits_[0] |= 0x00200000u;
}
void RcAppList::clear_has_friendcount() {
  _has_bits_[0] &= ~0x00200000u;
}
void RcAppList::clear_friendcount() {
  friendcount_ = 0u;
  clear_has_friendcount();
}
::google::protobuf::uint32 RcAppList::friendcount() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.FriendCount)
  return friendcount_;
}
void RcAppList::set_friendcount(::google::protobuf::uint32 value) {
  set_has_friendcount();
  friendcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.FriendCount)
}

// optional string AppType = 14;
bool RcAppList::has_apptype() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void RcAppList::set_has_apptype() {
  _has_bits_[0] |= 0x00000400u;
}
void RcAppList::clear_has_apptype() {
  _has_bits_[0] &= ~0x00000400u;
}
void RcAppList::clear_apptype() {
  apptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_apptype();
}
const ::std::string& RcAppList::apptype() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppType)
  return apptype_.GetNoArena();
}
void RcAppList::set_apptype(const ::std::string& value) {
  set_has_apptype();
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppType)
}
#if LANG_CXX11
void RcAppList::set_apptype(::std::string&& value) {
  set_has_apptype();
  apptype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AppType)
}
#endif
void RcAppList::set_apptype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_apptype();
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AppType)
}
void RcAppList::set_apptype(const char* value, size_t size) {
  set_has_apptype();
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AppType)
}
::std::string* RcAppList::mutable_apptype() {
  set_has_apptype();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AppType)
  return apptype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RcAppList::release_apptype() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AppType)
  clear_has_apptype();
  return apptype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RcAppList::set_allocated_apptype(::std::string* apptype) {
  if (apptype != NULL) {
    set_has_apptype();
  } else {
    clear_has_apptype();
  }
  apptype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), apptype);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AppType)
}

// optional string AndroidApkMd5 = 15;
bool RcAppList::has_androidapkmd5() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void RcAppList::set_has_androidapkmd5() {
  _has_bits_[0] |= 0x00000800u;
}
void RcAppList::clear_has_androidapkmd5() {
  _has_bits_[0] &= ~0x00000800u;
}
void RcAppList::clear_androidapkmd5() {
  androidapkmd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_androidapkmd5();
}
const ::std::string& RcAppList::androidapkmd5() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AndroidApkMd5)
  return androidapkmd5_.GetNoArena();
}
void RcAppList::set_androidapkmd5(const ::std::string& value) {
  set_has_androidapkmd5();
  androidapkmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AndroidApkMd5)
}
#if LANG_CXX11
void RcAppList::set_androidapkmd5(::std::string&& value) {
  set_has_androidapkmd5();
  androidapkmd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AndroidApkMd5)
}
#endif
void RcAppList::set_androidapkmd5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_androidapkmd5();
  androidapkmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AndroidApkMd5)
}
void RcAppList::set_androidapkmd5(const char* value, size_t size) {
  set_has_androidapkmd5();
  androidapkmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AndroidApkMd5)
}
::std::string* RcAppList::mutable_androidapkmd5() {
  set_has_androidapkmd5();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AndroidApkMd5)
  return androidapkmd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RcAppList::release_androidapkmd5() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AndroidApkMd5)
  clear_has_androidapkmd5();
  return androidapkmd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RcAppList::set_allocated_androidapkmd5(::std::string* androidapkmd5) {
  if (androidapkmd5 != NULL) {
    set_has_androidapkmd5();
  } else {
    clear_has_androidapkmd5();
  }
  androidapkmd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), androidapkmd5);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AndroidApkMd5)
}

// optional string AndroidPackageName = 16;
bool RcAppList::has_androidpackagename() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void RcAppList::set_has_androidpackagename() {
  _has_bits_[0] |= 0x00001000u;
}
void RcAppList::clear_has_androidpackagename() {
  _has_bits_[0] &= ~0x00001000u;
}
void RcAppList::clear_androidpackagename() {
  androidpackagename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_androidpackagename();
}
const ::std::string& RcAppList::androidpackagename() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AndroidPackageName)
  return androidpackagename_.GetNoArena();
}
void RcAppList::set_androidpackagename(const ::std::string& value) {
  set_has_androidpackagename();
  androidpackagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AndroidPackageName)
}
#if LANG_CXX11
void RcAppList::set_androidpackagename(::std::string&& value) {
  set_has_androidpackagename();
  androidpackagename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AndroidPackageName)
}
#endif
void RcAppList::set_androidpackagename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_androidpackagename();
  androidpackagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AndroidPackageName)
}
void RcAppList::set_androidpackagename(const char* value, size_t size) {
  set_has_androidpackagename();
  androidpackagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AndroidPackageName)
}
::std::string* RcAppList::mutable_androidpackagename() {
  set_has_androidpackagename();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AndroidPackageName)
  return androidpackagename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RcAppList::release_androidpackagename() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AndroidPackageName)
  clear_has_androidpackagename();
  return androidpackagename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RcAppList::set_allocated_androidpackagename(::std::string* androidpackagename) {
  if (androidpackagename != NULL) {
    set_has_androidpackagename();
  } else {
    clear_has_androidpackagename();
  }
  androidpackagename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), androidpackagename);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AndroidPackageName)
}

// optional string AppNamezhTW = 17;
bool RcAppList::has_appnamezhtw() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void RcAppList::set_has_appnamezhtw() {
  _has_bits_[0] |= 0x00002000u;
}
void RcAppList::clear_has_appnamezhtw() {
  _has_bits_[0] &= ~0x00002000u;
}
void RcAppList::clear_appnamezhtw() {
  appnamezhtw_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appnamezhtw();
}
const ::std::string& RcAppList::appnamezhtw() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppNamezhTW)
  return appnamezhtw_.GetNoArena();
}
void RcAppList::set_appnamezhtw(const ::std::string& value) {
  set_has_appnamezhtw();
  appnamezhtw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppNamezhTW)
}
#if LANG_CXX11
void RcAppList::set_appnamezhtw(::std::string&& value) {
  set_has_appnamezhtw();
  appnamezhtw_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AppNamezhTW)
}
#endif
void RcAppList::set_appnamezhtw(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appnamezhtw();
  appnamezhtw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AppNamezhTW)
}
void RcAppList::set_appnamezhtw(const char* value, size_t size) {
  set_has_appnamezhtw();
  appnamezhtw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AppNamezhTW)
}
::std::string* RcAppList::mutable_appnamezhtw() {
  set_has_appnamezhtw();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AppNamezhTW)
  return appnamezhtw_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RcAppList::release_appnamezhtw() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AppNamezhTW)
  clear_has_appnamezhtw();
  return appnamezhtw_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RcAppList::set_allocated_appnamezhtw(::std::string* appnamezhtw) {
  if (appnamezhtw != NULL) {
    set_has_appnamezhtw();
  } else {
    clear_has_appnamezhtw();
  }
  appnamezhtw_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appnamezhtw);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AppNamezhTW)
}

// optional string AppNameEnUS = 18;
bool RcAppList::has_appnameenus() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void RcAppList::set_has_appnameenus() {
  _has_bits_[0] |= 0x00004000u;
}
void RcAppList::clear_has_appnameenus() {
  _has_bits_[0] &= ~0x00004000u;
}
void RcAppList::clear_appnameenus() {
  appnameenus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appnameenus();
}
const ::std::string& RcAppList::appnameenus() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppNameEnUS)
  return appnameenus_.GetNoArena();
}
void RcAppList::set_appnameenus(const ::std::string& value) {
  set_has_appnameenus();
  appnameenus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppNameEnUS)
}
#if LANG_CXX11
void RcAppList::set_appnameenus(::std::string&& value) {
  set_has_appnameenus();
  appnameenus_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AppNameEnUS)
}
#endif
void RcAppList::set_appnameenus(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appnameenus();
  appnameenus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AppNameEnUS)
}
void RcAppList::set_appnameenus(const char* value, size_t size) {
  set_has_appnameenus();
  appnameenus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AppNameEnUS)
}
::std::string* RcAppList::mutable_appnameenus() {
  set_has_appnameenus();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AppNameEnUS)
  return appnameenus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RcAppList::release_appnameenus() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AppNameEnUS)
  clear_has_appnameenus();
  return appnameenus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RcAppList::set_allocated_appnameenus(::std::string* appnameenus) {
  if (appnameenus != NULL) {
    set_has_appnameenus();
  } else {
    clear_has_appnameenus();
  }
  appnameenus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appnameenus);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AppNameEnUS)
}

// optional string GooglePlayDownloadUrl = 19;
bool RcAppList::has_googleplaydownloadurl() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void RcAppList::set_has_googleplaydownloadurl() {
  _has_bits_[0] |= 0x00008000u;
}
void RcAppList::clear_has_googleplaydownloadurl() {
  _has_bits_[0] &= ~0x00008000u;
}
void RcAppList::clear_googleplaydownloadurl() {
  googleplaydownloadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_googleplaydownloadurl();
}
const ::std::string& RcAppList::googleplaydownloadurl() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.GooglePlayDownloadUrl)
  return googleplaydownloadurl_.GetNoArena();
}
void RcAppList::set_googleplaydownloadurl(const ::std::string& value) {
  set_has_googleplaydownloadurl();
  googleplaydownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.GooglePlayDownloadUrl)
}
#if LANG_CXX11
void RcAppList::set_googleplaydownloadurl(::std::string&& value) {
  set_has_googleplaydownloadurl();
  googleplaydownloadurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.GooglePlayDownloadUrl)
}
#endif
void RcAppList::set_googleplaydownloadurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_googleplaydownloadurl();
  googleplaydownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.GooglePlayDownloadUrl)
}
void RcAppList::set_googleplaydownloadurl(const char* value, size_t size) {
  set_has_googleplaydownloadurl();
  googleplaydownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.GooglePlayDownloadUrl)
}
::std::string* RcAppList::mutable_googleplaydownloadurl() {
  set_has_googleplaydownloadurl();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.GooglePlayDownloadUrl)
  return googleplaydownloadurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RcAppList::release_googleplaydownloadurl() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.GooglePlayDownloadUrl)
  clear_has_googleplaydownloadurl();
  return googleplaydownloadurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RcAppList::set_allocated_googleplaydownloadurl(::std::string* googleplaydownloadurl) {
  if (googleplaydownloadurl != NULL) {
    set_has_googleplaydownloadurl();
  } else {
    clear_has_googleplaydownloadurl();
  }
  googleplaydownloadurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), googleplaydownloadurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.GooglePlayDownloadUrl)
}

// optional string AppSuggestionIconUrl = 20;
bool RcAppList::has_appsuggestioniconurl() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void RcAppList::set_has_appsuggestioniconurl() {
  _has_bits_[0] |= 0x00010000u;
}
void RcAppList::clear_has_appsuggestioniconurl() {
  _has_bits_[0] &= ~0x00010000u;
}
void RcAppList::clear_appsuggestioniconurl() {
  appsuggestioniconurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appsuggestioniconurl();
}
const ::std::string& RcAppList::appsuggestioniconurl() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppSuggestionIconUrl)
  return appsuggestioniconurl_.GetNoArena();
}
void RcAppList::set_appsuggestioniconurl(const ::std::string& value) {
  set_has_appsuggestioniconurl();
  appsuggestioniconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppSuggestionIconUrl)
}
#if LANG_CXX11
void RcAppList::set_appsuggestioniconurl(::std::string&& value) {
  set_has_appsuggestioniconurl();
  appsuggestioniconurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AppSuggestionIconUrl)
}
#endif
void RcAppList::set_appsuggestioniconurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appsuggestioniconurl();
  appsuggestioniconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AppSuggestionIconUrl)
}
void RcAppList::set_appsuggestioniconurl(const char* value, size_t size) {
  set_has_appsuggestioniconurl();
  appsuggestioniconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AppSuggestionIconUrl)
}
::std::string* RcAppList::mutable_appsuggestioniconurl() {
  set_has_appsuggestioniconurl();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AppSuggestionIconUrl)
  return appsuggestioniconurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RcAppList::release_appsuggestioniconurl() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AppSuggestionIconUrl)
  clear_has_appsuggestioniconurl();
  return appsuggestioniconurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RcAppList::set_allocated_appsuggestioniconurl(::std::string* appsuggestioniconurl) {
  if (appsuggestioniconurl != NULL) {
    set_has_appsuggestioniconurl();
  } else {
    clear_has_appsuggestioniconurl();
  }
  appsuggestioniconurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appsuggestioniconurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AppSuggestionIconUrl)
}

// optional string AppSuggestionIntroUrl = 21;
bool RcAppList::has_appsuggestionintrourl() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void RcAppList::set_has_appsuggestionintrourl() {
  _has_bits_[0] |= 0x00020000u;
}
void RcAppList::clear_has_appsuggestionintrourl() {
  _has_bits_[0] &= ~0x00020000u;
}
void RcAppList::clear_appsuggestionintrourl() {
  appsuggestionintrourl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appsuggestionintrourl();
}
const ::std::string& RcAppList::appsuggestionintrourl() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppSuggestionIntroUrl)
  return appsuggestionintrourl_.GetNoArena();
}
void RcAppList::set_appsuggestionintrourl(const ::std::string& value) {
  set_has_appsuggestionintrourl();
  appsuggestionintrourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppSuggestionIntroUrl)
}
#if LANG_CXX11
void RcAppList::set_appsuggestionintrourl(::std::string&& value) {
  set_has_appsuggestionintrourl();
  appsuggestionintrourl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AppSuggestionIntroUrl)
}
#endif
void RcAppList::set_appsuggestionintrourl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appsuggestionintrourl();
  appsuggestionintrourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AppSuggestionIntroUrl)
}
void RcAppList::set_appsuggestionintrourl(const char* value, size_t size) {
  set_has_appsuggestionintrourl();
  appsuggestionintrourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AppSuggestionIntroUrl)
}
::std::string* RcAppList::mutable_appsuggestionintrourl() {
  set_has_appsuggestionintrourl();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AppSuggestionIntroUrl)
  return appsuggestionintrourl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RcAppList::release_appsuggestionintrourl() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AppSuggestionIntroUrl)
  clear_has_appsuggestionintrourl();
  return appsuggestionintrourl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RcAppList::set_allocated_appsuggestionintrourl(::std::string* appsuggestionintrourl) {
  if (appsuggestionintrourl != NULL) {
    set_has_appsuggestionintrourl();
  } else {
    clear_has_appsuggestionintrourl();
  }
  appsuggestionintrourl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appsuggestionintrourl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AppSuggestionIntroUrl)
}

// optional .micromsg.YYBStruct SYYB = 22;
bool RcAppList::has_syyb() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void RcAppList::set_has_syyb() {
  _has_bits_[0] |= 0x00080000u;
}
void RcAppList::clear_has_syyb() {
  _has_bits_[0] &= ~0x00080000u;
}
void RcAppList::clear_syyb() {
  if (syyb_ != NULL) syyb_->::micromsg::YYBStruct::Clear();
  clear_has_syyb();
}
const ::micromsg::YYBStruct& RcAppList::syyb() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.SYYB)
  return syyb_ != NULL ? *syyb_
                         : *::micromsg::YYBStruct::internal_default_instance();
}
::micromsg::YYBStruct* RcAppList::mutable_syyb() {
  set_has_syyb();
  if (syyb_ == NULL) {
    syyb_ = new ::micromsg::YYBStruct;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.SYYB)
  return syyb_;
}
::micromsg::YYBStruct* RcAppList::release_syyb() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.SYYB)
  clear_has_syyb();
  ::micromsg::YYBStruct* temp = syyb_;
  syyb_ = NULL;
  return temp;
}
void RcAppList::set_allocated_syyb(::micromsg::YYBStruct* syyb) {
  delete syyb_;
  syyb_ = syyb;
  if (syyb) {
    set_has_syyb();
  } else {
    clear_has_syyb();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.SYYB)
}

// optional string AppLaunchScheme = 23;
bool RcAppList::has_applaunchscheme() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void RcAppList::set_has_applaunchscheme() {
  _has_bits_[0] |= 0x00040000u;
}
void RcAppList::clear_has_applaunchscheme() {
  _has_bits_[0] &= ~0x00040000u;
}
void RcAppList::clear_applaunchscheme() {
  applaunchscheme_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_applaunchscheme();
}
const ::std::string& RcAppList::applaunchscheme() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppLaunchScheme)
  return applaunchscheme_.GetNoArena();
}
void RcAppList::set_applaunchscheme(const ::std::string& value) {
  set_has_applaunchscheme();
  applaunchscheme_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppLaunchScheme)
}
#if LANG_CXX11
void RcAppList::set_applaunchscheme(::std::string&& value) {
  set_has_applaunchscheme();
  applaunchscheme_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AppLaunchScheme)
}
#endif
void RcAppList::set_applaunchscheme(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_applaunchscheme();
  applaunchscheme_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AppLaunchScheme)
}
void RcAppList::set_applaunchscheme(const char* value, size_t size) {
  set_has_applaunchscheme();
  applaunchscheme_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AppLaunchScheme)
}
::std::string* RcAppList::mutable_applaunchscheme() {
  set_has_applaunchscheme();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AppLaunchScheme)
  return applaunchscheme_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RcAppList::release_applaunchscheme() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AppLaunchScheme)
  clear_has_applaunchscheme();
  return applaunchscheme_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RcAppList::set_allocated_applaunchscheme(::std::string* applaunchscheme) {
  if (applaunchscheme != NULL) {
    set_has_applaunchscheme();
  } else {
    clear_has_applaunchscheme();
  }
  applaunchscheme_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), applaunchscheme);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AppLaunchScheme)
}

// optional uint32 GooglePlayDownloadFlag = 24;
bool RcAppList::has_googleplaydownloadflag() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
void RcAppList::set_has_googleplaydownloadflag() {
  _has_bits_[0] |= 0x00400000u;
}
void RcAppList::clear_has_googleplaydownloadflag() {
  _has_bits_[0] &= ~0x00400000u;
}
void RcAppList::clear_googleplaydownloadflag() {
  googleplaydownloadflag_ = 0u;
  clear_has_googleplaydownloadflag();
}
::google::protobuf::uint32 RcAppList::googleplaydownloadflag() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.GooglePlayDownloadFlag)
  return googleplaydownloadflag_;
}
void RcAppList::set_googleplaydownloadflag(::google::protobuf::uint32 value) {
  set_has_googleplaydownloadflag();
  googleplaydownloadflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.GooglePlayDownloadFlag)
}

// optional uint32 AppInfoFlag = 25;
bool RcAppList::has_appinfoflag() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
void RcAppList::set_has_appinfoflag() {
  _has_bits_[0] |= 0x00800000u;
}
void RcAppList::clear_has_appinfoflag() {
  _has_bits_[0] &= ~0x00800000u;
}
void RcAppList::clear_appinfoflag() {
  appinfoflag_ = 0u;
  clear_has_appinfoflag();
}
::google::protobuf::uint32 RcAppList::appinfoflag() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppInfoFlag)
  return appinfoflag_;
}
void RcAppList::set_appinfoflag(::google::protobuf::uint32 value) {
  set_has_appinfoflag();
  appinfoflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppInfoFlag)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetGameIntroListRequest::kBaseRequestFieldNumber;
const int GetGameIntroListRequest::kCountFieldNumber;
const int GetGameIntroListRequest::kAppIdListFieldNumber;
const int GetGameIntroListRequest::kDevicePlatformFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetGameIntroListRequest::GetGameIntroListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetGameIntroListRequest)
}
GetGameIntroListRequest::GetGameIntroListRequest(const GetGameIntroListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      appidlist_(from.appidlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deviceplatform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_deviceplatform()) {
    deviceplatform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceplatform_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:micromsg.GetGameIntroListRequest)
}

void GetGameIntroListRequest::SharedCtor() {
  _cached_size_ = 0;
  deviceplatform_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(count_));
}

GetGameIntroListRequest::~GetGameIntroListRequest() {
  // @@protoc_insertion_point(destructor:micromsg.GetGameIntroListRequest)
  SharedDtor();
}

void GetGameIntroListRequest::SharedDtor() {
  deviceplatform_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void GetGameIntroListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetGameIntroListRequest::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetGameIntroListRequest& GetGameIntroListRequest::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetGameIntroListRequest* GetGameIntroListRequest::New(::google::protobuf::Arena* arena) const {
  GetGameIntroListRequest* n = new GetGameIntroListRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetGameIntroListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetGameIntroListRequest)
  appidlist_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    if (has_deviceplatform()) {
      GOOGLE_DCHECK(!deviceplatform_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*deviceplatform_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  count_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetGameIntroListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetGameIntroListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.SKBuiltinString_t AppIdList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_appidlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string DevicePlatform = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceplatform()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->deviceplatform().data(), this->deviceplatform().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetGameIntroListRequest.DevicePlatform");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetGameIntroListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetGameIntroListRequest)
  return false;
#undef DO_
}

void GetGameIntroListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetGameIntroListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required uint32 Count = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  // repeated .micromsg.SKBuiltinString_t AppIdList = 3;
  for (unsigned int i = 0, n = this->appidlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->appidlist(i), output);
  }

  // optional string DevicePlatform = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->deviceplatform().data(), this->deviceplatform().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetGameIntroListRequest.DevicePlatform");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->deviceplatform(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetGameIntroListRequest)
}

::google::protobuf::uint8* GetGameIntroListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetGameIntroListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required uint32 Count = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  // repeated .micromsg.SKBuiltinString_t AppIdList = 3;
  for (unsigned int i = 0, n = this->appidlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->appidlist(i), deterministic, target);
  }

  // optional string DevicePlatform = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->deviceplatform().data(), this->deviceplatform().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetGameIntroListRequest.DevicePlatform");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->deviceplatform(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetGameIntroListRequest)
  return target;
}

size_t GetGameIntroListRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetGameIntroListRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_count()) {
    // required uint32 Count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  return total_size;
}
size_t GetGameIntroListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetGameIntroListRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required uint32 Count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.SKBuiltinString_t AppIdList = 3;
  {
    unsigned int count = this->appidlist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->appidlist(i));
    }
  }

  // optional string DevicePlatform = 4;
  if (has_deviceplatform()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deviceplatform());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetGameIntroListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetGameIntroListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGameIntroListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetGameIntroListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetGameIntroListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetGameIntroListRequest)
    MergeFrom(*source);
  }
}

void GetGameIntroListRequest::MergeFrom(const GetGameIntroListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetGameIntroListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  appidlist_.MergeFrom(from.appidlist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_deviceplatform();
      deviceplatform_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceplatform_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000004u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetGameIntroListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetGameIntroListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGameIntroListRequest::CopyFrom(const GetGameIntroListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetGameIntroListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGameIntroListRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void GetGameIntroListRequest::Swap(GetGameIntroListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetGameIntroListRequest::InternalSwap(GetGameIntroListRequest* other) {
  appidlist_.InternalSwap(&other->appidlist_);
  deviceplatform_.Swap(&other->deviceplatform_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(count_, other->count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetGameIntroListRequest::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetGameIntroListRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool GetGameIntroListRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetGameIntroListRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
void GetGameIntroListRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetGameIntroListRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& GetGameIntroListRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetGameIntroListRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* GetGameIntroListRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetGameIntroListRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* GetGameIntroListRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetGameIntroListRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void GetGameIntroListRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetGameIntroListRequest.BaseRequest)
}

// required uint32 Count = 2;
bool GetGameIntroListRequest::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetGameIntroListRequest::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
void GetGameIntroListRequest::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetGameIntroListRequest::clear_count() {
  count_ = 0u;
  clear_has_count();
}
::google::protobuf::uint32 GetGameIntroListRequest::count() const {
  // @@protoc_insertion_point(field_get:micromsg.GetGameIntroListRequest.Count)
  return count_;
}
void GetGameIntroListRequest::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetGameIntroListRequest.Count)
}

// repeated .micromsg.SKBuiltinString_t AppIdList = 3;
int GetGameIntroListRequest::appidlist_size() const {
  return appidlist_.size();
}
void GetGameIntroListRequest::clear_appidlist() {
  appidlist_.Clear();
}
const ::micromsg::SKBuiltinString_t& GetGameIntroListRequest::appidlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetGameIntroListRequest.AppIdList)
  return appidlist_.Get(index);
}
::micromsg::SKBuiltinString_t* GetGameIntroListRequest::mutable_appidlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetGameIntroListRequest.AppIdList)
  return appidlist_.Mutable(index);
}
::micromsg::SKBuiltinString_t* GetGameIntroListRequest::add_appidlist() {
  // @@protoc_insertion_point(field_add:micromsg.GetGameIntroListRequest.AppIdList)
  return appidlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
GetGameIntroListRequest::mutable_appidlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetGameIntroListRequest.AppIdList)
  return &appidlist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
GetGameIntroListRequest::appidlist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetGameIntroListRequest.AppIdList)
  return appidlist_;
}

// optional string DevicePlatform = 4;
bool GetGameIntroListRequest::has_deviceplatform() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetGameIntroListRequest::set_has_deviceplatform() {
  _has_bits_[0] |= 0x00000001u;
}
void GetGameIntroListRequest::clear_has_deviceplatform() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetGameIntroListRequest::clear_deviceplatform() {
  deviceplatform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deviceplatform();
}
const ::std::string& GetGameIntroListRequest::deviceplatform() const {
  // @@protoc_insertion_point(field_get:micromsg.GetGameIntroListRequest.DevicePlatform)
  return deviceplatform_.GetNoArena();
}
void GetGameIntroListRequest::set_deviceplatform(const ::std::string& value) {
  set_has_deviceplatform();
  deviceplatform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetGameIntroListRequest.DevicePlatform)
}
#if LANG_CXX11
void GetGameIntroListRequest::set_deviceplatform(::std::string&& value) {
  set_has_deviceplatform();
  deviceplatform_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetGameIntroListRequest.DevicePlatform)
}
#endif
void GetGameIntroListRequest::set_deviceplatform(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_deviceplatform();
  deviceplatform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetGameIntroListRequest.DevicePlatform)
}
void GetGameIntroListRequest::set_deviceplatform(const char* value, size_t size) {
  set_has_deviceplatform();
  deviceplatform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetGameIntroListRequest.DevicePlatform)
}
::std::string* GetGameIntroListRequest::mutable_deviceplatform() {
  set_has_deviceplatform();
  // @@protoc_insertion_point(field_mutable:micromsg.GetGameIntroListRequest.DevicePlatform)
  return deviceplatform_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetGameIntroListRequest::release_deviceplatform() {
  // @@protoc_insertion_point(field_release:micromsg.GetGameIntroListRequest.DevicePlatform)
  clear_has_deviceplatform();
  return deviceplatform_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetGameIntroListRequest::set_allocated_deviceplatform(::std::string* deviceplatform) {
  if (deviceplatform != NULL) {
    set_has_deviceplatform();
  } else {
    clear_has_deviceplatform();
  }
  deviceplatform_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceplatform);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetGameIntroListRequest.DevicePlatform)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameIntro::kAppIDFieldNumber;
const int GameIntro::kGameIntroPageFieldNumber;
const int GameIntro::kAndroidApkMd5FieldNumber;
const int GameIntro::kAppDownloadUrlFieldNumber;
const int GameIntro::kGooglePlayDownloadUrlFieldNumber;
const int GameIntro::kSYYBFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameIntro::GameIntro()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GameIntro)
}
GameIntro::GameIntro(const GameIntro& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appid()) {
    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  gameintropage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gameintropage()) {
    gameintropage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gameintropage_);
  }
  androidapkmd5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_androidapkmd5()) {
    androidapkmd5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.androidapkmd5_);
  }
  appdownloadurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appdownloadurl()) {
    appdownloadurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appdownloadurl_);
  }
  googleplaydownloadurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_googleplaydownloadurl()) {
    googleplaydownloadurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.googleplaydownloadurl_);
  }
  if (from.has_syyb()) {
    syyb_ = new ::micromsg::YYBStruct(*from.syyb_);
  } else {
    syyb_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.GameIntro)
}

void GameIntro::SharedCtor() {
  _cached_size_ = 0;
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gameintropage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  androidapkmd5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appdownloadurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  googleplaydownloadurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  syyb_ = NULL;
}

GameIntro::~GameIntro() {
  // @@protoc_insertion_point(destructor:micromsg.GameIntro)
  SharedDtor();
}

void GameIntro::SharedDtor() {
  appid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gameintropage_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  androidapkmd5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appdownloadurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  googleplaydownloadurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete syyb_;
  }
}

void GameIntro::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameIntro::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameIntro& GameIntro::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

GameIntro* GameIntro::New(::google::protobuf::Arena* arena) const {
  GameIntro* n = new GameIntro;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameIntro::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GameIntro)
  if (_has_bits_[0 / 32] & 63u) {
    if (has_appid()) {
      GOOGLE_DCHECK(!appid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appid_.UnsafeRawStringPointer())->clear();
    }
    if (has_gameintropage()) {
      GOOGLE_DCHECK(!gameintropage_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*gameintropage_.UnsafeRawStringPointer())->clear();
    }
    if (has_androidapkmd5()) {
      GOOGLE_DCHECK(!androidapkmd5_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*androidapkmd5_.UnsafeRawStringPointer())->clear();
    }
    if (has_appdownloadurl()) {
      GOOGLE_DCHECK(!appdownloadurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appdownloadurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_googleplaydownloadurl()) {
      GOOGLE_DCHECK(!googleplaydownloadurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*googleplaydownloadurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_syyb()) {
      GOOGLE_DCHECK(syyb_ != NULL);
      syyb_->::micromsg::YYBStruct::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameIntro::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GameIntro)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string AppID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appid().data(), this->appid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GameIntro.AppID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string GameIntroPage = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gameintropage()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gameintropage().data(), this->gameintropage().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GameIntro.GameIntroPage");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AndroidApkMd5 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_androidapkmd5()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->androidapkmd5().data(), this->androidapkmd5().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GameIntro.AndroidApkMd5");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppDownloadUrl = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appdownloadurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appdownloadurl().data(), this->appdownloadurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GameIntro.AppDownloadUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string GooglePlayDownloadUrl = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_googleplaydownloadurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->googleplaydownloadurl().data(), this->googleplaydownloadurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GameIntro.GooglePlayDownloadUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .micromsg.YYBStruct SYYB = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_syyb()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GameIntro)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GameIntro)
  return false;
#undef DO_
}

void GameIntro::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GameIntro)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string AppID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GameIntro.AppID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appid(), output);
  }

  // optional string GameIntroPage = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameintropage().data(), this->gameintropage().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GameIntro.GameIntroPage");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->gameintropage(), output);
  }

  // optional string AndroidApkMd5 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->androidapkmd5().data(), this->androidapkmd5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GameIntro.AndroidApkMd5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->androidapkmd5(), output);
  }

  // optional string AppDownloadUrl = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appdownloadurl().data(), this->appdownloadurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GameIntro.AppDownloadUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->appdownloadurl(), output);
  }

  // optional string GooglePlayDownloadUrl = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->googleplaydownloadurl().data(), this->googleplaydownloadurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GameIntro.GooglePlayDownloadUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->googleplaydownloadurl(), output);
  }

  // optional .micromsg.YYBStruct SYYB = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->syyb_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GameIntro)
}

::google::protobuf::uint8* GameIntro::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GameIntro)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string AppID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GameIntro.AppID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appid(), target);
  }

  // optional string GameIntroPage = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameintropage().data(), this->gameintropage().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GameIntro.GameIntroPage");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->gameintropage(), target);
  }

  // optional string AndroidApkMd5 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->androidapkmd5().data(), this->androidapkmd5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GameIntro.AndroidApkMd5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->androidapkmd5(), target);
  }

  // optional string AppDownloadUrl = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appdownloadurl().data(), this->appdownloadurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GameIntro.AppDownloadUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->appdownloadurl(), target);
  }

  // optional string GooglePlayDownloadUrl = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->googleplaydownloadurl().data(), this->googleplaydownloadurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GameIntro.GooglePlayDownloadUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->googleplaydownloadurl(), target);
  }

  // optional .micromsg.YYBStruct SYYB = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->syyb_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GameIntro)
  return target;
}

size_t GameIntro::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GameIntro)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string AppID = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appid());
    }

    // optional string GameIntroPage = 2;
    if (has_gameintropage()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gameintropage());
    }

    // optional string AndroidApkMd5 = 3;
    if (has_androidapkmd5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->androidapkmd5());
    }

    // optional string AppDownloadUrl = 4;
    if (has_appdownloadurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appdownloadurl());
    }

    // optional string GooglePlayDownloadUrl = 5;
    if (has_googleplaydownloadurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->googleplaydownloadurl());
    }

    // optional .micromsg.YYBStruct SYYB = 6;
    if (has_syyb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->syyb_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameIntro::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GameIntro)
  GOOGLE_DCHECK_NE(&from, this);
  const GameIntro* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameIntro>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GameIntro)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GameIntro)
    MergeFrom(*source);
  }
}

void GameIntro::MergeFrom(const GameIntro& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GameIntro)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_appid();
      appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_gameintropage();
      gameintropage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gameintropage_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_androidapkmd5();
      androidapkmd5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.androidapkmd5_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_appdownloadurl();
      appdownloadurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appdownloadurl_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_googleplaydownloadurl();
      googleplaydownloadurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.googleplaydownloadurl_);
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_syyb()->::micromsg::YYBStruct::MergeFrom(from.syyb());
    }
  }
}

void GameIntro::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GameIntro)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameIntro::CopyFrom(const GameIntro& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GameIntro)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameIntro::IsInitialized() const {
  return true;
}

void GameIntro::Swap(GameIntro* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameIntro::InternalSwap(GameIntro* other) {
  appid_.Swap(&other->appid_);
  gameintropage_.Swap(&other->gameintropage_);
  androidapkmd5_.Swap(&other->androidapkmd5_);
  appdownloadurl_.Swap(&other->appdownloadurl_);
  googleplaydownloadurl_.Swap(&other->googleplaydownloadurl_);
  std::swap(syyb_, other->syyb_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameIntro::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GameIntro

// optional string AppID = 1;
bool GameIntro::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GameIntro::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
void GameIntro::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
void GameIntro::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
const ::std::string& GameIntro::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.GameIntro.AppID)
  return appid_.GetNoArena();
}
void GameIntro::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GameIntro.AppID)
}
#if LANG_CXX11
void GameIntro::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GameIntro.AppID)
}
#endif
void GameIntro::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GameIntro.AppID)
}
void GameIntro::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GameIntro.AppID)
}
::std::string* GameIntro::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.GameIntro.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GameIntro::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.GameIntro.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GameIntro::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GameIntro.AppID)
}

// optional string GameIntroPage = 2;
bool GameIntro::has_gameintropage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GameIntro::set_has_gameintropage() {
  _has_bits_[0] |= 0x00000002u;
}
void GameIntro::clear_has_gameintropage() {
  _has_bits_[0] &= ~0x00000002u;
}
void GameIntro::clear_gameintropage() {
  gameintropage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gameintropage();
}
const ::std::string& GameIntro::gameintropage() const {
  // @@protoc_insertion_point(field_get:micromsg.GameIntro.GameIntroPage)
  return gameintropage_.GetNoArena();
}
void GameIntro::set_gameintropage(const ::std::string& value) {
  set_has_gameintropage();
  gameintropage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GameIntro.GameIntroPage)
}
#if LANG_CXX11
void GameIntro::set_gameintropage(::std::string&& value) {
  set_has_gameintropage();
  gameintropage_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GameIntro.GameIntroPage)
}
#endif
void GameIntro::set_gameintropage(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_gameintropage();
  gameintropage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GameIntro.GameIntroPage)
}
void GameIntro::set_gameintropage(const char* value, size_t size) {
  set_has_gameintropage();
  gameintropage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GameIntro.GameIntroPage)
}
::std::string* GameIntro::mutable_gameintropage() {
  set_has_gameintropage();
  // @@protoc_insertion_point(field_mutable:micromsg.GameIntro.GameIntroPage)
  return gameintropage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GameIntro::release_gameintropage() {
  // @@protoc_insertion_point(field_release:micromsg.GameIntro.GameIntroPage)
  clear_has_gameintropage();
  return gameintropage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GameIntro::set_allocated_gameintropage(::std::string* gameintropage) {
  if (gameintropage != NULL) {
    set_has_gameintropage();
  } else {
    clear_has_gameintropage();
  }
  gameintropage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gameintropage);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GameIntro.GameIntroPage)
}

// optional string AndroidApkMd5 = 3;
bool GameIntro::has_androidapkmd5() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GameIntro::set_has_androidapkmd5() {
  _has_bits_[0] |= 0x00000004u;
}
void GameIntro::clear_has_androidapkmd5() {
  _has_bits_[0] &= ~0x00000004u;
}
void GameIntro::clear_androidapkmd5() {
  androidapkmd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_androidapkmd5();
}
const ::std::string& GameIntro::androidapkmd5() const {
  // @@protoc_insertion_point(field_get:micromsg.GameIntro.AndroidApkMd5)
  return androidapkmd5_.GetNoArena();
}
void GameIntro::set_androidapkmd5(const ::std::string& value) {
  set_has_androidapkmd5();
  androidapkmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GameIntro.AndroidApkMd5)
}
#if LANG_CXX11
void GameIntro::set_androidapkmd5(::std::string&& value) {
  set_has_androidapkmd5();
  androidapkmd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GameIntro.AndroidApkMd5)
}
#endif
void GameIntro::set_androidapkmd5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_androidapkmd5();
  androidapkmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GameIntro.AndroidApkMd5)
}
void GameIntro::set_androidapkmd5(const char* value, size_t size) {
  set_has_androidapkmd5();
  androidapkmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GameIntro.AndroidApkMd5)
}
::std::string* GameIntro::mutable_androidapkmd5() {
  set_has_androidapkmd5();
  // @@protoc_insertion_point(field_mutable:micromsg.GameIntro.AndroidApkMd5)
  return androidapkmd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GameIntro::release_androidapkmd5() {
  // @@protoc_insertion_point(field_release:micromsg.GameIntro.AndroidApkMd5)
  clear_has_androidapkmd5();
  return androidapkmd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GameIntro::set_allocated_androidapkmd5(::std::string* androidapkmd5) {
  if (androidapkmd5 != NULL) {
    set_has_androidapkmd5();
  } else {
    clear_has_androidapkmd5();
  }
  androidapkmd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), androidapkmd5);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GameIntro.AndroidApkMd5)
}

// optional string AppDownloadUrl = 4;
bool GameIntro::has_appdownloadurl() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GameIntro::set_has_appdownloadurl() {
  _has_bits_[0] |= 0x00000008u;
}
void GameIntro::clear_has_appdownloadurl() {
  _has_bits_[0] &= ~0x00000008u;
}
void GameIntro::clear_appdownloadurl() {
  appdownloadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appdownloadurl();
}
const ::std::string& GameIntro::appdownloadurl() const {
  // @@protoc_insertion_point(field_get:micromsg.GameIntro.AppDownloadUrl)
  return appdownloadurl_.GetNoArena();
}
void GameIntro::set_appdownloadurl(const ::std::string& value) {
  set_has_appdownloadurl();
  appdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GameIntro.AppDownloadUrl)
}
#if LANG_CXX11
void GameIntro::set_appdownloadurl(::std::string&& value) {
  set_has_appdownloadurl();
  appdownloadurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GameIntro.AppDownloadUrl)
}
#endif
void GameIntro::set_appdownloadurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appdownloadurl();
  appdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GameIntro.AppDownloadUrl)
}
void GameIntro::set_appdownloadurl(const char* value, size_t size) {
  set_has_appdownloadurl();
  appdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GameIntro.AppDownloadUrl)
}
::std::string* GameIntro::mutable_appdownloadurl() {
  set_has_appdownloadurl();
  // @@protoc_insertion_point(field_mutable:micromsg.GameIntro.AppDownloadUrl)
  return appdownloadurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GameIntro::release_appdownloadurl() {
  // @@protoc_insertion_point(field_release:micromsg.GameIntro.AppDownloadUrl)
  clear_has_appdownloadurl();
  return appdownloadurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GameIntro::set_allocated_appdownloadurl(::std::string* appdownloadurl) {
  if (appdownloadurl != NULL) {
    set_has_appdownloadurl();
  } else {
    clear_has_appdownloadurl();
  }
  appdownloadurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appdownloadurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GameIntro.AppDownloadUrl)
}

// optional string GooglePlayDownloadUrl = 5;
bool GameIntro::has_googleplaydownloadurl() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GameIntro::set_has_googleplaydownloadurl() {
  _has_bits_[0] |= 0x00000010u;
}
void GameIntro::clear_has_googleplaydownloadurl() {
  _has_bits_[0] &= ~0x00000010u;
}
void GameIntro::clear_googleplaydownloadurl() {
  googleplaydownloadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_googleplaydownloadurl();
}
const ::std::string& GameIntro::googleplaydownloadurl() const {
  // @@protoc_insertion_point(field_get:micromsg.GameIntro.GooglePlayDownloadUrl)
  return googleplaydownloadurl_.GetNoArena();
}
void GameIntro::set_googleplaydownloadurl(const ::std::string& value) {
  set_has_googleplaydownloadurl();
  googleplaydownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GameIntro.GooglePlayDownloadUrl)
}
#if LANG_CXX11
void GameIntro::set_googleplaydownloadurl(::std::string&& value) {
  set_has_googleplaydownloadurl();
  googleplaydownloadurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GameIntro.GooglePlayDownloadUrl)
}
#endif
void GameIntro::set_googleplaydownloadurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_googleplaydownloadurl();
  googleplaydownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GameIntro.GooglePlayDownloadUrl)
}
void GameIntro::set_googleplaydownloadurl(const char* value, size_t size) {
  set_has_googleplaydownloadurl();
  googleplaydownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GameIntro.GooglePlayDownloadUrl)
}
::std::string* GameIntro::mutable_googleplaydownloadurl() {
  set_has_googleplaydownloadurl();
  // @@protoc_insertion_point(field_mutable:micromsg.GameIntro.GooglePlayDownloadUrl)
  return googleplaydownloadurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GameIntro::release_googleplaydownloadurl() {
  // @@protoc_insertion_point(field_release:micromsg.GameIntro.GooglePlayDownloadUrl)
  clear_has_googleplaydownloadurl();
  return googleplaydownloadurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GameIntro::set_allocated_googleplaydownloadurl(::std::string* googleplaydownloadurl) {
  if (googleplaydownloadurl != NULL) {
    set_has_googleplaydownloadurl();
  } else {
    clear_has_googleplaydownloadurl();
  }
  googleplaydownloadurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), googleplaydownloadurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GameIntro.GooglePlayDownloadUrl)
}

// optional .micromsg.YYBStruct SYYB = 6;
bool GameIntro::has_syyb() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void GameIntro::set_has_syyb() {
  _has_bits_[0] |= 0x00000020u;
}
void GameIntro::clear_has_syyb() {
  _has_bits_[0] &= ~0x00000020u;
}
void GameIntro::clear_syyb() {
  if (syyb_ != NULL) syyb_->::micromsg::YYBStruct::Clear();
  clear_has_syyb();
}
const ::micromsg::YYBStruct& GameIntro::syyb() const {
  // @@protoc_insertion_point(field_get:micromsg.GameIntro.SYYB)
  return syyb_ != NULL ? *syyb_
                         : *::micromsg::YYBStruct::internal_default_instance();
}
::micromsg::YYBStruct* GameIntro::mutable_syyb() {
  set_has_syyb();
  if (syyb_ == NULL) {
    syyb_ = new ::micromsg::YYBStruct;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GameIntro.SYYB)
  return syyb_;
}
::micromsg::YYBStruct* GameIntro::release_syyb() {
  // @@protoc_insertion_point(field_release:micromsg.GameIntro.SYYB)
  clear_has_syyb();
  ::micromsg::YYBStruct* temp = syyb_;
  syyb_ = NULL;
  return temp;
}
void GameIntro::set_allocated_syyb(::micromsg::YYBStruct* syyb) {
  delete syyb_;
  syyb_ = syyb;
  if (syyb) {
    set_has_syyb();
  } else {
    clear_has_syyb();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GameIntro.SYYB)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetGameIntroListResponse::kBaseResponseFieldNumber;
const int GetGameIntroListResponse::kCountFieldNumber;
const int GetGameIntroListResponse::kGameIntroListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetGameIntroListResponse::GetGameIntroListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetGameIntroListResponse)
}
GetGameIntroListResponse::GetGameIntroListResponse(const GetGameIntroListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      gameintrolist_(from.gameintrolist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:micromsg.GetGameIntroListResponse)
}

void GetGameIntroListResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(count_));
}

GetGameIntroListResponse::~GetGameIntroListResponse() {
  // @@protoc_insertion_point(destructor:micromsg.GetGameIntroListResponse)
  SharedDtor();
}

void GetGameIntroListResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void GetGameIntroListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetGameIntroListResponse::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetGameIntroListResponse& GetGameIntroListResponse::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetGameIntroListResponse* GetGameIntroListResponse::New(::google::protobuf::Arena* arena) const {
  GetGameIntroListResponse* n = new GetGameIntroListResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetGameIntroListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetGameIntroListResponse)
  gameintrolist_.Clear();
  if (has_baseresponse()) {
    GOOGLE_DCHECK(baseresponse_ != NULL);
    baseresponse_->::micromsg::BaseResponse::Clear();
  }
  count_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetGameIntroListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetGameIntroListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.GameIntro GameIntroList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_gameintrolist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetGameIntroListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetGameIntroListResponse)
  return false;
#undef DO_
}

void GetGameIntroListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetGameIntroListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // required uint32 Count = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  // repeated .micromsg.GameIntro GameIntroList = 3;
  for (unsigned int i = 0, n = this->gameintrolist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->gameintrolist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetGameIntroListResponse)
}

::google::protobuf::uint8* GetGameIntroListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetGameIntroListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // required uint32 Count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  // repeated .micromsg.GameIntro GameIntroList = 3;
  for (unsigned int i = 0, n = this->gameintrolist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->gameintrolist(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetGameIntroListResponse)
  return target;
}

size_t GetGameIntroListResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetGameIntroListResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_count()) {
    // required uint32 Count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  return total_size;
}
size_t GetGameIntroListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetGameIntroListResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required uint32 Count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.GameIntro GameIntroList = 3;
  {
    unsigned int count = this->gameintrolist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->gameintrolist(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetGameIntroListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetGameIntroListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGameIntroListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetGameIntroListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetGameIntroListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetGameIntroListResponse)
    MergeFrom(*source);
  }
}

void GetGameIntroListResponse::MergeFrom(const GetGameIntroListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetGameIntroListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gameintrolist_.MergeFrom(from.gameintrolist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000002u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetGameIntroListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetGameIntroListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGameIntroListResponse::CopyFrom(const GetGameIntroListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetGameIntroListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGameIntroListResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void GetGameIntroListResponse::Swap(GetGameIntroListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetGameIntroListResponse::InternalSwap(GetGameIntroListResponse* other) {
  gameintrolist_.InternalSwap(&other->gameintrolist_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(count_, other->count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetGameIntroListResponse::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetGameIntroListResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool GetGameIntroListResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetGameIntroListResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
void GetGameIntroListResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetGameIntroListResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& GetGameIntroListResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetGameIntroListResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* GetGameIntroListResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetGameIntroListResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* GetGameIntroListResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetGameIntroListResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void GetGameIntroListResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetGameIntroListResponse.BaseResponse)
}

// required uint32 Count = 2;
bool GetGameIntroListResponse::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetGameIntroListResponse::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
void GetGameIntroListResponse::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetGameIntroListResponse::clear_count() {
  count_ = 0u;
  clear_has_count();
}
::google::protobuf::uint32 GetGameIntroListResponse::count() const {
  // @@protoc_insertion_point(field_get:micromsg.GetGameIntroListResponse.Count)
  return count_;
}
void GetGameIntroListResponse::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetGameIntroListResponse.Count)
}

// repeated .micromsg.GameIntro GameIntroList = 3;
int GetGameIntroListResponse::gameintrolist_size() const {
  return gameintrolist_.size();
}
void GetGameIntroListResponse::clear_gameintrolist() {
  gameintrolist_.Clear();
}
const ::micromsg::GameIntro& GetGameIntroListResponse::gameintrolist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetGameIntroListResponse.GameIntroList)
  return gameintrolist_.Get(index);
}
::micromsg::GameIntro* GetGameIntroListResponse::mutable_gameintrolist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetGameIntroListResponse.GameIntroList)
  return gameintrolist_.Mutable(index);
}
::micromsg::GameIntro* GetGameIntroListResponse::add_gameintrolist() {
  // @@protoc_insertion_point(field_add:micromsg.GetGameIntroListResponse.GameIntroList)
  return gameintrolist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::GameIntro >*
GetGameIntroListResponse::mutable_gameintrolist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetGameIntroListResponse.GameIntroList)
  return &gameintrolist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::GameIntro >&
GetGameIntroListResponse::gameintrolist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetGameIntroListResponse.GameIntroList)
  return gameintrolist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAppPersonalInfoListRequest::kBaseRequestFieldNumber;
const int GetAppPersonalInfoListRequest::kCountFieldNumber;
const int GetAppPersonalInfoListRequest::kAppIdListFieldNumber;
const int GetAppPersonalInfoListRequest::kSceneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAppPersonalInfoListRequest::GetAppPersonalInfoListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetAppPersonalInfoListRequest)
}
GetAppPersonalInfoListRequest::GetAppPersonalInfoListRequest(const GetAppPersonalInfoListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      appidlist_(from.appidlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  ::memcpy(&count_, &from.count_,
    reinterpret_cast<char*>(&scene_) -
    reinterpret_cast<char*>(&count_) + sizeof(scene_));
  // @@protoc_insertion_point(copy_constructor:micromsg.GetAppPersonalInfoListRequest)
}

void GetAppPersonalInfoListRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&scene_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(scene_));
}

GetAppPersonalInfoListRequest::~GetAppPersonalInfoListRequest() {
  // @@protoc_insertion_point(destructor:micromsg.GetAppPersonalInfoListRequest)
  SharedDtor();
}

void GetAppPersonalInfoListRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void GetAppPersonalInfoListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAppPersonalInfoListRequest::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAppPersonalInfoListRequest& GetAppPersonalInfoListRequest::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetAppPersonalInfoListRequest* GetAppPersonalInfoListRequest::New(::google::protobuf::Arena* arena) const {
  GetAppPersonalInfoListRequest* n = new GetAppPersonalInfoListRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAppPersonalInfoListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetAppPersonalInfoListRequest)
  appidlist_.Clear();
  if (has_baserequest()) {
    GOOGLE_DCHECK(baserequest_ != NULL);
    baserequest_->::micromsg::BaseRequest::Clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&count_, 0, reinterpret_cast<char*>(&scene_) -
      reinterpret_cast<char*>(&count_) + sizeof(scene_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetAppPersonalInfoListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetAppPersonalInfoListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.SKBuiltinString_t AppIdList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_appidlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 Scene = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_scene();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetAppPersonalInfoListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetAppPersonalInfoListRequest)
  return false;
#undef DO_
}

void GetAppPersonalInfoListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetAppPersonalInfoListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required uint32 Count = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  // repeated .micromsg.SKBuiltinString_t AppIdList = 3;
  for (unsigned int i = 0, n = this->appidlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->appidlist(i), output);
  }

  // optional uint32 Scene = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->scene(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetAppPersonalInfoListRequest)
}

::google::protobuf::uint8* GetAppPersonalInfoListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetAppPersonalInfoListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required uint32 Count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  // repeated .micromsg.SKBuiltinString_t AppIdList = 3;
  for (unsigned int i = 0, n = this->appidlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->appidlist(i), deterministic, target);
  }

  // optional uint32 Scene = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->scene(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetAppPersonalInfoListRequest)
  return target;
}

size_t GetAppPersonalInfoListRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetAppPersonalInfoListRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_count()) {
    // required uint32 Count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  return total_size;
}
size_t GetAppPersonalInfoListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetAppPersonalInfoListRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required uint32 Count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.SKBuiltinString_t AppIdList = 3;
  {
    unsigned int count = this->appidlist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->appidlist(i));
    }
  }

  // optional uint32 Scene = 4;
  if (has_scene()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAppPersonalInfoListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetAppPersonalInfoListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAppPersonalInfoListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAppPersonalInfoListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetAppPersonalInfoListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetAppPersonalInfoListRequest)
    MergeFrom(*source);
  }
}

void GetAppPersonalInfoListRequest::MergeFrom(const GetAppPersonalInfoListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetAppPersonalInfoListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  appidlist_.MergeFrom(from.appidlist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000002u) {
      count_ = from.count_;
    }
    if (cached_has_bits & 0x00000004u) {
      scene_ = from.scene_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetAppPersonalInfoListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetAppPersonalInfoListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAppPersonalInfoListRequest::CopyFrom(const GetAppPersonalInfoListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetAppPersonalInfoListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAppPersonalInfoListRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void GetAppPersonalInfoListRequest::Swap(GetAppPersonalInfoListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAppPersonalInfoListRequest::InternalSwap(GetAppPersonalInfoListRequest* other) {
  appidlist_.InternalSwap(&other->appidlist_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(count_, other->count_);
  std::swap(scene_, other->scene_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAppPersonalInfoListRequest::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetAppPersonalInfoListRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool GetAppPersonalInfoListRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetAppPersonalInfoListRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
void GetAppPersonalInfoListRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetAppPersonalInfoListRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& GetAppPersonalInfoListRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppPersonalInfoListRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* GetAppPersonalInfoListRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppPersonalInfoListRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* GetAppPersonalInfoListRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetAppPersonalInfoListRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void GetAppPersonalInfoListRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAppPersonalInfoListRequest.BaseRequest)
}

// required uint32 Count = 2;
bool GetAppPersonalInfoListRequest::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetAppPersonalInfoListRequest::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
void GetAppPersonalInfoListRequest::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetAppPersonalInfoListRequest::clear_count() {
  count_ = 0u;
  clear_has_count();
}
::google::protobuf::uint32 GetAppPersonalInfoListRequest::count() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppPersonalInfoListRequest.Count)
  return count_;
}
void GetAppPersonalInfoListRequest::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetAppPersonalInfoListRequest.Count)
}

// repeated .micromsg.SKBuiltinString_t AppIdList = 3;
int GetAppPersonalInfoListRequest::appidlist_size() const {
  return appidlist_.size();
}
void GetAppPersonalInfoListRequest::clear_appidlist() {
  appidlist_.Clear();
}
const ::micromsg::SKBuiltinString_t& GetAppPersonalInfoListRequest::appidlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppPersonalInfoListRequest.AppIdList)
  return appidlist_.Get(index);
}
::micromsg::SKBuiltinString_t* GetAppPersonalInfoListRequest::mutable_appidlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppPersonalInfoListRequest.AppIdList)
  return appidlist_.Mutable(index);
}
::micromsg::SKBuiltinString_t* GetAppPersonalInfoListRequest::add_appidlist() {
  // @@protoc_insertion_point(field_add:micromsg.GetAppPersonalInfoListRequest.AppIdList)
  return appidlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
GetAppPersonalInfoListRequest::mutable_appidlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetAppPersonalInfoListRequest.AppIdList)
  return &appidlist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
GetAppPersonalInfoListRequest::appidlist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetAppPersonalInfoListRequest.AppIdList)
  return appidlist_;
}

// optional uint32 Scene = 4;
bool GetAppPersonalInfoListRequest::has_scene() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetAppPersonalInfoListRequest::set_has_scene() {
  _has_bits_[0] |= 0x00000004u;
}
void GetAppPersonalInfoListRequest::clear_has_scene() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetAppPersonalInfoListRequest::clear_scene() {
  scene_ = 0u;
  clear_has_scene();
}
::google::protobuf::uint32 GetAppPersonalInfoListRequest::scene() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppPersonalInfoListRequest.Scene)
  return scene_;
}
void GetAppPersonalInfoListRequest::set_scene(::google::protobuf::uint32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetAppPersonalInfoListRequest.Scene)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppPersonalInfo::kAppIDFieldNumber;
const int AppPersonalInfo::kPersonalSettingXmlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppPersonalInfo::AppPersonalInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.AppPersonalInfo)
}
AppPersonalInfo::AppPersonalInfo(const AppPersonalInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appid()) {
    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  personalsettingxml_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_personalsettingxml()) {
    personalsettingxml_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.personalsettingxml_);
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.AppPersonalInfo)
}

void AppPersonalInfo::SharedCtor() {
  _cached_size_ = 0;
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  personalsettingxml_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AppPersonalInfo::~AppPersonalInfo() {
  // @@protoc_insertion_point(destructor:micromsg.AppPersonalInfo)
  SharedDtor();
}

void AppPersonalInfo::SharedDtor() {
  appid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  personalsettingxml_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AppPersonalInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppPersonalInfo::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AppPersonalInfo& AppPersonalInfo::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

AppPersonalInfo* AppPersonalInfo::New(::google::protobuf::Arena* arena) const {
  AppPersonalInfo* n = new AppPersonalInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AppPersonalInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.AppPersonalInfo)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_appid()) {
      GOOGLE_DCHECK(!appid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appid_.UnsafeRawStringPointer())->clear();
    }
    if (has_personalsettingxml()) {
      GOOGLE_DCHECK(!personalsettingxml_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*personalsettingxml_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AppPersonalInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.AppPersonalInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string AppID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appid().data(), this->appid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.AppPersonalInfo.AppID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string PersonalSettingXml = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_personalsettingxml()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->personalsettingxml().data(), this->personalsettingxml().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.AppPersonalInfo.PersonalSettingXml");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.AppPersonalInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.AppPersonalInfo)
  return false;
#undef DO_
}

void AppPersonalInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.AppPersonalInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string AppID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AppPersonalInfo.AppID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appid(), output);
  }

  // optional string PersonalSettingXml = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->personalsettingxml().data(), this->personalsettingxml().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AppPersonalInfo.PersonalSettingXml");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->personalsettingxml(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.AppPersonalInfo)
}

::google::protobuf::uint8* AppPersonalInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.AppPersonalInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string AppID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AppPersonalInfo.AppID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appid(), target);
  }

  // optional string PersonalSettingXml = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->personalsettingxml().data(), this->personalsettingxml().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AppPersonalInfo.PersonalSettingXml");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->personalsettingxml(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.AppPersonalInfo)
  return target;
}

size_t AppPersonalInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.AppPersonalInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string AppID = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appid());
    }

    // optional string PersonalSettingXml = 2;
    if (has_personalsettingxml()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->personalsettingxml());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppPersonalInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.AppPersonalInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AppPersonalInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppPersonalInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.AppPersonalInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.AppPersonalInfo)
    MergeFrom(*source);
  }
}

void AppPersonalInfo::MergeFrom(const AppPersonalInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.AppPersonalInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_appid();
      appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_personalsettingxml();
      personalsettingxml_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.personalsettingxml_);
    }
  }
}

void AppPersonalInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.AppPersonalInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppPersonalInfo::CopyFrom(const AppPersonalInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.AppPersonalInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppPersonalInfo::IsInitialized() const {
  return true;
}

void AppPersonalInfo::Swap(AppPersonalInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppPersonalInfo::InternalSwap(AppPersonalInfo* other) {
  appid_.Swap(&other->appid_);
  personalsettingxml_.Swap(&other->personalsettingxml_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AppPersonalInfo::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AppPersonalInfo

// optional string AppID = 1;
bool AppPersonalInfo::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AppPersonalInfo::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
void AppPersonalInfo::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
void AppPersonalInfo::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
const ::std::string& AppPersonalInfo::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.AppPersonalInfo.AppID)
  return appid_.GetNoArena();
}
void AppPersonalInfo::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AppPersonalInfo.AppID)
}
#if LANG_CXX11
void AppPersonalInfo::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AppPersonalInfo.AppID)
}
#endif
void AppPersonalInfo::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AppPersonalInfo.AppID)
}
void AppPersonalInfo::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AppPersonalInfo.AppID)
}
::std::string* AppPersonalInfo::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.AppPersonalInfo.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppPersonalInfo::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.AppPersonalInfo.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppPersonalInfo::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppPersonalInfo.AppID)
}

// optional string PersonalSettingXml = 2;
bool AppPersonalInfo::has_personalsettingxml() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AppPersonalInfo::set_has_personalsettingxml() {
  _has_bits_[0] |= 0x00000002u;
}
void AppPersonalInfo::clear_has_personalsettingxml() {
  _has_bits_[0] &= ~0x00000002u;
}
void AppPersonalInfo::clear_personalsettingxml() {
  personalsettingxml_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_personalsettingxml();
}
const ::std::string& AppPersonalInfo::personalsettingxml() const {
  // @@protoc_insertion_point(field_get:micromsg.AppPersonalInfo.PersonalSettingXml)
  return personalsettingxml_.GetNoArena();
}
void AppPersonalInfo::set_personalsettingxml(const ::std::string& value) {
  set_has_personalsettingxml();
  personalsettingxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AppPersonalInfo.PersonalSettingXml)
}
#if LANG_CXX11
void AppPersonalInfo::set_personalsettingxml(::std::string&& value) {
  set_has_personalsettingxml();
  personalsettingxml_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AppPersonalInfo.PersonalSettingXml)
}
#endif
void AppPersonalInfo::set_personalsettingxml(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_personalsettingxml();
  personalsettingxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AppPersonalInfo.PersonalSettingXml)
}
void AppPersonalInfo::set_personalsettingxml(const char* value, size_t size) {
  set_has_personalsettingxml();
  personalsettingxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AppPersonalInfo.PersonalSettingXml)
}
::std::string* AppPersonalInfo::mutable_personalsettingxml() {
  set_has_personalsettingxml();
  // @@protoc_insertion_point(field_mutable:micromsg.AppPersonalInfo.PersonalSettingXml)
  return personalsettingxml_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppPersonalInfo::release_personalsettingxml() {
  // @@protoc_insertion_point(field_release:micromsg.AppPersonalInfo.PersonalSettingXml)
  clear_has_personalsettingxml();
  return personalsettingxml_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppPersonalInfo::set_allocated_personalsettingxml(::std::string* personalsettingxml) {
  if (personalsettingxml != NULL) {
    set_has_personalsettingxml();
  } else {
    clear_has_personalsettingxml();
  }
  personalsettingxml_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), personalsettingxml);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppPersonalInfo.PersonalSettingXml)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAppPersonalInfoListResponse::kBaseResponseFieldNumber;
const int GetAppPersonalInfoListResponse::kCountFieldNumber;
const int GetAppPersonalInfoListResponse::kAppPersonalInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAppPersonalInfoListResponse::GetAppPersonalInfoListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetAppPersonalInfoListResponse)
}
GetAppPersonalInfoListResponse::GetAppPersonalInfoListResponse(const GetAppPersonalInfoListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      apppersonalinfolist_(from.apppersonalinfolist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:micromsg.GetAppPersonalInfoListResponse)
}

void GetAppPersonalInfoListResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(count_));
}

GetAppPersonalInfoListResponse::~GetAppPersonalInfoListResponse() {
  // @@protoc_insertion_point(destructor:micromsg.GetAppPersonalInfoListResponse)
  SharedDtor();
}

void GetAppPersonalInfoListResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void GetAppPersonalInfoListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAppPersonalInfoListResponse::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAppPersonalInfoListResponse& GetAppPersonalInfoListResponse::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetAppPersonalInfoListResponse* GetAppPersonalInfoListResponse::New(::google::protobuf::Arena* arena) const {
  GetAppPersonalInfoListResponse* n = new GetAppPersonalInfoListResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAppPersonalInfoListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetAppPersonalInfoListResponse)
  apppersonalinfolist_.Clear();
  if (has_baseresponse()) {
    GOOGLE_DCHECK(baseresponse_ != NULL);
    baseresponse_->::micromsg::BaseResponse::Clear();
  }
  count_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetAppPersonalInfoListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetAppPersonalInfoListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.AppPersonalInfo AppPersonalInfoList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_apppersonalinfolist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetAppPersonalInfoListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetAppPersonalInfoListResponse)
  return false;
#undef DO_
}

void GetAppPersonalInfoListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetAppPersonalInfoListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // required uint32 Count = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  // repeated .micromsg.AppPersonalInfo AppPersonalInfoList = 3;
  for (unsigned int i = 0, n = this->apppersonalinfolist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->apppersonalinfolist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetAppPersonalInfoListResponse)
}

::google::protobuf::uint8* GetAppPersonalInfoListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetAppPersonalInfoListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // required uint32 Count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  // repeated .micromsg.AppPersonalInfo AppPersonalInfoList = 3;
  for (unsigned int i = 0, n = this->apppersonalinfolist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->apppersonalinfolist(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetAppPersonalInfoListResponse)
  return target;
}

size_t GetAppPersonalInfoListResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetAppPersonalInfoListResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_count()) {
    // required uint32 Count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  return total_size;
}
size_t GetAppPersonalInfoListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetAppPersonalInfoListResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required uint32 Count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.AppPersonalInfo AppPersonalInfoList = 3;
  {
    unsigned int count = this->apppersonalinfolist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->apppersonalinfolist(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAppPersonalInfoListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetAppPersonalInfoListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAppPersonalInfoListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAppPersonalInfoListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetAppPersonalInfoListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetAppPersonalInfoListResponse)
    MergeFrom(*source);
  }
}

void GetAppPersonalInfoListResponse::MergeFrom(const GetAppPersonalInfoListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetAppPersonalInfoListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  apppersonalinfolist_.MergeFrom(from.apppersonalinfolist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000002u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetAppPersonalInfoListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetAppPersonalInfoListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAppPersonalInfoListResponse::CopyFrom(const GetAppPersonalInfoListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetAppPersonalInfoListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAppPersonalInfoListResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void GetAppPersonalInfoListResponse::Swap(GetAppPersonalInfoListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAppPersonalInfoListResponse::InternalSwap(GetAppPersonalInfoListResponse* other) {
  apppersonalinfolist_.InternalSwap(&other->apppersonalinfolist_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(count_, other->count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAppPersonalInfoListResponse::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetAppPersonalInfoListResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool GetAppPersonalInfoListResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetAppPersonalInfoListResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
void GetAppPersonalInfoListResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetAppPersonalInfoListResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& GetAppPersonalInfoListResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppPersonalInfoListResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* GetAppPersonalInfoListResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppPersonalInfoListResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* GetAppPersonalInfoListResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetAppPersonalInfoListResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void GetAppPersonalInfoListResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAppPersonalInfoListResponse.BaseResponse)
}

// required uint32 Count = 2;
bool GetAppPersonalInfoListResponse::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetAppPersonalInfoListResponse::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
void GetAppPersonalInfoListResponse::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetAppPersonalInfoListResponse::clear_count() {
  count_ = 0u;
  clear_has_count();
}
::google::protobuf::uint32 GetAppPersonalInfoListResponse::count() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppPersonalInfoListResponse.Count)
  return count_;
}
void GetAppPersonalInfoListResponse::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetAppPersonalInfoListResponse.Count)
}

// repeated .micromsg.AppPersonalInfo AppPersonalInfoList = 3;
int GetAppPersonalInfoListResponse::apppersonalinfolist_size() const {
  return apppersonalinfolist_.size();
}
void GetAppPersonalInfoListResponse::clear_apppersonalinfolist() {
  apppersonalinfolist_.Clear();
}
const ::micromsg::AppPersonalInfo& GetAppPersonalInfoListResponse::apppersonalinfolist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppPersonalInfoListResponse.AppPersonalInfoList)
  return apppersonalinfolist_.Get(index);
}
::micromsg::AppPersonalInfo* GetAppPersonalInfoListResponse::mutable_apppersonalinfolist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppPersonalInfoListResponse.AppPersonalInfoList)
  return apppersonalinfolist_.Mutable(index);
}
::micromsg::AppPersonalInfo* GetAppPersonalInfoListResponse::add_apppersonalinfolist() {
  // @@protoc_insertion_point(field_add:micromsg.GetAppPersonalInfoListResponse.AppPersonalInfoList)
  return apppersonalinfolist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::AppPersonalInfo >*
GetAppPersonalInfoListResponse::mutable_apppersonalinfolist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetAppPersonalInfoListResponse.AppPersonalInfoList)
  return &apppersonalinfolist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::AppPersonalInfo >&
GetAppPersonalInfoListResponse::apppersonalinfolist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetAppPersonalInfoListResponse.AppPersonalInfoList)
  return apppersonalinfolist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetSuggestionAppDetailRequest::kBaseRequestFieldNumber;
const int GetSuggestionAppDetailRequest::kAppIDFieldNumber;
const int GetSuggestionAppDetailRequest::kLangFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSuggestionAppDetailRequest::GetSuggestionAppDetailRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetSuggestionAppDetailRequest)
}
GetSuggestionAppDetailRequest::GetSuggestionAppDetailRequest(const GetSuggestionAppDetailRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appid()) {
    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  lang_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_lang()) {
    lang_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lang_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.GetSuggestionAppDetailRequest)
}

void GetSuggestionAppDetailRequest::SharedCtor() {
  _cached_size_ = 0;
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lang_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  baserequest_ = NULL;
}

GetSuggestionAppDetailRequest::~GetSuggestionAppDetailRequest() {
  // @@protoc_insertion_point(destructor:micromsg.GetSuggestionAppDetailRequest)
  SharedDtor();
}

void GetSuggestionAppDetailRequest::SharedDtor() {
  appid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lang_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void GetSuggestionAppDetailRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSuggestionAppDetailRequest::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetSuggestionAppDetailRequest& GetSuggestionAppDetailRequest::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetSuggestionAppDetailRequest* GetSuggestionAppDetailRequest::New(::google::protobuf::Arena* arena) const {
  GetSuggestionAppDetailRequest* n = new GetSuggestionAppDetailRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetSuggestionAppDetailRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetSuggestionAppDetailRequest)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_appid()) {
      GOOGLE_DCHECK(!appid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appid_.UnsafeRawStringPointer())->clear();
    }
    if (has_lang()) {
      GOOGLE_DCHECK(!lang_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*lang_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetSuggestionAppDetailRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetSuggestionAppDetailRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appid().data(), this->appid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetSuggestionAppDetailRequest.AppID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Lang = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lang()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->lang().data(), this->lang().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetSuggestionAppDetailRequest.Lang");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetSuggestionAppDetailRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetSuggestionAppDetailRequest)
  return false;
#undef DO_
}

void GetSuggestionAppDetailRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetSuggestionAppDetailRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // optional string AppID = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetSuggestionAppDetailRequest.AppID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appid(), output);
  }

  // optional string Lang = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lang().data(), this->lang().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetSuggestionAppDetailRequest.Lang");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->lang(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetSuggestionAppDetailRequest)
}

::google::protobuf::uint8* GetSuggestionAppDetailRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetSuggestionAppDetailRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // optional string AppID = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetSuggestionAppDetailRequest.AppID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appid(), target);
  }

  // optional string Lang = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lang().data(), this->lang().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetSuggestionAppDetailRequest.Lang");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->lang(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetSuggestionAppDetailRequest)
  return target;
}

size_t GetSuggestionAppDetailRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetSuggestionAppDetailRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (has_baserequest()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string AppID = 2;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appid());
    }

    // optional string Lang = 3;
    if (has_lang()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->lang());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSuggestionAppDetailRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetSuggestionAppDetailRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSuggestionAppDetailRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetSuggestionAppDetailRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetSuggestionAppDetailRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetSuggestionAppDetailRequest)
    MergeFrom(*source);
  }
}

void GetSuggestionAppDetailRequest::MergeFrom(const GetSuggestionAppDetailRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetSuggestionAppDetailRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_appid();
      appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_lang();
      lang_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lang_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
  }
}

void GetSuggestionAppDetailRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetSuggestionAppDetailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSuggestionAppDetailRequest::CopyFrom(const GetSuggestionAppDetailRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetSuggestionAppDetailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSuggestionAppDetailRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void GetSuggestionAppDetailRequest::Swap(GetSuggestionAppDetailRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetSuggestionAppDetailRequest::InternalSwap(GetSuggestionAppDetailRequest* other) {
  appid_.Swap(&other->appid_);
  lang_.Swap(&other->lang_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetSuggestionAppDetailRequest::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetSuggestionAppDetailRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool GetSuggestionAppDetailRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetSuggestionAppDetailRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000004u;
}
void GetSuggestionAppDetailRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetSuggestionAppDetailRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& GetSuggestionAppDetailRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppDetailRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* GetSuggestionAppDetailRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetSuggestionAppDetailRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* GetSuggestionAppDetailRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetSuggestionAppDetailRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void GetSuggestionAppDetailRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetSuggestionAppDetailRequest.BaseRequest)
}

// optional string AppID = 2;
bool GetSuggestionAppDetailRequest::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetSuggestionAppDetailRequest::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
void GetSuggestionAppDetailRequest::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetSuggestionAppDetailRequest::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
const ::std::string& GetSuggestionAppDetailRequest::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppDetailRequest.AppID)
  return appid_.GetNoArena();
}
void GetSuggestionAppDetailRequest::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetSuggestionAppDetailRequest.AppID)
}
#if LANG_CXX11
void GetSuggestionAppDetailRequest::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetSuggestionAppDetailRequest.AppID)
}
#endif
void GetSuggestionAppDetailRequest::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetSuggestionAppDetailRequest.AppID)
}
void GetSuggestionAppDetailRequest::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetSuggestionAppDetailRequest.AppID)
}
::std::string* GetSuggestionAppDetailRequest::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetSuggestionAppDetailRequest.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetSuggestionAppDetailRequest::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.GetSuggestionAppDetailRequest.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetSuggestionAppDetailRequest::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetSuggestionAppDetailRequest.AppID)
}

// optional string Lang = 3;
bool GetSuggestionAppDetailRequest::has_lang() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetSuggestionAppDetailRequest::set_has_lang() {
  _has_bits_[0] |= 0x00000002u;
}
void GetSuggestionAppDetailRequest::clear_has_lang() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetSuggestionAppDetailRequest::clear_lang() {
  lang_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lang();
}
const ::std::string& GetSuggestionAppDetailRequest::lang() const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppDetailRequest.Lang)
  return lang_.GetNoArena();
}
void GetSuggestionAppDetailRequest::set_lang(const ::std::string& value) {
  set_has_lang();
  lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetSuggestionAppDetailRequest.Lang)
}
#if LANG_CXX11
void GetSuggestionAppDetailRequest::set_lang(::std::string&& value) {
  set_has_lang();
  lang_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetSuggestionAppDetailRequest.Lang)
}
#endif
void GetSuggestionAppDetailRequest::set_lang(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_lang();
  lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetSuggestionAppDetailRequest.Lang)
}
void GetSuggestionAppDetailRequest::set_lang(const char* value, size_t size) {
  set_has_lang();
  lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetSuggestionAppDetailRequest.Lang)
}
::std::string* GetSuggestionAppDetailRequest::mutable_lang() {
  set_has_lang();
  // @@protoc_insertion_point(field_mutable:micromsg.GetSuggestionAppDetailRequest.Lang)
  return lang_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetSuggestionAppDetailRequest::release_lang() {
  // @@protoc_insertion_point(field_release:micromsg.GetSuggestionAppDetailRequest.Lang)
  clear_has_lang();
  return lang_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetSuggestionAppDetailRequest::set_allocated_lang(::std::string* lang) {
  if (lang != NULL) {
    set_has_lang();
  } else {
    clear_has_lang();
  }
  lang_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetSuggestionAppDetailRequest.Lang)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetSuggestionAppDetailResponse::kBaseResponseFieldNumber;
const int GetSuggestionAppDetailResponse::kRcDetailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSuggestionAppDetailResponse::GetSuggestionAppDetailResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetSuggestionAppDetailResponse)
}
GetSuggestionAppDetailResponse::GetSuggestionAppDetailResponse(const GetSuggestionAppDetailResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  if (from.has_rcdetail()) {
    rcdetail_ = new ::micromsg::RcAppList(*from.rcdetail_);
  } else {
    rcdetail_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.GetSuggestionAppDetailResponse)
}

void GetSuggestionAppDetailResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&rcdetail_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(rcdetail_));
}

GetSuggestionAppDetailResponse::~GetSuggestionAppDetailResponse() {
  // @@protoc_insertion_point(destructor:micromsg.GetSuggestionAppDetailResponse)
  SharedDtor();
}

void GetSuggestionAppDetailResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
  if (this != internal_default_instance()) {
    delete rcdetail_;
  }
}

void GetSuggestionAppDetailResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSuggestionAppDetailResponse::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetSuggestionAppDetailResponse& GetSuggestionAppDetailResponse::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetSuggestionAppDetailResponse* GetSuggestionAppDetailResponse::New(::google::protobuf::Arena* arena) const {
  GetSuggestionAppDetailResponse* n = new GetSuggestionAppDetailResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetSuggestionAppDetailResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetSuggestionAppDetailResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
    if (has_rcdetail()) {
      GOOGLE_DCHECK(rcdetail_ != NULL);
      rcdetail_->::micromsg::RcAppList::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetSuggestionAppDetailResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetSuggestionAppDetailResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.RcAppList RcDetail = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rcdetail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetSuggestionAppDetailResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetSuggestionAppDetailResponse)
  return false;
#undef DO_
}

void GetSuggestionAppDetailResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetSuggestionAppDetailResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // required .micromsg.RcAppList RcDetail = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->rcdetail_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetSuggestionAppDetailResponse)
}

::google::protobuf::uint8* GetSuggestionAppDetailResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetSuggestionAppDetailResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // required .micromsg.RcAppList RcDetail = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->rcdetail_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetSuggestionAppDetailResponse)
  return target;
}

size_t GetSuggestionAppDetailResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetSuggestionAppDetailResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_rcdetail()) {
    // required .micromsg.RcAppList RcDetail = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rcdetail_);
  }

  return total_size;
}
size_t GetSuggestionAppDetailResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetSuggestionAppDetailResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required .micromsg.RcAppList RcDetail = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rcdetail_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSuggestionAppDetailResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetSuggestionAppDetailResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSuggestionAppDetailResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetSuggestionAppDetailResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetSuggestionAppDetailResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetSuggestionAppDetailResponse)
    MergeFrom(*source);
  }
}

void GetSuggestionAppDetailResponse::MergeFrom(const GetSuggestionAppDetailResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetSuggestionAppDetailResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_rcdetail()->::micromsg::RcAppList::MergeFrom(from.rcdetail());
    }
  }
}

void GetSuggestionAppDetailResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetSuggestionAppDetailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSuggestionAppDetailResponse::CopyFrom(const GetSuggestionAppDetailResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetSuggestionAppDetailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSuggestionAppDetailResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  if (has_rcdetail()) {
    if (!this->rcdetail_->IsInitialized()) return false;
  }
  return true;
}

void GetSuggestionAppDetailResponse::Swap(GetSuggestionAppDetailResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetSuggestionAppDetailResponse::InternalSwap(GetSuggestionAppDetailResponse* other) {
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(rcdetail_, other->rcdetail_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetSuggestionAppDetailResponse::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetSuggestionAppDetailResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool GetSuggestionAppDetailResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetSuggestionAppDetailResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
void GetSuggestionAppDetailResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetSuggestionAppDetailResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& GetSuggestionAppDetailResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppDetailResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* GetSuggestionAppDetailResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetSuggestionAppDetailResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* GetSuggestionAppDetailResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetSuggestionAppDetailResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void GetSuggestionAppDetailResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetSuggestionAppDetailResponse.BaseResponse)
}

// required .micromsg.RcAppList RcDetail = 2;
bool GetSuggestionAppDetailResponse::has_rcdetail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetSuggestionAppDetailResponse::set_has_rcdetail() {
  _has_bits_[0] |= 0x00000002u;
}
void GetSuggestionAppDetailResponse::clear_has_rcdetail() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetSuggestionAppDetailResponse::clear_rcdetail() {
  if (rcdetail_ != NULL) rcdetail_->::micromsg::RcAppList::Clear();
  clear_has_rcdetail();
}
const ::micromsg::RcAppList& GetSuggestionAppDetailResponse::rcdetail() const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppDetailResponse.RcDetail)
  return rcdetail_ != NULL ? *rcdetail_
                         : *::micromsg::RcAppList::internal_default_instance();
}
::micromsg::RcAppList* GetSuggestionAppDetailResponse::mutable_rcdetail() {
  set_has_rcdetail();
  if (rcdetail_ == NULL) {
    rcdetail_ = new ::micromsg::RcAppList;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetSuggestionAppDetailResponse.RcDetail)
  return rcdetail_;
}
::micromsg::RcAppList* GetSuggestionAppDetailResponse::release_rcdetail() {
  // @@protoc_insertion_point(field_release:micromsg.GetSuggestionAppDetailResponse.RcDetail)
  clear_has_rcdetail();
  ::micromsg::RcAppList* temp = rcdetail_;
  rcdetail_ = NULL;
  return temp;
}
void GetSuggestionAppDetailResponse::set_allocated_rcdetail(::micromsg::RcAppList* rcdetail) {
  delete rcdetail_;
  rcdetail_ = rcdetail;
  if (rcdetail) {
    set_has_rcdetail();
  } else {
    clear_has_rcdetail();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetSuggestionAppDetailResponse.RcDetail)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserGameRankInfo::kUserNameFieldNumber;
const int UserGameRankInfo::kScoreFieldNumber;
const int UserGameRankInfo::kRankFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserGameRankInfo::UserGameRankInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.UserGameRankInfo)
}
UserGameRankInfo::UserGameRankInfo(const UserGameRankInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  ::memcpy(&score_, &from.score_,
    reinterpret_cast<char*>(&rank_) -
    reinterpret_cast<char*>(&score_) + sizeof(rank_));
  // @@protoc_insertion_point(copy_constructor:micromsg.UserGameRankInfo)
}

void UserGameRankInfo::SharedCtor() {
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&score_, 0, reinterpret_cast<char*>(&rank_) -
    reinterpret_cast<char*>(&score_) + sizeof(rank_));
}

UserGameRankInfo::~UserGameRankInfo() {
  // @@protoc_insertion_point(destructor:micromsg.UserGameRankInfo)
  SharedDtor();
}

void UserGameRankInfo::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserGameRankInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserGameRankInfo::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserGameRankInfo& UserGameRankInfo::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserGameRankInfo* UserGameRankInfo::New(::google::protobuf::Arena* arena) const {
  UserGameRankInfo* n = new UserGameRankInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserGameRankInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.UserGameRankInfo)
  if (has_username()) {
    GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*username_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&score_, 0, reinterpret_cast<char*>(&rank_) -
      reinterpret_cast<char*>(&score_) + sizeof(rank_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserGameRankInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.UserGameRankInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string UserName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.UserGameRankInfo.UserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Score = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_score();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 Rank = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_rank();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.UserGameRankInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.UserGameRankInfo)
  return false;
#undef DO_
}

void UserGameRankInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.UserGameRankInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string UserName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.UserGameRankInfo.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // required uint32 Score = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->score(), output);
  }

  // optional uint32 Rank = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->rank(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.UserGameRankInfo)
}

::google::protobuf::uint8* UserGameRankInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.UserGameRankInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string UserName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.UserGameRankInfo.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // required uint32 Score = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->score(), target);
  }

  // optional uint32 Rank = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->rank(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.UserGameRankInfo)
  return target;
}

size_t UserGameRankInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.UserGameRankInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint32 Score = 2;
  if (has_score()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->score());
  }
  // optional string UserName = 1;
  if (has_username()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // optional uint32 Rank = 3;
  if (has_rank()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rank());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserGameRankInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.UserGameRankInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const UserGameRankInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserGameRankInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.UserGameRankInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.UserGameRankInfo)
    MergeFrom(*source);
  }
}

void UserGameRankInfo::MergeFrom(const UserGameRankInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.UserGameRankInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000002u) {
      score_ = from.score_;
    }
    if (cached_has_bits & 0x00000004u) {
      rank_ = from.rank_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UserGameRankInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.UserGameRankInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserGameRankInfo::CopyFrom(const UserGameRankInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.UserGameRankInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserGameRankInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void UserGameRankInfo::Swap(UserGameRankInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserGameRankInfo::InternalSwap(UserGameRankInfo* other) {
  username_.Swap(&other->username_);
  std::swap(score_, other->score_);
  std::swap(rank_, other->rank_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserGameRankInfo::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserGameRankInfo

// optional string UserName = 1;
bool UserGameRankInfo::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UserGameRankInfo::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
void UserGameRankInfo::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
void UserGameRankInfo::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& UserGameRankInfo::username() const {
  // @@protoc_insertion_point(field_get:micromsg.UserGameRankInfo.UserName)
  return username_.GetNoArena();
}
void UserGameRankInfo::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.UserGameRankInfo.UserName)
}
#if LANG_CXX11
void UserGameRankInfo::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.UserGameRankInfo.UserName)
}
#endif
void UserGameRankInfo::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.UserGameRankInfo.UserName)
}
void UserGameRankInfo::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.UserGameRankInfo.UserName)
}
::std::string* UserGameRankInfo::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.UserGameRankInfo.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserGameRankInfo::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.UserGameRankInfo.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserGameRankInfo::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.UserGameRankInfo.UserName)
}

// required uint32 Score = 2;
bool UserGameRankInfo::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UserGameRankInfo::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
void UserGameRankInfo::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
void UserGameRankInfo::clear_score() {
  score_ = 0u;
  clear_has_score();
}
::google::protobuf::uint32 UserGameRankInfo::score() const {
  // @@protoc_insertion_point(field_get:micromsg.UserGameRankInfo.Score)
  return score_;
}
void UserGameRankInfo::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:micromsg.UserGameRankInfo.Score)
}

// optional uint32 Rank = 3;
bool UserGameRankInfo::has_rank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void UserGameRankInfo::set_has_rank() {
  _has_bits_[0] |= 0x00000004u;
}
void UserGameRankInfo::clear_has_rank() {
  _has_bits_[0] &= ~0x00000004u;
}
void UserGameRankInfo::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
::google::protobuf::uint32 UserGameRankInfo::rank() const {
  // @@protoc_insertion_point(field_get:micromsg.UserGameRankInfo.Rank)
  return rank_;
}
void UserGameRankInfo::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:micromsg.UserGameRankInfo.Rank)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetGameRankListRequest::kBaseRequestFieldNumber;
const int GetGameRankListRequest::kAppIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetGameRankListRequest::GetGameRankListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetGameRankListRequest)
}
GetGameRankListRequest::GetGameRankListRequest(const GetGameRankListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appid()) {
    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.GetGameRankListRequest)
}

void GetGameRankListRequest::SharedCtor() {
  _cached_size_ = 0;
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  baserequest_ = NULL;
}

GetGameRankListRequest::~GetGameRankListRequest() {
  // @@protoc_insertion_point(destructor:micromsg.GetGameRankListRequest)
  SharedDtor();
}

void GetGameRankListRequest::SharedDtor() {
  appid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void GetGameRankListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetGameRankListRequest::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetGameRankListRequest& GetGameRankListRequest::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetGameRankListRequest* GetGameRankListRequest::New(::google::protobuf::Arena* arena) const {
  GetGameRankListRequest* n = new GetGameRankListRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetGameRankListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetGameRankListRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_appid()) {
      GOOGLE_DCHECK(!appid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appid_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetGameRankListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetGameRankListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appid().data(), this->appid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetGameRankListRequest.AppID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetGameRankListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetGameRankListRequest)
  return false;
#undef DO_
}

void GetGameRankListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetGameRankListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // optional string AppID = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetGameRankListRequest.AppID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetGameRankListRequest)
}

::google::protobuf::uint8* GetGameRankListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetGameRankListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // optional string AppID = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetGameRankListRequest.AppID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetGameRankListRequest)
  return target;
}

size_t GetGameRankListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetGameRankListRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (has_baserequest()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }
  // optional string AppID = 2;
  if (has_appid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetGameRankListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetGameRankListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGameRankListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetGameRankListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetGameRankListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetGameRankListRequest)
    MergeFrom(*source);
  }
}

void GetGameRankListRequest::MergeFrom(const GetGameRankListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetGameRankListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_appid();
      appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
  }
}

void GetGameRankListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetGameRankListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGameRankListRequest::CopyFrom(const GetGameRankListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetGameRankListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGameRankListRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void GetGameRankListRequest::Swap(GetGameRankListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetGameRankListRequest::InternalSwap(GetGameRankListRequest* other) {
  appid_.Swap(&other->appid_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetGameRankListRequest::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetGameRankListRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool GetGameRankListRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetGameRankListRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
void GetGameRankListRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetGameRankListRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& GetGameRankListRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetGameRankListRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* GetGameRankListRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetGameRankListRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* GetGameRankListRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetGameRankListRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void GetGameRankListRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetGameRankListRequest.BaseRequest)
}

// optional string AppID = 2;
bool GetGameRankListRequest::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetGameRankListRequest::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
void GetGameRankListRequest::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetGameRankListRequest::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
const ::std::string& GetGameRankListRequest::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetGameRankListRequest.AppID)
  return appid_.GetNoArena();
}
void GetGameRankListRequest::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetGameRankListRequest.AppID)
}
#if LANG_CXX11
void GetGameRankListRequest::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetGameRankListRequest.AppID)
}
#endif
void GetGameRankListRequest::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetGameRankListRequest.AppID)
}
void GetGameRankListRequest::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetGameRankListRequest.AppID)
}
::std::string* GetGameRankListRequest::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetGameRankListRequest.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetGameRankListRequest::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.GetGameRankListRequest.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetGameRankListRequest::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetGameRankListRequest.AppID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetGameRankListResponse::kBaseResponseFieldNumber;
const int GetGameRankListResponse::kCountFieldNumber;
const int GetGameRankListResponse::kRankListFieldNumber;
const int GetGameRankListResponse::kFriendsCountFieldNumber;
const int GetGameRankListResponse::kHasReportScoreFieldNumber;
const int GetGameRankListResponse::kSYYBFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetGameRankListResponse::GetGameRankListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetGameRankListResponse)
}
GetGameRankListResponse::GetGameRankListResponse(const GetGameRankListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      ranklist_(from.ranklist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  if (from.has_syyb()) {
    syyb_ = new ::micromsg::YYBStruct(*from.syyb_);
  } else {
    syyb_ = NULL;
  }
  ::memcpy(&count_, &from.count_,
    reinterpret_cast<char*>(&hasreportscore_) -
    reinterpret_cast<char*>(&count_) + sizeof(hasreportscore_));
  // @@protoc_insertion_point(copy_constructor:micromsg.GetGameRankListResponse)
}

void GetGameRankListResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&hasreportscore_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(hasreportscore_));
}

GetGameRankListResponse::~GetGameRankListResponse() {
  // @@protoc_insertion_point(destructor:micromsg.GetGameRankListResponse)
  SharedDtor();
}

void GetGameRankListResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
  if (this != internal_default_instance()) {
    delete syyb_;
  }
}

void GetGameRankListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetGameRankListResponse::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetGameRankListResponse& GetGameRankListResponse::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetGameRankListResponse* GetGameRankListResponse::New(::google::protobuf::Arena* arena) const {
  GetGameRankListResponse* n = new GetGameRankListResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetGameRankListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetGameRankListResponse)
  ranklist_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
    if (has_syyb()) {
      GOOGLE_DCHECK(syyb_ != NULL);
      syyb_->::micromsg::YYBStruct::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 28u) {
    ::memset(&count_, 0, reinterpret_cast<char*>(&hasreportscore_) -
      reinterpret_cast<char*>(&count_) + sizeof(hasreportscore_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetGameRankListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetGameRankListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.UserGameRankInfo RankList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_ranklist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 FriendsCount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_friendscount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friendscount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 HasReportScore = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_hasreportscore();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hasreportscore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .micromsg.YYBStruct SYYB = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_syyb()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetGameRankListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetGameRankListResponse)
  return false;
#undef DO_
}

void GetGameRankListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetGameRankListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // required uint32 Count = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  // repeated .micromsg.UserGameRankInfo RankList = 3;
  for (unsigned int i = 0, n = this->ranklist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->ranklist(i), output);
  }

  // optional uint32 FriendsCount = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->friendscount(), output);
  }

  // optional uint32 HasReportScore = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->hasreportscore(), output);
  }

  // optional .micromsg.YYBStruct SYYB = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->syyb_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetGameRankListResponse)
}

::google::protobuf::uint8* GetGameRankListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetGameRankListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // required uint32 Count = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  // repeated .micromsg.UserGameRankInfo RankList = 3;
  for (unsigned int i = 0, n = this->ranklist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->ranklist(i), deterministic, target);
  }

  // optional uint32 FriendsCount = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->friendscount(), target);
  }

  // optional uint32 HasReportScore = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->hasreportscore(), target);
  }

  // optional .micromsg.YYBStruct SYYB = 6;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->syyb_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetGameRankListResponse)
  return target;
}

size_t GetGameRankListResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetGameRankListResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_count()) {
    // required uint32 Count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  return total_size;
}
size_t GetGameRankListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetGameRankListResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required uint32 Count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.UserGameRankInfo RankList = 3;
  {
    unsigned int count = this->ranklist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ranklist(i));
    }
  }

  // optional .micromsg.YYBStruct SYYB = 6;
  if (has_syyb()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->syyb_);
  }

  if (_has_bits_[0 / 32] & 24u) {
    // optional uint32 FriendsCount = 4;
    if (has_friendscount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->friendscount());
    }

    // optional uint32 HasReportScore = 5;
    if (has_hasreportscore()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->hasreportscore());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetGameRankListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetGameRankListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGameRankListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetGameRankListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetGameRankListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetGameRankListResponse)
    MergeFrom(*source);
  }
}

void GetGameRankListResponse::MergeFrom(const GetGameRankListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetGameRankListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ranklist_.MergeFrom(from.ranklist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_syyb()->::micromsg::YYBStruct::MergeFrom(from.syyb());
    }
    if (cached_has_bits & 0x00000004u) {
      count_ = from.count_;
    }
    if (cached_has_bits & 0x00000008u) {
      friendscount_ = from.friendscount_;
    }
    if (cached_has_bits & 0x00000010u) {
      hasreportscore_ = from.hasreportscore_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetGameRankListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetGameRankListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGameRankListResponse::CopyFrom(const GetGameRankListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetGameRankListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGameRankListResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->ranklist())) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void GetGameRankListResponse::Swap(GetGameRankListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetGameRankListResponse::InternalSwap(GetGameRankListResponse* other) {
  ranklist_.InternalSwap(&other->ranklist_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(syyb_, other->syyb_);
  std::swap(count_, other->count_);
  std::swap(friendscount_, other->friendscount_);
  std::swap(hasreportscore_, other->hasreportscore_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetGameRankListResponse::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetGameRankListResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool GetGameRankListResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetGameRankListResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
void GetGameRankListResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetGameRankListResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& GetGameRankListResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetGameRankListResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* GetGameRankListResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetGameRankListResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* GetGameRankListResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetGameRankListResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void GetGameRankListResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetGameRankListResponse.BaseResponse)
}

// required uint32 Count = 2;
bool GetGameRankListResponse::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetGameRankListResponse::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
void GetGameRankListResponse::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetGameRankListResponse::clear_count() {
  count_ = 0u;
  clear_has_count();
}
::google::protobuf::uint32 GetGameRankListResponse::count() const {
  // @@protoc_insertion_point(field_get:micromsg.GetGameRankListResponse.Count)
  return count_;
}
void GetGameRankListResponse::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetGameRankListResponse.Count)
}

// repeated .micromsg.UserGameRankInfo RankList = 3;
int GetGameRankListResponse::ranklist_size() const {
  return ranklist_.size();
}
void GetGameRankListResponse::clear_ranklist() {
  ranklist_.Clear();
}
const ::micromsg::UserGameRankInfo& GetGameRankListResponse::ranklist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetGameRankListResponse.RankList)
  return ranklist_.Get(index);
}
::micromsg::UserGameRankInfo* GetGameRankListResponse::mutable_ranklist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetGameRankListResponse.RankList)
  return ranklist_.Mutable(index);
}
::micromsg::UserGameRankInfo* GetGameRankListResponse::add_ranklist() {
  // @@protoc_insertion_point(field_add:micromsg.GetGameRankListResponse.RankList)
  return ranklist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::UserGameRankInfo >*
GetGameRankListResponse::mutable_ranklist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetGameRankListResponse.RankList)
  return &ranklist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::UserGameRankInfo >&
GetGameRankListResponse::ranklist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetGameRankListResponse.RankList)
  return ranklist_;
}

// optional uint32 FriendsCount = 4;
bool GetGameRankListResponse::has_friendscount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GetGameRankListResponse::set_has_friendscount() {
  _has_bits_[0] |= 0x00000008u;
}
void GetGameRankListResponse::clear_has_friendscount() {
  _has_bits_[0] &= ~0x00000008u;
}
void GetGameRankListResponse::clear_friendscount() {
  friendscount_ = 0u;
  clear_has_friendscount();
}
::google::protobuf::uint32 GetGameRankListResponse::friendscount() const {
  // @@protoc_insertion_point(field_get:micromsg.GetGameRankListResponse.FriendsCount)
  return friendscount_;
}
void GetGameRankListResponse::set_friendscount(::google::protobuf::uint32 value) {
  set_has_friendscount();
  friendscount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetGameRankListResponse.FriendsCount)
}

// optional uint32 HasReportScore = 5;
bool GetGameRankListResponse::has_hasreportscore() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GetGameRankListResponse::set_has_hasreportscore() {
  _has_bits_[0] |= 0x00000010u;
}
void GetGameRankListResponse::clear_has_hasreportscore() {
  _has_bits_[0] &= ~0x00000010u;
}
void GetGameRankListResponse::clear_hasreportscore() {
  hasreportscore_ = 0u;
  clear_has_hasreportscore();
}
::google::protobuf::uint32 GetGameRankListResponse::hasreportscore() const {
  // @@protoc_insertion_point(field_get:micromsg.GetGameRankListResponse.HasReportScore)
  return hasreportscore_;
}
void GetGameRankListResponse::set_hasreportscore(::google::protobuf::uint32 value) {
  set_has_hasreportscore();
  hasreportscore_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetGameRankListResponse.HasReportScore)
}

// optional .micromsg.YYBStruct SYYB = 6;
bool GetGameRankListResponse::has_syyb() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetGameRankListResponse::set_has_syyb() {
  _has_bits_[0] |= 0x00000002u;
}
void GetGameRankListResponse::clear_has_syyb() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetGameRankListResponse::clear_syyb() {
  if (syyb_ != NULL) syyb_->::micromsg::YYBStruct::Clear();
  clear_has_syyb();
}
const ::micromsg::YYBStruct& GetGameRankListResponse::syyb() const {
  // @@protoc_insertion_point(field_get:micromsg.GetGameRankListResponse.SYYB)
  return syyb_ != NULL ? *syyb_
                         : *::micromsg::YYBStruct::internal_default_instance();
}
::micromsg::YYBStruct* GetGameRankListResponse::mutable_syyb() {
  set_has_syyb();
  if (syyb_ == NULL) {
    syyb_ = new ::micromsg::YYBStruct;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetGameRankListResponse.SYYB)
  return syyb_;
}
::micromsg::YYBStruct* GetGameRankListResponse::release_syyb() {
  // @@protoc_insertion_point(field_release:micromsg.GetGameRankListResponse.SYYB)
  clear_has_syyb();
  ::micromsg::YYBStruct* temp = syyb_;
  syyb_ = NULL;
  return temp;
}
void GetGameRankListResponse::set_allocated_syyb(::micromsg::YYBStruct* syyb) {
  delete syyb_;
  syyb_ = syyb;
  if (syyb) {
    set_has_syyb();
  } else {
    clear_has_syyb();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetGameRankListResponse.SYYB)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAppInfoListRequest::kBaseRequestFieldNumber;
const int GetAppInfoListRequest::kCountFieldNumber;
const int GetAppInfoListRequest::kAppIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAppInfoListRequest::GetAppInfoListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetAppInfoListRequest)
}
GetAppInfoListRequest::GetAppInfoListRequest(const GetAppInfoListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      appidlist_(from.appidlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:micromsg.GetAppInfoListRequest)
}

void GetAppInfoListRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(count_));
}

GetAppInfoListRequest::~GetAppInfoListRequest() {
  // @@protoc_insertion_point(destructor:micromsg.GetAppInfoListRequest)
  SharedDtor();
}

void GetAppInfoListRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void GetAppInfoListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAppInfoListRequest::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAppInfoListRequest& GetAppInfoListRequest::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetAppInfoListRequest* GetAppInfoListRequest::New(::google::protobuf::Arena* arena) const {
  GetAppInfoListRequest* n = new GetAppInfoListRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAppInfoListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetAppInfoListRequest)
  appidlist_.Clear();
  if (has_baserequest()) {
    GOOGLE_DCHECK(baserequest_ != NULL);
    baserequest_->::micromsg::BaseRequest::Clear();
  }
  count_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetAppInfoListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetAppInfoListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 Count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.SKBuiltinString_t AppIdList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_appidlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetAppInfoListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetAppInfoListRequest)
  return false;
#undef DO_
}

void GetAppInfoListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetAppInfoListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required int32 Count = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  // repeated .micromsg.SKBuiltinString_t AppIdList = 3;
  for (unsigned int i = 0, n = this->appidlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->appidlist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetAppInfoListRequest)
}

::google::protobuf::uint8* GetAppInfoListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetAppInfoListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required int32 Count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  // repeated .micromsg.SKBuiltinString_t AppIdList = 3;
  for (unsigned int i = 0, n = this->appidlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->appidlist(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetAppInfoListRequest)
  return target;
}

size_t GetAppInfoListRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetAppInfoListRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_count()) {
    // required int32 Count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  return total_size;
}
size_t GetAppInfoListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetAppInfoListRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required int32 Count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.SKBuiltinString_t AppIdList = 3;
  {
    unsigned int count = this->appidlist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->appidlist(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAppInfoListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetAppInfoListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAppInfoListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAppInfoListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetAppInfoListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetAppInfoListRequest)
    MergeFrom(*source);
  }
}

void GetAppInfoListRequest::MergeFrom(const GetAppInfoListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetAppInfoListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  appidlist_.MergeFrom(from.appidlist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000002u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetAppInfoListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetAppInfoListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAppInfoListRequest::CopyFrom(const GetAppInfoListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetAppInfoListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAppInfoListRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void GetAppInfoListRequest::Swap(GetAppInfoListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAppInfoListRequest::InternalSwap(GetAppInfoListRequest* other) {
  appidlist_.InternalSwap(&other->appidlist_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(count_, other->count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAppInfoListRequest::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetAppInfoListRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool GetAppInfoListRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetAppInfoListRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
void GetAppInfoListRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetAppInfoListRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& GetAppInfoListRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppInfoListRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* GetAppInfoListRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppInfoListRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* GetAppInfoListRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetAppInfoListRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void GetAppInfoListRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAppInfoListRequest.BaseRequest)
}

// required int32 Count = 2;
bool GetAppInfoListRequest::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetAppInfoListRequest::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
void GetAppInfoListRequest::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetAppInfoListRequest::clear_count() {
  count_ = 0;
  clear_has_count();
}
::google::protobuf::int32 GetAppInfoListRequest::count() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppInfoListRequest.Count)
  return count_;
}
void GetAppInfoListRequest::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetAppInfoListRequest.Count)
}

// repeated .micromsg.SKBuiltinString_t AppIdList = 3;
int GetAppInfoListRequest::appidlist_size() const {
  return appidlist_.size();
}
void GetAppInfoListRequest::clear_appidlist() {
  appidlist_.Clear();
}
const ::micromsg::SKBuiltinString_t& GetAppInfoListRequest::appidlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppInfoListRequest.AppIdList)
  return appidlist_.Get(index);
}
::micromsg::SKBuiltinString_t* GetAppInfoListRequest::mutable_appidlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppInfoListRequest.AppIdList)
  return appidlist_.Mutable(index);
}
::micromsg::SKBuiltinString_t* GetAppInfoListRequest::add_appidlist() {
  // @@protoc_insertion_point(field_add:micromsg.GetAppInfoListRequest.AppIdList)
  return appidlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
GetAppInfoListRequest::mutable_appidlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetAppInfoListRequest.AppIdList)
  return &appidlist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
GetAppInfoListRequest::appidlist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetAppInfoListRequest.AppIdList)
  return appidlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BizAppInfo::kAppIdFieldNumber;
const int BizAppInfo::kNameFieldNumber;
const int BizAppInfo::kDescriptionFieldNumber;
const int BizAppInfo::kName4EnUSFieldNumber;
const int BizAppInfo::kDescription4EnUSFieldNumber;
const int BizAppInfo::kName4ZhTWFieldNumber;
const int BizAppInfo::kDescription4ZhTWFieldNumber;
const int BizAppInfo::kIconUrlSDFieldNumber;
const int BizAppInfo::kIconUrlHDFieldNumber;
const int BizAppInfo::kStoreUrlFieldNumber;
const int BizAppInfo::kWatermarkUrlFieldNumber;
const int BizAppInfo::kAndroidPackageNameFieldNumber;
const int BizAppInfo::kAndroidSignatureFieldNumber;
const int BizAppInfo::kAppTypeFieldNumber;
const int BizAppInfo::kDevInfoFieldNumber;
const int BizAppInfo::kAppInfoFlagFieldNumber;
const int BizAppInfo::kAppVersionFieldNumber;
const int BizAppInfo::kAppUpdateVersionFieldNumber;
const int BizAppInfo::kIconUrlMDPIFieldNumber;
const int BizAppInfo::kDownloadUrlFieldNumber;
const int BizAppInfo::kDownloadUrlMd5FieldNumber;
const int BizAppInfo::kGooglePlayDownloadUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BizAppInfo::BizAppInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.BizAppInfo)
}
BizAppInfo::BizAppInfo(const BizAppInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appid()) {
    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  name4enus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name4enus()) {
    name4enus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name4enus_);
  }
  description4enus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description4enus()) {
    description4enus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description4enus_);
  }
  name4zhtw_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name4zhtw()) {
    name4zhtw_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name4zhtw_);
  }
  description4zhtw_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description4zhtw()) {
    description4zhtw_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description4zhtw_);
  }
  iconurlsd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_iconurlsd()) {
    iconurlsd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iconurlsd_);
  }
  iconurlhd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_iconurlhd()) {
    iconurlhd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iconurlhd_);
  }
  storeurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_storeurl()) {
    storeurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.storeurl_);
  }
  watermarkurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_watermarkurl()) {
    watermarkurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.watermarkurl_);
  }
  androidpackagename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_androidpackagename()) {
    androidpackagename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.androidpackagename_);
  }
  androidsignature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_androidsignature()) {
    androidsignature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.androidsignature_);
  }
  apptype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_apptype()) {
    apptype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apptype_);
  }
  devinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_devinfo()) {
    devinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devinfo_);
  }
  iconurlmdpi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_iconurlmdpi()) {
    iconurlmdpi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iconurlmdpi_);
  }
  downloadurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_downloadurl()) {
    downloadurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.downloadurl_);
  }
  downloadurlmd5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_downloadurlmd5()) {
    downloadurlmd5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.downloadurlmd5_);
  }
  googleplaydownloadurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_googleplaydownloadurl()) {
    googleplaydownloadurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.googleplaydownloadurl_);
  }
  ::memcpy(&appinfoflag_, &from.appinfoflag_,
    reinterpret_cast<char*>(&appupdateversion_) -
    reinterpret_cast<char*>(&appinfoflag_) + sizeof(appupdateversion_));
  // @@protoc_insertion_point(copy_constructor:micromsg.BizAppInfo)
}

void BizAppInfo::SharedCtor() {
  _cached_size_ = 0;
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name4enus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description4enus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name4zhtw_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description4zhtw_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iconurlsd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iconurlhd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  storeurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  watermarkurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  androidpackagename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  androidsignature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apptype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iconurlmdpi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  downloadurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  downloadurlmd5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  googleplaydownloadurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&appinfoflag_, 0, reinterpret_cast<char*>(&appupdateversion_) -
    reinterpret_cast<char*>(&appinfoflag_) + sizeof(appupdateversion_));
}

BizAppInfo::~BizAppInfo() {
  // @@protoc_insertion_point(destructor:micromsg.BizAppInfo)
  SharedDtor();
}

void BizAppInfo::SharedDtor() {
  appid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name4enus_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description4enus_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name4zhtw_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description4zhtw_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iconurlsd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iconurlhd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  storeurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  watermarkurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  androidpackagename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  androidsignature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apptype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iconurlmdpi_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  downloadurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  downloadurlmd5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  googleplaydownloadurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BizAppInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BizAppInfo::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BizAppInfo& BizAppInfo::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

BizAppInfo* BizAppInfo::New(::google::protobuf::Arena* arena) const {
  BizAppInfo* n = new BizAppInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BizAppInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.BizAppInfo)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_appid()) {
      GOOGLE_DCHECK(!appid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appid_.UnsafeRawStringPointer())->clear();
    }
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_description()) {
      GOOGLE_DCHECK(!description_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*description_.UnsafeRawStringPointer())->clear();
    }
    if (has_name4enus()) {
      GOOGLE_DCHECK(!name4enus_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name4enus_.UnsafeRawStringPointer())->clear();
    }
    if (has_description4enus()) {
      GOOGLE_DCHECK(!description4enus_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*description4enus_.UnsafeRawStringPointer())->clear();
    }
    if (has_name4zhtw()) {
      GOOGLE_DCHECK(!name4zhtw_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name4zhtw_.UnsafeRawStringPointer())->clear();
    }
    if (has_description4zhtw()) {
      GOOGLE_DCHECK(!description4zhtw_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*description4zhtw_.UnsafeRawStringPointer())->clear();
    }
    if (has_iconurlsd()) {
      GOOGLE_DCHECK(!iconurlsd_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*iconurlsd_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[8 / 32] & 65280u) {
    if (has_iconurlhd()) {
      GOOGLE_DCHECK(!iconurlhd_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*iconurlhd_.UnsafeRawStringPointer())->clear();
    }
    if (has_storeurl()) {
      GOOGLE_DCHECK(!storeurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*storeurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_watermarkurl()) {
      GOOGLE_DCHECK(!watermarkurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*watermarkurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_androidpackagename()) {
      GOOGLE_DCHECK(!androidpackagename_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*androidpackagename_.UnsafeRawStringPointer())->clear();
    }
    if (has_androidsignature()) {
      GOOGLE_DCHECK(!androidsignature_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*androidsignature_.UnsafeRawStringPointer())->clear();
    }
    if (has_apptype()) {
      GOOGLE_DCHECK(!apptype_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*apptype_.UnsafeRawStringPointer())->clear();
    }
    if (has_devinfo()) {
      GOOGLE_DCHECK(!devinfo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*devinfo_.UnsafeRawStringPointer())->clear();
    }
    if (has_iconurlmdpi()) {
      GOOGLE_DCHECK(!iconurlmdpi_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*iconurlmdpi_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[16 / 32] & 458752u) {
    if (has_downloadurl()) {
      GOOGLE_DCHECK(!downloadurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*downloadurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_downloadurlmd5()) {
      GOOGLE_DCHECK(!downloadurlmd5_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*downloadurlmd5_.UnsafeRawStringPointer())->clear();
    }
    if (has_googleplaydownloadurl()) {
      GOOGLE_DCHECK(!googleplaydownloadurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*googleplaydownloadurl_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[16 / 32] & 3670016u) {
    ::memset(&appinfoflag_, 0, reinterpret_cast<char*>(&appupdateversion_) -
      reinterpret_cast<char*>(&appinfoflag_) + sizeof(appupdateversion_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BizAppInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.BizAppInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string AppId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appid().data(), this->appid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.BizAppInfo.AppId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.BizAppInfo.Name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.BizAppInfo.Description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Name4EnUS = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name4enus()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name4enus().data(), this->name4enus().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.BizAppInfo.Name4EnUS");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Description4EnUS = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description4enus()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description4enus().data(), this->description4enus().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.BizAppInfo.Description4EnUS");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Name4ZhTW = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name4zhtw()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name4zhtw().data(), this->name4zhtw().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.BizAppInfo.Name4ZhTW");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Description4ZhTW = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description4zhtw()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description4zhtw().data(), this->description4zhtw().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.BizAppInfo.Description4ZhTW");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string IconUrlSD = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_iconurlsd()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->iconurlsd().data(), this->iconurlsd().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.BizAppInfo.IconUrlSD");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string IconUrlHD = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_iconurlhd()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->iconurlhd().data(), this->iconurlhd().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.BizAppInfo.IconUrlHD");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string StoreUrl = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_storeurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->storeurl().data(), this->storeurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.BizAppInfo.StoreUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string WatermarkUrl = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_watermarkurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->watermarkurl().data(), this->watermarkurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.BizAppInfo.WatermarkUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AndroidPackageName = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_androidpackagename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->androidpackagename().data(), this->androidpackagename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.BizAppInfo.AndroidPackageName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AndroidSignature = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_androidsignature()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->androidsignature().data(), this->androidsignature().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.BizAppInfo.AndroidSignature");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppType = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apptype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->apptype().data(), this->apptype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.BizAppInfo.AppType");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string DevInfo = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->devinfo().data(), this->devinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.BizAppInfo.DevInfo");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 AppInfoFlag = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {
          set_has_appinfoflag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appinfoflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 AppVersion = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u)) {
          set_has_appversion();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appversion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 AppUpdateVersion = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u)) {
          set_has_appupdateversion();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appupdateversion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string IconUrlMDPI = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_iconurlmdpi()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->iconurlmdpi().data(), this->iconurlmdpi().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.BizAppInfo.IconUrlMDPI");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string DownloadUrl = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_downloadurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->downloadurl().data(), this->downloadurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.BizAppInfo.DownloadUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string DownloadUrlMd5 = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_downloadurlmd5()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->downloadurlmd5().data(), this->downloadurlmd5().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.BizAppInfo.DownloadUrlMd5");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string GooglePlayDownloadUrl = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_googleplaydownloadurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->googleplaydownloadurl().data(), this->googleplaydownloadurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.BizAppInfo.GooglePlayDownloadUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.BizAppInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.BizAppInfo)
  return false;
#undef DO_
}

void BizAppInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.BizAppInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string AppId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.AppId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appid(), output);
  }

  // optional string Name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string Description = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.Description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // optional string Name4EnUS = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name4enus().data(), this->name4enus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.Name4EnUS");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name4enus(), output);
  }

  // optional string Description4EnUS = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description4enus().data(), this->description4enus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.Description4EnUS");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->description4enus(), output);
  }

  // optional string Name4ZhTW = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name4zhtw().data(), this->name4zhtw().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.Name4ZhTW");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name4zhtw(), output);
  }

  // optional string Description4ZhTW = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description4zhtw().data(), this->description4zhtw().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.Description4ZhTW");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->description4zhtw(), output);
  }

  // optional string IconUrlSD = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->iconurlsd().data(), this->iconurlsd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.IconUrlSD");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->iconurlsd(), output);
  }

  // optional string IconUrlHD = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->iconurlhd().data(), this->iconurlhd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.IconUrlHD");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->iconurlhd(), output);
  }

  // optional string StoreUrl = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->storeurl().data(), this->storeurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.StoreUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->storeurl(), output);
  }

  // optional string WatermarkUrl = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->watermarkurl().data(), this->watermarkurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.WatermarkUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->watermarkurl(), output);
  }

  // optional string AndroidPackageName = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->androidpackagename().data(), this->androidpackagename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.AndroidPackageName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->androidpackagename(), output);
  }

  // optional string AndroidSignature = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->androidsignature().data(), this->androidsignature().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.AndroidSignature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->androidsignature(), output);
  }

  // optional string AppType = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->apptype().data(), this->apptype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.AppType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->apptype(), output);
  }

  // optional string DevInfo = 15;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->devinfo().data(), this->devinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.DevInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->devinfo(), output);
  }

  // required uint32 AppInfoFlag = 16;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->appinfoflag(), output);
  }

  // required uint32 AppVersion = 17;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->appversion(), output);
  }

  // optional uint32 AppUpdateVersion = 18;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->appupdateversion(), output);
  }

  // optional string IconUrlMDPI = 19;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->iconurlmdpi().data(), this->iconurlmdpi().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.IconUrlMDPI");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->iconurlmdpi(), output);
  }

  // optional string DownloadUrl = 20;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->downloadurl().data(), this->downloadurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.DownloadUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->downloadurl(), output);
  }

  // optional string DownloadUrlMd5 = 21;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->downloadurlmd5().data(), this->downloadurlmd5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.DownloadUrlMd5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->downloadurlmd5(), output);
  }

  // optional string GooglePlayDownloadUrl = 22;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->googleplaydownloadurl().data(), this->googleplaydownloadurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.GooglePlayDownloadUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->googleplaydownloadurl(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.BizAppInfo)
}

::google::protobuf::uint8* BizAppInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.BizAppInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string AppId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.AppId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appid(), target);
  }

  // optional string Name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string Description = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.Description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // optional string Name4EnUS = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name4enus().data(), this->name4enus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.Name4EnUS");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name4enus(), target);
  }

  // optional string Description4EnUS = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description4enus().data(), this->description4enus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.Description4EnUS");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->description4enus(), target);
  }

  // optional string Name4ZhTW = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name4zhtw().data(), this->name4zhtw().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.Name4ZhTW");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name4zhtw(), target);
  }

  // optional string Description4ZhTW = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description4zhtw().data(), this->description4zhtw().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.Description4ZhTW");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->description4zhtw(), target);
  }

  // optional string IconUrlSD = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->iconurlsd().data(), this->iconurlsd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.IconUrlSD");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->iconurlsd(), target);
  }

  // optional string IconUrlHD = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->iconurlhd().data(), this->iconurlhd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.IconUrlHD");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->iconurlhd(), target);
  }

  // optional string StoreUrl = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->storeurl().data(), this->storeurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.StoreUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->storeurl(), target);
  }

  // optional string WatermarkUrl = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->watermarkurl().data(), this->watermarkurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.WatermarkUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->watermarkurl(), target);
  }

  // optional string AndroidPackageName = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->androidpackagename().data(), this->androidpackagename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.AndroidPackageName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->androidpackagename(), target);
  }

  // optional string AndroidSignature = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->androidsignature().data(), this->androidsignature().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.AndroidSignature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->androidsignature(), target);
  }

  // optional string AppType = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->apptype().data(), this->apptype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.AppType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->apptype(), target);
  }

  // optional string DevInfo = 15;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->devinfo().data(), this->devinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.DevInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->devinfo(), target);
  }

  // required uint32 AppInfoFlag = 16;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->appinfoflag(), target);
  }

  // required uint32 AppVersion = 17;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->appversion(), target);
  }

  // optional uint32 AppUpdateVersion = 18;
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->appupdateversion(), target);
  }

  // optional string IconUrlMDPI = 19;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->iconurlmdpi().data(), this->iconurlmdpi().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.IconUrlMDPI");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->iconurlmdpi(), target);
  }

  // optional string DownloadUrl = 20;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->downloadurl().data(), this->downloadurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.DownloadUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->downloadurl(), target);
  }

  // optional string DownloadUrlMd5 = 21;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->downloadurlmd5().data(), this->downloadurlmd5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.DownloadUrlMd5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->downloadurlmd5(), target);
  }

  // optional string GooglePlayDownloadUrl = 22;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->googleplaydownloadurl().data(), this->googleplaydownloadurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.BizAppInfo.GooglePlayDownloadUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->googleplaydownloadurl(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.BizAppInfo)
  return target;
}

size_t BizAppInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.BizAppInfo)
  size_t total_size = 0;

  if (has_appinfoflag()) {
    // required uint32 AppInfoFlag = 16;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->appinfoflag());
  }

  if (has_appversion()) {
    // required uint32 AppVersion = 17;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->appversion());
  }

  return total_size;
}
size_t BizAppInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.BizAppInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00180000) ^ 0x00180000) == 0) {  // All required fields are present.
    // required uint32 AppInfoFlag = 16;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->appinfoflag());

    // required uint32 AppVersion = 17;
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->appversion());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string AppId = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appid());
    }

    // optional string Name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string Description = 3;
    if (has_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }

    // optional string Name4EnUS = 4;
    if (has_name4enus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name4enus());
    }

    // optional string Description4EnUS = 5;
    if (has_description4enus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description4enus());
    }

    // optional string Name4ZhTW = 6;
    if (has_name4zhtw()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name4zhtw());
    }

    // optional string Description4ZhTW = 7;
    if (has_description4zhtw()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description4zhtw());
    }

    // optional string IconUrlSD = 8;
    if (has_iconurlsd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->iconurlsd());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional string IconUrlHD = 9;
    if (has_iconurlhd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->iconurlhd());
    }

    // optional string StoreUrl = 10;
    if (has_storeurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->storeurl());
    }

    // optional string WatermarkUrl = 11;
    if (has_watermarkurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->watermarkurl());
    }

    // optional string AndroidPackageName = 12;
    if (has_androidpackagename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->androidpackagename());
    }

    // optional string AndroidSignature = 13;
    if (has_androidsignature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->androidsignature());
    }

    // optional string AppType = 14;
    if (has_apptype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->apptype());
    }

    // optional string DevInfo = 15;
    if (has_devinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->devinfo());
    }

    // optional string IconUrlMDPI = 19;
    if (has_iconurlmdpi()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->iconurlmdpi());
    }

  }
  if (_has_bits_[16 / 32] & 458752u) {
    // optional string DownloadUrl = 20;
    if (has_downloadurl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->downloadurl());
    }

    // optional string DownloadUrlMd5 = 21;
    if (has_downloadurlmd5()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->downloadurlmd5());
    }

    // optional string GooglePlayDownloadUrl = 22;
    if (has_googleplaydownloadurl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->googleplaydownloadurl());
    }

  }
  // optional uint32 AppUpdateVersion = 18;
  if (has_appupdateversion()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->appupdateversion());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BizAppInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.BizAppInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const BizAppInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BizAppInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.BizAppInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.BizAppInfo)
    MergeFrom(*source);
  }
}

void BizAppInfo::MergeFrom(const BizAppInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.BizAppInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_appid();
      appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_description();
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_name4enus();
      name4enus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name4enus_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_description4enus();
      description4enus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description4enus_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_name4zhtw();
      name4zhtw_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name4zhtw_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_description4zhtw();
      description4zhtw_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description4zhtw_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_iconurlsd();
      iconurlsd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iconurlsd_);
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_iconurlhd();
      iconurlhd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iconurlhd_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has_storeurl();
      storeurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.storeurl_);
    }
    if (cached_has_bits & 0x00000400u) {
      set_has_watermarkurl();
      watermarkurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.watermarkurl_);
    }
    if (cached_has_bits & 0x00000800u) {
      set_has_androidpackagename();
      androidpackagename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.androidpackagename_);
    }
    if (cached_has_bits & 0x00001000u) {
      set_has_androidsignature();
      androidsignature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.androidsignature_);
    }
    if (cached_has_bits & 0x00002000u) {
      set_has_apptype();
      apptype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apptype_);
    }
    if (cached_has_bits & 0x00004000u) {
      set_has_devinfo();
      devinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devinfo_);
    }
    if (cached_has_bits & 0x00008000u) {
      set_has_iconurlmdpi();
      iconurlmdpi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iconurlmdpi_);
    }
  }
  if (cached_has_bits & 4128768u) {
    if (cached_has_bits & 0x00010000u) {
      set_has_downloadurl();
      downloadurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.downloadurl_);
    }
    if (cached_has_bits & 0x00020000u) {
      set_has_downloadurlmd5();
      downloadurlmd5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.downloadurlmd5_);
    }
    if (cached_has_bits & 0x00040000u) {
      set_has_googleplaydownloadurl();
      googleplaydownloadurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.googleplaydownloadurl_);
    }
    if (cached_has_bits & 0x00080000u) {
      appinfoflag_ = from.appinfoflag_;
    }
    if (cached_has_bits & 0x00100000u) {
      appversion_ = from.appversion_;
    }
    if (cached_has_bits & 0x00200000u) {
      appupdateversion_ = from.appupdateversion_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BizAppInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.BizAppInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BizAppInfo::CopyFrom(const BizAppInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.BizAppInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BizAppInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00180000) != 0x00180000) return false;
  return true;
}

void BizAppInfo::Swap(BizAppInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BizAppInfo::InternalSwap(BizAppInfo* other) {
  appid_.Swap(&other->appid_);
  name_.Swap(&other->name_);
  description_.Swap(&other->description_);
  name4enus_.Swap(&other->name4enus_);
  description4enus_.Swap(&other->description4enus_);
  name4zhtw_.Swap(&other->name4zhtw_);
  description4zhtw_.Swap(&other->description4zhtw_);
  iconurlsd_.Swap(&other->iconurlsd_);
  iconurlhd_.Swap(&other->iconurlhd_);
  storeurl_.Swap(&other->storeurl_);
  watermarkurl_.Swap(&other->watermarkurl_);
  androidpackagename_.Swap(&other->androidpackagename_);
  androidsignature_.Swap(&other->androidsignature_);
  apptype_.Swap(&other->apptype_);
  devinfo_.Swap(&other->devinfo_);
  iconurlmdpi_.Swap(&other->iconurlmdpi_);
  downloadurl_.Swap(&other->downloadurl_);
  downloadurlmd5_.Swap(&other->downloadurlmd5_);
  googleplaydownloadurl_.Swap(&other->googleplaydownloadurl_);
  std::swap(appinfoflag_, other->appinfoflag_);
  std::swap(appversion_, other->appversion_);
  std::swap(appupdateversion_, other->appupdateversion_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BizAppInfo::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BizAppInfo

// optional string AppId = 1;
bool BizAppInfo::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BizAppInfo::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
void BizAppInfo::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
void BizAppInfo::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
const ::std::string& BizAppInfo::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.AppId)
  return appid_.GetNoArena();
}
void BizAppInfo::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.AppId)
}
#if LANG_CXX11
void BizAppInfo::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.AppId)
}
#endif
void BizAppInfo::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.AppId)
}
void BizAppInfo::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.AppId)
}
::std::string* BizAppInfo::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.AppId)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppInfo::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.AppId)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppInfo::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.AppId)
}

// optional string Name = 2;
bool BizAppInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BizAppInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void BizAppInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void BizAppInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& BizAppInfo::name() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.Name)
  return name_.GetNoArena();
}
void BizAppInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.Name)
}
#if LANG_CXX11
void BizAppInfo::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.Name)
}
#endif
void BizAppInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.Name)
}
void BizAppInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.Name)
}
::std::string* BizAppInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppInfo::release_name() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.Name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.Name)
}

// optional string Description = 3;
bool BizAppInfo::has_description() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BizAppInfo::set_has_description() {
  _has_bits_[0] |= 0x00000004u;
}
void BizAppInfo::clear_has_description() {
  _has_bits_[0] &= ~0x00000004u;
}
void BizAppInfo::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
const ::std::string& BizAppInfo::description() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.Description)
  return description_.GetNoArena();
}
void BizAppInfo::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.Description)
}
#if LANG_CXX11
void BizAppInfo::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.Description)
}
#endif
void BizAppInfo::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.Description)
}
void BizAppInfo::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.Description)
}
::std::string* BizAppInfo::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.Description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppInfo::release_description() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.Description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppInfo::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.Description)
}

// optional string Name4EnUS = 4;
bool BizAppInfo::has_name4enus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void BizAppInfo::set_has_name4enus() {
  _has_bits_[0] |= 0x00000008u;
}
void BizAppInfo::clear_has_name4enus() {
  _has_bits_[0] &= ~0x00000008u;
}
void BizAppInfo::clear_name4enus() {
  name4enus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name4enus();
}
const ::std::string& BizAppInfo::name4enus() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.Name4EnUS)
  return name4enus_.GetNoArena();
}
void BizAppInfo::set_name4enus(const ::std::string& value) {
  set_has_name4enus();
  name4enus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.Name4EnUS)
}
#if LANG_CXX11
void BizAppInfo::set_name4enus(::std::string&& value) {
  set_has_name4enus();
  name4enus_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.Name4EnUS)
}
#endif
void BizAppInfo::set_name4enus(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name4enus();
  name4enus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.Name4EnUS)
}
void BizAppInfo::set_name4enus(const char* value, size_t size) {
  set_has_name4enus();
  name4enus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.Name4EnUS)
}
::std::string* BizAppInfo::mutable_name4enus() {
  set_has_name4enus();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.Name4EnUS)
  return name4enus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppInfo::release_name4enus() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.Name4EnUS)
  clear_has_name4enus();
  return name4enus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppInfo::set_allocated_name4enus(::std::string* name4enus) {
  if (name4enus != NULL) {
    set_has_name4enus();
  } else {
    clear_has_name4enus();
  }
  name4enus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name4enus);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.Name4EnUS)
}

// optional string Description4EnUS = 5;
bool BizAppInfo::has_description4enus() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void BizAppInfo::set_has_description4enus() {
  _has_bits_[0] |= 0x00000010u;
}
void BizAppInfo::clear_has_description4enus() {
  _has_bits_[0] &= ~0x00000010u;
}
void BizAppInfo::clear_description4enus() {
  description4enus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description4enus();
}
const ::std::string& BizAppInfo::description4enus() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.Description4EnUS)
  return description4enus_.GetNoArena();
}
void BizAppInfo::set_description4enus(const ::std::string& value) {
  set_has_description4enus();
  description4enus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.Description4EnUS)
}
#if LANG_CXX11
void BizAppInfo::set_description4enus(::std::string&& value) {
  set_has_description4enus();
  description4enus_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.Description4EnUS)
}
#endif
void BizAppInfo::set_description4enus(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description4enus();
  description4enus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.Description4EnUS)
}
void BizAppInfo::set_description4enus(const char* value, size_t size) {
  set_has_description4enus();
  description4enus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.Description4EnUS)
}
::std::string* BizAppInfo::mutable_description4enus() {
  set_has_description4enus();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.Description4EnUS)
  return description4enus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppInfo::release_description4enus() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.Description4EnUS)
  clear_has_description4enus();
  return description4enus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppInfo::set_allocated_description4enus(::std::string* description4enus) {
  if (description4enus != NULL) {
    set_has_description4enus();
  } else {
    clear_has_description4enus();
  }
  description4enus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description4enus);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.Description4EnUS)
}

// optional string Name4ZhTW = 6;
bool BizAppInfo::has_name4zhtw() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void BizAppInfo::set_has_name4zhtw() {
  _has_bits_[0] |= 0x00000020u;
}
void BizAppInfo::clear_has_name4zhtw() {
  _has_bits_[0] &= ~0x00000020u;
}
void BizAppInfo::clear_name4zhtw() {
  name4zhtw_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name4zhtw();
}
const ::std::string& BizAppInfo::name4zhtw() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.Name4ZhTW)
  return name4zhtw_.GetNoArena();
}
void BizAppInfo::set_name4zhtw(const ::std::string& value) {
  set_has_name4zhtw();
  name4zhtw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.Name4ZhTW)
}
#if LANG_CXX11
void BizAppInfo::set_name4zhtw(::std::string&& value) {
  set_has_name4zhtw();
  name4zhtw_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.Name4ZhTW)
}
#endif
void BizAppInfo::set_name4zhtw(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name4zhtw();
  name4zhtw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.Name4ZhTW)
}
void BizAppInfo::set_name4zhtw(const char* value, size_t size) {
  set_has_name4zhtw();
  name4zhtw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.Name4ZhTW)
}
::std::string* BizAppInfo::mutable_name4zhtw() {
  set_has_name4zhtw();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.Name4ZhTW)
  return name4zhtw_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppInfo::release_name4zhtw() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.Name4ZhTW)
  clear_has_name4zhtw();
  return name4zhtw_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppInfo::set_allocated_name4zhtw(::std::string* name4zhtw) {
  if (name4zhtw != NULL) {
    set_has_name4zhtw();
  } else {
    clear_has_name4zhtw();
  }
  name4zhtw_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name4zhtw);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.Name4ZhTW)
}

// optional string Description4ZhTW = 7;
bool BizAppInfo::has_description4zhtw() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void BizAppInfo::set_has_description4zhtw() {
  _has_bits_[0] |= 0x00000040u;
}
void BizAppInfo::clear_has_description4zhtw() {
  _has_bits_[0] &= ~0x00000040u;
}
void BizAppInfo::clear_description4zhtw() {
  description4zhtw_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description4zhtw();
}
const ::std::string& BizAppInfo::description4zhtw() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.Description4ZhTW)
  return description4zhtw_.GetNoArena();
}
void BizAppInfo::set_description4zhtw(const ::std::string& value) {
  set_has_description4zhtw();
  description4zhtw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.Description4ZhTW)
}
#if LANG_CXX11
void BizAppInfo::set_description4zhtw(::std::string&& value) {
  set_has_description4zhtw();
  description4zhtw_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.Description4ZhTW)
}
#endif
void BizAppInfo::set_description4zhtw(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description4zhtw();
  description4zhtw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.Description4ZhTW)
}
void BizAppInfo::set_description4zhtw(const char* value, size_t size) {
  set_has_description4zhtw();
  description4zhtw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.Description4ZhTW)
}
::std::string* BizAppInfo::mutable_description4zhtw() {
  set_has_description4zhtw();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.Description4ZhTW)
  return description4zhtw_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppInfo::release_description4zhtw() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.Description4ZhTW)
  clear_has_description4zhtw();
  return description4zhtw_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppInfo::set_allocated_description4zhtw(::std::string* description4zhtw) {
  if (description4zhtw != NULL) {
    set_has_description4zhtw();
  } else {
    clear_has_description4zhtw();
  }
  description4zhtw_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description4zhtw);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.Description4ZhTW)
}

// optional string IconUrlSD = 8;
bool BizAppInfo::has_iconurlsd() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void BizAppInfo::set_has_iconurlsd() {
  _has_bits_[0] |= 0x00000080u;
}
void BizAppInfo::clear_has_iconurlsd() {
  _has_bits_[0] &= ~0x00000080u;
}
void BizAppInfo::clear_iconurlsd() {
  iconurlsd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_iconurlsd();
}
const ::std::string& BizAppInfo::iconurlsd() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.IconUrlSD)
  return iconurlsd_.GetNoArena();
}
void BizAppInfo::set_iconurlsd(const ::std::string& value) {
  set_has_iconurlsd();
  iconurlsd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.IconUrlSD)
}
#if LANG_CXX11
void BizAppInfo::set_iconurlsd(::std::string&& value) {
  set_has_iconurlsd();
  iconurlsd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.IconUrlSD)
}
#endif
void BizAppInfo::set_iconurlsd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_iconurlsd();
  iconurlsd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.IconUrlSD)
}
void BizAppInfo::set_iconurlsd(const char* value, size_t size) {
  set_has_iconurlsd();
  iconurlsd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.IconUrlSD)
}
::std::string* BizAppInfo::mutable_iconurlsd() {
  set_has_iconurlsd();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.IconUrlSD)
  return iconurlsd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppInfo::release_iconurlsd() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.IconUrlSD)
  clear_has_iconurlsd();
  return iconurlsd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppInfo::set_allocated_iconurlsd(::std::string* iconurlsd) {
  if (iconurlsd != NULL) {
    set_has_iconurlsd();
  } else {
    clear_has_iconurlsd();
  }
  iconurlsd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), iconurlsd);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.IconUrlSD)
}

// optional string IconUrlHD = 9;
bool BizAppInfo::has_iconurlhd() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void BizAppInfo::set_has_iconurlhd() {
  _has_bits_[0] |= 0x00000100u;
}
void BizAppInfo::clear_has_iconurlhd() {
  _has_bits_[0] &= ~0x00000100u;
}
void BizAppInfo::clear_iconurlhd() {
  iconurlhd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_iconurlhd();
}
const ::std::string& BizAppInfo::iconurlhd() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.IconUrlHD)
  return iconurlhd_.GetNoArena();
}
void BizAppInfo::set_iconurlhd(const ::std::string& value) {
  set_has_iconurlhd();
  iconurlhd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.IconUrlHD)
}
#if LANG_CXX11
void BizAppInfo::set_iconurlhd(::std::string&& value) {
  set_has_iconurlhd();
  iconurlhd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.IconUrlHD)
}
#endif
void BizAppInfo::set_iconurlhd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_iconurlhd();
  iconurlhd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.IconUrlHD)
}
void BizAppInfo::set_iconurlhd(const char* value, size_t size) {
  set_has_iconurlhd();
  iconurlhd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.IconUrlHD)
}
::std::string* BizAppInfo::mutable_iconurlhd() {
  set_has_iconurlhd();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.IconUrlHD)
  return iconurlhd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppInfo::release_iconurlhd() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.IconUrlHD)
  clear_has_iconurlhd();
  return iconurlhd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppInfo::set_allocated_iconurlhd(::std::string* iconurlhd) {
  if (iconurlhd != NULL) {
    set_has_iconurlhd();
  } else {
    clear_has_iconurlhd();
  }
  iconurlhd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), iconurlhd);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.IconUrlHD)
}

// optional string StoreUrl = 10;
bool BizAppInfo::has_storeurl() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void BizAppInfo::set_has_storeurl() {
  _has_bits_[0] |= 0x00000200u;
}
void BizAppInfo::clear_has_storeurl() {
  _has_bits_[0] &= ~0x00000200u;
}
void BizAppInfo::clear_storeurl() {
  storeurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_storeurl();
}
const ::std::string& BizAppInfo::storeurl() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.StoreUrl)
  return storeurl_.GetNoArena();
}
void BizAppInfo::set_storeurl(const ::std::string& value) {
  set_has_storeurl();
  storeurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.StoreUrl)
}
#if LANG_CXX11
void BizAppInfo::set_storeurl(::std::string&& value) {
  set_has_storeurl();
  storeurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.StoreUrl)
}
#endif
void BizAppInfo::set_storeurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_storeurl();
  storeurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.StoreUrl)
}
void BizAppInfo::set_storeurl(const char* value, size_t size) {
  set_has_storeurl();
  storeurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.StoreUrl)
}
::std::string* BizAppInfo::mutable_storeurl() {
  set_has_storeurl();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.StoreUrl)
  return storeurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppInfo::release_storeurl() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.StoreUrl)
  clear_has_storeurl();
  return storeurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppInfo::set_allocated_storeurl(::std::string* storeurl) {
  if (storeurl != NULL) {
    set_has_storeurl();
  } else {
    clear_has_storeurl();
  }
  storeurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), storeurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.StoreUrl)
}

// optional string WatermarkUrl = 11;
bool BizAppInfo::has_watermarkurl() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void BizAppInfo::set_has_watermarkurl() {
  _has_bits_[0] |= 0x00000400u;
}
void BizAppInfo::clear_has_watermarkurl() {
  _has_bits_[0] &= ~0x00000400u;
}
void BizAppInfo::clear_watermarkurl() {
  watermarkurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_watermarkurl();
}
const ::std::string& BizAppInfo::watermarkurl() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.WatermarkUrl)
  return watermarkurl_.GetNoArena();
}
void BizAppInfo::set_watermarkurl(const ::std::string& value) {
  set_has_watermarkurl();
  watermarkurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.WatermarkUrl)
}
#if LANG_CXX11
void BizAppInfo::set_watermarkurl(::std::string&& value) {
  set_has_watermarkurl();
  watermarkurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.WatermarkUrl)
}
#endif
void BizAppInfo::set_watermarkurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_watermarkurl();
  watermarkurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.WatermarkUrl)
}
void BizAppInfo::set_watermarkurl(const char* value, size_t size) {
  set_has_watermarkurl();
  watermarkurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.WatermarkUrl)
}
::std::string* BizAppInfo::mutable_watermarkurl() {
  set_has_watermarkurl();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.WatermarkUrl)
  return watermarkurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppInfo::release_watermarkurl() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.WatermarkUrl)
  clear_has_watermarkurl();
  return watermarkurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppInfo::set_allocated_watermarkurl(::std::string* watermarkurl) {
  if (watermarkurl != NULL) {
    set_has_watermarkurl();
  } else {
    clear_has_watermarkurl();
  }
  watermarkurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), watermarkurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.WatermarkUrl)
}

// optional string AndroidPackageName = 12;
bool BizAppInfo::has_androidpackagename() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void BizAppInfo::set_has_androidpackagename() {
  _has_bits_[0] |= 0x00000800u;
}
void BizAppInfo::clear_has_androidpackagename() {
  _has_bits_[0] &= ~0x00000800u;
}
void BizAppInfo::clear_androidpackagename() {
  androidpackagename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_androidpackagename();
}
const ::std::string& BizAppInfo::androidpackagename() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.AndroidPackageName)
  return androidpackagename_.GetNoArena();
}
void BizAppInfo::set_androidpackagename(const ::std::string& value) {
  set_has_androidpackagename();
  androidpackagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.AndroidPackageName)
}
#if LANG_CXX11
void BizAppInfo::set_androidpackagename(::std::string&& value) {
  set_has_androidpackagename();
  androidpackagename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.AndroidPackageName)
}
#endif
void BizAppInfo::set_androidpackagename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_androidpackagename();
  androidpackagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.AndroidPackageName)
}
void BizAppInfo::set_androidpackagename(const char* value, size_t size) {
  set_has_androidpackagename();
  androidpackagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.AndroidPackageName)
}
::std::string* BizAppInfo::mutable_androidpackagename() {
  set_has_androidpackagename();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.AndroidPackageName)
  return androidpackagename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppInfo::release_androidpackagename() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.AndroidPackageName)
  clear_has_androidpackagename();
  return androidpackagename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppInfo::set_allocated_androidpackagename(::std::string* androidpackagename) {
  if (androidpackagename != NULL) {
    set_has_androidpackagename();
  } else {
    clear_has_androidpackagename();
  }
  androidpackagename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), androidpackagename);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.AndroidPackageName)
}

// optional string AndroidSignature = 13;
bool BizAppInfo::has_androidsignature() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void BizAppInfo::set_has_androidsignature() {
  _has_bits_[0] |= 0x00001000u;
}
void BizAppInfo::clear_has_androidsignature() {
  _has_bits_[0] &= ~0x00001000u;
}
void BizAppInfo::clear_androidsignature() {
  androidsignature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_androidsignature();
}
const ::std::string& BizAppInfo::androidsignature() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.AndroidSignature)
  return androidsignature_.GetNoArena();
}
void BizAppInfo::set_androidsignature(const ::std::string& value) {
  set_has_androidsignature();
  androidsignature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.AndroidSignature)
}
#if LANG_CXX11
void BizAppInfo::set_androidsignature(::std::string&& value) {
  set_has_androidsignature();
  androidsignature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.AndroidSignature)
}
#endif
void BizAppInfo::set_androidsignature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_androidsignature();
  androidsignature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.AndroidSignature)
}
void BizAppInfo::set_androidsignature(const char* value, size_t size) {
  set_has_androidsignature();
  androidsignature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.AndroidSignature)
}
::std::string* BizAppInfo::mutable_androidsignature() {
  set_has_androidsignature();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.AndroidSignature)
  return androidsignature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppInfo::release_androidsignature() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.AndroidSignature)
  clear_has_androidsignature();
  return androidsignature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppInfo::set_allocated_androidsignature(::std::string* androidsignature) {
  if (androidsignature != NULL) {
    set_has_androidsignature();
  } else {
    clear_has_androidsignature();
  }
  androidsignature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), androidsignature);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.AndroidSignature)
}

// optional string AppType = 14;
bool BizAppInfo::has_apptype() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void BizAppInfo::set_has_apptype() {
  _has_bits_[0] |= 0x00002000u;
}
void BizAppInfo::clear_has_apptype() {
  _has_bits_[0] &= ~0x00002000u;
}
void BizAppInfo::clear_apptype() {
  apptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_apptype();
}
const ::std::string& BizAppInfo::apptype() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.AppType)
  return apptype_.GetNoArena();
}
void BizAppInfo::set_apptype(const ::std::string& value) {
  set_has_apptype();
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.AppType)
}
#if LANG_CXX11
void BizAppInfo::set_apptype(::std::string&& value) {
  set_has_apptype();
  apptype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.AppType)
}
#endif
void BizAppInfo::set_apptype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_apptype();
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.AppType)
}
void BizAppInfo::set_apptype(const char* value, size_t size) {
  set_has_apptype();
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.AppType)
}
::std::string* BizAppInfo::mutable_apptype() {
  set_has_apptype();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.AppType)
  return apptype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppInfo::release_apptype() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.AppType)
  clear_has_apptype();
  return apptype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppInfo::set_allocated_apptype(::std::string* apptype) {
  if (apptype != NULL) {
    set_has_apptype();
  } else {
    clear_has_apptype();
  }
  apptype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), apptype);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.AppType)
}

// optional string DevInfo = 15;
bool BizAppInfo::has_devinfo() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void BizAppInfo::set_has_devinfo() {
  _has_bits_[0] |= 0x00004000u;
}
void BizAppInfo::clear_has_devinfo() {
  _has_bits_[0] &= ~0x00004000u;
}
void BizAppInfo::clear_devinfo() {
  devinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_devinfo();
}
const ::std::string& BizAppInfo::devinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.DevInfo)
  return devinfo_.GetNoArena();
}
void BizAppInfo::set_devinfo(const ::std::string& value) {
  set_has_devinfo();
  devinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.DevInfo)
}
#if LANG_CXX11
void BizAppInfo::set_devinfo(::std::string&& value) {
  set_has_devinfo();
  devinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.DevInfo)
}
#endif
void BizAppInfo::set_devinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_devinfo();
  devinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.DevInfo)
}
void BizAppInfo::set_devinfo(const char* value, size_t size) {
  set_has_devinfo();
  devinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.DevInfo)
}
::std::string* BizAppInfo::mutable_devinfo() {
  set_has_devinfo();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.DevInfo)
  return devinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppInfo::release_devinfo() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.DevInfo)
  clear_has_devinfo();
  return devinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppInfo::set_allocated_devinfo(::std::string* devinfo) {
  if (devinfo != NULL) {
    set_has_devinfo();
  } else {
    clear_has_devinfo();
  }
  devinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devinfo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.DevInfo)
}

// required uint32 AppInfoFlag = 16;
bool BizAppInfo::has_appinfoflag() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void BizAppInfo::set_has_appinfoflag() {
  _has_bits_[0] |= 0x00080000u;
}
void BizAppInfo::clear_has_appinfoflag() {
  _has_bits_[0] &= ~0x00080000u;
}
void BizAppInfo::clear_appinfoflag() {
  appinfoflag_ = 0u;
  clear_has_appinfoflag();
}
::google::protobuf::uint32 BizAppInfo::appinfoflag() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.AppInfoFlag)
  return appinfoflag_;
}
void BizAppInfo::set_appinfoflag(::google::protobuf::uint32 value) {
  set_has_appinfoflag();
  appinfoflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.AppInfoFlag)
}

// required uint32 AppVersion = 17;
bool BizAppInfo::has_appversion() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void BizAppInfo::set_has_appversion() {
  _has_bits_[0] |= 0x00100000u;
}
void BizAppInfo::clear_has_appversion() {
  _has_bits_[0] &= ~0x00100000u;
}
void BizAppInfo::clear_appversion() {
  appversion_ = 0u;
  clear_has_appversion();
}
::google::protobuf::uint32 BizAppInfo::appversion() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.AppVersion)
  return appversion_;
}
void BizAppInfo::set_appversion(::google::protobuf::uint32 value) {
  set_has_appversion();
  appversion_ = value;
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.AppVersion)
}

// optional uint32 AppUpdateVersion = 18;
bool BizAppInfo::has_appupdateversion() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void BizAppInfo::set_has_appupdateversion() {
  _has_bits_[0] |= 0x00200000u;
}
void BizAppInfo::clear_has_appupdateversion() {
  _has_bits_[0] &= ~0x00200000u;
}
void BizAppInfo::clear_appupdateversion() {
  appupdateversion_ = 0u;
  clear_has_appupdateversion();
}
::google::protobuf::uint32 BizAppInfo::appupdateversion() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.AppUpdateVersion)
  return appupdateversion_;
}
void BizAppInfo::set_appupdateversion(::google::protobuf::uint32 value) {
  set_has_appupdateversion();
  appupdateversion_ = value;
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.AppUpdateVersion)
}

// optional string IconUrlMDPI = 19;
bool BizAppInfo::has_iconurlmdpi() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void BizAppInfo::set_has_iconurlmdpi() {
  _has_bits_[0] |= 0x00008000u;
}
void BizAppInfo::clear_has_iconurlmdpi() {
  _has_bits_[0] &= ~0x00008000u;
}
void BizAppInfo::clear_iconurlmdpi() {
  iconurlmdpi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_iconurlmdpi();
}
const ::std::string& BizAppInfo::iconurlmdpi() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.IconUrlMDPI)
  return iconurlmdpi_.GetNoArena();
}
void BizAppInfo::set_iconurlmdpi(const ::std::string& value) {
  set_has_iconurlmdpi();
  iconurlmdpi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.IconUrlMDPI)
}
#if LANG_CXX11
void BizAppInfo::set_iconurlmdpi(::std::string&& value) {
  set_has_iconurlmdpi();
  iconurlmdpi_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.IconUrlMDPI)
}
#endif
void BizAppInfo::set_iconurlmdpi(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_iconurlmdpi();
  iconurlmdpi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.IconUrlMDPI)
}
void BizAppInfo::set_iconurlmdpi(const char* value, size_t size) {
  set_has_iconurlmdpi();
  iconurlmdpi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.IconUrlMDPI)
}
::std::string* BizAppInfo::mutable_iconurlmdpi() {
  set_has_iconurlmdpi();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.IconUrlMDPI)
  return iconurlmdpi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppInfo::release_iconurlmdpi() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.IconUrlMDPI)
  clear_has_iconurlmdpi();
  return iconurlmdpi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppInfo::set_allocated_iconurlmdpi(::std::string* iconurlmdpi) {
  if (iconurlmdpi != NULL) {
    set_has_iconurlmdpi();
  } else {
    clear_has_iconurlmdpi();
  }
  iconurlmdpi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), iconurlmdpi);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.IconUrlMDPI)
}

// optional string DownloadUrl = 20;
bool BizAppInfo::has_downloadurl() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void BizAppInfo::set_has_downloadurl() {
  _has_bits_[0] |= 0x00010000u;
}
void BizAppInfo::clear_has_downloadurl() {
  _has_bits_[0] &= ~0x00010000u;
}
void BizAppInfo::clear_downloadurl() {
  downloadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_downloadurl();
}
const ::std::string& BizAppInfo::downloadurl() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.DownloadUrl)
  return downloadurl_.GetNoArena();
}
void BizAppInfo::set_downloadurl(const ::std::string& value) {
  set_has_downloadurl();
  downloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.DownloadUrl)
}
#if LANG_CXX11
void BizAppInfo::set_downloadurl(::std::string&& value) {
  set_has_downloadurl();
  downloadurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.DownloadUrl)
}
#endif
void BizAppInfo::set_downloadurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_downloadurl();
  downloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.DownloadUrl)
}
void BizAppInfo::set_downloadurl(const char* value, size_t size) {
  set_has_downloadurl();
  downloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.DownloadUrl)
}
::std::string* BizAppInfo::mutable_downloadurl() {
  set_has_downloadurl();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.DownloadUrl)
  return downloadurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppInfo::release_downloadurl() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.DownloadUrl)
  clear_has_downloadurl();
  return downloadurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppInfo::set_allocated_downloadurl(::std::string* downloadurl) {
  if (downloadurl != NULL) {
    set_has_downloadurl();
  } else {
    clear_has_downloadurl();
  }
  downloadurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), downloadurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.DownloadUrl)
}

// optional string DownloadUrlMd5 = 21;
bool BizAppInfo::has_downloadurlmd5() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void BizAppInfo::set_has_downloadurlmd5() {
  _has_bits_[0] |= 0x00020000u;
}
void BizAppInfo::clear_has_downloadurlmd5() {
  _has_bits_[0] &= ~0x00020000u;
}
void BizAppInfo::clear_downloadurlmd5() {
  downloadurlmd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_downloadurlmd5();
}
const ::std::string& BizAppInfo::downloadurlmd5() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.DownloadUrlMd5)
  return downloadurlmd5_.GetNoArena();
}
void BizAppInfo::set_downloadurlmd5(const ::std::string& value) {
  set_has_downloadurlmd5();
  downloadurlmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.DownloadUrlMd5)
}
#if LANG_CXX11
void BizAppInfo::set_downloadurlmd5(::std::string&& value) {
  set_has_downloadurlmd5();
  downloadurlmd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.DownloadUrlMd5)
}
#endif
void BizAppInfo::set_downloadurlmd5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_downloadurlmd5();
  downloadurlmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.DownloadUrlMd5)
}
void BizAppInfo::set_downloadurlmd5(const char* value, size_t size) {
  set_has_downloadurlmd5();
  downloadurlmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.DownloadUrlMd5)
}
::std::string* BizAppInfo::mutable_downloadurlmd5() {
  set_has_downloadurlmd5();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.DownloadUrlMd5)
  return downloadurlmd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppInfo::release_downloadurlmd5() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.DownloadUrlMd5)
  clear_has_downloadurlmd5();
  return downloadurlmd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppInfo::set_allocated_downloadurlmd5(::std::string* downloadurlmd5) {
  if (downloadurlmd5 != NULL) {
    set_has_downloadurlmd5();
  } else {
    clear_has_downloadurlmd5();
  }
  downloadurlmd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), downloadurlmd5);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.DownloadUrlMd5)
}

// optional string GooglePlayDownloadUrl = 22;
bool BizAppInfo::has_googleplaydownloadurl() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void BizAppInfo::set_has_googleplaydownloadurl() {
  _has_bits_[0] |= 0x00040000u;
}
void BizAppInfo::clear_has_googleplaydownloadurl() {
  _has_bits_[0] &= ~0x00040000u;
}
void BizAppInfo::clear_googleplaydownloadurl() {
  googleplaydownloadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_googleplaydownloadurl();
}
const ::std::string& BizAppInfo::googleplaydownloadurl() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.GooglePlayDownloadUrl)
  return googleplaydownloadurl_.GetNoArena();
}
void BizAppInfo::set_googleplaydownloadurl(const ::std::string& value) {
  set_has_googleplaydownloadurl();
  googleplaydownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.GooglePlayDownloadUrl)
}
#if LANG_CXX11
void BizAppInfo::set_googleplaydownloadurl(::std::string&& value) {
  set_has_googleplaydownloadurl();
  googleplaydownloadurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.GooglePlayDownloadUrl)
}
#endif
void BizAppInfo::set_googleplaydownloadurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_googleplaydownloadurl();
  googleplaydownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.GooglePlayDownloadUrl)
}
void BizAppInfo::set_googleplaydownloadurl(const char* value, size_t size) {
  set_has_googleplaydownloadurl();
  googleplaydownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.GooglePlayDownloadUrl)
}
::std::string* BizAppInfo::mutable_googleplaydownloadurl() {
  set_has_googleplaydownloadurl();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.GooglePlayDownloadUrl)
  return googleplaydownloadurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BizAppInfo::release_googleplaydownloadurl() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.GooglePlayDownloadUrl)
  clear_has_googleplaydownloadurl();
  return googleplaydownloadurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BizAppInfo::set_allocated_googleplaydownloadurl(::std::string* googleplaydownloadurl) {
  if (googleplaydownloadurl != NULL) {
    set_has_googleplaydownloadurl();
  } else {
    clear_has_googleplaydownloadurl();
  }
  googleplaydownloadurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), googleplaydownloadurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.GooglePlayDownloadUrl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAppInfoListResponse::kBaseResponseFieldNumber;
const int GetAppInfoListResponse::kCountFieldNumber;
const int GetAppInfoListResponse::kAppInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAppInfoListResponse::GetAppInfoListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetAppInfoListResponse)
}
GetAppInfoListResponse::GetAppInfoListResponse(const GetAppInfoListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      appinfolist_(from.appinfolist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:micromsg.GetAppInfoListResponse)
}

void GetAppInfoListResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(count_));
}

GetAppInfoListResponse::~GetAppInfoListResponse() {
  // @@protoc_insertion_point(destructor:micromsg.GetAppInfoListResponse)
  SharedDtor();
}

void GetAppInfoListResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void GetAppInfoListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAppInfoListResponse::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAppInfoListResponse& GetAppInfoListResponse::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetAppInfoListResponse* GetAppInfoListResponse::New(::google::protobuf::Arena* arena) const {
  GetAppInfoListResponse* n = new GetAppInfoListResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAppInfoListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetAppInfoListResponse)
  appinfolist_.Clear();
  if (has_baseresponse()) {
    GOOGLE_DCHECK(baseresponse_ != NULL);
    baseresponse_->::micromsg::BaseResponse::Clear();
  }
  count_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetAppInfoListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetAppInfoListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 Count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.BizAppInfo AppInfoList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_appinfolist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetAppInfoListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetAppInfoListResponse)
  return false;
#undef DO_
}

void GetAppInfoListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetAppInfoListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // required int32 Count = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  // repeated .micromsg.BizAppInfo AppInfoList = 3;
  for (unsigned int i = 0, n = this->appinfolist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->appinfolist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetAppInfoListResponse)
}

::google::protobuf::uint8* GetAppInfoListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetAppInfoListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // required int32 Count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  // repeated .micromsg.BizAppInfo AppInfoList = 3;
  for (unsigned int i = 0, n = this->appinfolist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->appinfolist(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetAppInfoListResponse)
  return target;
}

size_t GetAppInfoListResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetAppInfoListResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_count()) {
    // required int32 Count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  return total_size;
}
size_t GetAppInfoListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetAppInfoListResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required int32 Count = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.BizAppInfo AppInfoList = 3;
  {
    unsigned int count = this->appinfolist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->appinfolist(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAppInfoListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetAppInfoListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAppInfoListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAppInfoListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetAppInfoListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetAppInfoListResponse)
    MergeFrom(*source);
  }
}

void GetAppInfoListResponse::MergeFrom(const GetAppInfoListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetAppInfoListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  appinfolist_.MergeFrom(from.appinfolist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000002u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetAppInfoListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetAppInfoListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAppInfoListResponse::CopyFrom(const GetAppInfoListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetAppInfoListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAppInfoListResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->appinfolist())) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void GetAppInfoListResponse::Swap(GetAppInfoListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAppInfoListResponse::InternalSwap(GetAppInfoListResponse* other) {
  appinfolist_.InternalSwap(&other->appinfolist_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(count_, other->count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAppInfoListResponse::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetAppInfoListResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool GetAppInfoListResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetAppInfoListResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
void GetAppInfoListResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetAppInfoListResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& GetAppInfoListResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppInfoListResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* GetAppInfoListResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppInfoListResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* GetAppInfoListResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetAppInfoListResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void GetAppInfoListResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAppInfoListResponse.BaseResponse)
}

// required int32 Count = 2;
bool GetAppInfoListResponse::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetAppInfoListResponse::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
void GetAppInfoListResponse::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetAppInfoListResponse::clear_count() {
  count_ = 0;
  clear_has_count();
}
::google::protobuf::int32 GetAppInfoListResponse::count() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppInfoListResponse.Count)
  return count_;
}
void GetAppInfoListResponse::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetAppInfoListResponse.Count)
}

// repeated .micromsg.BizAppInfo AppInfoList = 3;
int GetAppInfoListResponse::appinfolist_size() const {
  return appinfolist_.size();
}
void GetAppInfoListResponse::clear_appinfolist() {
  appinfolist_.Clear();
}
const ::micromsg::BizAppInfo& GetAppInfoListResponse::appinfolist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppInfoListResponse.AppInfoList)
  return appinfolist_.Get(index);
}
::micromsg::BizAppInfo* GetAppInfoListResponse::mutable_appinfolist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppInfoListResponse.AppInfoList)
  return appinfolist_.Mutable(index);
}
::micromsg::BizAppInfo* GetAppInfoListResponse::add_appinfolist() {
  // @@protoc_insertion_point(field_add:micromsg.GetAppInfoListResponse.AppInfoList)
  return appinfolist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::BizAppInfo >*
GetAppInfoListResponse::mutable_appinfolist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetAppInfoListResponse.AppInfoList)
  return &appinfolist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::BizAppInfo >&
GetAppInfoListResponse::appinfolist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetAppInfoListResponse.AppInfoList)
  return appinfolist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppCenterRequest::kBaseRequestFieldNumber;
const int AppCenterRequest::kTypeFieldNumber;
const int AppCenterRequest::kReqBufFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppCenterRequest::AppCenterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.AppCenterRequest)
}
AppCenterRequest::AppCenterRequest(const AppCenterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  if (from.has_reqbuf()) {
    reqbuf_ = new ::micromsg::SKBuiltinBuffer_t(*from.reqbuf_);
  } else {
    reqbuf_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:micromsg.AppCenterRequest)
}

void AppCenterRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(type_));
}

AppCenterRequest::~AppCenterRequest() {
  // @@protoc_insertion_point(destructor:micromsg.AppCenterRequest)
  SharedDtor();
}

void AppCenterRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
  if (this != internal_default_instance()) {
    delete reqbuf_;
  }
}

void AppCenterRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppCenterRequest::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AppCenterRequest& AppCenterRequest::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

AppCenterRequest* AppCenterRequest::New(::google::protobuf::Arena* arena) const {
  AppCenterRequest* n = new AppCenterRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AppCenterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.AppCenterRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
    if (has_reqbuf()) {
      GOOGLE_DCHECK(reqbuf_ != NULL);
      reqbuf_->::micromsg::SKBuiltinBuffer_t::Clear();
    }
  }
  type_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AppCenterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.AppCenterRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.SKBuiltinBuffer_t ReqBuf = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_reqbuf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.AppCenterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.AppCenterRequest)
  return false;
#undef DO_
}

void AppCenterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.AppCenterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required uint32 Type = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type(), output);
  }

  // required .micromsg.SKBuiltinBuffer_t ReqBuf = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->reqbuf_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.AppCenterRequest)
}

::google::protobuf::uint8* AppCenterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.AppCenterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required uint32 Type = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type(), target);
  }

  // required .micromsg.SKBuiltinBuffer_t ReqBuf = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->reqbuf_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.AppCenterRequest)
  return target;
}

size_t AppCenterRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.AppCenterRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_reqbuf()) {
    // required .micromsg.SKBuiltinBuffer_t ReqBuf = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->reqbuf_);
  }

  if (has_type()) {
    // required uint32 Type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  return total_size;
}
size_t AppCenterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.AppCenterRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required .micromsg.SKBuiltinBuffer_t ReqBuf = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->reqbuf_);

    // required uint32 Type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppCenterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.AppCenterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AppCenterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppCenterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.AppCenterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.AppCenterRequest)
    MergeFrom(*source);
  }
}

void AppCenterRequest::MergeFrom(const AppCenterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.AppCenterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_reqbuf()->::micromsg::SKBuiltinBuffer_t::MergeFrom(from.reqbuf());
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AppCenterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.AppCenterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppCenterRequest::CopyFrom(const AppCenterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.AppCenterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppCenterRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  if (has_reqbuf()) {
    if (!this->reqbuf_->IsInitialized()) return false;
  }
  return true;
}

void AppCenterRequest::Swap(AppCenterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppCenterRequest::InternalSwap(AppCenterRequest* other) {
  std::swap(baserequest_, other->baserequest_);
  std::swap(reqbuf_, other->reqbuf_);
  std::swap(type_, other->type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AppCenterRequest::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AppCenterRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool AppCenterRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AppCenterRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
void AppCenterRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
void AppCenterRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& AppCenterRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.AppCenterRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* AppCenterRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.AppCenterRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* AppCenterRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.AppCenterRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void AppCenterRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppCenterRequest.BaseRequest)
}

// required uint32 Type = 2;
bool AppCenterRequest::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AppCenterRequest::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
void AppCenterRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void AppCenterRequest::clear_type() {
  type_ = 0u;
  clear_has_type();
}
::google::protobuf::uint32 AppCenterRequest::type() const {
  // @@protoc_insertion_point(field_get:micromsg.AppCenterRequest.Type)
  return type_;
}
void AppCenterRequest::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AppCenterRequest.Type)
}

// required .micromsg.SKBuiltinBuffer_t ReqBuf = 3;
bool AppCenterRequest::has_reqbuf() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AppCenterRequest::set_has_reqbuf() {
  _has_bits_[0] |= 0x00000002u;
}
void AppCenterRequest::clear_has_reqbuf() {
  _has_bits_[0] &= ~0x00000002u;
}
void AppCenterRequest::clear_reqbuf() {
  if (reqbuf_ != NULL) reqbuf_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_reqbuf();
}
const ::micromsg::SKBuiltinBuffer_t& AppCenterRequest::reqbuf() const {
  // @@protoc_insertion_point(field_get:micromsg.AppCenterRequest.ReqBuf)
  return reqbuf_ != NULL ? *reqbuf_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
::micromsg::SKBuiltinBuffer_t* AppCenterRequest::mutable_reqbuf() {
  set_has_reqbuf();
  if (reqbuf_ == NULL) {
    reqbuf_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.AppCenterRequest.ReqBuf)
  return reqbuf_;
}
::micromsg::SKBuiltinBuffer_t* AppCenterRequest::release_reqbuf() {
  // @@protoc_insertion_point(field_release:micromsg.AppCenterRequest.ReqBuf)
  clear_has_reqbuf();
  ::micromsg::SKBuiltinBuffer_t* temp = reqbuf_;
  reqbuf_ = NULL;
  return temp;
}
void AppCenterRequest::set_allocated_reqbuf(::micromsg::SKBuiltinBuffer_t* reqbuf) {
  delete reqbuf_;
  reqbuf_ = reqbuf;
  if (reqbuf) {
    set_has_reqbuf();
  } else {
    clear_has_reqbuf();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppCenterRequest.ReqBuf)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppCenterResponse::kBaseResponseFieldNumber;
const int AppCenterResponse::kRespBufFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppCenterResponse::AppCenterResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.AppCenterResponse)
}
AppCenterResponse::AppCenterResponse(const AppCenterResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  if (from.has_respbuf()) {
    respbuf_ = new ::micromsg::SKBuiltinBuffer_t(*from.respbuf_);
  } else {
    respbuf_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.AppCenterResponse)
}

void AppCenterResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&respbuf_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(respbuf_));
}

AppCenterResponse::~AppCenterResponse() {
  // @@protoc_insertion_point(destructor:micromsg.AppCenterResponse)
  SharedDtor();
}

void AppCenterResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
  if (this != internal_default_instance()) {
    delete respbuf_;
  }
}

void AppCenterResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppCenterResponse::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AppCenterResponse& AppCenterResponse::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

AppCenterResponse* AppCenterResponse::New(::google::protobuf::Arena* arena) const {
  AppCenterResponse* n = new AppCenterResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AppCenterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.AppCenterResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
    if (has_respbuf()) {
      GOOGLE_DCHECK(respbuf_ != NULL);
      respbuf_->::micromsg::SKBuiltinBuffer_t::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AppCenterResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.AppCenterResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.SKBuiltinBuffer_t RespBuf = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_respbuf()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.AppCenterResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.AppCenterResponse)
  return false;
#undef DO_
}

void AppCenterResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.AppCenterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // required .micromsg.SKBuiltinBuffer_t RespBuf = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->respbuf_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.AppCenterResponse)
}

::google::protobuf::uint8* AppCenterResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.AppCenterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // required .micromsg.SKBuiltinBuffer_t RespBuf = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->respbuf_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.AppCenterResponse)
  return target;
}

size_t AppCenterResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.AppCenterResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_respbuf()) {
    // required .micromsg.SKBuiltinBuffer_t RespBuf = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->respbuf_);
  }

  return total_size;
}
size_t AppCenterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.AppCenterResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required .micromsg.SKBuiltinBuffer_t RespBuf = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->respbuf_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppCenterResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.AppCenterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AppCenterResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppCenterResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.AppCenterResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.AppCenterResponse)
    MergeFrom(*source);
  }
}

void AppCenterResponse::MergeFrom(const AppCenterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.AppCenterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_respbuf()->::micromsg::SKBuiltinBuffer_t::MergeFrom(from.respbuf());
    }
  }
}

void AppCenterResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.AppCenterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppCenterResponse::CopyFrom(const AppCenterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.AppCenterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppCenterResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  if (has_respbuf()) {
    if (!this->respbuf_->IsInitialized()) return false;
  }
  return true;
}

void AppCenterResponse::Swap(AppCenterResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppCenterResponse::InternalSwap(AppCenterResponse* other) {
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(respbuf_, other->respbuf_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AppCenterResponse::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AppCenterResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool AppCenterResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AppCenterResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
void AppCenterResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
void AppCenterResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& AppCenterResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.AppCenterResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* AppCenterResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.AppCenterResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* AppCenterResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.AppCenterResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void AppCenterResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppCenterResponse.BaseResponse)
}

// required .micromsg.SKBuiltinBuffer_t RespBuf = 2;
bool AppCenterResponse::has_respbuf() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AppCenterResponse::set_has_respbuf() {
  _has_bits_[0] |= 0x00000002u;
}
void AppCenterResponse::clear_has_respbuf() {
  _has_bits_[0] &= ~0x00000002u;
}
void AppCenterResponse::clear_respbuf() {
  if (respbuf_ != NULL) respbuf_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_respbuf();
}
const ::micromsg::SKBuiltinBuffer_t& AppCenterResponse::respbuf() const {
  // @@protoc_insertion_point(field_get:micromsg.AppCenterResponse.RespBuf)
  return respbuf_ != NULL ? *respbuf_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
::micromsg::SKBuiltinBuffer_t* AppCenterResponse::mutable_respbuf() {
  set_has_respbuf();
  if (respbuf_ == NULL) {
    respbuf_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.AppCenterResponse.RespBuf)
  return respbuf_;
}
::micromsg::SKBuiltinBuffer_t* AppCenterResponse::release_respbuf() {
  // @@protoc_insertion_point(field_release:micromsg.AppCenterResponse.RespBuf)
  clear_has_respbuf();
  ::micromsg::SKBuiltinBuffer_t* temp = respbuf_;
  respbuf_ = NULL;
  return temp;
}
void AppCenterResponse::set_allocated_respbuf(::micromsg::SKBuiltinBuffer_t* respbuf) {
  delete respbuf_;
  respbuf_ = respbuf;
  if (respbuf) {
    set_has_respbuf();
  } else {
    clear_has_respbuf();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppCenterResponse.RespBuf)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAuthAppListRequest::kBaseRequestFieldNumber;
const int GetAuthAppListRequest::kTypeFieldNumber;
const int GetAuthAppListRequest::kLangFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAuthAppListRequest::GetAuthAppListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetAuthAppListRequest)
}
GetAuthAppListRequest::GetAuthAppListRequest(const GetAuthAppListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lang_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_lang()) {
    lang_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lang_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:micromsg.GetAuthAppListRequest)
}

void GetAuthAppListRequest::SharedCtor() {
  _cached_size_ = 0;
  lang_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(type_));
}

GetAuthAppListRequest::~GetAuthAppListRequest() {
  // @@protoc_insertion_point(destructor:micromsg.GetAuthAppListRequest)
  SharedDtor();
}

void GetAuthAppListRequest::SharedDtor() {
  lang_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void GetAuthAppListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAuthAppListRequest::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAuthAppListRequest& GetAuthAppListRequest::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetAuthAppListRequest* GetAuthAppListRequest::New(::google::protobuf::Arena* arena) const {
  GetAuthAppListRequest* n = new GetAuthAppListRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAuthAppListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetAuthAppListRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_lang()) {
      GOOGLE_DCHECK(!lang_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*lang_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  type_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetAuthAppListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetAuthAppListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Lang = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lang()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->lang().data(), this->lang().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetAuthAppListRequest.Lang");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetAuthAppListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetAuthAppListRequest)
  return false;
#undef DO_
}

void GetAuthAppListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetAuthAppListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required uint32 Type = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type(), output);
  }

  // optional string Lang = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lang().data(), this->lang().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetAuthAppListRequest.Lang");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->lang(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetAuthAppListRequest)
}

::google::protobuf::uint8* GetAuthAppListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetAuthAppListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required uint32 Type = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type(), target);
  }

  // optional string Lang = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lang().data(), this->lang().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetAuthAppListRequest.Lang");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->lang(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetAuthAppListRequest)
  return target;
}

size_t GetAuthAppListRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetAuthAppListRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_type()) {
    // required uint32 Type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  return total_size;
}
size_t GetAuthAppListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetAuthAppListRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required uint32 Type = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string Lang = 3;
  if (has_lang()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lang());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAuthAppListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetAuthAppListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAuthAppListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAuthAppListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetAuthAppListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetAuthAppListRequest)
    MergeFrom(*source);
  }
}

void GetAuthAppListRequest::MergeFrom(const GetAuthAppListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetAuthAppListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_lang();
      lang_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lang_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetAuthAppListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetAuthAppListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAuthAppListRequest::CopyFrom(const GetAuthAppListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetAuthAppListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAuthAppListRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void GetAuthAppListRequest::Swap(GetAuthAppListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAuthAppListRequest::InternalSwap(GetAuthAppListRequest* other) {
  lang_.Swap(&other->lang_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(type_, other->type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAuthAppListRequest::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetAuthAppListRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool GetAuthAppListRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetAuthAppListRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
void GetAuthAppListRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetAuthAppListRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& GetAuthAppListRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAuthAppListRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* GetAuthAppListRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetAuthAppListRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* GetAuthAppListRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetAuthAppListRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void GetAuthAppListRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAuthAppListRequest.BaseRequest)
}

// required uint32 Type = 2;
bool GetAuthAppListRequest::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetAuthAppListRequest::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
void GetAuthAppListRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetAuthAppListRequest::clear_type() {
  type_ = 0u;
  clear_has_type();
}
::google::protobuf::uint32 GetAuthAppListRequest::type() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAuthAppListRequest.Type)
  return type_;
}
void GetAuthAppListRequest::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetAuthAppListRequest.Type)
}

// optional string Lang = 3;
bool GetAuthAppListRequest::has_lang() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetAuthAppListRequest::set_has_lang() {
  _has_bits_[0] |= 0x00000001u;
}
void GetAuthAppListRequest::clear_has_lang() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetAuthAppListRequest::clear_lang() {
  lang_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lang();
}
const ::std::string& GetAuthAppListRequest::lang() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAuthAppListRequest.Lang)
  return lang_.GetNoArena();
}
void GetAuthAppListRequest::set_lang(const ::std::string& value) {
  set_has_lang();
  lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetAuthAppListRequest.Lang)
}
#if LANG_CXX11
void GetAuthAppListRequest::set_lang(::std::string&& value) {
  set_has_lang();
  lang_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetAuthAppListRequest.Lang)
}
#endif
void GetAuthAppListRequest::set_lang(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_lang();
  lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetAuthAppListRequest.Lang)
}
void GetAuthAppListRequest::set_lang(const char* value, size_t size) {
  set_has_lang();
  lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetAuthAppListRequest.Lang)
}
::std::string* GetAuthAppListRequest::mutable_lang() {
  set_has_lang();
  // @@protoc_insertion_point(field_mutable:micromsg.GetAuthAppListRequest.Lang)
  return lang_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetAuthAppListRequest::release_lang() {
  // @@protoc_insertion_point(field_release:micromsg.GetAuthAppListRequest.Lang)
  clear_has_lang();
  return lang_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetAuthAppListRequest::set_allocated_lang(::std::string* lang) {
  if (lang != NULL) {
    set_has_lang();
  } else {
    clear_has_lang();
  }
  lang_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAuthAppListRequest.Lang)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AuthAppBaseInfo::kAppIDFieldNumber;
const int AuthAppBaseInfo::kAppTypeFieldNumber;
const int AuthAppBaseInfo::kIconUrlFieldNumber;
const int AuthAppBaseInfo::kAppNameFieldNumber;
const int AuthAppBaseInfo::kAppFlagFieldNumber;
const int AuthAppBaseInfo::kExternInfoFieldNumber;
const int AuthAppBaseInfo::kAuthInfoFieldNumber;
const int AuthAppBaseInfo::kDevInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AuthAppBaseInfo::AuthAppBaseInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.AuthAppBaseInfo)
}
AuthAppBaseInfo::AuthAppBaseInfo(const AuthAppBaseInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appid()) {
    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  apptype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_apptype()) {
    apptype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apptype_);
  }
  iconurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_iconurl()) {
    iconurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iconurl_);
  }
  appname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appname()) {
    appname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appname_);
  }
  externinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_externinfo()) {
    externinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.externinfo_);
  }
  authinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_authinfo()) {
    authinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authinfo_);
  }
  devinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_devinfo()) {
    devinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devinfo_);
  }
  appflag_ = from.appflag_;
  // @@protoc_insertion_point(copy_constructor:micromsg.AuthAppBaseInfo)
}

void AuthAppBaseInfo::SharedCtor() {
  _cached_size_ = 0;
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apptype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iconurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  externinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appflag_ = 0u;
}

AuthAppBaseInfo::~AuthAppBaseInfo() {
  // @@protoc_insertion_point(destructor:micromsg.AuthAppBaseInfo)
  SharedDtor();
}

void AuthAppBaseInfo::SharedDtor() {
  appid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  apptype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iconurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  externinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AuthAppBaseInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AuthAppBaseInfo::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AuthAppBaseInfo& AuthAppBaseInfo::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

AuthAppBaseInfo* AuthAppBaseInfo::New(::google::protobuf::Arena* arena) const {
  AuthAppBaseInfo* n = new AuthAppBaseInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AuthAppBaseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.AuthAppBaseInfo)
  if (_has_bits_[0 / 32] & 127u) {
    if (has_appid()) {
      GOOGLE_DCHECK(!appid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appid_.UnsafeRawStringPointer())->clear();
    }
    if (has_apptype()) {
      GOOGLE_DCHECK(!apptype_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*apptype_.UnsafeRawStringPointer())->clear();
    }
    if (has_iconurl()) {
      GOOGLE_DCHECK(!iconurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*iconurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_appname()) {
      GOOGLE_DCHECK(!appname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appname_.UnsafeRawStringPointer())->clear();
    }
    if (has_externinfo()) {
      GOOGLE_DCHECK(!externinfo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*externinfo_.UnsafeRawStringPointer())->clear();
    }
    if (has_authinfo()) {
      GOOGLE_DCHECK(!authinfo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*authinfo_.UnsafeRawStringPointer())->clear();
    }
    if (has_devinfo()) {
      GOOGLE_DCHECK(!devinfo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*devinfo_.UnsafeRawStringPointer())->clear();
    }
  }
  appflag_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AuthAppBaseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.AuthAppBaseInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string AppID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appid().data(), this->appid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.AuthAppBaseInfo.AppID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apptype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->apptype().data(), this->apptype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.AuthAppBaseInfo.AppType");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string IconUrl = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_iconurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->iconurl().data(), this->iconurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.AuthAppBaseInfo.IconUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppName = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appname().data(), this->appname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.AuthAppBaseInfo.AppName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 AppFlag = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_appflag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ExternInfo = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_externinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->externinfo().data(), this->externinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.AuthAppBaseInfo.ExternInfo");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AuthInfo = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_authinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->authinfo().data(), this->authinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.AuthAppBaseInfo.AuthInfo");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string DevInfo = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->devinfo().data(), this->devinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.AuthAppBaseInfo.DevInfo");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.AuthAppBaseInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.AuthAppBaseInfo)
  return false;
#undef DO_
}

void AuthAppBaseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.AuthAppBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string AppID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AuthAppBaseInfo.AppID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appid(), output);
  }

  // optional string AppType = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->apptype().data(), this->apptype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AuthAppBaseInfo.AppType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->apptype(), output);
  }

  // optional string IconUrl = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->iconurl().data(), this->iconurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AuthAppBaseInfo.IconUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->iconurl(), output);
  }

  // optional string AppName = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appname().data(), this->appname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AuthAppBaseInfo.AppName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->appname(), output);
  }

  // required uint32 AppFlag = 5;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->appflag(), output);
  }

  // optional string ExternInfo = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->externinfo().data(), this->externinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AuthAppBaseInfo.ExternInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->externinfo(), output);
  }

  // optional string AuthInfo = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->authinfo().data(), this->authinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AuthAppBaseInfo.AuthInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->authinfo(), output);
  }

  // optional string DevInfo = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->devinfo().data(), this->devinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AuthAppBaseInfo.DevInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->devinfo(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.AuthAppBaseInfo)
}

::google::protobuf::uint8* AuthAppBaseInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.AuthAppBaseInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string AppID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AuthAppBaseInfo.AppID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appid(), target);
  }

  // optional string AppType = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->apptype().data(), this->apptype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AuthAppBaseInfo.AppType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->apptype(), target);
  }

  // optional string IconUrl = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->iconurl().data(), this->iconurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AuthAppBaseInfo.IconUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->iconurl(), target);
  }

  // optional string AppName = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appname().data(), this->appname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AuthAppBaseInfo.AppName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->appname(), target);
  }

  // required uint32 AppFlag = 5;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->appflag(), target);
  }

  // optional string ExternInfo = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->externinfo().data(), this->externinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AuthAppBaseInfo.ExternInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->externinfo(), target);
  }

  // optional string AuthInfo = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->authinfo().data(), this->authinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AuthAppBaseInfo.AuthInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->authinfo(), target);
  }

  // optional string DevInfo = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->devinfo().data(), this->devinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AuthAppBaseInfo.DevInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->devinfo(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.AuthAppBaseInfo)
  return target;
}

size_t AuthAppBaseInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.AuthAppBaseInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint32 AppFlag = 5;
  if (has_appflag()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->appflag());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string AppID = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appid());
    }

    // optional string AppType = 2;
    if (has_apptype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->apptype());
    }

    // optional string IconUrl = 3;
    if (has_iconurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->iconurl());
    }

    // optional string AppName = 4;
    if (has_appname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appname());
    }

    // optional string ExternInfo = 6;
    if (has_externinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->externinfo());
    }

    // optional string AuthInfo = 7;
    if (has_authinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->authinfo());
    }

    // optional string DevInfo = 8;
    if (has_devinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->devinfo());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AuthAppBaseInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.AuthAppBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AuthAppBaseInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AuthAppBaseInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.AuthAppBaseInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.AuthAppBaseInfo)
    MergeFrom(*source);
  }
}

void AuthAppBaseInfo::MergeFrom(const AuthAppBaseInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.AuthAppBaseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_appid();
      appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_apptype();
      apptype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apptype_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_iconurl();
      iconurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iconurl_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_appname();
      appname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appname_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_externinfo();
      externinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.externinfo_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_authinfo();
      authinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authinfo_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_devinfo();
      devinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devinfo_);
    }
    if (cached_has_bits & 0x00000080u) {
      appflag_ = from.appflag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AuthAppBaseInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.AuthAppBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AuthAppBaseInfo::CopyFrom(const AuthAppBaseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.AuthAppBaseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AuthAppBaseInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000080) != 0x00000080) return false;
  return true;
}

void AuthAppBaseInfo::Swap(AuthAppBaseInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AuthAppBaseInfo::InternalSwap(AuthAppBaseInfo* other) {
  appid_.Swap(&other->appid_);
  apptype_.Swap(&other->apptype_);
  iconurl_.Swap(&other->iconurl_);
  appname_.Swap(&other->appname_);
  externinfo_.Swap(&other->externinfo_);
  authinfo_.Swap(&other->authinfo_);
  devinfo_.Swap(&other->devinfo_);
  std::swap(appflag_, other->appflag_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AuthAppBaseInfo::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AuthAppBaseInfo

// optional string AppID = 1;
bool AuthAppBaseInfo::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AuthAppBaseInfo::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
void AuthAppBaseInfo::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
void AuthAppBaseInfo::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
const ::std::string& AuthAppBaseInfo::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.AuthAppBaseInfo.AppID)
  return appid_.GetNoArena();
}
void AuthAppBaseInfo::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AuthAppBaseInfo.AppID)
}
#if LANG_CXX11
void AuthAppBaseInfo::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AuthAppBaseInfo.AppID)
}
#endif
void AuthAppBaseInfo::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AuthAppBaseInfo.AppID)
}
void AuthAppBaseInfo::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AuthAppBaseInfo.AppID)
}
::std::string* AuthAppBaseInfo::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.AuthAppBaseInfo.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuthAppBaseInfo::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.AuthAppBaseInfo.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthAppBaseInfo::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AuthAppBaseInfo.AppID)
}

// optional string AppType = 2;
bool AuthAppBaseInfo::has_apptype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AuthAppBaseInfo::set_has_apptype() {
  _has_bits_[0] |= 0x00000002u;
}
void AuthAppBaseInfo::clear_has_apptype() {
  _has_bits_[0] &= ~0x00000002u;
}
void AuthAppBaseInfo::clear_apptype() {
  apptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_apptype();
}
const ::std::string& AuthAppBaseInfo::apptype() const {
  // @@protoc_insertion_point(field_get:micromsg.AuthAppBaseInfo.AppType)
  return apptype_.GetNoArena();
}
void AuthAppBaseInfo::set_apptype(const ::std::string& value) {
  set_has_apptype();
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AuthAppBaseInfo.AppType)
}
#if LANG_CXX11
void AuthAppBaseInfo::set_apptype(::std::string&& value) {
  set_has_apptype();
  apptype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AuthAppBaseInfo.AppType)
}
#endif
void AuthAppBaseInfo::set_apptype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_apptype();
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AuthAppBaseInfo.AppType)
}
void AuthAppBaseInfo::set_apptype(const char* value, size_t size) {
  set_has_apptype();
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AuthAppBaseInfo.AppType)
}
::std::string* AuthAppBaseInfo::mutable_apptype() {
  set_has_apptype();
  // @@protoc_insertion_point(field_mutable:micromsg.AuthAppBaseInfo.AppType)
  return apptype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuthAppBaseInfo::release_apptype() {
  // @@protoc_insertion_point(field_release:micromsg.AuthAppBaseInfo.AppType)
  clear_has_apptype();
  return apptype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthAppBaseInfo::set_allocated_apptype(::std::string* apptype) {
  if (apptype != NULL) {
    set_has_apptype();
  } else {
    clear_has_apptype();
  }
  apptype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), apptype);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AuthAppBaseInfo.AppType)
}

// optional string IconUrl = 3;
bool AuthAppBaseInfo::has_iconurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AuthAppBaseInfo::set_has_iconurl() {
  _has_bits_[0] |= 0x00000004u;
}
void AuthAppBaseInfo::clear_has_iconurl() {
  _has_bits_[0] &= ~0x00000004u;
}
void AuthAppBaseInfo::clear_iconurl() {
  iconurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_iconurl();
}
const ::std::string& AuthAppBaseInfo::iconurl() const {
  // @@protoc_insertion_point(field_get:micromsg.AuthAppBaseInfo.IconUrl)
  return iconurl_.GetNoArena();
}
void AuthAppBaseInfo::set_iconurl(const ::std::string& value) {
  set_has_iconurl();
  iconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AuthAppBaseInfo.IconUrl)
}
#if LANG_CXX11
void AuthAppBaseInfo::set_iconurl(::std::string&& value) {
  set_has_iconurl();
  iconurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AuthAppBaseInfo.IconUrl)
}
#endif
void AuthAppBaseInfo::set_iconurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_iconurl();
  iconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AuthAppBaseInfo.IconUrl)
}
void AuthAppBaseInfo::set_iconurl(const char* value, size_t size) {
  set_has_iconurl();
  iconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AuthAppBaseInfo.IconUrl)
}
::std::string* AuthAppBaseInfo::mutable_iconurl() {
  set_has_iconurl();
  // @@protoc_insertion_point(field_mutable:micromsg.AuthAppBaseInfo.IconUrl)
  return iconurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuthAppBaseInfo::release_iconurl() {
  // @@protoc_insertion_point(field_release:micromsg.AuthAppBaseInfo.IconUrl)
  clear_has_iconurl();
  return iconurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthAppBaseInfo::set_allocated_iconurl(::std::string* iconurl) {
  if (iconurl != NULL) {
    set_has_iconurl();
  } else {
    clear_has_iconurl();
  }
  iconurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), iconurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AuthAppBaseInfo.IconUrl)
}

// optional string AppName = 4;
bool AuthAppBaseInfo::has_appname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void AuthAppBaseInfo::set_has_appname() {
  _has_bits_[0] |= 0x00000008u;
}
void AuthAppBaseInfo::clear_has_appname() {
  _has_bits_[0] &= ~0x00000008u;
}
void AuthAppBaseInfo::clear_appname() {
  appname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appname();
}
const ::std::string& AuthAppBaseInfo::appname() const {
  // @@protoc_insertion_point(field_get:micromsg.AuthAppBaseInfo.AppName)
  return appname_.GetNoArena();
}
void AuthAppBaseInfo::set_appname(const ::std::string& value) {
  set_has_appname();
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AuthAppBaseInfo.AppName)
}
#if LANG_CXX11
void AuthAppBaseInfo::set_appname(::std::string&& value) {
  set_has_appname();
  appname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AuthAppBaseInfo.AppName)
}
#endif
void AuthAppBaseInfo::set_appname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appname();
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AuthAppBaseInfo.AppName)
}
void AuthAppBaseInfo::set_appname(const char* value, size_t size) {
  set_has_appname();
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AuthAppBaseInfo.AppName)
}
::std::string* AuthAppBaseInfo::mutable_appname() {
  set_has_appname();
  // @@protoc_insertion_point(field_mutable:micromsg.AuthAppBaseInfo.AppName)
  return appname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuthAppBaseInfo::release_appname() {
  // @@protoc_insertion_point(field_release:micromsg.AuthAppBaseInfo.AppName)
  clear_has_appname();
  return appname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthAppBaseInfo::set_allocated_appname(::std::string* appname) {
  if (appname != NULL) {
    set_has_appname();
  } else {
    clear_has_appname();
  }
  appname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AuthAppBaseInfo.AppName)
}

// required uint32 AppFlag = 5;
bool AuthAppBaseInfo::has_appflag() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void AuthAppBaseInfo::set_has_appflag() {
  _has_bits_[0] |= 0x00000080u;
}
void AuthAppBaseInfo::clear_has_appflag() {
  _has_bits_[0] &= ~0x00000080u;
}
void AuthAppBaseInfo::clear_appflag() {
  appflag_ = 0u;
  clear_has_appflag();
}
::google::protobuf::uint32 AuthAppBaseInfo::appflag() const {
  // @@protoc_insertion_point(field_get:micromsg.AuthAppBaseInfo.AppFlag)
  return appflag_;
}
void AuthAppBaseInfo::set_appflag(::google::protobuf::uint32 value) {
  set_has_appflag();
  appflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AuthAppBaseInfo.AppFlag)
}

// optional string ExternInfo = 6;
bool AuthAppBaseInfo::has_externinfo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void AuthAppBaseInfo::set_has_externinfo() {
  _has_bits_[0] |= 0x00000010u;
}
void AuthAppBaseInfo::clear_has_externinfo() {
  _has_bits_[0] &= ~0x00000010u;
}
void AuthAppBaseInfo::clear_externinfo() {
  externinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_externinfo();
}
const ::std::string& AuthAppBaseInfo::externinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.AuthAppBaseInfo.ExternInfo)
  return externinfo_.GetNoArena();
}
void AuthAppBaseInfo::set_externinfo(const ::std::string& value) {
  set_has_externinfo();
  externinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AuthAppBaseInfo.ExternInfo)
}
#if LANG_CXX11
void AuthAppBaseInfo::set_externinfo(::std::string&& value) {
  set_has_externinfo();
  externinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AuthAppBaseInfo.ExternInfo)
}
#endif
void AuthAppBaseInfo::set_externinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_externinfo();
  externinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AuthAppBaseInfo.ExternInfo)
}
void AuthAppBaseInfo::set_externinfo(const char* value, size_t size) {
  set_has_externinfo();
  externinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AuthAppBaseInfo.ExternInfo)
}
::std::string* AuthAppBaseInfo::mutable_externinfo() {
  set_has_externinfo();
  // @@protoc_insertion_point(field_mutable:micromsg.AuthAppBaseInfo.ExternInfo)
  return externinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuthAppBaseInfo::release_externinfo() {
  // @@protoc_insertion_point(field_release:micromsg.AuthAppBaseInfo.ExternInfo)
  clear_has_externinfo();
  return externinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthAppBaseInfo::set_allocated_externinfo(::std::string* externinfo) {
  if (externinfo != NULL) {
    set_has_externinfo();
  } else {
    clear_has_externinfo();
  }
  externinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), externinfo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AuthAppBaseInfo.ExternInfo)
}

// optional string AuthInfo = 7;
bool AuthAppBaseInfo::has_authinfo() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void AuthAppBaseInfo::set_has_authinfo() {
  _has_bits_[0] |= 0x00000020u;
}
void AuthAppBaseInfo::clear_has_authinfo() {
  _has_bits_[0] &= ~0x00000020u;
}
void AuthAppBaseInfo::clear_authinfo() {
  authinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_authinfo();
}
const ::std::string& AuthAppBaseInfo::authinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.AuthAppBaseInfo.AuthInfo)
  return authinfo_.GetNoArena();
}
void AuthAppBaseInfo::set_authinfo(const ::std::string& value) {
  set_has_authinfo();
  authinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AuthAppBaseInfo.AuthInfo)
}
#if LANG_CXX11
void AuthAppBaseInfo::set_authinfo(::std::string&& value) {
  set_has_authinfo();
  authinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AuthAppBaseInfo.AuthInfo)
}
#endif
void AuthAppBaseInfo::set_authinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_authinfo();
  authinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AuthAppBaseInfo.AuthInfo)
}
void AuthAppBaseInfo::set_authinfo(const char* value, size_t size) {
  set_has_authinfo();
  authinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AuthAppBaseInfo.AuthInfo)
}
::std::string* AuthAppBaseInfo::mutable_authinfo() {
  set_has_authinfo();
  // @@protoc_insertion_point(field_mutable:micromsg.AuthAppBaseInfo.AuthInfo)
  return authinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuthAppBaseInfo::release_authinfo() {
  // @@protoc_insertion_point(field_release:micromsg.AuthAppBaseInfo.AuthInfo)
  clear_has_authinfo();
  return authinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthAppBaseInfo::set_allocated_authinfo(::std::string* authinfo) {
  if (authinfo != NULL) {
    set_has_authinfo();
  } else {
    clear_has_authinfo();
  }
  authinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authinfo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AuthAppBaseInfo.AuthInfo)
}

// optional string DevInfo = 8;
bool AuthAppBaseInfo::has_devinfo() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void AuthAppBaseInfo::set_has_devinfo() {
  _has_bits_[0] |= 0x00000040u;
}
void AuthAppBaseInfo::clear_has_devinfo() {
  _has_bits_[0] &= ~0x00000040u;
}
void AuthAppBaseInfo::clear_devinfo() {
  devinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_devinfo();
}
const ::std::string& AuthAppBaseInfo::devinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.AuthAppBaseInfo.DevInfo)
  return devinfo_.GetNoArena();
}
void AuthAppBaseInfo::set_devinfo(const ::std::string& value) {
  set_has_devinfo();
  devinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AuthAppBaseInfo.DevInfo)
}
#if LANG_CXX11
void AuthAppBaseInfo::set_devinfo(::std::string&& value) {
  set_has_devinfo();
  devinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AuthAppBaseInfo.DevInfo)
}
#endif
void AuthAppBaseInfo::set_devinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_devinfo();
  devinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AuthAppBaseInfo.DevInfo)
}
void AuthAppBaseInfo::set_devinfo(const char* value, size_t size) {
  set_has_devinfo();
  devinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AuthAppBaseInfo.DevInfo)
}
::std::string* AuthAppBaseInfo::mutable_devinfo() {
  set_has_devinfo();
  // @@protoc_insertion_point(field_mutable:micromsg.AuthAppBaseInfo.DevInfo)
  return devinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AuthAppBaseInfo::release_devinfo() {
  // @@protoc_insertion_point(field_release:micromsg.AuthAppBaseInfo.DevInfo)
  clear_has_devinfo();
  return devinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AuthAppBaseInfo::set_allocated_devinfo(::std::string* devinfo) {
  if (devinfo != NULL) {
    set_has_devinfo();
  } else {
    clear_has_devinfo();
  }
  devinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devinfo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AuthAppBaseInfo.DevInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAuthAppListResponse::kBaseResponseFieldNumber;
const int GetAuthAppListResponse::kAppCountFieldNumber;
const int GetAuthAppListResponse::kAuthAppListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAuthAppListResponse::GetAuthAppListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetAuthAppListResponse)
}
GetAuthAppListResponse::GetAuthAppListResponse(const GetAuthAppListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      authapplist_(from.authapplist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  appcount_ = from.appcount_;
  // @@protoc_insertion_point(copy_constructor:micromsg.GetAuthAppListResponse)
}

void GetAuthAppListResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&appcount_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(appcount_));
}

GetAuthAppListResponse::~GetAuthAppListResponse() {
  // @@protoc_insertion_point(destructor:micromsg.GetAuthAppListResponse)
  SharedDtor();
}

void GetAuthAppListResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void GetAuthAppListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAuthAppListResponse::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAuthAppListResponse& GetAuthAppListResponse::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetAuthAppListResponse* GetAuthAppListResponse::New(::google::protobuf::Arena* arena) const {
  GetAuthAppListResponse* n = new GetAuthAppListResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAuthAppListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetAuthAppListResponse)
  authapplist_.Clear();
  if (has_baseresponse()) {
    GOOGLE_DCHECK(baseresponse_ != NULL);
    baseresponse_->::micromsg::BaseResponse::Clear();
  }
  appcount_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetAuthAppListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetAuthAppListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 AppCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_appcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.AuthAppBaseInfo AuthAppList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_authapplist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetAuthAppListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetAuthAppListResponse)
  return false;
#undef DO_
}

void GetAuthAppListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetAuthAppListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // required uint32 AppCount = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->appcount(), output);
  }

  // repeated .micromsg.AuthAppBaseInfo AuthAppList = 3;
  for (unsigned int i = 0, n = this->authapplist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->authapplist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetAuthAppListResponse)
}

::google::protobuf::uint8* GetAuthAppListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetAuthAppListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // required uint32 AppCount = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->appcount(), target);
  }

  // repeated .micromsg.AuthAppBaseInfo AuthAppList = 3;
  for (unsigned int i = 0, n = this->authapplist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->authapplist(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetAuthAppListResponse)
  return target;
}

size_t GetAuthAppListResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetAuthAppListResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_appcount()) {
    // required uint32 AppCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->appcount());
  }

  return total_size;
}
size_t GetAuthAppListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetAuthAppListResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required uint32 AppCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->appcount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.AuthAppBaseInfo AuthAppList = 3;
  {
    unsigned int count = this->authapplist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->authapplist(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAuthAppListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetAuthAppListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAuthAppListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAuthAppListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetAuthAppListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetAuthAppListResponse)
    MergeFrom(*source);
  }
}

void GetAuthAppListResponse::MergeFrom(const GetAuthAppListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetAuthAppListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  authapplist_.MergeFrom(from.authapplist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000002u) {
      appcount_ = from.appcount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetAuthAppListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetAuthAppListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAuthAppListResponse::CopyFrom(const GetAuthAppListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetAuthAppListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAuthAppListResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->authapplist())) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void GetAuthAppListResponse::Swap(GetAuthAppListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAuthAppListResponse::InternalSwap(GetAuthAppListResponse* other) {
  authapplist_.InternalSwap(&other->authapplist_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(appcount_, other->appcount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAuthAppListResponse::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetAuthAppListResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool GetAuthAppListResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetAuthAppListResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
void GetAuthAppListResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetAuthAppListResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& GetAuthAppListResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAuthAppListResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* GetAuthAppListResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetAuthAppListResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* GetAuthAppListResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetAuthAppListResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void GetAuthAppListResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAuthAppListResponse.BaseResponse)
}

// required uint32 AppCount = 2;
bool GetAuthAppListResponse::has_appcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetAuthAppListResponse::set_has_appcount() {
  _has_bits_[0] |= 0x00000002u;
}
void GetAuthAppListResponse::clear_has_appcount() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetAuthAppListResponse::clear_appcount() {
  appcount_ = 0u;
  clear_has_appcount();
}
::google::protobuf::uint32 GetAuthAppListResponse::appcount() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAuthAppListResponse.AppCount)
  return appcount_;
}
void GetAuthAppListResponse::set_appcount(::google::protobuf::uint32 value) {
  set_has_appcount();
  appcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetAuthAppListResponse.AppCount)
}

// repeated .micromsg.AuthAppBaseInfo AuthAppList = 3;
int GetAuthAppListResponse::authapplist_size() const {
  return authapplist_.size();
}
void GetAuthAppListResponse::clear_authapplist() {
  authapplist_.Clear();
}
const ::micromsg::AuthAppBaseInfo& GetAuthAppListResponse::authapplist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetAuthAppListResponse.AuthAppList)
  return authapplist_.Get(index);
}
::micromsg::AuthAppBaseInfo* GetAuthAppListResponse::mutable_authapplist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetAuthAppListResponse.AuthAppList)
  return authapplist_.Mutable(index);
}
::micromsg::AuthAppBaseInfo* GetAuthAppListResponse::add_authapplist() {
  // @@protoc_insertion_point(field_add:micromsg.GetAuthAppListResponse.AuthAppList)
  return authapplist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::AuthAppBaseInfo >*
GetAuthAppListResponse::mutable_authapplist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetAuthAppListResponse.AuthAppList)
  return &authapplist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::AuthAppBaseInfo >&
GetAuthAppListResponse::authapplist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetAuthAppListResponse.AuthAppList)
  return authapplist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAuthAppInfoRequest::kBaseRequestFieldNumber;
const int GetAuthAppInfoRequest::kAppIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAuthAppInfoRequest::GetAuthAppInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetAuthAppInfoRequest)
}
GetAuthAppInfoRequest::GetAuthAppInfoRequest(const GetAuthAppInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appid()) {
    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.GetAuthAppInfoRequest)
}

void GetAuthAppInfoRequest::SharedCtor() {
  _cached_size_ = 0;
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  baserequest_ = NULL;
}

GetAuthAppInfoRequest::~GetAuthAppInfoRequest() {
  // @@protoc_insertion_point(destructor:micromsg.GetAuthAppInfoRequest)
  SharedDtor();
}

void GetAuthAppInfoRequest::SharedDtor() {
  appid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void GetAuthAppInfoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAuthAppInfoRequest::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAuthAppInfoRequest& GetAuthAppInfoRequest::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetAuthAppInfoRequest* GetAuthAppInfoRequest::New(::google::protobuf::Arena* arena) const {
  GetAuthAppInfoRequest* n = new GetAuthAppInfoRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAuthAppInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetAuthAppInfoRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_appid()) {
      GOOGLE_DCHECK(!appid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appid_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetAuthAppInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetAuthAppInfoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appid().data(), this->appid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetAuthAppInfoRequest.AppID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetAuthAppInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetAuthAppInfoRequest)
  return false;
#undef DO_
}

void GetAuthAppInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetAuthAppInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // optional string AppID = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetAuthAppInfoRequest.AppID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetAuthAppInfoRequest)
}

::google::protobuf::uint8* GetAuthAppInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetAuthAppInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // optional string AppID = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetAuthAppInfoRequest.AppID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetAuthAppInfoRequest)
  return target;
}

size_t GetAuthAppInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetAuthAppInfoRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (has_baserequest()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }
  // optional string AppID = 2;
  if (has_appid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAuthAppInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetAuthAppInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAuthAppInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAuthAppInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetAuthAppInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetAuthAppInfoRequest)
    MergeFrom(*source);
  }
}

void GetAuthAppInfoRequest::MergeFrom(const GetAuthAppInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetAuthAppInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_appid();
      appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
  }
}

void GetAuthAppInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetAuthAppInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAuthAppInfoRequest::CopyFrom(const GetAuthAppInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetAuthAppInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAuthAppInfoRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void GetAuthAppInfoRequest::Swap(GetAuthAppInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAuthAppInfoRequest::InternalSwap(GetAuthAppInfoRequest* other) {
  appid_.Swap(&other->appid_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAuthAppInfoRequest::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetAuthAppInfoRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool GetAuthAppInfoRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetAuthAppInfoRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
void GetAuthAppInfoRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetAuthAppInfoRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& GetAuthAppInfoRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAuthAppInfoRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* GetAuthAppInfoRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetAuthAppInfoRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* GetAuthAppInfoRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetAuthAppInfoRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void GetAuthAppInfoRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAuthAppInfoRequest.BaseRequest)
}

// optional string AppID = 2;
bool GetAuthAppInfoRequest::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetAuthAppInfoRequest::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
void GetAuthAppInfoRequest::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetAuthAppInfoRequest::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
const ::std::string& GetAuthAppInfoRequest::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAuthAppInfoRequest.AppID)
  return appid_.GetNoArena();
}
void GetAuthAppInfoRequest::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetAuthAppInfoRequest.AppID)
}
#if LANG_CXX11
void GetAuthAppInfoRequest::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetAuthAppInfoRequest.AppID)
}
#endif
void GetAuthAppInfoRequest::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetAuthAppInfoRequest.AppID)
}
void GetAuthAppInfoRequest::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetAuthAppInfoRequest.AppID)
}
::std::string* GetAuthAppInfoRequest::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetAuthAppInfoRequest.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetAuthAppInfoRequest::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.GetAuthAppInfoRequest.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetAuthAppInfoRequest::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAuthAppInfoRequest.AppID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAuthAppInfoResponse::kBaseResponseFieldNumber;
const int GetAuthAppInfoResponse::kBaseInfoFieldNumber;
const int GetAuthAppInfoResponse::kAuthInfoFieldNumber;
const int GetAuthAppInfoResponse::kDevInfoFieldNumber;
const int GetAuthAppInfoResponse::kExternInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAuthAppInfoResponse::GetAuthAppInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetAuthAppInfoResponse)
}
GetAuthAppInfoResponse::GetAuthAppInfoResponse(const GetAuthAppInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  authinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_authinfo()) {
    authinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authinfo_);
  }
  devinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_devinfo()) {
    devinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devinfo_);
  }
  externinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_externinfo()) {
    externinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.externinfo_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  if (from.has_baseinfo()) {
    baseinfo_ = new ::micromsg::AuthAppBaseInfo(*from.baseinfo_);
  } else {
    baseinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.GetAuthAppInfoResponse)
}

void GetAuthAppInfoResponse::SharedCtor() {
  _cached_size_ = 0;
  authinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  externinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&baseinfo_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(baseinfo_));
}

GetAuthAppInfoResponse::~GetAuthAppInfoResponse() {
  // @@protoc_insertion_point(destructor:micromsg.GetAuthAppInfoResponse)
  SharedDtor();
}

void GetAuthAppInfoResponse::SharedDtor() {
  authinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  devinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  externinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
  if (this != internal_default_instance()) {
    delete baseinfo_;
  }
}

void GetAuthAppInfoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAuthAppInfoResponse::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAuthAppInfoResponse& GetAuthAppInfoResponse::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetAuthAppInfoResponse* GetAuthAppInfoResponse::New(::google::protobuf::Arena* arena) const {
  GetAuthAppInfoResponse* n = new GetAuthAppInfoResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAuthAppInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetAuthAppInfoResponse)
  if (_has_bits_[0 / 32] & 31u) {
    if (has_authinfo()) {
      GOOGLE_DCHECK(!authinfo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*authinfo_.UnsafeRawStringPointer())->clear();
    }
    if (has_devinfo()) {
      GOOGLE_DCHECK(!devinfo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*devinfo_.UnsafeRawStringPointer())->clear();
    }
    if (has_externinfo()) {
      GOOGLE_DCHECK(!externinfo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*externinfo_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
    if (has_baseinfo()) {
      GOOGLE_DCHECK(baseinfo_ != NULL);
      baseinfo_->::micromsg::AuthAppBaseInfo::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetAuthAppInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetAuthAppInfoResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.AuthAppBaseInfo BaseInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AuthInfo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_authinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->authinfo().data(), this->authinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetAuthAppInfoResponse.AuthInfo");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string DevInfo = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->devinfo().data(), this->devinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetAuthAppInfoResponse.DevInfo");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ExternInfo = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_externinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->externinfo().data(), this->externinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetAuthAppInfoResponse.ExternInfo");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetAuthAppInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetAuthAppInfoResponse)
  return false;
#undef DO_
}

void GetAuthAppInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetAuthAppInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // required .micromsg.AuthAppBaseInfo BaseInfo = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->baseinfo_, output);
  }

  // optional string AuthInfo = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->authinfo().data(), this->authinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetAuthAppInfoResponse.AuthInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->authinfo(), output);
  }

  // optional string DevInfo = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->devinfo().data(), this->devinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetAuthAppInfoResponse.DevInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->devinfo(), output);
  }

  // optional string ExternInfo = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->externinfo().data(), this->externinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetAuthAppInfoResponse.ExternInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->externinfo(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetAuthAppInfoResponse)
}

::google::protobuf::uint8* GetAuthAppInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetAuthAppInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // required .micromsg.AuthAppBaseInfo BaseInfo = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->baseinfo_, deterministic, target);
  }

  // optional string AuthInfo = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->authinfo().data(), this->authinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetAuthAppInfoResponse.AuthInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->authinfo(), target);
  }

  // optional string DevInfo = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->devinfo().data(), this->devinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetAuthAppInfoResponse.DevInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->devinfo(), target);
  }

  // optional string ExternInfo = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->externinfo().data(), this->externinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetAuthAppInfoResponse.ExternInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->externinfo(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetAuthAppInfoResponse)
  return target;
}

size_t GetAuthAppInfoResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetAuthAppInfoResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_baseinfo()) {
    // required .micromsg.AuthAppBaseInfo BaseInfo = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseinfo_);
  }

  return total_size;
}
size_t GetAuthAppInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetAuthAppInfoResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000018) ^ 0x00000018) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required .micromsg.AuthAppBaseInfo BaseInfo = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseinfo_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string AuthInfo = 3;
    if (has_authinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->authinfo());
    }

    // optional string DevInfo = 4;
    if (has_devinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->devinfo());
    }

    // optional string ExternInfo = 5;
    if (has_externinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->externinfo());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAuthAppInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetAuthAppInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAuthAppInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAuthAppInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetAuthAppInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetAuthAppInfoResponse)
    MergeFrom(*source);
  }
}

void GetAuthAppInfoResponse::MergeFrom(const GetAuthAppInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetAuthAppInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_authinfo();
      authinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authinfo_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_devinfo();
      devinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.devinfo_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_externinfo();
      externinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.externinfo_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_baseinfo()->::micromsg::AuthAppBaseInfo::MergeFrom(from.baseinfo());
    }
  }
}

void GetAuthAppInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetAuthAppInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAuthAppInfoResponse::CopyFrom(const GetAuthAppInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetAuthAppInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAuthAppInfoResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000018) != 0x00000018) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  if (has_baseinfo()) {
    if (!this->baseinfo_->IsInitialized()) return false;
  }
  return true;
}

void GetAuthAppInfoResponse::Swap(GetAuthAppInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAuthAppInfoResponse::InternalSwap(GetAuthAppInfoResponse* other) {
  authinfo_.Swap(&other->authinfo_);
  devinfo_.Swap(&other->devinfo_);
  externinfo_.Swap(&other->externinfo_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(baseinfo_, other->baseinfo_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAuthAppInfoResponse::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetAuthAppInfoResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool GetAuthAppInfoResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GetAuthAppInfoResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000008u;
}
void GetAuthAppInfoResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000008u;
}
void GetAuthAppInfoResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& GetAuthAppInfoResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAuthAppInfoResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* GetAuthAppInfoResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetAuthAppInfoResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* GetAuthAppInfoResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetAuthAppInfoResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void GetAuthAppInfoResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAuthAppInfoResponse.BaseResponse)
}

// required .micromsg.AuthAppBaseInfo BaseInfo = 2;
bool GetAuthAppInfoResponse::has_baseinfo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GetAuthAppInfoResponse::set_has_baseinfo() {
  _has_bits_[0] |= 0x00000010u;
}
void GetAuthAppInfoResponse::clear_has_baseinfo() {
  _has_bits_[0] &= ~0x00000010u;
}
void GetAuthAppInfoResponse::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::micromsg::AuthAppBaseInfo::Clear();
  clear_has_baseinfo();
}
const ::micromsg::AuthAppBaseInfo& GetAuthAppInfoResponse::baseinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAuthAppInfoResponse.BaseInfo)
  return baseinfo_ != NULL ? *baseinfo_
                         : *::micromsg::AuthAppBaseInfo::internal_default_instance();
}
::micromsg::AuthAppBaseInfo* GetAuthAppInfoResponse::mutable_baseinfo() {
  set_has_baseinfo();
  if (baseinfo_ == NULL) {
    baseinfo_ = new ::micromsg::AuthAppBaseInfo;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetAuthAppInfoResponse.BaseInfo)
  return baseinfo_;
}
::micromsg::AuthAppBaseInfo* GetAuthAppInfoResponse::release_baseinfo() {
  // @@protoc_insertion_point(field_release:micromsg.GetAuthAppInfoResponse.BaseInfo)
  clear_has_baseinfo();
  ::micromsg::AuthAppBaseInfo* temp = baseinfo_;
  baseinfo_ = NULL;
  return temp;
}
void GetAuthAppInfoResponse::set_allocated_baseinfo(::micromsg::AuthAppBaseInfo* baseinfo) {
  delete baseinfo_;
  baseinfo_ = baseinfo;
  if (baseinfo) {
    set_has_baseinfo();
  } else {
    clear_has_baseinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAuthAppInfoResponse.BaseInfo)
}

// optional string AuthInfo = 3;
bool GetAuthAppInfoResponse::has_authinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetAuthAppInfoResponse::set_has_authinfo() {
  _has_bits_[0] |= 0x00000001u;
}
void GetAuthAppInfoResponse::clear_has_authinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetAuthAppInfoResponse::clear_authinfo() {
  authinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_authinfo();
}
const ::std::string& GetAuthAppInfoResponse::authinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAuthAppInfoResponse.AuthInfo)
  return authinfo_.GetNoArena();
}
void GetAuthAppInfoResponse::set_authinfo(const ::std::string& value) {
  set_has_authinfo();
  authinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetAuthAppInfoResponse.AuthInfo)
}
#if LANG_CXX11
void GetAuthAppInfoResponse::set_authinfo(::std::string&& value) {
  set_has_authinfo();
  authinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetAuthAppInfoResponse.AuthInfo)
}
#endif
void GetAuthAppInfoResponse::set_authinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_authinfo();
  authinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetAuthAppInfoResponse.AuthInfo)
}
void GetAuthAppInfoResponse::set_authinfo(const char* value, size_t size) {
  set_has_authinfo();
  authinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetAuthAppInfoResponse.AuthInfo)
}
::std::string* GetAuthAppInfoResponse::mutable_authinfo() {
  set_has_authinfo();
  // @@protoc_insertion_point(field_mutable:micromsg.GetAuthAppInfoResponse.AuthInfo)
  return authinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetAuthAppInfoResponse::release_authinfo() {
  // @@protoc_insertion_point(field_release:micromsg.GetAuthAppInfoResponse.AuthInfo)
  clear_has_authinfo();
  return authinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetAuthAppInfoResponse::set_allocated_authinfo(::std::string* authinfo) {
  if (authinfo != NULL) {
    set_has_authinfo();
  } else {
    clear_has_authinfo();
  }
  authinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authinfo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAuthAppInfoResponse.AuthInfo)
}

// optional string DevInfo = 4;
bool GetAuthAppInfoResponse::has_devinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetAuthAppInfoResponse::set_has_devinfo() {
  _has_bits_[0] |= 0x00000002u;
}
void GetAuthAppInfoResponse::clear_has_devinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetAuthAppInfoResponse::clear_devinfo() {
  devinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_devinfo();
}
const ::std::string& GetAuthAppInfoResponse::devinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAuthAppInfoResponse.DevInfo)
  return devinfo_.GetNoArena();
}
void GetAuthAppInfoResponse::set_devinfo(const ::std::string& value) {
  set_has_devinfo();
  devinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetAuthAppInfoResponse.DevInfo)
}
#if LANG_CXX11
void GetAuthAppInfoResponse::set_devinfo(::std::string&& value) {
  set_has_devinfo();
  devinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetAuthAppInfoResponse.DevInfo)
}
#endif
void GetAuthAppInfoResponse::set_devinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_devinfo();
  devinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetAuthAppInfoResponse.DevInfo)
}
void GetAuthAppInfoResponse::set_devinfo(const char* value, size_t size) {
  set_has_devinfo();
  devinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetAuthAppInfoResponse.DevInfo)
}
::std::string* GetAuthAppInfoResponse::mutable_devinfo() {
  set_has_devinfo();
  // @@protoc_insertion_point(field_mutable:micromsg.GetAuthAppInfoResponse.DevInfo)
  return devinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetAuthAppInfoResponse::release_devinfo() {
  // @@protoc_insertion_point(field_release:micromsg.GetAuthAppInfoResponse.DevInfo)
  clear_has_devinfo();
  return devinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetAuthAppInfoResponse::set_allocated_devinfo(::std::string* devinfo) {
  if (devinfo != NULL) {
    set_has_devinfo();
  } else {
    clear_has_devinfo();
  }
  devinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devinfo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAuthAppInfoResponse.DevInfo)
}

// optional string ExternInfo = 5;
bool GetAuthAppInfoResponse::has_externinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetAuthAppInfoResponse::set_has_externinfo() {
  _has_bits_[0] |= 0x00000004u;
}
void GetAuthAppInfoResponse::clear_has_externinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetAuthAppInfoResponse::clear_externinfo() {
  externinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_externinfo();
}
const ::std::string& GetAuthAppInfoResponse::externinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAuthAppInfoResponse.ExternInfo)
  return externinfo_.GetNoArena();
}
void GetAuthAppInfoResponse::set_externinfo(const ::std::string& value) {
  set_has_externinfo();
  externinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetAuthAppInfoResponse.ExternInfo)
}
#if LANG_CXX11
void GetAuthAppInfoResponse::set_externinfo(::std::string&& value) {
  set_has_externinfo();
  externinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetAuthAppInfoResponse.ExternInfo)
}
#endif
void GetAuthAppInfoResponse::set_externinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_externinfo();
  externinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetAuthAppInfoResponse.ExternInfo)
}
void GetAuthAppInfoResponse::set_externinfo(const char* value, size_t size) {
  set_has_externinfo();
  externinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetAuthAppInfoResponse.ExternInfo)
}
::std::string* GetAuthAppInfoResponse::mutable_externinfo() {
  set_has_externinfo();
  // @@protoc_insertion_point(field_mutable:micromsg.GetAuthAppInfoResponse.ExternInfo)
  return externinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetAuthAppInfoResponse::release_externinfo() {
  // @@protoc_insertion_point(field_release:micromsg.GetAuthAppInfoResponse.ExternInfo)
  clear_has_externinfo();
  return externinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetAuthAppInfoResponse::set_allocated_externinfo(::std::string* externinfo) {
  if (externinfo != NULL) {
    set_has_externinfo();
  } else {
    clear_has_externinfo();
  }
  externinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), externinfo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAuthAppInfoResponse.ExternInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetAppSettingRequest::kBaseRequestFieldNumber;
const int SetAppSettingRequest::kAppIDFieldNumber;
const int SetAppSettingRequest::kCmdIDFieldNumber;
const int SetAppSettingRequest::kCmdValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetAppSettingRequest::SetAppSettingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.SetAppSettingRequest)
}
SetAppSettingRequest::SetAppSettingRequest(const SetAppSettingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appid()) {
    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  cmdvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_cmdvalue()) {
    cmdvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmdvalue_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  cmdid_ = from.cmdid_;
  // @@protoc_insertion_point(copy_constructor:micromsg.SetAppSettingRequest)
}

void SetAppSettingRequest::SharedCtor() {
  _cached_size_ = 0;
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmdvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&cmdid_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(cmdid_));
}

SetAppSettingRequest::~SetAppSettingRequest() {
  // @@protoc_insertion_point(destructor:micromsg.SetAppSettingRequest)
  SharedDtor();
}

void SetAppSettingRequest::SharedDtor() {
  appid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmdvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void SetAppSettingRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetAppSettingRequest::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetAppSettingRequest& SetAppSettingRequest::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetAppSettingRequest* SetAppSettingRequest::New(::google::protobuf::Arena* arena) const {
  SetAppSettingRequest* n = new SetAppSettingRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetAppSettingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.SetAppSettingRequest)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_appid()) {
      GOOGLE_DCHECK(!appid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appid_.UnsafeRawStringPointer())->clear();
    }
    if (has_cmdvalue()) {
      GOOGLE_DCHECK(!cmdvalue_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*cmdvalue_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  cmdid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetAppSettingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.SetAppSettingRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appid().data(), this->appid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.SetAppSettingRequest.AppID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 CmdID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_cmdid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cmdid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string CmdValue = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cmdvalue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cmdvalue().data(), this->cmdvalue().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.SetAppSettingRequest.CmdValue");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.SetAppSettingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.SetAppSettingRequest)
  return false;
#undef DO_
}

void SetAppSettingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.SetAppSettingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // optional string AppID = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SetAppSettingRequest.AppID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appid(), output);
  }

  // required uint32 CmdID = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->cmdid(), output);
  }

  // optional string CmdValue = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cmdvalue().data(), this->cmdvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SetAppSettingRequest.CmdValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->cmdvalue(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.SetAppSettingRequest)
}

::google::protobuf::uint8* SetAppSettingRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.SetAppSettingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // optional string AppID = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SetAppSettingRequest.AppID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appid(), target);
  }

  // required uint32 CmdID = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->cmdid(), target);
  }

  // optional string CmdValue = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cmdvalue().data(), this->cmdvalue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SetAppSettingRequest.CmdValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->cmdvalue(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.SetAppSettingRequest)
  return target;
}

size_t SetAppSettingRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.SetAppSettingRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_cmdid()) {
    // required uint32 CmdID = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cmdid());
  }

  return total_size;
}
size_t SetAppSettingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.SetAppSettingRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000c) ^ 0x0000000c) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required uint32 CmdID = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cmdid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string AppID = 2;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appid());
    }

    // optional string CmdValue = 4;
    if (has_cmdvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cmdvalue());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetAppSettingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.SetAppSettingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetAppSettingRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetAppSettingRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.SetAppSettingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.SetAppSettingRequest)
    MergeFrom(*source);
  }
}

void SetAppSettingRequest::MergeFrom(const SetAppSettingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.SetAppSettingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_appid();
      appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_cmdvalue();
      cmdvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cmdvalue_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000008u) {
      cmdid_ = from.cmdid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SetAppSettingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.SetAppSettingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetAppSettingRequest::CopyFrom(const SetAppSettingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.SetAppSettingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAppSettingRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void SetAppSettingRequest::Swap(SetAppSettingRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetAppSettingRequest::InternalSwap(SetAppSettingRequest* other) {
  appid_.Swap(&other->appid_);
  cmdvalue_.Swap(&other->cmdvalue_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(cmdid_, other->cmdid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetAppSettingRequest::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetAppSettingRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool SetAppSettingRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SetAppSettingRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000004u;
}
void SetAppSettingRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000004u;
}
void SetAppSettingRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& SetAppSettingRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SetAppSettingRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* SetAppSettingRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SetAppSettingRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* SetAppSettingRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SetAppSettingRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void SetAppSettingRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SetAppSettingRequest.BaseRequest)
}

// optional string AppID = 2;
bool SetAppSettingRequest::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SetAppSettingRequest::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
void SetAppSettingRequest::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
void SetAppSettingRequest::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
const ::std::string& SetAppSettingRequest::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.SetAppSettingRequest.AppID)
  return appid_.GetNoArena();
}
void SetAppSettingRequest::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SetAppSettingRequest.AppID)
}
#if LANG_CXX11
void SetAppSettingRequest::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SetAppSettingRequest.AppID)
}
#endif
void SetAppSettingRequest::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SetAppSettingRequest.AppID)
}
void SetAppSettingRequest::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SetAppSettingRequest.AppID)
}
::std::string* SetAppSettingRequest::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.SetAppSettingRequest.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetAppSettingRequest::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.SetAppSettingRequest.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetAppSettingRequest::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SetAppSettingRequest.AppID)
}

// required uint32 CmdID = 3;
bool SetAppSettingRequest::has_cmdid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SetAppSettingRequest::set_has_cmdid() {
  _has_bits_[0] |= 0x00000008u;
}
void SetAppSettingRequest::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000008u;
}
void SetAppSettingRequest::clear_cmdid() {
  cmdid_ = 0u;
  clear_has_cmdid();
}
::google::protobuf::uint32 SetAppSettingRequest::cmdid() const {
  // @@protoc_insertion_point(field_get:micromsg.SetAppSettingRequest.CmdID)
  return cmdid_;
}
void SetAppSettingRequest::set_cmdid(::google::protobuf::uint32 value) {
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SetAppSettingRequest.CmdID)
}

// optional string CmdValue = 4;
bool SetAppSettingRequest::has_cmdvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SetAppSettingRequest::set_has_cmdvalue() {
  _has_bits_[0] |= 0x00000002u;
}
void SetAppSettingRequest::clear_has_cmdvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
void SetAppSettingRequest::clear_cmdvalue() {
  cmdvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cmdvalue();
}
const ::std::string& SetAppSettingRequest::cmdvalue() const {
  // @@protoc_insertion_point(field_get:micromsg.SetAppSettingRequest.CmdValue)
  return cmdvalue_.GetNoArena();
}
void SetAppSettingRequest::set_cmdvalue(const ::std::string& value) {
  set_has_cmdvalue();
  cmdvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SetAppSettingRequest.CmdValue)
}
#if LANG_CXX11
void SetAppSettingRequest::set_cmdvalue(::std::string&& value) {
  set_has_cmdvalue();
  cmdvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SetAppSettingRequest.CmdValue)
}
#endif
void SetAppSettingRequest::set_cmdvalue(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cmdvalue();
  cmdvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SetAppSettingRequest.CmdValue)
}
void SetAppSettingRequest::set_cmdvalue(const char* value, size_t size) {
  set_has_cmdvalue();
  cmdvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SetAppSettingRequest.CmdValue)
}
::std::string* SetAppSettingRequest::mutable_cmdvalue() {
  set_has_cmdvalue();
  // @@protoc_insertion_point(field_mutable:micromsg.SetAppSettingRequest.CmdValue)
  return cmdvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetAppSettingRequest::release_cmdvalue() {
  // @@protoc_insertion_point(field_release:micromsg.SetAppSettingRequest.CmdValue)
  clear_has_cmdvalue();
  return cmdvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetAppSettingRequest::set_allocated_cmdvalue(::std::string* cmdvalue) {
  if (cmdvalue != NULL) {
    set_has_cmdvalue();
  } else {
    clear_has_cmdvalue();
  }
  cmdvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cmdvalue);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SetAppSettingRequest.CmdValue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetAppSettingResponse::kBaseResponseFieldNumber;
const int SetAppSettingResponse::kAppIDFieldNumber;
const int SetAppSettingResponse::kAppFlagFieldNumber;
const int SetAppSettingResponse::kCmdIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetAppSettingResponse::SetAppSettingResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.SetAppSettingResponse)
}
SetAppSettingResponse::SetAppSettingResponse(const SetAppSettingResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appid()) {
    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  ::memcpy(&appflag_, &from.appflag_,
    reinterpret_cast<char*>(&cmdid_) -
    reinterpret_cast<char*>(&appflag_) + sizeof(cmdid_));
  // @@protoc_insertion_point(copy_constructor:micromsg.SetAppSettingResponse)
}

void SetAppSettingResponse::SharedCtor() {
  _cached_size_ = 0;
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&cmdid_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(cmdid_));
}

SetAppSettingResponse::~SetAppSettingResponse() {
  // @@protoc_insertion_point(destructor:micromsg.SetAppSettingResponse)
  SharedDtor();
}

void SetAppSettingResponse::SharedDtor() {
  appid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void SetAppSettingResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetAppSettingResponse::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetAppSettingResponse& SetAppSettingResponse::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetAppSettingResponse* SetAppSettingResponse::New(::google::protobuf::Arena* arena) const {
  SetAppSettingResponse* n = new SetAppSettingResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetAppSettingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.SetAppSettingResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_appid()) {
      GOOGLE_DCHECK(!appid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appid_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 12u) {
    ::memset(&appflag_, 0, reinterpret_cast<char*>(&cmdid_) -
      reinterpret_cast<char*>(&appflag_) + sizeof(cmdid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetAppSettingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.SetAppSettingResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appid().data(), this->appid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.SetAppSettingResponse.AppID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 AppFlag = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_appflag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 CmdID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_cmdid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cmdid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.SetAppSettingResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.SetAppSettingResponse)
  return false;
#undef DO_
}

void SetAppSettingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.SetAppSettingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // optional string AppID = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SetAppSettingResponse.AppID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appid(), output);
  }

  // required uint32 AppFlag = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->appflag(), output);
  }

  // required uint32 CmdID = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->cmdid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.SetAppSettingResponse)
}

::google::protobuf::uint8* SetAppSettingResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.SetAppSettingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // optional string AppID = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SetAppSettingResponse.AppID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appid(), target);
  }

  // required uint32 AppFlag = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->appflag(), target);
  }

  // required uint32 CmdID = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->cmdid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.SetAppSettingResponse)
  return target;
}

size_t SetAppSettingResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.SetAppSettingResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_appflag()) {
    // required uint32 AppFlag = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->appflag());
  }

  if (has_cmdid()) {
    // required uint32 CmdID = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cmdid());
  }

  return total_size;
}
size_t SetAppSettingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.SetAppSettingResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000e) ^ 0x0000000e) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required uint32 AppFlag = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->appflag());

    // required uint32 CmdID = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cmdid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string AppID = 2;
  if (has_appid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetAppSettingResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.SetAppSettingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetAppSettingResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetAppSettingResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.SetAppSettingResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.SetAppSettingResponse)
    MergeFrom(*source);
  }
}

void SetAppSettingResponse::MergeFrom(const SetAppSettingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.SetAppSettingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_appid();
      appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000004u) {
      appflag_ = from.appflag_;
    }
    if (cached_has_bits & 0x00000008u) {
      cmdid_ = from.cmdid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SetAppSettingResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.SetAppSettingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetAppSettingResponse::CopyFrom(const SetAppSettingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.SetAppSettingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetAppSettingResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void SetAppSettingResponse::Swap(SetAppSettingResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetAppSettingResponse::InternalSwap(SetAppSettingResponse* other) {
  appid_.Swap(&other->appid_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(appflag_, other->appflag_);
  std::swap(cmdid_, other->cmdid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetAppSettingResponse::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetAppSettingResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool SetAppSettingResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SetAppSettingResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
void SetAppSettingResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
void SetAppSettingResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& SetAppSettingResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.SetAppSettingResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* SetAppSettingResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SetAppSettingResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* SetAppSettingResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.SetAppSettingResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void SetAppSettingResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SetAppSettingResponse.BaseResponse)
}

// optional string AppID = 2;
bool SetAppSettingResponse::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SetAppSettingResponse::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
void SetAppSettingResponse::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
void SetAppSettingResponse::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
const ::std::string& SetAppSettingResponse::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.SetAppSettingResponse.AppID)
  return appid_.GetNoArena();
}
void SetAppSettingResponse::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SetAppSettingResponse.AppID)
}
#if LANG_CXX11
void SetAppSettingResponse::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SetAppSettingResponse.AppID)
}
#endif
void SetAppSettingResponse::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SetAppSettingResponse.AppID)
}
void SetAppSettingResponse::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SetAppSettingResponse.AppID)
}
::std::string* SetAppSettingResponse::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.SetAppSettingResponse.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetAppSettingResponse::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.SetAppSettingResponse.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetAppSettingResponse::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SetAppSettingResponse.AppID)
}

// required uint32 AppFlag = 3;
bool SetAppSettingResponse::has_appflag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SetAppSettingResponse::set_has_appflag() {
  _has_bits_[0] |= 0x00000004u;
}
void SetAppSettingResponse::clear_has_appflag() {
  _has_bits_[0] &= ~0x00000004u;
}
void SetAppSettingResponse::clear_appflag() {
  appflag_ = 0u;
  clear_has_appflag();
}
::google::protobuf::uint32 SetAppSettingResponse::appflag() const {
  // @@protoc_insertion_point(field_get:micromsg.SetAppSettingResponse.AppFlag)
  return appflag_;
}
void SetAppSettingResponse::set_appflag(::google::protobuf::uint32 value) {
  set_has_appflag();
  appflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SetAppSettingResponse.AppFlag)
}

// required uint32 CmdID = 4;
bool SetAppSettingResponse::has_cmdid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SetAppSettingResponse::set_has_cmdid() {
  _has_bits_[0] |= 0x00000008u;
}
void SetAppSettingResponse::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000008u;
}
void SetAppSettingResponse::clear_cmdid() {
  cmdid_ = 0u;
  clear_has_cmdid();
}
::google::protobuf::uint32 SetAppSettingResponse::cmdid() const {
  // @@protoc_insertion_point(field_get:micromsg.SetAppSettingResponse.CmdID)
  return cmdid_;
}
void SetAppSettingResponse::set_cmdid(::google::protobuf::uint32 value) {
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SetAppSettingResponse.CmdID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppSettingReq::kAppIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppSettingReq::AppSettingReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.AppSettingReq)
}
AppSettingReq::AppSettingReq(const AppSettingReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appid()) {
    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.AppSettingReq)
}

void AppSettingReq::SharedCtor() {
  _cached_size_ = 0;
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AppSettingReq::~AppSettingReq() {
  // @@protoc_insertion_point(destructor:micromsg.AppSettingReq)
  SharedDtor();
}

void AppSettingReq::SharedDtor() {
  appid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AppSettingReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppSettingReq::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AppSettingReq& AppSettingReq::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

AppSettingReq* AppSettingReq::New(::google::protobuf::Arena* arena) const {
  AppSettingReq* n = new AppSettingReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AppSettingReq::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.AppSettingReq)
  if (has_appid()) {
    GOOGLE_DCHECK(!appid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*appid_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AppSettingReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.AppSettingReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string AppID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appid().data(), this->appid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.AppSettingReq.AppID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.AppSettingReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.AppSettingReq)
  return false;
#undef DO_
}

void AppSettingReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.AppSettingReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string AppID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AppSettingReq.AppID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.AppSettingReq)
}

::google::protobuf::uint8* AppSettingReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.AppSettingReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string AppID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AppSettingReq.AppID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.AppSettingReq)
  return target;
}

size_t AppSettingReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.AppSettingReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string AppID = 1;
  if (has_appid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppSettingReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.AppSettingReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AppSettingReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppSettingReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.AppSettingReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.AppSettingReq)
    MergeFrom(*source);
  }
}

void AppSettingReq::MergeFrom(const AppSettingReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.AppSettingReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_appid()) {
    set_has_appid();
    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
}

void AppSettingReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.AppSettingReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppSettingReq::CopyFrom(const AppSettingReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.AppSettingReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppSettingReq::IsInitialized() const {
  return true;
}

void AppSettingReq::Swap(AppSettingReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppSettingReq::InternalSwap(AppSettingReq* other) {
  appid_.Swap(&other->appid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AppSettingReq::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AppSettingReq

// optional string AppID = 1;
bool AppSettingReq::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AppSettingReq::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
void AppSettingReq::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
void AppSettingReq::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
const ::std::string& AppSettingReq::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.AppSettingReq.AppID)
  return appid_.GetNoArena();
}
void AppSettingReq::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AppSettingReq.AppID)
}
#if LANG_CXX11
void AppSettingReq::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AppSettingReq.AppID)
}
#endif
void AppSettingReq::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AppSettingReq.AppID)
}
void AppSettingReq::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AppSettingReq.AppID)
}
::std::string* AppSettingReq::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.AppSettingReq.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppSettingReq::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.AppSettingReq.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppSettingReq::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppSettingReq.AppID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppSetting::kAppIDFieldNumber;
const int AppSetting::kAppFlagFieldNumber;
const int AppSetting::kOpenIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppSetting::AppSetting()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.AppSetting)
}
AppSetting::AppSetting(const AppSetting& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appid()) {
    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  openid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_openid()) {
    openid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.openid_);
  }
  appflag_ = from.appflag_;
  // @@protoc_insertion_point(copy_constructor:micromsg.AppSetting)
}

void AppSetting::SharedCtor() {
  _cached_size_ = 0;
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  openid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appflag_ = 0u;
}

AppSetting::~AppSetting() {
  // @@protoc_insertion_point(destructor:micromsg.AppSetting)
  SharedDtor();
}

void AppSetting::SharedDtor() {
  appid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  openid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AppSetting::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AppSetting::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AppSetting& AppSetting::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

AppSetting* AppSetting::New(::google::protobuf::Arena* arena) const {
  AppSetting* n = new AppSetting;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AppSetting::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.AppSetting)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_appid()) {
      GOOGLE_DCHECK(!appid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appid_.UnsafeRawStringPointer())->clear();
    }
    if (has_openid()) {
      GOOGLE_DCHECK(!openid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*openid_.UnsafeRawStringPointer())->clear();
    }
  }
  appflag_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AppSetting::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.AppSetting)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string AppID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appid().data(), this->appid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.AppSetting.AppID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 AppFlag = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_appflag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string OpenID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_openid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->openid().data(), this->openid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.AppSetting.OpenID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.AppSetting)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.AppSetting)
  return false;
#undef DO_
}

void AppSetting::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.AppSetting)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string AppID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AppSetting.AppID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->appid(), output);
  }

  // required uint32 AppFlag = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->appflag(), output);
  }

  // optional string OpenID = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->openid().data(), this->openid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AppSetting.OpenID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->openid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.AppSetting)
}

::google::protobuf::uint8* AppSetting::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.AppSetting)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string AppID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AppSetting.AppID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->appid(), target);
  }

  // required uint32 AppFlag = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->appflag(), target);
  }

  // optional string OpenID = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->openid().data(), this->openid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.AppSetting.OpenID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->openid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.AppSetting)
  return target;
}

size_t AppSetting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.AppSetting)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint32 AppFlag = 2;
  if (has_appflag()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->appflag());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string AppID = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appid());
    }

    // optional string OpenID = 3;
    if (has_openid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->openid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AppSetting::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.AppSetting)
  GOOGLE_DCHECK_NE(&from, this);
  const AppSetting* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppSetting>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.AppSetting)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.AppSetting)
    MergeFrom(*source);
  }
}

void AppSetting::MergeFrom(const AppSetting& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.AppSetting)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_appid();
      appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_openid();
      openid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.openid_);
    }
    if (cached_has_bits & 0x00000004u) {
      appflag_ = from.appflag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AppSetting::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.AppSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppSetting::CopyFrom(const AppSetting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.AppSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppSetting::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void AppSetting::Swap(AppSetting* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppSetting::InternalSwap(AppSetting* other) {
  appid_.Swap(&other->appid_);
  openid_.Swap(&other->openid_);
  std::swap(appflag_, other->appflag_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AppSetting::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AppSetting

// optional string AppID = 1;
bool AppSetting::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AppSetting::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
void AppSetting::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
void AppSetting::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
const ::std::string& AppSetting::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.AppSetting.AppID)
  return appid_.GetNoArena();
}
void AppSetting::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AppSetting.AppID)
}
#if LANG_CXX11
void AppSetting::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AppSetting.AppID)
}
#endif
void AppSetting::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AppSetting.AppID)
}
void AppSetting::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AppSetting.AppID)
}
::std::string* AppSetting::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.AppSetting.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppSetting::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.AppSetting.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppSetting::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppSetting.AppID)
}

// required uint32 AppFlag = 2;
bool AppSetting::has_appflag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AppSetting::set_has_appflag() {
  _has_bits_[0] |= 0x00000004u;
}
void AppSetting::clear_has_appflag() {
  _has_bits_[0] &= ~0x00000004u;
}
void AppSetting::clear_appflag() {
  appflag_ = 0u;
  clear_has_appflag();
}
::google::protobuf::uint32 AppSetting::appflag() const {
  // @@protoc_insertion_point(field_get:micromsg.AppSetting.AppFlag)
  return appflag_;
}
void AppSetting::set_appflag(::google::protobuf::uint32 value) {
  set_has_appflag();
  appflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AppSetting.AppFlag)
}

// optional string OpenID = 3;
bool AppSetting::has_openid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AppSetting::set_has_openid() {
  _has_bits_[0] |= 0x00000002u;
}
void AppSetting::clear_has_openid() {
  _has_bits_[0] &= ~0x00000002u;
}
void AppSetting::clear_openid() {
  openid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_openid();
}
const ::std::string& AppSetting::openid() const {
  // @@protoc_insertion_point(field_get:micromsg.AppSetting.OpenID)
  return openid_.GetNoArena();
}
void AppSetting::set_openid(const ::std::string& value) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AppSetting.OpenID)
}
#if LANG_CXX11
void AppSetting::set_openid(::std::string&& value) {
  set_has_openid();
  openid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AppSetting.OpenID)
}
#endif
void AppSetting::set_openid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AppSetting.OpenID)
}
void AppSetting::set_openid(const char* value, size_t size) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AppSetting.OpenID)
}
::std::string* AppSetting::mutable_openid() {
  set_has_openid();
  // @@protoc_insertion_point(field_mutable:micromsg.AppSetting.OpenID)
  return openid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AppSetting::release_openid() {
  // @@protoc_insertion_point(field_release:micromsg.AppSetting.OpenID)
  clear_has_openid();
  return openid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AppSetting::set_allocated_openid(::std::string* openid) {
  if (openid != NULL) {
    set_has_openid();
  } else {
    clear_has_openid();
  }
  openid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppSetting.OpenID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAppSettingRequest::kBaseRequestFieldNumber;
const int GetAppSettingRequest::kAppCountFieldNumber;
const int GetAppSettingRequest::kAppSettingReqListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAppSettingRequest::GetAppSettingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetAppSettingRequest)
}
GetAppSettingRequest::GetAppSettingRequest(const GetAppSettingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      appsettingreqlist_(from.appsettingreqlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  appcount_ = from.appcount_;
  // @@protoc_insertion_point(copy_constructor:micromsg.GetAppSettingRequest)
}

void GetAppSettingRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&appcount_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(appcount_));
}

GetAppSettingRequest::~GetAppSettingRequest() {
  // @@protoc_insertion_point(destructor:micromsg.GetAppSettingRequest)
  SharedDtor();
}

void GetAppSettingRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void GetAppSettingRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAppSettingRequest::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAppSettingRequest& GetAppSettingRequest::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetAppSettingRequest* GetAppSettingRequest::New(::google::protobuf::Arena* arena) const {
  GetAppSettingRequest* n = new GetAppSettingRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAppSettingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetAppSettingRequest)
  appsettingreqlist_.Clear();
  if (has_baserequest()) {
    GOOGLE_DCHECK(baserequest_ != NULL);
    baserequest_->::micromsg::BaseRequest::Clear();
  }
  appcount_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetAppSettingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetAppSettingRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 AppCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_appcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.AppSettingReq AppSettingReqList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_appsettingreqlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetAppSettingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetAppSettingRequest)
  return false;
#undef DO_
}

void GetAppSettingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetAppSettingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required uint32 AppCount = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->appcount(), output);
  }

  // repeated .micromsg.AppSettingReq AppSettingReqList = 3;
  for (unsigned int i = 0, n = this->appsettingreqlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->appsettingreqlist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetAppSettingRequest)
}

::google::protobuf::uint8* GetAppSettingRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetAppSettingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required uint32 AppCount = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->appcount(), target);
  }

  // repeated .micromsg.AppSettingReq AppSettingReqList = 3;
  for (unsigned int i = 0, n = this->appsettingreqlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->appsettingreqlist(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetAppSettingRequest)
  return target;
}

size_t GetAppSettingRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetAppSettingRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_appcount()) {
    // required uint32 AppCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->appcount());
  }

  return total_size;
}
size_t GetAppSettingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetAppSettingRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required uint32 AppCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->appcount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.AppSettingReq AppSettingReqList = 3;
  {
    unsigned int count = this->appsettingreqlist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->appsettingreqlist(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAppSettingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetAppSettingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAppSettingRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAppSettingRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetAppSettingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetAppSettingRequest)
    MergeFrom(*source);
  }
}

void GetAppSettingRequest::MergeFrom(const GetAppSettingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetAppSettingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  appsettingreqlist_.MergeFrom(from.appsettingreqlist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000002u) {
      appcount_ = from.appcount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetAppSettingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetAppSettingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAppSettingRequest::CopyFrom(const GetAppSettingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetAppSettingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAppSettingRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void GetAppSettingRequest::Swap(GetAppSettingRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAppSettingRequest::InternalSwap(GetAppSettingRequest* other) {
  appsettingreqlist_.InternalSwap(&other->appsettingreqlist_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(appcount_, other->appcount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAppSettingRequest::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetAppSettingRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool GetAppSettingRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetAppSettingRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
void GetAppSettingRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetAppSettingRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& GetAppSettingRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppSettingRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* GetAppSettingRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppSettingRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* GetAppSettingRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetAppSettingRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void GetAppSettingRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAppSettingRequest.BaseRequest)
}

// required uint32 AppCount = 2;
bool GetAppSettingRequest::has_appcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetAppSettingRequest::set_has_appcount() {
  _has_bits_[0] |= 0x00000002u;
}
void GetAppSettingRequest::clear_has_appcount() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetAppSettingRequest::clear_appcount() {
  appcount_ = 0u;
  clear_has_appcount();
}
::google::protobuf::uint32 GetAppSettingRequest::appcount() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppSettingRequest.AppCount)
  return appcount_;
}
void GetAppSettingRequest::set_appcount(::google::protobuf::uint32 value) {
  set_has_appcount();
  appcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetAppSettingRequest.AppCount)
}

// repeated .micromsg.AppSettingReq AppSettingReqList = 3;
int GetAppSettingRequest::appsettingreqlist_size() const {
  return appsettingreqlist_.size();
}
void GetAppSettingRequest::clear_appsettingreqlist() {
  appsettingreqlist_.Clear();
}
const ::micromsg::AppSettingReq& GetAppSettingRequest::appsettingreqlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppSettingRequest.AppSettingReqList)
  return appsettingreqlist_.Get(index);
}
::micromsg::AppSettingReq* GetAppSettingRequest::mutable_appsettingreqlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppSettingRequest.AppSettingReqList)
  return appsettingreqlist_.Mutable(index);
}
::micromsg::AppSettingReq* GetAppSettingRequest::add_appsettingreqlist() {
  // @@protoc_insertion_point(field_add:micromsg.GetAppSettingRequest.AppSettingReqList)
  return appsettingreqlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::AppSettingReq >*
GetAppSettingRequest::mutable_appsettingreqlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetAppSettingRequest.AppSettingReqList)
  return &appsettingreqlist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::AppSettingReq >&
GetAppSettingRequest::appsettingreqlist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetAppSettingRequest.AppSettingReqList)
  return appsettingreqlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAppSettingResponse::kBaseResponseFieldNumber;
const int GetAppSettingResponse::kAppCountFieldNumber;
const int GetAppSettingResponse::kSettingListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAppSettingResponse::GetAppSettingResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetAppSettingResponse)
}
GetAppSettingResponse::GetAppSettingResponse(const GetAppSettingResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      settinglist_(from.settinglist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  appcount_ = from.appcount_;
  // @@protoc_insertion_point(copy_constructor:micromsg.GetAppSettingResponse)
}

void GetAppSettingResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&appcount_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(appcount_));
}

GetAppSettingResponse::~GetAppSettingResponse() {
  // @@protoc_insertion_point(destructor:micromsg.GetAppSettingResponse)
  SharedDtor();
}

void GetAppSettingResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void GetAppSettingResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAppSettingResponse::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAppSettingResponse& GetAppSettingResponse::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetAppSettingResponse* GetAppSettingResponse::New(::google::protobuf::Arena* arena) const {
  GetAppSettingResponse* n = new GetAppSettingResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAppSettingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetAppSettingResponse)
  settinglist_.Clear();
  if (has_baseresponse()) {
    GOOGLE_DCHECK(baseresponse_ != NULL);
    baseresponse_->::micromsg::BaseResponse::Clear();
  }
  appcount_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetAppSettingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetAppSettingResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 AppCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_appcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.AppSetting SettingList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_settinglist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetAppSettingResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetAppSettingResponse)
  return false;
#undef DO_
}

void GetAppSettingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetAppSettingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // required uint32 AppCount = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->appcount(), output);
  }

  // repeated .micromsg.AppSetting SettingList = 3;
  for (unsigned int i = 0, n = this->settinglist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->settinglist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetAppSettingResponse)
}

::google::protobuf::uint8* GetAppSettingResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetAppSettingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // required uint32 AppCount = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->appcount(), target);
  }

  // repeated .micromsg.AppSetting SettingList = 3;
  for (unsigned int i = 0, n = this->settinglist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->settinglist(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetAppSettingResponse)
  return target;
}

size_t GetAppSettingResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetAppSettingResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_appcount()) {
    // required uint32 AppCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->appcount());
  }

  return total_size;
}
size_t GetAppSettingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetAppSettingResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required uint32 AppCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->appcount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.AppSetting SettingList = 3;
  {
    unsigned int count = this->settinglist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->settinglist(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAppSettingResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetAppSettingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAppSettingResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAppSettingResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetAppSettingResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetAppSettingResponse)
    MergeFrom(*source);
  }
}

void GetAppSettingResponse::MergeFrom(const GetAppSettingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetAppSettingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  settinglist_.MergeFrom(from.settinglist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000002u) {
      appcount_ = from.appcount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetAppSettingResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetAppSettingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAppSettingResponse::CopyFrom(const GetAppSettingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetAppSettingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAppSettingResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->settinglist())) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void GetAppSettingResponse::Swap(GetAppSettingResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAppSettingResponse::InternalSwap(GetAppSettingResponse* other) {
  settinglist_.InternalSwap(&other->settinglist_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(appcount_, other->appcount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAppSettingResponse::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetAppSettingResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool GetAppSettingResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetAppSettingResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
void GetAppSettingResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetAppSettingResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& GetAppSettingResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppSettingResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* GetAppSettingResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppSettingResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* GetAppSettingResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetAppSettingResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void GetAppSettingResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAppSettingResponse.BaseResponse)
}

// required uint32 AppCount = 2;
bool GetAppSettingResponse::has_appcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetAppSettingResponse::set_has_appcount() {
  _has_bits_[0] |= 0x00000002u;
}
void GetAppSettingResponse::clear_has_appcount() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetAppSettingResponse::clear_appcount() {
  appcount_ = 0u;
  clear_has_appcount();
}
::google::protobuf::uint32 GetAppSettingResponse::appcount() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppSettingResponse.AppCount)
  return appcount_;
}
void GetAppSettingResponse::set_appcount(::google::protobuf::uint32 value) {
  set_has_appcount();
  appcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetAppSettingResponse.AppCount)
}

// repeated .micromsg.AppSetting SettingList = 3;
int GetAppSettingResponse::settinglist_size() const {
  return settinglist_.size();
}
void GetAppSettingResponse::clear_settinglist() {
  settinglist_.Clear();
}
const ::micromsg::AppSetting& GetAppSettingResponse::settinglist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppSettingResponse.SettingList)
  return settinglist_.Get(index);
}
::micromsg::AppSetting* GetAppSettingResponse::mutable_settinglist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppSettingResponse.SettingList)
  return settinglist_.Mutable(index);
}
::micromsg::AppSetting* GetAppSettingResponse::add_settinglist() {
  // @@protoc_insertion_point(field_add:micromsg.GetAppSettingResponse.SettingList)
  return settinglist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::AppSetting >*
GetAppSettingResponse::mutable_settinglist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetAppSettingResponse.SettingList)
  return &settinglist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::AppSetting >&
GetAppSettingResponse::settinglist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetAppSettingResponse.SettingList)
  return settinglist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetSuggestionAppListRequest::kBaseRequestFieldNumber;
const int GetSuggestionAppListRequest::kAppTypeFieldNumber;
const int GetSuggestionAppListRequest::kOffSetFieldNumber;
const int GetSuggestionAppListRequest::kLimitFieldNumber;
const int GetSuggestionAppListRequest::kLangFieldNumber;
const int GetSuggestionAppListRequest::kInstalledAppCountFieldNumber;
const int GetSuggestionAppListRequest::kInstalledAppListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSuggestionAppListRequest::GetSuggestionAppListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetSuggestionAppListRequest)
}
GetSuggestionAppListRequest::GetSuggestionAppListRequest(const GetSuggestionAppListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      installedapplist_(from.installedapplist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lang_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_lang()) {
    lang_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lang_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  ::memcpy(&apptype_, &from.apptype_,
    reinterpret_cast<char*>(&installedappcount_) -
    reinterpret_cast<char*>(&apptype_) + sizeof(installedappcount_));
  // @@protoc_insertion_point(copy_constructor:micromsg.GetSuggestionAppListRequest)
}

void GetSuggestionAppListRequest::SharedCtor() {
  _cached_size_ = 0;
  lang_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&installedappcount_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(installedappcount_));
}

GetSuggestionAppListRequest::~GetSuggestionAppListRequest() {
  // @@protoc_insertion_point(destructor:micromsg.GetSuggestionAppListRequest)
  SharedDtor();
}

void GetSuggestionAppListRequest::SharedDtor() {
  lang_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void GetSuggestionAppListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSuggestionAppListRequest::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetSuggestionAppListRequest& GetSuggestionAppListRequest::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetSuggestionAppListRequest* GetSuggestionAppListRequest::New(::google::protobuf::Arena* arena) const {
  GetSuggestionAppListRequest* n = new GetSuggestionAppListRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetSuggestionAppListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetSuggestionAppListRequest)
  installedapplist_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    if (has_lang()) {
      GOOGLE_DCHECK(!lang_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*lang_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 60u) {
    ::memset(&apptype_, 0, reinterpret_cast<char*>(&installedappcount_) -
      reinterpret_cast<char*>(&apptype_) + sizeof(installedappcount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetSuggestionAppListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetSuggestionAppListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 AppType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_apptype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &apptype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 OffSet = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Limit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_limit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Lang = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lang()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->lang().data(), this->lang().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetSuggestionAppListRequest.Lang");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 InstalledAppCount = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_installedappcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &installedappcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.SKBuiltinString_t InstalledAppList = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_installedapplist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetSuggestionAppListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetSuggestionAppListRequest)
  return false;
#undef DO_
}

void GetSuggestionAppListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetSuggestionAppListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required uint32 AppType = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->apptype(), output);
  }

  // required uint32 OffSet = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->offset(), output);
  }

  // required uint32 Limit = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->limit(), output);
  }

  // optional string Lang = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lang().data(), this->lang().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetSuggestionAppListRequest.Lang");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->lang(), output);
  }

  // optional uint32 InstalledAppCount = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->installedappcount(), output);
  }

  // repeated .micromsg.SKBuiltinString_t InstalledAppList = 7;
  for (unsigned int i = 0, n = this->installedapplist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->installedapplist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetSuggestionAppListRequest)
}

::google::protobuf::uint8* GetSuggestionAppListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetSuggestionAppListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required uint32 AppType = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->apptype(), target);
  }

  // required uint32 OffSet = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->offset(), target);
  }

  // required uint32 Limit = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->limit(), target);
  }

  // optional string Lang = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lang().data(), this->lang().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetSuggestionAppListRequest.Lang");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->lang(), target);
  }

  // optional uint32 InstalledAppCount = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->installedappcount(), target);
  }

  // repeated .micromsg.SKBuiltinString_t InstalledAppList = 7;
  for (unsigned int i = 0, n = this->installedapplist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->installedapplist(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetSuggestionAppListRequest)
  return target;
}

size_t GetSuggestionAppListRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetSuggestionAppListRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_apptype()) {
    // required uint32 AppType = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->apptype());
  }

  if (has_offset()) {
    // required uint32 OffSet = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->offset());
  }

  if (has_limit()) {
    // required uint32 Limit = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->limit());
  }

  return total_size;
}
size_t GetSuggestionAppListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetSuggestionAppListRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001e) ^ 0x0000001e) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required uint32 AppType = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->apptype());

    // required uint32 OffSet = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->offset());

    // required uint32 Limit = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->limit());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.SKBuiltinString_t InstalledAppList = 7;
  {
    unsigned int count = this->installedapplist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->installedapplist(i));
    }
  }

  // optional string Lang = 5;
  if (has_lang()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lang());
  }

  // optional uint32 InstalledAppCount = 6;
  if (has_installedappcount()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->installedappcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSuggestionAppListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetSuggestionAppListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSuggestionAppListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetSuggestionAppListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetSuggestionAppListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetSuggestionAppListRequest)
    MergeFrom(*source);
  }
}

void GetSuggestionAppListRequest::MergeFrom(const GetSuggestionAppListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetSuggestionAppListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  installedapplist_.MergeFrom(from.installedapplist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_lang();
      lang_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lang_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000004u) {
      apptype_ = from.apptype_;
    }
    if (cached_has_bits & 0x00000008u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000010u) {
      limit_ = from.limit_;
    }
    if (cached_has_bits & 0x00000020u) {
      installedappcount_ = from.installedappcount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetSuggestionAppListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetSuggestionAppListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSuggestionAppListRequest::CopyFrom(const GetSuggestionAppListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetSuggestionAppListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSuggestionAppListRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001e) != 0x0000001e) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void GetSuggestionAppListRequest::Swap(GetSuggestionAppListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetSuggestionAppListRequest::InternalSwap(GetSuggestionAppListRequest* other) {
  installedapplist_.InternalSwap(&other->installedapplist_);
  lang_.Swap(&other->lang_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(apptype_, other->apptype_);
  std::swap(offset_, other->offset_);
  std::swap(limit_, other->limit_);
  std::swap(installedappcount_, other->installedappcount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetSuggestionAppListRequest::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetSuggestionAppListRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool GetSuggestionAppListRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetSuggestionAppListRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
void GetSuggestionAppListRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetSuggestionAppListRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& GetSuggestionAppListRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppListRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* GetSuggestionAppListRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetSuggestionAppListRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* GetSuggestionAppListRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetSuggestionAppListRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void GetSuggestionAppListRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetSuggestionAppListRequest.BaseRequest)
}

// required uint32 AppType = 2;
bool GetSuggestionAppListRequest::has_apptype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetSuggestionAppListRequest::set_has_apptype() {
  _has_bits_[0] |= 0x00000004u;
}
void GetSuggestionAppListRequest::clear_has_apptype() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetSuggestionAppListRequest::clear_apptype() {
  apptype_ = 0u;
  clear_has_apptype();
}
::google::protobuf::uint32 GetSuggestionAppListRequest::apptype() const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppListRequest.AppType)
  return apptype_;
}
void GetSuggestionAppListRequest::set_apptype(::google::protobuf::uint32 value) {
  set_has_apptype();
  apptype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetSuggestionAppListRequest.AppType)
}

// required uint32 OffSet = 3;
bool GetSuggestionAppListRequest::has_offset() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GetSuggestionAppListRequest::set_has_offset() {
  _has_bits_[0] |= 0x00000008u;
}
void GetSuggestionAppListRequest::clear_has_offset() {
  _has_bits_[0] &= ~0x00000008u;
}
void GetSuggestionAppListRequest::clear_offset() {
  offset_ = 0u;
  clear_has_offset();
}
::google::protobuf::uint32 GetSuggestionAppListRequest::offset() const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppListRequest.OffSet)
  return offset_;
}
void GetSuggestionAppListRequest::set_offset(::google::protobuf::uint32 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetSuggestionAppListRequest.OffSet)
}

// required uint32 Limit = 4;
bool GetSuggestionAppListRequest::has_limit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GetSuggestionAppListRequest::set_has_limit() {
  _has_bits_[0] |= 0x00000010u;
}
void GetSuggestionAppListRequest::clear_has_limit() {
  _has_bits_[0] &= ~0x00000010u;
}
void GetSuggestionAppListRequest::clear_limit() {
  limit_ = 0u;
  clear_has_limit();
}
::google::protobuf::uint32 GetSuggestionAppListRequest::limit() const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppListRequest.Limit)
  return limit_;
}
void GetSuggestionAppListRequest::set_limit(::google::protobuf::uint32 value) {
  set_has_limit();
  limit_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetSuggestionAppListRequest.Limit)
}

// optional string Lang = 5;
bool GetSuggestionAppListRequest::has_lang() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetSuggestionAppListRequest::set_has_lang() {
  _has_bits_[0] |= 0x00000001u;
}
void GetSuggestionAppListRequest::clear_has_lang() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetSuggestionAppListRequest::clear_lang() {
  lang_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lang();
}
const ::std::string& GetSuggestionAppListRequest::lang() const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppListRequest.Lang)
  return lang_.GetNoArena();
}
void GetSuggestionAppListRequest::set_lang(const ::std::string& value) {
  set_has_lang();
  lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetSuggestionAppListRequest.Lang)
}
#if LANG_CXX11
void GetSuggestionAppListRequest::set_lang(::std::string&& value) {
  set_has_lang();
  lang_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetSuggestionAppListRequest.Lang)
}
#endif
void GetSuggestionAppListRequest::set_lang(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_lang();
  lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetSuggestionAppListRequest.Lang)
}
void GetSuggestionAppListRequest::set_lang(const char* value, size_t size) {
  set_has_lang();
  lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetSuggestionAppListRequest.Lang)
}
::std::string* GetSuggestionAppListRequest::mutable_lang() {
  set_has_lang();
  // @@protoc_insertion_point(field_mutable:micromsg.GetSuggestionAppListRequest.Lang)
  return lang_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetSuggestionAppListRequest::release_lang() {
  // @@protoc_insertion_point(field_release:micromsg.GetSuggestionAppListRequest.Lang)
  clear_has_lang();
  return lang_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetSuggestionAppListRequest::set_allocated_lang(::std::string* lang) {
  if (lang != NULL) {
    set_has_lang();
  } else {
    clear_has_lang();
  }
  lang_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetSuggestionAppListRequest.Lang)
}

// optional uint32 InstalledAppCount = 6;
bool GetSuggestionAppListRequest::has_installedappcount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void GetSuggestionAppListRequest::set_has_installedappcount() {
  _has_bits_[0] |= 0x00000020u;
}
void GetSuggestionAppListRequest::clear_has_installedappcount() {
  _has_bits_[0] &= ~0x00000020u;
}
void GetSuggestionAppListRequest::clear_installedappcount() {
  installedappcount_ = 0u;
  clear_has_installedappcount();
}
::google::protobuf::uint32 GetSuggestionAppListRequest::installedappcount() const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppListRequest.InstalledAppCount)
  return installedappcount_;
}
void GetSuggestionAppListRequest::set_installedappcount(::google::protobuf::uint32 value) {
  set_has_installedappcount();
  installedappcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetSuggestionAppListRequest.InstalledAppCount)
}

// repeated .micromsg.SKBuiltinString_t InstalledAppList = 7;
int GetSuggestionAppListRequest::installedapplist_size() const {
  return installedapplist_.size();
}
void GetSuggestionAppListRequest::clear_installedapplist() {
  installedapplist_.Clear();
}
const ::micromsg::SKBuiltinString_t& GetSuggestionAppListRequest::installedapplist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppListRequest.InstalledAppList)
  return installedapplist_.Get(index);
}
::micromsg::SKBuiltinString_t* GetSuggestionAppListRequest::mutable_installedapplist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetSuggestionAppListRequest.InstalledAppList)
  return installedapplist_.Mutable(index);
}
::micromsg::SKBuiltinString_t* GetSuggestionAppListRequest::add_installedapplist() {
  // @@protoc_insertion_point(field_add:micromsg.GetSuggestionAppListRequest.InstalledAppList)
  return installedapplist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
GetSuggestionAppListRequest::mutable_installedapplist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetSuggestionAppListRequest.InstalledAppList)
  return &installedapplist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
GetSuggestionAppListRequest::installedapplist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetSuggestionAppListRequest.InstalledAppList)
  return installedapplist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetSuggestionAppListResponse::kBaseResponseFieldNumber;
const int GetSuggestionAppListResponse::kRcCountFieldNumber;
const int GetSuggestionAppListResponse::kRcListFieldNumber;
const int GetSuggestionAppListResponse::kIsInternalDownloadFieldNumber;
const int GetSuggestionAppListResponse::kAdCountFieldNumber;
const int GetSuggestionAppListResponse::kAdListFieldNumber;
const int GetSuggestionAppListResponse::kGiftCountFieldNumber;
const int GetSuggestionAppListResponse::kGiftListFieldNumber;
const int GetSuggestionAppListResponse::kGiftEntranceItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSuggestionAppListResponse::GetSuggestionAppListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetSuggestionAppListResponse)
}
GetSuggestionAppListResponse::GetSuggestionAppListResponse(const GetSuggestionAppListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      rclist_(from.rclist_),
      adlist_(from.adlist_),
      giftlist_(from.giftlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  if (from.has_giftentranceitem()) {
    giftentranceitem_ = new ::micromsg::GiftEntranceItem(*from.giftentranceitem_);
  } else {
    giftentranceitem_ = NULL;
  }
  ::memcpy(&rccount_, &from.rccount_,
    reinterpret_cast<char*>(&giftcount_) -
    reinterpret_cast<char*>(&rccount_) + sizeof(giftcount_));
  // @@protoc_insertion_point(copy_constructor:micromsg.GetSuggestionAppListResponse)
}

void GetSuggestionAppListResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&giftcount_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(giftcount_));
}

GetSuggestionAppListResponse::~GetSuggestionAppListResponse() {
  // @@protoc_insertion_point(destructor:micromsg.GetSuggestionAppListResponse)
  SharedDtor();
}

void GetSuggestionAppListResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
  if (this != internal_default_instance()) {
    delete giftentranceitem_;
  }
}

void GetSuggestionAppListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSuggestionAppListResponse::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetSuggestionAppListResponse& GetSuggestionAppListResponse::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetSuggestionAppListResponse* GetSuggestionAppListResponse::New(::google::protobuf::Arena* arena) const {
  GetSuggestionAppListResponse* n = new GetSuggestionAppListResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetSuggestionAppListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetSuggestionAppListResponse)
  rclist_.Clear();
  adlist_.Clear();
  giftlist_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
    if (has_giftentranceitem()) {
      GOOGLE_DCHECK(giftentranceitem_ != NULL);
      giftentranceitem_->::micromsg::GiftEntranceItem::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 60u) {
    ::memset(&rccount_, 0, reinterpret_cast<char*>(&giftcount_) -
      reinterpret_cast<char*>(&rccount_) + sizeof(giftcount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetSuggestionAppListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetSuggestionAppListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 RcCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_rccount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rccount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.RcAppList RcList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rclist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 IsInternalDownload = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_isinternaldownload();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &isinternaldownload_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 AdCount = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_adcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &adcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.AdAppList AdList = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_adlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 GiftCount = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_giftcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &giftcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.GiftList GiftList = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_giftlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .micromsg.GiftEntranceItem GiftEntranceItem = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_giftentranceitem()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetSuggestionAppListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetSuggestionAppListResponse)
  return false;
#undef DO_
}

void GetSuggestionAppListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetSuggestionAppListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // required uint32 RcCount = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rccount(), output);
  }

  // repeated .micromsg.RcAppList RcList = 3;
  for (unsigned int i = 0, n = this->rclist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rclist(i), output);
  }

  // optional uint32 IsInternalDownload = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->isinternaldownload(), output);
  }

  // optional uint32 AdCount = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->adcount(), output);
  }

  // repeated .micromsg.AdAppList AdList = 6;
  for (unsigned int i = 0, n = this->adlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->adlist(i), output);
  }

  // optional uint32 GiftCount = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->giftcount(), output);
  }

  // repeated .micromsg.GiftList GiftList = 8;
  for (unsigned int i = 0, n = this->giftlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->giftlist(i), output);
  }

  // optional .micromsg.GiftEntranceItem GiftEntranceItem = 9;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->giftentranceitem_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetSuggestionAppListResponse)
}

::google::protobuf::uint8* GetSuggestionAppListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetSuggestionAppListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // required uint32 RcCount = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rccount(), target);
  }

  // repeated .micromsg.RcAppList RcList = 3;
  for (unsigned int i = 0, n = this->rclist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->rclist(i), deterministic, target);
  }

  // optional uint32 IsInternalDownload = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->isinternaldownload(), target);
  }

  // optional uint32 AdCount = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->adcount(), target);
  }

  // repeated .micromsg.AdAppList AdList = 6;
  for (unsigned int i = 0, n = this->adlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->adlist(i), deterministic, target);
  }

  // optional uint32 GiftCount = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->giftcount(), target);
  }

  // repeated .micromsg.GiftList GiftList = 8;
  for (unsigned int i = 0, n = this->giftlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->giftlist(i), deterministic, target);
  }

  // optional .micromsg.GiftEntranceItem GiftEntranceItem = 9;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->giftentranceitem_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetSuggestionAppListResponse)
  return target;
}

size_t GetSuggestionAppListResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetSuggestionAppListResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_rccount()) {
    // required uint32 RcCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rccount());
  }

  return total_size;
}
size_t GetSuggestionAppListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetSuggestionAppListResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required uint32 RcCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rccount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.RcAppList RcList = 3;
  {
    unsigned int count = this->rclist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rclist(i));
    }
  }

  // repeated .micromsg.AdAppList AdList = 6;
  {
    unsigned int count = this->adlist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->adlist(i));
    }
  }

  // repeated .micromsg.GiftList GiftList = 8;
  {
    unsigned int count = this->giftlist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->giftlist(i));
    }
  }

  // optional .micromsg.GiftEntranceItem GiftEntranceItem = 9;
  if (has_giftentranceitem()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->giftentranceitem_);
  }

  if (_has_bits_[0 / 32] & 56u) {
    // optional uint32 IsInternalDownload = 4;
    if (has_isinternaldownload()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->isinternaldownload());
    }

    // optional uint32 AdCount = 5;
    if (has_adcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->adcount());
    }

    // optional uint32 GiftCount = 7;
    if (has_giftcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->giftcount());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSuggestionAppListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetSuggestionAppListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSuggestionAppListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetSuggestionAppListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetSuggestionAppListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetSuggestionAppListResponse)
    MergeFrom(*source);
  }
}

void GetSuggestionAppListResponse::MergeFrom(const GetSuggestionAppListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetSuggestionAppListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rclist_.MergeFrom(from.rclist_);
  adlist_.MergeFrom(from.adlist_);
  giftlist_.MergeFrom(from.giftlist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_giftentranceitem()->::micromsg::GiftEntranceItem::MergeFrom(from.giftentranceitem());
    }
    if (cached_has_bits & 0x00000004u) {
      rccount_ = from.rccount_;
    }
    if (cached_has_bits & 0x00000008u) {
      isinternaldownload_ = from.isinternaldownload_;
    }
    if (cached_has_bits & 0x00000010u) {
      adcount_ = from.adcount_;
    }
    if (cached_has_bits & 0x00000020u) {
      giftcount_ = from.giftcount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetSuggestionAppListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetSuggestionAppListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSuggestionAppListResponse::CopyFrom(const GetSuggestionAppListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetSuggestionAppListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSuggestionAppListResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->rclist())) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void GetSuggestionAppListResponse::Swap(GetSuggestionAppListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetSuggestionAppListResponse::InternalSwap(GetSuggestionAppListResponse* other) {
  rclist_.InternalSwap(&other->rclist_);
  adlist_.InternalSwap(&other->adlist_);
  giftlist_.InternalSwap(&other->giftlist_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(giftentranceitem_, other->giftentranceitem_);
  std::swap(rccount_, other->rccount_);
  std::swap(isinternaldownload_, other->isinternaldownload_);
  std::swap(adcount_, other->adcount_);
  std::swap(giftcount_, other->giftcount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetSuggestionAppListResponse::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetSuggestionAppListResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool GetSuggestionAppListResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetSuggestionAppListResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
void GetSuggestionAppListResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetSuggestionAppListResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& GetSuggestionAppListResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppListResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* GetSuggestionAppListResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetSuggestionAppListResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* GetSuggestionAppListResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetSuggestionAppListResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void GetSuggestionAppListResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetSuggestionAppListResponse.BaseResponse)
}

// required uint32 RcCount = 2;
bool GetSuggestionAppListResponse::has_rccount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetSuggestionAppListResponse::set_has_rccount() {
  _has_bits_[0] |= 0x00000004u;
}
void GetSuggestionAppListResponse::clear_has_rccount() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetSuggestionAppListResponse::clear_rccount() {
  rccount_ = 0u;
  clear_has_rccount();
}
::google::protobuf::uint32 GetSuggestionAppListResponse::rccount() const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppListResponse.RcCount)
  return rccount_;
}
void GetSuggestionAppListResponse::set_rccount(::google::protobuf::uint32 value) {
  set_has_rccount();
  rccount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetSuggestionAppListResponse.RcCount)
}

// repeated .micromsg.RcAppList RcList = 3;
int GetSuggestionAppListResponse::rclist_size() const {
  return rclist_.size();
}
void GetSuggestionAppListResponse::clear_rclist() {
  rclist_.Clear();
}
const ::micromsg::RcAppList& GetSuggestionAppListResponse::rclist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppListResponse.RcList)
  return rclist_.Get(index);
}
::micromsg::RcAppList* GetSuggestionAppListResponse::mutable_rclist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetSuggestionAppListResponse.RcList)
  return rclist_.Mutable(index);
}
::micromsg::RcAppList* GetSuggestionAppListResponse::add_rclist() {
  // @@protoc_insertion_point(field_add:micromsg.GetSuggestionAppListResponse.RcList)
  return rclist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::RcAppList >*
GetSuggestionAppListResponse::mutable_rclist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetSuggestionAppListResponse.RcList)
  return &rclist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::RcAppList >&
GetSuggestionAppListResponse::rclist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetSuggestionAppListResponse.RcList)
  return rclist_;
}

// optional uint32 IsInternalDownload = 4;
bool GetSuggestionAppListResponse::has_isinternaldownload() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GetSuggestionAppListResponse::set_has_isinternaldownload() {
  _has_bits_[0] |= 0x00000008u;
}
void GetSuggestionAppListResponse::clear_has_isinternaldownload() {
  _has_bits_[0] &= ~0x00000008u;
}
void GetSuggestionAppListResponse::clear_isinternaldownload() {
  isinternaldownload_ = 0u;
  clear_has_isinternaldownload();
}
::google::protobuf::uint32 GetSuggestionAppListResponse::isinternaldownload() const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppListResponse.IsInternalDownload)
  return isinternaldownload_;
}
void GetSuggestionAppListResponse::set_isinternaldownload(::google::protobuf::uint32 value) {
  set_has_isinternaldownload();
  isinternaldownload_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetSuggestionAppListResponse.IsInternalDownload)
}

// optional uint32 AdCount = 5;
bool GetSuggestionAppListResponse::has_adcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GetSuggestionAppListResponse::set_has_adcount() {
  _has_bits_[0] |= 0x00000010u;
}
void GetSuggestionAppListResponse::clear_has_adcount() {
  _has_bits_[0] &= ~0x00000010u;
}
void GetSuggestionAppListResponse::clear_adcount() {
  adcount_ = 0u;
  clear_has_adcount();
}
::google::protobuf::uint32 GetSuggestionAppListResponse::adcount() const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppListResponse.AdCount)
  return adcount_;
}
void GetSuggestionAppListResponse::set_adcount(::google::protobuf::uint32 value) {
  set_has_adcount();
  adcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetSuggestionAppListResponse.AdCount)
}

// repeated .micromsg.AdAppList AdList = 6;
int GetSuggestionAppListResponse::adlist_size() const {
  return adlist_.size();
}
void GetSuggestionAppListResponse::clear_adlist() {
  adlist_.Clear();
}
const ::micromsg::AdAppList& GetSuggestionAppListResponse::adlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppListResponse.AdList)
  return adlist_.Get(index);
}
::micromsg::AdAppList* GetSuggestionAppListResponse::mutable_adlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetSuggestionAppListResponse.AdList)
  return adlist_.Mutable(index);
}
::micromsg::AdAppList* GetSuggestionAppListResponse::add_adlist() {
  // @@protoc_insertion_point(field_add:micromsg.GetSuggestionAppListResponse.AdList)
  return adlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::AdAppList >*
GetSuggestionAppListResponse::mutable_adlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetSuggestionAppListResponse.AdList)
  return &adlist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::AdAppList >&
GetSuggestionAppListResponse::adlist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetSuggestionAppListResponse.AdList)
  return adlist_;
}

// optional uint32 GiftCount = 7;
bool GetSuggestionAppListResponse::has_giftcount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void GetSuggestionAppListResponse::set_has_giftcount() {
  _has_bits_[0] |= 0x00000020u;
}
void GetSuggestionAppListResponse::clear_has_giftcount() {
  _has_bits_[0] &= ~0x00000020u;
}
void GetSuggestionAppListResponse::clear_giftcount() {
  giftcount_ = 0u;
  clear_has_giftcount();
}
::google::protobuf::uint32 GetSuggestionAppListResponse::giftcount() const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppListResponse.GiftCount)
  return giftcount_;
}
void GetSuggestionAppListResponse::set_giftcount(::google::protobuf::uint32 value) {
  set_has_giftcount();
  giftcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetSuggestionAppListResponse.GiftCount)
}

// repeated .micromsg.GiftList GiftList = 8;
int GetSuggestionAppListResponse::giftlist_size() const {
  return giftlist_.size();
}
void GetSuggestionAppListResponse::clear_giftlist() {
  giftlist_.Clear();
}
const ::micromsg::GiftList& GetSuggestionAppListResponse::giftlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppListResponse.GiftList)
  return giftlist_.Get(index);
}
::micromsg::GiftList* GetSuggestionAppListResponse::mutable_giftlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetSuggestionAppListResponse.GiftList)
  return giftlist_.Mutable(index);
}
::micromsg::GiftList* GetSuggestionAppListResponse::add_giftlist() {
  // @@protoc_insertion_point(field_add:micromsg.GetSuggestionAppListResponse.GiftList)
  return giftlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::GiftList >*
GetSuggestionAppListResponse::mutable_giftlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetSuggestionAppListResponse.GiftList)
  return &giftlist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::GiftList >&
GetSuggestionAppListResponse::giftlist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetSuggestionAppListResponse.GiftList)
  return giftlist_;
}

// optional .micromsg.GiftEntranceItem GiftEntranceItem = 9;
bool GetSuggestionAppListResponse::has_giftentranceitem() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetSuggestionAppListResponse::set_has_giftentranceitem() {
  _has_bits_[0] |= 0x00000002u;
}
void GetSuggestionAppListResponse::clear_has_giftentranceitem() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetSuggestionAppListResponse::clear_giftentranceitem() {
  if (giftentranceitem_ != NULL) giftentranceitem_->::micromsg::GiftEntranceItem::Clear();
  clear_has_giftentranceitem();
}
const ::micromsg::GiftEntranceItem& GetSuggestionAppListResponse::giftentranceitem() const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppListResponse.GiftEntranceItem)
  return giftentranceitem_ != NULL ? *giftentranceitem_
                         : *::micromsg::GiftEntranceItem::internal_default_instance();
}
::micromsg::GiftEntranceItem* GetSuggestionAppListResponse::mutable_giftentranceitem() {
  set_has_giftentranceitem();
  if (giftentranceitem_ == NULL) {
    giftentranceitem_ = new ::micromsg::GiftEntranceItem;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetSuggestionAppListResponse.GiftEntranceItem)
  return giftentranceitem_;
}
::micromsg::GiftEntranceItem* GetSuggestionAppListResponse::release_giftentranceitem() {
  // @@protoc_insertion_point(field_release:micromsg.GetSuggestionAppListResponse.GiftEntranceItem)
  clear_has_giftentranceitem();
  ::micromsg::GiftEntranceItem* temp = giftentranceitem_;
  giftentranceitem_ = NULL;
  return temp;
}
void GetSuggestionAppListResponse::set_allocated_giftentranceitem(::micromsg::GiftEntranceItem* giftentranceitem) {
  delete giftentranceitem_;
  giftentranceitem_ = giftentranceitem;
  if (giftentranceitem) {
    set_has_giftentranceitem();
  } else {
    clear_has_giftentranceitem();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetSuggestionAppListResponse.GiftEntranceItem)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JSOAuthRequest::kBaseRequestFieldNumber;
const int JSOAuthRequest::kAppIDFieldNumber;
const int JSOAuthRequest::kUrlFieldNumber;
const int JSOAuthRequest::kScopeFieldNumber;
const int JSOAuthRequest::kSignatureFieldNumber;
const int JSOAuthRequest::kSignatureMethodFieldNumber;
const int JSOAuthRequest::kTimeStampFieldNumber;
const int JSOAuthRequest::kNonceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JSOAuthRequest::JSOAuthRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.JSOAuthRequest)
}
JSOAuthRequest::JSOAuthRequest(const JSOAuthRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appid()) {
    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  scope_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_scope()) {
    scope_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scope_);
  }
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_signature()) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  signature_method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_signature_method()) {
    signature_method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_method_);
  }
  timestamp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_timestamp()) {
    timestamp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timestamp_);
  }
  nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nonce()) {
    nonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nonce_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.JSOAuthRequest)
}

void JSOAuthRequest::SharedCtor() {
  _cached_size_ = 0;
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scope_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  baserequest_ = NULL;
}

JSOAuthRequest::~JSOAuthRequest() {
  // @@protoc_insertion_point(destructor:micromsg.JSOAuthRequest)
  SharedDtor();
}

void JSOAuthRequest::SharedDtor() {
  appid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scope_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nonce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void JSOAuthRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JSOAuthRequest::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JSOAuthRequest& JSOAuthRequest::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

JSOAuthRequest* JSOAuthRequest::New(::google::protobuf::Arena* arena) const {
  JSOAuthRequest* n = new JSOAuthRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JSOAuthRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.JSOAuthRequest)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_appid()) {
      GOOGLE_DCHECK(!appid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appid_.UnsafeRawStringPointer())->clear();
    }
    if (has_url()) {
      GOOGLE_DCHECK(!url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*url_.UnsafeRawStringPointer())->clear();
    }
    if (has_scope()) {
      GOOGLE_DCHECK(!scope_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*scope_.UnsafeRawStringPointer())->clear();
    }
    if (has_signature()) {
      GOOGLE_DCHECK(!signature_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*signature_.UnsafeRawStringPointer())->clear();
    }
    if (has_signature_method()) {
      GOOGLE_DCHECK(!signature_method_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*signature_method_.UnsafeRawStringPointer())->clear();
    }
    if (has_timestamp()) {
      GOOGLE_DCHECK(!timestamp_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*timestamp_.UnsafeRawStringPointer())->clear();
    }
    if (has_nonce()) {
      GOOGLE_DCHECK(!nonce_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*nonce_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool JSOAuthRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.JSOAuthRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appid().data(), this->appid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.JSOAuthRequest.AppID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Url = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.JSOAuthRequest.Url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Scope = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scope()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->scope().data(), this->scope().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.JSOAuthRequest.Scope");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Signature = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signature()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->signature().data(), this->signature().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.JSOAuthRequest.Signature");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Signature_method = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signature_method()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->signature_method().data(), this->signature_method().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.JSOAuthRequest.Signature_method");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string TimeStamp = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_timestamp()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->timestamp().data(), this->timestamp().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.JSOAuthRequest.TimeStamp");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Nonce = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nonce()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nonce().data(), this->nonce().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.JSOAuthRequest.Nonce");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.JSOAuthRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.JSOAuthRequest)
  return false;
#undef DO_
}

void JSOAuthRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.JSOAuthRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // optional string AppID = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.JSOAuthRequest.AppID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appid(), output);
  }

  // optional string Url = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.JSOAuthRequest.Url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->url(), output);
  }

  // optional string Scope = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scope().data(), this->scope().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.JSOAuthRequest.Scope");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->scope(), output);
  }

  // optional string Signature = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->signature().data(), this->signature().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.JSOAuthRequest.Signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->signature(), output);
  }

  // optional string Signature_method = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->signature_method().data(), this->signature_method().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.JSOAuthRequest.Signature_method");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->signature_method(), output);
  }

  // optional string TimeStamp = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->timestamp().data(), this->timestamp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.JSOAuthRequest.TimeStamp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->timestamp(), output);
  }

  // optional string Nonce = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nonce().data(), this->nonce().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.JSOAuthRequest.Nonce");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->nonce(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.JSOAuthRequest)
}

::google::protobuf::uint8* JSOAuthRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.JSOAuthRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // optional string AppID = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.JSOAuthRequest.AppID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appid(), target);
  }

  // optional string Url = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.JSOAuthRequest.Url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->url(), target);
  }

  // optional string Scope = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scope().data(), this->scope().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.JSOAuthRequest.Scope");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->scope(), target);
  }

  // optional string Signature = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->signature().data(), this->signature().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.JSOAuthRequest.Signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->signature(), target);
  }

  // optional string Signature_method = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->signature_method().data(), this->signature_method().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.JSOAuthRequest.Signature_method");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->signature_method(), target);
  }

  // optional string TimeStamp = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->timestamp().data(), this->timestamp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.JSOAuthRequest.TimeStamp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->timestamp(), target);
  }

  // optional string Nonce = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nonce().data(), this->nonce().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.JSOAuthRequest.Nonce");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->nonce(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.JSOAuthRequest)
  return target;
}

size_t JSOAuthRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.JSOAuthRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (has_baserequest()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string AppID = 2;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appid());
    }

    // optional string Url = 3;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional string Scope = 4;
    if (has_scope()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->scope());
    }

    // optional string Signature = 5;
    if (has_signature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->signature());
    }

    // optional string Signature_method = 6;
    if (has_signature_method()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->signature_method());
    }

    // optional string TimeStamp = 7;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->timestamp());
    }

    // optional string Nonce = 8;
    if (has_nonce()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nonce());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JSOAuthRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.JSOAuthRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const JSOAuthRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JSOAuthRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.JSOAuthRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.JSOAuthRequest)
    MergeFrom(*source);
  }
}

void JSOAuthRequest::MergeFrom(const JSOAuthRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.JSOAuthRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_appid();
      appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_scope();
      scope_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scope_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_signature();
      signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_signature_method();
      signature_method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_method_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_timestamp();
      timestamp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timestamp_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_nonce();
      nonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nonce_);
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
  }
}

void JSOAuthRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.JSOAuthRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JSOAuthRequest::CopyFrom(const JSOAuthRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.JSOAuthRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JSOAuthRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000080) != 0x00000080) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void JSOAuthRequest::Swap(JSOAuthRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JSOAuthRequest::InternalSwap(JSOAuthRequest* other) {
  appid_.Swap(&other->appid_);
  url_.Swap(&other->url_);
  scope_.Swap(&other->scope_);
  signature_.Swap(&other->signature_);
  signature_method_.Swap(&other->signature_method_);
  timestamp_.Swap(&other->timestamp_);
  nonce_.Swap(&other->nonce_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JSOAuthRequest::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// JSOAuthRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool JSOAuthRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void JSOAuthRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000080u;
}
void JSOAuthRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000080u;
}
void JSOAuthRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& JSOAuthRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.JSOAuthRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* JSOAuthRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.JSOAuthRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* JSOAuthRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.JSOAuthRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void JSOAuthRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.JSOAuthRequest.BaseRequest)
}

// optional string AppID = 2;
bool JSOAuthRequest::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void JSOAuthRequest::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
void JSOAuthRequest::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
void JSOAuthRequest::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
const ::std::string& JSOAuthRequest::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.JSOAuthRequest.AppID)
  return appid_.GetNoArena();
}
void JSOAuthRequest::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.JSOAuthRequest.AppID)
}
#if LANG_CXX11
void JSOAuthRequest::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.JSOAuthRequest.AppID)
}
#endif
void JSOAuthRequest::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.JSOAuthRequest.AppID)
}
void JSOAuthRequest::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.JSOAuthRequest.AppID)
}
::std::string* JSOAuthRequest::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.JSOAuthRequest.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JSOAuthRequest::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.JSOAuthRequest.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JSOAuthRequest::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.JSOAuthRequest.AppID)
}

// optional string Url = 3;
bool JSOAuthRequest::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void JSOAuthRequest::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
void JSOAuthRequest::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
void JSOAuthRequest::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
const ::std::string& JSOAuthRequest::url() const {
  // @@protoc_insertion_point(field_get:micromsg.JSOAuthRequest.Url)
  return url_.GetNoArena();
}
void JSOAuthRequest::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.JSOAuthRequest.Url)
}
#if LANG_CXX11
void JSOAuthRequest::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.JSOAuthRequest.Url)
}
#endif
void JSOAuthRequest::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.JSOAuthRequest.Url)
}
void JSOAuthRequest::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.JSOAuthRequest.Url)
}
::std::string* JSOAuthRequest::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:micromsg.JSOAuthRequest.Url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JSOAuthRequest::release_url() {
  // @@protoc_insertion_point(field_release:micromsg.JSOAuthRequest.Url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JSOAuthRequest::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:micromsg.JSOAuthRequest.Url)
}

// optional string Scope = 4;
bool JSOAuthRequest::has_scope() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void JSOAuthRequest::set_has_scope() {
  _has_bits_[0] |= 0x00000004u;
}
void JSOAuthRequest::clear_has_scope() {
  _has_bits_[0] &= ~0x00000004u;
}
void JSOAuthRequest::clear_scope() {
  scope_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_scope();
}
const ::std::string& JSOAuthRequest::scope() const {
  // @@protoc_insertion_point(field_get:micromsg.JSOAuthRequest.Scope)
  return scope_.GetNoArena();
}
void JSOAuthRequest::set_scope(const ::std::string& value) {
  set_has_scope();
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.JSOAuthRequest.Scope)
}
#if LANG_CXX11
void JSOAuthRequest::set_scope(::std::string&& value) {
  set_has_scope();
  scope_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.JSOAuthRequest.Scope)
}
#endif
void JSOAuthRequest::set_scope(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_scope();
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.JSOAuthRequest.Scope)
}
void JSOAuthRequest::set_scope(const char* value, size_t size) {
  set_has_scope();
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.JSOAuthRequest.Scope)
}
::std::string* JSOAuthRequest::mutable_scope() {
  set_has_scope();
  // @@protoc_insertion_point(field_mutable:micromsg.JSOAuthRequest.Scope)
  return scope_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JSOAuthRequest::release_scope() {
  // @@protoc_insertion_point(field_release:micromsg.JSOAuthRequest.Scope)
  clear_has_scope();
  return scope_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JSOAuthRequest::set_allocated_scope(::std::string* scope) {
  if (scope != NULL) {
    set_has_scope();
  } else {
    clear_has_scope();
  }
  scope_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scope);
  // @@protoc_insertion_point(field_set_allocated:micromsg.JSOAuthRequest.Scope)
}

// optional string Signature = 5;
bool JSOAuthRequest::has_signature() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void JSOAuthRequest::set_has_signature() {
  _has_bits_[0] |= 0x00000008u;
}
void JSOAuthRequest::clear_has_signature() {
  _has_bits_[0] &= ~0x00000008u;
}
void JSOAuthRequest::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_signature();
}
const ::std::string& JSOAuthRequest::signature() const {
  // @@protoc_insertion_point(field_get:micromsg.JSOAuthRequest.Signature)
  return signature_.GetNoArena();
}
void JSOAuthRequest::set_signature(const ::std::string& value) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.JSOAuthRequest.Signature)
}
#if LANG_CXX11
void JSOAuthRequest::set_signature(::std::string&& value) {
  set_has_signature();
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.JSOAuthRequest.Signature)
}
#endif
void JSOAuthRequest::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.JSOAuthRequest.Signature)
}
void JSOAuthRequest::set_signature(const char* value, size_t size) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.JSOAuthRequest.Signature)
}
::std::string* JSOAuthRequest::mutable_signature() {
  set_has_signature();
  // @@protoc_insertion_point(field_mutable:micromsg.JSOAuthRequest.Signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JSOAuthRequest::release_signature() {
  // @@protoc_insertion_point(field_release:micromsg.JSOAuthRequest.Signature)
  clear_has_signature();
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JSOAuthRequest::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    set_has_signature();
  } else {
    clear_has_signature();
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:micromsg.JSOAuthRequest.Signature)
}

// optional string Signature_method = 6;
bool JSOAuthRequest::has_signature_method() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void JSOAuthRequest::set_has_signature_method() {
  _has_bits_[0] |= 0x00000010u;
}
void JSOAuthRequest::clear_has_signature_method() {
  _has_bits_[0] &= ~0x00000010u;
}
void JSOAuthRequest::clear_signature_method() {
  signature_method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_signature_method();
}
const ::std::string& JSOAuthRequest::signature_method() const {
  // @@protoc_insertion_point(field_get:micromsg.JSOAuthRequest.Signature_method)
  return signature_method_.GetNoArena();
}
void JSOAuthRequest::set_signature_method(const ::std::string& value) {
  set_has_signature_method();
  signature_method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.JSOAuthRequest.Signature_method)
}
#if LANG_CXX11
void JSOAuthRequest::set_signature_method(::std::string&& value) {
  set_has_signature_method();
  signature_method_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.JSOAuthRequest.Signature_method)
}
#endif
void JSOAuthRequest::set_signature_method(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_signature_method();
  signature_method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.JSOAuthRequest.Signature_method)
}
void JSOAuthRequest::set_signature_method(const char* value, size_t size) {
  set_has_signature_method();
  signature_method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.JSOAuthRequest.Signature_method)
}
::std::string* JSOAuthRequest::mutable_signature_method() {
  set_has_signature_method();
  // @@protoc_insertion_point(field_mutable:micromsg.JSOAuthRequest.Signature_method)
  return signature_method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JSOAuthRequest::release_signature_method() {
  // @@protoc_insertion_point(field_release:micromsg.JSOAuthRequest.Signature_method)
  clear_has_signature_method();
  return signature_method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JSOAuthRequest::set_allocated_signature_method(::std::string* signature_method) {
  if (signature_method != NULL) {
    set_has_signature_method();
  } else {
    clear_has_signature_method();
  }
  signature_method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature_method);
  // @@protoc_insertion_point(field_set_allocated:micromsg.JSOAuthRequest.Signature_method)
}

// optional string TimeStamp = 7;
bool JSOAuthRequest::has_timestamp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void JSOAuthRequest::set_has_timestamp() {
  _has_bits_[0] |= 0x00000020u;
}
void JSOAuthRequest::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000020u;
}
void JSOAuthRequest::clear_timestamp() {
  timestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_timestamp();
}
const ::std::string& JSOAuthRequest::timestamp() const {
  // @@protoc_insertion_point(field_get:micromsg.JSOAuthRequest.TimeStamp)
  return timestamp_.GetNoArena();
}
void JSOAuthRequest::set_timestamp(const ::std::string& value) {
  set_has_timestamp();
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.JSOAuthRequest.TimeStamp)
}
#if LANG_CXX11
void JSOAuthRequest::set_timestamp(::std::string&& value) {
  set_has_timestamp();
  timestamp_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.JSOAuthRequest.TimeStamp)
}
#endif
void JSOAuthRequest::set_timestamp(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_timestamp();
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.JSOAuthRequest.TimeStamp)
}
void JSOAuthRequest::set_timestamp(const char* value, size_t size) {
  set_has_timestamp();
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.JSOAuthRequest.TimeStamp)
}
::std::string* JSOAuthRequest::mutable_timestamp() {
  set_has_timestamp();
  // @@protoc_insertion_point(field_mutable:micromsg.JSOAuthRequest.TimeStamp)
  return timestamp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JSOAuthRequest::release_timestamp() {
  // @@protoc_insertion_point(field_release:micromsg.JSOAuthRequest.TimeStamp)
  clear_has_timestamp();
  return timestamp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JSOAuthRequest::set_allocated_timestamp(::std::string* timestamp) {
  if (timestamp != NULL) {
    set_has_timestamp();
  } else {
    clear_has_timestamp();
  }
  timestamp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), timestamp);
  // @@protoc_insertion_point(field_set_allocated:micromsg.JSOAuthRequest.TimeStamp)
}

// optional string Nonce = 8;
bool JSOAuthRequest::has_nonce() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void JSOAuthRequest::set_has_nonce() {
  _has_bits_[0] |= 0x00000040u;
}
void JSOAuthRequest::clear_has_nonce() {
  _has_bits_[0] &= ~0x00000040u;
}
void JSOAuthRequest::clear_nonce() {
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nonce();
}
const ::std::string& JSOAuthRequest::nonce() const {
  // @@protoc_insertion_point(field_get:micromsg.JSOAuthRequest.Nonce)
  return nonce_.GetNoArena();
}
void JSOAuthRequest::set_nonce(const ::std::string& value) {
  set_has_nonce();
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.JSOAuthRequest.Nonce)
}
#if LANG_CXX11
void JSOAuthRequest::set_nonce(::std::string&& value) {
  set_has_nonce();
  nonce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.JSOAuthRequest.Nonce)
}
#endif
void JSOAuthRequest::set_nonce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nonce();
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.JSOAuthRequest.Nonce)
}
void JSOAuthRequest::set_nonce(const char* value, size_t size) {
  set_has_nonce();
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.JSOAuthRequest.Nonce)
}
::std::string* JSOAuthRequest::mutable_nonce() {
  set_has_nonce();
  // @@protoc_insertion_point(field_mutable:micromsg.JSOAuthRequest.Nonce)
  return nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JSOAuthRequest::release_nonce() {
  // @@protoc_insertion_point(field_release:micromsg.JSOAuthRequest.Nonce)
  clear_has_nonce();
  return nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JSOAuthRequest::set_allocated_nonce(::std::string* nonce) {
  if (nonce != NULL) {
    set_has_nonce();
  } else {
    clear_has_nonce();
  }
  nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nonce);
  // @@protoc_insertion_point(field_set_allocated:micromsg.JSOAuthRequest.Nonce)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JSOAuthResponse::kBaseResponseFieldNumber;
const int JSOAuthResponse::kScopeCountFieldNumber;
const int JSOAuthResponse::kScopeListFieldNumber;
const int JSOAuthResponse::kOAuthTitleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JSOAuthResponse::JSOAuthResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.JSOAuthResponse)
}
JSOAuthResponse::JSOAuthResponse(const JSOAuthResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      scopelist_(from.scopelist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oauthtitle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_oauthtitle()) {
    oauthtitle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oauthtitle_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  scopecount_ = from.scopecount_;
  // @@protoc_insertion_point(copy_constructor:micromsg.JSOAuthResponse)
}

void JSOAuthResponse::SharedCtor() {
  _cached_size_ = 0;
  oauthtitle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&scopecount_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(scopecount_));
}

JSOAuthResponse::~JSOAuthResponse() {
  // @@protoc_insertion_point(destructor:micromsg.JSOAuthResponse)
  SharedDtor();
}

void JSOAuthResponse::SharedDtor() {
  oauthtitle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void JSOAuthResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JSOAuthResponse::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JSOAuthResponse& JSOAuthResponse::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

JSOAuthResponse* JSOAuthResponse::New(::google::protobuf::Arena* arena) const {
  JSOAuthResponse* n = new JSOAuthResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JSOAuthResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.JSOAuthResponse)
  scopelist_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    if (has_oauthtitle()) {
      GOOGLE_DCHECK(!oauthtitle_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*oauthtitle_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  scopecount_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool JSOAuthResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.JSOAuthResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ScopeCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_scopecount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scopecount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.BizScopeInfo ScopeList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_scopelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string OAuthTitle = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_oauthtitle()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->oauthtitle().data(), this->oauthtitle().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.JSOAuthResponse.OAuthTitle");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.JSOAuthResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.JSOAuthResponse)
  return false;
#undef DO_
}

void JSOAuthResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.JSOAuthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // required uint32 ScopeCount = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->scopecount(), output);
  }

  // repeated .micromsg.BizScopeInfo ScopeList = 3;
  for (unsigned int i = 0, n = this->scopelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->scopelist(i), output);
  }

  // optional string OAuthTitle = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->oauthtitle().data(), this->oauthtitle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.JSOAuthResponse.OAuthTitle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->oauthtitle(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.JSOAuthResponse)
}

::google::protobuf::uint8* JSOAuthResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.JSOAuthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // required uint32 ScopeCount = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->scopecount(), target);
  }

  // repeated .micromsg.BizScopeInfo ScopeList = 3;
  for (unsigned int i = 0, n = this->scopelist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->scopelist(i), deterministic, target);
  }

  // optional string OAuthTitle = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->oauthtitle().data(), this->oauthtitle().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.JSOAuthResponse.OAuthTitle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->oauthtitle(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.JSOAuthResponse)
  return target;
}

size_t JSOAuthResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.JSOAuthResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_scopecount()) {
    // required uint32 ScopeCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scopecount());
  }

  return total_size;
}
size_t JSOAuthResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.JSOAuthResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required uint32 ScopeCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scopecount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.BizScopeInfo ScopeList = 3;
  {
    unsigned int count = this->scopelist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->scopelist(i));
    }
  }

  // optional string OAuthTitle = 4;
  if (has_oauthtitle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->oauthtitle());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JSOAuthResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.JSOAuthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const JSOAuthResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JSOAuthResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.JSOAuthResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.JSOAuthResponse)
    MergeFrom(*source);
  }
}

void JSOAuthResponse::MergeFrom(const JSOAuthResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.JSOAuthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  scopelist_.MergeFrom(from.scopelist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_oauthtitle();
      oauthtitle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oauthtitle_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000004u) {
      scopecount_ = from.scopecount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void JSOAuthResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.JSOAuthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JSOAuthResponse::CopyFrom(const JSOAuthResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.JSOAuthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JSOAuthResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->scopelist())) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void JSOAuthResponse::Swap(JSOAuthResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JSOAuthResponse::InternalSwap(JSOAuthResponse* other) {
  scopelist_.InternalSwap(&other->scopelist_);
  oauthtitle_.Swap(&other->oauthtitle_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(scopecount_, other->scopecount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JSOAuthResponse::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// JSOAuthResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool JSOAuthResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void JSOAuthResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
void JSOAuthResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
void JSOAuthResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& JSOAuthResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.JSOAuthResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* JSOAuthResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.JSOAuthResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* JSOAuthResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.JSOAuthResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void JSOAuthResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.JSOAuthResponse.BaseResponse)
}

// required uint32 ScopeCount = 2;
bool JSOAuthResponse::has_scopecount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void JSOAuthResponse::set_has_scopecount() {
  _has_bits_[0] |= 0x00000004u;
}
void JSOAuthResponse::clear_has_scopecount() {
  _has_bits_[0] &= ~0x00000004u;
}
void JSOAuthResponse::clear_scopecount() {
  scopecount_ = 0u;
  clear_has_scopecount();
}
::google::protobuf::uint32 JSOAuthResponse::scopecount() const {
  // @@protoc_insertion_point(field_get:micromsg.JSOAuthResponse.ScopeCount)
  return scopecount_;
}
void JSOAuthResponse::set_scopecount(::google::protobuf::uint32 value) {
  set_has_scopecount();
  scopecount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.JSOAuthResponse.ScopeCount)
}

// repeated .micromsg.BizScopeInfo ScopeList = 3;
int JSOAuthResponse::scopelist_size() const {
  return scopelist_.size();
}
void JSOAuthResponse::clear_scopelist() {
  scopelist_.Clear();
}
const ::micromsg::BizScopeInfo& JSOAuthResponse::scopelist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.JSOAuthResponse.ScopeList)
  return scopelist_.Get(index);
}
::micromsg::BizScopeInfo* JSOAuthResponse::mutable_scopelist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.JSOAuthResponse.ScopeList)
  return scopelist_.Mutable(index);
}
::micromsg::BizScopeInfo* JSOAuthResponse::add_scopelist() {
  // @@protoc_insertion_point(field_add:micromsg.JSOAuthResponse.ScopeList)
  return scopelist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::BizScopeInfo >*
JSOAuthResponse::mutable_scopelist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.JSOAuthResponse.ScopeList)
  return &scopelist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::BizScopeInfo >&
JSOAuthResponse::scopelist() const {
  // @@protoc_insertion_point(field_list:micromsg.JSOAuthResponse.ScopeList)
  return scopelist_;
}

// optional string OAuthTitle = 4;
bool JSOAuthResponse::has_oauthtitle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void JSOAuthResponse::set_has_oauthtitle() {
  _has_bits_[0] |= 0x00000001u;
}
void JSOAuthResponse::clear_has_oauthtitle() {
  _has_bits_[0] &= ~0x00000001u;
}
void JSOAuthResponse::clear_oauthtitle() {
  oauthtitle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_oauthtitle();
}
const ::std::string& JSOAuthResponse::oauthtitle() const {
  // @@protoc_insertion_point(field_get:micromsg.JSOAuthResponse.OAuthTitle)
  return oauthtitle_.GetNoArena();
}
void JSOAuthResponse::set_oauthtitle(const ::std::string& value) {
  set_has_oauthtitle();
  oauthtitle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.JSOAuthResponse.OAuthTitle)
}
#if LANG_CXX11
void JSOAuthResponse::set_oauthtitle(::std::string&& value) {
  set_has_oauthtitle();
  oauthtitle_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.JSOAuthResponse.OAuthTitle)
}
#endif
void JSOAuthResponse::set_oauthtitle(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_oauthtitle();
  oauthtitle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.JSOAuthResponse.OAuthTitle)
}
void JSOAuthResponse::set_oauthtitle(const char* value, size_t size) {
  set_has_oauthtitle();
  oauthtitle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.JSOAuthResponse.OAuthTitle)
}
::std::string* JSOAuthResponse::mutable_oauthtitle() {
  set_has_oauthtitle();
  // @@protoc_insertion_point(field_mutable:micromsg.JSOAuthResponse.OAuthTitle)
  return oauthtitle_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* JSOAuthResponse::release_oauthtitle() {
  // @@protoc_insertion_point(field_release:micromsg.JSOAuthResponse.OAuthTitle)
  clear_has_oauthtitle();
  return oauthtitle_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void JSOAuthResponse::set_allocated_oauthtitle(::std::string* oauthtitle) {
  if (oauthtitle != NULL) {
    set_has_oauthtitle();
  } else {
    clear_has_oauthtitle();
  }
  oauthtitle_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oauthtitle);
  // @@protoc_insertion_point(field_set_allocated:micromsg.JSOAuthResponse.OAuthTitle)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetOAuthScopeRequest::kBaseRequestFieldNumber;
const int SetOAuthScopeRequest::kAppIDFieldNumber;
const int SetOAuthScopeRequest::kScopeCountFieldNumber;
const int SetOAuthScopeRequest::kScopeListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetOAuthScopeRequest::SetOAuthScopeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.SetOAuthScopeRequest)
}
SetOAuthScopeRequest::SetOAuthScopeRequest(const SetOAuthScopeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      scopelist_(from.scopelist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appid()) {
    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  scopecount_ = from.scopecount_;
  // @@protoc_insertion_point(copy_constructor:micromsg.SetOAuthScopeRequest)
}

void SetOAuthScopeRequest::SharedCtor() {
  _cached_size_ = 0;
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&scopecount_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(scopecount_));
}

SetOAuthScopeRequest::~SetOAuthScopeRequest() {
  // @@protoc_insertion_point(destructor:micromsg.SetOAuthScopeRequest)
  SharedDtor();
}

void SetOAuthScopeRequest::SharedDtor() {
  appid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void SetOAuthScopeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetOAuthScopeRequest::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetOAuthScopeRequest& SetOAuthScopeRequest::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetOAuthScopeRequest* SetOAuthScopeRequest::New(::google::protobuf::Arena* arena) const {
  SetOAuthScopeRequest* n = new SetOAuthScopeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetOAuthScopeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.SetOAuthScopeRequest)
  scopelist_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    if (has_appid()) {
      GOOGLE_DCHECK(!appid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appid_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  scopecount_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetOAuthScopeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.SetOAuthScopeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appid().data(), this->appid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.SetOAuthScopeRequest.AppID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ScopeCount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_scopecount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scopecount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.BizScopeInfo ScopeList = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_scopelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.SetOAuthScopeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.SetOAuthScopeRequest)
  return false;
#undef DO_
}

void SetOAuthScopeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.SetOAuthScopeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // optional string AppID = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SetOAuthScopeRequest.AppID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appid(), output);
  }

  // required uint32 ScopeCount = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->scopecount(), output);
  }

  // repeated .micromsg.BizScopeInfo ScopeList = 4;
  for (unsigned int i = 0, n = this->scopelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->scopelist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.SetOAuthScopeRequest)
}

::google::protobuf::uint8* SetOAuthScopeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.SetOAuthScopeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // optional string AppID = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SetOAuthScopeRequest.AppID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appid(), target);
  }

  // required uint32 ScopeCount = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->scopecount(), target);
  }

  // repeated .micromsg.BizScopeInfo ScopeList = 4;
  for (unsigned int i = 0, n = this->scopelist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->scopelist(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.SetOAuthScopeRequest)
  return target;
}

size_t SetOAuthScopeRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.SetOAuthScopeRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_scopecount()) {
    // required uint32 ScopeCount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scopecount());
  }

  return total_size;
}
size_t SetOAuthScopeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.SetOAuthScopeRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required uint32 ScopeCount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scopecount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.BizScopeInfo ScopeList = 4;
  {
    unsigned int count = this->scopelist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->scopelist(i));
    }
  }

  // optional string AppID = 2;
  if (has_appid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetOAuthScopeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.SetOAuthScopeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetOAuthScopeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetOAuthScopeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.SetOAuthScopeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.SetOAuthScopeRequest)
    MergeFrom(*source);
  }
}

void SetOAuthScopeRequest::MergeFrom(const SetOAuthScopeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.SetOAuthScopeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  scopelist_.MergeFrom(from.scopelist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_appid();
      appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000004u) {
      scopecount_ = from.scopecount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SetOAuthScopeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.SetOAuthScopeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetOAuthScopeRequest::CopyFrom(const SetOAuthScopeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.SetOAuthScopeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetOAuthScopeRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->scopelist())) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void SetOAuthScopeRequest::Swap(SetOAuthScopeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetOAuthScopeRequest::InternalSwap(SetOAuthScopeRequest* other) {
  scopelist_.InternalSwap(&other->scopelist_);
  appid_.Swap(&other->appid_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(scopecount_, other->scopecount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetOAuthScopeRequest::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetOAuthScopeRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool SetOAuthScopeRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SetOAuthScopeRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
void SetOAuthScopeRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
void SetOAuthScopeRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& SetOAuthScopeRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SetOAuthScopeRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* SetOAuthScopeRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SetOAuthScopeRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* SetOAuthScopeRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SetOAuthScopeRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void SetOAuthScopeRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SetOAuthScopeRequest.BaseRequest)
}

// optional string AppID = 2;
bool SetOAuthScopeRequest::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SetOAuthScopeRequest::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
void SetOAuthScopeRequest::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
void SetOAuthScopeRequest::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
const ::std::string& SetOAuthScopeRequest::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.SetOAuthScopeRequest.AppID)
  return appid_.GetNoArena();
}
void SetOAuthScopeRequest::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SetOAuthScopeRequest.AppID)
}
#if LANG_CXX11
void SetOAuthScopeRequest::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SetOAuthScopeRequest.AppID)
}
#endif
void SetOAuthScopeRequest::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SetOAuthScopeRequest.AppID)
}
void SetOAuthScopeRequest::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SetOAuthScopeRequest.AppID)
}
::std::string* SetOAuthScopeRequest::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.SetOAuthScopeRequest.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetOAuthScopeRequest::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.SetOAuthScopeRequest.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetOAuthScopeRequest::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SetOAuthScopeRequest.AppID)
}

// required uint32 ScopeCount = 3;
bool SetOAuthScopeRequest::has_scopecount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SetOAuthScopeRequest::set_has_scopecount() {
  _has_bits_[0] |= 0x00000004u;
}
void SetOAuthScopeRequest::clear_has_scopecount() {
  _has_bits_[0] &= ~0x00000004u;
}
void SetOAuthScopeRequest::clear_scopecount() {
  scopecount_ = 0u;
  clear_has_scopecount();
}
::google::protobuf::uint32 SetOAuthScopeRequest::scopecount() const {
  // @@protoc_insertion_point(field_get:micromsg.SetOAuthScopeRequest.ScopeCount)
  return scopecount_;
}
void SetOAuthScopeRequest::set_scopecount(::google::protobuf::uint32 value) {
  set_has_scopecount();
  scopecount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SetOAuthScopeRequest.ScopeCount)
}

// repeated .micromsg.BizScopeInfo ScopeList = 4;
int SetOAuthScopeRequest::scopelist_size() const {
  return scopelist_.size();
}
void SetOAuthScopeRequest::clear_scopelist() {
  scopelist_.Clear();
}
const ::micromsg::BizScopeInfo& SetOAuthScopeRequest::scopelist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.SetOAuthScopeRequest.ScopeList)
  return scopelist_.Get(index);
}
::micromsg::BizScopeInfo* SetOAuthScopeRequest::mutable_scopelist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.SetOAuthScopeRequest.ScopeList)
  return scopelist_.Mutable(index);
}
::micromsg::BizScopeInfo* SetOAuthScopeRequest::add_scopelist() {
  // @@protoc_insertion_point(field_add:micromsg.SetOAuthScopeRequest.ScopeList)
  return scopelist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::BizScopeInfo >*
SetOAuthScopeRequest::mutable_scopelist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.SetOAuthScopeRequest.ScopeList)
  return &scopelist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::BizScopeInfo >&
SetOAuthScopeRequest::scopelist() const {
  // @@protoc_insertion_point(field_list:micromsg.SetOAuthScopeRequest.ScopeList)
  return scopelist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetOAuthScopeResponse::kBaseRequestFieldNumber;
const int SetOAuthScopeResponse::kScopeCountFieldNumber;
const int SetOAuthScopeResponse::kScopeListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetOAuthScopeResponse::SetOAuthScopeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.SetOAuthScopeResponse)
}
SetOAuthScopeResponse::SetOAuthScopeResponse(const SetOAuthScopeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      scopelist_(from.scopelist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  scopecount_ = from.scopecount_;
  // @@protoc_insertion_point(copy_constructor:micromsg.SetOAuthScopeResponse)
}

void SetOAuthScopeResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&scopecount_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(scopecount_));
}

SetOAuthScopeResponse::~SetOAuthScopeResponse() {
  // @@protoc_insertion_point(destructor:micromsg.SetOAuthScopeResponse)
  SharedDtor();
}

void SetOAuthScopeResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void SetOAuthScopeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetOAuthScopeResponse::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetOAuthScopeResponse& SetOAuthScopeResponse::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetOAuthScopeResponse* SetOAuthScopeResponse::New(::google::protobuf::Arena* arena) const {
  SetOAuthScopeResponse* n = new SetOAuthScopeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetOAuthScopeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.SetOAuthScopeResponse)
  scopelist_.Clear();
  if (has_baserequest()) {
    GOOGLE_DCHECK(baserequest_ != NULL);
    baserequest_->::micromsg::BaseRequest::Clear();
  }
  scopecount_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetOAuthScopeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.SetOAuthScopeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ScopeCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_scopecount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scopecount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.BizScopeInfo ScopeList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_scopelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.SetOAuthScopeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.SetOAuthScopeResponse)
  return false;
#undef DO_
}

void SetOAuthScopeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.SetOAuthScopeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required uint32 ScopeCount = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->scopecount(), output);
  }

  // repeated .micromsg.BizScopeInfo ScopeList = 3;
  for (unsigned int i = 0, n = this->scopelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->scopelist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.SetOAuthScopeResponse)
}

::google::protobuf::uint8* SetOAuthScopeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.SetOAuthScopeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required uint32 ScopeCount = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->scopecount(), target);
  }

  // repeated .micromsg.BizScopeInfo ScopeList = 3;
  for (unsigned int i = 0, n = this->scopelist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->scopelist(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.SetOAuthScopeResponse)
  return target;
}

size_t SetOAuthScopeResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.SetOAuthScopeResponse)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_scopecount()) {
    // required uint32 ScopeCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scopecount());
  }

  return total_size;
}
size_t SetOAuthScopeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.SetOAuthScopeResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required uint32 ScopeCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scopecount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.BizScopeInfo ScopeList = 3;
  {
    unsigned int count = this->scopelist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->scopelist(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetOAuthScopeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.SetOAuthScopeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetOAuthScopeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetOAuthScopeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.SetOAuthScopeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.SetOAuthScopeResponse)
    MergeFrom(*source);
  }
}

void SetOAuthScopeResponse::MergeFrom(const SetOAuthScopeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.SetOAuthScopeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  scopelist_.MergeFrom(from.scopelist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000002u) {
      scopecount_ = from.scopecount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SetOAuthScopeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.SetOAuthScopeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetOAuthScopeResponse::CopyFrom(const SetOAuthScopeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.SetOAuthScopeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetOAuthScopeResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->scopelist())) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void SetOAuthScopeResponse::Swap(SetOAuthScopeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetOAuthScopeResponse::InternalSwap(SetOAuthScopeResponse* other) {
  scopelist_.InternalSwap(&other->scopelist_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(scopecount_, other->scopecount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetOAuthScopeResponse::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetOAuthScopeResponse

// required .micromsg.BaseRequest BaseRequest = 1;
bool SetOAuthScopeResponse::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SetOAuthScopeResponse::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
void SetOAuthScopeResponse::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
void SetOAuthScopeResponse::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& SetOAuthScopeResponse::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SetOAuthScopeResponse.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* SetOAuthScopeResponse::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SetOAuthScopeResponse.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* SetOAuthScopeResponse::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SetOAuthScopeResponse.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void SetOAuthScopeResponse::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SetOAuthScopeResponse.BaseRequest)
}

// required uint32 ScopeCount = 2;
bool SetOAuthScopeResponse::has_scopecount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SetOAuthScopeResponse::set_has_scopecount() {
  _has_bits_[0] |= 0x00000002u;
}
void SetOAuthScopeResponse::clear_has_scopecount() {
  _has_bits_[0] &= ~0x00000002u;
}
void SetOAuthScopeResponse::clear_scopecount() {
  scopecount_ = 0u;
  clear_has_scopecount();
}
::google::protobuf::uint32 SetOAuthScopeResponse::scopecount() const {
  // @@protoc_insertion_point(field_get:micromsg.SetOAuthScopeResponse.ScopeCount)
  return scopecount_;
}
void SetOAuthScopeResponse::set_scopecount(::google::protobuf::uint32 value) {
  set_has_scopecount();
  scopecount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SetOAuthScopeResponse.ScopeCount)
}

// repeated .micromsg.BizScopeInfo ScopeList = 3;
int SetOAuthScopeResponse::scopelist_size() const {
  return scopelist_.size();
}
void SetOAuthScopeResponse::clear_scopelist() {
  scopelist_.Clear();
}
const ::micromsg::BizScopeInfo& SetOAuthScopeResponse::scopelist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.SetOAuthScopeResponse.ScopeList)
  return scopelist_.Get(index);
}
::micromsg::BizScopeInfo* SetOAuthScopeResponse::mutable_scopelist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.SetOAuthScopeResponse.ScopeList)
  return scopelist_.Mutable(index);
}
::micromsg::BizScopeInfo* SetOAuthScopeResponse::add_scopelist() {
  // @@protoc_insertion_point(field_add:micromsg.SetOAuthScopeResponse.ScopeList)
  return scopelist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::BizScopeInfo >*
SetOAuthScopeResponse::mutable_scopelist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.SetOAuthScopeResponse.ScopeList)
  return &scopelist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::BizScopeInfo >&
SetOAuthScopeResponse::scopelist() const {
  // @@protoc_insertion_point(field_list:micromsg.SetOAuthScopeResponse.ScopeList)
  return scopelist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetUserInfoInAppRequest::kBaseRequestFieldNumber;
const int GetUserInfoInAppRequest::kAppIDFieldNumber;
const int GetUserInfoInAppRequest::kUserCountFieldNumber;
const int GetUserInfoInAppRequest::kUserNameListFieldNumber;
const int GetUserInfoInAppRequest::kSceneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetUserInfoInAppRequest::GetUserInfoInAppRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetUserInfoInAppRequest)
}
GetUserInfoInAppRequest::GetUserInfoInAppRequest(const GetUserInfoInAppRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      usernamelist_(from.usernamelist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appid()) {
    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  ::memcpy(&usercount_, &from.usercount_,
    reinterpret_cast<char*>(&scene_) -
    reinterpret_cast<char*>(&usercount_) + sizeof(scene_));
  // @@protoc_insertion_point(copy_constructor:micromsg.GetUserInfoInAppRequest)
}

void GetUserInfoInAppRequest::SharedCtor() {
  _cached_size_ = 0;
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&scene_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(scene_));
}

GetUserInfoInAppRequest::~GetUserInfoInAppRequest() {
  // @@protoc_insertion_point(destructor:micromsg.GetUserInfoInAppRequest)
  SharedDtor();
}

void GetUserInfoInAppRequest::SharedDtor() {
  appid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void GetUserInfoInAppRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetUserInfoInAppRequest::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetUserInfoInAppRequest& GetUserInfoInAppRequest::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetUserInfoInAppRequest* GetUserInfoInAppRequest::New(::google::protobuf::Arena* arena) const {
  GetUserInfoInAppRequest* n = new GetUserInfoInAppRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetUserInfoInAppRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetUserInfoInAppRequest)
  usernamelist_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    if (has_appid()) {
      GOOGLE_DCHECK(!appid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appid_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 12u) {
    ::memset(&usercount_, 0, reinterpret_cast<char*>(&scene_) -
      reinterpret_cast<char*>(&usercount_) + sizeof(scene_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetUserInfoInAppRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetUserInfoInAppRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appid().data(), this->appid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetUserInfoInAppRequest.AppID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 UserCount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_usercount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &usercount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.SKBuiltinString_t UserNameList = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_usernamelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Scene = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_scene();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetUserInfoInAppRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetUserInfoInAppRequest)
  return false;
#undef DO_
}

void GetUserInfoInAppRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetUserInfoInAppRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // optional string AppID = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetUserInfoInAppRequest.AppID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appid(), output);
  }

  // required uint32 UserCount = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->usercount(), output);
  }

  // repeated .micromsg.SKBuiltinString_t UserNameList = 4;
  for (unsigned int i = 0, n = this->usernamelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->usernamelist(i), output);
  }

  // required uint32 Scene = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->scene(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetUserInfoInAppRequest)
}

::google::protobuf::uint8* GetUserInfoInAppRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetUserInfoInAppRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // optional string AppID = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetUserInfoInAppRequest.AppID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appid(), target);
  }

  // required uint32 UserCount = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->usercount(), target);
  }

  // repeated .micromsg.SKBuiltinString_t UserNameList = 4;
  for (unsigned int i = 0, n = this->usernamelist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->usernamelist(i), deterministic, target);
  }

  // required uint32 Scene = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->scene(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetUserInfoInAppRequest)
  return target;
}

size_t GetUserInfoInAppRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetUserInfoInAppRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_usercount()) {
    // required uint32 UserCount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->usercount());
  }

  if (has_scene()) {
    // required uint32 Scene = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene());
  }

  return total_size;
}
size_t GetUserInfoInAppRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetUserInfoInAppRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000e) ^ 0x0000000e) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required uint32 UserCount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->usercount());

    // required uint32 Scene = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.SKBuiltinString_t UserNameList = 4;
  {
    unsigned int count = this->usernamelist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->usernamelist(i));
    }
  }

  // optional string AppID = 2;
  if (has_appid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->appid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetUserInfoInAppRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetUserInfoInAppRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetUserInfoInAppRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetUserInfoInAppRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetUserInfoInAppRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetUserInfoInAppRequest)
    MergeFrom(*source);
  }
}

void GetUserInfoInAppRequest::MergeFrom(const GetUserInfoInAppRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetUserInfoInAppRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  usernamelist_.MergeFrom(from.usernamelist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_appid();
      appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000004u) {
      usercount_ = from.usercount_;
    }
    if (cached_has_bits & 0x00000008u) {
      scene_ = from.scene_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetUserInfoInAppRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetUserInfoInAppRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetUserInfoInAppRequest::CopyFrom(const GetUserInfoInAppRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetUserInfoInAppRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserInfoInAppRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void GetUserInfoInAppRequest::Swap(GetUserInfoInAppRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetUserInfoInAppRequest::InternalSwap(GetUserInfoInAppRequest* other) {
  usernamelist_.InternalSwap(&other->usernamelist_);
  appid_.Swap(&other->appid_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(usercount_, other->usercount_);
  std::swap(scene_, other->scene_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetUserInfoInAppRequest::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetUserInfoInAppRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool GetUserInfoInAppRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetUserInfoInAppRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
void GetUserInfoInAppRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetUserInfoInAppRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& GetUserInfoInAppRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetUserInfoInAppRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* GetUserInfoInAppRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetUserInfoInAppRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* GetUserInfoInAppRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetUserInfoInAppRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void GetUserInfoInAppRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetUserInfoInAppRequest.BaseRequest)
}

// optional string AppID = 2;
bool GetUserInfoInAppRequest::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetUserInfoInAppRequest::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
void GetUserInfoInAppRequest::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetUserInfoInAppRequest::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
const ::std::string& GetUserInfoInAppRequest::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetUserInfoInAppRequest.AppID)
  return appid_.GetNoArena();
}
void GetUserInfoInAppRequest::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetUserInfoInAppRequest.AppID)
}
#if LANG_CXX11
void GetUserInfoInAppRequest::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetUserInfoInAppRequest.AppID)
}
#endif
void GetUserInfoInAppRequest::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetUserInfoInAppRequest.AppID)
}
void GetUserInfoInAppRequest::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetUserInfoInAppRequest.AppID)
}
::std::string* GetUserInfoInAppRequest::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetUserInfoInAppRequest.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetUserInfoInAppRequest::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.GetUserInfoInAppRequest.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetUserInfoInAppRequest::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetUserInfoInAppRequest.AppID)
}

// required uint32 UserCount = 3;
bool GetUserInfoInAppRequest::has_usercount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetUserInfoInAppRequest::set_has_usercount() {
  _has_bits_[0] |= 0x00000004u;
}
void GetUserInfoInAppRequest::clear_has_usercount() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetUserInfoInAppRequest::clear_usercount() {
  usercount_ = 0u;
  clear_has_usercount();
}
::google::protobuf::uint32 GetUserInfoInAppRequest::usercount() const {
  // @@protoc_insertion_point(field_get:micromsg.GetUserInfoInAppRequest.UserCount)
  return usercount_;
}
void GetUserInfoInAppRequest::set_usercount(::google::protobuf::uint32 value) {
  set_has_usercount();
  usercount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetUserInfoInAppRequest.UserCount)
}

// repeated .micromsg.SKBuiltinString_t UserNameList = 4;
int GetUserInfoInAppRequest::usernamelist_size() const {
  return usernamelist_.size();
}
void GetUserInfoInAppRequest::clear_usernamelist() {
  usernamelist_.Clear();
}
const ::micromsg::SKBuiltinString_t& GetUserInfoInAppRequest::usernamelist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetUserInfoInAppRequest.UserNameList)
  return usernamelist_.Get(index);
}
::micromsg::SKBuiltinString_t* GetUserInfoInAppRequest::mutable_usernamelist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetUserInfoInAppRequest.UserNameList)
  return usernamelist_.Mutable(index);
}
::micromsg::SKBuiltinString_t* GetUserInfoInAppRequest::add_usernamelist() {
  // @@protoc_insertion_point(field_add:micromsg.GetUserInfoInAppRequest.UserNameList)
  return usernamelist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
GetUserInfoInAppRequest::mutable_usernamelist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetUserInfoInAppRequest.UserNameList)
  return &usernamelist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
GetUserInfoInAppRequest::usernamelist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetUserInfoInAppRequest.UserNameList)
  return usernamelist_;
}

// required uint32 Scene = 5;
bool GetUserInfoInAppRequest::has_scene() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GetUserInfoInAppRequest::set_has_scene() {
  _has_bits_[0] |= 0x00000008u;
}
void GetUserInfoInAppRequest::clear_has_scene() {
  _has_bits_[0] &= ~0x00000008u;
}
void GetUserInfoInAppRequest::clear_scene() {
  scene_ = 0u;
  clear_has_scene();
}
::google::protobuf::uint32 GetUserInfoInAppRequest::scene() const {
  // @@protoc_insertion_point(field_get:micromsg.GetUserInfoInAppRequest.Scene)
  return scene_;
}
void GetUserInfoInAppRequest::set_scene(::google::protobuf::uint32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetUserInfoInAppRequest.Scene)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserInfoInApp::kUserNameFieldNumber;
const int UserInfoInApp::kPersonalSettingXmlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserInfoInApp::UserInfoInApp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.UserInfoInApp)
}
UserInfoInApp::UserInfoInApp(const UserInfoInApp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  personalsettingxml_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_personalsettingxml()) {
    personalsettingxml_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.personalsettingxml_);
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.UserInfoInApp)
}

void UserInfoInApp::SharedCtor() {
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  personalsettingxml_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UserInfoInApp::~UserInfoInApp() {
  // @@protoc_insertion_point(destructor:micromsg.UserInfoInApp)
  SharedDtor();
}

void UserInfoInApp::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  personalsettingxml_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserInfoInApp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserInfoInApp::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserInfoInApp& UserInfoInApp::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserInfoInApp* UserInfoInApp::New(::google::protobuf::Arena* arena) const {
  UserInfoInApp* n = new UserInfoInApp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserInfoInApp::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.UserInfoInApp)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_username()) {
      GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*username_.UnsafeRawStringPointer())->clear();
    }
    if (has_personalsettingxml()) {
      GOOGLE_DCHECK(!personalsettingxml_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*personalsettingxml_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UserInfoInApp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.UserInfoInApp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string UserName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.UserInfoInApp.UserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string PersonalSettingXml = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_personalsettingxml()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->personalsettingxml().data(), this->personalsettingxml().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.UserInfoInApp.PersonalSettingXml");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.UserInfoInApp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.UserInfoInApp)
  return false;
#undef DO_
}

void UserInfoInApp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.UserInfoInApp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string UserName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.UserInfoInApp.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // optional string PersonalSettingXml = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->personalsettingxml().data(), this->personalsettingxml().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.UserInfoInApp.PersonalSettingXml");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->personalsettingxml(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.UserInfoInApp)
}

::google::protobuf::uint8* UserInfoInApp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.UserInfoInApp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string UserName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.UserInfoInApp.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // optional string PersonalSettingXml = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->personalsettingxml().data(), this->personalsettingxml().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.UserInfoInApp.PersonalSettingXml");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->personalsettingxml(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.UserInfoInApp)
  return target;
}

size_t UserInfoInApp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.UserInfoInApp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string UserName = 1;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional string PersonalSettingXml = 2;
    if (has_personalsettingxml()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->personalsettingxml());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserInfoInApp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.UserInfoInApp)
  GOOGLE_DCHECK_NE(&from, this);
  const UserInfoInApp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserInfoInApp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.UserInfoInApp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.UserInfoInApp)
    MergeFrom(*source);
  }
}

void UserInfoInApp::MergeFrom(const UserInfoInApp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.UserInfoInApp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_personalsettingxml();
      personalsettingxml_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.personalsettingxml_);
    }
  }
}

void UserInfoInApp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.UserInfoInApp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserInfoInApp::CopyFrom(const UserInfoInApp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.UserInfoInApp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserInfoInApp::IsInitialized() const {
  return true;
}

void UserInfoInApp::Swap(UserInfoInApp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserInfoInApp::InternalSwap(UserInfoInApp* other) {
  username_.Swap(&other->username_);
  personalsettingxml_.Swap(&other->personalsettingxml_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserInfoInApp::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserInfoInApp

// optional string UserName = 1;
bool UserInfoInApp::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UserInfoInApp::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
void UserInfoInApp::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
void UserInfoInApp::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& UserInfoInApp::username() const {
  // @@protoc_insertion_point(field_get:micromsg.UserInfoInApp.UserName)
  return username_.GetNoArena();
}
void UserInfoInApp::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.UserInfoInApp.UserName)
}
#if LANG_CXX11
void UserInfoInApp::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.UserInfoInApp.UserName)
}
#endif
void UserInfoInApp::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.UserInfoInApp.UserName)
}
void UserInfoInApp::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.UserInfoInApp.UserName)
}
::std::string* UserInfoInApp::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.UserInfoInApp.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserInfoInApp::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.UserInfoInApp.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfoInApp::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.UserInfoInApp.UserName)
}

// optional string PersonalSettingXml = 2;
bool UserInfoInApp::has_personalsettingxml() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UserInfoInApp::set_has_personalsettingxml() {
  _has_bits_[0] |= 0x00000002u;
}
void UserInfoInApp::clear_has_personalsettingxml() {
  _has_bits_[0] &= ~0x00000002u;
}
void UserInfoInApp::clear_personalsettingxml() {
  personalsettingxml_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_personalsettingxml();
}
const ::std::string& UserInfoInApp::personalsettingxml() const {
  // @@protoc_insertion_point(field_get:micromsg.UserInfoInApp.PersonalSettingXml)
  return personalsettingxml_.GetNoArena();
}
void UserInfoInApp::set_personalsettingxml(const ::std::string& value) {
  set_has_personalsettingxml();
  personalsettingxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.UserInfoInApp.PersonalSettingXml)
}
#if LANG_CXX11
void UserInfoInApp::set_personalsettingxml(::std::string&& value) {
  set_has_personalsettingxml();
  personalsettingxml_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.UserInfoInApp.PersonalSettingXml)
}
#endif
void UserInfoInApp::set_personalsettingxml(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_personalsettingxml();
  personalsettingxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.UserInfoInApp.PersonalSettingXml)
}
void UserInfoInApp::set_personalsettingxml(const char* value, size_t size) {
  set_has_personalsettingxml();
  personalsettingxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.UserInfoInApp.PersonalSettingXml)
}
::std::string* UserInfoInApp::mutable_personalsettingxml() {
  set_has_personalsettingxml();
  // @@protoc_insertion_point(field_mutable:micromsg.UserInfoInApp.PersonalSettingXml)
  return personalsettingxml_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserInfoInApp::release_personalsettingxml() {
  // @@protoc_insertion_point(field_release:micromsg.UserInfoInApp.PersonalSettingXml)
  clear_has_personalsettingxml();
  return personalsettingxml_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfoInApp::set_allocated_personalsettingxml(::std::string* personalsettingxml) {
  if (personalsettingxml != NULL) {
    set_has_personalsettingxml();
  } else {
    clear_has_personalsettingxml();
  }
  personalsettingxml_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), personalsettingxml);
  // @@protoc_insertion_point(field_set_allocated:micromsg.UserInfoInApp.PersonalSettingXml)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetUserInfoInAppResponse::kBaseResponseFieldNumber;
const int GetUserInfoInAppResponse::kUserCountFieldNumber;
const int GetUserInfoInAppResponse::kUserInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetUserInfoInAppResponse::GetUserInfoInAppResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetUserInfoInAppResponse)
}
GetUserInfoInAppResponse::GetUserInfoInAppResponse(const GetUserInfoInAppResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      userinfolist_(from.userinfolist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  usercount_ = from.usercount_;
  // @@protoc_insertion_point(copy_constructor:micromsg.GetUserInfoInAppResponse)
}

void GetUserInfoInAppResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&usercount_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(usercount_));
}

GetUserInfoInAppResponse::~GetUserInfoInAppResponse() {
  // @@protoc_insertion_point(destructor:micromsg.GetUserInfoInAppResponse)
  SharedDtor();
}

void GetUserInfoInAppResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void GetUserInfoInAppResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetUserInfoInAppResponse::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetUserInfoInAppResponse& GetUserInfoInAppResponse::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetUserInfoInAppResponse* GetUserInfoInAppResponse::New(::google::protobuf::Arena* arena) const {
  GetUserInfoInAppResponse* n = new GetUserInfoInAppResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetUserInfoInAppResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetUserInfoInAppResponse)
  userinfolist_.Clear();
  if (has_baseresponse()) {
    GOOGLE_DCHECK(baseresponse_ != NULL);
    baseresponse_->::micromsg::BaseResponse::Clear();
  }
  usercount_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetUserInfoInAppResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetUserInfoInAppResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 UserCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_usercount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &usercount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.UserInfoInApp UserInfoList = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_userinfolist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetUserInfoInAppResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetUserInfoInAppResponse)
  return false;
#undef DO_
}

void GetUserInfoInAppResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetUserInfoInAppResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // required uint32 UserCount = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->usercount(), output);
  }

  // repeated .micromsg.UserInfoInApp UserInfoList = 3;
  for (unsigned int i = 0, n = this->userinfolist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->userinfolist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetUserInfoInAppResponse)
}

::google::protobuf::uint8* GetUserInfoInAppResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetUserInfoInAppResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // required uint32 UserCount = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->usercount(), target);
  }

  // repeated .micromsg.UserInfoInApp UserInfoList = 3;
  for (unsigned int i = 0, n = this->userinfolist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->userinfolist(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetUserInfoInAppResponse)
  return target;
}

size_t GetUserInfoInAppResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetUserInfoInAppResponse)
  size_t total_size = 0;

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_usercount()) {
    // required uint32 UserCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->usercount());
  }

  return total_size;
}
size_t GetUserInfoInAppResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetUserInfoInAppResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .micromsg.BaseResponse BaseResponse = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required uint32 UserCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->usercount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.UserInfoInApp UserInfoList = 3;
  {
    unsigned int count = this->userinfolist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->userinfolist(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetUserInfoInAppResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetUserInfoInAppResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetUserInfoInAppResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetUserInfoInAppResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetUserInfoInAppResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetUserInfoInAppResponse)
    MergeFrom(*source);
  }
}

void GetUserInfoInAppResponse::MergeFrom(const GetUserInfoInAppResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetUserInfoInAppResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  userinfolist_.MergeFrom(from.userinfolist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000002u) {
      usercount_ = from.usercount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetUserInfoInAppResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetUserInfoInAppResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetUserInfoInAppResponse::CopyFrom(const GetUserInfoInAppResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetUserInfoInAppResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserInfoInAppResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void GetUserInfoInAppResponse::Swap(GetUserInfoInAppResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetUserInfoInAppResponse::InternalSwap(GetUserInfoInAppResponse* other) {
  userinfolist_.InternalSwap(&other->userinfolist_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(usercount_, other->usercount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetUserInfoInAppResponse::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetUserInfoInAppResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool GetUserInfoInAppResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetUserInfoInAppResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
void GetUserInfoInAppResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetUserInfoInAppResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& GetUserInfoInAppResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetUserInfoInAppResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* GetUserInfoInAppResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetUserInfoInAppResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* GetUserInfoInAppResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetUserInfoInAppResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void GetUserInfoInAppResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetUserInfoInAppResponse.BaseResponse)
}

// required uint32 UserCount = 2;
bool GetUserInfoInAppResponse::has_usercount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetUserInfoInAppResponse::set_has_usercount() {
  _has_bits_[0] |= 0x00000002u;
}
void GetUserInfoInAppResponse::clear_has_usercount() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetUserInfoInAppResponse::clear_usercount() {
  usercount_ = 0u;
  clear_has_usercount();
}
::google::protobuf::uint32 GetUserInfoInAppResponse::usercount() const {
  // @@protoc_insertion_point(field_get:micromsg.GetUserInfoInAppResponse.UserCount)
  return usercount_;
}
void GetUserInfoInAppResponse::set_usercount(::google::protobuf::uint32 value) {
  set_has_usercount();
  usercount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetUserInfoInAppResponse.UserCount)
}

// repeated .micromsg.UserInfoInApp UserInfoList = 3;
int GetUserInfoInAppResponse::userinfolist_size() const {
  return userinfolist_.size();
}
void GetUserInfoInAppResponse::clear_userinfolist() {
  userinfolist_.Clear();
}
const ::micromsg::UserInfoInApp& GetUserInfoInAppResponse::userinfolist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetUserInfoInAppResponse.UserInfoList)
  return userinfolist_.Get(index);
}
::micromsg::UserInfoInApp* GetUserInfoInAppResponse::mutable_userinfolist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetUserInfoInAppResponse.UserInfoList)
  return userinfolist_.Mutable(index);
}
::micromsg::UserInfoInApp* GetUserInfoInAppResponse::add_userinfolist() {
  // @@protoc_insertion_point(field_add:micromsg.GetUserInfoInAppResponse.UserInfoList)
  return userinfolist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::UserInfoInApp >*
GetUserInfoInAppResponse::mutable_userinfolist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetUserInfoInAppResponse.UserInfoList)
  return &userinfolist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::UserInfoInApp >&
GetUserInfoInAppResponse::userinfolist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetUserInfoInAppResponse.UserInfoList)
  return userinfolist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckCanSubscribeBizRequest::kBaseRequestFieldNumber;
const int CheckCanSubscribeBizRequest::kSourceFieldNumber;
const int CheckCanSubscribeBizRequest::kToUserNameFieldNumber;
const int CheckCanSubscribeBizRequest::kExtInfoFieldNumber;
const int CheckCanSubscribeBizRequest::kAppIDFieldNumber;
const int CheckCanSubscribeBizRequest::kPackNumFieldNumber;
const int CheckCanSubscribeBizRequest::kAndroidPackNameListFieldNumber;
const int CheckCanSubscribeBizRequest::kIosBunddleIDFieldNumber;
const int CheckCanSubscribeBizRequest::kFromURLFieldNumber;
const int CheckCanSubscribeBizRequest::kSceneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckCanSubscribeBizRequest::CheckCanSubscribeBizRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.CheckCanSubscribeBizRequest)
}
CheckCanSubscribeBizRequest::CheckCanSubscribeBizRequest(const CheckCanSubscribeBizRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      androidpacknamelist_(from.androidpacknamelist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tousername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tousername()) {
    tousername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tousername_);
  }
  extinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_extinfo()) {
    extinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extinfo_);
  }
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appid()) {
    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  iosbunddleid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_iosbunddleid()) {
    iosbunddleid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iosbunddleid_);
  }
  fromurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_fromurl()) {
    fromurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fromurl_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  ::memcpy(&source_, &from.source_,
    reinterpret_cast<char*>(&scene_) -
    reinterpret_cast<char*>(&source_) + sizeof(scene_));
  // @@protoc_insertion_point(copy_constructor:micromsg.CheckCanSubscribeBizRequest)
}

void CheckCanSubscribeBizRequest::SharedCtor() {
  _cached_size_ = 0;
  tousername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iosbunddleid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fromurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&scene_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(scene_));
}

CheckCanSubscribeBizRequest::~CheckCanSubscribeBizRequest() {
  // @@protoc_insertion_point(destructor:micromsg.CheckCanSubscribeBizRequest)
  SharedDtor();
}

void CheckCanSubscribeBizRequest::SharedDtor() {
  tousername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iosbunddleid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fromurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void CheckCanSubscribeBizRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckCanSubscribeBizRequest::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckCanSubscribeBizRequest& CheckCanSubscribeBizRequest::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

CheckCanSubscribeBizRequest* CheckCanSubscribeBizRequest::New(::google::protobuf::Arena* arena) const {
  CheckCanSubscribeBizRequest* n = new CheckCanSubscribeBizRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckCanSubscribeBizRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.CheckCanSubscribeBizRequest)
  androidpacknamelist_.Clear();
  if (_has_bits_[0 / 32] & 63u) {
    if (has_tousername()) {
      GOOGLE_DCHECK(!tousername_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*tousername_.UnsafeRawStringPointer())->clear();
    }
    if (has_extinfo()) {
      GOOGLE_DCHECK(!extinfo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*extinfo_.UnsafeRawStringPointer())->clear();
    }
    if (has_appid()) {
      GOOGLE_DCHECK(!appid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appid_.UnsafeRawStringPointer())->clear();
    }
    if (has_iosbunddleid()) {
      GOOGLE_DCHECK(!iosbunddleid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*iosbunddleid_.UnsafeRawStringPointer())->clear();
    }
    if (has_fromurl()) {
      GOOGLE_DCHECK(!fromurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*fromurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 192u) {
    ::memset(&source_, 0, reinterpret_cast<char*>(&packnum_) -
      reinterpret_cast<char*>(&source_) + sizeof(packnum_));
  }
  scene_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CheckCanSubscribeBizRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.CheckCanSubscribeBizRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Source = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_source();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ToUserName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tousername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tousername().data(), this->tousername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.CheckCanSubscribeBizRequest.ToUserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ExtInfo = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->extinfo().data(), this->extinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.CheckCanSubscribeBizRequest.ExtInfo");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppID = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appid().data(), this->appid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.CheckCanSubscribeBizRequest.AppID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 PackNum = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_packnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.SKBuiltinString_t AndroidPackNameList = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_androidpacknamelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string IosBunddleID = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_iosbunddleid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->iosbunddleid().data(), this->iosbunddleid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.CheckCanSubscribeBizRequest.IosBunddleID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string FromURL = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fromurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fromurl().data(), this->fromurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.CheckCanSubscribeBizRequest.FromURL");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 Scene = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has_scene();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.CheckCanSubscribeBizRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.CheckCanSubscribeBizRequest)
  return false;
#undef DO_
}

void CheckCanSubscribeBizRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.CheckCanSubscribeBizRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required uint32 Source = 2;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->source(), output);
  }

  // optional string ToUserName = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tousername().data(), this->tousername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CheckCanSubscribeBizRequest.ToUserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->tousername(), output);
  }

  // optional string ExtInfo = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extinfo().data(), this->extinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CheckCanSubscribeBizRequest.ExtInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->extinfo(), output);
  }

  // optional string AppID = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CheckCanSubscribeBizRequest.AppID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->appid(), output);
  }

  // required uint32 PackNum = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->packnum(), output);
  }

  // repeated .micromsg.SKBuiltinString_t AndroidPackNameList = 7;
  for (unsigned int i = 0, n = this->androidpacknamelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->androidpacknamelist(i), output);
  }

  // optional string IosBunddleID = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->iosbunddleid().data(), this->iosbunddleid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CheckCanSubscribeBizRequest.IosBunddleID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->iosbunddleid(), output);
  }

  // optional string FromURL = 9;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fromurl().data(), this->fromurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CheckCanSubscribeBizRequest.FromURL");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->fromurl(), output);
  }

  // optional uint32 Scene = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->scene(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.CheckCanSubscribeBizRequest)
}

::google::protobuf::uint8* CheckCanSubscribeBizRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.CheckCanSubscribeBizRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required uint32 Source = 2;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->source(), target);
  }

  // optional string ToUserName = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tousername().data(), this->tousername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CheckCanSubscribeBizRequest.ToUserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->tousername(), target);
  }

  // optional string ExtInfo = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extinfo().data(), this->extinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CheckCanSubscribeBizRequest.ExtInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->extinfo(), target);
  }

  // optional string AppID = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CheckCanSubscribeBizRequest.AppID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->appid(), target);
  }

  // required uint32 PackNum = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->packnum(), target);
  }

  // repeated .micromsg.SKBuiltinString_t AndroidPackNameList = 7;
  for (unsigned int i = 0, n = this->androidpacknamelist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->androidpacknamelist(i), deterministic, target);
  }

  // optional string IosBunddleID = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->iosbunddleid().data(), this->iosbunddleid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CheckCanSubscribeBizRequest.IosBunddleID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->iosbunddleid(), target);
  }

  // optional string FromURL = 9;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fromurl().data(), this->fromurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CheckCanSubscribeBizRequest.FromURL");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->fromurl(), target);
  }

  // optional uint32 Scene = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->scene(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.CheckCanSubscribeBizRequest)
  return target;
}

size_t CheckCanSubscribeBizRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.CheckCanSubscribeBizRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_source()) {
    // required uint32 Source = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->source());
  }

  if (has_packnum()) {
    // required uint32 PackNum = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->packnum());
  }

  return total_size;
}
size_t CheckCanSubscribeBizRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.CheckCanSubscribeBizRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x000000e0) ^ 0x000000e0) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required uint32 Source = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->source());

    // required uint32 PackNum = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->packnum());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.SKBuiltinString_t AndroidPackNameList = 7;
  {
    unsigned int count = this->androidpacknamelist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->androidpacknamelist(i));
    }
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional string ToUserName = 3;
    if (has_tousername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tousername());
    }

    // optional string ExtInfo = 4;
    if (has_extinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extinfo());
    }

    // optional string AppID = 5;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appid());
    }

    // optional string IosBunddleID = 8;
    if (has_iosbunddleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->iosbunddleid());
    }

    // optional string FromURL = 9;
    if (has_fromurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fromurl());
    }

  }
  // optional uint32 Scene = 10;
  if (has_scene()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckCanSubscribeBizRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.CheckCanSubscribeBizRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckCanSubscribeBizRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckCanSubscribeBizRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.CheckCanSubscribeBizRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.CheckCanSubscribeBizRequest)
    MergeFrom(*source);
  }
}

void CheckCanSubscribeBizRequest::MergeFrom(const CheckCanSubscribeBizRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.CheckCanSubscribeBizRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  androidpacknamelist_.MergeFrom(from.androidpacknamelist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_tousername();
      tousername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tousername_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_extinfo();
      extinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extinfo_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_appid();
      appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_iosbunddleid();
      iosbunddleid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iosbunddleid_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_fromurl();
      fromurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fromurl_);
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000040u) {
      source_ = from.source_;
    }
    if (cached_has_bits & 0x00000080u) {
      packnum_ = from.packnum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_scene(from.scene());
  }
}

void CheckCanSubscribeBizRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.CheckCanSubscribeBizRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckCanSubscribeBizRequest::CopyFrom(const CheckCanSubscribeBizRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.CheckCanSubscribeBizRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckCanSubscribeBizRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000e0) != 0x000000e0) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void CheckCanSubscribeBizRequest::Swap(CheckCanSubscribeBizRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckCanSubscribeBizRequest::InternalSwap(CheckCanSubscribeBizRequest* other) {
  androidpacknamelist_.InternalSwap(&other->androidpacknamelist_);
  tousername_.Swap(&other->tousername_);
  extinfo_.Swap(&other->extinfo_);
  appid_.Swap(&other->appid_);
  iosbunddleid_.Swap(&other->iosbunddleid_);
  fromurl_.Swap(&other->fromurl_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(source_, other->source_);
  std::swap(packnum_, other->packnum_);
  std::swap(scene_, other->scene_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckCanSubscribeBizRequest::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckCanSubscribeBizRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool CheckCanSubscribeBizRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CheckCanSubscribeBizRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000020u;
}
void CheckCanSubscribeBizRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000020u;
}
void CheckCanSubscribeBizRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& CheckCanSubscribeBizRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCanSubscribeBizRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* CheckCanSubscribeBizRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.CheckCanSubscribeBizRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* CheckCanSubscribeBizRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.CheckCanSubscribeBizRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void CheckCanSubscribeBizRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckCanSubscribeBizRequest.BaseRequest)
}

// required uint32 Source = 2;
bool CheckCanSubscribeBizRequest::has_source() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CheckCanSubscribeBizRequest::set_has_source() {
  _has_bits_[0] |= 0x00000040u;
}
void CheckCanSubscribeBizRequest::clear_has_source() {
  _has_bits_[0] &= ~0x00000040u;
}
void CheckCanSubscribeBizRequest::clear_source() {
  source_ = 0u;
  clear_has_source();
}
::google::protobuf::uint32 CheckCanSubscribeBizRequest::source() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCanSubscribeBizRequest.Source)
  return source_;
}
void CheckCanSubscribeBizRequest::set_source(::google::protobuf::uint32 value) {
  set_has_source();
  source_ = value;
  // @@protoc_insertion_point(field_set:micromsg.CheckCanSubscribeBizRequest.Source)
}

// optional string ToUserName = 3;
bool CheckCanSubscribeBizRequest::has_tousername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CheckCanSubscribeBizRequest::set_has_tousername() {
  _has_bits_[0] |= 0x00000001u;
}
void CheckCanSubscribeBizRequest::clear_has_tousername() {
  _has_bits_[0] &= ~0x00000001u;
}
void CheckCanSubscribeBizRequest::clear_tousername() {
  tousername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tousername();
}
const ::std::string& CheckCanSubscribeBizRequest::tousername() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCanSubscribeBizRequest.ToUserName)
  return tousername_.GetNoArena();
}
void CheckCanSubscribeBizRequest::set_tousername(const ::std::string& value) {
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckCanSubscribeBizRequest.ToUserName)
}
#if LANG_CXX11
void CheckCanSubscribeBizRequest::set_tousername(::std::string&& value) {
  set_has_tousername();
  tousername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckCanSubscribeBizRequest.ToUserName)
}
#endif
void CheckCanSubscribeBizRequest::set_tousername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckCanSubscribeBizRequest.ToUserName)
}
void CheckCanSubscribeBizRequest::set_tousername(const char* value, size_t size) {
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckCanSubscribeBizRequest.ToUserName)
}
::std::string* CheckCanSubscribeBizRequest::mutable_tousername() {
  set_has_tousername();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckCanSubscribeBizRequest.ToUserName)
  return tousername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckCanSubscribeBizRequest::release_tousername() {
  // @@protoc_insertion_point(field_release:micromsg.CheckCanSubscribeBizRequest.ToUserName)
  clear_has_tousername();
  return tousername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckCanSubscribeBizRequest::set_allocated_tousername(::std::string* tousername) {
  if (tousername != NULL) {
    set_has_tousername();
  } else {
    clear_has_tousername();
  }
  tousername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tousername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckCanSubscribeBizRequest.ToUserName)
}

// optional string ExtInfo = 4;
bool CheckCanSubscribeBizRequest::has_extinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CheckCanSubscribeBizRequest::set_has_extinfo() {
  _has_bits_[0] |= 0x00000002u;
}
void CheckCanSubscribeBizRequest::clear_has_extinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
void CheckCanSubscribeBizRequest::clear_extinfo() {
  extinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_extinfo();
}
const ::std::string& CheckCanSubscribeBizRequest::extinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCanSubscribeBizRequest.ExtInfo)
  return extinfo_.GetNoArena();
}
void CheckCanSubscribeBizRequest::set_extinfo(const ::std::string& value) {
  set_has_extinfo();
  extinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckCanSubscribeBizRequest.ExtInfo)
}
#if LANG_CXX11
void CheckCanSubscribeBizRequest::set_extinfo(::std::string&& value) {
  set_has_extinfo();
  extinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckCanSubscribeBizRequest.ExtInfo)
}
#endif
void CheckCanSubscribeBizRequest::set_extinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_extinfo();
  extinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckCanSubscribeBizRequest.ExtInfo)
}
void CheckCanSubscribeBizRequest::set_extinfo(const char* value, size_t size) {
  set_has_extinfo();
  extinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckCanSubscribeBizRequest.ExtInfo)
}
::std::string* CheckCanSubscribeBizRequest::mutable_extinfo() {
  set_has_extinfo();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckCanSubscribeBizRequest.ExtInfo)
  return extinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckCanSubscribeBizRequest::release_extinfo() {
  // @@protoc_insertion_point(field_release:micromsg.CheckCanSubscribeBizRequest.ExtInfo)
  clear_has_extinfo();
  return extinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckCanSubscribeBizRequest::set_allocated_extinfo(::std::string* extinfo) {
  if (extinfo != NULL) {
    set_has_extinfo();
  } else {
    clear_has_extinfo();
  }
  extinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extinfo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckCanSubscribeBizRequest.ExtInfo)
}

// optional string AppID = 5;
bool CheckCanSubscribeBizRequest::has_appid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CheckCanSubscribeBizRequest::set_has_appid() {
  _has_bits_[0] |= 0x00000004u;
}
void CheckCanSubscribeBizRequest::clear_has_appid() {
  _has_bits_[0] &= ~0x00000004u;
}
void CheckCanSubscribeBizRequest::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
const ::std::string& CheckCanSubscribeBizRequest::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCanSubscribeBizRequest.AppID)
  return appid_.GetNoArena();
}
void CheckCanSubscribeBizRequest::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckCanSubscribeBizRequest.AppID)
}
#if LANG_CXX11
void CheckCanSubscribeBizRequest::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckCanSubscribeBizRequest.AppID)
}
#endif
void CheckCanSubscribeBizRequest::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckCanSubscribeBizRequest.AppID)
}
void CheckCanSubscribeBizRequest::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckCanSubscribeBizRequest.AppID)
}
::std::string* CheckCanSubscribeBizRequest::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckCanSubscribeBizRequest.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckCanSubscribeBizRequest::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.CheckCanSubscribeBizRequest.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckCanSubscribeBizRequest::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckCanSubscribeBizRequest.AppID)
}

// required uint32 PackNum = 6;
bool CheckCanSubscribeBizRequest::has_packnum() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CheckCanSubscribeBizRequest::set_has_packnum() {
  _has_bits_[0] |= 0x00000080u;
}
void CheckCanSubscribeBizRequest::clear_has_packnum() {
  _has_bits_[0] &= ~0x00000080u;
}
void CheckCanSubscribeBizRequest::clear_packnum() {
  packnum_ = 0u;
  clear_has_packnum();
}
::google::protobuf::uint32 CheckCanSubscribeBizRequest::packnum() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCanSubscribeBizRequest.PackNum)
  return packnum_;
}
void CheckCanSubscribeBizRequest::set_packnum(::google::protobuf::uint32 value) {
  set_has_packnum();
  packnum_ = value;
  // @@protoc_insertion_point(field_set:micromsg.CheckCanSubscribeBizRequest.PackNum)
}

// repeated .micromsg.SKBuiltinString_t AndroidPackNameList = 7;
int CheckCanSubscribeBizRequest::androidpacknamelist_size() const {
  return androidpacknamelist_.size();
}
void CheckCanSubscribeBizRequest::clear_androidpacknamelist() {
  androidpacknamelist_.Clear();
}
const ::micromsg::SKBuiltinString_t& CheckCanSubscribeBizRequest::androidpacknamelist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCanSubscribeBizRequest.AndroidPackNameList)
  return androidpacknamelist_.Get(index);
}
::micromsg::SKBuiltinString_t* CheckCanSubscribeBizRequest::mutable_androidpacknamelist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.CheckCanSubscribeBizRequest.AndroidPackNameList)
  return androidpacknamelist_.Mutable(index);
}
::micromsg::SKBuiltinString_t* CheckCanSubscribeBizRequest::add_androidpacknamelist() {
  // @@protoc_insertion_point(field_add:micromsg.CheckCanSubscribeBizRequest.AndroidPackNameList)
  return androidpacknamelist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
CheckCanSubscribeBizRequest::mutable_androidpacknamelist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.CheckCanSubscribeBizRequest.AndroidPackNameList)
  return &androidpacknamelist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
CheckCanSubscribeBizRequest::androidpacknamelist() const {
  // @@protoc_insertion_point(field_list:micromsg.CheckCanSubscribeBizRequest.AndroidPackNameList)
  return androidpacknamelist_;
}

// optional string IosBunddleID = 8;
bool CheckCanSubscribeBizRequest::has_iosbunddleid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CheckCanSubscribeBizRequest::set_has_iosbunddleid() {
  _has_bits_[0] |= 0x00000008u;
}
void CheckCanSubscribeBizRequest::clear_has_iosbunddleid() {
  _has_bits_[0] &= ~0x00000008u;
}
void CheckCanSubscribeBizRequest::clear_iosbunddleid() {
  iosbunddleid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_iosbunddleid();
}
const ::std::string& CheckCanSubscribeBizRequest::iosbunddleid() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCanSubscribeBizRequest.IosBunddleID)
  return iosbunddleid_.GetNoArena();
}
void CheckCanSubscribeBizRequest::set_iosbunddleid(const ::std::string& value) {
  set_has_iosbunddleid();
  iosbunddleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckCanSubscribeBizRequest.IosBunddleID)
}
#if LANG_CXX11
void CheckCanSubscribeBizRequest::set_iosbunddleid(::std::string&& value) {
  set_has_iosbunddleid();
  iosbunddleid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckCanSubscribeBizRequest.IosBunddleID)
}
#endif
void CheckCanSubscribeBizRequest::set_iosbunddleid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_iosbunddleid();
  iosbunddleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckCanSubscribeBizRequest.IosBunddleID)
}
void CheckCanSubscribeBizRequest::set_iosbunddleid(const char* value, size_t size) {
  set_has_iosbunddleid();
  iosbunddleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckCanSubscribeBizRequest.IosBunddleID)
}
::std::string* CheckCanSubscribeBizRequest::mutable_iosbunddleid() {
  set_has_iosbunddleid();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckCanSubscribeBizRequest.IosBunddleID)
  return iosbunddleid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckCanSubscribeBizRequest::release_iosbunddleid() {
  // @@protoc_insertion_point(field_release:micromsg.CheckCanSubscribeBizRequest.IosBunddleID)
  clear_has_iosbunddleid();
  return iosbunddleid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckCanSubscribeBizRequest::set_allocated_iosbunddleid(::std::string* iosbunddleid) {
  if (iosbunddleid != NULL) {
    set_has_iosbunddleid();
  } else {
    clear_has_iosbunddleid();
  }
  iosbunddleid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), iosbunddleid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckCanSubscribeBizRequest.IosBunddleID)
}

// optional string FromURL = 9;
bool CheckCanSubscribeBizRequest::has_fromurl() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CheckCanSubscribeBizRequest::set_has_fromurl() {
  _has_bits_[0] |= 0x00000010u;
}
void CheckCanSubscribeBizRequest::clear_has_fromurl() {
  _has_bits_[0] &= ~0x00000010u;
}
void CheckCanSubscribeBizRequest::clear_fromurl() {
  fromurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fromurl();
}
const ::std::string& CheckCanSubscribeBizRequest::fromurl() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCanSubscribeBizRequest.FromURL)
  return fromurl_.GetNoArena();
}
void CheckCanSubscribeBizRequest::set_fromurl(const ::std::string& value) {
  set_has_fromurl();
  fromurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckCanSubscribeBizRequest.FromURL)
}
#if LANG_CXX11
void CheckCanSubscribeBizRequest::set_fromurl(::std::string&& value) {
  set_has_fromurl();
  fromurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckCanSubscribeBizRequest.FromURL)
}
#endif
void CheckCanSubscribeBizRequest::set_fromurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_fromurl();
  fromurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckCanSubscribeBizRequest.FromURL)
}
void CheckCanSubscribeBizRequest::set_fromurl(const char* value, size_t size) {
  set_has_fromurl();
  fromurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckCanSubscribeBizRequest.FromURL)
}
::std::string* CheckCanSubscribeBizRequest::mutable_fromurl() {
  set_has_fromurl();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckCanSubscribeBizRequest.FromURL)
  return fromurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckCanSubscribeBizRequest::release_fromurl() {
  // @@protoc_insertion_point(field_release:micromsg.CheckCanSubscribeBizRequest.FromURL)
  clear_has_fromurl();
  return fromurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckCanSubscribeBizRequest::set_allocated_fromurl(::std::string* fromurl) {
  if (fromurl != NULL) {
    set_has_fromurl();
  } else {
    clear_has_fromurl();
  }
  fromurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckCanSubscribeBizRequest.FromURL)
}

// optional uint32 Scene = 10;
bool CheckCanSubscribeBizRequest::has_scene() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CheckCanSubscribeBizRequest::set_has_scene() {
  _has_bits_[0] |= 0x00000100u;
}
void CheckCanSubscribeBizRequest::clear_has_scene() {
  _has_bits_[0] &= ~0x00000100u;
}
void CheckCanSubscribeBizRequest::clear_scene() {
  scene_ = 0u;
  clear_has_scene();
}
::google::protobuf::uint32 CheckCanSubscribeBizRequest::scene() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCanSubscribeBizRequest.Scene)
  return scene_;
}
void CheckCanSubscribeBizRequest::set_scene(::google::protobuf::uint32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.CheckCanSubscribeBizRequest.Scene)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckCanSubscribeBizResponse::kBaseResponseFieldNumber;
const int CheckCanSubscribeBizResponse::kCheckTicketFieldNumber;
const int CheckCanSubscribeBizResponse::kToUserNameFieldNumber;
const int CheckCanSubscribeBizResponse::kWebViewUrlFieldNumber;
const int CheckCanSubscribeBizResponse::kShowWordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckCanSubscribeBizResponse::CheckCanSubscribeBizResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmopenapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.CheckCanSubscribeBizResponse)
}
CheckCanSubscribeBizResponse::CheckCanSubscribeBizResponse(const CheckCanSubscribeBizResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  checkticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_checkticket()) {
    checkticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.checkticket_);
  }
  tousername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tousername()) {
    tousername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tousername_);
  }
  webviewurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_webviewurl()) {
    webviewurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.webviewurl_);
  }
  showword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_showword()) {
    showword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.showword_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.CheckCanSubscribeBizResponse)
}

void CheckCanSubscribeBizResponse::SharedCtor() {
  _cached_size_ = 0;
  checkticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tousername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  webviewurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  showword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  baseresponse_ = NULL;
}

CheckCanSubscribeBizResponse::~CheckCanSubscribeBizResponse() {
  // @@protoc_insertion_point(destructor:micromsg.CheckCanSubscribeBizResponse)
  SharedDtor();
}

void CheckCanSubscribeBizResponse::SharedDtor() {
  checkticket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tousername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  webviewurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  showword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void CheckCanSubscribeBizResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckCanSubscribeBizResponse::descriptor() {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckCanSubscribeBizResponse& CheckCanSubscribeBizResponse::default_instance() {
  protobuf_mmopenapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

CheckCanSubscribeBizResponse* CheckCanSubscribeBizResponse::New(::google::protobuf::Arena* arena) const {
  CheckCanSubscribeBizResponse* n = new CheckCanSubscribeBizResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckCanSubscribeBizResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.CheckCanSubscribeBizResponse)
  if (_has_bits_[0 / 32] & 31u) {
    if (has_checkticket()) {
      GOOGLE_DCHECK(!checkticket_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*checkticket_.UnsafeRawStringPointer())->clear();
    }
    if (has_tousername()) {
      GOOGLE_DCHECK(!tousername_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*tousername_.UnsafeRawStringPointer())->clear();
    }
    if (has_webviewurl()) {
      GOOGLE_DCHECK(!webviewurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*webviewurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_showword()) {
      GOOGLE_DCHECK(!showword_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*showword_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CheckCanSubscribeBizResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.CheckCanSubscribeBizResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string CheckTicket = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_checkticket()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->checkticket().data(), this->checkticket().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.CheckCanSubscribeBizResponse.CheckTicket");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ToUserName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tousername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tousername().data(), this->tousername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.CheckCanSubscribeBizResponse.ToUserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string WebViewUrl = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_webviewurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->webviewurl().data(), this->webviewurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.CheckCanSubscribeBizResponse.WebViewUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ShowWord = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_showword()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->showword().data(), this->showword().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.CheckCanSubscribeBizResponse.ShowWord");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.CheckCanSubscribeBizResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.CheckCanSubscribeBizResponse)
  return false;
#undef DO_
}

void CheckCanSubscribeBizResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.CheckCanSubscribeBizResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // optional string CheckTicket = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->checkticket().data(), this->checkticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CheckCanSubscribeBizResponse.CheckTicket");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->checkticket(), output);
  }

  // optional string ToUserName = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tousername().data(), this->tousername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CheckCanSubscribeBizResponse.ToUserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->tousername(), output);
  }

  // optional string WebViewUrl = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->webviewurl().data(), this->webviewurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CheckCanSubscribeBizResponse.WebViewUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->webviewurl(), output);
  }

  // optional string ShowWord = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->showword().data(), this->showword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CheckCanSubscribeBizResponse.ShowWord");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->showword(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.CheckCanSubscribeBizResponse)
}

::google::protobuf::uint8* CheckCanSubscribeBizResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.CheckCanSubscribeBizResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // optional string CheckTicket = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->checkticket().data(), this->checkticket().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CheckCanSubscribeBizResponse.CheckTicket");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->checkticket(), target);
  }

  // optional string ToUserName = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tousername().data(), this->tousername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CheckCanSubscribeBizResponse.ToUserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->tousername(), target);
  }

  // optional string WebViewUrl = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->webviewurl().data(), this->webviewurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CheckCanSubscribeBizResponse.WebViewUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->webviewurl(), target);
  }

  // optional string ShowWord = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->showword().data(), this->showword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CheckCanSubscribeBizResponse.ShowWord");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->showword(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.CheckCanSubscribeBizResponse)
  return target;
}

size_t CheckCanSubscribeBizResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.CheckCanSubscribeBizResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (has_baseresponse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string CheckTicket = 2;
    if (has_checkticket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->checkticket());
    }

    // optional string ToUserName = 3;
    if (has_tousername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tousername());
    }

    // optional string WebViewUrl = 4;
    if (has_webviewurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->webviewurl());
    }

    // optional string ShowWord = 5;
    if (has_showword()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->showword());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckCanSubscribeBizResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.CheckCanSubscribeBizResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckCanSubscribeBizResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckCanSubscribeBizResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.CheckCanSubscribeBizResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.CheckCanSubscribeBizResponse)
    MergeFrom(*source);
  }
}

void CheckCanSubscribeBizResponse::MergeFrom(const CheckCanSubscribeBizResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.CheckCanSubscribeBizResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_checkticket();
      checkticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.checkticket_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_tousername();
      tousername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tousername_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_webviewurl();
      webviewurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.webviewurl_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_showword();
      showword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.showword_);
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
  }
}

void CheckCanSubscribeBizResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.CheckCanSubscribeBizResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckCanSubscribeBizResponse::CopyFrom(const CheckCanSubscribeBizResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.CheckCanSubscribeBizResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckCanSubscribeBizResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000010) != 0x00000010) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void CheckCanSubscribeBizResponse::Swap(CheckCanSubscribeBizResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckCanSubscribeBizResponse::InternalSwap(CheckCanSubscribeBizResponse* other) {
  checkticket_.Swap(&other->checkticket_);
  tousername_.Swap(&other->tousername_);
  webviewurl_.Swap(&other->webviewurl_);
  showword_.Swap(&other->showword_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckCanSubscribeBizResponse::GetMetadata() const {
  protobuf_mmopenapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmopenapi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckCanSubscribeBizResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool CheckCanSubscribeBizResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CheckCanSubscribeBizResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000010u;
}
void CheckCanSubscribeBizResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000010u;
}
void CheckCanSubscribeBizResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& CheckCanSubscribeBizResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCanSubscribeBizResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* CheckCanSubscribeBizResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.CheckCanSubscribeBizResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* CheckCanSubscribeBizResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.CheckCanSubscribeBizResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void CheckCanSubscribeBizResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckCanSubscribeBizResponse.BaseResponse)
}

// optional string CheckTicket = 2;
bool CheckCanSubscribeBizResponse::has_checkticket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CheckCanSubscribeBizResponse::set_has_checkticket() {
  _has_bits_[0] |= 0x00000001u;
}
void CheckCanSubscribeBizResponse::clear_has_checkticket() {
  _has_bits_[0] &= ~0x00000001u;
}
void CheckCanSubscribeBizResponse::clear_checkticket() {
  checkticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_checkticket();
}
const ::std::string& CheckCanSubscribeBizResponse::checkticket() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCanSubscribeBizResponse.CheckTicket)
  return checkticket_.GetNoArena();
}
void CheckCanSubscribeBizResponse::set_checkticket(const ::std::string& value) {
  set_has_checkticket();
  checkticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckCanSubscribeBizResponse.CheckTicket)
}
#if LANG_CXX11
void CheckCanSubscribeBizResponse::set_checkticket(::std::string&& value) {
  set_has_checkticket();
  checkticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckCanSubscribeBizResponse.CheckTicket)
}
#endif
void CheckCanSubscribeBizResponse::set_checkticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_checkticket();
  checkticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckCanSubscribeBizResponse.CheckTicket)
}
void CheckCanSubscribeBizResponse::set_checkticket(const char* value, size_t size) {
  set_has_checkticket();
  checkticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckCanSubscribeBizResponse.CheckTicket)
}
::std::string* CheckCanSubscribeBizResponse::mutable_checkticket() {
  set_has_checkticket();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckCanSubscribeBizResponse.CheckTicket)
  return checkticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckCanSubscribeBizResponse::release_checkticket() {
  // @@protoc_insertion_point(field_release:micromsg.CheckCanSubscribeBizResponse.CheckTicket)
  clear_has_checkticket();
  return checkticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckCanSubscribeBizResponse::set_allocated_checkticket(::std::string* checkticket) {
  if (checkticket != NULL) {
    set_has_checkticket();
  } else {
    clear_has_checkticket();
  }
  checkticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), checkticket);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckCanSubscribeBizResponse.CheckTicket)
}

// optional string ToUserName = 3;
bool CheckCanSubscribeBizResponse::has_tousername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CheckCanSubscribeBizResponse::set_has_tousername() {
  _has_bits_[0] |= 0x00000002u;
}
void CheckCanSubscribeBizResponse::clear_has_tousername() {
  _has_bits_[0] &= ~0x00000002u;
}
void CheckCanSubscribeBizResponse::clear_tousername() {
  tousername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tousername();
}
const ::std::string& CheckCanSubscribeBizResponse::tousername() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCanSubscribeBizResponse.ToUserName)
  return tousername_.GetNoArena();
}
void CheckCanSubscribeBizResponse::set_tousername(const ::std::string& value) {
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckCanSubscribeBizResponse.ToUserName)
}
#if LANG_CXX11
void CheckCanSubscribeBizResponse::set_tousername(::std::string&& value) {
  set_has_tousername();
  tousername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckCanSubscribeBizResponse.ToUserName)
}
#endif
void CheckCanSubscribeBizResponse::set_tousername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckCanSubscribeBizResponse.ToUserName)
}
void CheckCanSubscribeBizResponse::set_tousername(const char* value, size_t size) {
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckCanSubscribeBizResponse.ToUserName)
}
::std::string* CheckCanSubscribeBizResponse::mutable_tousername() {
  set_has_tousername();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckCanSubscribeBizResponse.ToUserName)
  return tousername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckCanSubscribeBizResponse::release_tousername() {
  // @@protoc_insertion_point(field_release:micromsg.CheckCanSubscribeBizResponse.ToUserName)
  clear_has_tousername();
  return tousername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckCanSubscribeBizResponse::set_allocated_tousername(::std::string* tousername) {
  if (tousername != NULL) {
    set_has_tousername();
  } else {
    clear_has_tousername();
  }
  tousername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tousername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckCanSubscribeBizResponse.ToUserName)
}

// optional string WebViewUrl = 4;
bool CheckCanSubscribeBizResponse::has_webviewurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CheckCanSubscribeBizResponse::set_has_webviewurl() {
  _has_bits_[0] |= 0x00000004u;
}
void CheckCanSubscribeBizResponse::clear_has_webviewurl() {
  _has_bits_[0] &= ~0x00000004u;
}
void CheckCanSubscribeBizResponse::clear_webviewurl() {
  webviewurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_webviewurl();
}
const ::std::string& CheckCanSubscribeBizResponse::webviewurl() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCanSubscribeBizResponse.WebViewUrl)
  return webviewurl_.GetNoArena();
}
void CheckCanSubscribeBizResponse::set_webviewurl(const ::std::string& value) {
  set_has_webviewurl();
  webviewurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckCanSubscribeBizResponse.WebViewUrl)
}
#if LANG_CXX11
void CheckCanSubscribeBizResponse::set_webviewurl(::std::string&& value) {
  set_has_webviewurl();
  webviewurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckCanSubscribeBizResponse.WebViewUrl)
}
#endif
void CheckCanSubscribeBizResponse::set_webviewurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_webviewurl();
  webviewurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckCanSubscribeBizResponse.WebViewUrl)
}
void CheckCanSubscribeBizResponse::set_webviewurl(const char* value, size_t size) {
  set_has_webviewurl();
  webviewurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckCanSubscribeBizResponse.WebViewUrl)
}
::std::string* CheckCanSubscribeBizResponse::mutable_webviewurl() {
  set_has_webviewurl();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckCanSubscribeBizResponse.WebViewUrl)
  return webviewurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckCanSubscribeBizResponse::release_webviewurl() {
  // @@protoc_insertion_point(field_release:micromsg.CheckCanSubscribeBizResponse.WebViewUrl)
  clear_has_webviewurl();
  return webviewurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckCanSubscribeBizResponse::set_allocated_webviewurl(::std::string* webviewurl) {
  if (webviewurl != NULL) {
    set_has_webviewurl();
  } else {
    clear_has_webviewurl();
  }
  webviewurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), webviewurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckCanSubscribeBizResponse.WebViewUrl)
}

// optional string ShowWord = 5;
bool CheckCanSubscribeBizResponse::has_showword() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CheckCanSubscribeBizResponse::set_has_showword() {
  _has_bits_[0] |= 0x00000008u;
}
void CheckCanSubscribeBizResponse::clear_has_showword() {
  _has_bits_[0] &= ~0x00000008u;
}
void CheckCanSubscribeBizResponse::clear_showword() {
  showword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_showword();
}
const ::std::string& CheckCanSubscribeBizResponse::showword() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCanSubscribeBizResponse.ShowWord)
  return showword_.GetNoArena();
}
void CheckCanSubscribeBizResponse::set_showword(const ::std::string& value) {
  set_has_showword();
  showword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckCanSubscribeBizResponse.ShowWord)
}
#if LANG_CXX11
void CheckCanSubscribeBizResponse::set_showword(::std::string&& value) {
  set_has_showword();
  showword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckCanSubscribeBizResponse.ShowWord)
}
#endif
void CheckCanSubscribeBizResponse::set_showword(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_showword();
  showword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckCanSubscribeBizResponse.ShowWord)
}
void CheckCanSubscribeBizResponse::set_showword(const char* value, size_t size) {
  set_has_showword();
  showword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckCanSubscribeBizResponse.ShowWord)
}
::std::string* CheckCanSubscribeBizResponse::mutable_showword() {
  set_has_showword();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckCanSubscribeBizResponse.ShowWord)
  return showword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckCanSubscribeBizResponse::release_showword() {
  // @@protoc_insertion_point(field_release:micromsg.CheckCanSubscribeBizResponse.ShowWord)
  clear_has_showword();
  return showword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckCanSubscribeBizResponse::set_allocated_showword(::std::string* showword) {
  if (showword != NULL) {
    set_has_showword();
  } else {
    clear_has_showword();
  }
  showword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), showword);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckCanSubscribeBizResponse.ShowWord)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace micromsg

// @@protoc_insertion_point(global_scope)
