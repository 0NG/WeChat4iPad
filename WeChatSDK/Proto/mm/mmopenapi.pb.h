// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mmopenapi.proto

#ifndef PROTOBUF_mmopenapi_2eproto__INCLUDED
#define PROTOBUF_mmopenapi_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "mmbuiltintype.pb.h"
#include "mmbase.pb.h"
// @@protoc_insertion_point(includes)
namespace micromsg {
class AdAppList;
class AdAppListDefaultTypeInternal;
extern AdAppListDefaultTypeInternal _AdAppList_default_instance_;
class AdditionalContactList;
class AdditionalContactListDefaultTypeInternal;
extern AdditionalContactListDefaultTypeInternal _AdditionalContactList_default_instance_;
class AppCenterRequest;
class AppCenterRequestDefaultTypeInternal;
extern AppCenterRequestDefaultTypeInternal _AppCenterRequest_default_instance_;
class AppCenterResponse;
class AppCenterResponseDefaultTypeInternal;
extern AppCenterResponseDefaultTypeInternal _AppCenterResponse_default_instance_;
class AppPersonalInfo;
class AppPersonalInfoDefaultTypeInternal;
extern AppPersonalInfoDefaultTypeInternal _AppPersonalInfo_default_instance_;
class AppSetting;
class AppSettingDefaultTypeInternal;
extern AppSettingDefaultTypeInternal _AppSetting_default_instance_;
class AppSettingReq;
class AppSettingReqDefaultTypeInternal;
extern AppSettingReqDefaultTypeInternal _AppSettingReq_default_instance_;
class AuthAppBaseInfo;
class AuthAppBaseInfoDefaultTypeInternal;
extern AuthAppBaseInfoDefaultTypeInternal _AuthAppBaseInfo_default_instance_;
class BaseRequest;
class BaseRequestDefaultTypeInternal;
extern BaseRequestDefaultTypeInternal _BaseRequest_default_instance_;
class BaseResponse;
class BaseResponseDefaultTypeInternal;
extern BaseResponseDefaultTypeInternal _BaseResponse_default_instance_;
class BindEmailRequest;
class BindEmailRequestDefaultTypeInternal;
extern BindEmailRequestDefaultTypeInternal _BindEmailRequest_default_instance_;
class BindEmailResponse;
class BindEmailResponseDefaultTypeInternal;
extern BindEmailResponseDefaultTypeInternal _BindEmailResponse_default_instance_;
class BizApiInfo;
class BizApiInfoDefaultTypeInternal;
extern BizApiInfoDefaultTypeInternal _BizApiInfo_default_instance_;
class BizAppInfo;
class BizAppInfoDefaultTypeInternal;
extern BizAppInfoDefaultTypeInternal _BizAppInfo_default_instance_;
class BizScopeInfo;
class BizScopeInfoDefaultTypeInternal;
extern BizScopeInfoDefaultTypeInternal _BizScopeInfo_default_instance_;
class BuiltinIP;
class BuiltinIPDefaultTypeInternal;
extern BuiltinIPDefaultTypeInternal _BuiltinIP_default_instance_;
class BuiltinIPList;
class BuiltinIPListDefaultTypeInternal;
extern BuiltinIPListDefaultTypeInternal _BuiltinIPList_default_instance_;
class CDNDnsInfo;
class CDNDnsInfoDefaultTypeInternal;
extern CDNDnsInfoDefaultTypeInternal _CDNDnsInfo_default_instance_;
class ChatRoomMemberData;
class ChatRoomMemberDataDefaultTypeInternal;
extern ChatRoomMemberDataDefaultTypeInternal _ChatRoomMemberData_default_instance_;
class ChatRoomMemberInfo;
class ChatRoomMemberInfoDefaultTypeInternal;
extern ChatRoomMemberInfoDefaultTypeInternal _ChatRoomMemberInfo_default_instance_;
class CheckCanSubscribeBizRequest;
class CheckCanSubscribeBizRequestDefaultTypeInternal;
extern CheckCanSubscribeBizRequestDefaultTypeInternal _CheckCanSubscribeBizRequest_default_instance_;
class CheckCanSubscribeBizResponse;
class CheckCanSubscribeBizResponseDefaultTypeInternal;
extern CheckCanSubscribeBizResponseDefaultTypeInternal _CheckCanSubscribeBizResponse_default_instance_;
class CmdItem;
class CmdItemDefaultTypeInternal;
extern CmdItemDefaultTypeInternal _CmdItem_default_instance_;
class CmdList;
class CmdListDefaultTypeInternal;
extern CmdListDefaultTypeInternal _CmdList_default_instance_;
class CustomizedInfo;
class CustomizedInfoDefaultTypeInternal;
extern CustomizedInfoDefaultTypeInternal _CustomizedInfo_default_instance_;
class DeepLinkBitSet;
class DeepLinkBitSetDefaultTypeInternal;
extern DeepLinkBitSetDefaultTypeInternal _DeepLinkBitSet_default_instance_;
class DelMemberReq;
class DelMemberReqDefaultTypeInternal;
extern DelMemberReqDefaultTypeInternal _DelMemberReq_default_instance_;
class DelMemberResp;
class DelMemberRespDefaultTypeInternal;
extern DelMemberRespDefaultTypeInternal _DelMemberResp_default_instance_;
class DisturbSetting;
class DisturbSettingDefaultTypeInternal;
extern DisturbSettingDefaultTypeInternal _DisturbSetting_default_instance_;
class DisturbTimeSpan;
class DisturbTimeSpanDefaultTypeInternal;
extern DisturbTimeSpanDefaultTypeInternal _DisturbTimeSpan_default_instance_;
class GameIntro;
class GameIntroDefaultTypeInternal;
extern GameIntroDefaultTypeInternal _GameIntro_default_instance_;
class GeneralControlBitSet;
class GeneralControlBitSetDefaultTypeInternal;
extern GeneralControlBitSetDefaultTypeInternal _GeneralControlBitSet_default_instance_;
class GetA8KeyReq;
class GetA8KeyReqDefaultTypeInternal;
extern GetA8KeyReqDefaultTypeInternal _GetA8KeyReq_default_instance_;
class GetA8KeyResp;
class GetA8KeyRespDefaultTypeInternal;
extern GetA8KeyRespDefaultTypeInternal _GetA8KeyResp_default_instance_;
class GetAppInfoListRequest;
class GetAppInfoListRequestDefaultTypeInternal;
extern GetAppInfoListRequestDefaultTypeInternal _GetAppInfoListRequest_default_instance_;
class GetAppInfoListResponse;
class GetAppInfoListResponseDefaultTypeInternal;
extern GetAppInfoListResponseDefaultTypeInternal _GetAppInfoListResponse_default_instance_;
class GetAppPersonalInfoListRequest;
class GetAppPersonalInfoListRequestDefaultTypeInternal;
extern GetAppPersonalInfoListRequestDefaultTypeInternal _GetAppPersonalInfoListRequest_default_instance_;
class GetAppPersonalInfoListResponse;
class GetAppPersonalInfoListResponseDefaultTypeInternal;
extern GetAppPersonalInfoListResponseDefaultTypeInternal _GetAppPersonalInfoListResponse_default_instance_;
class GetAppSettingRequest;
class GetAppSettingRequestDefaultTypeInternal;
extern GetAppSettingRequestDefaultTypeInternal _GetAppSettingRequest_default_instance_;
class GetAppSettingResponse;
class GetAppSettingResponseDefaultTypeInternal;
extern GetAppSettingResponseDefaultTypeInternal _GetAppSettingResponse_default_instance_;
class GetAuthAppInfoRequest;
class GetAuthAppInfoRequestDefaultTypeInternal;
extern GetAuthAppInfoRequestDefaultTypeInternal _GetAuthAppInfoRequest_default_instance_;
class GetAuthAppInfoResponse;
class GetAuthAppInfoResponseDefaultTypeInternal;
extern GetAuthAppInfoResponseDefaultTypeInternal _GetAuthAppInfoResponse_default_instance_;
class GetAuthAppListRequest;
class GetAuthAppListRequestDefaultTypeInternal;
extern GetAuthAppListRequestDefaultTypeInternal _GetAuthAppListRequest_default_instance_;
class GetAuthAppListResponse;
class GetAuthAppListResponseDefaultTypeInternal;
extern GetAuthAppListResponseDefaultTypeInternal _GetAuthAppListResponse_default_instance_;
class GetGameIntroListRequest;
class GetGameIntroListRequestDefaultTypeInternal;
extern GetGameIntroListRequestDefaultTypeInternal _GetGameIntroListRequest_default_instance_;
class GetGameIntroListResponse;
class GetGameIntroListResponseDefaultTypeInternal;
extern GetGameIntroListResponseDefaultTypeInternal _GetGameIntroListResponse_default_instance_;
class GetGameRankListRequest;
class GetGameRankListRequestDefaultTypeInternal;
extern GetGameRankListRequestDefaultTypeInternal _GetGameRankListRequest_default_instance_;
class GetGameRankListResponse;
class GetGameRankListResponseDefaultTypeInternal;
extern GetGameRankListResponseDefaultTypeInternal _GetGameRankListResponse_default_instance_;
class GetLocationRequest;
class GetLocationRequestDefaultTypeInternal;
extern GetLocationRequestDefaultTypeInternal _GetLocationRequest_default_instance_;
class GetLocationResponse;
class GetLocationResponseDefaultTypeInternal;
extern GetLocationResponseDefaultTypeInternal _GetLocationResponse_default_instance_;
class GetSuggestionAppDetailRequest;
class GetSuggestionAppDetailRequestDefaultTypeInternal;
extern GetSuggestionAppDetailRequestDefaultTypeInternal _GetSuggestionAppDetailRequest_default_instance_;
class GetSuggestionAppDetailResponse;
class GetSuggestionAppDetailResponseDefaultTypeInternal;
extern GetSuggestionAppDetailResponseDefaultTypeInternal _GetSuggestionAppDetailResponse_default_instance_;
class GetSuggestionAppListRequest;
class GetSuggestionAppListRequestDefaultTypeInternal;
extern GetSuggestionAppListRequestDefaultTypeInternal _GetSuggestionAppListRequest_default_instance_;
class GetSuggestionAppListResponse;
class GetSuggestionAppListResponseDefaultTypeInternal;
extern GetSuggestionAppListResponseDefaultTypeInternal _GetSuggestionAppListResponse_default_instance_;
class GetUserInfoInAppRequest;
class GetUserInfoInAppRequestDefaultTypeInternal;
extern GetUserInfoInAppRequestDefaultTypeInternal _GetUserInfoInAppRequest_default_instance_;
class GetUserInfoInAppResponse;
class GetUserInfoInAppResponseDefaultTypeInternal;
extern GetUserInfoInAppResponseDefaultTypeInternal _GetUserInfoInAppResponse_default_instance_;
class GiftEntranceItem;
class GiftEntranceItemDefaultTypeInternal;
extern GiftEntranceItemDefaultTypeInternal _GiftEntranceItem_default_instance_;
class GiftList;
class GiftListDefaultTypeInternal;
extern GiftListDefaultTypeInternal _GiftList_default_instance_;
class GmailInfo;
class GmailInfoDefaultTypeInternal;
extern GmailInfoDefaultTypeInternal _GmailInfo_default_instance_;
class GmailList;
class GmailListDefaultTypeInternal;
extern GmailListDefaultTypeInternal _GmailList_default_instance_;
class HardDevice;
class HardDeviceDefaultTypeInternal;
extern HardDeviceDefaultTypeInternal _HardDevice_default_instance_;
class Host;
class HostDefaultTypeInternal;
extern HostDefaultTypeInternal _Host_default_instance_;
class HostList;
class HostListDefaultTypeInternal;
extern HostListDefaultTypeInternal _HostList_default_instance_;
class JSAPIPermissionBitSet;
class JSAPIPermissionBitSetDefaultTypeInternal;
extern JSAPIPermissionBitSetDefaultTypeInternal _JSAPIPermissionBitSet_default_instance_;
class JSOAuthRequest;
class JSOAuthRequestDefaultTypeInternal;
extern JSOAuthRequestDefaultTypeInternal _JSOAuthRequest_default_instance_;
class JSOAuthResponse;
class JSOAuthResponseDefaultTypeInternal;
extern JSOAuthResponseDefaultTypeInternal _JSOAuthResponse_default_instance_;
class LinkedinContactItem;
class LinkedinContactItemDefaultTypeInternal;
extern LinkedinContactItemDefaultTypeInternal _LinkedinContactItem_default_instance_;
class MemberReq;
class MemberReqDefaultTypeInternal;
extern MemberReqDefaultTypeInternal _MemberReq_default_instance_;
class MemberResp;
class MemberRespDefaultTypeInternal;
extern MemberRespDefaultTypeInternal _MemberResp_default_instance_;
class ModContact;
class ModContactDefaultTypeInternal;
extern ModContactDefaultTypeInternal _ModContact_default_instance_;
class ModUserInfo;
class ModUserInfoDefaultTypeInternal;
extern ModUserInfoDefaultTypeInternal _ModUserInfo_default_instance_;
class NetworkControl;
class NetworkControlDefaultTypeInternal;
extern NetworkControlDefaultTypeInternal _NetworkControl_default_instance_;
class PatternLockInfo;
class PatternLockInfoDefaultTypeInternal;
extern PatternLockInfoDefaultTypeInternal _PatternLockInfo_default_instance_;
class PluginKey;
class PluginKeyDefaultTypeInternal;
extern PluginKeyDefaultTypeInternal _PluginKey_default_instance_;
class PluginKeyList;
class PluginKeyListDefaultTypeInternal;
extern PluginKeyListDefaultTypeInternal _PluginKeyList_default_instance_;
class PositionInfo;
class PositionInfoDefaultTypeInternal;
extern PositionInfoDefaultTypeInternal _PositionInfo_default_instance_;
class RcAppList;
class RcAppListDefaultTypeInternal;
extern RcAppListDefaultTypeInternal _RcAppList_default_instance_;
class RoomInfo;
class RoomInfoDefaultTypeInternal;
extern RoomInfoDefaultTypeInternal _RoomInfo_default_instance_;
class SKBuiltinBuffer_t;
class SKBuiltinBuffer_tDefaultTypeInternal;
extern SKBuiltinBuffer_tDefaultTypeInternal _SKBuiltinBuffer_t_default_instance_;
class SKBuiltinChar_t;
class SKBuiltinChar_tDefaultTypeInternal;
extern SKBuiltinChar_tDefaultTypeInternal _SKBuiltinChar_t_default_instance_;
class SKBuiltinDouble64_t;
class SKBuiltinDouble64_tDefaultTypeInternal;
extern SKBuiltinDouble64_tDefaultTypeInternal _SKBuiltinDouble64_t_default_instance_;
class SKBuiltinFloat32_t;
class SKBuiltinFloat32_tDefaultTypeInternal;
extern SKBuiltinFloat32_tDefaultTypeInternal _SKBuiltinFloat32_t_default_instance_;
class SKBuiltinInt16_t;
class SKBuiltinInt16_tDefaultTypeInternal;
extern SKBuiltinInt16_tDefaultTypeInternal _SKBuiltinInt16_t_default_instance_;
class SKBuiltinInt32_t;
class SKBuiltinInt32_tDefaultTypeInternal;
extern SKBuiltinInt32_tDefaultTypeInternal _SKBuiltinInt32_t_default_instance_;
class SKBuiltinInt64_t;
class SKBuiltinInt64_tDefaultTypeInternal;
extern SKBuiltinInt64_tDefaultTypeInternal _SKBuiltinInt64_t_default_instance_;
class SKBuiltinInt8_t;
class SKBuiltinInt8_tDefaultTypeInternal;
extern SKBuiltinInt8_tDefaultTypeInternal _SKBuiltinInt8_t_default_instance_;
class SKBuiltinString_t;
class SKBuiltinString_tDefaultTypeInternal;
extern SKBuiltinString_tDefaultTypeInternal _SKBuiltinString_t_default_instance_;
class SKBuiltinUchar_t;
class SKBuiltinUchar_tDefaultTypeInternal;
extern SKBuiltinUchar_tDefaultTypeInternal _SKBuiltinUchar_t_default_instance_;
class SKBuiltinUint16_t;
class SKBuiltinUint16_tDefaultTypeInternal;
extern SKBuiltinUint16_tDefaultTypeInternal _SKBuiltinUint16_t_default_instance_;
class SKBuiltinUint32_t;
class SKBuiltinUint32_tDefaultTypeInternal;
extern SKBuiltinUint32_tDefaultTypeInternal _SKBuiltinUint32_t_default_instance_;
class SKBuiltinUint64_t;
class SKBuiltinUint64_tDefaultTypeInternal;
extern SKBuiltinUint64_tDefaultTypeInternal _SKBuiltinUint64_t_default_instance_;
class SKBuiltinUint8_t;
class SKBuiltinUint8_tDefaultTypeInternal;
extern SKBuiltinUint8_tDefaultTypeInternal _SKBuiltinUint8_t_default_instance_;
class SafeDevice;
class SafeDeviceDefaultTypeInternal;
extern SafeDeviceDefaultTypeInternal _SafeDevice_default_instance_;
class SafeDeviceList;
class SafeDeviceListDefaultTypeInternal;
extern SafeDeviceListDefaultTypeInternal _SafeDeviceList_default_instance_;
class SetAppSettingRequest;
class SetAppSettingRequestDefaultTypeInternal;
extern SetAppSettingRequestDefaultTypeInternal _SetAppSettingRequest_default_instance_;
class SetAppSettingResponse;
class SetAppSettingResponseDefaultTypeInternal;
extern SetAppSettingResponseDefaultTypeInternal _SetAppSettingResponse_default_instance_;
class SetOAuthScopeRequest;
class SetOAuthScopeRequestDefaultTypeInternal;
extern SetOAuthScopeRequestDefaultTypeInternal _SetOAuthScopeRequest_default_instance_;
class SetOAuthScopeResponse;
class SetOAuthScopeResponseDefaultTypeInternal;
extern SetOAuthScopeResponseDefaultTypeInternal _SetOAuthScopeResponse_default_instance_;
class ShakeSyncRequest;
class ShakeSyncRequestDefaultTypeInternal;
extern ShakeSyncRequestDefaultTypeInternal _ShakeSyncRequest_default_instance_;
class ShakeSyncResponse;
class ShakeSyncResponseDefaultTypeInternal;
extern ShakeSyncResponseDefaultTypeInternal _ShakeSyncResponse_default_instance_;
class ShowStyleKey;
class ShowStyleKeyDefaultTypeInternal;
extern ShowStyleKeyDefaultTypeInternal _ShowStyleKey_default_instance_;
class SnsUserInfo;
class SnsUserInfoDefaultTypeInternal;
extern SnsUserInfoDefaultTypeInternal _SnsUserInfo_default_instance_;
class StyleKeyVal;
class StyleKeyValDefaultTypeInternal;
extern StyleKeyValDefaultTypeInternal _StyleKeyVal_default_instance_;
class UserGameRankInfo;
class UserGameRankInfoDefaultTypeInternal;
extern UserGameRankInfoDefaultTypeInternal _UserGameRankInfo_default_instance_;
class UserInfoExt;
class UserInfoExtDefaultTypeInternal;
extern UserInfoExtDefaultTypeInternal _UserInfoExt_default_instance_;
class UserInfoInApp;
class UserInfoInAppDefaultTypeInternal;
extern UserInfoInAppDefaultTypeInternal _UserInfoInApp_default_instance_;
class YYBStruct;
class YYBStructDefaultTypeInternal;
extern YYBStructDefaultTypeInternal _YYBStruct_default_instance_;
}  // namespace micromsg

namespace micromsg {

namespace protobuf_mmopenapi_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_mmopenapi_2eproto

// ===================================================================

class GetA8KeyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetA8KeyReq) */ {
 public:
  GetA8KeyReq();
  virtual ~GetA8KeyReq();

  GetA8KeyReq(const GetA8KeyReq& from);

  inline GetA8KeyReq& operator=(const GetA8KeyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetA8KeyReq& default_instance();

  static inline const GetA8KeyReq* internal_default_instance() {
    return reinterpret_cast<const GetA8KeyReq*>(
               &_GetA8KeyReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(GetA8KeyReq* other);

  // implements Message ----------------------------------------------

  inline GetA8KeyReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetA8KeyReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetA8KeyReq& from);
  void MergeFrom(const GetA8KeyReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetA8KeyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string FriendUserName = 8;
  bool has_friendusername() const;
  void clear_friendusername();
  static const int kFriendUserNameFieldNumber = 8;
  const ::std::string& friendusername() const;
  void set_friendusername(const ::std::string& value);
  #if LANG_CXX11
  void set_friendusername(::std::string&& value);
  #endif
  void set_friendusername(const char* value);
  void set_friendusername(const char* value, size_t size);
  ::std::string* mutable_friendusername();
  ::std::string* release_friendusername();
  void set_allocated_friendusername(::std::string* friendusername);

  // optional string UserName = 11;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 11;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string BundleID = 12;
  bool has_bundleid() const;
  void clear_bundleid();
  static const int kBundleIDFieldNumber = 12;
  const ::std::string& bundleid() const;
  void set_bundleid(const ::std::string& value);
  #if LANG_CXX11
  void set_bundleid(::std::string&& value);
  #endif
  void set_bundleid(const char* value);
  void set_bundleid(const char* value, size_t size);
  ::std::string* mutable_bundleid();
  ::std::string* release_bundleid();
  void set_allocated_bundleid(::std::string* bundleid);

  // optional string NetType = 17;
  bool has_nettype() const;
  void clear_nettype();
  static const int kNetTypeFieldNumber = 17;
  const ::std::string& nettype() const;
  void set_nettype(const ::std::string& value);
  #if LANG_CXX11
  void set_nettype(::std::string&& value);
  #endif
  void set_nettype(const char* value);
  void set_nettype(const char* value, size_t size);
  ::std::string* mutable_nettype();
  ::std::string* release_nettype();
  void set_allocated_nettype(::std::string* nettype);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // optional .micromsg.SKBuiltinBuffer_t A2Key = 3;
  bool has_a2key() const;
  void clear_a2key();
  static const int kA2KeyFieldNumber = 3;
  const ::micromsg::SKBuiltinBuffer_t& a2key() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_a2key();
  ::micromsg::SKBuiltinBuffer_t* release_a2key();
  void set_allocated_a2key(::micromsg::SKBuiltinBuffer_t* a2key);

  // optional .micromsg.SKBuiltinString_t AppID = 4;
  bool has_appid() const;
  void clear_appid();
  static const int kAppIDFieldNumber = 4;
  const ::micromsg::SKBuiltinString_t& appid() const;
  ::micromsg::SKBuiltinString_t* mutable_appid();
  ::micromsg::SKBuiltinString_t* release_appid();
  void set_allocated_appid(::micromsg::SKBuiltinString_t* appid);

  // optional .micromsg.SKBuiltinString_t Scope = 5;
  bool has_scope() const;
  void clear_scope();
  static const int kScopeFieldNumber = 5;
  const ::micromsg::SKBuiltinString_t& scope() const;
  ::micromsg::SKBuiltinString_t* mutable_scope();
  ::micromsg::SKBuiltinString_t* release_scope();
  void set_allocated_scope(::micromsg::SKBuiltinString_t* scope);

  // optional .micromsg.SKBuiltinString_t State = 6;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 6;
  const ::micromsg::SKBuiltinString_t& state() const;
  ::micromsg::SKBuiltinString_t* mutable_state();
  ::micromsg::SKBuiltinString_t* release_state();
  void set_allocated_state(::micromsg::SKBuiltinString_t* state);

  // optional .micromsg.SKBuiltinString_t ReqUrl = 7;
  bool has_requrl() const;
  void clear_requrl();
  static const int kReqUrlFieldNumber = 7;
  const ::micromsg::SKBuiltinString_t& requrl() const;
  ::micromsg::SKBuiltinString_t* mutable_requrl();
  ::micromsg::SKBuiltinString_t* release_requrl();
  void set_allocated_requrl(::micromsg::SKBuiltinString_t* requrl);

  // optional .micromsg.SKBuiltinBuffer_t A2KeyNew = 13;
  bool has_a2keynew() const;
  void clear_a2keynew();
  static const int kA2KeyNewFieldNumber = 13;
  const ::micromsg::SKBuiltinBuffer_t& a2keynew() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_a2keynew();
  ::micromsg::SKBuiltinBuffer_t* release_a2keynew();
  void set_allocated_a2keynew(::micromsg::SKBuiltinBuffer_t* a2keynew);

  // required uint32 OpCode = 2;
  bool has_opcode() const;
  void clear_opcode();
  static const int kOpCodeFieldNumber = 2;
  ::google::protobuf::uint32 opcode() const;
  void set_opcode(::google::protobuf::uint32 value);

  // optional uint32 FriendQQ = 9;
  bool has_friendqq() const;
  void clear_friendqq();
  static const int kFriendQQFieldNumber = 9;
  ::google::protobuf::uint32 friendqq() const;
  void set_friendqq(::google::protobuf::uint32 value);

  // optional uint32 Scene = 10;
  bool has_scene() const;
  void clear_scene();
  static const int kSceneFieldNumber = 10;
  ::google::protobuf::uint32 scene() const;
  void set_scene(::google::protobuf::uint32 value);

  // optional uint32 Reason = 14;
  bool has_reason() const;
  void clear_reason();
  static const int kReasonFieldNumber = 14;
  ::google::protobuf::uint32 reason() const;
  void set_reason(::google::protobuf::uint32 value);

  // optional uint32 FontScale = 15;
  bool has_fontscale() const;
  void clear_fontscale();
  static const int kFontScaleFieldNumber = 15;
  ::google::protobuf::uint32 fontscale() const;
  void set_fontscale(::google::protobuf::uint32 value);

  // optional uint32 Flag = 16;
  bool has_flag() const;
  void clear_flag();
  static const int kFlagFieldNumber = 16;
  ::google::protobuf::uint32 flag() const;
  void set_flag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetA8KeyReq)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_opcode();
  void clear_has_opcode();
  void set_has_a2key();
  void clear_has_a2key();
  void set_has_appid();
  void clear_has_appid();
  void set_has_scope();
  void clear_has_scope();
  void set_has_state();
  void clear_has_state();
  void set_has_requrl();
  void clear_has_requrl();
  void set_has_friendusername();
  void clear_has_friendusername();
  void set_has_friendqq();
  void clear_has_friendqq();
  void set_has_scene();
  void clear_has_scene();
  void set_has_username();
  void clear_has_username();
  void set_has_bundleid();
  void clear_has_bundleid();
  void set_has_a2keynew();
  void clear_has_a2keynew();
  void set_has_reason();
  void clear_has_reason();
  void set_has_fontscale();
  void clear_has_fontscale();
  void set_has_flag();
  void clear_has_flag();
  void set_has_nettype();
  void clear_has_nettype();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr friendusername_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr bundleid_;
  ::google::protobuf::internal::ArenaStringPtr nettype_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::SKBuiltinBuffer_t* a2key_;
  ::micromsg::SKBuiltinString_t* appid_;
  ::micromsg::SKBuiltinString_t* scope_;
  ::micromsg::SKBuiltinString_t* state_;
  ::micromsg::SKBuiltinString_t* requrl_;
  ::micromsg::SKBuiltinBuffer_t* a2keynew_;
  ::google::protobuf::uint32 opcode_;
  ::google::protobuf::uint32 friendqq_;
  ::google::protobuf::uint32 scene_;
  ::google::protobuf::uint32 reason_;
  ::google::protobuf::uint32 fontscale_;
  ::google::protobuf::uint32 flag_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class JSAPIPermissionBitSet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.JSAPIPermissionBitSet) */ {
 public:
  JSAPIPermissionBitSet();
  virtual ~JSAPIPermissionBitSet();

  JSAPIPermissionBitSet(const JSAPIPermissionBitSet& from);

  inline JSAPIPermissionBitSet& operator=(const JSAPIPermissionBitSet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JSAPIPermissionBitSet& default_instance();

  static inline const JSAPIPermissionBitSet* internal_default_instance() {
    return reinterpret_cast<const JSAPIPermissionBitSet*>(
               &_JSAPIPermissionBitSet_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(JSAPIPermissionBitSet* other);

  // implements Message ----------------------------------------------

  inline JSAPIPermissionBitSet* New() const PROTOBUF_FINAL { return New(NULL); }

  JSAPIPermissionBitSet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JSAPIPermissionBitSet& from);
  void MergeFrom(const JSAPIPermissionBitSet& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JSAPIPermissionBitSet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 BitValue = 1;
  bool has_bitvalue() const;
  void clear_bitvalue();
  static const int kBitValueFieldNumber = 1;
  ::google::protobuf::uint32 bitvalue() const;
  void set_bitvalue(::google::protobuf::uint32 value);

  // optional uint32 BitValue2 = 2;
  bool has_bitvalue2() const;
  void clear_bitvalue2();
  static const int kBitValue2FieldNumber = 2;
  ::google::protobuf::uint32 bitvalue2() const;
  void set_bitvalue2(::google::protobuf::uint32 value);

  // optional uint32 BitValue3 = 3;
  bool has_bitvalue3() const;
  void clear_bitvalue3();
  static const int kBitValue3FieldNumber = 3;
  ::google::protobuf::uint32 bitvalue3() const;
  void set_bitvalue3(::google::protobuf::uint32 value);

  // optional uint32 BitValue4 = 4;
  bool has_bitvalue4() const;
  void clear_bitvalue4();
  static const int kBitValue4FieldNumber = 4;
  ::google::protobuf::uint32 bitvalue4() const;
  void set_bitvalue4(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.JSAPIPermissionBitSet)
 private:
  void set_has_bitvalue();
  void clear_has_bitvalue();
  void set_has_bitvalue2();
  void clear_has_bitvalue2();
  void set_has_bitvalue3();
  void clear_has_bitvalue3();
  void set_has_bitvalue4();
  void clear_has_bitvalue4();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 bitvalue_;
  ::google::protobuf::uint32 bitvalue2_;
  ::google::protobuf::uint32 bitvalue3_;
  ::google::protobuf::uint32 bitvalue4_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GeneralControlBitSet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GeneralControlBitSet) */ {
 public:
  GeneralControlBitSet();
  virtual ~GeneralControlBitSet();

  GeneralControlBitSet(const GeneralControlBitSet& from);

  inline GeneralControlBitSet& operator=(const GeneralControlBitSet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GeneralControlBitSet& default_instance();

  static inline const GeneralControlBitSet* internal_default_instance() {
    return reinterpret_cast<const GeneralControlBitSet*>(
               &_GeneralControlBitSet_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(GeneralControlBitSet* other);

  // implements Message ----------------------------------------------

  inline GeneralControlBitSet* New() const PROTOBUF_FINAL { return New(NULL); }

  GeneralControlBitSet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GeneralControlBitSet& from);
  void MergeFrom(const GeneralControlBitSet& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GeneralControlBitSet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 BitValue = 1;
  bool has_bitvalue() const;
  void clear_bitvalue();
  static const int kBitValueFieldNumber = 1;
  ::google::protobuf::uint32 bitvalue() const;
  void set_bitvalue(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GeneralControlBitSet)
 private:
  void set_has_bitvalue();
  void clear_has_bitvalue();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 bitvalue_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeepLinkBitSet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.DeepLinkBitSet) */ {
 public:
  DeepLinkBitSet();
  virtual ~DeepLinkBitSet();

  DeepLinkBitSet(const DeepLinkBitSet& from);

  inline DeepLinkBitSet& operator=(const DeepLinkBitSet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeepLinkBitSet& default_instance();

  static inline const DeepLinkBitSet* internal_default_instance() {
    return reinterpret_cast<const DeepLinkBitSet*>(
               &_DeepLinkBitSet_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(DeepLinkBitSet* other);

  // implements Message ----------------------------------------------

  inline DeepLinkBitSet* New() const PROTOBUF_FINAL { return New(NULL); }

  DeepLinkBitSet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeepLinkBitSet& from);
  void MergeFrom(const DeepLinkBitSet& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeepLinkBitSet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 BitValue = 1;
  bool has_bitvalue() const;
  void clear_bitvalue();
  static const int kBitValueFieldNumber = 1;
  ::google::protobuf::uint64 bitvalue() const;
  void set_bitvalue(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:micromsg.DeepLinkBitSet)
 private:
  void set_has_bitvalue();
  void clear_has_bitvalue();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 bitvalue_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BizApiInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.BizApiInfo) */ {
 public:
  BizApiInfo();
  virtual ~BizApiInfo();

  BizApiInfo(const BizApiInfo& from);

  inline BizApiInfo& operator=(const BizApiInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BizApiInfo& default_instance();

  static inline const BizApiInfo* internal_default_instance() {
    return reinterpret_cast<const BizApiInfo*>(
               &_BizApiInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(BizApiInfo* other);

  // implements Message ----------------------------------------------

  inline BizApiInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  BizApiInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BizApiInfo& from);
  void MergeFrom(const BizApiInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BizApiInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ApiName = 1;
  bool has_apiname() const;
  void clear_apiname();
  static const int kApiNameFieldNumber = 1;
  const ::std::string& apiname() const;
  void set_apiname(const ::std::string& value);
  #if LANG_CXX11
  void set_apiname(::std::string&& value);
  #endif
  void set_apiname(const char* value);
  void set_apiname(const char* value, size_t size);
  ::std::string* mutable_apiname();
  ::std::string* release_apiname();
  void set_allocated_apiname(::std::string* apiname);

  // @@protoc_insertion_point(class_scope:micromsg.BizApiInfo)
 private:
  void set_has_apiname();
  void clear_has_apiname();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr apiname_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BizScopeInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.BizScopeInfo) */ {
 public:
  BizScopeInfo();
  virtual ~BizScopeInfo();

  BizScopeInfo(const BizScopeInfo& from);

  inline BizScopeInfo& operator=(const BizScopeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BizScopeInfo& default_instance();

  static inline const BizScopeInfo* internal_default_instance() {
    return reinterpret_cast<const BizScopeInfo*>(
               &_BizScopeInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(BizScopeInfo* other);

  // implements Message ----------------------------------------------

  inline BizScopeInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  BizScopeInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BizScopeInfo& from);
  void MergeFrom(const BizScopeInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BizScopeInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.BizApiInfo ApiList = 5;
  int apilist_size() const;
  void clear_apilist();
  static const int kApiListFieldNumber = 5;
  const ::micromsg::BizApiInfo& apilist(int index) const;
  ::micromsg::BizApiInfo* mutable_apilist(int index);
  ::micromsg::BizApiInfo* add_apilist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::BizApiInfo >*
      mutable_apilist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::BizApiInfo >&
      apilist() const;

  // optional string Scope = 1;
  bool has_scope() const;
  void clear_scope();
  static const int kScopeFieldNumber = 1;
  const ::std::string& scope() const;
  void set_scope(const ::std::string& value);
  #if LANG_CXX11
  void set_scope(::std::string&& value);
  #endif
  void set_scope(const char* value);
  void set_scope(const char* value, size_t size);
  ::std::string* mutable_scope();
  ::std::string* release_scope();
  void set_allocated_scope(::std::string* scope);

  // optional string ScopeDesc = 3;
  bool has_scopedesc() const;
  void clear_scopedesc();
  static const int kScopeDescFieldNumber = 3;
  const ::std::string& scopedesc() const;
  void set_scopedesc(const ::std::string& value);
  #if LANG_CXX11
  void set_scopedesc(::std::string&& value);
  #endif
  void set_scopedesc(const char* value);
  void set_scopedesc(const char* value, size_t size);
  ::std::string* mutable_scopedesc();
  ::std::string* release_scopedesc();
  void set_allocated_scopedesc(::std::string* scopedesc);

  // required uint32 ScopeStatus = 2;
  bool has_scopestatus() const;
  void clear_scopestatus();
  static const int kScopeStatusFieldNumber = 2;
  ::google::protobuf::uint32 scopestatus() const;
  void set_scopestatus(::google::protobuf::uint32 value);

  // required uint32 ApiCount = 4;
  bool has_apicount() const;
  void clear_apicount();
  static const int kApiCountFieldNumber = 4;
  ::google::protobuf::uint32 apicount() const;
  void set_apicount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.BizScopeInfo)
 private:
  void set_has_scope();
  void clear_has_scope();
  void set_has_scopestatus();
  void clear_has_scopestatus();
  void set_has_scopedesc();
  void clear_has_scopedesc();
  void set_has_apicount();
  void clear_has_apicount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::BizApiInfo > apilist_;
  ::google::protobuf::internal::ArenaStringPtr scope_;
  ::google::protobuf::internal::ArenaStringPtr scopedesc_;
  ::google::protobuf::uint32 scopestatus_;
  ::google::protobuf::uint32 apicount_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class YYBStruct : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.YYBStruct) */ {
 public:
  YYBStruct();
  virtual ~YYBStruct();

  YYBStruct(const YYBStruct& from);

  inline YYBStruct& operator=(const YYBStruct& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const YYBStruct& default_instance();

  static inline const YYBStruct* internal_default_instance() {
    return reinterpret_cast<const YYBStruct*>(
               &_YYBStruct_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(YYBStruct* other);

  // implements Message ----------------------------------------------

  inline YYBStruct* New() const PROTOBUF_FINAL { return New(NULL); }

  YYBStruct* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const YYBStruct& from);
  void MergeFrom(const YYBStruct& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(YYBStruct* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string DownloadUrl = 2;
  bool has_downloadurl() const;
  void clear_downloadurl();
  static const int kDownloadUrlFieldNumber = 2;
  const ::std::string& downloadurl() const;
  void set_downloadurl(const ::std::string& value);
  #if LANG_CXX11
  void set_downloadurl(::std::string&& value);
  #endif
  void set_downloadurl(const char* value);
  void set_downloadurl(const char* value, size_t size);
  ::std::string* mutable_downloadurl();
  ::std::string* release_downloadurl();
  void set_allocated_downloadurl(::std::string* downloadurl);

  // optional string ApkMd5 = 3;
  bool has_apkmd5() const;
  void clear_apkmd5();
  static const int kApkMd5FieldNumber = 3;
  const ::std::string& apkmd5() const;
  void set_apkmd5(const ::std::string& value);
  #if LANG_CXX11
  void set_apkmd5(::std::string&& value);
  #endif
  void set_apkmd5(const char* value);
  void set_apkmd5(const char* value, size_t size);
  ::std::string* mutable_apkmd5();
  ::std::string* release_apkmd5();
  void set_allocated_apkmd5(::std::string* apkmd5);

  // optional string PreemptiveUrl = 4;
  bool has_preemptiveurl() const;
  void clear_preemptiveurl();
  static const int kPreemptiveUrlFieldNumber = 4;
  const ::std::string& preemptiveurl() const;
  void set_preemptiveurl(const ::std::string& value);
  #if LANG_CXX11
  void set_preemptiveurl(::std::string&& value);
  #endif
  void set_preemptiveurl(const char* value);
  void set_preemptiveurl(const char* value, size_t size);
  ::std::string* mutable_preemptiveurl();
  ::std::string* release_preemptiveurl();
  void set_allocated_preemptiveurl(::std::string* preemptiveurl);

  // optional string ExtInfo = 5;
  bool has_extinfo() const;
  void clear_extinfo();
  static const int kExtInfoFieldNumber = 5;
  const ::std::string& extinfo() const;
  void set_extinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_extinfo(::std::string&& value);
  #endif
  void set_extinfo(const char* value);
  void set_extinfo(const char* value, size_t size);
  ::std::string* mutable_extinfo();
  ::std::string* release_extinfo();
  void set_allocated_extinfo(::std::string* extinfo);

  // optional string DownloadTipsWording = 6;
  bool has_downloadtipswording() const;
  void clear_downloadtipswording();
  static const int kDownloadTipsWordingFieldNumber = 6;
  const ::std::string& downloadtipswording() const;
  void set_downloadtipswording(const ::std::string& value);
  #if LANG_CXX11
  void set_downloadtipswording(::std::string&& value);
  #endif
  void set_downloadtipswording(const char* value);
  void set_downloadtipswording(const char* value, size_t size);
  ::std::string* mutable_downloadtipswording();
  ::std::string* release_downloadtipswording();
  void set_allocated_downloadtipswording(::std::string* downloadtipswording);

  // optional uint32 AndroidDownloadFlag = 1;
  bool has_androiddownloadflag() const;
  void clear_androiddownloadflag();
  static const int kAndroidDownloadFlagFieldNumber = 1;
  ::google::protobuf::uint32 androiddownloadflag() const;
  void set_androiddownloadflag(::google::protobuf::uint32 value);

  // optional int32 SupportedVersionCode = 7;
  bool has_supportedversioncode() const;
  void clear_supportedversioncode();
  static const int kSupportedVersionCodeFieldNumber = 7;
  ::google::protobuf::int32 supportedversioncode() const;
  void set_supportedversioncode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.YYBStruct)
 private:
  void set_has_androiddownloadflag();
  void clear_has_androiddownloadflag();
  void set_has_downloadurl();
  void clear_has_downloadurl();
  void set_has_apkmd5();
  void clear_has_apkmd5();
  void set_has_preemptiveurl();
  void clear_has_preemptiveurl();
  void set_has_extinfo();
  void clear_has_extinfo();
  void set_has_downloadtipswording();
  void clear_has_downloadtipswording();
  void set_has_supportedversioncode();
  void clear_has_supportedversioncode();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr downloadurl_;
  ::google::protobuf::internal::ArenaStringPtr apkmd5_;
  ::google::protobuf::internal::ArenaStringPtr preemptiveurl_;
  ::google::protobuf::internal::ArenaStringPtr extinfo_;
  ::google::protobuf::internal::ArenaStringPtr downloadtipswording_;
  ::google::protobuf::uint32 androiddownloadflag_;
  ::google::protobuf::int32 supportedversioncode_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetA8KeyResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetA8KeyResp) */ {
 public:
  GetA8KeyResp();
  virtual ~GetA8KeyResp();

  GetA8KeyResp(const GetA8KeyResp& from);

  inline GetA8KeyResp& operator=(const GetA8KeyResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetA8KeyResp& default_instance();

  static inline const GetA8KeyResp* internal_default_instance() {
    return reinterpret_cast<const GetA8KeyResp*>(
               &_GetA8KeyResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(GetA8KeyResp* other);

  // implements Message ----------------------------------------------

  inline GetA8KeyResp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetA8KeyResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetA8KeyResp& from);
  void MergeFrom(const GetA8KeyResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetA8KeyResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.BizScopeInfo ScopeList = 17;
  int scopelist_size() const;
  void clear_scopelist();
  static const int kScopeListFieldNumber = 17;
  const ::micromsg::BizScopeInfo& scopelist(int index) const;
  ::micromsg::BizScopeInfo* mutable_scopelist(int index);
  ::micromsg::BizScopeInfo* add_scopelist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::BizScopeInfo >*
      mutable_scopelist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::BizScopeInfo >&
      scopelist() const;

  // optional string FullURL = 2;
  bool has_fullurl() const;
  void clear_fullurl();
  static const int kFullURLFieldNumber = 2;
  const ::std::string& fullurl() const;
  void set_fullurl(const ::std::string& value);
  #if LANG_CXX11
  void set_fullurl(::std::string&& value);
  #endif
  void set_fullurl(const char* value);
  void set_fullurl(const char* value, size_t size);
  ::std::string* mutable_fullurl();
  ::std::string* release_fullurl();
  void set_allocated_fullurl(::std::string* fullurl);

  // optional string A8Key = 3;
  bool has_a8key() const;
  void clear_a8key();
  static const int kA8KeyFieldNumber = 3;
  const ::std::string& a8key() const;
  void set_a8key(const ::std::string& value);
  #if LANG_CXX11
  void set_a8key(::std::string&& value);
  #endif
  void set_a8key(const char* value);
  void set_a8key(const char* value, size_t size);
  ::std::string* mutable_a8key();
  ::std::string* release_a8key();
  void set_allocated_a8key(::std::string* a8key);

  // optional string Title = 5;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 5;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional string Content = 6;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 6;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // optional string UserName = 9;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 9;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string ShareURL = 15;
  bool has_shareurl() const;
  void clear_shareurl();
  static const int kShareURLFieldNumber = 15;
  const ::std::string& shareurl() const;
  void set_shareurl(const ::std::string& value);
  #if LANG_CXX11
  void set_shareurl(::std::string&& value);
  #endif
  void set_shareurl(const char* value);
  void set_shareurl(const char* value, size_t size);
  ::std::string* mutable_shareurl();
  ::std::string* release_shareurl();
  void set_allocated_shareurl(::std::string* shareurl);

  // optional string AntispamTicket = 18;
  bool has_antispamticket() const;
  void clear_antispamticket();
  static const int kAntispamTicketFieldNumber = 18;
  const ::std::string& antispamticket() const;
  void set_antispamticket(const ::std::string& value);
  #if LANG_CXX11
  void set_antispamticket(::std::string&& value);
  #endif
  void set_antispamticket(const char* value);
  void set_antispamticket(const char* value, size_t size);
  ::std::string* mutable_antispamticket();
  ::std::string* release_antispamticket();
  void set_allocated_antispamticket(::std::string* antispamticket);

  // optional string SSID = 20;
  bool has_ssid() const;
  void clear_ssid();
  static const int kSSIDFieldNumber = 20;
  const ::std::string& ssid() const;
  void set_ssid(const ::std::string& value);
  #if LANG_CXX11
  void set_ssid(::std::string&& value);
  #endif
  void set_ssid(const char* value);
  void set_ssid(const char* value, size_t size);
  ::std::string* mutable_ssid();
  ::std::string* release_ssid();
  void set_allocated_ssid(::std::string* ssid);

  // optional string MID = 21;
  bool has_mid() const;
  void clear_mid();
  static const int kMIDFieldNumber = 21;
  const ::std::string& mid() const;
  void set_mid(const ::std::string& value);
  #if LANG_CXX11
  void set_mid(::std::string&& value);
  #endif
  void set_mid(const char* value);
  void set_mid(const char* value, size_t size);
  ::std::string* mutable_mid();
  ::std::string* release_mid();
  void set_allocated_mid(::std::string* mid);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // optional .micromsg.JSAPIPermissionBitSet JSAPIPermission = 7;
  bool has_jsapipermission() const;
  void clear_jsapipermission();
  static const int kJSAPIPermissionFieldNumber = 7;
  const ::micromsg::JSAPIPermissionBitSet& jsapipermission() const;
  ::micromsg::JSAPIPermissionBitSet* mutable_jsapipermission();
  ::micromsg::JSAPIPermissionBitSet* release_jsapipermission();
  void set_allocated_jsapipermission(::micromsg::JSAPIPermissionBitSet* jsapipermission);

  // optional .micromsg.GeneralControlBitSet GeneralControlBitSet = 8;
  bool has_generalcontrolbitset() const;
  void clear_generalcontrolbitset();
  static const int kGeneralControlBitSetFieldNumber = 8;
  const ::micromsg::GeneralControlBitSet& generalcontrolbitset() const;
  ::micromsg::GeneralControlBitSet* mutable_generalcontrolbitset();
  ::micromsg::GeneralControlBitSet* release_generalcontrolbitset();
  void set_allocated_generalcontrolbitset(::micromsg::GeneralControlBitSet* generalcontrolbitset);

  // optional .micromsg.DeepLinkBitSet DeepLinkBitSet = 22;
  bool has_deeplinkbitset() const;
  void clear_deeplinkbitset();
  static const int kDeepLinkBitSetFieldNumber = 22;
  const ::micromsg::DeepLinkBitSet& deeplinkbitset() const;
  ::micromsg::DeepLinkBitSet* mutable_deeplinkbitset();
  ::micromsg::DeepLinkBitSet* release_deeplinkbitset();
  void set_allocated_deeplinkbitset(::micromsg::DeepLinkBitSet* deeplinkbitset);

  // optional .micromsg.SKBuiltinBuffer_t JSAPIControlBytes = 23;
  bool has_jsapicontrolbytes() const;
  void clear_jsapicontrolbytes();
  static const int kJSAPIControlBytesFieldNumber = 23;
  const ::micromsg::SKBuiltinBuffer_t& jsapicontrolbytes() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_jsapicontrolbytes();
  ::micromsg::SKBuiltinBuffer_t* release_jsapicontrolbytes();
  void set_allocated_jsapicontrolbytes(::micromsg::SKBuiltinBuffer_t* jsapicontrolbytes);

  // optional uint32 ActionCode = 4;
  bool has_actioncode() const;
  void clear_actioncode();
  static const int kActionCodeFieldNumber = 4;
  ::google::protobuf::uint32 actioncode() const;
  void set_actioncode(::google::protobuf::uint32 value);

  // optional uint32 ScopeCount = 16;
  bool has_scopecount() const;
  void clear_scopecount();
  static const int kScopeCountFieldNumber = 16;
  ::google::protobuf::uint32 scopecount() const;
  void set_scopecount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetA8KeyResp)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_fullurl();
  void clear_has_fullurl();
  void set_has_a8key();
  void clear_has_a8key();
  void set_has_actioncode();
  void clear_has_actioncode();
  void set_has_title();
  void clear_has_title();
  void set_has_content();
  void clear_has_content();
  void set_has_jsapipermission();
  void clear_has_jsapipermission();
  void set_has_generalcontrolbitset();
  void clear_has_generalcontrolbitset();
  void set_has_username();
  void clear_has_username();
  void set_has_shareurl();
  void clear_has_shareurl();
  void set_has_scopecount();
  void clear_has_scopecount();
  void set_has_antispamticket();
  void clear_has_antispamticket();
  void set_has_ssid();
  void clear_has_ssid();
  void set_has_mid();
  void clear_has_mid();
  void set_has_deeplinkbitset();
  void clear_has_deeplinkbitset();
  void set_has_jsapicontrolbytes();
  void clear_has_jsapicontrolbytes();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::BizScopeInfo > scopelist_;
  ::google::protobuf::internal::ArenaStringPtr fullurl_;
  ::google::protobuf::internal::ArenaStringPtr a8key_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr shareurl_;
  ::google::protobuf::internal::ArenaStringPtr antispamticket_;
  ::google::protobuf::internal::ArenaStringPtr ssid_;
  ::google::protobuf::internal::ArenaStringPtr mid_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::JSAPIPermissionBitSet* jsapipermission_;
  ::micromsg::GeneralControlBitSet* generalcontrolbitset_;
  ::micromsg::DeepLinkBitSet* deeplinkbitset_;
  ::micromsg::SKBuiltinBuffer_t* jsapicontrolbytes_;
  ::google::protobuf::uint32 actioncode_;
  ::google::protobuf::uint32 scopecount_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AdAppList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.AdAppList) */ {
 public:
  AdAppList();
  virtual ~AdAppList();

  AdAppList(const AdAppList& from);

  inline AdAppList& operator=(const AdAppList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdAppList& default_instance();

  static inline const AdAppList* internal_default_instance() {
    return reinterpret_cast<const AdAppList*>(
               &_AdAppList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(AdAppList* other);

  // implements Message ----------------------------------------------

  inline AdAppList* New() const PROTOBUF_FINAL { return New(NULL); }

  AdAppList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AdAppList& from);
  void MergeFrom(const AdAppList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AdAppList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string AppID = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppIDFieldNumber = 1;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // optional string AppCoverUrl = 2;
  bool has_appcoverurl() const;
  void clear_appcoverurl();
  static const int kAppCoverUrlFieldNumber = 2;
  const ::std::string& appcoverurl() const;
  void set_appcoverurl(const ::std::string& value);
  #if LANG_CXX11
  void set_appcoverurl(::std::string&& value);
  #endif
  void set_appcoverurl(const char* value);
  void set_appcoverurl(const char* value, size_t size);
  ::std::string* mutable_appcoverurl();
  ::std::string* release_appcoverurl();
  void set_allocated_appcoverurl(::std::string* appcoverurl);

  // optional string AppDownloadUrl = 3;
  bool has_appdownloadurl() const;
  void clear_appdownloadurl();
  static const int kAppDownloadUrlFieldNumber = 3;
  const ::std::string& appdownloadurl() const;
  void set_appdownloadurl(const ::std::string& value);
  #if LANG_CXX11
  void set_appdownloadurl(::std::string&& value);
  #endif
  void set_appdownloadurl(const char* value);
  void set_appdownloadurl(const char* value, size_t size);
  ::std::string* mutable_appdownloadurl();
  ::std::string* release_appdownloadurl();
  void set_allocated_appdownloadurl(::std::string* appdownloadurl);

  // optional string AndroidApkMd5 = 4;
  bool has_androidapkmd5() const;
  void clear_androidapkmd5();
  static const int kAndroidApkMd5FieldNumber = 4;
  const ::std::string& androidapkmd5() const;
  void set_androidapkmd5(const ::std::string& value);
  #if LANG_CXX11
  void set_androidapkmd5(::std::string&& value);
  #endif
  void set_androidapkmd5(const char* value);
  void set_androidapkmd5(const char* value, size_t size);
  ::std::string* mutable_androidapkmd5();
  ::std::string* release_androidapkmd5();
  void set_allocated_androidapkmd5(::std::string* androidapkmd5);

  // optional string AppName = 5;
  bool has_appname() const;
  void clear_appname();
  static const int kAppNameFieldNumber = 5;
  const ::std::string& appname() const;
  void set_appname(const ::std::string& value);
  #if LANG_CXX11
  void set_appname(::std::string&& value);
  #endif
  void set_appname(const char* value);
  void set_appname(const char* value, size_t size);
  ::std::string* mutable_appname();
  ::std::string* release_appname();
  void set_allocated_appname(::std::string* appname);

  // optional string AppIconUrl = 6;
  bool has_appiconurl() const;
  void clear_appiconurl();
  static const int kAppIconUrlFieldNumber = 6;
  const ::std::string& appiconurl() const;
  void set_appiconurl(const ::std::string& value);
  #if LANG_CXX11
  void set_appiconurl(::std::string&& value);
  #endif
  void set_appiconurl(const char* value);
  void set_appiconurl(const char* value, size_t size);
  ::std::string* mutable_appiconurl();
  ::std::string* release_appiconurl();
  void set_allocated_appiconurl(::std::string* appiconurl);

  // optional string AppSnsDesc = 7;
  bool has_appsnsdesc() const;
  void clear_appsnsdesc();
  static const int kAppSnsDescFieldNumber = 7;
  const ::std::string& appsnsdesc() const;
  void set_appsnsdesc(const ::std::string& value);
  #if LANG_CXX11
  void set_appsnsdesc(::std::string&& value);
  #endif
  void set_appsnsdesc(const char* value);
  void set_appsnsdesc(const char* value, size_t size);
  ::std::string* mutable_appsnsdesc();
  ::std::string* release_appsnsdesc();
  void set_allocated_appsnsdesc(::std::string* appsnsdesc);

  // optional string AndroidPackageName = 8;
  bool has_androidpackagename() const;
  void clear_androidpackagename();
  static const int kAndroidPackageNameFieldNumber = 8;
  const ::std::string& androidpackagename() const;
  void set_androidpackagename(const ::std::string& value);
  #if LANG_CXX11
  void set_androidpackagename(::std::string&& value);
  #endif
  void set_androidpackagename(const char* value);
  void set_androidpackagename(const char* value, size_t size);
  ::std::string* mutable_androidpackagename();
  ::std::string* release_androidpackagename();
  void set_allocated_androidpackagename(::std::string* androidpackagename);

  // optional string GooglePlayDownloadUrl = 9;
  bool has_googleplaydownloadurl() const;
  void clear_googleplaydownloadurl();
  static const int kGooglePlayDownloadUrlFieldNumber = 9;
  const ::std::string& googleplaydownloadurl() const;
  void set_googleplaydownloadurl(const ::std::string& value);
  #if LANG_CXX11
  void set_googleplaydownloadurl(::std::string&& value);
  #endif
  void set_googleplaydownloadurl(const char* value);
  void set_googleplaydownloadurl(const char* value, size_t size);
  ::std::string* mutable_googleplaydownloadurl();
  ::std::string* release_googleplaydownloadurl();
  void set_allocated_googleplaydownloadurl(::std::string* googleplaydownloadurl);

  // optional string ExtAsXML = 11;
  bool has_extasxml() const;
  void clear_extasxml();
  static const int kExtAsXMLFieldNumber = 11;
  const ::std::string& extasxml() const;
  void set_extasxml(const ::std::string& value);
  #if LANG_CXX11
  void set_extasxml(::std::string&& value);
  #endif
  void set_extasxml(const char* value);
  void set_extasxml(const char* value, size_t size);
  ::std::string* mutable_extasxml();
  ::std::string* release_extasxml();
  void set_allocated_extasxml(::std::string* extasxml);

  // optional .micromsg.YYBStruct SYYB = 10;
  bool has_syyb() const;
  void clear_syyb();
  static const int kSYYBFieldNumber = 10;
  const ::micromsg::YYBStruct& syyb() const;
  ::micromsg::YYBStruct* mutable_syyb();
  ::micromsg::YYBStruct* release_syyb();
  void set_allocated_syyb(::micromsg::YYBStruct* syyb);

  // @@protoc_insertion_point(class_scope:micromsg.AdAppList)
 private:
  void set_has_appid();
  void clear_has_appid();
  void set_has_appcoverurl();
  void clear_has_appcoverurl();
  void set_has_appdownloadurl();
  void clear_has_appdownloadurl();
  void set_has_androidapkmd5();
  void clear_has_androidapkmd5();
  void set_has_appname();
  void clear_has_appname();
  void set_has_appiconurl();
  void clear_has_appiconurl();
  void set_has_appsnsdesc();
  void clear_has_appsnsdesc();
  void set_has_androidpackagename();
  void clear_has_androidpackagename();
  void set_has_googleplaydownloadurl();
  void clear_has_googleplaydownloadurl();
  void set_has_syyb();
  void clear_has_syyb();
  void set_has_extasxml();
  void clear_has_extasxml();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::google::protobuf::internal::ArenaStringPtr appcoverurl_;
  ::google::protobuf::internal::ArenaStringPtr appdownloadurl_;
  ::google::protobuf::internal::ArenaStringPtr androidapkmd5_;
  ::google::protobuf::internal::ArenaStringPtr appname_;
  ::google::protobuf::internal::ArenaStringPtr appiconurl_;
  ::google::protobuf::internal::ArenaStringPtr appsnsdesc_;
  ::google::protobuf::internal::ArenaStringPtr androidpackagename_;
  ::google::protobuf::internal::ArenaStringPtr googleplaydownloadurl_;
  ::google::protobuf::internal::ArenaStringPtr extasxml_;
  ::micromsg::YYBStruct* syyb_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GiftList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GiftList) */ {
 public:
  GiftList();
  virtual ~GiftList();

  GiftList(const GiftList& from);

  inline GiftList& operator=(const GiftList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GiftList& default_instance();

  static inline const GiftList* internal_default_instance() {
    return reinterpret_cast<const GiftList*>(
               &_GiftList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(GiftList* other);

  // implements Message ----------------------------------------------

  inline GiftList* New() const PROTOBUF_FINAL { return New(NULL); }

  GiftList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GiftList& from);
  void MergeFrom(const GiftList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GiftList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string GiftID = 1;
  bool has_giftid() const;
  void clear_giftid();
  static const int kGiftIDFieldNumber = 1;
  const ::std::string& giftid() const;
  void set_giftid(const ::std::string& value);
  #if LANG_CXX11
  void set_giftid(::std::string&& value);
  #endif
  void set_giftid(const char* value);
  void set_giftid(const char* value, size_t size);
  ::std::string* mutable_giftid();
  ::std::string* release_giftid();
  void set_allocated_giftid(::std::string* giftid);

  // optional string IconUrl = 2;
  bool has_iconurl() const;
  void clear_iconurl();
  static const int kIconUrlFieldNumber = 2;
  const ::std::string& iconurl() const;
  void set_iconurl(const ::std::string& value);
  #if LANG_CXX11
  void set_iconurl(::std::string&& value);
  #endif
  void set_iconurl(const char* value);
  void set_iconurl(const char* value, size_t size);
  ::std::string* mutable_iconurl();
  ::std::string* release_iconurl();
  void set_allocated_iconurl(::std::string* iconurl);

  // optional string Title = 3;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 3;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional string Desc = 4;
  bool has_desc() const;
  void clear_desc();
  static const int kDescFieldNumber = 4;
  const ::std::string& desc() const;
  void set_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_desc(::std::string&& value);
  #endif
  void set_desc(const char* value);
  void set_desc(const char* value, size_t size);
  ::std::string* mutable_desc();
  ::std::string* release_desc();
  void set_allocated_desc(::std::string* desc);

  // optional string GiftUrl = 5;
  bool has_gifturl() const;
  void clear_gifturl();
  static const int kGiftUrlFieldNumber = 5;
  const ::std::string& gifturl() const;
  void set_gifturl(const ::std::string& value);
  #if LANG_CXX11
  void set_gifturl(::std::string&& value);
  #endif
  void set_gifturl(const char* value);
  void set_gifturl(const char* value, size_t size);
  ::std::string* mutable_gifturl();
  ::std::string* release_gifturl();
  void set_allocated_gifturl(::std::string* gifturl);

  // @@protoc_insertion_point(class_scope:micromsg.GiftList)
 private:
  void set_has_giftid();
  void clear_has_giftid();
  void set_has_iconurl();
  void clear_has_iconurl();
  void set_has_title();
  void clear_has_title();
  void set_has_desc();
  void clear_has_desc();
  void set_has_gifturl();
  void clear_has_gifturl();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr giftid_;
  ::google::protobuf::internal::ArenaStringPtr iconurl_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr desc_;
  ::google::protobuf::internal::ArenaStringPtr gifturl_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GiftEntranceItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GiftEntranceItem) */ {
 public:
  GiftEntranceItem();
  virtual ~GiftEntranceItem();

  GiftEntranceItem(const GiftEntranceItem& from);

  inline GiftEntranceItem& operator=(const GiftEntranceItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GiftEntranceItem& default_instance();

  static inline const GiftEntranceItem* internal_default_instance() {
    return reinterpret_cast<const GiftEntranceItem*>(
               &_GiftEntranceItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(GiftEntranceItem* other);

  // implements Message ----------------------------------------------

  inline GiftEntranceItem* New() const PROTOBUF_FINAL { return New(NULL); }

  GiftEntranceItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GiftEntranceItem& from);
  void MergeFrom(const GiftEntranceItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GiftEntranceItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string CellTitle = 1;
  bool has_celltitle() const;
  void clear_celltitle();
  static const int kCellTitleFieldNumber = 1;
  const ::std::string& celltitle() const;
  void set_celltitle(const ::std::string& value);
  #if LANG_CXX11
  void set_celltitle(::std::string&& value);
  #endif
  void set_celltitle(const char* value);
  void set_celltitle(const char* value, size_t size);
  ::std::string* mutable_celltitle();
  ::std::string* release_celltitle();
  void set_allocated_celltitle(::std::string* celltitle);

  // optional string EnranceWording = 2;
  bool has_enrancewording() const;
  void clear_enrancewording();
  static const int kEnranceWordingFieldNumber = 2;
  const ::std::string& enrancewording() const;
  void set_enrancewording(const ::std::string& value);
  #if LANG_CXX11
  void set_enrancewording(::std::string&& value);
  #endif
  void set_enrancewording(const char* value);
  void set_enrancewording(const char* value, size_t size);
  ::std::string* mutable_enrancewording();
  ::std::string* release_enrancewording();
  void set_allocated_enrancewording(::std::string* enrancewording);

  // optional string AllGiftUrl = 3;
  bool has_allgifturl() const;
  void clear_allgifturl();
  static const int kAllGiftUrlFieldNumber = 3;
  const ::std::string& allgifturl() const;
  void set_allgifturl(const ::std::string& value);
  #if LANG_CXX11
  void set_allgifturl(::std::string&& value);
  #endif
  void set_allgifturl(const char* value);
  void set_allgifturl(const char* value, size_t size);
  ::std::string* mutable_allgifturl();
  ::std::string* release_allgifturl();
  void set_allocated_allgifturl(::std::string* allgifturl);

  // @@protoc_insertion_point(class_scope:micromsg.GiftEntranceItem)
 private:
  void set_has_celltitle();
  void clear_has_celltitle();
  void set_has_enrancewording();
  void clear_has_enrancewording();
  void set_has_allgifturl();
  void clear_has_allgifturl();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr celltitle_;
  ::google::protobuf::internal::ArenaStringPtr enrancewording_;
  ::google::protobuf::internal::ArenaStringPtr allgifturl_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RcAppList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.RcAppList) */ {
 public:
  RcAppList();
  virtual ~RcAppList();

  RcAppList(const RcAppList& from);

  inline RcAppList& operator=(const RcAppList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RcAppList& default_instance();

  static inline const RcAppList* internal_default_instance() {
    return reinterpret_cast<const RcAppList*>(
               &_RcAppList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(RcAppList* other);

  // implements Message ----------------------------------------------

  inline RcAppList* New() const PROTOBUF_FINAL { return New(NULL); }

  RcAppList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RcAppList& from);
  void MergeFrom(const RcAppList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RcAppList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.SKBuiltinString_t AppScreenShotList = 9;
  int appscreenshotlist_size() const;
  void clear_appscreenshotlist();
  static const int kAppScreenShotListFieldNumber = 9;
  const ::micromsg::SKBuiltinString_t& appscreenshotlist(int index) const;
  ::micromsg::SKBuiltinString_t* mutable_appscreenshotlist(int index);
  ::micromsg::SKBuiltinString_t* add_appscreenshotlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
      mutable_appscreenshotlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
      appscreenshotlist() const;

  // optional string AppID = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppIDFieldNumber = 1;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // optional string AppName = 2;
  bool has_appname() const;
  void clear_appname();
  static const int kAppNameFieldNumber = 2;
  const ::std::string& appname() const;
  void set_appname(const ::std::string& value);
  #if LANG_CXX11
  void set_appname(::std::string&& value);
  #endif
  void set_appname(const char* value);
  void set_appname(const char* value, size_t size);
  ::std::string* mutable_appname();
  ::std::string* release_appname();
  void set_allocated_appname(::std::string* appname);

  // optional string AppIconUrl = 3;
  bool has_appiconurl() const;
  void clear_appiconurl();
  static const int kAppIconUrlFieldNumber = 3;
  const ::std::string& appiconurl() const;
  void set_appiconurl(const ::std::string& value);
  #if LANG_CXX11
  void set_appiconurl(::std::string&& value);
  #endif
  void set_appiconurl(const char* value);
  void set_appiconurl(const char* value, size_t size);
  ::std::string* mutable_appiconurl();
  ::std::string* release_appiconurl();
  void set_allocated_appiconurl(::std::string* appiconurl);

  // optional string AppDesc = 4;
  bool has_appdesc() const;
  void clear_appdesc();
  static const int kAppDescFieldNumber = 4;
  const ::std::string& appdesc() const;
  void set_appdesc(const ::std::string& value);
  #if LANG_CXX11
  void set_appdesc(::std::string&& value);
  #endif
  void set_appdesc(const char* value);
  void set_appdesc(const char* value, size_t size);
  ::std::string* mutable_appdesc();
  ::std::string* release_appdesc();
  void set_allocated_appdesc(::std::string* appdesc);

  // optional string AppDownloadUrl = 5;
  bool has_appdownloadurl() const;
  void clear_appdownloadurl();
  static const int kAppDownloadUrlFieldNumber = 5;
  const ::std::string& appdownloadurl() const;
  void set_appdownloadurl(const ::std::string& value);
  #if LANG_CXX11
  void set_appdownloadurl(::std::string&& value);
  #endif
  void set_appdownloadurl(const char* value);
  void set_appdownloadurl(const char* value, size_t size);
  ::std::string* mutable_appdownloadurl();
  ::std::string* release_appdownloadurl();
  void set_allocated_appdownloadurl(::std::string* appdownloadurl);

  // optional string AppCoverUrl = 6;
  bool has_appcoverurl() const;
  void clear_appcoverurl();
  static const int kAppCoverUrlFieldNumber = 6;
  const ::std::string& appcoverurl() const;
  void set_appcoverurl(const ::std::string& value);
  #if LANG_CXX11
  void set_appcoverurl(::std::string&& value);
  #endif
  void set_appcoverurl(const char* value);
  void set_appcoverurl(const char* value, size_t size);
  ::std::string* mutable_appcoverurl();
  ::std::string* release_appcoverurl();
  void set_allocated_appcoverurl(::std::string* appcoverurl);

  // optional string AppDevInfo = 7;
  bool has_appdevinfo() const;
  void clear_appdevinfo();
  static const int kAppDevInfoFieldNumber = 7;
  const ::std::string& appdevinfo() const;
  void set_appdevinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_appdevinfo(::std::string&& value);
  #endif
  void set_appdevinfo(const char* value);
  void set_appdevinfo(const char* value, size_t size);
  ::std::string* mutable_appdevinfo();
  ::std::string* release_appdevinfo();
  void set_allocated_appdevinfo(::std::string* appdevinfo);

  // optional string AppSnsDesc = 10;
  bool has_appsnsdesc() const;
  void clear_appsnsdesc();
  static const int kAppSnsDescFieldNumber = 10;
  const ::std::string& appsnsdesc() const;
  void set_appsnsdesc(const ::std::string& value);
  #if LANG_CXX11
  void set_appsnsdesc(::std::string&& value);
  #endif
  void set_appsnsdesc(const char* value);
  void set_appsnsdesc(const char* value, size_t size);
  ::std::string* mutable_appsnsdesc();
  ::std::string* release_appsnsdesc();
  void set_allocated_appsnsdesc(::std::string* appsnsdesc);

  // optional string AppSnapshotUrl = 11;
  bool has_appsnapshoturl() const;
  void clear_appsnapshoturl();
  static const int kAppSnapshotUrlFieldNumber = 11;
  const ::std::string& appsnapshoturl() const;
  void set_appsnapshoturl(const ::std::string& value);
  #if LANG_CXX11
  void set_appsnapshoturl(::std::string&& value);
  #endif
  void set_appsnapshoturl(const char* value);
  void set_appsnapshoturl(const char* value, size_t size);
  ::std::string* mutable_appsnapshoturl();
  ::std::string* release_appsnapshoturl();
  void set_allocated_appsnapshoturl(::std::string* appsnapshoturl);

  // optional string AppDetailDesc = 12;
  bool has_appdetaildesc() const;
  void clear_appdetaildesc();
  static const int kAppDetailDescFieldNumber = 12;
  const ::std::string& appdetaildesc() const;
  void set_appdetaildesc(const ::std::string& value);
  #if LANG_CXX11
  void set_appdetaildesc(::std::string&& value);
  #endif
  void set_appdetaildesc(const char* value);
  void set_appdetaildesc(const char* value, size_t size);
  ::std::string* mutable_appdetaildesc();
  ::std::string* release_appdetaildesc();
  void set_allocated_appdetaildesc(::std::string* appdetaildesc);

  // optional string AppType = 14;
  bool has_apptype() const;
  void clear_apptype();
  static const int kAppTypeFieldNumber = 14;
  const ::std::string& apptype() const;
  void set_apptype(const ::std::string& value);
  #if LANG_CXX11
  void set_apptype(::std::string&& value);
  #endif
  void set_apptype(const char* value);
  void set_apptype(const char* value, size_t size);
  ::std::string* mutable_apptype();
  ::std::string* release_apptype();
  void set_allocated_apptype(::std::string* apptype);

  // optional string AndroidApkMd5 = 15;
  bool has_androidapkmd5() const;
  void clear_androidapkmd5();
  static const int kAndroidApkMd5FieldNumber = 15;
  const ::std::string& androidapkmd5() const;
  void set_androidapkmd5(const ::std::string& value);
  #if LANG_CXX11
  void set_androidapkmd5(::std::string&& value);
  #endif
  void set_androidapkmd5(const char* value);
  void set_androidapkmd5(const char* value, size_t size);
  ::std::string* mutable_androidapkmd5();
  ::std::string* release_androidapkmd5();
  void set_allocated_androidapkmd5(::std::string* androidapkmd5);

  // optional string AndroidPackageName = 16;
  bool has_androidpackagename() const;
  void clear_androidpackagename();
  static const int kAndroidPackageNameFieldNumber = 16;
  const ::std::string& androidpackagename() const;
  void set_androidpackagename(const ::std::string& value);
  #if LANG_CXX11
  void set_androidpackagename(::std::string&& value);
  #endif
  void set_androidpackagename(const char* value);
  void set_androidpackagename(const char* value, size_t size);
  ::std::string* mutable_androidpackagename();
  ::std::string* release_androidpackagename();
  void set_allocated_androidpackagename(::std::string* androidpackagename);

  // optional string AppNamezhTW = 17;
  bool has_appnamezhtw() const;
  void clear_appnamezhtw();
  static const int kAppNamezhTWFieldNumber = 17;
  const ::std::string& appnamezhtw() const;
  void set_appnamezhtw(const ::std::string& value);
  #if LANG_CXX11
  void set_appnamezhtw(::std::string&& value);
  #endif
  void set_appnamezhtw(const char* value);
  void set_appnamezhtw(const char* value, size_t size);
  ::std::string* mutable_appnamezhtw();
  ::std::string* release_appnamezhtw();
  void set_allocated_appnamezhtw(::std::string* appnamezhtw);

  // optional string AppNameEnUS = 18;
  bool has_appnameenus() const;
  void clear_appnameenus();
  static const int kAppNameEnUSFieldNumber = 18;
  const ::std::string& appnameenus() const;
  void set_appnameenus(const ::std::string& value);
  #if LANG_CXX11
  void set_appnameenus(::std::string&& value);
  #endif
  void set_appnameenus(const char* value);
  void set_appnameenus(const char* value, size_t size);
  ::std::string* mutable_appnameenus();
  ::std::string* release_appnameenus();
  void set_allocated_appnameenus(::std::string* appnameenus);

  // optional string GooglePlayDownloadUrl = 19;
  bool has_googleplaydownloadurl() const;
  void clear_googleplaydownloadurl();
  static const int kGooglePlayDownloadUrlFieldNumber = 19;
  const ::std::string& googleplaydownloadurl() const;
  void set_googleplaydownloadurl(const ::std::string& value);
  #if LANG_CXX11
  void set_googleplaydownloadurl(::std::string&& value);
  #endif
  void set_googleplaydownloadurl(const char* value);
  void set_googleplaydownloadurl(const char* value, size_t size);
  ::std::string* mutable_googleplaydownloadurl();
  ::std::string* release_googleplaydownloadurl();
  void set_allocated_googleplaydownloadurl(::std::string* googleplaydownloadurl);

  // optional string AppSuggestionIconUrl = 20;
  bool has_appsuggestioniconurl() const;
  void clear_appsuggestioniconurl();
  static const int kAppSuggestionIconUrlFieldNumber = 20;
  const ::std::string& appsuggestioniconurl() const;
  void set_appsuggestioniconurl(const ::std::string& value);
  #if LANG_CXX11
  void set_appsuggestioniconurl(::std::string&& value);
  #endif
  void set_appsuggestioniconurl(const char* value);
  void set_appsuggestioniconurl(const char* value, size_t size);
  ::std::string* mutable_appsuggestioniconurl();
  ::std::string* release_appsuggestioniconurl();
  void set_allocated_appsuggestioniconurl(::std::string* appsuggestioniconurl);

  // optional string AppSuggestionIntroUrl = 21;
  bool has_appsuggestionintrourl() const;
  void clear_appsuggestionintrourl();
  static const int kAppSuggestionIntroUrlFieldNumber = 21;
  const ::std::string& appsuggestionintrourl() const;
  void set_appsuggestionintrourl(const ::std::string& value);
  #if LANG_CXX11
  void set_appsuggestionintrourl(::std::string&& value);
  #endif
  void set_appsuggestionintrourl(const char* value);
  void set_appsuggestionintrourl(const char* value, size_t size);
  ::std::string* mutable_appsuggestionintrourl();
  ::std::string* release_appsuggestionintrourl();
  void set_allocated_appsuggestionintrourl(::std::string* appsuggestionintrourl);

  // optional string AppLaunchScheme = 23;
  bool has_applaunchscheme() const;
  void clear_applaunchscheme();
  static const int kAppLaunchSchemeFieldNumber = 23;
  const ::std::string& applaunchscheme() const;
  void set_applaunchscheme(const ::std::string& value);
  #if LANG_CXX11
  void set_applaunchscheme(::std::string&& value);
  #endif
  void set_applaunchscheme(const char* value);
  void set_applaunchscheme(const char* value, size_t size);
  ::std::string* mutable_applaunchscheme();
  ::std::string* release_applaunchscheme();
  void set_allocated_applaunchscheme(::std::string* applaunchscheme);

  // optional .micromsg.YYBStruct SYYB = 22;
  bool has_syyb() const;
  void clear_syyb();
  static const int kSYYBFieldNumber = 22;
  const ::micromsg::YYBStruct& syyb() const;
  ::micromsg::YYBStruct* mutable_syyb();
  ::micromsg::YYBStruct* release_syyb();
  void set_allocated_syyb(::micromsg::YYBStruct* syyb);

  // required int32 AppScreenShotCount = 8;
  bool has_appscreenshotcount() const;
  void clear_appscreenshotcount();
  static const int kAppScreenShotCountFieldNumber = 8;
  ::google::protobuf::int32 appscreenshotcount() const;
  void set_appscreenshotcount(::google::protobuf::int32 value);

  // optional uint32 FriendCount = 13;
  bool has_friendcount() const;
  void clear_friendcount();
  static const int kFriendCountFieldNumber = 13;
  ::google::protobuf::uint32 friendcount() const;
  void set_friendcount(::google::protobuf::uint32 value);

  // optional uint32 GooglePlayDownloadFlag = 24;
  bool has_googleplaydownloadflag() const;
  void clear_googleplaydownloadflag();
  static const int kGooglePlayDownloadFlagFieldNumber = 24;
  ::google::protobuf::uint32 googleplaydownloadflag() const;
  void set_googleplaydownloadflag(::google::protobuf::uint32 value);

  // optional uint32 AppInfoFlag = 25;
  bool has_appinfoflag() const;
  void clear_appinfoflag();
  static const int kAppInfoFlagFieldNumber = 25;
  ::google::protobuf::uint32 appinfoflag() const;
  void set_appinfoflag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.RcAppList)
 private:
  void set_has_appid();
  void clear_has_appid();
  void set_has_appname();
  void clear_has_appname();
  void set_has_appiconurl();
  void clear_has_appiconurl();
  void set_has_appdesc();
  void clear_has_appdesc();
  void set_has_appdownloadurl();
  void clear_has_appdownloadurl();
  void set_has_appcoverurl();
  void clear_has_appcoverurl();
  void set_has_appdevinfo();
  void clear_has_appdevinfo();
  void set_has_appscreenshotcount();
  void clear_has_appscreenshotcount();
  void set_has_appsnsdesc();
  void clear_has_appsnsdesc();
  void set_has_appsnapshoturl();
  void clear_has_appsnapshoturl();
  void set_has_appdetaildesc();
  void clear_has_appdetaildesc();
  void set_has_friendcount();
  void clear_has_friendcount();
  void set_has_apptype();
  void clear_has_apptype();
  void set_has_androidapkmd5();
  void clear_has_androidapkmd5();
  void set_has_androidpackagename();
  void clear_has_androidpackagename();
  void set_has_appnamezhtw();
  void clear_has_appnamezhtw();
  void set_has_appnameenus();
  void clear_has_appnameenus();
  void set_has_googleplaydownloadurl();
  void clear_has_googleplaydownloadurl();
  void set_has_appsuggestioniconurl();
  void clear_has_appsuggestioniconurl();
  void set_has_appsuggestionintrourl();
  void clear_has_appsuggestionintrourl();
  void set_has_syyb();
  void clear_has_syyb();
  void set_has_applaunchscheme();
  void clear_has_applaunchscheme();
  void set_has_googleplaydownloadflag();
  void clear_has_googleplaydownloadflag();
  void set_has_appinfoflag();
  void clear_has_appinfoflag();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t > appscreenshotlist_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::google::protobuf::internal::ArenaStringPtr appname_;
  ::google::protobuf::internal::ArenaStringPtr appiconurl_;
  ::google::protobuf::internal::ArenaStringPtr appdesc_;
  ::google::protobuf::internal::ArenaStringPtr appdownloadurl_;
  ::google::protobuf::internal::ArenaStringPtr appcoverurl_;
  ::google::protobuf::internal::ArenaStringPtr appdevinfo_;
  ::google::protobuf::internal::ArenaStringPtr appsnsdesc_;
  ::google::protobuf::internal::ArenaStringPtr appsnapshoturl_;
  ::google::protobuf::internal::ArenaStringPtr appdetaildesc_;
  ::google::protobuf::internal::ArenaStringPtr apptype_;
  ::google::protobuf::internal::ArenaStringPtr androidapkmd5_;
  ::google::protobuf::internal::ArenaStringPtr androidpackagename_;
  ::google::protobuf::internal::ArenaStringPtr appnamezhtw_;
  ::google::protobuf::internal::ArenaStringPtr appnameenus_;
  ::google::protobuf::internal::ArenaStringPtr googleplaydownloadurl_;
  ::google::protobuf::internal::ArenaStringPtr appsuggestioniconurl_;
  ::google::protobuf::internal::ArenaStringPtr appsuggestionintrourl_;
  ::google::protobuf::internal::ArenaStringPtr applaunchscheme_;
  ::micromsg::YYBStruct* syyb_;
  ::google::protobuf::int32 appscreenshotcount_;
  ::google::protobuf::uint32 friendcount_;
  ::google::protobuf::uint32 googleplaydownloadflag_;
  ::google::protobuf::uint32 appinfoflag_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetGameIntroListRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetGameIntroListRequest) */ {
 public:
  GetGameIntroListRequest();
  virtual ~GetGameIntroListRequest();

  GetGameIntroListRequest(const GetGameIntroListRequest& from);

  inline GetGameIntroListRequest& operator=(const GetGameIntroListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGameIntroListRequest& default_instance();

  static inline const GetGameIntroListRequest* internal_default_instance() {
    return reinterpret_cast<const GetGameIntroListRequest*>(
               &_GetGameIntroListRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(GetGameIntroListRequest* other);

  // implements Message ----------------------------------------------

  inline GetGameIntroListRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetGameIntroListRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetGameIntroListRequest& from);
  void MergeFrom(const GetGameIntroListRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetGameIntroListRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.SKBuiltinString_t AppIdList = 3;
  int appidlist_size() const;
  void clear_appidlist();
  static const int kAppIdListFieldNumber = 3;
  const ::micromsg::SKBuiltinString_t& appidlist(int index) const;
  ::micromsg::SKBuiltinString_t* mutable_appidlist(int index);
  ::micromsg::SKBuiltinString_t* add_appidlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
      mutable_appidlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
      appidlist() const;

  // optional string DevicePlatform = 4;
  bool has_deviceplatform() const;
  void clear_deviceplatform();
  static const int kDevicePlatformFieldNumber = 4;
  const ::std::string& deviceplatform() const;
  void set_deviceplatform(const ::std::string& value);
  #if LANG_CXX11
  void set_deviceplatform(::std::string&& value);
  #endif
  void set_deviceplatform(const char* value);
  void set_deviceplatform(const char* value, size_t size);
  ::std::string* mutable_deviceplatform();
  ::std::string* release_deviceplatform();
  void set_allocated_deviceplatform(::std::string* deviceplatform);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 Count = 2;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetGameIntroListRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_count();
  void clear_has_count();
  void set_has_deviceplatform();
  void clear_has_deviceplatform();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t > appidlist_;
  ::google::protobuf::internal::ArenaStringPtr deviceplatform_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 count_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameIntro : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GameIntro) */ {
 public:
  GameIntro();
  virtual ~GameIntro();

  GameIntro(const GameIntro& from);

  inline GameIntro& operator=(const GameIntro& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameIntro& default_instance();

  static inline const GameIntro* internal_default_instance() {
    return reinterpret_cast<const GameIntro*>(
               &_GameIntro_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(GameIntro* other);

  // implements Message ----------------------------------------------

  inline GameIntro* New() const PROTOBUF_FINAL { return New(NULL); }

  GameIntro* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GameIntro& from);
  void MergeFrom(const GameIntro& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GameIntro* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string AppID = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppIDFieldNumber = 1;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // optional string GameIntroPage = 2;
  bool has_gameintropage() const;
  void clear_gameintropage();
  static const int kGameIntroPageFieldNumber = 2;
  const ::std::string& gameintropage() const;
  void set_gameintropage(const ::std::string& value);
  #if LANG_CXX11
  void set_gameintropage(::std::string&& value);
  #endif
  void set_gameintropage(const char* value);
  void set_gameintropage(const char* value, size_t size);
  ::std::string* mutable_gameintropage();
  ::std::string* release_gameintropage();
  void set_allocated_gameintropage(::std::string* gameintropage);

  // optional string AndroidApkMd5 = 3;
  bool has_androidapkmd5() const;
  void clear_androidapkmd5();
  static const int kAndroidApkMd5FieldNumber = 3;
  const ::std::string& androidapkmd5() const;
  void set_androidapkmd5(const ::std::string& value);
  #if LANG_CXX11
  void set_androidapkmd5(::std::string&& value);
  #endif
  void set_androidapkmd5(const char* value);
  void set_androidapkmd5(const char* value, size_t size);
  ::std::string* mutable_androidapkmd5();
  ::std::string* release_androidapkmd5();
  void set_allocated_androidapkmd5(::std::string* androidapkmd5);

  // optional string AppDownloadUrl = 4;
  bool has_appdownloadurl() const;
  void clear_appdownloadurl();
  static const int kAppDownloadUrlFieldNumber = 4;
  const ::std::string& appdownloadurl() const;
  void set_appdownloadurl(const ::std::string& value);
  #if LANG_CXX11
  void set_appdownloadurl(::std::string&& value);
  #endif
  void set_appdownloadurl(const char* value);
  void set_appdownloadurl(const char* value, size_t size);
  ::std::string* mutable_appdownloadurl();
  ::std::string* release_appdownloadurl();
  void set_allocated_appdownloadurl(::std::string* appdownloadurl);

  // optional string GooglePlayDownloadUrl = 5;
  bool has_googleplaydownloadurl() const;
  void clear_googleplaydownloadurl();
  static const int kGooglePlayDownloadUrlFieldNumber = 5;
  const ::std::string& googleplaydownloadurl() const;
  void set_googleplaydownloadurl(const ::std::string& value);
  #if LANG_CXX11
  void set_googleplaydownloadurl(::std::string&& value);
  #endif
  void set_googleplaydownloadurl(const char* value);
  void set_googleplaydownloadurl(const char* value, size_t size);
  ::std::string* mutable_googleplaydownloadurl();
  ::std::string* release_googleplaydownloadurl();
  void set_allocated_googleplaydownloadurl(::std::string* googleplaydownloadurl);

  // optional .micromsg.YYBStruct SYYB = 6;
  bool has_syyb() const;
  void clear_syyb();
  static const int kSYYBFieldNumber = 6;
  const ::micromsg::YYBStruct& syyb() const;
  ::micromsg::YYBStruct* mutable_syyb();
  ::micromsg::YYBStruct* release_syyb();
  void set_allocated_syyb(::micromsg::YYBStruct* syyb);

  // @@protoc_insertion_point(class_scope:micromsg.GameIntro)
 private:
  void set_has_appid();
  void clear_has_appid();
  void set_has_gameintropage();
  void clear_has_gameintropage();
  void set_has_androidapkmd5();
  void clear_has_androidapkmd5();
  void set_has_appdownloadurl();
  void clear_has_appdownloadurl();
  void set_has_googleplaydownloadurl();
  void clear_has_googleplaydownloadurl();
  void set_has_syyb();
  void clear_has_syyb();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::google::protobuf::internal::ArenaStringPtr gameintropage_;
  ::google::protobuf::internal::ArenaStringPtr androidapkmd5_;
  ::google::protobuf::internal::ArenaStringPtr appdownloadurl_;
  ::google::protobuf::internal::ArenaStringPtr googleplaydownloadurl_;
  ::micromsg::YYBStruct* syyb_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetGameIntroListResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetGameIntroListResponse) */ {
 public:
  GetGameIntroListResponse();
  virtual ~GetGameIntroListResponse();

  GetGameIntroListResponse(const GetGameIntroListResponse& from);

  inline GetGameIntroListResponse& operator=(const GetGameIntroListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGameIntroListResponse& default_instance();

  static inline const GetGameIntroListResponse* internal_default_instance() {
    return reinterpret_cast<const GetGameIntroListResponse*>(
               &_GetGameIntroListResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(GetGameIntroListResponse* other);

  // implements Message ----------------------------------------------

  inline GetGameIntroListResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetGameIntroListResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetGameIntroListResponse& from);
  void MergeFrom(const GetGameIntroListResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetGameIntroListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.GameIntro GameIntroList = 3;
  int gameintrolist_size() const;
  void clear_gameintrolist();
  static const int kGameIntroListFieldNumber = 3;
  const ::micromsg::GameIntro& gameintrolist(int index) const;
  ::micromsg::GameIntro* mutable_gameintrolist(int index);
  ::micromsg::GameIntro* add_gameintrolist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::GameIntro >*
      mutable_gameintrolist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::GameIntro >&
      gameintrolist() const;

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 Count = 2;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetGameIntroListResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_count();
  void clear_has_count();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::GameIntro > gameintrolist_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 count_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetAppPersonalInfoListRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetAppPersonalInfoListRequest) */ {
 public:
  GetAppPersonalInfoListRequest();
  virtual ~GetAppPersonalInfoListRequest();

  GetAppPersonalInfoListRequest(const GetAppPersonalInfoListRequest& from);

  inline GetAppPersonalInfoListRequest& operator=(const GetAppPersonalInfoListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAppPersonalInfoListRequest& default_instance();

  static inline const GetAppPersonalInfoListRequest* internal_default_instance() {
    return reinterpret_cast<const GetAppPersonalInfoListRequest*>(
               &_GetAppPersonalInfoListRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(GetAppPersonalInfoListRequest* other);

  // implements Message ----------------------------------------------

  inline GetAppPersonalInfoListRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetAppPersonalInfoListRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetAppPersonalInfoListRequest& from);
  void MergeFrom(const GetAppPersonalInfoListRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetAppPersonalInfoListRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.SKBuiltinString_t AppIdList = 3;
  int appidlist_size() const;
  void clear_appidlist();
  static const int kAppIdListFieldNumber = 3;
  const ::micromsg::SKBuiltinString_t& appidlist(int index) const;
  ::micromsg::SKBuiltinString_t* mutable_appidlist(int index);
  ::micromsg::SKBuiltinString_t* add_appidlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
      mutable_appidlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
      appidlist() const;

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 Count = 2;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // optional uint32 Scene = 4;
  bool has_scene() const;
  void clear_scene();
  static const int kSceneFieldNumber = 4;
  ::google::protobuf::uint32 scene() const;
  void set_scene(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetAppPersonalInfoListRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_count();
  void clear_has_count();
  void set_has_scene();
  void clear_has_scene();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t > appidlist_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 scene_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AppPersonalInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.AppPersonalInfo) */ {
 public:
  AppPersonalInfo();
  virtual ~AppPersonalInfo();

  AppPersonalInfo(const AppPersonalInfo& from);

  inline AppPersonalInfo& operator=(const AppPersonalInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppPersonalInfo& default_instance();

  static inline const AppPersonalInfo* internal_default_instance() {
    return reinterpret_cast<const AppPersonalInfo*>(
               &_AppPersonalInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(AppPersonalInfo* other);

  // implements Message ----------------------------------------------

  inline AppPersonalInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AppPersonalInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AppPersonalInfo& from);
  void MergeFrom(const AppPersonalInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AppPersonalInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string AppID = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppIDFieldNumber = 1;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // optional string PersonalSettingXml = 2;
  bool has_personalsettingxml() const;
  void clear_personalsettingxml();
  static const int kPersonalSettingXmlFieldNumber = 2;
  const ::std::string& personalsettingxml() const;
  void set_personalsettingxml(const ::std::string& value);
  #if LANG_CXX11
  void set_personalsettingxml(::std::string&& value);
  #endif
  void set_personalsettingxml(const char* value);
  void set_personalsettingxml(const char* value, size_t size);
  ::std::string* mutable_personalsettingxml();
  ::std::string* release_personalsettingxml();
  void set_allocated_personalsettingxml(::std::string* personalsettingxml);

  // @@protoc_insertion_point(class_scope:micromsg.AppPersonalInfo)
 private:
  void set_has_appid();
  void clear_has_appid();
  void set_has_personalsettingxml();
  void clear_has_personalsettingxml();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::google::protobuf::internal::ArenaStringPtr personalsettingxml_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetAppPersonalInfoListResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetAppPersonalInfoListResponse) */ {
 public:
  GetAppPersonalInfoListResponse();
  virtual ~GetAppPersonalInfoListResponse();

  GetAppPersonalInfoListResponse(const GetAppPersonalInfoListResponse& from);

  inline GetAppPersonalInfoListResponse& operator=(const GetAppPersonalInfoListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAppPersonalInfoListResponse& default_instance();

  static inline const GetAppPersonalInfoListResponse* internal_default_instance() {
    return reinterpret_cast<const GetAppPersonalInfoListResponse*>(
               &_GetAppPersonalInfoListResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(GetAppPersonalInfoListResponse* other);

  // implements Message ----------------------------------------------

  inline GetAppPersonalInfoListResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetAppPersonalInfoListResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetAppPersonalInfoListResponse& from);
  void MergeFrom(const GetAppPersonalInfoListResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetAppPersonalInfoListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.AppPersonalInfo AppPersonalInfoList = 3;
  int apppersonalinfolist_size() const;
  void clear_apppersonalinfolist();
  static const int kAppPersonalInfoListFieldNumber = 3;
  const ::micromsg::AppPersonalInfo& apppersonalinfolist(int index) const;
  ::micromsg::AppPersonalInfo* mutable_apppersonalinfolist(int index);
  ::micromsg::AppPersonalInfo* add_apppersonalinfolist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::AppPersonalInfo >*
      mutable_apppersonalinfolist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::AppPersonalInfo >&
      apppersonalinfolist() const;

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 Count = 2;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetAppPersonalInfoListResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_count();
  void clear_has_count();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::AppPersonalInfo > apppersonalinfolist_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 count_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetSuggestionAppDetailRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetSuggestionAppDetailRequest) */ {
 public:
  GetSuggestionAppDetailRequest();
  virtual ~GetSuggestionAppDetailRequest();

  GetSuggestionAppDetailRequest(const GetSuggestionAppDetailRequest& from);

  inline GetSuggestionAppDetailRequest& operator=(const GetSuggestionAppDetailRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSuggestionAppDetailRequest& default_instance();

  static inline const GetSuggestionAppDetailRequest* internal_default_instance() {
    return reinterpret_cast<const GetSuggestionAppDetailRequest*>(
               &_GetSuggestionAppDetailRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(GetSuggestionAppDetailRequest* other);

  // implements Message ----------------------------------------------

  inline GetSuggestionAppDetailRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetSuggestionAppDetailRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetSuggestionAppDetailRequest& from);
  void MergeFrom(const GetSuggestionAppDetailRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetSuggestionAppDetailRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string AppID = 2;
  bool has_appid() const;
  void clear_appid();
  static const int kAppIDFieldNumber = 2;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // optional string Lang = 3;
  bool has_lang() const;
  void clear_lang();
  static const int kLangFieldNumber = 3;
  const ::std::string& lang() const;
  void set_lang(const ::std::string& value);
  #if LANG_CXX11
  void set_lang(::std::string&& value);
  #endif
  void set_lang(const char* value);
  void set_lang(const char* value, size_t size);
  ::std::string* mutable_lang();
  ::std::string* release_lang();
  void set_allocated_lang(::std::string* lang);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // @@protoc_insertion_point(class_scope:micromsg.GetSuggestionAppDetailRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_appid();
  void clear_has_appid();
  void set_has_lang();
  void clear_has_lang();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::google::protobuf::internal::ArenaStringPtr lang_;
  ::micromsg::BaseRequest* baserequest_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetSuggestionAppDetailResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetSuggestionAppDetailResponse) */ {
 public:
  GetSuggestionAppDetailResponse();
  virtual ~GetSuggestionAppDetailResponse();

  GetSuggestionAppDetailResponse(const GetSuggestionAppDetailResponse& from);

  inline GetSuggestionAppDetailResponse& operator=(const GetSuggestionAppDetailResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSuggestionAppDetailResponse& default_instance();

  static inline const GetSuggestionAppDetailResponse* internal_default_instance() {
    return reinterpret_cast<const GetSuggestionAppDetailResponse*>(
               &_GetSuggestionAppDetailResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(GetSuggestionAppDetailResponse* other);

  // implements Message ----------------------------------------------

  inline GetSuggestionAppDetailResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetSuggestionAppDetailResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetSuggestionAppDetailResponse& from);
  void MergeFrom(const GetSuggestionAppDetailResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetSuggestionAppDetailResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.RcAppList RcDetail = 2;
  bool has_rcdetail() const;
  void clear_rcdetail();
  static const int kRcDetailFieldNumber = 2;
  const ::micromsg::RcAppList& rcdetail() const;
  ::micromsg::RcAppList* mutable_rcdetail();
  ::micromsg::RcAppList* release_rcdetail();
  void set_allocated_rcdetail(::micromsg::RcAppList* rcdetail);

  // @@protoc_insertion_point(class_scope:micromsg.GetSuggestionAppDetailResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_rcdetail();
  void clear_has_rcdetail();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::RcAppList* rcdetail_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserGameRankInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.UserGameRankInfo) */ {
 public:
  UserGameRankInfo();
  virtual ~UserGameRankInfo();

  UserGameRankInfo(const UserGameRankInfo& from);

  inline UserGameRankInfo& operator=(const UserGameRankInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserGameRankInfo& default_instance();

  static inline const UserGameRankInfo* internal_default_instance() {
    return reinterpret_cast<const UserGameRankInfo*>(
               &_UserGameRankInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(UserGameRankInfo* other);

  // implements Message ----------------------------------------------

  inline UserGameRankInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  UserGameRankInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserGameRankInfo& from);
  void MergeFrom(const UserGameRankInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserGameRankInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string UserName = 1;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // required uint32 Score = 2;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 2;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // optional uint32 Rank = 3;
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 3;
  ::google::protobuf::uint32 rank() const;
  void set_rank(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.UserGameRankInfo)
 private:
  void set_has_username();
  void clear_has_username();
  void set_has_score();
  void clear_has_score();
  void set_has_rank();
  void clear_has_rank();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 rank_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetGameRankListRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetGameRankListRequest) */ {
 public:
  GetGameRankListRequest();
  virtual ~GetGameRankListRequest();

  GetGameRankListRequest(const GetGameRankListRequest& from);

  inline GetGameRankListRequest& operator=(const GetGameRankListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGameRankListRequest& default_instance();

  static inline const GetGameRankListRequest* internal_default_instance() {
    return reinterpret_cast<const GetGameRankListRequest*>(
               &_GetGameRankListRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(GetGameRankListRequest* other);

  // implements Message ----------------------------------------------

  inline GetGameRankListRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetGameRankListRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetGameRankListRequest& from);
  void MergeFrom(const GetGameRankListRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetGameRankListRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string AppID = 2;
  bool has_appid() const;
  void clear_appid();
  static const int kAppIDFieldNumber = 2;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // @@protoc_insertion_point(class_scope:micromsg.GetGameRankListRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_appid();
  void clear_has_appid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::micromsg::BaseRequest* baserequest_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetGameRankListResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetGameRankListResponse) */ {
 public:
  GetGameRankListResponse();
  virtual ~GetGameRankListResponse();

  GetGameRankListResponse(const GetGameRankListResponse& from);

  inline GetGameRankListResponse& operator=(const GetGameRankListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetGameRankListResponse& default_instance();

  static inline const GetGameRankListResponse* internal_default_instance() {
    return reinterpret_cast<const GetGameRankListResponse*>(
               &_GetGameRankListResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(GetGameRankListResponse* other);

  // implements Message ----------------------------------------------

  inline GetGameRankListResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetGameRankListResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetGameRankListResponse& from);
  void MergeFrom(const GetGameRankListResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetGameRankListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.UserGameRankInfo RankList = 3;
  int ranklist_size() const;
  void clear_ranklist();
  static const int kRankListFieldNumber = 3;
  const ::micromsg::UserGameRankInfo& ranklist(int index) const;
  ::micromsg::UserGameRankInfo* mutable_ranklist(int index);
  ::micromsg::UserGameRankInfo* add_ranklist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::UserGameRankInfo >*
      mutable_ranklist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::UserGameRankInfo >&
      ranklist() const;

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // optional .micromsg.YYBStruct SYYB = 6;
  bool has_syyb() const;
  void clear_syyb();
  static const int kSYYBFieldNumber = 6;
  const ::micromsg::YYBStruct& syyb() const;
  ::micromsg::YYBStruct* mutable_syyb();
  ::micromsg::YYBStruct* release_syyb();
  void set_allocated_syyb(::micromsg::YYBStruct* syyb);

  // required uint32 Count = 2;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // optional uint32 FriendsCount = 4;
  bool has_friendscount() const;
  void clear_friendscount();
  static const int kFriendsCountFieldNumber = 4;
  ::google::protobuf::uint32 friendscount() const;
  void set_friendscount(::google::protobuf::uint32 value);

  // optional uint32 HasReportScore = 5;
  bool has_hasreportscore() const;
  void clear_hasreportscore();
  static const int kHasReportScoreFieldNumber = 5;
  ::google::protobuf::uint32 hasreportscore() const;
  void set_hasreportscore(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetGameRankListResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_count();
  void clear_has_count();
  void set_has_friendscount();
  void clear_has_friendscount();
  void set_has_hasreportscore();
  void clear_has_hasreportscore();
  void set_has_syyb();
  void clear_has_syyb();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::UserGameRankInfo > ranklist_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::YYBStruct* syyb_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 friendscount_;
  ::google::protobuf::uint32 hasreportscore_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetAppInfoListRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetAppInfoListRequest) */ {
 public:
  GetAppInfoListRequest();
  virtual ~GetAppInfoListRequest();

  GetAppInfoListRequest(const GetAppInfoListRequest& from);

  inline GetAppInfoListRequest& operator=(const GetAppInfoListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAppInfoListRequest& default_instance();

  static inline const GetAppInfoListRequest* internal_default_instance() {
    return reinterpret_cast<const GetAppInfoListRequest*>(
               &_GetAppInfoListRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(GetAppInfoListRequest* other);

  // implements Message ----------------------------------------------

  inline GetAppInfoListRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetAppInfoListRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetAppInfoListRequest& from);
  void MergeFrom(const GetAppInfoListRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetAppInfoListRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.SKBuiltinString_t AppIdList = 3;
  int appidlist_size() const;
  void clear_appidlist();
  static const int kAppIdListFieldNumber = 3;
  const ::micromsg::SKBuiltinString_t& appidlist(int index) const;
  ::micromsg::SKBuiltinString_t* mutable_appidlist(int index);
  ::micromsg::SKBuiltinString_t* add_appidlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
      mutable_appidlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
      appidlist() const;

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required int32 Count = 2;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetAppInfoListRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_count();
  void clear_has_count();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t > appidlist_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::int32 count_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BizAppInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.BizAppInfo) */ {
 public:
  BizAppInfo();
  virtual ~BizAppInfo();

  BizAppInfo(const BizAppInfo& from);

  inline BizAppInfo& operator=(const BizAppInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BizAppInfo& default_instance();

  static inline const BizAppInfo* internal_default_instance() {
    return reinterpret_cast<const BizAppInfo*>(
               &_BizAppInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(BizAppInfo* other);

  // implements Message ----------------------------------------------

  inline BizAppInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  BizAppInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BizAppInfo& from);
  void MergeFrom(const BizAppInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BizAppInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string AppId = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppIdFieldNumber = 1;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // optional string Name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string Description = 3;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 3;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // optional string Name4EnUS = 4;
  bool has_name4enus() const;
  void clear_name4enus();
  static const int kName4EnUSFieldNumber = 4;
  const ::std::string& name4enus() const;
  void set_name4enus(const ::std::string& value);
  #if LANG_CXX11
  void set_name4enus(::std::string&& value);
  #endif
  void set_name4enus(const char* value);
  void set_name4enus(const char* value, size_t size);
  ::std::string* mutable_name4enus();
  ::std::string* release_name4enus();
  void set_allocated_name4enus(::std::string* name4enus);

  // optional string Description4EnUS = 5;
  bool has_description4enus() const;
  void clear_description4enus();
  static const int kDescription4EnUSFieldNumber = 5;
  const ::std::string& description4enus() const;
  void set_description4enus(const ::std::string& value);
  #if LANG_CXX11
  void set_description4enus(::std::string&& value);
  #endif
  void set_description4enus(const char* value);
  void set_description4enus(const char* value, size_t size);
  ::std::string* mutable_description4enus();
  ::std::string* release_description4enus();
  void set_allocated_description4enus(::std::string* description4enus);

  // optional string Name4ZhTW = 6;
  bool has_name4zhtw() const;
  void clear_name4zhtw();
  static const int kName4ZhTWFieldNumber = 6;
  const ::std::string& name4zhtw() const;
  void set_name4zhtw(const ::std::string& value);
  #if LANG_CXX11
  void set_name4zhtw(::std::string&& value);
  #endif
  void set_name4zhtw(const char* value);
  void set_name4zhtw(const char* value, size_t size);
  ::std::string* mutable_name4zhtw();
  ::std::string* release_name4zhtw();
  void set_allocated_name4zhtw(::std::string* name4zhtw);

  // optional string Description4ZhTW = 7;
  bool has_description4zhtw() const;
  void clear_description4zhtw();
  static const int kDescription4ZhTWFieldNumber = 7;
  const ::std::string& description4zhtw() const;
  void set_description4zhtw(const ::std::string& value);
  #if LANG_CXX11
  void set_description4zhtw(::std::string&& value);
  #endif
  void set_description4zhtw(const char* value);
  void set_description4zhtw(const char* value, size_t size);
  ::std::string* mutable_description4zhtw();
  ::std::string* release_description4zhtw();
  void set_allocated_description4zhtw(::std::string* description4zhtw);

  // optional string IconUrlSD = 8;
  bool has_iconurlsd() const;
  void clear_iconurlsd();
  static const int kIconUrlSDFieldNumber = 8;
  const ::std::string& iconurlsd() const;
  void set_iconurlsd(const ::std::string& value);
  #if LANG_CXX11
  void set_iconurlsd(::std::string&& value);
  #endif
  void set_iconurlsd(const char* value);
  void set_iconurlsd(const char* value, size_t size);
  ::std::string* mutable_iconurlsd();
  ::std::string* release_iconurlsd();
  void set_allocated_iconurlsd(::std::string* iconurlsd);

  // optional string IconUrlHD = 9;
  bool has_iconurlhd() const;
  void clear_iconurlhd();
  static const int kIconUrlHDFieldNumber = 9;
  const ::std::string& iconurlhd() const;
  void set_iconurlhd(const ::std::string& value);
  #if LANG_CXX11
  void set_iconurlhd(::std::string&& value);
  #endif
  void set_iconurlhd(const char* value);
  void set_iconurlhd(const char* value, size_t size);
  ::std::string* mutable_iconurlhd();
  ::std::string* release_iconurlhd();
  void set_allocated_iconurlhd(::std::string* iconurlhd);

  // optional string StoreUrl = 10;
  bool has_storeurl() const;
  void clear_storeurl();
  static const int kStoreUrlFieldNumber = 10;
  const ::std::string& storeurl() const;
  void set_storeurl(const ::std::string& value);
  #if LANG_CXX11
  void set_storeurl(::std::string&& value);
  #endif
  void set_storeurl(const char* value);
  void set_storeurl(const char* value, size_t size);
  ::std::string* mutable_storeurl();
  ::std::string* release_storeurl();
  void set_allocated_storeurl(::std::string* storeurl);

  // optional string WatermarkUrl = 11;
  bool has_watermarkurl() const;
  void clear_watermarkurl();
  static const int kWatermarkUrlFieldNumber = 11;
  const ::std::string& watermarkurl() const;
  void set_watermarkurl(const ::std::string& value);
  #if LANG_CXX11
  void set_watermarkurl(::std::string&& value);
  #endif
  void set_watermarkurl(const char* value);
  void set_watermarkurl(const char* value, size_t size);
  ::std::string* mutable_watermarkurl();
  ::std::string* release_watermarkurl();
  void set_allocated_watermarkurl(::std::string* watermarkurl);

  // optional string AndroidPackageName = 12;
  bool has_androidpackagename() const;
  void clear_androidpackagename();
  static const int kAndroidPackageNameFieldNumber = 12;
  const ::std::string& androidpackagename() const;
  void set_androidpackagename(const ::std::string& value);
  #if LANG_CXX11
  void set_androidpackagename(::std::string&& value);
  #endif
  void set_androidpackagename(const char* value);
  void set_androidpackagename(const char* value, size_t size);
  ::std::string* mutable_androidpackagename();
  ::std::string* release_androidpackagename();
  void set_allocated_androidpackagename(::std::string* androidpackagename);

  // optional string AndroidSignature = 13;
  bool has_androidsignature() const;
  void clear_androidsignature();
  static const int kAndroidSignatureFieldNumber = 13;
  const ::std::string& androidsignature() const;
  void set_androidsignature(const ::std::string& value);
  #if LANG_CXX11
  void set_androidsignature(::std::string&& value);
  #endif
  void set_androidsignature(const char* value);
  void set_androidsignature(const char* value, size_t size);
  ::std::string* mutable_androidsignature();
  ::std::string* release_androidsignature();
  void set_allocated_androidsignature(::std::string* androidsignature);

  // optional string AppType = 14;
  bool has_apptype() const;
  void clear_apptype();
  static const int kAppTypeFieldNumber = 14;
  const ::std::string& apptype() const;
  void set_apptype(const ::std::string& value);
  #if LANG_CXX11
  void set_apptype(::std::string&& value);
  #endif
  void set_apptype(const char* value);
  void set_apptype(const char* value, size_t size);
  ::std::string* mutable_apptype();
  ::std::string* release_apptype();
  void set_allocated_apptype(::std::string* apptype);

  // optional string DevInfo = 15;
  bool has_devinfo() const;
  void clear_devinfo();
  static const int kDevInfoFieldNumber = 15;
  const ::std::string& devinfo() const;
  void set_devinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_devinfo(::std::string&& value);
  #endif
  void set_devinfo(const char* value);
  void set_devinfo(const char* value, size_t size);
  ::std::string* mutable_devinfo();
  ::std::string* release_devinfo();
  void set_allocated_devinfo(::std::string* devinfo);

  // optional string IconUrlMDPI = 19;
  bool has_iconurlmdpi() const;
  void clear_iconurlmdpi();
  static const int kIconUrlMDPIFieldNumber = 19;
  const ::std::string& iconurlmdpi() const;
  void set_iconurlmdpi(const ::std::string& value);
  #if LANG_CXX11
  void set_iconurlmdpi(::std::string&& value);
  #endif
  void set_iconurlmdpi(const char* value);
  void set_iconurlmdpi(const char* value, size_t size);
  ::std::string* mutable_iconurlmdpi();
  ::std::string* release_iconurlmdpi();
  void set_allocated_iconurlmdpi(::std::string* iconurlmdpi);

  // optional string DownloadUrl = 20;
  bool has_downloadurl() const;
  void clear_downloadurl();
  static const int kDownloadUrlFieldNumber = 20;
  const ::std::string& downloadurl() const;
  void set_downloadurl(const ::std::string& value);
  #if LANG_CXX11
  void set_downloadurl(::std::string&& value);
  #endif
  void set_downloadurl(const char* value);
  void set_downloadurl(const char* value, size_t size);
  ::std::string* mutable_downloadurl();
  ::std::string* release_downloadurl();
  void set_allocated_downloadurl(::std::string* downloadurl);

  // optional string DownloadUrlMd5 = 21;
  bool has_downloadurlmd5() const;
  void clear_downloadurlmd5();
  static const int kDownloadUrlMd5FieldNumber = 21;
  const ::std::string& downloadurlmd5() const;
  void set_downloadurlmd5(const ::std::string& value);
  #if LANG_CXX11
  void set_downloadurlmd5(::std::string&& value);
  #endif
  void set_downloadurlmd5(const char* value);
  void set_downloadurlmd5(const char* value, size_t size);
  ::std::string* mutable_downloadurlmd5();
  ::std::string* release_downloadurlmd5();
  void set_allocated_downloadurlmd5(::std::string* downloadurlmd5);

  // optional string GooglePlayDownloadUrl = 22;
  bool has_googleplaydownloadurl() const;
  void clear_googleplaydownloadurl();
  static const int kGooglePlayDownloadUrlFieldNumber = 22;
  const ::std::string& googleplaydownloadurl() const;
  void set_googleplaydownloadurl(const ::std::string& value);
  #if LANG_CXX11
  void set_googleplaydownloadurl(::std::string&& value);
  #endif
  void set_googleplaydownloadurl(const char* value);
  void set_googleplaydownloadurl(const char* value, size_t size);
  ::std::string* mutable_googleplaydownloadurl();
  ::std::string* release_googleplaydownloadurl();
  void set_allocated_googleplaydownloadurl(::std::string* googleplaydownloadurl);

  // required uint32 AppInfoFlag = 16;
  bool has_appinfoflag() const;
  void clear_appinfoflag();
  static const int kAppInfoFlagFieldNumber = 16;
  ::google::protobuf::uint32 appinfoflag() const;
  void set_appinfoflag(::google::protobuf::uint32 value);

  // required uint32 AppVersion = 17;
  bool has_appversion() const;
  void clear_appversion();
  static const int kAppVersionFieldNumber = 17;
  ::google::protobuf::uint32 appversion() const;
  void set_appversion(::google::protobuf::uint32 value);

  // optional uint32 AppUpdateVersion = 18;
  bool has_appupdateversion() const;
  void clear_appupdateversion();
  static const int kAppUpdateVersionFieldNumber = 18;
  ::google::protobuf::uint32 appupdateversion() const;
  void set_appupdateversion(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.BizAppInfo)
 private:
  void set_has_appid();
  void clear_has_appid();
  void set_has_name();
  void clear_has_name();
  void set_has_description();
  void clear_has_description();
  void set_has_name4enus();
  void clear_has_name4enus();
  void set_has_description4enus();
  void clear_has_description4enus();
  void set_has_name4zhtw();
  void clear_has_name4zhtw();
  void set_has_description4zhtw();
  void clear_has_description4zhtw();
  void set_has_iconurlsd();
  void clear_has_iconurlsd();
  void set_has_iconurlhd();
  void clear_has_iconurlhd();
  void set_has_storeurl();
  void clear_has_storeurl();
  void set_has_watermarkurl();
  void clear_has_watermarkurl();
  void set_has_androidpackagename();
  void clear_has_androidpackagename();
  void set_has_androidsignature();
  void clear_has_androidsignature();
  void set_has_apptype();
  void clear_has_apptype();
  void set_has_devinfo();
  void clear_has_devinfo();
  void set_has_appinfoflag();
  void clear_has_appinfoflag();
  void set_has_appversion();
  void clear_has_appversion();
  void set_has_appupdateversion();
  void clear_has_appupdateversion();
  void set_has_iconurlmdpi();
  void clear_has_iconurlmdpi();
  void set_has_downloadurl();
  void clear_has_downloadurl();
  void set_has_downloadurlmd5();
  void clear_has_downloadurlmd5();
  void set_has_googleplaydownloadurl();
  void clear_has_googleplaydownloadurl();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr name4enus_;
  ::google::protobuf::internal::ArenaStringPtr description4enus_;
  ::google::protobuf::internal::ArenaStringPtr name4zhtw_;
  ::google::protobuf::internal::ArenaStringPtr description4zhtw_;
  ::google::protobuf::internal::ArenaStringPtr iconurlsd_;
  ::google::protobuf::internal::ArenaStringPtr iconurlhd_;
  ::google::protobuf::internal::ArenaStringPtr storeurl_;
  ::google::protobuf::internal::ArenaStringPtr watermarkurl_;
  ::google::protobuf::internal::ArenaStringPtr androidpackagename_;
  ::google::protobuf::internal::ArenaStringPtr androidsignature_;
  ::google::protobuf::internal::ArenaStringPtr apptype_;
  ::google::protobuf::internal::ArenaStringPtr devinfo_;
  ::google::protobuf::internal::ArenaStringPtr iconurlmdpi_;
  ::google::protobuf::internal::ArenaStringPtr downloadurl_;
  ::google::protobuf::internal::ArenaStringPtr downloadurlmd5_;
  ::google::protobuf::internal::ArenaStringPtr googleplaydownloadurl_;
  ::google::protobuf::uint32 appinfoflag_;
  ::google::protobuf::uint32 appversion_;
  ::google::protobuf::uint32 appupdateversion_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetAppInfoListResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetAppInfoListResponse) */ {
 public:
  GetAppInfoListResponse();
  virtual ~GetAppInfoListResponse();

  GetAppInfoListResponse(const GetAppInfoListResponse& from);

  inline GetAppInfoListResponse& operator=(const GetAppInfoListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAppInfoListResponse& default_instance();

  static inline const GetAppInfoListResponse* internal_default_instance() {
    return reinterpret_cast<const GetAppInfoListResponse*>(
               &_GetAppInfoListResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(GetAppInfoListResponse* other);

  // implements Message ----------------------------------------------

  inline GetAppInfoListResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetAppInfoListResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetAppInfoListResponse& from);
  void MergeFrom(const GetAppInfoListResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetAppInfoListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.BizAppInfo AppInfoList = 3;
  int appinfolist_size() const;
  void clear_appinfolist();
  static const int kAppInfoListFieldNumber = 3;
  const ::micromsg::BizAppInfo& appinfolist(int index) const;
  ::micromsg::BizAppInfo* mutable_appinfolist(int index);
  ::micromsg::BizAppInfo* add_appinfolist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::BizAppInfo >*
      mutable_appinfolist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::BizAppInfo >&
      appinfolist() const;

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required int32 Count = 2;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetAppInfoListResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_count();
  void clear_has_count();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::BizAppInfo > appinfolist_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::int32 count_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AppCenterRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.AppCenterRequest) */ {
 public:
  AppCenterRequest();
  virtual ~AppCenterRequest();

  AppCenterRequest(const AppCenterRequest& from);

  inline AppCenterRequest& operator=(const AppCenterRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppCenterRequest& default_instance();

  static inline const AppCenterRequest* internal_default_instance() {
    return reinterpret_cast<const AppCenterRequest*>(
               &_AppCenterRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(AppCenterRequest* other);

  // implements Message ----------------------------------------------

  inline AppCenterRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  AppCenterRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AppCenterRequest& from);
  void MergeFrom(const AppCenterRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AppCenterRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.SKBuiltinBuffer_t ReqBuf = 3;
  bool has_reqbuf() const;
  void clear_reqbuf();
  static const int kReqBufFieldNumber = 3;
  const ::micromsg::SKBuiltinBuffer_t& reqbuf() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_reqbuf();
  ::micromsg::SKBuiltinBuffer_t* release_reqbuf();
  void set_allocated_reqbuf(::micromsg::SKBuiltinBuffer_t* reqbuf);

  // required uint32 Type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.AppCenterRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_type();
  void clear_has_type();
  void set_has_reqbuf();
  void clear_has_reqbuf();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::SKBuiltinBuffer_t* reqbuf_;
  ::google::protobuf::uint32 type_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AppCenterResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.AppCenterResponse) */ {
 public:
  AppCenterResponse();
  virtual ~AppCenterResponse();

  AppCenterResponse(const AppCenterResponse& from);

  inline AppCenterResponse& operator=(const AppCenterResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppCenterResponse& default_instance();

  static inline const AppCenterResponse* internal_default_instance() {
    return reinterpret_cast<const AppCenterResponse*>(
               &_AppCenterResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(AppCenterResponse* other);

  // implements Message ----------------------------------------------

  inline AppCenterResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  AppCenterResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AppCenterResponse& from);
  void MergeFrom(const AppCenterResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AppCenterResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.SKBuiltinBuffer_t RespBuf = 2;
  bool has_respbuf() const;
  void clear_respbuf();
  static const int kRespBufFieldNumber = 2;
  const ::micromsg::SKBuiltinBuffer_t& respbuf() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_respbuf();
  ::micromsg::SKBuiltinBuffer_t* release_respbuf();
  void set_allocated_respbuf(::micromsg::SKBuiltinBuffer_t* respbuf);

  // @@protoc_insertion_point(class_scope:micromsg.AppCenterResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_respbuf();
  void clear_has_respbuf();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::SKBuiltinBuffer_t* respbuf_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetAuthAppListRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetAuthAppListRequest) */ {
 public:
  GetAuthAppListRequest();
  virtual ~GetAuthAppListRequest();

  GetAuthAppListRequest(const GetAuthAppListRequest& from);

  inline GetAuthAppListRequest& operator=(const GetAuthAppListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAuthAppListRequest& default_instance();

  static inline const GetAuthAppListRequest* internal_default_instance() {
    return reinterpret_cast<const GetAuthAppListRequest*>(
               &_GetAuthAppListRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(GetAuthAppListRequest* other);

  // implements Message ----------------------------------------------

  inline GetAuthAppListRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetAuthAppListRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetAuthAppListRequest& from);
  void MergeFrom(const GetAuthAppListRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetAuthAppListRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Lang = 3;
  bool has_lang() const;
  void clear_lang();
  static const int kLangFieldNumber = 3;
  const ::std::string& lang() const;
  void set_lang(const ::std::string& value);
  #if LANG_CXX11
  void set_lang(::std::string&& value);
  #endif
  void set_lang(const char* value);
  void set_lang(const char* value, size_t size);
  ::std::string* mutable_lang();
  ::std::string* release_lang();
  void set_allocated_lang(::std::string* lang);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 Type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetAuthAppListRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_type();
  void clear_has_type();
  void set_has_lang();
  void clear_has_lang();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr lang_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 type_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AuthAppBaseInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.AuthAppBaseInfo) */ {
 public:
  AuthAppBaseInfo();
  virtual ~AuthAppBaseInfo();

  AuthAppBaseInfo(const AuthAppBaseInfo& from);

  inline AuthAppBaseInfo& operator=(const AuthAppBaseInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthAppBaseInfo& default_instance();

  static inline const AuthAppBaseInfo* internal_default_instance() {
    return reinterpret_cast<const AuthAppBaseInfo*>(
               &_AuthAppBaseInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(AuthAppBaseInfo* other);

  // implements Message ----------------------------------------------

  inline AuthAppBaseInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AuthAppBaseInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AuthAppBaseInfo& from);
  void MergeFrom(const AuthAppBaseInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AuthAppBaseInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string AppID = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppIDFieldNumber = 1;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // optional string AppType = 2;
  bool has_apptype() const;
  void clear_apptype();
  static const int kAppTypeFieldNumber = 2;
  const ::std::string& apptype() const;
  void set_apptype(const ::std::string& value);
  #if LANG_CXX11
  void set_apptype(::std::string&& value);
  #endif
  void set_apptype(const char* value);
  void set_apptype(const char* value, size_t size);
  ::std::string* mutable_apptype();
  ::std::string* release_apptype();
  void set_allocated_apptype(::std::string* apptype);

  // optional string IconUrl = 3;
  bool has_iconurl() const;
  void clear_iconurl();
  static const int kIconUrlFieldNumber = 3;
  const ::std::string& iconurl() const;
  void set_iconurl(const ::std::string& value);
  #if LANG_CXX11
  void set_iconurl(::std::string&& value);
  #endif
  void set_iconurl(const char* value);
  void set_iconurl(const char* value, size_t size);
  ::std::string* mutable_iconurl();
  ::std::string* release_iconurl();
  void set_allocated_iconurl(::std::string* iconurl);

  // optional string AppName = 4;
  bool has_appname() const;
  void clear_appname();
  static const int kAppNameFieldNumber = 4;
  const ::std::string& appname() const;
  void set_appname(const ::std::string& value);
  #if LANG_CXX11
  void set_appname(::std::string&& value);
  #endif
  void set_appname(const char* value);
  void set_appname(const char* value, size_t size);
  ::std::string* mutable_appname();
  ::std::string* release_appname();
  void set_allocated_appname(::std::string* appname);

  // optional string ExternInfo = 6;
  bool has_externinfo() const;
  void clear_externinfo();
  static const int kExternInfoFieldNumber = 6;
  const ::std::string& externinfo() const;
  void set_externinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_externinfo(::std::string&& value);
  #endif
  void set_externinfo(const char* value);
  void set_externinfo(const char* value, size_t size);
  ::std::string* mutable_externinfo();
  ::std::string* release_externinfo();
  void set_allocated_externinfo(::std::string* externinfo);

  // optional string AuthInfo = 7;
  bool has_authinfo() const;
  void clear_authinfo();
  static const int kAuthInfoFieldNumber = 7;
  const ::std::string& authinfo() const;
  void set_authinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_authinfo(::std::string&& value);
  #endif
  void set_authinfo(const char* value);
  void set_authinfo(const char* value, size_t size);
  ::std::string* mutable_authinfo();
  ::std::string* release_authinfo();
  void set_allocated_authinfo(::std::string* authinfo);

  // optional string DevInfo = 8;
  bool has_devinfo() const;
  void clear_devinfo();
  static const int kDevInfoFieldNumber = 8;
  const ::std::string& devinfo() const;
  void set_devinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_devinfo(::std::string&& value);
  #endif
  void set_devinfo(const char* value);
  void set_devinfo(const char* value, size_t size);
  ::std::string* mutable_devinfo();
  ::std::string* release_devinfo();
  void set_allocated_devinfo(::std::string* devinfo);

  // required uint32 AppFlag = 5;
  bool has_appflag() const;
  void clear_appflag();
  static const int kAppFlagFieldNumber = 5;
  ::google::protobuf::uint32 appflag() const;
  void set_appflag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.AuthAppBaseInfo)
 private:
  void set_has_appid();
  void clear_has_appid();
  void set_has_apptype();
  void clear_has_apptype();
  void set_has_iconurl();
  void clear_has_iconurl();
  void set_has_appname();
  void clear_has_appname();
  void set_has_appflag();
  void clear_has_appflag();
  void set_has_externinfo();
  void clear_has_externinfo();
  void set_has_authinfo();
  void clear_has_authinfo();
  void set_has_devinfo();
  void clear_has_devinfo();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::google::protobuf::internal::ArenaStringPtr apptype_;
  ::google::protobuf::internal::ArenaStringPtr iconurl_;
  ::google::protobuf::internal::ArenaStringPtr appname_;
  ::google::protobuf::internal::ArenaStringPtr externinfo_;
  ::google::protobuf::internal::ArenaStringPtr authinfo_;
  ::google::protobuf::internal::ArenaStringPtr devinfo_;
  ::google::protobuf::uint32 appflag_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetAuthAppListResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetAuthAppListResponse) */ {
 public:
  GetAuthAppListResponse();
  virtual ~GetAuthAppListResponse();

  GetAuthAppListResponse(const GetAuthAppListResponse& from);

  inline GetAuthAppListResponse& operator=(const GetAuthAppListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAuthAppListResponse& default_instance();

  static inline const GetAuthAppListResponse* internal_default_instance() {
    return reinterpret_cast<const GetAuthAppListResponse*>(
               &_GetAuthAppListResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(GetAuthAppListResponse* other);

  // implements Message ----------------------------------------------

  inline GetAuthAppListResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetAuthAppListResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetAuthAppListResponse& from);
  void MergeFrom(const GetAuthAppListResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetAuthAppListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.AuthAppBaseInfo AuthAppList = 3;
  int authapplist_size() const;
  void clear_authapplist();
  static const int kAuthAppListFieldNumber = 3;
  const ::micromsg::AuthAppBaseInfo& authapplist(int index) const;
  ::micromsg::AuthAppBaseInfo* mutable_authapplist(int index);
  ::micromsg::AuthAppBaseInfo* add_authapplist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::AuthAppBaseInfo >*
      mutable_authapplist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::AuthAppBaseInfo >&
      authapplist() const;

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 AppCount = 2;
  bool has_appcount() const;
  void clear_appcount();
  static const int kAppCountFieldNumber = 2;
  ::google::protobuf::uint32 appcount() const;
  void set_appcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetAuthAppListResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_appcount();
  void clear_has_appcount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::AuthAppBaseInfo > authapplist_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 appcount_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetAuthAppInfoRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetAuthAppInfoRequest) */ {
 public:
  GetAuthAppInfoRequest();
  virtual ~GetAuthAppInfoRequest();

  GetAuthAppInfoRequest(const GetAuthAppInfoRequest& from);

  inline GetAuthAppInfoRequest& operator=(const GetAuthAppInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAuthAppInfoRequest& default_instance();

  static inline const GetAuthAppInfoRequest* internal_default_instance() {
    return reinterpret_cast<const GetAuthAppInfoRequest*>(
               &_GetAuthAppInfoRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(GetAuthAppInfoRequest* other);

  // implements Message ----------------------------------------------

  inline GetAuthAppInfoRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetAuthAppInfoRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetAuthAppInfoRequest& from);
  void MergeFrom(const GetAuthAppInfoRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetAuthAppInfoRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string AppID = 2;
  bool has_appid() const;
  void clear_appid();
  static const int kAppIDFieldNumber = 2;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // @@protoc_insertion_point(class_scope:micromsg.GetAuthAppInfoRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_appid();
  void clear_has_appid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::micromsg::BaseRequest* baserequest_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetAuthAppInfoResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetAuthAppInfoResponse) */ {
 public:
  GetAuthAppInfoResponse();
  virtual ~GetAuthAppInfoResponse();

  GetAuthAppInfoResponse(const GetAuthAppInfoResponse& from);

  inline GetAuthAppInfoResponse& operator=(const GetAuthAppInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAuthAppInfoResponse& default_instance();

  static inline const GetAuthAppInfoResponse* internal_default_instance() {
    return reinterpret_cast<const GetAuthAppInfoResponse*>(
               &_GetAuthAppInfoResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(GetAuthAppInfoResponse* other);

  // implements Message ----------------------------------------------

  inline GetAuthAppInfoResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetAuthAppInfoResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetAuthAppInfoResponse& from);
  void MergeFrom(const GetAuthAppInfoResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetAuthAppInfoResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string AuthInfo = 3;
  bool has_authinfo() const;
  void clear_authinfo();
  static const int kAuthInfoFieldNumber = 3;
  const ::std::string& authinfo() const;
  void set_authinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_authinfo(::std::string&& value);
  #endif
  void set_authinfo(const char* value);
  void set_authinfo(const char* value, size_t size);
  ::std::string* mutable_authinfo();
  ::std::string* release_authinfo();
  void set_allocated_authinfo(::std::string* authinfo);

  // optional string DevInfo = 4;
  bool has_devinfo() const;
  void clear_devinfo();
  static const int kDevInfoFieldNumber = 4;
  const ::std::string& devinfo() const;
  void set_devinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_devinfo(::std::string&& value);
  #endif
  void set_devinfo(const char* value);
  void set_devinfo(const char* value, size_t size);
  ::std::string* mutable_devinfo();
  ::std::string* release_devinfo();
  void set_allocated_devinfo(::std::string* devinfo);

  // optional string ExternInfo = 5;
  bool has_externinfo() const;
  void clear_externinfo();
  static const int kExternInfoFieldNumber = 5;
  const ::std::string& externinfo() const;
  void set_externinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_externinfo(::std::string&& value);
  #endif
  void set_externinfo(const char* value);
  void set_externinfo(const char* value, size_t size);
  ::std::string* mutable_externinfo();
  ::std::string* release_externinfo();
  void set_allocated_externinfo(::std::string* externinfo);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.AuthAppBaseInfo BaseInfo = 2;
  bool has_baseinfo() const;
  void clear_baseinfo();
  static const int kBaseInfoFieldNumber = 2;
  const ::micromsg::AuthAppBaseInfo& baseinfo() const;
  ::micromsg::AuthAppBaseInfo* mutable_baseinfo();
  ::micromsg::AuthAppBaseInfo* release_baseinfo();
  void set_allocated_baseinfo(::micromsg::AuthAppBaseInfo* baseinfo);

  // @@protoc_insertion_point(class_scope:micromsg.GetAuthAppInfoResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_baseinfo();
  void clear_has_baseinfo();
  void set_has_authinfo();
  void clear_has_authinfo();
  void set_has_devinfo();
  void clear_has_devinfo();
  void set_has_externinfo();
  void clear_has_externinfo();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr authinfo_;
  ::google::protobuf::internal::ArenaStringPtr devinfo_;
  ::google::protobuf::internal::ArenaStringPtr externinfo_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::AuthAppBaseInfo* baseinfo_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetAppSettingRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SetAppSettingRequest) */ {
 public:
  SetAppSettingRequest();
  virtual ~SetAppSettingRequest();

  SetAppSettingRequest(const SetAppSettingRequest& from);

  inline SetAppSettingRequest& operator=(const SetAppSettingRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetAppSettingRequest& default_instance();

  static inline const SetAppSettingRequest* internal_default_instance() {
    return reinterpret_cast<const SetAppSettingRequest*>(
               &_SetAppSettingRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(SetAppSettingRequest* other);

  // implements Message ----------------------------------------------

  inline SetAppSettingRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SetAppSettingRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetAppSettingRequest& from);
  void MergeFrom(const SetAppSettingRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetAppSettingRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string AppID = 2;
  bool has_appid() const;
  void clear_appid();
  static const int kAppIDFieldNumber = 2;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // optional string CmdValue = 4;
  bool has_cmdvalue() const;
  void clear_cmdvalue();
  static const int kCmdValueFieldNumber = 4;
  const ::std::string& cmdvalue() const;
  void set_cmdvalue(const ::std::string& value);
  #if LANG_CXX11
  void set_cmdvalue(::std::string&& value);
  #endif
  void set_cmdvalue(const char* value);
  void set_cmdvalue(const char* value, size_t size);
  ::std::string* mutable_cmdvalue();
  ::std::string* release_cmdvalue();
  void set_allocated_cmdvalue(::std::string* cmdvalue);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 CmdID = 3;
  bool has_cmdid() const;
  void clear_cmdid();
  static const int kCmdIDFieldNumber = 3;
  ::google::protobuf::uint32 cmdid() const;
  void set_cmdid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SetAppSettingRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_appid();
  void clear_has_appid();
  void set_has_cmdid();
  void clear_has_cmdid();
  void set_has_cmdvalue();
  void clear_has_cmdvalue();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::google::protobuf::internal::ArenaStringPtr cmdvalue_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 cmdid_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetAppSettingResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SetAppSettingResponse) */ {
 public:
  SetAppSettingResponse();
  virtual ~SetAppSettingResponse();

  SetAppSettingResponse(const SetAppSettingResponse& from);

  inline SetAppSettingResponse& operator=(const SetAppSettingResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetAppSettingResponse& default_instance();

  static inline const SetAppSettingResponse* internal_default_instance() {
    return reinterpret_cast<const SetAppSettingResponse*>(
               &_SetAppSettingResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(SetAppSettingResponse* other);

  // implements Message ----------------------------------------------

  inline SetAppSettingResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SetAppSettingResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetAppSettingResponse& from);
  void MergeFrom(const SetAppSettingResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetAppSettingResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string AppID = 2;
  bool has_appid() const;
  void clear_appid();
  static const int kAppIDFieldNumber = 2;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 AppFlag = 3;
  bool has_appflag() const;
  void clear_appflag();
  static const int kAppFlagFieldNumber = 3;
  ::google::protobuf::uint32 appflag() const;
  void set_appflag(::google::protobuf::uint32 value);

  // required uint32 CmdID = 4;
  bool has_cmdid() const;
  void clear_cmdid();
  static const int kCmdIDFieldNumber = 4;
  ::google::protobuf::uint32 cmdid() const;
  void set_cmdid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SetAppSettingResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_appid();
  void clear_has_appid();
  void set_has_appflag();
  void clear_has_appflag();
  void set_has_cmdid();
  void clear_has_cmdid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 appflag_;
  ::google::protobuf::uint32 cmdid_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AppSettingReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.AppSettingReq) */ {
 public:
  AppSettingReq();
  virtual ~AppSettingReq();

  AppSettingReq(const AppSettingReq& from);

  inline AppSettingReq& operator=(const AppSettingReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppSettingReq& default_instance();

  static inline const AppSettingReq* internal_default_instance() {
    return reinterpret_cast<const AppSettingReq*>(
               &_AppSettingReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(AppSettingReq* other);

  // implements Message ----------------------------------------------

  inline AppSettingReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AppSettingReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AppSettingReq& from);
  void MergeFrom(const AppSettingReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AppSettingReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string AppID = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppIDFieldNumber = 1;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // @@protoc_insertion_point(class_scope:micromsg.AppSettingReq)
 private:
  void set_has_appid();
  void clear_has_appid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AppSetting : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.AppSetting) */ {
 public:
  AppSetting();
  virtual ~AppSetting();

  AppSetting(const AppSetting& from);

  inline AppSetting& operator=(const AppSetting& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppSetting& default_instance();

  static inline const AppSetting* internal_default_instance() {
    return reinterpret_cast<const AppSetting*>(
               &_AppSetting_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(AppSetting* other);

  // implements Message ----------------------------------------------

  inline AppSetting* New() const PROTOBUF_FINAL { return New(NULL); }

  AppSetting* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AppSetting& from);
  void MergeFrom(const AppSetting& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AppSetting* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string AppID = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppIDFieldNumber = 1;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // optional string OpenID = 3;
  bool has_openid() const;
  void clear_openid();
  static const int kOpenIDFieldNumber = 3;
  const ::std::string& openid() const;
  void set_openid(const ::std::string& value);
  #if LANG_CXX11
  void set_openid(::std::string&& value);
  #endif
  void set_openid(const char* value);
  void set_openid(const char* value, size_t size);
  ::std::string* mutable_openid();
  ::std::string* release_openid();
  void set_allocated_openid(::std::string* openid);

  // required uint32 AppFlag = 2;
  bool has_appflag() const;
  void clear_appflag();
  static const int kAppFlagFieldNumber = 2;
  ::google::protobuf::uint32 appflag() const;
  void set_appflag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.AppSetting)
 private:
  void set_has_appid();
  void clear_has_appid();
  void set_has_appflag();
  void clear_has_appflag();
  void set_has_openid();
  void clear_has_openid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::google::protobuf::internal::ArenaStringPtr openid_;
  ::google::protobuf::uint32 appflag_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetAppSettingRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetAppSettingRequest) */ {
 public:
  GetAppSettingRequest();
  virtual ~GetAppSettingRequest();

  GetAppSettingRequest(const GetAppSettingRequest& from);

  inline GetAppSettingRequest& operator=(const GetAppSettingRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAppSettingRequest& default_instance();

  static inline const GetAppSettingRequest* internal_default_instance() {
    return reinterpret_cast<const GetAppSettingRequest*>(
               &_GetAppSettingRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(GetAppSettingRequest* other);

  // implements Message ----------------------------------------------

  inline GetAppSettingRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetAppSettingRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetAppSettingRequest& from);
  void MergeFrom(const GetAppSettingRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetAppSettingRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.AppSettingReq AppSettingReqList = 3;
  int appsettingreqlist_size() const;
  void clear_appsettingreqlist();
  static const int kAppSettingReqListFieldNumber = 3;
  const ::micromsg::AppSettingReq& appsettingreqlist(int index) const;
  ::micromsg::AppSettingReq* mutable_appsettingreqlist(int index);
  ::micromsg::AppSettingReq* add_appsettingreqlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::AppSettingReq >*
      mutable_appsettingreqlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::AppSettingReq >&
      appsettingreqlist() const;

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 AppCount = 2;
  bool has_appcount() const;
  void clear_appcount();
  static const int kAppCountFieldNumber = 2;
  ::google::protobuf::uint32 appcount() const;
  void set_appcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetAppSettingRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_appcount();
  void clear_has_appcount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::AppSettingReq > appsettingreqlist_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 appcount_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetAppSettingResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetAppSettingResponse) */ {
 public:
  GetAppSettingResponse();
  virtual ~GetAppSettingResponse();

  GetAppSettingResponse(const GetAppSettingResponse& from);

  inline GetAppSettingResponse& operator=(const GetAppSettingResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAppSettingResponse& default_instance();

  static inline const GetAppSettingResponse* internal_default_instance() {
    return reinterpret_cast<const GetAppSettingResponse*>(
               &_GetAppSettingResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(GetAppSettingResponse* other);

  // implements Message ----------------------------------------------

  inline GetAppSettingResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetAppSettingResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetAppSettingResponse& from);
  void MergeFrom(const GetAppSettingResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetAppSettingResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.AppSetting SettingList = 3;
  int settinglist_size() const;
  void clear_settinglist();
  static const int kSettingListFieldNumber = 3;
  const ::micromsg::AppSetting& settinglist(int index) const;
  ::micromsg::AppSetting* mutable_settinglist(int index);
  ::micromsg::AppSetting* add_settinglist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::AppSetting >*
      mutable_settinglist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::AppSetting >&
      settinglist() const;

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 AppCount = 2;
  bool has_appcount() const;
  void clear_appcount();
  static const int kAppCountFieldNumber = 2;
  ::google::protobuf::uint32 appcount() const;
  void set_appcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetAppSettingResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_appcount();
  void clear_has_appcount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::AppSetting > settinglist_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 appcount_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetSuggestionAppListRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetSuggestionAppListRequest) */ {
 public:
  GetSuggestionAppListRequest();
  virtual ~GetSuggestionAppListRequest();

  GetSuggestionAppListRequest(const GetSuggestionAppListRequest& from);

  inline GetSuggestionAppListRequest& operator=(const GetSuggestionAppListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSuggestionAppListRequest& default_instance();

  static inline const GetSuggestionAppListRequest* internal_default_instance() {
    return reinterpret_cast<const GetSuggestionAppListRequest*>(
               &_GetSuggestionAppListRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(GetSuggestionAppListRequest* other);

  // implements Message ----------------------------------------------

  inline GetSuggestionAppListRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetSuggestionAppListRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetSuggestionAppListRequest& from);
  void MergeFrom(const GetSuggestionAppListRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetSuggestionAppListRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.SKBuiltinString_t InstalledAppList = 7;
  int installedapplist_size() const;
  void clear_installedapplist();
  static const int kInstalledAppListFieldNumber = 7;
  const ::micromsg::SKBuiltinString_t& installedapplist(int index) const;
  ::micromsg::SKBuiltinString_t* mutable_installedapplist(int index);
  ::micromsg::SKBuiltinString_t* add_installedapplist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
      mutable_installedapplist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
      installedapplist() const;

  // optional string Lang = 5;
  bool has_lang() const;
  void clear_lang();
  static const int kLangFieldNumber = 5;
  const ::std::string& lang() const;
  void set_lang(const ::std::string& value);
  #if LANG_CXX11
  void set_lang(::std::string&& value);
  #endif
  void set_lang(const char* value);
  void set_lang(const char* value, size_t size);
  ::std::string* mutable_lang();
  ::std::string* release_lang();
  void set_allocated_lang(::std::string* lang);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 AppType = 2;
  bool has_apptype() const;
  void clear_apptype();
  static const int kAppTypeFieldNumber = 2;
  ::google::protobuf::uint32 apptype() const;
  void set_apptype(::google::protobuf::uint32 value);

  // required uint32 OffSet = 3;
  bool has_offset() const;
  void clear_offset();
  static const int kOffSetFieldNumber = 3;
  ::google::protobuf::uint32 offset() const;
  void set_offset(::google::protobuf::uint32 value);

  // required uint32 Limit = 4;
  bool has_limit() const;
  void clear_limit();
  static const int kLimitFieldNumber = 4;
  ::google::protobuf::uint32 limit() const;
  void set_limit(::google::protobuf::uint32 value);

  // optional uint32 InstalledAppCount = 6;
  bool has_installedappcount() const;
  void clear_installedappcount();
  static const int kInstalledAppCountFieldNumber = 6;
  ::google::protobuf::uint32 installedappcount() const;
  void set_installedappcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetSuggestionAppListRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_apptype();
  void clear_has_apptype();
  void set_has_offset();
  void clear_has_offset();
  void set_has_limit();
  void clear_has_limit();
  void set_has_lang();
  void clear_has_lang();
  void set_has_installedappcount();
  void clear_has_installedappcount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t > installedapplist_;
  ::google::protobuf::internal::ArenaStringPtr lang_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 apptype_;
  ::google::protobuf::uint32 offset_;
  ::google::protobuf::uint32 limit_;
  ::google::protobuf::uint32 installedappcount_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetSuggestionAppListResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetSuggestionAppListResponse) */ {
 public:
  GetSuggestionAppListResponse();
  virtual ~GetSuggestionAppListResponse();

  GetSuggestionAppListResponse(const GetSuggestionAppListResponse& from);

  inline GetSuggestionAppListResponse& operator=(const GetSuggestionAppListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSuggestionAppListResponse& default_instance();

  static inline const GetSuggestionAppListResponse* internal_default_instance() {
    return reinterpret_cast<const GetSuggestionAppListResponse*>(
               &_GetSuggestionAppListResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(GetSuggestionAppListResponse* other);

  // implements Message ----------------------------------------------

  inline GetSuggestionAppListResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetSuggestionAppListResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetSuggestionAppListResponse& from);
  void MergeFrom(const GetSuggestionAppListResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetSuggestionAppListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.RcAppList RcList = 3;
  int rclist_size() const;
  void clear_rclist();
  static const int kRcListFieldNumber = 3;
  const ::micromsg::RcAppList& rclist(int index) const;
  ::micromsg::RcAppList* mutable_rclist(int index);
  ::micromsg::RcAppList* add_rclist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::RcAppList >*
      mutable_rclist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::RcAppList >&
      rclist() const;

  // repeated .micromsg.AdAppList AdList = 6;
  int adlist_size() const;
  void clear_adlist();
  static const int kAdListFieldNumber = 6;
  const ::micromsg::AdAppList& adlist(int index) const;
  ::micromsg::AdAppList* mutable_adlist(int index);
  ::micromsg::AdAppList* add_adlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::AdAppList >*
      mutable_adlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::AdAppList >&
      adlist() const;

  // repeated .micromsg.GiftList GiftList = 8;
  int giftlist_size() const;
  void clear_giftlist();
  static const int kGiftListFieldNumber = 8;
  const ::micromsg::GiftList& giftlist(int index) const;
  ::micromsg::GiftList* mutable_giftlist(int index);
  ::micromsg::GiftList* add_giftlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::GiftList >*
      mutable_giftlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::GiftList >&
      giftlist() const;

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // optional .micromsg.GiftEntranceItem GiftEntranceItem = 9;
  bool has_giftentranceitem() const;
  void clear_giftentranceitem();
  static const int kGiftEntranceItemFieldNumber = 9;
  const ::micromsg::GiftEntranceItem& giftentranceitem() const;
  ::micromsg::GiftEntranceItem* mutable_giftentranceitem();
  ::micromsg::GiftEntranceItem* release_giftentranceitem();
  void set_allocated_giftentranceitem(::micromsg::GiftEntranceItem* giftentranceitem);

  // required uint32 RcCount = 2;
  bool has_rccount() const;
  void clear_rccount();
  static const int kRcCountFieldNumber = 2;
  ::google::protobuf::uint32 rccount() const;
  void set_rccount(::google::protobuf::uint32 value);

  // optional uint32 IsInternalDownload = 4;
  bool has_isinternaldownload() const;
  void clear_isinternaldownload();
  static const int kIsInternalDownloadFieldNumber = 4;
  ::google::protobuf::uint32 isinternaldownload() const;
  void set_isinternaldownload(::google::protobuf::uint32 value);

  // optional uint32 AdCount = 5;
  bool has_adcount() const;
  void clear_adcount();
  static const int kAdCountFieldNumber = 5;
  ::google::protobuf::uint32 adcount() const;
  void set_adcount(::google::protobuf::uint32 value);

  // optional uint32 GiftCount = 7;
  bool has_giftcount() const;
  void clear_giftcount();
  static const int kGiftCountFieldNumber = 7;
  ::google::protobuf::uint32 giftcount() const;
  void set_giftcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetSuggestionAppListResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_rccount();
  void clear_has_rccount();
  void set_has_isinternaldownload();
  void clear_has_isinternaldownload();
  void set_has_adcount();
  void clear_has_adcount();
  void set_has_giftcount();
  void clear_has_giftcount();
  void set_has_giftentranceitem();
  void clear_has_giftentranceitem();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::RcAppList > rclist_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::AdAppList > adlist_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::GiftList > giftlist_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::GiftEntranceItem* giftentranceitem_;
  ::google::protobuf::uint32 rccount_;
  ::google::protobuf::uint32 isinternaldownload_;
  ::google::protobuf::uint32 adcount_;
  ::google::protobuf::uint32 giftcount_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class JSOAuthRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.JSOAuthRequest) */ {
 public:
  JSOAuthRequest();
  virtual ~JSOAuthRequest();

  JSOAuthRequest(const JSOAuthRequest& from);

  inline JSOAuthRequest& operator=(const JSOAuthRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JSOAuthRequest& default_instance();

  static inline const JSOAuthRequest* internal_default_instance() {
    return reinterpret_cast<const JSOAuthRequest*>(
               &_JSOAuthRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(JSOAuthRequest* other);

  // implements Message ----------------------------------------------

  inline JSOAuthRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  JSOAuthRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JSOAuthRequest& from);
  void MergeFrom(const JSOAuthRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JSOAuthRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string AppID = 2;
  bool has_appid() const;
  void clear_appid();
  static const int kAppIDFieldNumber = 2;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // optional string Url = 3;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 3;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional string Scope = 4;
  bool has_scope() const;
  void clear_scope();
  static const int kScopeFieldNumber = 4;
  const ::std::string& scope() const;
  void set_scope(const ::std::string& value);
  #if LANG_CXX11
  void set_scope(::std::string&& value);
  #endif
  void set_scope(const char* value);
  void set_scope(const char* value, size_t size);
  ::std::string* mutable_scope();
  ::std::string* release_scope();
  void set_allocated_scope(::std::string* scope);

  // optional string Signature = 5;
  bool has_signature() const;
  void clear_signature();
  static const int kSignatureFieldNumber = 5;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const char* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // optional string Signature_method = 6;
  bool has_signature_method() const;
  void clear_signature_method();
  static const int kSignatureMethodFieldNumber = 6;
  const ::std::string& signature_method() const;
  void set_signature_method(const ::std::string& value);
  #if LANG_CXX11
  void set_signature_method(::std::string&& value);
  #endif
  void set_signature_method(const char* value);
  void set_signature_method(const char* value, size_t size);
  ::std::string* mutable_signature_method();
  ::std::string* release_signature_method();
  void set_allocated_signature_method(::std::string* signature_method);

  // optional string TimeStamp = 7;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimeStampFieldNumber = 7;
  const ::std::string& timestamp() const;
  void set_timestamp(const ::std::string& value);
  #if LANG_CXX11
  void set_timestamp(::std::string&& value);
  #endif
  void set_timestamp(const char* value);
  void set_timestamp(const char* value, size_t size);
  ::std::string* mutable_timestamp();
  ::std::string* release_timestamp();
  void set_allocated_timestamp(::std::string* timestamp);

  // optional string Nonce = 8;
  bool has_nonce() const;
  void clear_nonce();
  static const int kNonceFieldNumber = 8;
  const ::std::string& nonce() const;
  void set_nonce(const ::std::string& value);
  #if LANG_CXX11
  void set_nonce(::std::string&& value);
  #endif
  void set_nonce(const char* value);
  void set_nonce(const char* value, size_t size);
  ::std::string* mutable_nonce();
  ::std::string* release_nonce();
  void set_allocated_nonce(::std::string* nonce);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // @@protoc_insertion_point(class_scope:micromsg.JSOAuthRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_appid();
  void clear_has_appid();
  void set_has_url();
  void clear_has_url();
  void set_has_scope();
  void clear_has_scope();
  void set_has_signature();
  void clear_has_signature();
  void set_has_signature_method();
  void clear_has_signature_method();
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_nonce();
  void clear_has_nonce();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr scope_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  ::google::protobuf::internal::ArenaStringPtr signature_method_;
  ::google::protobuf::internal::ArenaStringPtr timestamp_;
  ::google::protobuf::internal::ArenaStringPtr nonce_;
  ::micromsg::BaseRequest* baserequest_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class JSOAuthResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.JSOAuthResponse) */ {
 public:
  JSOAuthResponse();
  virtual ~JSOAuthResponse();

  JSOAuthResponse(const JSOAuthResponse& from);

  inline JSOAuthResponse& operator=(const JSOAuthResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JSOAuthResponse& default_instance();

  static inline const JSOAuthResponse* internal_default_instance() {
    return reinterpret_cast<const JSOAuthResponse*>(
               &_JSOAuthResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(JSOAuthResponse* other);

  // implements Message ----------------------------------------------

  inline JSOAuthResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  JSOAuthResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JSOAuthResponse& from);
  void MergeFrom(const JSOAuthResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JSOAuthResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.BizScopeInfo ScopeList = 3;
  int scopelist_size() const;
  void clear_scopelist();
  static const int kScopeListFieldNumber = 3;
  const ::micromsg::BizScopeInfo& scopelist(int index) const;
  ::micromsg::BizScopeInfo* mutable_scopelist(int index);
  ::micromsg::BizScopeInfo* add_scopelist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::BizScopeInfo >*
      mutable_scopelist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::BizScopeInfo >&
      scopelist() const;

  // optional string OAuthTitle = 4;
  bool has_oauthtitle() const;
  void clear_oauthtitle();
  static const int kOAuthTitleFieldNumber = 4;
  const ::std::string& oauthtitle() const;
  void set_oauthtitle(const ::std::string& value);
  #if LANG_CXX11
  void set_oauthtitle(::std::string&& value);
  #endif
  void set_oauthtitle(const char* value);
  void set_oauthtitle(const char* value, size_t size);
  ::std::string* mutable_oauthtitle();
  ::std::string* release_oauthtitle();
  void set_allocated_oauthtitle(::std::string* oauthtitle);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 ScopeCount = 2;
  bool has_scopecount() const;
  void clear_scopecount();
  static const int kScopeCountFieldNumber = 2;
  ::google::protobuf::uint32 scopecount() const;
  void set_scopecount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.JSOAuthResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_scopecount();
  void clear_has_scopecount();
  void set_has_oauthtitle();
  void clear_has_oauthtitle();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::BizScopeInfo > scopelist_;
  ::google::protobuf::internal::ArenaStringPtr oauthtitle_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 scopecount_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetOAuthScopeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SetOAuthScopeRequest) */ {
 public:
  SetOAuthScopeRequest();
  virtual ~SetOAuthScopeRequest();

  SetOAuthScopeRequest(const SetOAuthScopeRequest& from);

  inline SetOAuthScopeRequest& operator=(const SetOAuthScopeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetOAuthScopeRequest& default_instance();

  static inline const SetOAuthScopeRequest* internal_default_instance() {
    return reinterpret_cast<const SetOAuthScopeRequest*>(
               &_SetOAuthScopeRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(SetOAuthScopeRequest* other);

  // implements Message ----------------------------------------------

  inline SetOAuthScopeRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SetOAuthScopeRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetOAuthScopeRequest& from);
  void MergeFrom(const SetOAuthScopeRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetOAuthScopeRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.BizScopeInfo ScopeList = 4;
  int scopelist_size() const;
  void clear_scopelist();
  static const int kScopeListFieldNumber = 4;
  const ::micromsg::BizScopeInfo& scopelist(int index) const;
  ::micromsg::BizScopeInfo* mutable_scopelist(int index);
  ::micromsg::BizScopeInfo* add_scopelist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::BizScopeInfo >*
      mutable_scopelist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::BizScopeInfo >&
      scopelist() const;

  // optional string AppID = 2;
  bool has_appid() const;
  void clear_appid();
  static const int kAppIDFieldNumber = 2;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 ScopeCount = 3;
  bool has_scopecount() const;
  void clear_scopecount();
  static const int kScopeCountFieldNumber = 3;
  ::google::protobuf::uint32 scopecount() const;
  void set_scopecount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SetOAuthScopeRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_appid();
  void clear_has_appid();
  void set_has_scopecount();
  void clear_has_scopecount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::BizScopeInfo > scopelist_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 scopecount_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetOAuthScopeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SetOAuthScopeResponse) */ {
 public:
  SetOAuthScopeResponse();
  virtual ~SetOAuthScopeResponse();

  SetOAuthScopeResponse(const SetOAuthScopeResponse& from);

  inline SetOAuthScopeResponse& operator=(const SetOAuthScopeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetOAuthScopeResponse& default_instance();

  static inline const SetOAuthScopeResponse* internal_default_instance() {
    return reinterpret_cast<const SetOAuthScopeResponse*>(
               &_SetOAuthScopeResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(SetOAuthScopeResponse* other);

  // implements Message ----------------------------------------------

  inline SetOAuthScopeResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SetOAuthScopeResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetOAuthScopeResponse& from);
  void MergeFrom(const SetOAuthScopeResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetOAuthScopeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.BizScopeInfo ScopeList = 3;
  int scopelist_size() const;
  void clear_scopelist();
  static const int kScopeListFieldNumber = 3;
  const ::micromsg::BizScopeInfo& scopelist(int index) const;
  ::micromsg::BizScopeInfo* mutable_scopelist(int index);
  ::micromsg::BizScopeInfo* add_scopelist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::BizScopeInfo >*
      mutable_scopelist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::BizScopeInfo >&
      scopelist() const;

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 ScopeCount = 2;
  bool has_scopecount() const;
  void clear_scopecount();
  static const int kScopeCountFieldNumber = 2;
  ::google::protobuf::uint32 scopecount() const;
  void set_scopecount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SetOAuthScopeResponse)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_scopecount();
  void clear_has_scopecount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::BizScopeInfo > scopelist_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 scopecount_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetUserInfoInAppRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetUserInfoInAppRequest) */ {
 public:
  GetUserInfoInAppRequest();
  virtual ~GetUserInfoInAppRequest();

  GetUserInfoInAppRequest(const GetUserInfoInAppRequest& from);

  inline GetUserInfoInAppRequest& operator=(const GetUserInfoInAppRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserInfoInAppRequest& default_instance();

  static inline const GetUserInfoInAppRequest* internal_default_instance() {
    return reinterpret_cast<const GetUserInfoInAppRequest*>(
               &_GetUserInfoInAppRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(GetUserInfoInAppRequest* other);

  // implements Message ----------------------------------------------

  inline GetUserInfoInAppRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetUserInfoInAppRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetUserInfoInAppRequest& from);
  void MergeFrom(const GetUserInfoInAppRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetUserInfoInAppRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.SKBuiltinString_t UserNameList = 4;
  int usernamelist_size() const;
  void clear_usernamelist();
  static const int kUserNameListFieldNumber = 4;
  const ::micromsg::SKBuiltinString_t& usernamelist(int index) const;
  ::micromsg::SKBuiltinString_t* mutable_usernamelist(int index);
  ::micromsg::SKBuiltinString_t* add_usernamelist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
      mutable_usernamelist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
      usernamelist() const;

  // optional string AppID = 2;
  bool has_appid() const;
  void clear_appid();
  static const int kAppIDFieldNumber = 2;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 UserCount = 3;
  bool has_usercount() const;
  void clear_usercount();
  static const int kUserCountFieldNumber = 3;
  ::google::protobuf::uint32 usercount() const;
  void set_usercount(::google::protobuf::uint32 value);

  // required uint32 Scene = 5;
  bool has_scene() const;
  void clear_scene();
  static const int kSceneFieldNumber = 5;
  ::google::protobuf::uint32 scene() const;
  void set_scene(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetUserInfoInAppRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_appid();
  void clear_has_appid();
  void set_has_usercount();
  void clear_has_usercount();
  void set_has_scene();
  void clear_has_scene();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t > usernamelist_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 usercount_;
  ::google::protobuf::uint32 scene_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserInfoInApp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.UserInfoInApp) */ {
 public:
  UserInfoInApp();
  virtual ~UserInfoInApp();

  UserInfoInApp(const UserInfoInApp& from);

  inline UserInfoInApp& operator=(const UserInfoInApp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserInfoInApp& default_instance();

  static inline const UserInfoInApp* internal_default_instance() {
    return reinterpret_cast<const UserInfoInApp*>(
               &_UserInfoInApp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(UserInfoInApp* other);

  // implements Message ----------------------------------------------

  inline UserInfoInApp* New() const PROTOBUF_FINAL { return New(NULL); }

  UserInfoInApp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserInfoInApp& from);
  void MergeFrom(const UserInfoInApp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserInfoInApp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string UserName = 1;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string PersonalSettingXml = 2;
  bool has_personalsettingxml() const;
  void clear_personalsettingxml();
  static const int kPersonalSettingXmlFieldNumber = 2;
  const ::std::string& personalsettingxml() const;
  void set_personalsettingxml(const ::std::string& value);
  #if LANG_CXX11
  void set_personalsettingxml(::std::string&& value);
  #endif
  void set_personalsettingxml(const char* value);
  void set_personalsettingxml(const char* value, size_t size);
  ::std::string* mutable_personalsettingxml();
  ::std::string* release_personalsettingxml();
  void set_allocated_personalsettingxml(::std::string* personalsettingxml);

  // @@protoc_insertion_point(class_scope:micromsg.UserInfoInApp)
 private:
  void set_has_username();
  void clear_has_username();
  void set_has_personalsettingxml();
  void clear_has_personalsettingxml();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr personalsettingxml_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetUserInfoInAppResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetUserInfoInAppResponse) */ {
 public:
  GetUserInfoInAppResponse();
  virtual ~GetUserInfoInAppResponse();

  GetUserInfoInAppResponse(const GetUserInfoInAppResponse& from);

  inline GetUserInfoInAppResponse& operator=(const GetUserInfoInAppResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserInfoInAppResponse& default_instance();

  static inline const GetUserInfoInAppResponse* internal_default_instance() {
    return reinterpret_cast<const GetUserInfoInAppResponse*>(
               &_GetUserInfoInAppResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(GetUserInfoInAppResponse* other);

  // implements Message ----------------------------------------------

  inline GetUserInfoInAppResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetUserInfoInAppResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetUserInfoInAppResponse& from);
  void MergeFrom(const GetUserInfoInAppResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetUserInfoInAppResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.UserInfoInApp UserInfoList = 3;
  int userinfolist_size() const;
  void clear_userinfolist();
  static const int kUserInfoListFieldNumber = 3;
  const ::micromsg::UserInfoInApp& userinfolist(int index) const;
  ::micromsg::UserInfoInApp* mutable_userinfolist(int index);
  ::micromsg::UserInfoInApp* add_userinfolist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::UserInfoInApp >*
      mutable_userinfolist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::UserInfoInApp >&
      userinfolist() const;

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 UserCount = 2;
  bool has_usercount() const;
  void clear_usercount();
  static const int kUserCountFieldNumber = 2;
  ::google::protobuf::uint32 usercount() const;
  void set_usercount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetUserInfoInAppResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_usercount();
  void clear_has_usercount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::UserInfoInApp > userinfolist_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 usercount_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckCanSubscribeBizRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.CheckCanSubscribeBizRequest) */ {
 public:
  CheckCanSubscribeBizRequest();
  virtual ~CheckCanSubscribeBizRequest();

  CheckCanSubscribeBizRequest(const CheckCanSubscribeBizRequest& from);

  inline CheckCanSubscribeBizRequest& operator=(const CheckCanSubscribeBizRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckCanSubscribeBizRequest& default_instance();

  static inline const CheckCanSubscribeBizRequest* internal_default_instance() {
    return reinterpret_cast<const CheckCanSubscribeBizRequest*>(
               &_CheckCanSubscribeBizRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(CheckCanSubscribeBizRequest* other);

  // implements Message ----------------------------------------------

  inline CheckCanSubscribeBizRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckCanSubscribeBizRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckCanSubscribeBizRequest& from);
  void MergeFrom(const CheckCanSubscribeBizRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckCanSubscribeBizRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.SKBuiltinString_t AndroidPackNameList = 7;
  int androidpacknamelist_size() const;
  void clear_androidpacknamelist();
  static const int kAndroidPackNameListFieldNumber = 7;
  const ::micromsg::SKBuiltinString_t& androidpacknamelist(int index) const;
  ::micromsg::SKBuiltinString_t* mutable_androidpacknamelist(int index);
  ::micromsg::SKBuiltinString_t* add_androidpacknamelist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
      mutable_androidpacknamelist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
      androidpacknamelist() const;

  // optional string ToUserName = 3;
  bool has_tousername() const;
  void clear_tousername();
  static const int kToUserNameFieldNumber = 3;
  const ::std::string& tousername() const;
  void set_tousername(const ::std::string& value);
  #if LANG_CXX11
  void set_tousername(::std::string&& value);
  #endif
  void set_tousername(const char* value);
  void set_tousername(const char* value, size_t size);
  ::std::string* mutable_tousername();
  ::std::string* release_tousername();
  void set_allocated_tousername(::std::string* tousername);

  // optional string ExtInfo = 4;
  bool has_extinfo() const;
  void clear_extinfo();
  static const int kExtInfoFieldNumber = 4;
  const ::std::string& extinfo() const;
  void set_extinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_extinfo(::std::string&& value);
  #endif
  void set_extinfo(const char* value);
  void set_extinfo(const char* value, size_t size);
  ::std::string* mutable_extinfo();
  ::std::string* release_extinfo();
  void set_allocated_extinfo(::std::string* extinfo);

  // optional string AppID = 5;
  bool has_appid() const;
  void clear_appid();
  static const int kAppIDFieldNumber = 5;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // optional string IosBunddleID = 8;
  bool has_iosbunddleid() const;
  void clear_iosbunddleid();
  static const int kIosBunddleIDFieldNumber = 8;
  const ::std::string& iosbunddleid() const;
  void set_iosbunddleid(const ::std::string& value);
  #if LANG_CXX11
  void set_iosbunddleid(::std::string&& value);
  #endif
  void set_iosbunddleid(const char* value);
  void set_iosbunddleid(const char* value, size_t size);
  ::std::string* mutable_iosbunddleid();
  ::std::string* release_iosbunddleid();
  void set_allocated_iosbunddleid(::std::string* iosbunddleid);

  // optional string FromURL = 9;
  bool has_fromurl() const;
  void clear_fromurl();
  static const int kFromURLFieldNumber = 9;
  const ::std::string& fromurl() const;
  void set_fromurl(const ::std::string& value);
  #if LANG_CXX11
  void set_fromurl(::std::string&& value);
  #endif
  void set_fromurl(const char* value);
  void set_fromurl(const char* value, size_t size);
  ::std::string* mutable_fromurl();
  ::std::string* release_fromurl();
  void set_allocated_fromurl(::std::string* fromurl);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 Source = 2;
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 2;
  ::google::protobuf::uint32 source() const;
  void set_source(::google::protobuf::uint32 value);

  // required uint32 PackNum = 6;
  bool has_packnum() const;
  void clear_packnum();
  static const int kPackNumFieldNumber = 6;
  ::google::protobuf::uint32 packnum() const;
  void set_packnum(::google::protobuf::uint32 value);

  // optional uint32 Scene = 10;
  bool has_scene() const;
  void clear_scene();
  static const int kSceneFieldNumber = 10;
  ::google::protobuf::uint32 scene() const;
  void set_scene(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.CheckCanSubscribeBizRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_source();
  void clear_has_source();
  void set_has_tousername();
  void clear_has_tousername();
  void set_has_extinfo();
  void clear_has_extinfo();
  void set_has_appid();
  void clear_has_appid();
  void set_has_packnum();
  void clear_has_packnum();
  void set_has_iosbunddleid();
  void clear_has_iosbunddleid();
  void set_has_fromurl();
  void clear_has_fromurl();
  void set_has_scene();
  void clear_has_scene();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t > androidpacknamelist_;
  ::google::protobuf::internal::ArenaStringPtr tousername_;
  ::google::protobuf::internal::ArenaStringPtr extinfo_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::google::protobuf::internal::ArenaStringPtr iosbunddleid_;
  ::google::protobuf::internal::ArenaStringPtr fromurl_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 source_;
  ::google::protobuf::uint32 packnum_;
  ::google::protobuf::uint32 scene_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckCanSubscribeBizResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.CheckCanSubscribeBizResponse) */ {
 public:
  CheckCanSubscribeBizResponse();
  virtual ~CheckCanSubscribeBizResponse();

  CheckCanSubscribeBizResponse(const CheckCanSubscribeBizResponse& from);

  inline CheckCanSubscribeBizResponse& operator=(const CheckCanSubscribeBizResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckCanSubscribeBizResponse& default_instance();

  static inline const CheckCanSubscribeBizResponse* internal_default_instance() {
    return reinterpret_cast<const CheckCanSubscribeBizResponse*>(
               &_CheckCanSubscribeBizResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(CheckCanSubscribeBizResponse* other);

  // implements Message ----------------------------------------------

  inline CheckCanSubscribeBizResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckCanSubscribeBizResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckCanSubscribeBizResponse& from);
  void MergeFrom(const CheckCanSubscribeBizResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckCanSubscribeBizResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string CheckTicket = 2;
  bool has_checkticket() const;
  void clear_checkticket();
  static const int kCheckTicketFieldNumber = 2;
  const ::std::string& checkticket() const;
  void set_checkticket(const ::std::string& value);
  #if LANG_CXX11
  void set_checkticket(::std::string&& value);
  #endif
  void set_checkticket(const char* value);
  void set_checkticket(const char* value, size_t size);
  ::std::string* mutable_checkticket();
  ::std::string* release_checkticket();
  void set_allocated_checkticket(::std::string* checkticket);

  // optional string ToUserName = 3;
  bool has_tousername() const;
  void clear_tousername();
  static const int kToUserNameFieldNumber = 3;
  const ::std::string& tousername() const;
  void set_tousername(const ::std::string& value);
  #if LANG_CXX11
  void set_tousername(::std::string&& value);
  #endif
  void set_tousername(const char* value);
  void set_tousername(const char* value, size_t size);
  ::std::string* mutable_tousername();
  ::std::string* release_tousername();
  void set_allocated_tousername(::std::string* tousername);

  // optional string WebViewUrl = 4;
  bool has_webviewurl() const;
  void clear_webviewurl();
  static const int kWebViewUrlFieldNumber = 4;
  const ::std::string& webviewurl() const;
  void set_webviewurl(const ::std::string& value);
  #if LANG_CXX11
  void set_webviewurl(::std::string&& value);
  #endif
  void set_webviewurl(const char* value);
  void set_webviewurl(const char* value, size_t size);
  ::std::string* mutable_webviewurl();
  ::std::string* release_webviewurl();
  void set_allocated_webviewurl(::std::string* webviewurl);

  // optional string ShowWord = 5;
  bool has_showword() const;
  void clear_showword();
  static const int kShowWordFieldNumber = 5;
  const ::std::string& showword() const;
  void set_showword(const ::std::string& value);
  #if LANG_CXX11
  void set_showword(::std::string&& value);
  #endif
  void set_showword(const char* value);
  void set_showword(const char* value, size_t size);
  ::std::string* mutable_showword();
  ::std::string* release_showword();
  void set_allocated_showword(::std::string* showword);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // @@protoc_insertion_point(class_scope:micromsg.CheckCanSubscribeBizResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_checkticket();
  void clear_has_checkticket();
  void set_has_tousername();
  void clear_has_tousername();
  void set_has_webviewurl();
  void clear_has_webviewurl();
  void set_has_showword();
  void clear_has_showword();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr checkticket_;
  ::google::protobuf::internal::ArenaStringPtr tousername_;
  ::google::protobuf::internal::ArenaStringPtr webviewurl_;
  ::google::protobuf::internal::ArenaStringPtr showword_;
  ::micromsg::BaseResponse* baseresponse_;
  friend struct protobuf_mmopenapi_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// GetA8KeyReq

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetA8KeyReq::has_baserequest() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetA8KeyReq::set_has_baserequest() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetA8KeyReq::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetA8KeyReq::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetA8KeyReq::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyReq.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetA8KeyReq::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyReq.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetA8KeyReq::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyReq.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetA8KeyReq::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyReq.BaseRequest)
}

// required uint32 OpCode = 2;
inline bool GetA8KeyReq::has_opcode() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GetA8KeyReq::set_has_opcode() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GetA8KeyReq::clear_has_opcode() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GetA8KeyReq::clear_opcode() {
  opcode_ = 0u;
  clear_has_opcode();
}
inline ::google::protobuf::uint32 GetA8KeyReq::opcode() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyReq.OpCode)
  return opcode_;
}
inline void GetA8KeyReq::set_opcode(::google::protobuf::uint32 value) {
  set_has_opcode();
  opcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyReq.OpCode)
}

// optional .micromsg.SKBuiltinBuffer_t A2Key = 3;
inline bool GetA8KeyReq::has_a2key() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetA8KeyReq::set_has_a2key() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetA8KeyReq::clear_has_a2key() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetA8KeyReq::clear_a2key() {
  if (a2key_ != NULL) a2key_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_a2key();
}
inline const ::micromsg::SKBuiltinBuffer_t& GetA8KeyReq::a2key() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyReq.A2Key)
  return a2key_ != NULL ? *a2key_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* GetA8KeyReq::mutable_a2key() {
  set_has_a2key();
  if (a2key_ == NULL) {
    a2key_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyReq.A2Key)
  return a2key_;
}
inline ::micromsg::SKBuiltinBuffer_t* GetA8KeyReq::release_a2key() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyReq.A2Key)
  clear_has_a2key();
  ::micromsg::SKBuiltinBuffer_t* temp = a2key_;
  a2key_ = NULL;
  return temp;
}
inline void GetA8KeyReq::set_allocated_a2key(::micromsg::SKBuiltinBuffer_t* a2key) {
  delete a2key_;
  a2key_ = a2key;
  if (a2key) {
    set_has_a2key();
  } else {
    clear_has_a2key();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyReq.A2Key)
}

// optional .micromsg.SKBuiltinString_t AppID = 4;
inline bool GetA8KeyReq::has_appid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GetA8KeyReq::set_has_appid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GetA8KeyReq::clear_has_appid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GetA8KeyReq::clear_appid() {
  if (appid_ != NULL) appid_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_appid();
}
inline const ::micromsg::SKBuiltinString_t& GetA8KeyReq::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyReq.AppID)
  return appid_ != NULL ? *appid_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* GetA8KeyReq::mutable_appid() {
  set_has_appid();
  if (appid_ == NULL) {
    appid_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyReq.AppID)
  return appid_;
}
inline ::micromsg::SKBuiltinString_t* GetA8KeyReq::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyReq.AppID)
  clear_has_appid();
  ::micromsg::SKBuiltinString_t* temp = appid_;
  appid_ = NULL;
  return temp;
}
inline void GetA8KeyReq::set_allocated_appid(::micromsg::SKBuiltinString_t* appid) {
  delete appid_;
  appid_ = appid;
  if (appid) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyReq.AppID)
}

// optional .micromsg.SKBuiltinString_t Scope = 5;
inline bool GetA8KeyReq::has_scope() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GetA8KeyReq::set_has_scope() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GetA8KeyReq::clear_has_scope() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GetA8KeyReq::clear_scope() {
  if (scope_ != NULL) scope_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_scope();
}
inline const ::micromsg::SKBuiltinString_t& GetA8KeyReq::scope() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyReq.Scope)
  return scope_ != NULL ? *scope_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* GetA8KeyReq::mutable_scope() {
  set_has_scope();
  if (scope_ == NULL) {
    scope_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyReq.Scope)
  return scope_;
}
inline ::micromsg::SKBuiltinString_t* GetA8KeyReq::release_scope() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyReq.Scope)
  clear_has_scope();
  ::micromsg::SKBuiltinString_t* temp = scope_;
  scope_ = NULL;
  return temp;
}
inline void GetA8KeyReq::set_allocated_scope(::micromsg::SKBuiltinString_t* scope) {
  delete scope_;
  scope_ = scope;
  if (scope) {
    set_has_scope();
  } else {
    clear_has_scope();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyReq.Scope)
}

// optional .micromsg.SKBuiltinString_t State = 6;
inline bool GetA8KeyReq::has_state() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GetA8KeyReq::set_has_state() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GetA8KeyReq::clear_has_state() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GetA8KeyReq::clear_state() {
  if (state_ != NULL) state_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_state();
}
inline const ::micromsg::SKBuiltinString_t& GetA8KeyReq::state() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyReq.State)
  return state_ != NULL ? *state_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* GetA8KeyReq::mutable_state() {
  set_has_state();
  if (state_ == NULL) {
    state_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyReq.State)
  return state_;
}
inline ::micromsg::SKBuiltinString_t* GetA8KeyReq::release_state() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyReq.State)
  clear_has_state();
  ::micromsg::SKBuiltinString_t* temp = state_;
  state_ = NULL;
  return temp;
}
inline void GetA8KeyReq::set_allocated_state(::micromsg::SKBuiltinString_t* state) {
  delete state_;
  state_ = state;
  if (state) {
    set_has_state();
  } else {
    clear_has_state();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyReq.State)
}

// optional .micromsg.SKBuiltinString_t ReqUrl = 7;
inline bool GetA8KeyReq::has_requrl() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GetA8KeyReq::set_has_requrl() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GetA8KeyReq::clear_has_requrl() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GetA8KeyReq::clear_requrl() {
  if (requrl_ != NULL) requrl_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_requrl();
}
inline const ::micromsg::SKBuiltinString_t& GetA8KeyReq::requrl() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyReq.ReqUrl)
  return requrl_ != NULL ? *requrl_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* GetA8KeyReq::mutable_requrl() {
  set_has_requrl();
  if (requrl_ == NULL) {
    requrl_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyReq.ReqUrl)
  return requrl_;
}
inline ::micromsg::SKBuiltinString_t* GetA8KeyReq::release_requrl() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyReq.ReqUrl)
  clear_has_requrl();
  ::micromsg::SKBuiltinString_t* temp = requrl_;
  requrl_ = NULL;
  return temp;
}
inline void GetA8KeyReq::set_allocated_requrl(::micromsg::SKBuiltinString_t* requrl) {
  delete requrl_;
  requrl_ = requrl;
  if (requrl) {
    set_has_requrl();
  } else {
    clear_has_requrl();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyReq.ReqUrl)
}

// optional string FriendUserName = 8;
inline bool GetA8KeyReq::has_friendusername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetA8KeyReq::set_has_friendusername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetA8KeyReq::clear_has_friendusername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetA8KeyReq::clear_friendusername() {
  friendusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_friendusername();
}
inline const ::std::string& GetA8KeyReq::friendusername() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyReq.FriendUserName)
  return friendusername_.GetNoArena();
}
inline void GetA8KeyReq::set_friendusername(const ::std::string& value) {
  set_has_friendusername();
  friendusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyReq.FriendUserName)
}
#if LANG_CXX11
inline void GetA8KeyReq::set_friendusername(::std::string&& value) {
  set_has_friendusername();
  friendusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetA8KeyReq.FriendUserName)
}
#endif
inline void GetA8KeyReq::set_friendusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_friendusername();
  friendusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetA8KeyReq.FriendUserName)
}
inline void GetA8KeyReq::set_friendusername(const char* value, size_t size) {
  set_has_friendusername();
  friendusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetA8KeyReq.FriendUserName)
}
inline ::std::string* GetA8KeyReq::mutable_friendusername() {
  set_has_friendusername();
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyReq.FriendUserName)
  return friendusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetA8KeyReq::release_friendusername() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyReq.FriendUserName)
  clear_has_friendusername();
  return friendusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetA8KeyReq::set_allocated_friendusername(::std::string* friendusername) {
  if (friendusername != NULL) {
    set_has_friendusername();
  } else {
    clear_has_friendusername();
  }
  friendusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), friendusername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyReq.FriendUserName)
}

// optional uint32 FriendQQ = 9;
inline bool GetA8KeyReq::has_friendqq() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GetA8KeyReq::set_has_friendqq() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GetA8KeyReq::clear_has_friendqq() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GetA8KeyReq::clear_friendqq() {
  friendqq_ = 0u;
  clear_has_friendqq();
}
inline ::google::protobuf::uint32 GetA8KeyReq::friendqq() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyReq.FriendQQ)
  return friendqq_;
}
inline void GetA8KeyReq::set_friendqq(::google::protobuf::uint32 value) {
  set_has_friendqq();
  friendqq_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyReq.FriendQQ)
}

// optional uint32 Scene = 10;
inline bool GetA8KeyReq::has_scene() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GetA8KeyReq::set_has_scene() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GetA8KeyReq::clear_has_scene() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GetA8KeyReq::clear_scene() {
  scene_ = 0u;
  clear_has_scene();
}
inline ::google::protobuf::uint32 GetA8KeyReq::scene() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyReq.Scene)
  return scene_;
}
inline void GetA8KeyReq::set_scene(::google::protobuf::uint32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyReq.Scene)
}

// optional string UserName = 11;
inline bool GetA8KeyReq::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetA8KeyReq::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetA8KeyReq::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetA8KeyReq::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& GetA8KeyReq::username() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyReq.UserName)
  return username_.GetNoArena();
}
inline void GetA8KeyReq::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyReq.UserName)
}
#if LANG_CXX11
inline void GetA8KeyReq::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetA8KeyReq.UserName)
}
#endif
inline void GetA8KeyReq::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetA8KeyReq.UserName)
}
inline void GetA8KeyReq::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetA8KeyReq.UserName)
}
inline ::std::string* GetA8KeyReq::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyReq.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetA8KeyReq::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyReq.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetA8KeyReq::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyReq.UserName)
}

// optional string BundleID = 12;
inline bool GetA8KeyReq::has_bundleid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetA8KeyReq::set_has_bundleid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetA8KeyReq::clear_has_bundleid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetA8KeyReq::clear_bundleid() {
  bundleid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bundleid();
}
inline const ::std::string& GetA8KeyReq::bundleid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyReq.BundleID)
  return bundleid_.GetNoArena();
}
inline void GetA8KeyReq::set_bundleid(const ::std::string& value) {
  set_has_bundleid();
  bundleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyReq.BundleID)
}
#if LANG_CXX11
inline void GetA8KeyReq::set_bundleid(::std::string&& value) {
  set_has_bundleid();
  bundleid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetA8KeyReq.BundleID)
}
#endif
inline void GetA8KeyReq::set_bundleid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bundleid();
  bundleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetA8KeyReq.BundleID)
}
inline void GetA8KeyReq::set_bundleid(const char* value, size_t size) {
  set_has_bundleid();
  bundleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetA8KeyReq.BundleID)
}
inline ::std::string* GetA8KeyReq::mutable_bundleid() {
  set_has_bundleid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyReq.BundleID)
  return bundleid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetA8KeyReq::release_bundleid() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyReq.BundleID)
  clear_has_bundleid();
  return bundleid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetA8KeyReq::set_allocated_bundleid(::std::string* bundleid) {
  if (bundleid != NULL) {
    set_has_bundleid();
  } else {
    clear_has_bundleid();
  }
  bundleid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bundleid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyReq.BundleID)
}

// optional .micromsg.SKBuiltinBuffer_t A2KeyNew = 13;
inline bool GetA8KeyReq::has_a2keynew() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GetA8KeyReq::set_has_a2keynew() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GetA8KeyReq::clear_has_a2keynew() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GetA8KeyReq::clear_a2keynew() {
  if (a2keynew_ != NULL) a2keynew_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_a2keynew();
}
inline const ::micromsg::SKBuiltinBuffer_t& GetA8KeyReq::a2keynew() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyReq.A2KeyNew)
  return a2keynew_ != NULL ? *a2keynew_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* GetA8KeyReq::mutable_a2keynew() {
  set_has_a2keynew();
  if (a2keynew_ == NULL) {
    a2keynew_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyReq.A2KeyNew)
  return a2keynew_;
}
inline ::micromsg::SKBuiltinBuffer_t* GetA8KeyReq::release_a2keynew() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyReq.A2KeyNew)
  clear_has_a2keynew();
  ::micromsg::SKBuiltinBuffer_t* temp = a2keynew_;
  a2keynew_ = NULL;
  return temp;
}
inline void GetA8KeyReq::set_allocated_a2keynew(::micromsg::SKBuiltinBuffer_t* a2keynew) {
  delete a2keynew_;
  a2keynew_ = a2keynew;
  if (a2keynew) {
    set_has_a2keynew();
  } else {
    clear_has_a2keynew();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyReq.A2KeyNew)
}

// optional uint32 Reason = 14;
inline bool GetA8KeyReq::has_reason() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void GetA8KeyReq::set_has_reason() {
  _has_bits_[0] |= 0x00004000u;
}
inline void GetA8KeyReq::clear_has_reason() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void GetA8KeyReq::clear_reason() {
  reason_ = 0u;
  clear_has_reason();
}
inline ::google::protobuf::uint32 GetA8KeyReq::reason() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyReq.Reason)
  return reason_;
}
inline void GetA8KeyReq::set_reason(::google::protobuf::uint32 value) {
  set_has_reason();
  reason_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyReq.Reason)
}

// optional uint32 FontScale = 15;
inline bool GetA8KeyReq::has_fontscale() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void GetA8KeyReq::set_has_fontscale() {
  _has_bits_[0] |= 0x00008000u;
}
inline void GetA8KeyReq::clear_has_fontscale() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void GetA8KeyReq::clear_fontscale() {
  fontscale_ = 0u;
  clear_has_fontscale();
}
inline ::google::protobuf::uint32 GetA8KeyReq::fontscale() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyReq.FontScale)
  return fontscale_;
}
inline void GetA8KeyReq::set_fontscale(::google::protobuf::uint32 value) {
  set_has_fontscale();
  fontscale_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyReq.FontScale)
}

// optional uint32 Flag = 16;
inline bool GetA8KeyReq::has_flag() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void GetA8KeyReq::set_has_flag() {
  _has_bits_[0] |= 0x00010000u;
}
inline void GetA8KeyReq::clear_has_flag() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void GetA8KeyReq::clear_flag() {
  flag_ = 0u;
  clear_has_flag();
}
inline ::google::protobuf::uint32 GetA8KeyReq::flag() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyReq.Flag)
  return flag_;
}
inline void GetA8KeyReq::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyReq.Flag)
}

// optional string NetType = 17;
inline bool GetA8KeyReq::has_nettype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetA8KeyReq::set_has_nettype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetA8KeyReq::clear_has_nettype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetA8KeyReq::clear_nettype() {
  nettype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nettype();
}
inline const ::std::string& GetA8KeyReq::nettype() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyReq.NetType)
  return nettype_.GetNoArena();
}
inline void GetA8KeyReq::set_nettype(const ::std::string& value) {
  set_has_nettype();
  nettype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyReq.NetType)
}
#if LANG_CXX11
inline void GetA8KeyReq::set_nettype(::std::string&& value) {
  set_has_nettype();
  nettype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetA8KeyReq.NetType)
}
#endif
inline void GetA8KeyReq::set_nettype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nettype();
  nettype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetA8KeyReq.NetType)
}
inline void GetA8KeyReq::set_nettype(const char* value, size_t size) {
  set_has_nettype();
  nettype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetA8KeyReq.NetType)
}
inline ::std::string* GetA8KeyReq::mutable_nettype() {
  set_has_nettype();
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyReq.NetType)
  return nettype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetA8KeyReq::release_nettype() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyReq.NetType)
  clear_has_nettype();
  return nettype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetA8KeyReq::set_allocated_nettype(::std::string* nettype) {
  if (nettype != NULL) {
    set_has_nettype();
  } else {
    clear_has_nettype();
  }
  nettype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nettype);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyReq.NetType)
}

// -------------------------------------------------------------------

// JSAPIPermissionBitSet

// required uint32 BitValue = 1;
inline bool JSAPIPermissionBitSet::has_bitvalue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JSAPIPermissionBitSet::set_has_bitvalue() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JSAPIPermissionBitSet::clear_has_bitvalue() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JSAPIPermissionBitSet::clear_bitvalue() {
  bitvalue_ = 0u;
  clear_has_bitvalue();
}
inline ::google::protobuf::uint32 JSAPIPermissionBitSet::bitvalue() const {
  // @@protoc_insertion_point(field_get:micromsg.JSAPIPermissionBitSet.BitValue)
  return bitvalue_;
}
inline void JSAPIPermissionBitSet::set_bitvalue(::google::protobuf::uint32 value) {
  set_has_bitvalue();
  bitvalue_ = value;
  // @@protoc_insertion_point(field_set:micromsg.JSAPIPermissionBitSet.BitValue)
}

// optional uint32 BitValue2 = 2;
inline bool JSAPIPermissionBitSet::has_bitvalue2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JSAPIPermissionBitSet::set_has_bitvalue2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JSAPIPermissionBitSet::clear_has_bitvalue2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JSAPIPermissionBitSet::clear_bitvalue2() {
  bitvalue2_ = 0u;
  clear_has_bitvalue2();
}
inline ::google::protobuf::uint32 JSAPIPermissionBitSet::bitvalue2() const {
  // @@protoc_insertion_point(field_get:micromsg.JSAPIPermissionBitSet.BitValue2)
  return bitvalue2_;
}
inline void JSAPIPermissionBitSet::set_bitvalue2(::google::protobuf::uint32 value) {
  set_has_bitvalue2();
  bitvalue2_ = value;
  // @@protoc_insertion_point(field_set:micromsg.JSAPIPermissionBitSet.BitValue2)
}

// optional uint32 BitValue3 = 3;
inline bool JSAPIPermissionBitSet::has_bitvalue3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JSAPIPermissionBitSet::set_has_bitvalue3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JSAPIPermissionBitSet::clear_has_bitvalue3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JSAPIPermissionBitSet::clear_bitvalue3() {
  bitvalue3_ = 0u;
  clear_has_bitvalue3();
}
inline ::google::protobuf::uint32 JSAPIPermissionBitSet::bitvalue3() const {
  // @@protoc_insertion_point(field_get:micromsg.JSAPIPermissionBitSet.BitValue3)
  return bitvalue3_;
}
inline void JSAPIPermissionBitSet::set_bitvalue3(::google::protobuf::uint32 value) {
  set_has_bitvalue3();
  bitvalue3_ = value;
  // @@protoc_insertion_point(field_set:micromsg.JSAPIPermissionBitSet.BitValue3)
}

// optional uint32 BitValue4 = 4;
inline bool JSAPIPermissionBitSet::has_bitvalue4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JSAPIPermissionBitSet::set_has_bitvalue4() {
  _has_bits_[0] |= 0x00000008u;
}
inline void JSAPIPermissionBitSet::clear_has_bitvalue4() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void JSAPIPermissionBitSet::clear_bitvalue4() {
  bitvalue4_ = 0u;
  clear_has_bitvalue4();
}
inline ::google::protobuf::uint32 JSAPIPermissionBitSet::bitvalue4() const {
  // @@protoc_insertion_point(field_get:micromsg.JSAPIPermissionBitSet.BitValue4)
  return bitvalue4_;
}
inline void JSAPIPermissionBitSet::set_bitvalue4(::google::protobuf::uint32 value) {
  set_has_bitvalue4();
  bitvalue4_ = value;
  // @@protoc_insertion_point(field_set:micromsg.JSAPIPermissionBitSet.BitValue4)
}

// -------------------------------------------------------------------

// GeneralControlBitSet

// required uint32 BitValue = 1;
inline bool GeneralControlBitSet::has_bitvalue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GeneralControlBitSet::set_has_bitvalue() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GeneralControlBitSet::clear_has_bitvalue() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GeneralControlBitSet::clear_bitvalue() {
  bitvalue_ = 0u;
  clear_has_bitvalue();
}
inline ::google::protobuf::uint32 GeneralControlBitSet::bitvalue() const {
  // @@protoc_insertion_point(field_get:micromsg.GeneralControlBitSet.BitValue)
  return bitvalue_;
}
inline void GeneralControlBitSet::set_bitvalue(::google::protobuf::uint32 value) {
  set_has_bitvalue();
  bitvalue_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GeneralControlBitSet.BitValue)
}

// -------------------------------------------------------------------

// DeepLinkBitSet

// required uint64 BitValue = 1;
inline bool DeepLinkBitSet::has_bitvalue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeepLinkBitSet::set_has_bitvalue() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeepLinkBitSet::clear_has_bitvalue() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeepLinkBitSet::clear_bitvalue() {
  bitvalue_ = GOOGLE_ULONGLONG(0);
  clear_has_bitvalue();
}
inline ::google::protobuf::uint64 DeepLinkBitSet::bitvalue() const {
  // @@protoc_insertion_point(field_get:micromsg.DeepLinkBitSet.BitValue)
  return bitvalue_;
}
inline void DeepLinkBitSet::set_bitvalue(::google::protobuf::uint64 value) {
  set_has_bitvalue();
  bitvalue_ = value;
  // @@protoc_insertion_point(field_set:micromsg.DeepLinkBitSet.BitValue)
}

// -------------------------------------------------------------------

// BizApiInfo

// optional string ApiName = 1;
inline bool BizApiInfo::has_apiname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BizApiInfo::set_has_apiname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BizApiInfo::clear_has_apiname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BizApiInfo::clear_apiname() {
  apiname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_apiname();
}
inline const ::std::string& BizApiInfo::apiname() const {
  // @@protoc_insertion_point(field_get:micromsg.BizApiInfo.ApiName)
  return apiname_.GetNoArena();
}
inline void BizApiInfo::set_apiname(const ::std::string& value) {
  set_has_apiname();
  apiname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizApiInfo.ApiName)
}
#if LANG_CXX11
inline void BizApiInfo::set_apiname(::std::string&& value) {
  set_has_apiname();
  apiname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizApiInfo.ApiName)
}
#endif
inline void BizApiInfo::set_apiname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_apiname();
  apiname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizApiInfo.ApiName)
}
inline void BizApiInfo::set_apiname(const char* value, size_t size) {
  set_has_apiname();
  apiname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizApiInfo.ApiName)
}
inline ::std::string* BizApiInfo::mutable_apiname() {
  set_has_apiname();
  // @@protoc_insertion_point(field_mutable:micromsg.BizApiInfo.ApiName)
  return apiname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BizApiInfo::release_apiname() {
  // @@protoc_insertion_point(field_release:micromsg.BizApiInfo.ApiName)
  clear_has_apiname();
  return apiname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BizApiInfo::set_allocated_apiname(::std::string* apiname) {
  if (apiname != NULL) {
    set_has_apiname();
  } else {
    clear_has_apiname();
  }
  apiname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), apiname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizApiInfo.ApiName)
}

// -------------------------------------------------------------------

// BizScopeInfo

// optional string Scope = 1;
inline bool BizScopeInfo::has_scope() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BizScopeInfo::set_has_scope() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BizScopeInfo::clear_has_scope() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BizScopeInfo::clear_scope() {
  scope_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_scope();
}
inline const ::std::string& BizScopeInfo::scope() const {
  // @@protoc_insertion_point(field_get:micromsg.BizScopeInfo.Scope)
  return scope_.GetNoArena();
}
inline void BizScopeInfo::set_scope(const ::std::string& value) {
  set_has_scope();
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizScopeInfo.Scope)
}
#if LANG_CXX11
inline void BizScopeInfo::set_scope(::std::string&& value) {
  set_has_scope();
  scope_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizScopeInfo.Scope)
}
#endif
inline void BizScopeInfo::set_scope(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_scope();
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizScopeInfo.Scope)
}
inline void BizScopeInfo::set_scope(const char* value, size_t size) {
  set_has_scope();
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizScopeInfo.Scope)
}
inline ::std::string* BizScopeInfo::mutable_scope() {
  set_has_scope();
  // @@protoc_insertion_point(field_mutable:micromsg.BizScopeInfo.Scope)
  return scope_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BizScopeInfo::release_scope() {
  // @@protoc_insertion_point(field_release:micromsg.BizScopeInfo.Scope)
  clear_has_scope();
  return scope_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BizScopeInfo::set_allocated_scope(::std::string* scope) {
  if (scope != NULL) {
    set_has_scope();
  } else {
    clear_has_scope();
  }
  scope_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scope);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizScopeInfo.Scope)
}

// required uint32 ScopeStatus = 2;
inline bool BizScopeInfo::has_scopestatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BizScopeInfo::set_has_scopestatus() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BizScopeInfo::clear_has_scopestatus() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BizScopeInfo::clear_scopestatus() {
  scopestatus_ = 0u;
  clear_has_scopestatus();
}
inline ::google::protobuf::uint32 BizScopeInfo::scopestatus() const {
  // @@protoc_insertion_point(field_get:micromsg.BizScopeInfo.ScopeStatus)
  return scopestatus_;
}
inline void BizScopeInfo::set_scopestatus(::google::protobuf::uint32 value) {
  set_has_scopestatus();
  scopestatus_ = value;
  // @@protoc_insertion_point(field_set:micromsg.BizScopeInfo.ScopeStatus)
}

// optional string ScopeDesc = 3;
inline bool BizScopeInfo::has_scopedesc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BizScopeInfo::set_has_scopedesc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BizScopeInfo::clear_has_scopedesc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BizScopeInfo::clear_scopedesc() {
  scopedesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_scopedesc();
}
inline const ::std::string& BizScopeInfo::scopedesc() const {
  // @@protoc_insertion_point(field_get:micromsg.BizScopeInfo.ScopeDesc)
  return scopedesc_.GetNoArena();
}
inline void BizScopeInfo::set_scopedesc(const ::std::string& value) {
  set_has_scopedesc();
  scopedesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizScopeInfo.ScopeDesc)
}
#if LANG_CXX11
inline void BizScopeInfo::set_scopedesc(::std::string&& value) {
  set_has_scopedesc();
  scopedesc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizScopeInfo.ScopeDesc)
}
#endif
inline void BizScopeInfo::set_scopedesc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_scopedesc();
  scopedesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizScopeInfo.ScopeDesc)
}
inline void BizScopeInfo::set_scopedesc(const char* value, size_t size) {
  set_has_scopedesc();
  scopedesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizScopeInfo.ScopeDesc)
}
inline ::std::string* BizScopeInfo::mutable_scopedesc() {
  set_has_scopedesc();
  // @@protoc_insertion_point(field_mutable:micromsg.BizScopeInfo.ScopeDesc)
  return scopedesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BizScopeInfo::release_scopedesc() {
  // @@protoc_insertion_point(field_release:micromsg.BizScopeInfo.ScopeDesc)
  clear_has_scopedesc();
  return scopedesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BizScopeInfo::set_allocated_scopedesc(::std::string* scopedesc) {
  if (scopedesc != NULL) {
    set_has_scopedesc();
  } else {
    clear_has_scopedesc();
  }
  scopedesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scopedesc);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizScopeInfo.ScopeDesc)
}

// required uint32 ApiCount = 4;
inline bool BizScopeInfo::has_apicount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BizScopeInfo::set_has_apicount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BizScopeInfo::clear_has_apicount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BizScopeInfo::clear_apicount() {
  apicount_ = 0u;
  clear_has_apicount();
}
inline ::google::protobuf::uint32 BizScopeInfo::apicount() const {
  // @@protoc_insertion_point(field_get:micromsg.BizScopeInfo.ApiCount)
  return apicount_;
}
inline void BizScopeInfo::set_apicount(::google::protobuf::uint32 value) {
  set_has_apicount();
  apicount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.BizScopeInfo.ApiCount)
}

// repeated .micromsg.BizApiInfo ApiList = 5;
inline int BizScopeInfo::apilist_size() const {
  return apilist_.size();
}
inline void BizScopeInfo::clear_apilist() {
  apilist_.Clear();
}
inline const ::micromsg::BizApiInfo& BizScopeInfo::apilist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.BizScopeInfo.ApiList)
  return apilist_.Get(index);
}
inline ::micromsg::BizApiInfo* BizScopeInfo::mutable_apilist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.BizScopeInfo.ApiList)
  return apilist_.Mutable(index);
}
inline ::micromsg::BizApiInfo* BizScopeInfo::add_apilist() {
  // @@protoc_insertion_point(field_add:micromsg.BizScopeInfo.ApiList)
  return apilist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::BizApiInfo >*
BizScopeInfo::mutable_apilist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.BizScopeInfo.ApiList)
  return &apilist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::BizApiInfo >&
BizScopeInfo::apilist() const {
  // @@protoc_insertion_point(field_list:micromsg.BizScopeInfo.ApiList)
  return apilist_;
}

// -------------------------------------------------------------------

// YYBStruct

// optional uint32 AndroidDownloadFlag = 1;
inline bool YYBStruct::has_androiddownloadflag() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void YYBStruct::set_has_androiddownloadflag() {
  _has_bits_[0] |= 0x00000020u;
}
inline void YYBStruct::clear_has_androiddownloadflag() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void YYBStruct::clear_androiddownloadflag() {
  androiddownloadflag_ = 0u;
  clear_has_androiddownloadflag();
}
inline ::google::protobuf::uint32 YYBStruct::androiddownloadflag() const {
  // @@protoc_insertion_point(field_get:micromsg.YYBStruct.AndroidDownloadFlag)
  return androiddownloadflag_;
}
inline void YYBStruct::set_androiddownloadflag(::google::protobuf::uint32 value) {
  set_has_androiddownloadflag();
  androiddownloadflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.YYBStruct.AndroidDownloadFlag)
}

// optional string DownloadUrl = 2;
inline bool YYBStruct::has_downloadurl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void YYBStruct::set_has_downloadurl() {
  _has_bits_[0] |= 0x00000001u;
}
inline void YYBStruct::clear_has_downloadurl() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void YYBStruct::clear_downloadurl() {
  downloadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_downloadurl();
}
inline const ::std::string& YYBStruct::downloadurl() const {
  // @@protoc_insertion_point(field_get:micromsg.YYBStruct.DownloadUrl)
  return downloadurl_.GetNoArena();
}
inline void YYBStruct::set_downloadurl(const ::std::string& value) {
  set_has_downloadurl();
  downloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.YYBStruct.DownloadUrl)
}
#if LANG_CXX11
inline void YYBStruct::set_downloadurl(::std::string&& value) {
  set_has_downloadurl();
  downloadurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.YYBStruct.DownloadUrl)
}
#endif
inline void YYBStruct::set_downloadurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_downloadurl();
  downloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.YYBStruct.DownloadUrl)
}
inline void YYBStruct::set_downloadurl(const char* value, size_t size) {
  set_has_downloadurl();
  downloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.YYBStruct.DownloadUrl)
}
inline ::std::string* YYBStruct::mutable_downloadurl() {
  set_has_downloadurl();
  // @@protoc_insertion_point(field_mutable:micromsg.YYBStruct.DownloadUrl)
  return downloadurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YYBStruct::release_downloadurl() {
  // @@protoc_insertion_point(field_release:micromsg.YYBStruct.DownloadUrl)
  clear_has_downloadurl();
  return downloadurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YYBStruct::set_allocated_downloadurl(::std::string* downloadurl) {
  if (downloadurl != NULL) {
    set_has_downloadurl();
  } else {
    clear_has_downloadurl();
  }
  downloadurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), downloadurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.YYBStruct.DownloadUrl)
}

// optional string ApkMd5 = 3;
inline bool YYBStruct::has_apkmd5() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void YYBStruct::set_has_apkmd5() {
  _has_bits_[0] |= 0x00000002u;
}
inline void YYBStruct::clear_has_apkmd5() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void YYBStruct::clear_apkmd5() {
  apkmd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_apkmd5();
}
inline const ::std::string& YYBStruct::apkmd5() const {
  // @@protoc_insertion_point(field_get:micromsg.YYBStruct.ApkMd5)
  return apkmd5_.GetNoArena();
}
inline void YYBStruct::set_apkmd5(const ::std::string& value) {
  set_has_apkmd5();
  apkmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.YYBStruct.ApkMd5)
}
#if LANG_CXX11
inline void YYBStruct::set_apkmd5(::std::string&& value) {
  set_has_apkmd5();
  apkmd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.YYBStruct.ApkMd5)
}
#endif
inline void YYBStruct::set_apkmd5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_apkmd5();
  apkmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.YYBStruct.ApkMd5)
}
inline void YYBStruct::set_apkmd5(const char* value, size_t size) {
  set_has_apkmd5();
  apkmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.YYBStruct.ApkMd5)
}
inline ::std::string* YYBStruct::mutable_apkmd5() {
  set_has_apkmd5();
  // @@protoc_insertion_point(field_mutable:micromsg.YYBStruct.ApkMd5)
  return apkmd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YYBStruct::release_apkmd5() {
  // @@protoc_insertion_point(field_release:micromsg.YYBStruct.ApkMd5)
  clear_has_apkmd5();
  return apkmd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YYBStruct::set_allocated_apkmd5(::std::string* apkmd5) {
  if (apkmd5 != NULL) {
    set_has_apkmd5();
  } else {
    clear_has_apkmd5();
  }
  apkmd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), apkmd5);
  // @@protoc_insertion_point(field_set_allocated:micromsg.YYBStruct.ApkMd5)
}

// optional string PreemptiveUrl = 4;
inline bool YYBStruct::has_preemptiveurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void YYBStruct::set_has_preemptiveurl() {
  _has_bits_[0] |= 0x00000004u;
}
inline void YYBStruct::clear_has_preemptiveurl() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void YYBStruct::clear_preemptiveurl() {
  preemptiveurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_preemptiveurl();
}
inline const ::std::string& YYBStruct::preemptiveurl() const {
  // @@protoc_insertion_point(field_get:micromsg.YYBStruct.PreemptiveUrl)
  return preemptiveurl_.GetNoArena();
}
inline void YYBStruct::set_preemptiveurl(const ::std::string& value) {
  set_has_preemptiveurl();
  preemptiveurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.YYBStruct.PreemptiveUrl)
}
#if LANG_CXX11
inline void YYBStruct::set_preemptiveurl(::std::string&& value) {
  set_has_preemptiveurl();
  preemptiveurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.YYBStruct.PreemptiveUrl)
}
#endif
inline void YYBStruct::set_preemptiveurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_preemptiveurl();
  preemptiveurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.YYBStruct.PreemptiveUrl)
}
inline void YYBStruct::set_preemptiveurl(const char* value, size_t size) {
  set_has_preemptiveurl();
  preemptiveurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.YYBStruct.PreemptiveUrl)
}
inline ::std::string* YYBStruct::mutable_preemptiveurl() {
  set_has_preemptiveurl();
  // @@protoc_insertion_point(field_mutable:micromsg.YYBStruct.PreemptiveUrl)
  return preemptiveurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YYBStruct::release_preemptiveurl() {
  // @@protoc_insertion_point(field_release:micromsg.YYBStruct.PreemptiveUrl)
  clear_has_preemptiveurl();
  return preemptiveurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YYBStruct::set_allocated_preemptiveurl(::std::string* preemptiveurl) {
  if (preemptiveurl != NULL) {
    set_has_preemptiveurl();
  } else {
    clear_has_preemptiveurl();
  }
  preemptiveurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), preemptiveurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.YYBStruct.PreemptiveUrl)
}

// optional string ExtInfo = 5;
inline bool YYBStruct::has_extinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void YYBStruct::set_has_extinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void YYBStruct::clear_has_extinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void YYBStruct::clear_extinfo() {
  extinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_extinfo();
}
inline const ::std::string& YYBStruct::extinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.YYBStruct.ExtInfo)
  return extinfo_.GetNoArena();
}
inline void YYBStruct::set_extinfo(const ::std::string& value) {
  set_has_extinfo();
  extinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.YYBStruct.ExtInfo)
}
#if LANG_CXX11
inline void YYBStruct::set_extinfo(::std::string&& value) {
  set_has_extinfo();
  extinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.YYBStruct.ExtInfo)
}
#endif
inline void YYBStruct::set_extinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_extinfo();
  extinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.YYBStruct.ExtInfo)
}
inline void YYBStruct::set_extinfo(const char* value, size_t size) {
  set_has_extinfo();
  extinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.YYBStruct.ExtInfo)
}
inline ::std::string* YYBStruct::mutable_extinfo() {
  set_has_extinfo();
  // @@protoc_insertion_point(field_mutable:micromsg.YYBStruct.ExtInfo)
  return extinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YYBStruct::release_extinfo() {
  // @@protoc_insertion_point(field_release:micromsg.YYBStruct.ExtInfo)
  clear_has_extinfo();
  return extinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YYBStruct::set_allocated_extinfo(::std::string* extinfo) {
  if (extinfo != NULL) {
    set_has_extinfo();
  } else {
    clear_has_extinfo();
  }
  extinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extinfo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.YYBStruct.ExtInfo)
}

// optional string DownloadTipsWording = 6;
inline bool YYBStruct::has_downloadtipswording() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void YYBStruct::set_has_downloadtipswording() {
  _has_bits_[0] |= 0x00000010u;
}
inline void YYBStruct::clear_has_downloadtipswording() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void YYBStruct::clear_downloadtipswording() {
  downloadtipswording_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_downloadtipswording();
}
inline const ::std::string& YYBStruct::downloadtipswording() const {
  // @@protoc_insertion_point(field_get:micromsg.YYBStruct.DownloadTipsWording)
  return downloadtipswording_.GetNoArena();
}
inline void YYBStruct::set_downloadtipswording(const ::std::string& value) {
  set_has_downloadtipswording();
  downloadtipswording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.YYBStruct.DownloadTipsWording)
}
#if LANG_CXX11
inline void YYBStruct::set_downloadtipswording(::std::string&& value) {
  set_has_downloadtipswording();
  downloadtipswording_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.YYBStruct.DownloadTipsWording)
}
#endif
inline void YYBStruct::set_downloadtipswording(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_downloadtipswording();
  downloadtipswording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.YYBStruct.DownloadTipsWording)
}
inline void YYBStruct::set_downloadtipswording(const char* value, size_t size) {
  set_has_downloadtipswording();
  downloadtipswording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.YYBStruct.DownloadTipsWording)
}
inline ::std::string* YYBStruct::mutable_downloadtipswording() {
  set_has_downloadtipswording();
  // @@protoc_insertion_point(field_mutable:micromsg.YYBStruct.DownloadTipsWording)
  return downloadtipswording_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* YYBStruct::release_downloadtipswording() {
  // @@protoc_insertion_point(field_release:micromsg.YYBStruct.DownloadTipsWording)
  clear_has_downloadtipswording();
  return downloadtipswording_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void YYBStruct::set_allocated_downloadtipswording(::std::string* downloadtipswording) {
  if (downloadtipswording != NULL) {
    set_has_downloadtipswording();
  } else {
    clear_has_downloadtipswording();
  }
  downloadtipswording_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), downloadtipswording);
  // @@protoc_insertion_point(field_set_allocated:micromsg.YYBStruct.DownloadTipsWording)
}

// optional int32 SupportedVersionCode = 7;
inline bool YYBStruct::has_supportedversioncode() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void YYBStruct::set_has_supportedversioncode() {
  _has_bits_[0] |= 0x00000040u;
}
inline void YYBStruct::clear_has_supportedversioncode() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void YYBStruct::clear_supportedversioncode() {
  supportedversioncode_ = 0;
  clear_has_supportedversioncode();
}
inline ::google::protobuf::int32 YYBStruct::supportedversioncode() const {
  // @@protoc_insertion_point(field_get:micromsg.YYBStruct.SupportedVersionCode)
  return supportedversioncode_;
}
inline void YYBStruct::set_supportedversioncode(::google::protobuf::int32 value) {
  set_has_supportedversioncode();
  supportedversioncode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.YYBStruct.SupportedVersionCode)
}

// -------------------------------------------------------------------

// GetA8KeyResp

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetA8KeyResp::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GetA8KeyResp::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GetA8KeyResp::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GetA8KeyResp::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetA8KeyResp::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyResp.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetA8KeyResp::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyResp.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetA8KeyResp::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyResp.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetA8KeyResp::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyResp.BaseResponse)
}

// optional string FullURL = 2;
inline bool GetA8KeyResp::has_fullurl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetA8KeyResp::set_has_fullurl() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetA8KeyResp::clear_has_fullurl() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetA8KeyResp::clear_fullurl() {
  fullurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fullurl();
}
inline const ::std::string& GetA8KeyResp::fullurl() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyResp.FullURL)
  return fullurl_.GetNoArena();
}
inline void GetA8KeyResp::set_fullurl(const ::std::string& value) {
  set_has_fullurl();
  fullurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyResp.FullURL)
}
#if LANG_CXX11
inline void GetA8KeyResp::set_fullurl(::std::string&& value) {
  set_has_fullurl();
  fullurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetA8KeyResp.FullURL)
}
#endif
inline void GetA8KeyResp::set_fullurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_fullurl();
  fullurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetA8KeyResp.FullURL)
}
inline void GetA8KeyResp::set_fullurl(const char* value, size_t size) {
  set_has_fullurl();
  fullurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetA8KeyResp.FullURL)
}
inline ::std::string* GetA8KeyResp::mutable_fullurl() {
  set_has_fullurl();
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyResp.FullURL)
  return fullurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetA8KeyResp::release_fullurl() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyResp.FullURL)
  clear_has_fullurl();
  return fullurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetA8KeyResp::set_allocated_fullurl(::std::string* fullurl) {
  if (fullurl != NULL) {
    set_has_fullurl();
  } else {
    clear_has_fullurl();
  }
  fullurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fullurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyResp.FullURL)
}

// optional string A8Key = 3;
inline bool GetA8KeyResp::has_a8key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetA8KeyResp::set_has_a8key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetA8KeyResp::clear_has_a8key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetA8KeyResp::clear_a8key() {
  a8key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_a8key();
}
inline const ::std::string& GetA8KeyResp::a8key() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyResp.A8Key)
  return a8key_.GetNoArena();
}
inline void GetA8KeyResp::set_a8key(const ::std::string& value) {
  set_has_a8key();
  a8key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyResp.A8Key)
}
#if LANG_CXX11
inline void GetA8KeyResp::set_a8key(::std::string&& value) {
  set_has_a8key();
  a8key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetA8KeyResp.A8Key)
}
#endif
inline void GetA8KeyResp::set_a8key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_a8key();
  a8key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetA8KeyResp.A8Key)
}
inline void GetA8KeyResp::set_a8key(const char* value, size_t size) {
  set_has_a8key();
  a8key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetA8KeyResp.A8Key)
}
inline ::std::string* GetA8KeyResp::mutable_a8key() {
  set_has_a8key();
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyResp.A8Key)
  return a8key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetA8KeyResp::release_a8key() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyResp.A8Key)
  clear_has_a8key();
  return a8key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetA8KeyResp::set_allocated_a8key(::std::string* a8key) {
  if (a8key != NULL) {
    set_has_a8key();
  } else {
    clear_has_a8key();
  }
  a8key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), a8key);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyResp.A8Key)
}

// optional uint32 ActionCode = 4;
inline bool GetA8KeyResp::has_actioncode() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void GetA8KeyResp::set_has_actioncode() {
  _has_bits_[0] |= 0x00004000u;
}
inline void GetA8KeyResp::clear_has_actioncode() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void GetA8KeyResp::clear_actioncode() {
  actioncode_ = 0u;
  clear_has_actioncode();
}
inline ::google::protobuf::uint32 GetA8KeyResp::actioncode() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyResp.ActionCode)
  return actioncode_;
}
inline void GetA8KeyResp::set_actioncode(::google::protobuf::uint32 value) {
  set_has_actioncode();
  actioncode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyResp.ActionCode)
}

// optional string Title = 5;
inline bool GetA8KeyResp::has_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetA8KeyResp::set_has_title() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetA8KeyResp::clear_has_title() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetA8KeyResp::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& GetA8KeyResp::title() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyResp.Title)
  return title_.GetNoArena();
}
inline void GetA8KeyResp::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyResp.Title)
}
#if LANG_CXX11
inline void GetA8KeyResp::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetA8KeyResp.Title)
}
#endif
inline void GetA8KeyResp::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetA8KeyResp.Title)
}
inline void GetA8KeyResp::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetA8KeyResp.Title)
}
inline ::std::string* GetA8KeyResp::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyResp.Title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetA8KeyResp::release_title() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyResp.Title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetA8KeyResp::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyResp.Title)
}

// optional string Content = 6;
inline bool GetA8KeyResp::has_content() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetA8KeyResp::set_has_content() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetA8KeyResp::clear_has_content() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetA8KeyResp::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& GetA8KeyResp::content() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyResp.Content)
  return content_.GetNoArena();
}
inline void GetA8KeyResp::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyResp.Content)
}
#if LANG_CXX11
inline void GetA8KeyResp::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetA8KeyResp.Content)
}
#endif
inline void GetA8KeyResp::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetA8KeyResp.Content)
}
inline void GetA8KeyResp::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetA8KeyResp.Content)
}
inline ::std::string* GetA8KeyResp::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyResp.Content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetA8KeyResp::release_content() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyResp.Content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetA8KeyResp::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyResp.Content)
}

// optional .micromsg.JSAPIPermissionBitSet JSAPIPermission = 7;
inline bool GetA8KeyResp::has_jsapipermission() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GetA8KeyResp::set_has_jsapipermission() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GetA8KeyResp::clear_has_jsapipermission() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GetA8KeyResp::clear_jsapipermission() {
  if (jsapipermission_ != NULL) jsapipermission_->::micromsg::JSAPIPermissionBitSet::Clear();
  clear_has_jsapipermission();
}
inline const ::micromsg::JSAPIPermissionBitSet& GetA8KeyResp::jsapipermission() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyResp.JSAPIPermission)
  return jsapipermission_ != NULL ? *jsapipermission_
                         : *::micromsg::JSAPIPermissionBitSet::internal_default_instance();
}
inline ::micromsg::JSAPIPermissionBitSet* GetA8KeyResp::mutable_jsapipermission() {
  set_has_jsapipermission();
  if (jsapipermission_ == NULL) {
    jsapipermission_ = new ::micromsg::JSAPIPermissionBitSet;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyResp.JSAPIPermission)
  return jsapipermission_;
}
inline ::micromsg::JSAPIPermissionBitSet* GetA8KeyResp::release_jsapipermission() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyResp.JSAPIPermission)
  clear_has_jsapipermission();
  ::micromsg::JSAPIPermissionBitSet* temp = jsapipermission_;
  jsapipermission_ = NULL;
  return temp;
}
inline void GetA8KeyResp::set_allocated_jsapipermission(::micromsg::JSAPIPermissionBitSet* jsapipermission) {
  delete jsapipermission_;
  jsapipermission_ = jsapipermission;
  if (jsapipermission) {
    set_has_jsapipermission();
  } else {
    clear_has_jsapipermission();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyResp.JSAPIPermission)
}

// optional .micromsg.GeneralControlBitSet GeneralControlBitSet = 8;
inline bool GetA8KeyResp::has_generalcontrolbitset() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GetA8KeyResp::set_has_generalcontrolbitset() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GetA8KeyResp::clear_has_generalcontrolbitset() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GetA8KeyResp::clear_generalcontrolbitset() {
  if (generalcontrolbitset_ != NULL) generalcontrolbitset_->::micromsg::GeneralControlBitSet::Clear();
  clear_has_generalcontrolbitset();
}
inline const ::micromsg::GeneralControlBitSet& GetA8KeyResp::generalcontrolbitset() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyResp.GeneralControlBitSet)
  return generalcontrolbitset_ != NULL ? *generalcontrolbitset_
                         : *::micromsg::GeneralControlBitSet::internal_default_instance();
}
inline ::micromsg::GeneralControlBitSet* GetA8KeyResp::mutable_generalcontrolbitset() {
  set_has_generalcontrolbitset();
  if (generalcontrolbitset_ == NULL) {
    generalcontrolbitset_ = new ::micromsg::GeneralControlBitSet;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyResp.GeneralControlBitSet)
  return generalcontrolbitset_;
}
inline ::micromsg::GeneralControlBitSet* GetA8KeyResp::release_generalcontrolbitset() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyResp.GeneralControlBitSet)
  clear_has_generalcontrolbitset();
  ::micromsg::GeneralControlBitSet* temp = generalcontrolbitset_;
  generalcontrolbitset_ = NULL;
  return temp;
}
inline void GetA8KeyResp::set_allocated_generalcontrolbitset(::micromsg::GeneralControlBitSet* generalcontrolbitset) {
  delete generalcontrolbitset_;
  generalcontrolbitset_ = generalcontrolbitset;
  if (generalcontrolbitset) {
    set_has_generalcontrolbitset();
  } else {
    clear_has_generalcontrolbitset();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyResp.GeneralControlBitSet)
}

// optional string UserName = 9;
inline bool GetA8KeyResp::has_username() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetA8KeyResp::set_has_username() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetA8KeyResp::clear_has_username() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetA8KeyResp::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& GetA8KeyResp::username() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyResp.UserName)
  return username_.GetNoArena();
}
inline void GetA8KeyResp::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyResp.UserName)
}
#if LANG_CXX11
inline void GetA8KeyResp::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetA8KeyResp.UserName)
}
#endif
inline void GetA8KeyResp::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetA8KeyResp.UserName)
}
inline void GetA8KeyResp::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetA8KeyResp.UserName)
}
inline ::std::string* GetA8KeyResp::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyResp.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetA8KeyResp::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyResp.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetA8KeyResp::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyResp.UserName)
}

// optional string ShareURL = 15;
inline bool GetA8KeyResp::has_shareurl() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetA8KeyResp::set_has_shareurl() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetA8KeyResp::clear_has_shareurl() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetA8KeyResp::clear_shareurl() {
  shareurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_shareurl();
}
inline const ::std::string& GetA8KeyResp::shareurl() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyResp.ShareURL)
  return shareurl_.GetNoArena();
}
inline void GetA8KeyResp::set_shareurl(const ::std::string& value) {
  set_has_shareurl();
  shareurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyResp.ShareURL)
}
#if LANG_CXX11
inline void GetA8KeyResp::set_shareurl(::std::string&& value) {
  set_has_shareurl();
  shareurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetA8KeyResp.ShareURL)
}
#endif
inline void GetA8KeyResp::set_shareurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_shareurl();
  shareurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetA8KeyResp.ShareURL)
}
inline void GetA8KeyResp::set_shareurl(const char* value, size_t size) {
  set_has_shareurl();
  shareurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetA8KeyResp.ShareURL)
}
inline ::std::string* GetA8KeyResp::mutable_shareurl() {
  set_has_shareurl();
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyResp.ShareURL)
  return shareurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetA8KeyResp::release_shareurl() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyResp.ShareURL)
  clear_has_shareurl();
  return shareurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetA8KeyResp::set_allocated_shareurl(::std::string* shareurl) {
  if (shareurl != NULL) {
    set_has_shareurl();
  } else {
    clear_has_shareurl();
  }
  shareurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shareurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyResp.ShareURL)
}

// optional uint32 ScopeCount = 16;
inline bool GetA8KeyResp::has_scopecount() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void GetA8KeyResp::set_has_scopecount() {
  _has_bits_[0] |= 0x00008000u;
}
inline void GetA8KeyResp::clear_has_scopecount() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void GetA8KeyResp::clear_scopecount() {
  scopecount_ = 0u;
  clear_has_scopecount();
}
inline ::google::protobuf::uint32 GetA8KeyResp::scopecount() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyResp.ScopeCount)
  return scopecount_;
}
inline void GetA8KeyResp::set_scopecount(::google::protobuf::uint32 value) {
  set_has_scopecount();
  scopecount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyResp.ScopeCount)
}

// repeated .micromsg.BizScopeInfo ScopeList = 17;
inline int GetA8KeyResp::scopelist_size() const {
  return scopelist_.size();
}
inline void GetA8KeyResp::clear_scopelist() {
  scopelist_.Clear();
}
inline const ::micromsg::BizScopeInfo& GetA8KeyResp::scopelist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyResp.ScopeList)
  return scopelist_.Get(index);
}
inline ::micromsg::BizScopeInfo* GetA8KeyResp::mutable_scopelist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyResp.ScopeList)
  return scopelist_.Mutable(index);
}
inline ::micromsg::BizScopeInfo* GetA8KeyResp::add_scopelist() {
  // @@protoc_insertion_point(field_add:micromsg.GetA8KeyResp.ScopeList)
  return scopelist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::BizScopeInfo >*
GetA8KeyResp::mutable_scopelist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetA8KeyResp.ScopeList)
  return &scopelist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::BizScopeInfo >&
GetA8KeyResp::scopelist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetA8KeyResp.ScopeList)
  return scopelist_;
}

// optional string AntispamTicket = 18;
inline bool GetA8KeyResp::has_antispamticket() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GetA8KeyResp::set_has_antispamticket() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GetA8KeyResp::clear_has_antispamticket() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GetA8KeyResp::clear_antispamticket() {
  antispamticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_antispamticket();
}
inline const ::std::string& GetA8KeyResp::antispamticket() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyResp.AntispamTicket)
  return antispamticket_.GetNoArena();
}
inline void GetA8KeyResp::set_antispamticket(const ::std::string& value) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyResp.AntispamTicket)
}
#if LANG_CXX11
inline void GetA8KeyResp::set_antispamticket(::std::string&& value) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetA8KeyResp.AntispamTicket)
}
#endif
inline void GetA8KeyResp::set_antispamticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetA8KeyResp.AntispamTicket)
}
inline void GetA8KeyResp::set_antispamticket(const char* value, size_t size) {
  set_has_antispamticket();
  antispamticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetA8KeyResp.AntispamTicket)
}
inline ::std::string* GetA8KeyResp::mutable_antispamticket() {
  set_has_antispamticket();
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyResp.AntispamTicket)
  return antispamticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetA8KeyResp::release_antispamticket() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyResp.AntispamTicket)
  clear_has_antispamticket();
  return antispamticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetA8KeyResp::set_allocated_antispamticket(::std::string* antispamticket) {
  if (antispamticket != NULL) {
    set_has_antispamticket();
  } else {
    clear_has_antispamticket();
  }
  antispamticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), antispamticket);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyResp.AntispamTicket)
}

// optional string SSID = 20;
inline bool GetA8KeyResp::has_ssid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GetA8KeyResp::set_has_ssid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GetA8KeyResp::clear_has_ssid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GetA8KeyResp::clear_ssid() {
  ssid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ssid();
}
inline const ::std::string& GetA8KeyResp::ssid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyResp.SSID)
  return ssid_.GetNoArena();
}
inline void GetA8KeyResp::set_ssid(const ::std::string& value) {
  set_has_ssid();
  ssid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyResp.SSID)
}
#if LANG_CXX11
inline void GetA8KeyResp::set_ssid(::std::string&& value) {
  set_has_ssid();
  ssid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetA8KeyResp.SSID)
}
#endif
inline void GetA8KeyResp::set_ssid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ssid();
  ssid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetA8KeyResp.SSID)
}
inline void GetA8KeyResp::set_ssid(const char* value, size_t size) {
  set_has_ssid();
  ssid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetA8KeyResp.SSID)
}
inline ::std::string* GetA8KeyResp::mutable_ssid() {
  set_has_ssid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyResp.SSID)
  return ssid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetA8KeyResp::release_ssid() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyResp.SSID)
  clear_has_ssid();
  return ssid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetA8KeyResp::set_allocated_ssid(::std::string* ssid) {
  if (ssid != NULL) {
    set_has_ssid();
  } else {
    clear_has_ssid();
  }
  ssid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ssid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyResp.SSID)
}

// optional string MID = 21;
inline bool GetA8KeyResp::has_mid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GetA8KeyResp::set_has_mid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GetA8KeyResp::clear_has_mid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GetA8KeyResp::clear_mid() {
  mid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mid();
}
inline const ::std::string& GetA8KeyResp::mid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyResp.MID)
  return mid_.GetNoArena();
}
inline void GetA8KeyResp::set_mid(const ::std::string& value) {
  set_has_mid();
  mid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetA8KeyResp.MID)
}
#if LANG_CXX11
inline void GetA8KeyResp::set_mid(::std::string&& value) {
  set_has_mid();
  mid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetA8KeyResp.MID)
}
#endif
inline void GetA8KeyResp::set_mid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mid();
  mid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetA8KeyResp.MID)
}
inline void GetA8KeyResp::set_mid(const char* value, size_t size) {
  set_has_mid();
  mid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetA8KeyResp.MID)
}
inline ::std::string* GetA8KeyResp::mutable_mid() {
  set_has_mid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyResp.MID)
  return mid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetA8KeyResp::release_mid() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyResp.MID)
  clear_has_mid();
  return mid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetA8KeyResp::set_allocated_mid(::std::string* mid) {
  if (mid != NULL) {
    set_has_mid();
  } else {
    clear_has_mid();
  }
  mid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyResp.MID)
}

// optional .micromsg.DeepLinkBitSet DeepLinkBitSet = 22;
inline bool GetA8KeyResp::has_deeplinkbitset() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GetA8KeyResp::set_has_deeplinkbitset() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GetA8KeyResp::clear_has_deeplinkbitset() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GetA8KeyResp::clear_deeplinkbitset() {
  if (deeplinkbitset_ != NULL) deeplinkbitset_->::micromsg::DeepLinkBitSet::Clear();
  clear_has_deeplinkbitset();
}
inline const ::micromsg::DeepLinkBitSet& GetA8KeyResp::deeplinkbitset() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyResp.DeepLinkBitSet)
  return deeplinkbitset_ != NULL ? *deeplinkbitset_
                         : *::micromsg::DeepLinkBitSet::internal_default_instance();
}
inline ::micromsg::DeepLinkBitSet* GetA8KeyResp::mutable_deeplinkbitset() {
  set_has_deeplinkbitset();
  if (deeplinkbitset_ == NULL) {
    deeplinkbitset_ = new ::micromsg::DeepLinkBitSet;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyResp.DeepLinkBitSet)
  return deeplinkbitset_;
}
inline ::micromsg::DeepLinkBitSet* GetA8KeyResp::release_deeplinkbitset() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyResp.DeepLinkBitSet)
  clear_has_deeplinkbitset();
  ::micromsg::DeepLinkBitSet* temp = deeplinkbitset_;
  deeplinkbitset_ = NULL;
  return temp;
}
inline void GetA8KeyResp::set_allocated_deeplinkbitset(::micromsg::DeepLinkBitSet* deeplinkbitset) {
  delete deeplinkbitset_;
  deeplinkbitset_ = deeplinkbitset;
  if (deeplinkbitset) {
    set_has_deeplinkbitset();
  } else {
    clear_has_deeplinkbitset();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyResp.DeepLinkBitSet)
}

// optional .micromsg.SKBuiltinBuffer_t JSAPIControlBytes = 23;
inline bool GetA8KeyResp::has_jsapicontrolbytes() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GetA8KeyResp::set_has_jsapicontrolbytes() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GetA8KeyResp::clear_has_jsapicontrolbytes() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GetA8KeyResp::clear_jsapicontrolbytes() {
  if (jsapicontrolbytes_ != NULL) jsapicontrolbytes_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_jsapicontrolbytes();
}
inline const ::micromsg::SKBuiltinBuffer_t& GetA8KeyResp::jsapicontrolbytes() const {
  // @@protoc_insertion_point(field_get:micromsg.GetA8KeyResp.JSAPIControlBytes)
  return jsapicontrolbytes_ != NULL ? *jsapicontrolbytes_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* GetA8KeyResp::mutable_jsapicontrolbytes() {
  set_has_jsapicontrolbytes();
  if (jsapicontrolbytes_ == NULL) {
    jsapicontrolbytes_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetA8KeyResp.JSAPIControlBytes)
  return jsapicontrolbytes_;
}
inline ::micromsg::SKBuiltinBuffer_t* GetA8KeyResp::release_jsapicontrolbytes() {
  // @@protoc_insertion_point(field_release:micromsg.GetA8KeyResp.JSAPIControlBytes)
  clear_has_jsapicontrolbytes();
  ::micromsg::SKBuiltinBuffer_t* temp = jsapicontrolbytes_;
  jsapicontrolbytes_ = NULL;
  return temp;
}
inline void GetA8KeyResp::set_allocated_jsapicontrolbytes(::micromsg::SKBuiltinBuffer_t* jsapicontrolbytes) {
  delete jsapicontrolbytes_;
  jsapicontrolbytes_ = jsapicontrolbytes;
  if (jsapicontrolbytes) {
    set_has_jsapicontrolbytes();
  } else {
    clear_has_jsapicontrolbytes();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetA8KeyResp.JSAPIControlBytes)
}

// -------------------------------------------------------------------

// AdAppList

// optional string AppID = 1;
inline bool AdAppList::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AdAppList::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AdAppList::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AdAppList::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
inline const ::std::string& AdAppList::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.AdAppList.AppID)
  return appid_.GetNoArena();
}
inline void AdAppList::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AdAppList.AppID)
}
#if LANG_CXX11
inline void AdAppList::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AdAppList.AppID)
}
#endif
inline void AdAppList::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AdAppList.AppID)
}
inline void AdAppList::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AdAppList.AppID)
}
inline ::std::string* AdAppList::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.AdAppList.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdAppList::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.AdAppList.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdAppList::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AdAppList.AppID)
}

// optional string AppCoverUrl = 2;
inline bool AdAppList::has_appcoverurl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AdAppList::set_has_appcoverurl() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AdAppList::clear_has_appcoverurl() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AdAppList::clear_appcoverurl() {
  appcoverurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appcoverurl();
}
inline const ::std::string& AdAppList::appcoverurl() const {
  // @@protoc_insertion_point(field_get:micromsg.AdAppList.AppCoverUrl)
  return appcoverurl_.GetNoArena();
}
inline void AdAppList::set_appcoverurl(const ::std::string& value) {
  set_has_appcoverurl();
  appcoverurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AdAppList.AppCoverUrl)
}
#if LANG_CXX11
inline void AdAppList::set_appcoverurl(::std::string&& value) {
  set_has_appcoverurl();
  appcoverurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AdAppList.AppCoverUrl)
}
#endif
inline void AdAppList::set_appcoverurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appcoverurl();
  appcoverurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AdAppList.AppCoverUrl)
}
inline void AdAppList::set_appcoverurl(const char* value, size_t size) {
  set_has_appcoverurl();
  appcoverurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AdAppList.AppCoverUrl)
}
inline ::std::string* AdAppList::mutable_appcoverurl() {
  set_has_appcoverurl();
  // @@protoc_insertion_point(field_mutable:micromsg.AdAppList.AppCoverUrl)
  return appcoverurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdAppList::release_appcoverurl() {
  // @@protoc_insertion_point(field_release:micromsg.AdAppList.AppCoverUrl)
  clear_has_appcoverurl();
  return appcoverurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdAppList::set_allocated_appcoverurl(::std::string* appcoverurl) {
  if (appcoverurl != NULL) {
    set_has_appcoverurl();
  } else {
    clear_has_appcoverurl();
  }
  appcoverurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appcoverurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AdAppList.AppCoverUrl)
}

// optional string AppDownloadUrl = 3;
inline bool AdAppList::has_appdownloadurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AdAppList::set_has_appdownloadurl() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AdAppList::clear_has_appdownloadurl() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AdAppList::clear_appdownloadurl() {
  appdownloadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appdownloadurl();
}
inline const ::std::string& AdAppList::appdownloadurl() const {
  // @@protoc_insertion_point(field_get:micromsg.AdAppList.AppDownloadUrl)
  return appdownloadurl_.GetNoArena();
}
inline void AdAppList::set_appdownloadurl(const ::std::string& value) {
  set_has_appdownloadurl();
  appdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AdAppList.AppDownloadUrl)
}
#if LANG_CXX11
inline void AdAppList::set_appdownloadurl(::std::string&& value) {
  set_has_appdownloadurl();
  appdownloadurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AdAppList.AppDownloadUrl)
}
#endif
inline void AdAppList::set_appdownloadurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appdownloadurl();
  appdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AdAppList.AppDownloadUrl)
}
inline void AdAppList::set_appdownloadurl(const char* value, size_t size) {
  set_has_appdownloadurl();
  appdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AdAppList.AppDownloadUrl)
}
inline ::std::string* AdAppList::mutable_appdownloadurl() {
  set_has_appdownloadurl();
  // @@protoc_insertion_point(field_mutable:micromsg.AdAppList.AppDownloadUrl)
  return appdownloadurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdAppList::release_appdownloadurl() {
  // @@protoc_insertion_point(field_release:micromsg.AdAppList.AppDownloadUrl)
  clear_has_appdownloadurl();
  return appdownloadurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdAppList::set_allocated_appdownloadurl(::std::string* appdownloadurl) {
  if (appdownloadurl != NULL) {
    set_has_appdownloadurl();
  } else {
    clear_has_appdownloadurl();
  }
  appdownloadurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appdownloadurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AdAppList.AppDownloadUrl)
}

// optional string AndroidApkMd5 = 4;
inline bool AdAppList::has_androidapkmd5() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AdAppList::set_has_androidapkmd5() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AdAppList::clear_has_androidapkmd5() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AdAppList::clear_androidapkmd5() {
  androidapkmd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_androidapkmd5();
}
inline const ::std::string& AdAppList::androidapkmd5() const {
  // @@protoc_insertion_point(field_get:micromsg.AdAppList.AndroidApkMd5)
  return androidapkmd5_.GetNoArena();
}
inline void AdAppList::set_androidapkmd5(const ::std::string& value) {
  set_has_androidapkmd5();
  androidapkmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AdAppList.AndroidApkMd5)
}
#if LANG_CXX11
inline void AdAppList::set_androidapkmd5(::std::string&& value) {
  set_has_androidapkmd5();
  androidapkmd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AdAppList.AndroidApkMd5)
}
#endif
inline void AdAppList::set_androidapkmd5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_androidapkmd5();
  androidapkmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AdAppList.AndroidApkMd5)
}
inline void AdAppList::set_androidapkmd5(const char* value, size_t size) {
  set_has_androidapkmd5();
  androidapkmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AdAppList.AndroidApkMd5)
}
inline ::std::string* AdAppList::mutable_androidapkmd5() {
  set_has_androidapkmd5();
  // @@protoc_insertion_point(field_mutable:micromsg.AdAppList.AndroidApkMd5)
  return androidapkmd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdAppList::release_androidapkmd5() {
  // @@protoc_insertion_point(field_release:micromsg.AdAppList.AndroidApkMd5)
  clear_has_androidapkmd5();
  return androidapkmd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdAppList::set_allocated_androidapkmd5(::std::string* androidapkmd5) {
  if (androidapkmd5 != NULL) {
    set_has_androidapkmd5();
  } else {
    clear_has_androidapkmd5();
  }
  androidapkmd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), androidapkmd5);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AdAppList.AndroidApkMd5)
}

// optional string AppName = 5;
inline bool AdAppList::has_appname() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AdAppList::set_has_appname() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AdAppList::clear_has_appname() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AdAppList::clear_appname() {
  appname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appname();
}
inline const ::std::string& AdAppList::appname() const {
  // @@protoc_insertion_point(field_get:micromsg.AdAppList.AppName)
  return appname_.GetNoArena();
}
inline void AdAppList::set_appname(const ::std::string& value) {
  set_has_appname();
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AdAppList.AppName)
}
#if LANG_CXX11
inline void AdAppList::set_appname(::std::string&& value) {
  set_has_appname();
  appname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AdAppList.AppName)
}
#endif
inline void AdAppList::set_appname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appname();
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AdAppList.AppName)
}
inline void AdAppList::set_appname(const char* value, size_t size) {
  set_has_appname();
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AdAppList.AppName)
}
inline ::std::string* AdAppList::mutable_appname() {
  set_has_appname();
  // @@protoc_insertion_point(field_mutable:micromsg.AdAppList.AppName)
  return appname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdAppList::release_appname() {
  // @@protoc_insertion_point(field_release:micromsg.AdAppList.AppName)
  clear_has_appname();
  return appname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdAppList::set_allocated_appname(::std::string* appname) {
  if (appname != NULL) {
    set_has_appname();
  } else {
    clear_has_appname();
  }
  appname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AdAppList.AppName)
}

// optional string AppIconUrl = 6;
inline bool AdAppList::has_appiconurl() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AdAppList::set_has_appiconurl() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AdAppList::clear_has_appiconurl() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AdAppList::clear_appiconurl() {
  appiconurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appiconurl();
}
inline const ::std::string& AdAppList::appiconurl() const {
  // @@protoc_insertion_point(field_get:micromsg.AdAppList.AppIconUrl)
  return appiconurl_.GetNoArena();
}
inline void AdAppList::set_appiconurl(const ::std::string& value) {
  set_has_appiconurl();
  appiconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AdAppList.AppIconUrl)
}
#if LANG_CXX11
inline void AdAppList::set_appiconurl(::std::string&& value) {
  set_has_appiconurl();
  appiconurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AdAppList.AppIconUrl)
}
#endif
inline void AdAppList::set_appiconurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appiconurl();
  appiconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AdAppList.AppIconUrl)
}
inline void AdAppList::set_appiconurl(const char* value, size_t size) {
  set_has_appiconurl();
  appiconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AdAppList.AppIconUrl)
}
inline ::std::string* AdAppList::mutable_appiconurl() {
  set_has_appiconurl();
  // @@protoc_insertion_point(field_mutable:micromsg.AdAppList.AppIconUrl)
  return appiconurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdAppList::release_appiconurl() {
  // @@protoc_insertion_point(field_release:micromsg.AdAppList.AppIconUrl)
  clear_has_appiconurl();
  return appiconurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdAppList::set_allocated_appiconurl(::std::string* appiconurl) {
  if (appiconurl != NULL) {
    set_has_appiconurl();
  } else {
    clear_has_appiconurl();
  }
  appiconurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appiconurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AdAppList.AppIconUrl)
}

// optional string AppSnsDesc = 7;
inline bool AdAppList::has_appsnsdesc() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AdAppList::set_has_appsnsdesc() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AdAppList::clear_has_appsnsdesc() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AdAppList::clear_appsnsdesc() {
  appsnsdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appsnsdesc();
}
inline const ::std::string& AdAppList::appsnsdesc() const {
  // @@protoc_insertion_point(field_get:micromsg.AdAppList.AppSnsDesc)
  return appsnsdesc_.GetNoArena();
}
inline void AdAppList::set_appsnsdesc(const ::std::string& value) {
  set_has_appsnsdesc();
  appsnsdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AdAppList.AppSnsDesc)
}
#if LANG_CXX11
inline void AdAppList::set_appsnsdesc(::std::string&& value) {
  set_has_appsnsdesc();
  appsnsdesc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AdAppList.AppSnsDesc)
}
#endif
inline void AdAppList::set_appsnsdesc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appsnsdesc();
  appsnsdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AdAppList.AppSnsDesc)
}
inline void AdAppList::set_appsnsdesc(const char* value, size_t size) {
  set_has_appsnsdesc();
  appsnsdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AdAppList.AppSnsDesc)
}
inline ::std::string* AdAppList::mutable_appsnsdesc() {
  set_has_appsnsdesc();
  // @@protoc_insertion_point(field_mutable:micromsg.AdAppList.AppSnsDesc)
  return appsnsdesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdAppList::release_appsnsdesc() {
  // @@protoc_insertion_point(field_release:micromsg.AdAppList.AppSnsDesc)
  clear_has_appsnsdesc();
  return appsnsdesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdAppList::set_allocated_appsnsdesc(::std::string* appsnsdesc) {
  if (appsnsdesc != NULL) {
    set_has_appsnsdesc();
  } else {
    clear_has_appsnsdesc();
  }
  appsnsdesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appsnsdesc);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AdAppList.AppSnsDesc)
}

// optional string AndroidPackageName = 8;
inline bool AdAppList::has_androidpackagename() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AdAppList::set_has_androidpackagename() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AdAppList::clear_has_androidpackagename() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AdAppList::clear_androidpackagename() {
  androidpackagename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_androidpackagename();
}
inline const ::std::string& AdAppList::androidpackagename() const {
  // @@protoc_insertion_point(field_get:micromsg.AdAppList.AndroidPackageName)
  return androidpackagename_.GetNoArena();
}
inline void AdAppList::set_androidpackagename(const ::std::string& value) {
  set_has_androidpackagename();
  androidpackagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AdAppList.AndroidPackageName)
}
#if LANG_CXX11
inline void AdAppList::set_androidpackagename(::std::string&& value) {
  set_has_androidpackagename();
  androidpackagename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AdAppList.AndroidPackageName)
}
#endif
inline void AdAppList::set_androidpackagename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_androidpackagename();
  androidpackagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AdAppList.AndroidPackageName)
}
inline void AdAppList::set_androidpackagename(const char* value, size_t size) {
  set_has_androidpackagename();
  androidpackagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AdAppList.AndroidPackageName)
}
inline ::std::string* AdAppList::mutable_androidpackagename() {
  set_has_androidpackagename();
  // @@protoc_insertion_point(field_mutable:micromsg.AdAppList.AndroidPackageName)
  return androidpackagename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdAppList::release_androidpackagename() {
  // @@protoc_insertion_point(field_release:micromsg.AdAppList.AndroidPackageName)
  clear_has_androidpackagename();
  return androidpackagename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdAppList::set_allocated_androidpackagename(::std::string* androidpackagename) {
  if (androidpackagename != NULL) {
    set_has_androidpackagename();
  } else {
    clear_has_androidpackagename();
  }
  androidpackagename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), androidpackagename);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AdAppList.AndroidPackageName)
}

// optional string GooglePlayDownloadUrl = 9;
inline bool AdAppList::has_googleplaydownloadurl() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AdAppList::set_has_googleplaydownloadurl() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AdAppList::clear_has_googleplaydownloadurl() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AdAppList::clear_googleplaydownloadurl() {
  googleplaydownloadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_googleplaydownloadurl();
}
inline const ::std::string& AdAppList::googleplaydownloadurl() const {
  // @@protoc_insertion_point(field_get:micromsg.AdAppList.GooglePlayDownloadUrl)
  return googleplaydownloadurl_.GetNoArena();
}
inline void AdAppList::set_googleplaydownloadurl(const ::std::string& value) {
  set_has_googleplaydownloadurl();
  googleplaydownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AdAppList.GooglePlayDownloadUrl)
}
#if LANG_CXX11
inline void AdAppList::set_googleplaydownloadurl(::std::string&& value) {
  set_has_googleplaydownloadurl();
  googleplaydownloadurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AdAppList.GooglePlayDownloadUrl)
}
#endif
inline void AdAppList::set_googleplaydownloadurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_googleplaydownloadurl();
  googleplaydownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AdAppList.GooglePlayDownloadUrl)
}
inline void AdAppList::set_googleplaydownloadurl(const char* value, size_t size) {
  set_has_googleplaydownloadurl();
  googleplaydownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AdAppList.GooglePlayDownloadUrl)
}
inline ::std::string* AdAppList::mutable_googleplaydownloadurl() {
  set_has_googleplaydownloadurl();
  // @@protoc_insertion_point(field_mutable:micromsg.AdAppList.GooglePlayDownloadUrl)
  return googleplaydownloadurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdAppList::release_googleplaydownloadurl() {
  // @@protoc_insertion_point(field_release:micromsg.AdAppList.GooglePlayDownloadUrl)
  clear_has_googleplaydownloadurl();
  return googleplaydownloadurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdAppList::set_allocated_googleplaydownloadurl(::std::string* googleplaydownloadurl) {
  if (googleplaydownloadurl != NULL) {
    set_has_googleplaydownloadurl();
  } else {
    clear_has_googleplaydownloadurl();
  }
  googleplaydownloadurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), googleplaydownloadurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AdAppList.GooglePlayDownloadUrl)
}

// optional .micromsg.YYBStruct SYYB = 10;
inline bool AdAppList::has_syyb() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void AdAppList::set_has_syyb() {
  _has_bits_[0] |= 0x00000400u;
}
inline void AdAppList::clear_has_syyb() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void AdAppList::clear_syyb() {
  if (syyb_ != NULL) syyb_->::micromsg::YYBStruct::Clear();
  clear_has_syyb();
}
inline const ::micromsg::YYBStruct& AdAppList::syyb() const {
  // @@protoc_insertion_point(field_get:micromsg.AdAppList.SYYB)
  return syyb_ != NULL ? *syyb_
                         : *::micromsg::YYBStruct::internal_default_instance();
}
inline ::micromsg::YYBStruct* AdAppList::mutable_syyb() {
  set_has_syyb();
  if (syyb_ == NULL) {
    syyb_ = new ::micromsg::YYBStruct;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.AdAppList.SYYB)
  return syyb_;
}
inline ::micromsg::YYBStruct* AdAppList::release_syyb() {
  // @@protoc_insertion_point(field_release:micromsg.AdAppList.SYYB)
  clear_has_syyb();
  ::micromsg::YYBStruct* temp = syyb_;
  syyb_ = NULL;
  return temp;
}
inline void AdAppList::set_allocated_syyb(::micromsg::YYBStruct* syyb) {
  delete syyb_;
  syyb_ = syyb;
  if (syyb) {
    set_has_syyb();
  } else {
    clear_has_syyb();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.AdAppList.SYYB)
}

// optional string ExtAsXML = 11;
inline bool AdAppList::has_extasxml() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void AdAppList::set_has_extasxml() {
  _has_bits_[0] |= 0x00000200u;
}
inline void AdAppList::clear_has_extasxml() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void AdAppList::clear_extasxml() {
  extasxml_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_extasxml();
}
inline const ::std::string& AdAppList::extasxml() const {
  // @@protoc_insertion_point(field_get:micromsg.AdAppList.ExtAsXML)
  return extasxml_.GetNoArena();
}
inline void AdAppList::set_extasxml(const ::std::string& value) {
  set_has_extasxml();
  extasxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AdAppList.ExtAsXML)
}
#if LANG_CXX11
inline void AdAppList::set_extasxml(::std::string&& value) {
  set_has_extasxml();
  extasxml_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AdAppList.ExtAsXML)
}
#endif
inline void AdAppList::set_extasxml(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_extasxml();
  extasxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AdAppList.ExtAsXML)
}
inline void AdAppList::set_extasxml(const char* value, size_t size) {
  set_has_extasxml();
  extasxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AdAppList.ExtAsXML)
}
inline ::std::string* AdAppList::mutable_extasxml() {
  set_has_extasxml();
  // @@protoc_insertion_point(field_mutable:micromsg.AdAppList.ExtAsXML)
  return extasxml_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AdAppList::release_extasxml() {
  // @@protoc_insertion_point(field_release:micromsg.AdAppList.ExtAsXML)
  clear_has_extasxml();
  return extasxml_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AdAppList::set_allocated_extasxml(::std::string* extasxml) {
  if (extasxml != NULL) {
    set_has_extasxml();
  } else {
    clear_has_extasxml();
  }
  extasxml_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extasxml);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AdAppList.ExtAsXML)
}

// -------------------------------------------------------------------

// GiftList

// optional string GiftID = 1;
inline bool GiftList::has_giftid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GiftList::set_has_giftid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GiftList::clear_has_giftid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GiftList::clear_giftid() {
  giftid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_giftid();
}
inline const ::std::string& GiftList::giftid() const {
  // @@protoc_insertion_point(field_get:micromsg.GiftList.GiftID)
  return giftid_.GetNoArena();
}
inline void GiftList::set_giftid(const ::std::string& value) {
  set_has_giftid();
  giftid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GiftList.GiftID)
}
#if LANG_CXX11
inline void GiftList::set_giftid(::std::string&& value) {
  set_has_giftid();
  giftid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GiftList.GiftID)
}
#endif
inline void GiftList::set_giftid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_giftid();
  giftid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GiftList.GiftID)
}
inline void GiftList::set_giftid(const char* value, size_t size) {
  set_has_giftid();
  giftid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GiftList.GiftID)
}
inline ::std::string* GiftList::mutable_giftid() {
  set_has_giftid();
  // @@protoc_insertion_point(field_mutable:micromsg.GiftList.GiftID)
  return giftid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GiftList::release_giftid() {
  // @@protoc_insertion_point(field_release:micromsg.GiftList.GiftID)
  clear_has_giftid();
  return giftid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GiftList::set_allocated_giftid(::std::string* giftid) {
  if (giftid != NULL) {
    set_has_giftid();
  } else {
    clear_has_giftid();
  }
  giftid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), giftid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GiftList.GiftID)
}

// optional string IconUrl = 2;
inline bool GiftList::has_iconurl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GiftList::set_has_iconurl() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GiftList::clear_has_iconurl() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GiftList::clear_iconurl() {
  iconurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_iconurl();
}
inline const ::std::string& GiftList::iconurl() const {
  // @@protoc_insertion_point(field_get:micromsg.GiftList.IconUrl)
  return iconurl_.GetNoArena();
}
inline void GiftList::set_iconurl(const ::std::string& value) {
  set_has_iconurl();
  iconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GiftList.IconUrl)
}
#if LANG_CXX11
inline void GiftList::set_iconurl(::std::string&& value) {
  set_has_iconurl();
  iconurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GiftList.IconUrl)
}
#endif
inline void GiftList::set_iconurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_iconurl();
  iconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GiftList.IconUrl)
}
inline void GiftList::set_iconurl(const char* value, size_t size) {
  set_has_iconurl();
  iconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GiftList.IconUrl)
}
inline ::std::string* GiftList::mutable_iconurl() {
  set_has_iconurl();
  // @@protoc_insertion_point(field_mutable:micromsg.GiftList.IconUrl)
  return iconurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GiftList::release_iconurl() {
  // @@protoc_insertion_point(field_release:micromsg.GiftList.IconUrl)
  clear_has_iconurl();
  return iconurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GiftList::set_allocated_iconurl(::std::string* iconurl) {
  if (iconurl != NULL) {
    set_has_iconurl();
  } else {
    clear_has_iconurl();
  }
  iconurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), iconurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GiftList.IconUrl)
}

// optional string Title = 3;
inline bool GiftList::has_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GiftList::set_has_title() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GiftList::clear_has_title() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GiftList::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& GiftList::title() const {
  // @@protoc_insertion_point(field_get:micromsg.GiftList.Title)
  return title_.GetNoArena();
}
inline void GiftList::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GiftList.Title)
}
#if LANG_CXX11
inline void GiftList::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GiftList.Title)
}
#endif
inline void GiftList::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GiftList.Title)
}
inline void GiftList::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GiftList.Title)
}
inline ::std::string* GiftList::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:micromsg.GiftList.Title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GiftList::release_title() {
  // @@protoc_insertion_point(field_release:micromsg.GiftList.Title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GiftList::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GiftList.Title)
}

// optional string Desc = 4;
inline bool GiftList::has_desc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GiftList::set_has_desc() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GiftList::clear_has_desc() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GiftList::clear_desc() {
  desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_desc();
}
inline const ::std::string& GiftList::desc() const {
  // @@protoc_insertion_point(field_get:micromsg.GiftList.Desc)
  return desc_.GetNoArena();
}
inline void GiftList::set_desc(const ::std::string& value) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GiftList.Desc)
}
#if LANG_CXX11
inline void GiftList::set_desc(::std::string&& value) {
  set_has_desc();
  desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GiftList.Desc)
}
#endif
inline void GiftList::set_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GiftList.Desc)
}
inline void GiftList::set_desc(const char* value, size_t size) {
  set_has_desc();
  desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GiftList.Desc)
}
inline ::std::string* GiftList::mutable_desc() {
  set_has_desc();
  // @@protoc_insertion_point(field_mutable:micromsg.GiftList.Desc)
  return desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GiftList::release_desc() {
  // @@protoc_insertion_point(field_release:micromsg.GiftList.Desc)
  clear_has_desc();
  return desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GiftList::set_allocated_desc(::std::string* desc) {
  if (desc != NULL) {
    set_has_desc();
  } else {
    clear_has_desc();
  }
  desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desc);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GiftList.Desc)
}

// optional string GiftUrl = 5;
inline bool GiftList::has_gifturl() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GiftList::set_has_gifturl() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GiftList::clear_has_gifturl() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GiftList::clear_gifturl() {
  gifturl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gifturl();
}
inline const ::std::string& GiftList::gifturl() const {
  // @@protoc_insertion_point(field_get:micromsg.GiftList.GiftUrl)
  return gifturl_.GetNoArena();
}
inline void GiftList::set_gifturl(const ::std::string& value) {
  set_has_gifturl();
  gifturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GiftList.GiftUrl)
}
#if LANG_CXX11
inline void GiftList::set_gifturl(::std::string&& value) {
  set_has_gifturl();
  gifturl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GiftList.GiftUrl)
}
#endif
inline void GiftList::set_gifturl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_gifturl();
  gifturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GiftList.GiftUrl)
}
inline void GiftList::set_gifturl(const char* value, size_t size) {
  set_has_gifturl();
  gifturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GiftList.GiftUrl)
}
inline ::std::string* GiftList::mutable_gifturl() {
  set_has_gifturl();
  // @@protoc_insertion_point(field_mutable:micromsg.GiftList.GiftUrl)
  return gifturl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GiftList::release_gifturl() {
  // @@protoc_insertion_point(field_release:micromsg.GiftList.GiftUrl)
  clear_has_gifturl();
  return gifturl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GiftList::set_allocated_gifturl(::std::string* gifturl) {
  if (gifturl != NULL) {
    set_has_gifturl();
  } else {
    clear_has_gifturl();
  }
  gifturl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gifturl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GiftList.GiftUrl)
}

// -------------------------------------------------------------------

// GiftEntranceItem

// optional string CellTitle = 1;
inline bool GiftEntranceItem::has_celltitle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GiftEntranceItem::set_has_celltitle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GiftEntranceItem::clear_has_celltitle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GiftEntranceItem::clear_celltitle() {
  celltitle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_celltitle();
}
inline const ::std::string& GiftEntranceItem::celltitle() const {
  // @@protoc_insertion_point(field_get:micromsg.GiftEntranceItem.CellTitle)
  return celltitle_.GetNoArena();
}
inline void GiftEntranceItem::set_celltitle(const ::std::string& value) {
  set_has_celltitle();
  celltitle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GiftEntranceItem.CellTitle)
}
#if LANG_CXX11
inline void GiftEntranceItem::set_celltitle(::std::string&& value) {
  set_has_celltitle();
  celltitle_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GiftEntranceItem.CellTitle)
}
#endif
inline void GiftEntranceItem::set_celltitle(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_celltitle();
  celltitle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GiftEntranceItem.CellTitle)
}
inline void GiftEntranceItem::set_celltitle(const char* value, size_t size) {
  set_has_celltitle();
  celltitle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GiftEntranceItem.CellTitle)
}
inline ::std::string* GiftEntranceItem::mutable_celltitle() {
  set_has_celltitle();
  // @@protoc_insertion_point(field_mutable:micromsg.GiftEntranceItem.CellTitle)
  return celltitle_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GiftEntranceItem::release_celltitle() {
  // @@protoc_insertion_point(field_release:micromsg.GiftEntranceItem.CellTitle)
  clear_has_celltitle();
  return celltitle_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GiftEntranceItem::set_allocated_celltitle(::std::string* celltitle) {
  if (celltitle != NULL) {
    set_has_celltitle();
  } else {
    clear_has_celltitle();
  }
  celltitle_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), celltitle);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GiftEntranceItem.CellTitle)
}

// optional string EnranceWording = 2;
inline bool GiftEntranceItem::has_enrancewording() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GiftEntranceItem::set_has_enrancewording() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GiftEntranceItem::clear_has_enrancewording() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GiftEntranceItem::clear_enrancewording() {
  enrancewording_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_enrancewording();
}
inline const ::std::string& GiftEntranceItem::enrancewording() const {
  // @@protoc_insertion_point(field_get:micromsg.GiftEntranceItem.EnranceWording)
  return enrancewording_.GetNoArena();
}
inline void GiftEntranceItem::set_enrancewording(const ::std::string& value) {
  set_has_enrancewording();
  enrancewording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GiftEntranceItem.EnranceWording)
}
#if LANG_CXX11
inline void GiftEntranceItem::set_enrancewording(::std::string&& value) {
  set_has_enrancewording();
  enrancewording_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GiftEntranceItem.EnranceWording)
}
#endif
inline void GiftEntranceItem::set_enrancewording(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_enrancewording();
  enrancewording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GiftEntranceItem.EnranceWording)
}
inline void GiftEntranceItem::set_enrancewording(const char* value, size_t size) {
  set_has_enrancewording();
  enrancewording_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GiftEntranceItem.EnranceWording)
}
inline ::std::string* GiftEntranceItem::mutable_enrancewording() {
  set_has_enrancewording();
  // @@protoc_insertion_point(field_mutable:micromsg.GiftEntranceItem.EnranceWording)
  return enrancewording_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GiftEntranceItem::release_enrancewording() {
  // @@protoc_insertion_point(field_release:micromsg.GiftEntranceItem.EnranceWording)
  clear_has_enrancewording();
  return enrancewording_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GiftEntranceItem::set_allocated_enrancewording(::std::string* enrancewording) {
  if (enrancewording != NULL) {
    set_has_enrancewording();
  } else {
    clear_has_enrancewording();
  }
  enrancewording_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), enrancewording);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GiftEntranceItem.EnranceWording)
}

// optional string AllGiftUrl = 3;
inline bool GiftEntranceItem::has_allgifturl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GiftEntranceItem::set_has_allgifturl() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GiftEntranceItem::clear_has_allgifturl() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GiftEntranceItem::clear_allgifturl() {
  allgifturl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_allgifturl();
}
inline const ::std::string& GiftEntranceItem::allgifturl() const {
  // @@protoc_insertion_point(field_get:micromsg.GiftEntranceItem.AllGiftUrl)
  return allgifturl_.GetNoArena();
}
inline void GiftEntranceItem::set_allgifturl(const ::std::string& value) {
  set_has_allgifturl();
  allgifturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GiftEntranceItem.AllGiftUrl)
}
#if LANG_CXX11
inline void GiftEntranceItem::set_allgifturl(::std::string&& value) {
  set_has_allgifturl();
  allgifturl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GiftEntranceItem.AllGiftUrl)
}
#endif
inline void GiftEntranceItem::set_allgifturl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_allgifturl();
  allgifturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GiftEntranceItem.AllGiftUrl)
}
inline void GiftEntranceItem::set_allgifturl(const char* value, size_t size) {
  set_has_allgifturl();
  allgifturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GiftEntranceItem.AllGiftUrl)
}
inline ::std::string* GiftEntranceItem::mutable_allgifturl() {
  set_has_allgifturl();
  // @@protoc_insertion_point(field_mutable:micromsg.GiftEntranceItem.AllGiftUrl)
  return allgifturl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GiftEntranceItem::release_allgifturl() {
  // @@protoc_insertion_point(field_release:micromsg.GiftEntranceItem.AllGiftUrl)
  clear_has_allgifturl();
  return allgifturl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GiftEntranceItem::set_allocated_allgifturl(::std::string* allgifturl) {
  if (allgifturl != NULL) {
    set_has_allgifturl();
  } else {
    clear_has_allgifturl();
  }
  allgifturl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), allgifturl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GiftEntranceItem.AllGiftUrl)
}

// -------------------------------------------------------------------

// RcAppList

// optional string AppID = 1;
inline bool RcAppList::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RcAppList::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RcAppList::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RcAppList::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
inline const ::std::string& RcAppList::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppID)
  return appid_.GetNoArena();
}
inline void RcAppList::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppID)
}
#if LANG_CXX11
inline void RcAppList::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AppID)
}
#endif
inline void RcAppList::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AppID)
}
inline void RcAppList::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AppID)
}
inline ::std::string* RcAppList::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcAppList::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcAppList::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AppID)
}

// optional string AppName = 2;
inline bool RcAppList::has_appname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RcAppList::set_has_appname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RcAppList::clear_has_appname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RcAppList::clear_appname() {
  appname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appname();
}
inline const ::std::string& RcAppList::appname() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppName)
  return appname_.GetNoArena();
}
inline void RcAppList::set_appname(const ::std::string& value) {
  set_has_appname();
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppName)
}
#if LANG_CXX11
inline void RcAppList::set_appname(::std::string&& value) {
  set_has_appname();
  appname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AppName)
}
#endif
inline void RcAppList::set_appname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appname();
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AppName)
}
inline void RcAppList::set_appname(const char* value, size_t size) {
  set_has_appname();
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AppName)
}
inline ::std::string* RcAppList::mutable_appname() {
  set_has_appname();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AppName)
  return appname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcAppList::release_appname() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AppName)
  clear_has_appname();
  return appname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcAppList::set_allocated_appname(::std::string* appname) {
  if (appname != NULL) {
    set_has_appname();
  } else {
    clear_has_appname();
  }
  appname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AppName)
}

// optional string AppIconUrl = 3;
inline bool RcAppList::has_appiconurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RcAppList::set_has_appiconurl() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RcAppList::clear_has_appiconurl() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RcAppList::clear_appiconurl() {
  appiconurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appiconurl();
}
inline const ::std::string& RcAppList::appiconurl() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppIconUrl)
  return appiconurl_.GetNoArena();
}
inline void RcAppList::set_appiconurl(const ::std::string& value) {
  set_has_appiconurl();
  appiconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppIconUrl)
}
#if LANG_CXX11
inline void RcAppList::set_appiconurl(::std::string&& value) {
  set_has_appiconurl();
  appiconurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AppIconUrl)
}
#endif
inline void RcAppList::set_appiconurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appiconurl();
  appiconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AppIconUrl)
}
inline void RcAppList::set_appiconurl(const char* value, size_t size) {
  set_has_appiconurl();
  appiconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AppIconUrl)
}
inline ::std::string* RcAppList::mutable_appiconurl() {
  set_has_appiconurl();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AppIconUrl)
  return appiconurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcAppList::release_appiconurl() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AppIconUrl)
  clear_has_appiconurl();
  return appiconurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcAppList::set_allocated_appiconurl(::std::string* appiconurl) {
  if (appiconurl != NULL) {
    set_has_appiconurl();
  } else {
    clear_has_appiconurl();
  }
  appiconurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appiconurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AppIconUrl)
}

// optional string AppDesc = 4;
inline bool RcAppList::has_appdesc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RcAppList::set_has_appdesc() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RcAppList::clear_has_appdesc() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RcAppList::clear_appdesc() {
  appdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appdesc();
}
inline const ::std::string& RcAppList::appdesc() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppDesc)
  return appdesc_.GetNoArena();
}
inline void RcAppList::set_appdesc(const ::std::string& value) {
  set_has_appdesc();
  appdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppDesc)
}
#if LANG_CXX11
inline void RcAppList::set_appdesc(::std::string&& value) {
  set_has_appdesc();
  appdesc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AppDesc)
}
#endif
inline void RcAppList::set_appdesc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appdesc();
  appdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AppDesc)
}
inline void RcAppList::set_appdesc(const char* value, size_t size) {
  set_has_appdesc();
  appdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AppDesc)
}
inline ::std::string* RcAppList::mutable_appdesc() {
  set_has_appdesc();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AppDesc)
  return appdesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcAppList::release_appdesc() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AppDesc)
  clear_has_appdesc();
  return appdesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcAppList::set_allocated_appdesc(::std::string* appdesc) {
  if (appdesc != NULL) {
    set_has_appdesc();
  } else {
    clear_has_appdesc();
  }
  appdesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appdesc);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AppDesc)
}

// optional string AppDownloadUrl = 5;
inline bool RcAppList::has_appdownloadurl() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RcAppList::set_has_appdownloadurl() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RcAppList::clear_has_appdownloadurl() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RcAppList::clear_appdownloadurl() {
  appdownloadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appdownloadurl();
}
inline const ::std::string& RcAppList::appdownloadurl() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppDownloadUrl)
  return appdownloadurl_.GetNoArena();
}
inline void RcAppList::set_appdownloadurl(const ::std::string& value) {
  set_has_appdownloadurl();
  appdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppDownloadUrl)
}
#if LANG_CXX11
inline void RcAppList::set_appdownloadurl(::std::string&& value) {
  set_has_appdownloadurl();
  appdownloadurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AppDownloadUrl)
}
#endif
inline void RcAppList::set_appdownloadurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appdownloadurl();
  appdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AppDownloadUrl)
}
inline void RcAppList::set_appdownloadurl(const char* value, size_t size) {
  set_has_appdownloadurl();
  appdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AppDownloadUrl)
}
inline ::std::string* RcAppList::mutable_appdownloadurl() {
  set_has_appdownloadurl();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AppDownloadUrl)
  return appdownloadurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcAppList::release_appdownloadurl() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AppDownloadUrl)
  clear_has_appdownloadurl();
  return appdownloadurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcAppList::set_allocated_appdownloadurl(::std::string* appdownloadurl) {
  if (appdownloadurl != NULL) {
    set_has_appdownloadurl();
  } else {
    clear_has_appdownloadurl();
  }
  appdownloadurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appdownloadurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AppDownloadUrl)
}

// optional string AppCoverUrl = 6;
inline bool RcAppList::has_appcoverurl() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RcAppList::set_has_appcoverurl() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RcAppList::clear_has_appcoverurl() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RcAppList::clear_appcoverurl() {
  appcoverurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appcoverurl();
}
inline const ::std::string& RcAppList::appcoverurl() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppCoverUrl)
  return appcoverurl_.GetNoArena();
}
inline void RcAppList::set_appcoverurl(const ::std::string& value) {
  set_has_appcoverurl();
  appcoverurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppCoverUrl)
}
#if LANG_CXX11
inline void RcAppList::set_appcoverurl(::std::string&& value) {
  set_has_appcoverurl();
  appcoverurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AppCoverUrl)
}
#endif
inline void RcAppList::set_appcoverurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appcoverurl();
  appcoverurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AppCoverUrl)
}
inline void RcAppList::set_appcoverurl(const char* value, size_t size) {
  set_has_appcoverurl();
  appcoverurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AppCoverUrl)
}
inline ::std::string* RcAppList::mutable_appcoverurl() {
  set_has_appcoverurl();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AppCoverUrl)
  return appcoverurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcAppList::release_appcoverurl() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AppCoverUrl)
  clear_has_appcoverurl();
  return appcoverurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcAppList::set_allocated_appcoverurl(::std::string* appcoverurl) {
  if (appcoverurl != NULL) {
    set_has_appcoverurl();
  } else {
    clear_has_appcoverurl();
  }
  appcoverurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appcoverurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AppCoverUrl)
}

// optional string AppDevInfo = 7;
inline bool RcAppList::has_appdevinfo() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RcAppList::set_has_appdevinfo() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RcAppList::clear_has_appdevinfo() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RcAppList::clear_appdevinfo() {
  appdevinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appdevinfo();
}
inline const ::std::string& RcAppList::appdevinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppDevInfo)
  return appdevinfo_.GetNoArena();
}
inline void RcAppList::set_appdevinfo(const ::std::string& value) {
  set_has_appdevinfo();
  appdevinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppDevInfo)
}
#if LANG_CXX11
inline void RcAppList::set_appdevinfo(::std::string&& value) {
  set_has_appdevinfo();
  appdevinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AppDevInfo)
}
#endif
inline void RcAppList::set_appdevinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appdevinfo();
  appdevinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AppDevInfo)
}
inline void RcAppList::set_appdevinfo(const char* value, size_t size) {
  set_has_appdevinfo();
  appdevinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AppDevInfo)
}
inline ::std::string* RcAppList::mutable_appdevinfo() {
  set_has_appdevinfo();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AppDevInfo)
  return appdevinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcAppList::release_appdevinfo() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AppDevInfo)
  clear_has_appdevinfo();
  return appdevinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcAppList::set_allocated_appdevinfo(::std::string* appdevinfo) {
  if (appdevinfo != NULL) {
    set_has_appdevinfo();
  } else {
    clear_has_appdevinfo();
  }
  appdevinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appdevinfo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AppDevInfo)
}

// required int32 AppScreenShotCount = 8;
inline bool RcAppList::has_appscreenshotcount() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void RcAppList::set_has_appscreenshotcount() {
  _has_bits_[0] |= 0x00100000u;
}
inline void RcAppList::clear_has_appscreenshotcount() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void RcAppList::clear_appscreenshotcount() {
  appscreenshotcount_ = 0;
  clear_has_appscreenshotcount();
}
inline ::google::protobuf::int32 RcAppList::appscreenshotcount() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppScreenShotCount)
  return appscreenshotcount_;
}
inline void RcAppList::set_appscreenshotcount(::google::protobuf::int32 value) {
  set_has_appscreenshotcount();
  appscreenshotcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppScreenShotCount)
}

// repeated .micromsg.SKBuiltinString_t AppScreenShotList = 9;
inline int RcAppList::appscreenshotlist_size() const {
  return appscreenshotlist_.size();
}
inline void RcAppList::clear_appscreenshotlist() {
  appscreenshotlist_.Clear();
}
inline const ::micromsg::SKBuiltinString_t& RcAppList::appscreenshotlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppScreenShotList)
  return appscreenshotlist_.Get(index);
}
inline ::micromsg::SKBuiltinString_t* RcAppList::mutable_appscreenshotlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AppScreenShotList)
  return appscreenshotlist_.Mutable(index);
}
inline ::micromsg::SKBuiltinString_t* RcAppList::add_appscreenshotlist() {
  // @@protoc_insertion_point(field_add:micromsg.RcAppList.AppScreenShotList)
  return appscreenshotlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
RcAppList::mutable_appscreenshotlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.RcAppList.AppScreenShotList)
  return &appscreenshotlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
RcAppList::appscreenshotlist() const {
  // @@protoc_insertion_point(field_list:micromsg.RcAppList.AppScreenShotList)
  return appscreenshotlist_;
}

// optional string AppSnsDesc = 10;
inline bool RcAppList::has_appsnsdesc() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RcAppList::set_has_appsnsdesc() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RcAppList::clear_has_appsnsdesc() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RcAppList::clear_appsnsdesc() {
  appsnsdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appsnsdesc();
}
inline const ::std::string& RcAppList::appsnsdesc() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppSnsDesc)
  return appsnsdesc_.GetNoArena();
}
inline void RcAppList::set_appsnsdesc(const ::std::string& value) {
  set_has_appsnsdesc();
  appsnsdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppSnsDesc)
}
#if LANG_CXX11
inline void RcAppList::set_appsnsdesc(::std::string&& value) {
  set_has_appsnsdesc();
  appsnsdesc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AppSnsDesc)
}
#endif
inline void RcAppList::set_appsnsdesc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appsnsdesc();
  appsnsdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AppSnsDesc)
}
inline void RcAppList::set_appsnsdesc(const char* value, size_t size) {
  set_has_appsnsdesc();
  appsnsdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AppSnsDesc)
}
inline ::std::string* RcAppList::mutable_appsnsdesc() {
  set_has_appsnsdesc();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AppSnsDesc)
  return appsnsdesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcAppList::release_appsnsdesc() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AppSnsDesc)
  clear_has_appsnsdesc();
  return appsnsdesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcAppList::set_allocated_appsnsdesc(::std::string* appsnsdesc) {
  if (appsnsdesc != NULL) {
    set_has_appsnsdesc();
  } else {
    clear_has_appsnsdesc();
  }
  appsnsdesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appsnsdesc);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AppSnsDesc)
}

// optional string AppSnapshotUrl = 11;
inline bool RcAppList::has_appsnapshoturl() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RcAppList::set_has_appsnapshoturl() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RcAppList::clear_has_appsnapshoturl() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RcAppList::clear_appsnapshoturl() {
  appsnapshoturl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appsnapshoturl();
}
inline const ::std::string& RcAppList::appsnapshoturl() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppSnapshotUrl)
  return appsnapshoturl_.GetNoArena();
}
inline void RcAppList::set_appsnapshoturl(const ::std::string& value) {
  set_has_appsnapshoturl();
  appsnapshoturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppSnapshotUrl)
}
#if LANG_CXX11
inline void RcAppList::set_appsnapshoturl(::std::string&& value) {
  set_has_appsnapshoturl();
  appsnapshoturl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AppSnapshotUrl)
}
#endif
inline void RcAppList::set_appsnapshoturl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appsnapshoturl();
  appsnapshoturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AppSnapshotUrl)
}
inline void RcAppList::set_appsnapshoturl(const char* value, size_t size) {
  set_has_appsnapshoturl();
  appsnapshoturl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AppSnapshotUrl)
}
inline ::std::string* RcAppList::mutable_appsnapshoturl() {
  set_has_appsnapshoturl();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AppSnapshotUrl)
  return appsnapshoturl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcAppList::release_appsnapshoturl() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AppSnapshotUrl)
  clear_has_appsnapshoturl();
  return appsnapshoturl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcAppList::set_allocated_appsnapshoturl(::std::string* appsnapshoturl) {
  if (appsnapshoturl != NULL) {
    set_has_appsnapshoturl();
  } else {
    clear_has_appsnapshoturl();
  }
  appsnapshoturl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appsnapshoturl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AppSnapshotUrl)
}

// optional string AppDetailDesc = 12;
inline bool RcAppList::has_appdetaildesc() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RcAppList::set_has_appdetaildesc() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RcAppList::clear_has_appdetaildesc() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RcAppList::clear_appdetaildesc() {
  appdetaildesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appdetaildesc();
}
inline const ::std::string& RcAppList::appdetaildesc() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppDetailDesc)
  return appdetaildesc_.GetNoArena();
}
inline void RcAppList::set_appdetaildesc(const ::std::string& value) {
  set_has_appdetaildesc();
  appdetaildesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppDetailDesc)
}
#if LANG_CXX11
inline void RcAppList::set_appdetaildesc(::std::string&& value) {
  set_has_appdetaildesc();
  appdetaildesc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AppDetailDesc)
}
#endif
inline void RcAppList::set_appdetaildesc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appdetaildesc();
  appdetaildesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AppDetailDesc)
}
inline void RcAppList::set_appdetaildesc(const char* value, size_t size) {
  set_has_appdetaildesc();
  appdetaildesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AppDetailDesc)
}
inline ::std::string* RcAppList::mutable_appdetaildesc() {
  set_has_appdetaildesc();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AppDetailDesc)
  return appdetaildesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcAppList::release_appdetaildesc() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AppDetailDesc)
  clear_has_appdetaildesc();
  return appdetaildesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcAppList::set_allocated_appdetaildesc(::std::string* appdetaildesc) {
  if (appdetaildesc != NULL) {
    set_has_appdetaildesc();
  } else {
    clear_has_appdetaildesc();
  }
  appdetaildesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appdetaildesc);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AppDetailDesc)
}

// optional uint32 FriendCount = 13;
inline bool RcAppList::has_friendcount() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void RcAppList::set_has_friendcount() {
  _has_bits_[0] |= 0x00200000u;
}
inline void RcAppList::clear_has_friendcount() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void RcAppList::clear_friendcount() {
  friendcount_ = 0u;
  clear_has_friendcount();
}
inline ::google::protobuf::uint32 RcAppList::friendcount() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.FriendCount)
  return friendcount_;
}
inline void RcAppList::set_friendcount(::google::protobuf::uint32 value) {
  set_has_friendcount();
  friendcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.FriendCount)
}

// optional string AppType = 14;
inline bool RcAppList::has_apptype() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RcAppList::set_has_apptype() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RcAppList::clear_has_apptype() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RcAppList::clear_apptype() {
  apptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_apptype();
}
inline const ::std::string& RcAppList::apptype() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppType)
  return apptype_.GetNoArena();
}
inline void RcAppList::set_apptype(const ::std::string& value) {
  set_has_apptype();
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppType)
}
#if LANG_CXX11
inline void RcAppList::set_apptype(::std::string&& value) {
  set_has_apptype();
  apptype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AppType)
}
#endif
inline void RcAppList::set_apptype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_apptype();
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AppType)
}
inline void RcAppList::set_apptype(const char* value, size_t size) {
  set_has_apptype();
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AppType)
}
inline ::std::string* RcAppList::mutable_apptype() {
  set_has_apptype();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AppType)
  return apptype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcAppList::release_apptype() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AppType)
  clear_has_apptype();
  return apptype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcAppList::set_allocated_apptype(::std::string* apptype) {
  if (apptype != NULL) {
    set_has_apptype();
  } else {
    clear_has_apptype();
  }
  apptype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), apptype);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AppType)
}

// optional string AndroidApkMd5 = 15;
inline bool RcAppList::has_androidapkmd5() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RcAppList::set_has_androidapkmd5() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RcAppList::clear_has_androidapkmd5() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RcAppList::clear_androidapkmd5() {
  androidapkmd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_androidapkmd5();
}
inline const ::std::string& RcAppList::androidapkmd5() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AndroidApkMd5)
  return androidapkmd5_.GetNoArena();
}
inline void RcAppList::set_androidapkmd5(const ::std::string& value) {
  set_has_androidapkmd5();
  androidapkmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AndroidApkMd5)
}
#if LANG_CXX11
inline void RcAppList::set_androidapkmd5(::std::string&& value) {
  set_has_androidapkmd5();
  androidapkmd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AndroidApkMd5)
}
#endif
inline void RcAppList::set_androidapkmd5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_androidapkmd5();
  androidapkmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AndroidApkMd5)
}
inline void RcAppList::set_androidapkmd5(const char* value, size_t size) {
  set_has_androidapkmd5();
  androidapkmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AndroidApkMd5)
}
inline ::std::string* RcAppList::mutable_androidapkmd5() {
  set_has_androidapkmd5();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AndroidApkMd5)
  return androidapkmd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcAppList::release_androidapkmd5() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AndroidApkMd5)
  clear_has_androidapkmd5();
  return androidapkmd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcAppList::set_allocated_androidapkmd5(::std::string* androidapkmd5) {
  if (androidapkmd5 != NULL) {
    set_has_androidapkmd5();
  } else {
    clear_has_androidapkmd5();
  }
  androidapkmd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), androidapkmd5);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AndroidApkMd5)
}

// optional string AndroidPackageName = 16;
inline bool RcAppList::has_androidpackagename() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void RcAppList::set_has_androidpackagename() {
  _has_bits_[0] |= 0x00001000u;
}
inline void RcAppList::clear_has_androidpackagename() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void RcAppList::clear_androidpackagename() {
  androidpackagename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_androidpackagename();
}
inline const ::std::string& RcAppList::androidpackagename() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AndroidPackageName)
  return androidpackagename_.GetNoArena();
}
inline void RcAppList::set_androidpackagename(const ::std::string& value) {
  set_has_androidpackagename();
  androidpackagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AndroidPackageName)
}
#if LANG_CXX11
inline void RcAppList::set_androidpackagename(::std::string&& value) {
  set_has_androidpackagename();
  androidpackagename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AndroidPackageName)
}
#endif
inline void RcAppList::set_androidpackagename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_androidpackagename();
  androidpackagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AndroidPackageName)
}
inline void RcAppList::set_androidpackagename(const char* value, size_t size) {
  set_has_androidpackagename();
  androidpackagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AndroidPackageName)
}
inline ::std::string* RcAppList::mutable_androidpackagename() {
  set_has_androidpackagename();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AndroidPackageName)
  return androidpackagename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcAppList::release_androidpackagename() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AndroidPackageName)
  clear_has_androidpackagename();
  return androidpackagename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcAppList::set_allocated_androidpackagename(::std::string* androidpackagename) {
  if (androidpackagename != NULL) {
    set_has_androidpackagename();
  } else {
    clear_has_androidpackagename();
  }
  androidpackagename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), androidpackagename);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AndroidPackageName)
}

// optional string AppNamezhTW = 17;
inline bool RcAppList::has_appnamezhtw() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void RcAppList::set_has_appnamezhtw() {
  _has_bits_[0] |= 0x00002000u;
}
inline void RcAppList::clear_has_appnamezhtw() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void RcAppList::clear_appnamezhtw() {
  appnamezhtw_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appnamezhtw();
}
inline const ::std::string& RcAppList::appnamezhtw() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppNamezhTW)
  return appnamezhtw_.GetNoArena();
}
inline void RcAppList::set_appnamezhtw(const ::std::string& value) {
  set_has_appnamezhtw();
  appnamezhtw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppNamezhTW)
}
#if LANG_CXX11
inline void RcAppList::set_appnamezhtw(::std::string&& value) {
  set_has_appnamezhtw();
  appnamezhtw_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AppNamezhTW)
}
#endif
inline void RcAppList::set_appnamezhtw(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appnamezhtw();
  appnamezhtw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AppNamezhTW)
}
inline void RcAppList::set_appnamezhtw(const char* value, size_t size) {
  set_has_appnamezhtw();
  appnamezhtw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AppNamezhTW)
}
inline ::std::string* RcAppList::mutable_appnamezhtw() {
  set_has_appnamezhtw();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AppNamezhTW)
  return appnamezhtw_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcAppList::release_appnamezhtw() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AppNamezhTW)
  clear_has_appnamezhtw();
  return appnamezhtw_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcAppList::set_allocated_appnamezhtw(::std::string* appnamezhtw) {
  if (appnamezhtw != NULL) {
    set_has_appnamezhtw();
  } else {
    clear_has_appnamezhtw();
  }
  appnamezhtw_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appnamezhtw);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AppNamezhTW)
}

// optional string AppNameEnUS = 18;
inline bool RcAppList::has_appnameenus() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void RcAppList::set_has_appnameenus() {
  _has_bits_[0] |= 0x00004000u;
}
inline void RcAppList::clear_has_appnameenus() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void RcAppList::clear_appnameenus() {
  appnameenus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appnameenus();
}
inline const ::std::string& RcAppList::appnameenus() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppNameEnUS)
  return appnameenus_.GetNoArena();
}
inline void RcAppList::set_appnameenus(const ::std::string& value) {
  set_has_appnameenus();
  appnameenus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppNameEnUS)
}
#if LANG_CXX11
inline void RcAppList::set_appnameenus(::std::string&& value) {
  set_has_appnameenus();
  appnameenus_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AppNameEnUS)
}
#endif
inline void RcAppList::set_appnameenus(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appnameenus();
  appnameenus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AppNameEnUS)
}
inline void RcAppList::set_appnameenus(const char* value, size_t size) {
  set_has_appnameenus();
  appnameenus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AppNameEnUS)
}
inline ::std::string* RcAppList::mutable_appnameenus() {
  set_has_appnameenus();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AppNameEnUS)
  return appnameenus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcAppList::release_appnameenus() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AppNameEnUS)
  clear_has_appnameenus();
  return appnameenus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcAppList::set_allocated_appnameenus(::std::string* appnameenus) {
  if (appnameenus != NULL) {
    set_has_appnameenus();
  } else {
    clear_has_appnameenus();
  }
  appnameenus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appnameenus);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AppNameEnUS)
}

// optional string GooglePlayDownloadUrl = 19;
inline bool RcAppList::has_googleplaydownloadurl() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void RcAppList::set_has_googleplaydownloadurl() {
  _has_bits_[0] |= 0x00008000u;
}
inline void RcAppList::clear_has_googleplaydownloadurl() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void RcAppList::clear_googleplaydownloadurl() {
  googleplaydownloadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_googleplaydownloadurl();
}
inline const ::std::string& RcAppList::googleplaydownloadurl() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.GooglePlayDownloadUrl)
  return googleplaydownloadurl_.GetNoArena();
}
inline void RcAppList::set_googleplaydownloadurl(const ::std::string& value) {
  set_has_googleplaydownloadurl();
  googleplaydownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.GooglePlayDownloadUrl)
}
#if LANG_CXX11
inline void RcAppList::set_googleplaydownloadurl(::std::string&& value) {
  set_has_googleplaydownloadurl();
  googleplaydownloadurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.GooglePlayDownloadUrl)
}
#endif
inline void RcAppList::set_googleplaydownloadurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_googleplaydownloadurl();
  googleplaydownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.GooglePlayDownloadUrl)
}
inline void RcAppList::set_googleplaydownloadurl(const char* value, size_t size) {
  set_has_googleplaydownloadurl();
  googleplaydownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.GooglePlayDownloadUrl)
}
inline ::std::string* RcAppList::mutable_googleplaydownloadurl() {
  set_has_googleplaydownloadurl();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.GooglePlayDownloadUrl)
  return googleplaydownloadurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcAppList::release_googleplaydownloadurl() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.GooglePlayDownloadUrl)
  clear_has_googleplaydownloadurl();
  return googleplaydownloadurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcAppList::set_allocated_googleplaydownloadurl(::std::string* googleplaydownloadurl) {
  if (googleplaydownloadurl != NULL) {
    set_has_googleplaydownloadurl();
  } else {
    clear_has_googleplaydownloadurl();
  }
  googleplaydownloadurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), googleplaydownloadurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.GooglePlayDownloadUrl)
}

// optional string AppSuggestionIconUrl = 20;
inline bool RcAppList::has_appsuggestioniconurl() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void RcAppList::set_has_appsuggestioniconurl() {
  _has_bits_[0] |= 0x00010000u;
}
inline void RcAppList::clear_has_appsuggestioniconurl() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void RcAppList::clear_appsuggestioniconurl() {
  appsuggestioniconurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appsuggestioniconurl();
}
inline const ::std::string& RcAppList::appsuggestioniconurl() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppSuggestionIconUrl)
  return appsuggestioniconurl_.GetNoArena();
}
inline void RcAppList::set_appsuggestioniconurl(const ::std::string& value) {
  set_has_appsuggestioniconurl();
  appsuggestioniconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppSuggestionIconUrl)
}
#if LANG_CXX11
inline void RcAppList::set_appsuggestioniconurl(::std::string&& value) {
  set_has_appsuggestioniconurl();
  appsuggestioniconurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AppSuggestionIconUrl)
}
#endif
inline void RcAppList::set_appsuggestioniconurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appsuggestioniconurl();
  appsuggestioniconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AppSuggestionIconUrl)
}
inline void RcAppList::set_appsuggestioniconurl(const char* value, size_t size) {
  set_has_appsuggestioniconurl();
  appsuggestioniconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AppSuggestionIconUrl)
}
inline ::std::string* RcAppList::mutable_appsuggestioniconurl() {
  set_has_appsuggestioniconurl();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AppSuggestionIconUrl)
  return appsuggestioniconurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcAppList::release_appsuggestioniconurl() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AppSuggestionIconUrl)
  clear_has_appsuggestioniconurl();
  return appsuggestioniconurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcAppList::set_allocated_appsuggestioniconurl(::std::string* appsuggestioniconurl) {
  if (appsuggestioniconurl != NULL) {
    set_has_appsuggestioniconurl();
  } else {
    clear_has_appsuggestioniconurl();
  }
  appsuggestioniconurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appsuggestioniconurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AppSuggestionIconUrl)
}

// optional string AppSuggestionIntroUrl = 21;
inline bool RcAppList::has_appsuggestionintrourl() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void RcAppList::set_has_appsuggestionintrourl() {
  _has_bits_[0] |= 0x00020000u;
}
inline void RcAppList::clear_has_appsuggestionintrourl() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void RcAppList::clear_appsuggestionintrourl() {
  appsuggestionintrourl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appsuggestionintrourl();
}
inline const ::std::string& RcAppList::appsuggestionintrourl() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppSuggestionIntroUrl)
  return appsuggestionintrourl_.GetNoArena();
}
inline void RcAppList::set_appsuggestionintrourl(const ::std::string& value) {
  set_has_appsuggestionintrourl();
  appsuggestionintrourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppSuggestionIntroUrl)
}
#if LANG_CXX11
inline void RcAppList::set_appsuggestionintrourl(::std::string&& value) {
  set_has_appsuggestionintrourl();
  appsuggestionintrourl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AppSuggestionIntroUrl)
}
#endif
inline void RcAppList::set_appsuggestionintrourl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appsuggestionintrourl();
  appsuggestionintrourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AppSuggestionIntroUrl)
}
inline void RcAppList::set_appsuggestionintrourl(const char* value, size_t size) {
  set_has_appsuggestionintrourl();
  appsuggestionintrourl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AppSuggestionIntroUrl)
}
inline ::std::string* RcAppList::mutable_appsuggestionintrourl() {
  set_has_appsuggestionintrourl();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AppSuggestionIntroUrl)
  return appsuggestionintrourl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcAppList::release_appsuggestionintrourl() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AppSuggestionIntroUrl)
  clear_has_appsuggestionintrourl();
  return appsuggestionintrourl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcAppList::set_allocated_appsuggestionintrourl(::std::string* appsuggestionintrourl) {
  if (appsuggestionintrourl != NULL) {
    set_has_appsuggestionintrourl();
  } else {
    clear_has_appsuggestionintrourl();
  }
  appsuggestionintrourl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appsuggestionintrourl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AppSuggestionIntroUrl)
}

// optional .micromsg.YYBStruct SYYB = 22;
inline bool RcAppList::has_syyb() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void RcAppList::set_has_syyb() {
  _has_bits_[0] |= 0x00080000u;
}
inline void RcAppList::clear_has_syyb() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void RcAppList::clear_syyb() {
  if (syyb_ != NULL) syyb_->::micromsg::YYBStruct::Clear();
  clear_has_syyb();
}
inline const ::micromsg::YYBStruct& RcAppList::syyb() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.SYYB)
  return syyb_ != NULL ? *syyb_
                         : *::micromsg::YYBStruct::internal_default_instance();
}
inline ::micromsg::YYBStruct* RcAppList::mutable_syyb() {
  set_has_syyb();
  if (syyb_ == NULL) {
    syyb_ = new ::micromsg::YYBStruct;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.SYYB)
  return syyb_;
}
inline ::micromsg::YYBStruct* RcAppList::release_syyb() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.SYYB)
  clear_has_syyb();
  ::micromsg::YYBStruct* temp = syyb_;
  syyb_ = NULL;
  return temp;
}
inline void RcAppList::set_allocated_syyb(::micromsg::YYBStruct* syyb) {
  delete syyb_;
  syyb_ = syyb;
  if (syyb) {
    set_has_syyb();
  } else {
    clear_has_syyb();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.SYYB)
}

// optional string AppLaunchScheme = 23;
inline bool RcAppList::has_applaunchscheme() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void RcAppList::set_has_applaunchscheme() {
  _has_bits_[0] |= 0x00040000u;
}
inline void RcAppList::clear_has_applaunchscheme() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void RcAppList::clear_applaunchscheme() {
  applaunchscheme_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_applaunchscheme();
}
inline const ::std::string& RcAppList::applaunchscheme() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppLaunchScheme)
  return applaunchscheme_.GetNoArena();
}
inline void RcAppList::set_applaunchscheme(const ::std::string& value) {
  set_has_applaunchscheme();
  applaunchscheme_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppLaunchScheme)
}
#if LANG_CXX11
inline void RcAppList::set_applaunchscheme(::std::string&& value) {
  set_has_applaunchscheme();
  applaunchscheme_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcAppList.AppLaunchScheme)
}
#endif
inline void RcAppList::set_applaunchscheme(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_applaunchscheme();
  applaunchscheme_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcAppList.AppLaunchScheme)
}
inline void RcAppList::set_applaunchscheme(const char* value, size_t size) {
  set_has_applaunchscheme();
  applaunchscheme_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcAppList.AppLaunchScheme)
}
inline ::std::string* RcAppList::mutable_applaunchscheme() {
  set_has_applaunchscheme();
  // @@protoc_insertion_point(field_mutable:micromsg.RcAppList.AppLaunchScheme)
  return applaunchscheme_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcAppList::release_applaunchscheme() {
  // @@protoc_insertion_point(field_release:micromsg.RcAppList.AppLaunchScheme)
  clear_has_applaunchscheme();
  return applaunchscheme_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcAppList::set_allocated_applaunchscheme(::std::string* applaunchscheme) {
  if (applaunchscheme != NULL) {
    set_has_applaunchscheme();
  } else {
    clear_has_applaunchscheme();
  }
  applaunchscheme_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), applaunchscheme);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcAppList.AppLaunchScheme)
}

// optional uint32 GooglePlayDownloadFlag = 24;
inline bool RcAppList::has_googleplaydownloadflag() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void RcAppList::set_has_googleplaydownloadflag() {
  _has_bits_[0] |= 0x00400000u;
}
inline void RcAppList::clear_has_googleplaydownloadflag() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void RcAppList::clear_googleplaydownloadflag() {
  googleplaydownloadflag_ = 0u;
  clear_has_googleplaydownloadflag();
}
inline ::google::protobuf::uint32 RcAppList::googleplaydownloadflag() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.GooglePlayDownloadFlag)
  return googleplaydownloadflag_;
}
inline void RcAppList::set_googleplaydownloadflag(::google::protobuf::uint32 value) {
  set_has_googleplaydownloadflag();
  googleplaydownloadflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.GooglePlayDownloadFlag)
}

// optional uint32 AppInfoFlag = 25;
inline bool RcAppList::has_appinfoflag() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void RcAppList::set_has_appinfoflag() {
  _has_bits_[0] |= 0x00800000u;
}
inline void RcAppList::clear_has_appinfoflag() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void RcAppList::clear_appinfoflag() {
  appinfoflag_ = 0u;
  clear_has_appinfoflag();
}
inline ::google::protobuf::uint32 RcAppList::appinfoflag() const {
  // @@protoc_insertion_point(field_get:micromsg.RcAppList.AppInfoFlag)
  return appinfoflag_;
}
inline void RcAppList::set_appinfoflag(::google::protobuf::uint32 value) {
  set_has_appinfoflag();
  appinfoflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RcAppList.AppInfoFlag)
}

// -------------------------------------------------------------------

// GetGameIntroListRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetGameIntroListRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetGameIntroListRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetGameIntroListRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetGameIntroListRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetGameIntroListRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetGameIntroListRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetGameIntroListRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetGameIntroListRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetGameIntroListRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetGameIntroListRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetGameIntroListRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetGameIntroListRequest.BaseRequest)
}

// required uint32 Count = 2;
inline bool GetGameIntroListRequest::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetGameIntroListRequest::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetGameIntroListRequest::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetGameIntroListRequest::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 GetGameIntroListRequest::count() const {
  // @@protoc_insertion_point(field_get:micromsg.GetGameIntroListRequest.Count)
  return count_;
}
inline void GetGameIntroListRequest::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetGameIntroListRequest.Count)
}

// repeated .micromsg.SKBuiltinString_t AppIdList = 3;
inline int GetGameIntroListRequest::appidlist_size() const {
  return appidlist_.size();
}
inline void GetGameIntroListRequest::clear_appidlist() {
  appidlist_.Clear();
}
inline const ::micromsg::SKBuiltinString_t& GetGameIntroListRequest::appidlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetGameIntroListRequest.AppIdList)
  return appidlist_.Get(index);
}
inline ::micromsg::SKBuiltinString_t* GetGameIntroListRequest::mutable_appidlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetGameIntroListRequest.AppIdList)
  return appidlist_.Mutable(index);
}
inline ::micromsg::SKBuiltinString_t* GetGameIntroListRequest::add_appidlist() {
  // @@protoc_insertion_point(field_add:micromsg.GetGameIntroListRequest.AppIdList)
  return appidlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
GetGameIntroListRequest::mutable_appidlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetGameIntroListRequest.AppIdList)
  return &appidlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
GetGameIntroListRequest::appidlist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetGameIntroListRequest.AppIdList)
  return appidlist_;
}

// optional string DevicePlatform = 4;
inline bool GetGameIntroListRequest::has_deviceplatform() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGameIntroListRequest::set_has_deviceplatform() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGameIntroListRequest::clear_has_deviceplatform() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGameIntroListRequest::clear_deviceplatform() {
  deviceplatform_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deviceplatform();
}
inline const ::std::string& GetGameIntroListRequest::deviceplatform() const {
  // @@protoc_insertion_point(field_get:micromsg.GetGameIntroListRequest.DevicePlatform)
  return deviceplatform_.GetNoArena();
}
inline void GetGameIntroListRequest::set_deviceplatform(const ::std::string& value) {
  set_has_deviceplatform();
  deviceplatform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetGameIntroListRequest.DevicePlatform)
}
#if LANG_CXX11
inline void GetGameIntroListRequest::set_deviceplatform(::std::string&& value) {
  set_has_deviceplatform();
  deviceplatform_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetGameIntroListRequest.DevicePlatform)
}
#endif
inline void GetGameIntroListRequest::set_deviceplatform(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_deviceplatform();
  deviceplatform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetGameIntroListRequest.DevicePlatform)
}
inline void GetGameIntroListRequest::set_deviceplatform(const char* value, size_t size) {
  set_has_deviceplatform();
  deviceplatform_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetGameIntroListRequest.DevicePlatform)
}
inline ::std::string* GetGameIntroListRequest::mutable_deviceplatform() {
  set_has_deviceplatform();
  // @@protoc_insertion_point(field_mutable:micromsg.GetGameIntroListRequest.DevicePlatform)
  return deviceplatform_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetGameIntroListRequest::release_deviceplatform() {
  // @@protoc_insertion_point(field_release:micromsg.GetGameIntroListRequest.DevicePlatform)
  clear_has_deviceplatform();
  return deviceplatform_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetGameIntroListRequest::set_allocated_deviceplatform(::std::string* deviceplatform) {
  if (deviceplatform != NULL) {
    set_has_deviceplatform();
  } else {
    clear_has_deviceplatform();
  }
  deviceplatform_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceplatform);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetGameIntroListRequest.DevicePlatform)
}

// -------------------------------------------------------------------

// GameIntro

// optional string AppID = 1;
inline bool GameIntro::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameIntro::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameIntro::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameIntro::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
inline const ::std::string& GameIntro::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.GameIntro.AppID)
  return appid_.GetNoArena();
}
inline void GameIntro::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GameIntro.AppID)
}
#if LANG_CXX11
inline void GameIntro::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GameIntro.AppID)
}
#endif
inline void GameIntro::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GameIntro.AppID)
}
inline void GameIntro::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GameIntro.AppID)
}
inline ::std::string* GameIntro::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.GameIntro.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameIntro::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.GameIntro.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameIntro::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GameIntro.AppID)
}

// optional string GameIntroPage = 2;
inline bool GameIntro::has_gameintropage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameIntro::set_has_gameintropage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameIntro::clear_has_gameintropage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameIntro::clear_gameintropage() {
  gameintropage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gameintropage();
}
inline const ::std::string& GameIntro::gameintropage() const {
  // @@protoc_insertion_point(field_get:micromsg.GameIntro.GameIntroPage)
  return gameintropage_.GetNoArena();
}
inline void GameIntro::set_gameintropage(const ::std::string& value) {
  set_has_gameintropage();
  gameintropage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GameIntro.GameIntroPage)
}
#if LANG_CXX11
inline void GameIntro::set_gameintropage(::std::string&& value) {
  set_has_gameintropage();
  gameintropage_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GameIntro.GameIntroPage)
}
#endif
inline void GameIntro::set_gameintropage(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_gameintropage();
  gameintropage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GameIntro.GameIntroPage)
}
inline void GameIntro::set_gameintropage(const char* value, size_t size) {
  set_has_gameintropage();
  gameintropage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GameIntro.GameIntroPage)
}
inline ::std::string* GameIntro::mutable_gameintropage() {
  set_has_gameintropage();
  // @@protoc_insertion_point(field_mutable:micromsg.GameIntro.GameIntroPage)
  return gameintropage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameIntro::release_gameintropage() {
  // @@protoc_insertion_point(field_release:micromsg.GameIntro.GameIntroPage)
  clear_has_gameintropage();
  return gameintropage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameIntro::set_allocated_gameintropage(::std::string* gameintropage) {
  if (gameintropage != NULL) {
    set_has_gameintropage();
  } else {
    clear_has_gameintropage();
  }
  gameintropage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gameintropage);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GameIntro.GameIntroPage)
}

// optional string AndroidApkMd5 = 3;
inline bool GameIntro::has_androidapkmd5() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameIntro::set_has_androidapkmd5() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameIntro::clear_has_androidapkmd5() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameIntro::clear_androidapkmd5() {
  androidapkmd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_androidapkmd5();
}
inline const ::std::string& GameIntro::androidapkmd5() const {
  // @@protoc_insertion_point(field_get:micromsg.GameIntro.AndroidApkMd5)
  return androidapkmd5_.GetNoArena();
}
inline void GameIntro::set_androidapkmd5(const ::std::string& value) {
  set_has_androidapkmd5();
  androidapkmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GameIntro.AndroidApkMd5)
}
#if LANG_CXX11
inline void GameIntro::set_androidapkmd5(::std::string&& value) {
  set_has_androidapkmd5();
  androidapkmd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GameIntro.AndroidApkMd5)
}
#endif
inline void GameIntro::set_androidapkmd5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_androidapkmd5();
  androidapkmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GameIntro.AndroidApkMd5)
}
inline void GameIntro::set_androidapkmd5(const char* value, size_t size) {
  set_has_androidapkmd5();
  androidapkmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GameIntro.AndroidApkMd5)
}
inline ::std::string* GameIntro::mutable_androidapkmd5() {
  set_has_androidapkmd5();
  // @@protoc_insertion_point(field_mutable:micromsg.GameIntro.AndroidApkMd5)
  return androidapkmd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameIntro::release_androidapkmd5() {
  // @@protoc_insertion_point(field_release:micromsg.GameIntro.AndroidApkMd5)
  clear_has_androidapkmd5();
  return androidapkmd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameIntro::set_allocated_androidapkmd5(::std::string* androidapkmd5) {
  if (androidapkmd5 != NULL) {
    set_has_androidapkmd5();
  } else {
    clear_has_androidapkmd5();
  }
  androidapkmd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), androidapkmd5);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GameIntro.AndroidApkMd5)
}

// optional string AppDownloadUrl = 4;
inline bool GameIntro::has_appdownloadurl() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GameIntro::set_has_appdownloadurl() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GameIntro::clear_has_appdownloadurl() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GameIntro::clear_appdownloadurl() {
  appdownloadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appdownloadurl();
}
inline const ::std::string& GameIntro::appdownloadurl() const {
  // @@protoc_insertion_point(field_get:micromsg.GameIntro.AppDownloadUrl)
  return appdownloadurl_.GetNoArena();
}
inline void GameIntro::set_appdownloadurl(const ::std::string& value) {
  set_has_appdownloadurl();
  appdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GameIntro.AppDownloadUrl)
}
#if LANG_CXX11
inline void GameIntro::set_appdownloadurl(::std::string&& value) {
  set_has_appdownloadurl();
  appdownloadurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GameIntro.AppDownloadUrl)
}
#endif
inline void GameIntro::set_appdownloadurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appdownloadurl();
  appdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GameIntro.AppDownloadUrl)
}
inline void GameIntro::set_appdownloadurl(const char* value, size_t size) {
  set_has_appdownloadurl();
  appdownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GameIntro.AppDownloadUrl)
}
inline ::std::string* GameIntro::mutable_appdownloadurl() {
  set_has_appdownloadurl();
  // @@protoc_insertion_point(field_mutable:micromsg.GameIntro.AppDownloadUrl)
  return appdownloadurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameIntro::release_appdownloadurl() {
  // @@protoc_insertion_point(field_release:micromsg.GameIntro.AppDownloadUrl)
  clear_has_appdownloadurl();
  return appdownloadurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameIntro::set_allocated_appdownloadurl(::std::string* appdownloadurl) {
  if (appdownloadurl != NULL) {
    set_has_appdownloadurl();
  } else {
    clear_has_appdownloadurl();
  }
  appdownloadurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appdownloadurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GameIntro.AppDownloadUrl)
}

// optional string GooglePlayDownloadUrl = 5;
inline bool GameIntro::has_googleplaydownloadurl() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GameIntro::set_has_googleplaydownloadurl() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GameIntro::clear_has_googleplaydownloadurl() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GameIntro::clear_googleplaydownloadurl() {
  googleplaydownloadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_googleplaydownloadurl();
}
inline const ::std::string& GameIntro::googleplaydownloadurl() const {
  // @@protoc_insertion_point(field_get:micromsg.GameIntro.GooglePlayDownloadUrl)
  return googleplaydownloadurl_.GetNoArena();
}
inline void GameIntro::set_googleplaydownloadurl(const ::std::string& value) {
  set_has_googleplaydownloadurl();
  googleplaydownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GameIntro.GooglePlayDownloadUrl)
}
#if LANG_CXX11
inline void GameIntro::set_googleplaydownloadurl(::std::string&& value) {
  set_has_googleplaydownloadurl();
  googleplaydownloadurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GameIntro.GooglePlayDownloadUrl)
}
#endif
inline void GameIntro::set_googleplaydownloadurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_googleplaydownloadurl();
  googleplaydownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GameIntro.GooglePlayDownloadUrl)
}
inline void GameIntro::set_googleplaydownloadurl(const char* value, size_t size) {
  set_has_googleplaydownloadurl();
  googleplaydownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GameIntro.GooglePlayDownloadUrl)
}
inline ::std::string* GameIntro::mutable_googleplaydownloadurl() {
  set_has_googleplaydownloadurl();
  // @@protoc_insertion_point(field_mutable:micromsg.GameIntro.GooglePlayDownloadUrl)
  return googleplaydownloadurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameIntro::release_googleplaydownloadurl() {
  // @@protoc_insertion_point(field_release:micromsg.GameIntro.GooglePlayDownloadUrl)
  clear_has_googleplaydownloadurl();
  return googleplaydownloadurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameIntro::set_allocated_googleplaydownloadurl(::std::string* googleplaydownloadurl) {
  if (googleplaydownloadurl != NULL) {
    set_has_googleplaydownloadurl();
  } else {
    clear_has_googleplaydownloadurl();
  }
  googleplaydownloadurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), googleplaydownloadurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GameIntro.GooglePlayDownloadUrl)
}

// optional .micromsg.YYBStruct SYYB = 6;
inline bool GameIntro::has_syyb() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GameIntro::set_has_syyb() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GameIntro::clear_has_syyb() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GameIntro::clear_syyb() {
  if (syyb_ != NULL) syyb_->::micromsg::YYBStruct::Clear();
  clear_has_syyb();
}
inline const ::micromsg::YYBStruct& GameIntro::syyb() const {
  // @@protoc_insertion_point(field_get:micromsg.GameIntro.SYYB)
  return syyb_ != NULL ? *syyb_
                         : *::micromsg::YYBStruct::internal_default_instance();
}
inline ::micromsg::YYBStruct* GameIntro::mutable_syyb() {
  set_has_syyb();
  if (syyb_ == NULL) {
    syyb_ = new ::micromsg::YYBStruct;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GameIntro.SYYB)
  return syyb_;
}
inline ::micromsg::YYBStruct* GameIntro::release_syyb() {
  // @@protoc_insertion_point(field_release:micromsg.GameIntro.SYYB)
  clear_has_syyb();
  ::micromsg::YYBStruct* temp = syyb_;
  syyb_ = NULL;
  return temp;
}
inline void GameIntro::set_allocated_syyb(::micromsg::YYBStruct* syyb) {
  delete syyb_;
  syyb_ = syyb;
  if (syyb) {
    set_has_syyb();
  } else {
    clear_has_syyb();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GameIntro.SYYB)
}

// -------------------------------------------------------------------

// GetGameIntroListResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetGameIntroListResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGameIntroListResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGameIntroListResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGameIntroListResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetGameIntroListResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetGameIntroListResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetGameIntroListResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetGameIntroListResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetGameIntroListResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetGameIntroListResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetGameIntroListResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetGameIntroListResponse.BaseResponse)
}

// required uint32 Count = 2;
inline bool GetGameIntroListResponse::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetGameIntroListResponse::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetGameIntroListResponse::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetGameIntroListResponse::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 GetGameIntroListResponse::count() const {
  // @@protoc_insertion_point(field_get:micromsg.GetGameIntroListResponse.Count)
  return count_;
}
inline void GetGameIntroListResponse::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetGameIntroListResponse.Count)
}

// repeated .micromsg.GameIntro GameIntroList = 3;
inline int GetGameIntroListResponse::gameintrolist_size() const {
  return gameintrolist_.size();
}
inline void GetGameIntroListResponse::clear_gameintrolist() {
  gameintrolist_.Clear();
}
inline const ::micromsg::GameIntro& GetGameIntroListResponse::gameintrolist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetGameIntroListResponse.GameIntroList)
  return gameintrolist_.Get(index);
}
inline ::micromsg::GameIntro* GetGameIntroListResponse::mutable_gameintrolist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetGameIntroListResponse.GameIntroList)
  return gameintrolist_.Mutable(index);
}
inline ::micromsg::GameIntro* GetGameIntroListResponse::add_gameintrolist() {
  // @@protoc_insertion_point(field_add:micromsg.GetGameIntroListResponse.GameIntroList)
  return gameintrolist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::GameIntro >*
GetGameIntroListResponse::mutable_gameintrolist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetGameIntroListResponse.GameIntroList)
  return &gameintrolist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::GameIntro >&
GetGameIntroListResponse::gameintrolist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetGameIntroListResponse.GameIntroList)
  return gameintrolist_;
}

// -------------------------------------------------------------------

// GetAppPersonalInfoListRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetAppPersonalInfoListRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAppPersonalInfoListRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAppPersonalInfoListRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAppPersonalInfoListRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetAppPersonalInfoListRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppPersonalInfoListRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetAppPersonalInfoListRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppPersonalInfoListRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetAppPersonalInfoListRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetAppPersonalInfoListRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetAppPersonalInfoListRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAppPersonalInfoListRequest.BaseRequest)
}

// required uint32 Count = 2;
inline bool GetAppPersonalInfoListRequest::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetAppPersonalInfoListRequest::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetAppPersonalInfoListRequest::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetAppPersonalInfoListRequest::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 GetAppPersonalInfoListRequest::count() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppPersonalInfoListRequest.Count)
  return count_;
}
inline void GetAppPersonalInfoListRequest::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetAppPersonalInfoListRequest.Count)
}

// repeated .micromsg.SKBuiltinString_t AppIdList = 3;
inline int GetAppPersonalInfoListRequest::appidlist_size() const {
  return appidlist_.size();
}
inline void GetAppPersonalInfoListRequest::clear_appidlist() {
  appidlist_.Clear();
}
inline const ::micromsg::SKBuiltinString_t& GetAppPersonalInfoListRequest::appidlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppPersonalInfoListRequest.AppIdList)
  return appidlist_.Get(index);
}
inline ::micromsg::SKBuiltinString_t* GetAppPersonalInfoListRequest::mutable_appidlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppPersonalInfoListRequest.AppIdList)
  return appidlist_.Mutable(index);
}
inline ::micromsg::SKBuiltinString_t* GetAppPersonalInfoListRequest::add_appidlist() {
  // @@protoc_insertion_point(field_add:micromsg.GetAppPersonalInfoListRequest.AppIdList)
  return appidlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
GetAppPersonalInfoListRequest::mutable_appidlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetAppPersonalInfoListRequest.AppIdList)
  return &appidlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
GetAppPersonalInfoListRequest::appidlist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetAppPersonalInfoListRequest.AppIdList)
  return appidlist_;
}

// optional uint32 Scene = 4;
inline bool GetAppPersonalInfoListRequest::has_scene() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetAppPersonalInfoListRequest::set_has_scene() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetAppPersonalInfoListRequest::clear_has_scene() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetAppPersonalInfoListRequest::clear_scene() {
  scene_ = 0u;
  clear_has_scene();
}
inline ::google::protobuf::uint32 GetAppPersonalInfoListRequest::scene() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppPersonalInfoListRequest.Scene)
  return scene_;
}
inline void GetAppPersonalInfoListRequest::set_scene(::google::protobuf::uint32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetAppPersonalInfoListRequest.Scene)
}

// -------------------------------------------------------------------

// AppPersonalInfo

// optional string AppID = 1;
inline bool AppPersonalInfo::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppPersonalInfo::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppPersonalInfo::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppPersonalInfo::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
inline const ::std::string& AppPersonalInfo::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.AppPersonalInfo.AppID)
  return appid_.GetNoArena();
}
inline void AppPersonalInfo::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AppPersonalInfo.AppID)
}
#if LANG_CXX11
inline void AppPersonalInfo::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AppPersonalInfo.AppID)
}
#endif
inline void AppPersonalInfo::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AppPersonalInfo.AppID)
}
inline void AppPersonalInfo::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AppPersonalInfo.AppID)
}
inline ::std::string* AppPersonalInfo::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.AppPersonalInfo.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppPersonalInfo::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.AppPersonalInfo.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppPersonalInfo::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppPersonalInfo.AppID)
}

// optional string PersonalSettingXml = 2;
inline bool AppPersonalInfo::has_personalsettingxml() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppPersonalInfo::set_has_personalsettingxml() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppPersonalInfo::clear_has_personalsettingxml() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppPersonalInfo::clear_personalsettingxml() {
  personalsettingxml_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_personalsettingxml();
}
inline const ::std::string& AppPersonalInfo::personalsettingxml() const {
  // @@protoc_insertion_point(field_get:micromsg.AppPersonalInfo.PersonalSettingXml)
  return personalsettingxml_.GetNoArena();
}
inline void AppPersonalInfo::set_personalsettingxml(const ::std::string& value) {
  set_has_personalsettingxml();
  personalsettingxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AppPersonalInfo.PersonalSettingXml)
}
#if LANG_CXX11
inline void AppPersonalInfo::set_personalsettingxml(::std::string&& value) {
  set_has_personalsettingxml();
  personalsettingxml_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AppPersonalInfo.PersonalSettingXml)
}
#endif
inline void AppPersonalInfo::set_personalsettingxml(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_personalsettingxml();
  personalsettingxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AppPersonalInfo.PersonalSettingXml)
}
inline void AppPersonalInfo::set_personalsettingxml(const char* value, size_t size) {
  set_has_personalsettingxml();
  personalsettingxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AppPersonalInfo.PersonalSettingXml)
}
inline ::std::string* AppPersonalInfo::mutable_personalsettingxml() {
  set_has_personalsettingxml();
  // @@protoc_insertion_point(field_mutable:micromsg.AppPersonalInfo.PersonalSettingXml)
  return personalsettingxml_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppPersonalInfo::release_personalsettingxml() {
  // @@protoc_insertion_point(field_release:micromsg.AppPersonalInfo.PersonalSettingXml)
  clear_has_personalsettingxml();
  return personalsettingxml_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppPersonalInfo::set_allocated_personalsettingxml(::std::string* personalsettingxml) {
  if (personalsettingxml != NULL) {
    set_has_personalsettingxml();
  } else {
    clear_has_personalsettingxml();
  }
  personalsettingxml_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), personalsettingxml);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppPersonalInfo.PersonalSettingXml)
}

// -------------------------------------------------------------------

// GetAppPersonalInfoListResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetAppPersonalInfoListResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAppPersonalInfoListResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAppPersonalInfoListResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAppPersonalInfoListResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetAppPersonalInfoListResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppPersonalInfoListResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetAppPersonalInfoListResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppPersonalInfoListResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetAppPersonalInfoListResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetAppPersonalInfoListResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetAppPersonalInfoListResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAppPersonalInfoListResponse.BaseResponse)
}

// required uint32 Count = 2;
inline bool GetAppPersonalInfoListResponse::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetAppPersonalInfoListResponse::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetAppPersonalInfoListResponse::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetAppPersonalInfoListResponse::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 GetAppPersonalInfoListResponse::count() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppPersonalInfoListResponse.Count)
  return count_;
}
inline void GetAppPersonalInfoListResponse::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetAppPersonalInfoListResponse.Count)
}

// repeated .micromsg.AppPersonalInfo AppPersonalInfoList = 3;
inline int GetAppPersonalInfoListResponse::apppersonalinfolist_size() const {
  return apppersonalinfolist_.size();
}
inline void GetAppPersonalInfoListResponse::clear_apppersonalinfolist() {
  apppersonalinfolist_.Clear();
}
inline const ::micromsg::AppPersonalInfo& GetAppPersonalInfoListResponse::apppersonalinfolist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppPersonalInfoListResponse.AppPersonalInfoList)
  return apppersonalinfolist_.Get(index);
}
inline ::micromsg::AppPersonalInfo* GetAppPersonalInfoListResponse::mutable_apppersonalinfolist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppPersonalInfoListResponse.AppPersonalInfoList)
  return apppersonalinfolist_.Mutable(index);
}
inline ::micromsg::AppPersonalInfo* GetAppPersonalInfoListResponse::add_apppersonalinfolist() {
  // @@protoc_insertion_point(field_add:micromsg.GetAppPersonalInfoListResponse.AppPersonalInfoList)
  return apppersonalinfolist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::AppPersonalInfo >*
GetAppPersonalInfoListResponse::mutable_apppersonalinfolist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetAppPersonalInfoListResponse.AppPersonalInfoList)
  return &apppersonalinfolist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::AppPersonalInfo >&
GetAppPersonalInfoListResponse::apppersonalinfolist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetAppPersonalInfoListResponse.AppPersonalInfoList)
  return apppersonalinfolist_;
}

// -------------------------------------------------------------------

// GetSuggestionAppDetailRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetSuggestionAppDetailRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetSuggestionAppDetailRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetSuggestionAppDetailRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetSuggestionAppDetailRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetSuggestionAppDetailRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppDetailRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetSuggestionAppDetailRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetSuggestionAppDetailRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetSuggestionAppDetailRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetSuggestionAppDetailRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetSuggestionAppDetailRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetSuggestionAppDetailRequest.BaseRequest)
}

// optional string AppID = 2;
inline bool GetSuggestionAppDetailRequest::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetSuggestionAppDetailRequest::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetSuggestionAppDetailRequest::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetSuggestionAppDetailRequest::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
inline const ::std::string& GetSuggestionAppDetailRequest::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppDetailRequest.AppID)
  return appid_.GetNoArena();
}
inline void GetSuggestionAppDetailRequest::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetSuggestionAppDetailRequest.AppID)
}
#if LANG_CXX11
inline void GetSuggestionAppDetailRequest::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetSuggestionAppDetailRequest.AppID)
}
#endif
inline void GetSuggestionAppDetailRequest::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetSuggestionAppDetailRequest.AppID)
}
inline void GetSuggestionAppDetailRequest::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetSuggestionAppDetailRequest.AppID)
}
inline ::std::string* GetSuggestionAppDetailRequest::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetSuggestionAppDetailRequest.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetSuggestionAppDetailRequest::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.GetSuggestionAppDetailRequest.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetSuggestionAppDetailRequest::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetSuggestionAppDetailRequest.AppID)
}

// optional string Lang = 3;
inline bool GetSuggestionAppDetailRequest::has_lang() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetSuggestionAppDetailRequest::set_has_lang() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetSuggestionAppDetailRequest::clear_has_lang() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetSuggestionAppDetailRequest::clear_lang() {
  lang_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lang();
}
inline const ::std::string& GetSuggestionAppDetailRequest::lang() const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppDetailRequest.Lang)
  return lang_.GetNoArena();
}
inline void GetSuggestionAppDetailRequest::set_lang(const ::std::string& value) {
  set_has_lang();
  lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetSuggestionAppDetailRequest.Lang)
}
#if LANG_CXX11
inline void GetSuggestionAppDetailRequest::set_lang(::std::string&& value) {
  set_has_lang();
  lang_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetSuggestionAppDetailRequest.Lang)
}
#endif
inline void GetSuggestionAppDetailRequest::set_lang(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_lang();
  lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetSuggestionAppDetailRequest.Lang)
}
inline void GetSuggestionAppDetailRequest::set_lang(const char* value, size_t size) {
  set_has_lang();
  lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetSuggestionAppDetailRequest.Lang)
}
inline ::std::string* GetSuggestionAppDetailRequest::mutable_lang() {
  set_has_lang();
  // @@protoc_insertion_point(field_mutable:micromsg.GetSuggestionAppDetailRequest.Lang)
  return lang_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetSuggestionAppDetailRequest::release_lang() {
  // @@protoc_insertion_point(field_release:micromsg.GetSuggestionAppDetailRequest.Lang)
  clear_has_lang();
  return lang_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetSuggestionAppDetailRequest::set_allocated_lang(::std::string* lang) {
  if (lang != NULL) {
    set_has_lang();
  } else {
    clear_has_lang();
  }
  lang_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetSuggestionAppDetailRequest.Lang)
}

// -------------------------------------------------------------------

// GetSuggestionAppDetailResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetSuggestionAppDetailResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetSuggestionAppDetailResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetSuggestionAppDetailResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetSuggestionAppDetailResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetSuggestionAppDetailResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppDetailResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetSuggestionAppDetailResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetSuggestionAppDetailResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetSuggestionAppDetailResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetSuggestionAppDetailResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetSuggestionAppDetailResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetSuggestionAppDetailResponse.BaseResponse)
}

// required .micromsg.RcAppList RcDetail = 2;
inline bool GetSuggestionAppDetailResponse::has_rcdetail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetSuggestionAppDetailResponse::set_has_rcdetail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetSuggestionAppDetailResponse::clear_has_rcdetail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetSuggestionAppDetailResponse::clear_rcdetail() {
  if (rcdetail_ != NULL) rcdetail_->::micromsg::RcAppList::Clear();
  clear_has_rcdetail();
}
inline const ::micromsg::RcAppList& GetSuggestionAppDetailResponse::rcdetail() const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppDetailResponse.RcDetail)
  return rcdetail_ != NULL ? *rcdetail_
                         : *::micromsg::RcAppList::internal_default_instance();
}
inline ::micromsg::RcAppList* GetSuggestionAppDetailResponse::mutable_rcdetail() {
  set_has_rcdetail();
  if (rcdetail_ == NULL) {
    rcdetail_ = new ::micromsg::RcAppList;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetSuggestionAppDetailResponse.RcDetail)
  return rcdetail_;
}
inline ::micromsg::RcAppList* GetSuggestionAppDetailResponse::release_rcdetail() {
  // @@protoc_insertion_point(field_release:micromsg.GetSuggestionAppDetailResponse.RcDetail)
  clear_has_rcdetail();
  ::micromsg::RcAppList* temp = rcdetail_;
  rcdetail_ = NULL;
  return temp;
}
inline void GetSuggestionAppDetailResponse::set_allocated_rcdetail(::micromsg::RcAppList* rcdetail) {
  delete rcdetail_;
  rcdetail_ = rcdetail;
  if (rcdetail) {
    set_has_rcdetail();
  } else {
    clear_has_rcdetail();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetSuggestionAppDetailResponse.RcDetail)
}

// -------------------------------------------------------------------

// UserGameRankInfo

// optional string UserName = 1;
inline bool UserGameRankInfo::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserGameRankInfo::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserGameRankInfo::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserGameRankInfo::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& UserGameRankInfo::username() const {
  // @@protoc_insertion_point(field_get:micromsg.UserGameRankInfo.UserName)
  return username_.GetNoArena();
}
inline void UserGameRankInfo::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.UserGameRankInfo.UserName)
}
#if LANG_CXX11
inline void UserGameRankInfo::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.UserGameRankInfo.UserName)
}
#endif
inline void UserGameRankInfo::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.UserGameRankInfo.UserName)
}
inline void UserGameRankInfo::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.UserGameRankInfo.UserName)
}
inline ::std::string* UserGameRankInfo::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.UserGameRankInfo.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserGameRankInfo::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.UserGameRankInfo.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserGameRankInfo::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.UserGameRankInfo.UserName)
}

// required uint32 Score = 2;
inline bool UserGameRankInfo::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserGameRankInfo::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserGameRankInfo::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserGameRankInfo::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 UserGameRankInfo::score() const {
  // @@protoc_insertion_point(field_get:micromsg.UserGameRankInfo.Score)
  return score_;
}
inline void UserGameRankInfo::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:micromsg.UserGameRankInfo.Score)
}

// optional uint32 Rank = 3;
inline bool UserGameRankInfo::has_rank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserGameRankInfo::set_has_rank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserGameRankInfo::clear_has_rank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserGameRankInfo::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 UserGameRankInfo::rank() const {
  // @@protoc_insertion_point(field_get:micromsg.UserGameRankInfo.Rank)
  return rank_;
}
inline void UserGameRankInfo::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:micromsg.UserGameRankInfo.Rank)
}

// -------------------------------------------------------------------

// GetGameRankListRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetGameRankListRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetGameRankListRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetGameRankListRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetGameRankListRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetGameRankListRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetGameRankListRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetGameRankListRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetGameRankListRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetGameRankListRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetGameRankListRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetGameRankListRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetGameRankListRequest.BaseRequest)
}

// optional string AppID = 2;
inline bool GetGameRankListRequest::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGameRankListRequest::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGameRankListRequest::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGameRankListRequest::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
inline const ::std::string& GetGameRankListRequest::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetGameRankListRequest.AppID)
  return appid_.GetNoArena();
}
inline void GetGameRankListRequest::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetGameRankListRequest.AppID)
}
#if LANG_CXX11
inline void GetGameRankListRequest::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetGameRankListRequest.AppID)
}
#endif
inline void GetGameRankListRequest::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetGameRankListRequest.AppID)
}
inline void GetGameRankListRequest::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetGameRankListRequest.AppID)
}
inline ::std::string* GetGameRankListRequest::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetGameRankListRequest.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetGameRankListRequest::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.GetGameRankListRequest.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetGameRankListRequest::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetGameRankListRequest.AppID)
}

// -------------------------------------------------------------------

// GetGameRankListResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetGameRankListResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetGameRankListResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetGameRankListResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetGameRankListResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetGameRankListResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetGameRankListResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetGameRankListResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetGameRankListResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetGameRankListResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetGameRankListResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetGameRankListResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetGameRankListResponse.BaseResponse)
}

// required uint32 Count = 2;
inline bool GetGameRankListResponse::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetGameRankListResponse::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetGameRankListResponse::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetGameRankListResponse::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 GetGameRankListResponse::count() const {
  // @@protoc_insertion_point(field_get:micromsg.GetGameRankListResponse.Count)
  return count_;
}
inline void GetGameRankListResponse::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetGameRankListResponse.Count)
}

// repeated .micromsg.UserGameRankInfo RankList = 3;
inline int GetGameRankListResponse::ranklist_size() const {
  return ranklist_.size();
}
inline void GetGameRankListResponse::clear_ranklist() {
  ranklist_.Clear();
}
inline const ::micromsg::UserGameRankInfo& GetGameRankListResponse::ranklist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetGameRankListResponse.RankList)
  return ranklist_.Get(index);
}
inline ::micromsg::UserGameRankInfo* GetGameRankListResponse::mutable_ranklist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetGameRankListResponse.RankList)
  return ranklist_.Mutable(index);
}
inline ::micromsg::UserGameRankInfo* GetGameRankListResponse::add_ranklist() {
  // @@protoc_insertion_point(field_add:micromsg.GetGameRankListResponse.RankList)
  return ranklist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::UserGameRankInfo >*
GetGameRankListResponse::mutable_ranklist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetGameRankListResponse.RankList)
  return &ranklist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::UserGameRankInfo >&
GetGameRankListResponse::ranklist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetGameRankListResponse.RankList)
  return ranklist_;
}

// optional uint32 FriendsCount = 4;
inline bool GetGameRankListResponse::has_friendscount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetGameRankListResponse::set_has_friendscount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetGameRankListResponse::clear_has_friendscount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetGameRankListResponse::clear_friendscount() {
  friendscount_ = 0u;
  clear_has_friendscount();
}
inline ::google::protobuf::uint32 GetGameRankListResponse::friendscount() const {
  // @@protoc_insertion_point(field_get:micromsg.GetGameRankListResponse.FriendsCount)
  return friendscount_;
}
inline void GetGameRankListResponse::set_friendscount(::google::protobuf::uint32 value) {
  set_has_friendscount();
  friendscount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetGameRankListResponse.FriendsCount)
}

// optional uint32 HasReportScore = 5;
inline bool GetGameRankListResponse::has_hasreportscore() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetGameRankListResponse::set_has_hasreportscore() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetGameRankListResponse::clear_has_hasreportscore() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetGameRankListResponse::clear_hasreportscore() {
  hasreportscore_ = 0u;
  clear_has_hasreportscore();
}
inline ::google::protobuf::uint32 GetGameRankListResponse::hasreportscore() const {
  // @@protoc_insertion_point(field_get:micromsg.GetGameRankListResponse.HasReportScore)
  return hasreportscore_;
}
inline void GetGameRankListResponse::set_hasreportscore(::google::protobuf::uint32 value) {
  set_has_hasreportscore();
  hasreportscore_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetGameRankListResponse.HasReportScore)
}

// optional .micromsg.YYBStruct SYYB = 6;
inline bool GetGameRankListResponse::has_syyb() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetGameRankListResponse::set_has_syyb() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetGameRankListResponse::clear_has_syyb() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetGameRankListResponse::clear_syyb() {
  if (syyb_ != NULL) syyb_->::micromsg::YYBStruct::Clear();
  clear_has_syyb();
}
inline const ::micromsg::YYBStruct& GetGameRankListResponse::syyb() const {
  // @@protoc_insertion_point(field_get:micromsg.GetGameRankListResponse.SYYB)
  return syyb_ != NULL ? *syyb_
                         : *::micromsg::YYBStruct::internal_default_instance();
}
inline ::micromsg::YYBStruct* GetGameRankListResponse::mutable_syyb() {
  set_has_syyb();
  if (syyb_ == NULL) {
    syyb_ = new ::micromsg::YYBStruct;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetGameRankListResponse.SYYB)
  return syyb_;
}
inline ::micromsg::YYBStruct* GetGameRankListResponse::release_syyb() {
  // @@protoc_insertion_point(field_release:micromsg.GetGameRankListResponse.SYYB)
  clear_has_syyb();
  ::micromsg::YYBStruct* temp = syyb_;
  syyb_ = NULL;
  return temp;
}
inline void GetGameRankListResponse::set_allocated_syyb(::micromsg::YYBStruct* syyb) {
  delete syyb_;
  syyb_ = syyb;
  if (syyb) {
    set_has_syyb();
  } else {
    clear_has_syyb();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetGameRankListResponse.SYYB)
}

// -------------------------------------------------------------------

// GetAppInfoListRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetAppInfoListRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAppInfoListRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAppInfoListRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAppInfoListRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetAppInfoListRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppInfoListRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetAppInfoListRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppInfoListRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetAppInfoListRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetAppInfoListRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetAppInfoListRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAppInfoListRequest.BaseRequest)
}

// required int32 Count = 2;
inline bool GetAppInfoListRequest::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetAppInfoListRequest::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetAppInfoListRequest::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetAppInfoListRequest::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 GetAppInfoListRequest::count() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppInfoListRequest.Count)
  return count_;
}
inline void GetAppInfoListRequest::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetAppInfoListRequest.Count)
}

// repeated .micromsg.SKBuiltinString_t AppIdList = 3;
inline int GetAppInfoListRequest::appidlist_size() const {
  return appidlist_.size();
}
inline void GetAppInfoListRequest::clear_appidlist() {
  appidlist_.Clear();
}
inline const ::micromsg::SKBuiltinString_t& GetAppInfoListRequest::appidlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppInfoListRequest.AppIdList)
  return appidlist_.Get(index);
}
inline ::micromsg::SKBuiltinString_t* GetAppInfoListRequest::mutable_appidlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppInfoListRequest.AppIdList)
  return appidlist_.Mutable(index);
}
inline ::micromsg::SKBuiltinString_t* GetAppInfoListRequest::add_appidlist() {
  // @@protoc_insertion_point(field_add:micromsg.GetAppInfoListRequest.AppIdList)
  return appidlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
GetAppInfoListRequest::mutable_appidlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetAppInfoListRequest.AppIdList)
  return &appidlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
GetAppInfoListRequest::appidlist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetAppInfoListRequest.AppIdList)
  return appidlist_;
}

// -------------------------------------------------------------------

// BizAppInfo

// optional string AppId = 1;
inline bool BizAppInfo::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BizAppInfo::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BizAppInfo::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BizAppInfo::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
inline const ::std::string& BizAppInfo::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.AppId)
  return appid_.GetNoArena();
}
inline void BizAppInfo::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.AppId)
}
#if LANG_CXX11
inline void BizAppInfo::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.AppId)
}
#endif
inline void BizAppInfo::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.AppId)
}
inline void BizAppInfo::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.AppId)
}
inline ::std::string* BizAppInfo::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.AppId)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BizAppInfo::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.AppId)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BizAppInfo::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.AppId)
}

// optional string Name = 2;
inline bool BizAppInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BizAppInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BizAppInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BizAppInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& BizAppInfo::name() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.Name)
  return name_.GetNoArena();
}
inline void BizAppInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.Name)
}
#if LANG_CXX11
inline void BizAppInfo::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.Name)
}
#endif
inline void BizAppInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.Name)
}
inline void BizAppInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.Name)
}
inline ::std::string* BizAppInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BizAppInfo::release_name() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.Name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BizAppInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.Name)
}

// optional string Description = 3;
inline bool BizAppInfo::has_description() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BizAppInfo::set_has_description() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BizAppInfo::clear_has_description() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BizAppInfo::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
inline const ::std::string& BizAppInfo::description() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.Description)
  return description_.GetNoArena();
}
inline void BizAppInfo::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.Description)
}
#if LANG_CXX11
inline void BizAppInfo::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.Description)
}
#endif
inline void BizAppInfo::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.Description)
}
inline void BizAppInfo::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.Description)
}
inline ::std::string* BizAppInfo::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.Description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BizAppInfo::release_description() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.Description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BizAppInfo::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.Description)
}

// optional string Name4EnUS = 4;
inline bool BizAppInfo::has_name4enus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BizAppInfo::set_has_name4enus() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BizAppInfo::clear_has_name4enus() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BizAppInfo::clear_name4enus() {
  name4enus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name4enus();
}
inline const ::std::string& BizAppInfo::name4enus() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.Name4EnUS)
  return name4enus_.GetNoArena();
}
inline void BizAppInfo::set_name4enus(const ::std::string& value) {
  set_has_name4enus();
  name4enus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.Name4EnUS)
}
#if LANG_CXX11
inline void BizAppInfo::set_name4enus(::std::string&& value) {
  set_has_name4enus();
  name4enus_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.Name4EnUS)
}
#endif
inline void BizAppInfo::set_name4enus(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name4enus();
  name4enus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.Name4EnUS)
}
inline void BizAppInfo::set_name4enus(const char* value, size_t size) {
  set_has_name4enus();
  name4enus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.Name4EnUS)
}
inline ::std::string* BizAppInfo::mutable_name4enus() {
  set_has_name4enus();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.Name4EnUS)
  return name4enus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BizAppInfo::release_name4enus() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.Name4EnUS)
  clear_has_name4enus();
  return name4enus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BizAppInfo::set_allocated_name4enus(::std::string* name4enus) {
  if (name4enus != NULL) {
    set_has_name4enus();
  } else {
    clear_has_name4enus();
  }
  name4enus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name4enus);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.Name4EnUS)
}

// optional string Description4EnUS = 5;
inline bool BizAppInfo::has_description4enus() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BizAppInfo::set_has_description4enus() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BizAppInfo::clear_has_description4enus() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BizAppInfo::clear_description4enus() {
  description4enus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description4enus();
}
inline const ::std::string& BizAppInfo::description4enus() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.Description4EnUS)
  return description4enus_.GetNoArena();
}
inline void BizAppInfo::set_description4enus(const ::std::string& value) {
  set_has_description4enus();
  description4enus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.Description4EnUS)
}
#if LANG_CXX11
inline void BizAppInfo::set_description4enus(::std::string&& value) {
  set_has_description4enus();
  description4enus_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.Description4EnUS)
}
#endif
inline void BizAppInfo::set_description4enus(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description4enus();
  description4enus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.Description4EnUS)
}
inline void BizAppInfo::set_description4enus(const char* value, size_t size) {
  set_has_description4enus();
  description4enus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.Description4EnUS)
}
inline ::std::string* BizAppInfo::mutable_description4enus() {
  set_has_description4enus();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.Description4EnUS)
  return description4enus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BizAppInfo::release_description4enus() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.Description4EnUS)
  clear_has_description4enus();
  return description4enus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BizAppInfo::set_allocated_description4enus(::std::string* description4enus) {
  if (description4enus != NULL) {
    set_has_description4enus();
  } else {
    clear_has_description4enus();
  }
  description4enus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description4enus);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.Description4EnUS)
}

// optional string Name4ZhTW = 6;
inline bool BizAppInfo::has_name4zhtw() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BizAppInfo::set_has_name4zhtw() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BizAppInfo::clear_has_name4zhtw() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BizAppInfo::clear_name4zhtw() {
  name4zhtw_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name4zhtw();
}
inline const ::std::string& BizAppInfo::name4zhtw() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.Name4ZhTW)
  return name4zhtw_.GetNoArena();
}
inline void BizAppInfo::set_name4zhtw(const ::std::string& value) {
  set_has_name4zhtw();
  name4zhtw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.Name4ZhTW)
}
#if LANG_CXX11
inline void BizAppInfo::set_name4zhtw(::std::string&& value) {
  set_has_name4zhtw();
  name4zhtw_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.Name4ZhTW)
}
#endif
inline void BizAppInfo::set_name4zhtw(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name4zhtw();
  name4zhtw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.Name4ZhTW)
}
inline void BizAppInfo::set_name4zhtw(const char* value, size_t size) {
  set_has_name4zhtw();
  name4zhtw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.Name4ZhTW)
}
inline ::std::string* BizAppInfo::mutable_name4zhtw() {
  set_has_name4zhtw();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.Name4ZhTW)
  return name4zhtw_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BizAppInfo::release_name4zhtw() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.Name4ZhTW)
  clear_has_name4zhtw();
  return name4zhtw_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BizAppInfo::set_allocated_name4zhtw(::std::string* name4zhtw) {
  if (name4zhtw != NULL) {
    set_has_name4zhtw();
  } else {
    clear_has_name4zhtw();
  }
  name4zhtw_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name4zhtw);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.Name4ZhTW)
}

// optional string Description4ZhTW = 7;
inline bool BizAppInfo::has_description4zhtw() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BizAppInfo::set_has_description4zhtw() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BizAppInfo::clear_has_description4zhtw() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BizAppInfo::clear_description4zhtw() {
  description4zhtw_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description4zhtw();
}
inline const ::std::string& BizAppInfo::description4zhtw() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.Description4ZhTW)
  return description4zhtw_.GetNoArena();
}
inline void BizAppInfo::set_description4zhtw(const ::std::string& value) {
  set_has_description4zhtw();
  description4zhtw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.Description4ZhTW)
}
#if LANG_CXX11
inline void BizAppInfo::set_description4zhtw(::std::string&& value) {
  set_has_description4zhtw();
  description4zhtw_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.Description4ZhTW)
}
#endif
inline void BizAppInfo::set_description4zhtw(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description4zhtw();
  description4zhtw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.Description4ZhTW)
}
inline void BizAppInfo::set_description4zhtw(const char* value, size_t size) {
  set_has_description4zhtw();
  description4zhtw_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.Description4ZhTW)
}
inline ::std::string* BizAppInfo::mutable_description4zhtw() {
  set_has_description4zhtw();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.Description4ZhTW)
  return description4zhtw_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BizAppInfo::release_description4zhtw() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.Description4ZhTW)
  clear_has_description4zhtw();
  return description4zhtw_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BizAppInfo::set_allocated_description4zhtw(::std::string* description4zhtw) {
  if (description4zhtw != NULL) {
    set_has_description4zhtw();
  } else {
    clear_has_description4zhtw();
  }
  description4zhtw_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description4zhtw);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.Description4ZhTW)
}

// optional string IconUrlSD = 8;
inline bool BizAppInfo::has_iconurlsd() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BizAppInfo::set_has_iconurlsd() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BizAppInfo::clear_has_iconurlsd() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BizAppInfo::clear_iconurlsd() {
  iconurlsd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_iconurlsd();
}
inline const ::std::string& BizAppInfo::iconurlsd() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.IconUrlSD)
  return iconurlsd_.GetNoArena();
}
inline void BizAppInfo::set_iconurlsd(const ::std::string& value) {
  set_has_iconurlsd();
  iconurlsd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.IconUrlSD)
}
#if LANG_CXX11
inline void BizAppInfo::set_iconurlsd(::std::string&& value) {
  set_has_iconurlsd();
  iconurlsd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.IconUrlSD)
}
#endif
inline void BizAppInfo::set_iconurlsd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_iconurlsd();
  iconurlsd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.IconUrlSD)
}
inline void BizAppInfo::set_iconurlsd(const char* value, size_t size) {
  set_has_iconurlsd();
  iconurlsd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.IconUrlSD)
}
inline ::std::string* BizAppInfo::mutable_iconurlsd() {
  set_has_iconurlsd();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.IconUrlSD)
  return iconurlsd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BizAppInfo::release_iconurlsd() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.IconUrlSD)
  clear_has_iconurlsd();
  return iconurlsd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BizAppInfo::set_allocated_iconurlsd(::std::string* iconurlsd) {
  if (iconurlsd != NULL) {
    set_has_iconurlsd();
  } else {
    clear_has_iconurlsd();
  }
  iconurlsd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), iconurlsd);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.IconUrlSD)
}

// optional string IconUrlHD = 9;
inline bool BizAppInfo::has_iconurlhd() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void BizAppInfo::set_has_iconurlhd() {
  _has_bits_[0] |= 0x00000100u;
}
inline void BizAppInfo::clear_has_iconurlhd() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void BizAppInfo::clear_iconurlhd() {
  iconurlhd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_iconurlhd();
}
inline const ::std::string& BizAppInfo::iconurlhd() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.IconUrlHD)
  return iconurlhd_.GetNoArena();
}
inline void BizAppInfo::set_iconurlhd(const ::std::string& value) {
  set_has_iconurlhd();
  iconurlhd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.IconUrlHD)
}
#if LANG_CXX11
inline void BizAppInfo::set_iconurlhd(::std::string&& value) {
  set_has_iconurlhd();
  iconurlhd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.IconUrlHD)
}
#endif
inline void BizAppInfo::set_iconurlhd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_iconurlhd();
  iconurlhd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.IconUrlHD)
}
inline void BizAppInfo::set_iconurlhd(const char* value, size_t size) {
  set_has_iconurlhd();
  iconurlhd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.IconUrlHD)
}
inline ::std::string* BizAppInfo::mutable_iconurlhd() {
  set_has_iconurlhd();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.IconUrlHD)
  return iconurlhd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BizAppInfo::release_iconurlhd() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.IconUrlHD)
  clear_has_iconurlhd();
  return iconurlhd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BizAppInfo::set_allocated_iconurlhd(::std::string* iconurlhd) {
  if (iconurlhd != NULL) {
    set_has_iconurlhd();
  } else {
    clear_has_iconurlhd();
  }
  iconurlhd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), iconurlhd);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.IconUrlHD)
}

// optional string StoreUrl = 10;
inline bool BizAppInfo::has_storeurl() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void BizAppInfo::set_has_storeurl() {
  _has_bits_[0] |= 0x00000200u;
}
inline void BizAppInfo::clear_has_storeurl() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void BizAppInfo::clear_storeurl() {
  storeurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_storeurl();
}
inline const ::std::string& BizAppInfo::storeurl() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.StoreUrl)
  return storeurl_.GetNoArena();
}
inline void BizAppInfo::set_storeurl(const ::std::string& value) {
  set_has_storeurl();
  storeurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.StoreUrl)
}
#if LANG_CXX11
inline void BizAppInfo::set_storeurl(::std::string&& value) {
  set_has_storeurl();
  storeurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.StoreUrl)
}
#endif
inline void BizAppInfo::set_storeurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_storeurl();
  storeurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.StoreUrl)
}
inline void BizAppInfo::set_storeurl(const char* value, size_t size) {
  set_has_storeurl();
  storeurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.StoreUrl)
}
inline ::std::string* BizAppInfo::mutable_storeurl() {
  set_has_storeurl();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.StoreUrl)
  return storeurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BizAppInfo::release_storeurl() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.StoreUrl)
  clear_has_storeurl();
  return storeurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BizAppInfo::set_allocated_storeurl(::std::string* storeurl) {
  if (storeurl != NULL) {
    set_has_storeurl();
  } else {
    clear_has_storeurl();
  }
  storeurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), storeurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.StoreUrl)
}

// optional string WatermarkUrl = 11;
inline bool BizAppInfo::has_watermarkurl() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void BizAppInfo::set_has_watermarkurl() {
  _has_bits_[0] |= 0x00000400u;
}
inline void BizAppInfo::clear_has_watermarkurl() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void BizAppInfo::clear_watermarkurl() {
  watermarkurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_watermarkurl();
}
inline const ::std::string& BizAppInfo::watermarkurl() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.WatermarkUrl)
  return watermarkurl_.GetNoArena();
}
inline void BizAppInfo::set_watermarkurl(const ::std::string& value) {
  set_has_watermarkurl();
  watermarkurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.WatermarkUrl)
}
#if LANG_CXX11
inline void BizAppInfo::set_watermarkurl(::std::string&& value) {
  set_has_watermarkurl();
  watermarkurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.WatermarkUrl)
}
#endif
inline void BizAppInfo::set_watermarkurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_watermarkurl();
  watermarkurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.WatermarkUrl)
}
inline void BizAppInfo::set_watermarkurl(const char* value, size_t size) {
  set_has_watermarkurl();
  watermarkurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.WatermarkUrl)
}
inline ::std::string* BizAppInfo::mutable_watermarkurl() {
  set_has_watermarkurl();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.WatermarkUrl)
  return watermarkurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BizAppInfo::release_watermarkurl() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.WatermarkUrl)
  clear_has_watermarkurl();
  return watermarkurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BizAppInfo::set_allocated_watermarkurl(::std::string* watermarkurl) {
  if (watermarkurl != NULL) {
    set_has_watermarkurl();
  } else {
    clear_has_watermarkurl();
  }
  watermarkurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), watermarkurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.WatermarkUrl)
}

// optional string AndroidPackageName = 12;
inline bool BizAppInfo::has_androidpackagename() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void BizAppInfo::set_has_androidpackagename() {
  _has_bits_[0] |= 0x00000800u;
}
inline void BizAppInfo::clear_has_androidpackagename() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void BizAppInfo::clear_androidpackagename() {
  androidpackagename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_androidpackagename();
}
inline const ::std::string& BizAppInfo::androidpackagename() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.AndroidPackageName)
  return androidpackagename_.GetNoArena();
}
inline void BizAppInfo::set_androidpackagename(const ::std::string& value) {
  set_has_androidpackagename();
  androidpackagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.AndroidPackageName)
}
#if LANG_CXX11
inline void BizAppInfo::set_androidpackagename(::std::string&& value) {
  set_has_androidpackagename();
  androidpackagename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.AndroidPackageName)
}
#endif
inline void BizAppInfo::set_androidpackagename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_androidpackagename();
  androidpackagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.AndroidPackageName)
}
inline void BizAppInfo::set_androidpackagename(const char* value, size_t size) {
  set_has_androidpackagename();
  androidpackagename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.AndroidPackageName)
}
inline ::std::string* BizAppInfo::mutable_androidpackagename() {
  set_has_androidpackagename();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.AndroidPackageName)
  return androidpackagename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BizAppInfo::release_androidpackagename() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.AndroidPackageName)
  clear_has_androidpackagename();
  return androidpackagename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BizAppInfo::set_allocated_androidpackagename(::std::string* androidpackagename) {
  if (androidpackagename != NULL) {
    set_has_androidpackagename();
  } else {
    clear_has_androidpackagename();
  }
  androidpackagename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), androidpackagename);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.AndroidPackageName)
}

// optional string AndroidSignature = 13;
inline bool BizAppInfo::has_androidsignature() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void BizAppInfo::set_has_androidsignature() {
  _has_bits_[0] |= 0x00001000u;
}
inline void BizAppInfo::clear_has_androidsignature() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void BizAppInfo::clear_androidsignature() {
  androidsignature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_androidsignature();
}
inline const ::std::string& BizAppInfo::androidsignature() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.AndroidSignature)
  return androidsignature_.GetNoArena();
}
inline void BizAppInfo::set_androidsignature(const ::std::string& value) {
  set_has_androidsignature();
  androidsignature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.AndroidSignature)
}
#if LANG_CXX11
inline void BizAppInfo::set_androidsignature(::std::string&& value) {
  set_has_androidsignature();
  androidsignature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.AndroidSignature)
}
#endif
inline void BizAppInfo::set_androidsignature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_androidsignature();
  androidsignature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.AndroidSignature)
}
inline void BizAppInfo::set_androidsignature(const char* value, size_t size) {
  set_has_androidsignature();
  androidsignature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.AndroidSignature)
}
inline ::std::string* BizAppInfo::mutable_androidsignature() {
  set_has_androidsignature();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.AndroidSignature)
  return androidsignature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BizAppInfo::release_androidsignature() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.AndroidSignature)
  clear_has_androidsignature();
  return androidsignature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BizAppInfo::set_allocated_androidsignature(::std::string* androidsignature) {
  if (androidsignature != NULL) {
    set_has_androidsignature();
  } else {
    clear_has_androidsignature();
  }
  androidsignature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), androidsignature);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.AndroidSignature)
}

// optional string AppType = 14;
inline bool BizAppInfo::has_apptype() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void BizAppInfo::set_has_apptype() {
  _has_bits_[0] |= 0x00002000u;
}
inline void BizAppInfo::clear_has_apptype() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void BizAppInfo::clear_apptype() {
  apptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_apptype();
}
inline const ::std::string& BizAppInfo::apptype() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.AppType)
  return apptype_.GetNoArena();
}
inline void BizAppInfo::set_apptype(const ::std::string& value) {
  set_has_apptype();
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.AppType)
}
#if LANG_CXX11
inline void BizAppInfo::set_apptype(::std::string&& value) {
  set_has_apptype();
  apptype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.AppType)
}
#endif
inline void BizAppInfo::set_apptype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_apptype();
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.AppType)
}
inline void BizAppInfo::set_apptype(const char* value, size_t size) {
  set_has_apptype();
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.AppType)
}
inline ::std::string* BizAppInfo::mutable_apptype() {
  set_has_apptype();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.AppType)
  return apptype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BizAppInfo::release_apptype() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.AppType)
  clear_has_apptype();
  return apptype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BizAppInfo::set_allocated_apptype(::std::string* apptype) {
  if (apptype != NULL) {
    set_has_apptype();
  } else {
    clear_has_apptype();
  }
  apptype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), apptype);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.AppType)
}

// optional string DevInfo = 15;
inline bool BizAppInfo::has_devinfo() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void BizAppInfo::set_has_devinfo() {
  _has_bits_[0] |= 0x00004000u;
}
inline void BizAppInfo::clear_has_devinfo() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void BizAppInfo::clear_devinfo() {
  devinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_devinfo();
}
inline const ::std::string& BizAppInfo::devinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.DevInfo)
  return devinfo_.GetNoArena();
}
inline void BizAppInfo::set_devinfo(const ::std::string& value) {
  set_has_devinfo();
  devinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.DevInfo)
}
#if LANG_CXX11
inline void BizAppInfo::set_devinfo(::std::string&& value) {
  set_has_devinfo();
  devinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.DevInfo)
}
#endif
inline void BizAppInfo::set_devinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_devinfo();
  devinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.DevInfo)
}
inline void BizAppInfo::set_devinfo(const char* value, size_t size) {
  set_has_devinfo();
  devinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.DevInfo)
}
inline ::std::string* BizAppInfo::mutable_devinfo() {
  set_has_devinfo();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.DevInfo)
  return devinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BizAppInfo::release_devinfo() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.DevInfo)
  clear_has_devinfo();
  return devinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BizAppInfo::set_allocated_devinfo(::std::string* devinfo) {
  if (devinfo != NULL) {
    set_has_devinfo();
  } else {
    clear_has_devinfo();
  }
  devinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devinfo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.DevInfo)
}

// required uint32 AppInfoFlag = 16;
inline bool BizAppInfo::has_appinfoflag() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void BizAppInfo::set_has_appinfoflag() {
  _has_bits_[0] |= 0x00080000u;
}
inline void BizAppInfo::clear_has_appinfoflag() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void BizAppInfo::clear_appinfoflag() {
  appinfoflag_ = 0u;
  clear_has_appinfoflag();
}
inline ::google::protobuf::uint32 BizAppInfo::appinfoflag() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.AppInfoFlag)
  return appinfoflag_;
}
inline void BizAppInfo::set_appinfoflag(::google::protobuf::uint32 value) {
  set_has_appinfoflag();
  appinfoflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.AppInfoFlag)
}

// required uint32 AppVersion = 17;
inline bool BizAppInfo::has_appversion() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void BizAppInfo::set_has_appversion() {
  _has_bits_[0] |= 0x00100000u;
}
inline void BizAppInfo::clear_has_appversion() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void BizAppInfo::clear_appversion() {
  appversion_ = 0u;
  clear_has_appversion();
}
inline ::google::protobuf::uint32 BizAppInfo::appversion() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.AppVersion)
  return appversion_;
}
inline void BizAppInfo::set_appversion(::google::protobuf::uint32 value) {
  set_has_appversion();
  appversion_ = value;
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.AppVersion)
}

// optional uint32 AppUpdateVersion = 18;
inline bool BizAppInfo::has_appupdateversion() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void BizAppInfo::set_has_appupdateversion() {
  _has_bits_[0] |= 0x00200000u;
}
inline void BizAppInfo::clear_has_appupdateversion() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void BizAppInfo::clear_appupdateversion() {
  appupdateversion_ = 0u;
  clear_has_appupdateversion();
}
inline ::google::protobuf::uint32 BizAppInfo::appupdateversion() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.AppUpdateVersion)
  return appupdateversion_;
}
inline void BizAppInfo::set_appupdateversion(::google::protobuf::uint32 value) {
  set_has_appupdateversion();
  appupdateversion_ = value;
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.AppUpdateVersion)
}

// optional string IconUrlMDPI = 19;
inline bool BizAppInfo::has_iconurlmdpi() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void BizAppInfo::set_has_iconurlmdpi() {
  _has_bits_[0] |= 0x00008000u;
}
inline void BizAppInfo::clear_has_iconurlmdpi() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void BizAppInfo::clear_iconurlmdpi() {
  iconurlmdpi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_iconurlmdpi();
}
inline const ::std::string& BizAppInfo::iconurlmdpi() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.IconUrlMDPI)
  return iconurlmdpi_.GetNoArena();
}
inline void BizAppInfo::set_iconurlmdpi(const ::std::string& value) {
  set_has_iconurlmdpi();
  iconurlmdpi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.IconUrlMDPI)
}
#if LANG_CXX11
inline void BizAppInfo::set_iconurlmdpi(::std::string&& value) {
  set_has_iconurlmdpi();
  iconurlmdpi_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.IconUrlMDPI)
}
#endif
inline void BizAppInfo::set_iconurlmdpi(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_iconurlmdpi();
  iconurlmdpi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.IconUrlMDPI)
}
inline void BizAppInfo::set_iconurlmdpi(const char* value, size_t size) {
  set_has_iconurlmdpi();
  iconurlmdpi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.IconUrlMDPI)
}
inline ::std::string* BizAppInfo::mutable_iconurlmdpi() {
  set_has_iconurlmdpi();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.IconUrlMDPI)
  return iconurlmdpi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BizAppInfo::release_iconurlmdpi() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.IconUrlMDPI)
  clear_has_iconurlmdpi();
  return iconurlmdpi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BizAppInfo::set_allocated_iconurlmdpi(::std::string* iconurlmdpi) {
  if (iconurlmdpi != NULL) {
    set_has_iconurlmdpi();
  } else {
    clear_has_iconurlmdpi();
  }
  iconurlmdpi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), iconurlmdpi);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.IconUrlMDPI)
}

// optional string DownloadUrl = 20;
inline bool BizAppInfo::has_downloadurl() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void BizAppInfo::set_has_downloadurl() {
  _has_bits_[0] |= 0x00010000u;
}
inline void BizAppInfo::clear_has_downloadurl() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void BizAppInfo::clear_downloadurl() {
  downloadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_downloadurl();
}
inline const ::std::string& BizAppInfo::downloadurl() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.DownloadUrl)
  return downloadurl_.GetNoArena();
}
inline void BizAppInfo::set_downloadurl(const ::std::string& value) {
  set_has_downloadurl();
  downloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.DownloadUrl)
}
#if LANG_CXX11
inline void BizAppInfo::set_downloadurl(::std::string&& value) {
  set_has_downloadurl();
  downloadurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.DownloadUrl)
}
#endif
inline void BizAppInfo::set_downloadurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_downloadurl();
  downloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.DownloadUrl)
}
inline void BizAppInfo::set_downloadurl(const char* value, size_t size) {
  set_has_downloadurl();
  downloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.DownloadUrl)
}
inline ::std::string* BizAppInfo::mutable_downloadurl() {
  set_has_downloadurl();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.DownloadUrl)
  return downloadurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BizAppInfo::release_downloadurl() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.DownloadUrl)
  clear_has_downloadurl();
  return downloadurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BizAppInfo::set_allocated_downloadurl(::std::string* downloadurl) {
  if (downloadurl != NULL) {
    set_has_downloadurl();
  } else {
    clear_has_downloadurl();
  }
  downloadurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), downloadurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.DownloadUrl)
}

// optional string DownloadUrlMd5 = 21;
inline bool BizAppInfo::has_downloadurlmd5() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void BizAppInfo::set_has_downloadurlmd5() {
  _has_bits_[0] |= 0x00020000u;
}
inline void BizAppInfo::clear_has_downloadurlmd5() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void BizAppInfo::clear_downloadurlmd5() {
  downloadurlmd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_downloadurlmd5();
}
inline const ::std::string& BizAppInfo::downloadurlmd5() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.DownloadUrlMd5)
  return downloadurlmd5_.GetNoArena();
}
inline void BizAppInfo::set_downloadurlmd5(const ::std::string& value) {
  set_has_downloadurlmd5();
  downloadurlmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.DownloadUrlMd5)
}
#if LANG_CXX11
inline void BizAppInfo::set_downloadurlmd5(::std::string&& value) {
  set_has_downloadurlmd5();
  downloadurlmd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.DownloadUrlMd5)
}
#endif
inline void BizAppInfo::set_downloadurlmd5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_downloadurlmd5();
  downloadurlmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.DownloadUrlMd5)
}
inline void BizAppInfo::set_downloadurlmd5(const char* value, size_t size) {
  set_has_downloadurlmd5();
  downloadurlmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.DownloadUrlMd5)
}
inline ::std::string* BizAppInfo::mutable_downloadurlmd5() {
  set_has_downloadurlmd5();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.DownloadUrlMd5)
  return downloadurlmd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BizAppInfo::release_downloadurlmd5() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.DownloadUrlMd5)
  clear_has_downloadurlmd5();
  return downloadurlmd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BizAppInfo::set_allocated_downloadurlmd5(::std::string* downloadurlmd5) {
  if (downloadurlmd5 != NULL) {
    set_has_downloadurlmd5();
  } else {
    clear_has_downloadurlmd5();
  }
  downloadurlmd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), downloadurlmd5);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.DownloadUrlMd5)
}

// optional string GooglePlayDownloadUrl = 22;
inline bool BizAppInfo::has_googleplaydownloadurl() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void BizAppInfo::set_has_googleplaydownloadurl() {
  _has_bits_[0] |= 0x00040000u;
}
inline void BizAppInfo::clear_has_googleplaydownloadurl() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void BizAppInfo::clear_googleplaydownloadurl() {
  googleplaydownloadurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_googleplaydownloadurl();
}
inline const ::std::string& BizAppInfo::googleplaydownloadurl() const {
  // @@protoc_insertion_point(field_get:micromsg.BizAppInfo.GooglePlayDownloadUrl)
  return googleplaydownloadurl_.GetNoArena();
}
inline void BizAppInfo::set_googleplaydownloadurl(const ::std::string& value) {
  set_has_googleplaydownloadurl();
  googleplaydownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.BizAppInfo.GooglePlayDownloadUrl)
}
#if LANG_CXX11
inline void BizAppInfo::set_googleplaydownloadurl(::std::string&& value) {
  set_has_googleplaydownloadurl();
  googleplaydownloadurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.BizAppInfo.GooglePlayDownloadUrl)
}
#endif
inline void BizAppInfo::set_googleplaydownloadurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_googleplaydownloadurl();
  googleplaydownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.BizAppInfo.GooglePlayDownloadUrl)
}
inline void BizAppInfo::set_googleplaydownloadurl(const char* value, size_t size) {
  set_has_googleplaydownloadurl();
  googleplaydownloadurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.BizAppInfo.GooglePlayDownloadUrl)
}
inline ::std::string* BizAppInfo::mutable_googleplaydownloadurl() {
  set_has_googleplaydownloadurl();
  // @@protoc_insertion_point(field_mutable:micromsg.BizAppInfo.GooglePlayDownloadUrl)
  return googleplaydownloadurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BizAppInfo::release_googleplaydownloadurl() {
  // @@protoc_insertion_point(field_release:micromsg.BizAppInfo.GooglePlayDownloadUrl)
  clear_has_googleplaydownloadurl();
  return googleplaydownloadurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BizAppInfo::set_allocated_googleplaydownloadurl(::std::string* googleplaydownloadurl) {
  if (googleplaydownloadurl != NULL) {
    set_has_googleplaydownloadurl();
  } else {
    clear_has_googleplaydownloadurl();
  }
  googleplaydownloadurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), googleplaydownloadurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.BizAppInfo.GooglePlayDownloadUrl)
}

// -------------------------------------------------------------------

// GetAppInfoListResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetAppInfoListResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAppInfoListResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAppInfoListResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAppInfoListResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetAppInfoListResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppInfoListResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetAppInfoListResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppInfoListResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetAppInfoListResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetAppInfoListResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetAppInfoListResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAppInfoListResponse.BaseResponse)
}

// required int32 Count = 2;
inline bool GetAppInfoListResponse::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetAppInfoListResponse::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetAppInfoListResponse::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetAppInfoListResponse::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 GetAppInfoListResponse::count() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppInfoListResponse.Count)
  return count_;
}
inline void GetAppInfoListResponse::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetAppInfoListResponse.Count)
}

// repeated .micromsg.BizAppInfo AppInfoList = 3;
inline int GetAppInfoListResponse::appinfolist_size() const {
  return appinfolist_.size();
}
inline void GetAppInfoListResponse::clear_appinfolist() {
  appinfolist_.Clear();
}
inline const ::micromsg::BizAppInfo& GetAppInfoListResponse::appinfolist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppInfoListResponse.AppInfoList)
  return appinfolist_.Get(index);
}
inline ::micromsg::BizAppInfo* GetAppInfoListResponse::mutable_appinfolist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppInfoListResponse.AppInfoList)
  return appinfolist_.Mutable(index);
}
inline ::micromsg::BizAppInfo* GetAppInfoListResponse::add_appinfolist() {
  // @@protoc_insertion_point(field_add:micromsg.GetAppInfoListResponse.AppInfoList)
  return appinfolist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::BizAppInfo >*
GetAppInfoListResponse::mutable_appinfolist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetAppInfoListResponse.AppInfoList)
  return &appinfolist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::BizAppInfo >&
GetAppInfoListResponse::appinfolist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetAppInfoListResponse.AppInfoList)
  return appinfolist_;
}

// -------------------------------------------------------------------

// AppCenterRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool AppCenterRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppCenterRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppCenterRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppCenterRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& AppCenterRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.AppCenterRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* AppCenterRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.AppCenterRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* AppCenterRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.AppCenterRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void AppCenterRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppCenterRequest.BaseRequest)
}

// required uint32 Type = 2;
inline bool AppCenterRequest::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AppCenterRequest::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AppCenterRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AppCenterRequest::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 AppCenterRequest::type() const {
  // @@protoc_insertion_point(field_get:micromsg.AppCenterRequest.Type)
  return type_;
}
inline void AppCenterRequest::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AppCenterRequest.Type)
}

// required .micromsg.SKBuiltinBuffer_t ReqBuf = 3;
inline bool AppCenterRequest::has_reqbuf() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppCenterRequest::set_has_reqbuf() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppCenterRequest::clear_has_reqbuf() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppCenterRequest::clear_reqbuf() {
  if (reqbuf_ != NULL) reqbuf_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_reqbuf();
}
inline const ::micromsg::SKBuiltinBuffer_t& AppCenterRequest::reqbuf() const {
  // @@protoc_insertion_point(field_get:micromsg.AppCenterRequest.ReqBuf)
  return reqbuf_ != NULL ? *reqbuf_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* AppCenterRequest::mutable_reqbuf() {
  set_has_reqbuf();
  if (reqbuf_ == NULL) {
    reqbuf_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.AppCenterRequest.ReqBuf)
  return reqbuf_;
}
inline ::micromsg::SKBuiltinBuffer_t* AppCenterRequest::release_reqbuf() {
  // @@protoc_insertion_point(field_release:micromsg.AppCenterRequest.ReqBuf)
  clear_has_reqbuf();
  ::micromsg::SKBuiltinBuffer_t* temp = reqbuf_;
  reqbuf_ = NULL;
  return temp;
}
inline void AppCenterRequest::set_allocated_reqbuf(::micromsg::SKBuiltinBuffer_t* reqbuf) {
  delete reqbuf_;
  reqbuf_ = reqbuf;
  if (reqbuf) {
    set_has_reqbuf();
  } else {
    clear_has_reqbuf();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppCenterRequest.ReqBuf)
}

// -------------------------------------------------------------------

// AppCenterResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool AppCenterResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppCenterResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppCenterResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppCenterResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& AppCenterResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.AppCenterResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* AppCenterResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.AppCenterResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* AppCenterResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.AppCenterResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void AppCenterResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppCenterResponse.BaseResponse)
}

// required .micromsg.SKBuiltinBuffer_t RespBuf = 2;
inline bool AppCenterResponse::has_respbuf() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppCenterResponse::set_has_respbuf() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppCenterResponse::clear_has_respbuf() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppCenterResponse::clear_respbuf() {
  if (respbuf_ != NULL) respbuf_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_respbuf();
}
inline const ::micromsg::SKBuiltinBuffer_t& AppCenterResponse::respbuf() const {
  // @@protoc_insertion_point(field_get:micromsg.AppCenterResponse.RespBuf)
  return respbuf_ != NULL ? *respbuf_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* AppCenterResponse::mutable_respbuf() {
  set_has_respbuf();
  if (respbuf_ == NULL) {
    respbuf_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.AppCenterResponse.RespBuf)
  return respbuf_;
}
inline ::micromsg::SKBuiltinBuffer_t* AppCenterResponse::release_respbuf() {
  // @@protoc_insertion_point(field_release:micromsg.AppCenterResponse.RespBuf)
  clear_has_respbuf();
  ::micromsg::SKBuiltinBuffer_t* temp = respbuf_;
  respbuf_ = NULL;
  return temp;
}
inline void AppCenterResponse::set_allocated_respbuf(::micromsg::SKBuiltinBuffer_t* respbuf) {
  delete respbuf_;
  respbuf_ = respbuf;
  if (respbuf) {
    set_has_respbuf();
  } else {
    clear_has_respbuf();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppCenterResponse.RespBuf)
}

// -------------------------------------------------------------------

// GetAuthAppListRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetAuthAppListRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetAuthAppListRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetAuthAppListRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetAuthAppListRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetAuthAppListRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAuthAppListRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetAuthAppListRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetAuthAppListRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetAuthAppListRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetAuthAppListRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetAuthAppListRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAuthAppListRequest.BaseRequest)
}

// required uint32 Type = 2;
inline bool GetAuthAppListRequest::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetAuthAppListRequest::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetAuthAppListRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetAuthAppListRequest::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 GetAuthAppListRequest::type() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAuthAppListRequest.Type)
  return type_;
}
inline void GetAuthAppListRequest::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetAuthAppListRequest.Type)
}

// optional string Lang = 3;
inline bool GetAuthAppListRequest::has_lang() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAuthAppListRequest::set_has_lang() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAuthAppListRequest::clear_has_lang() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAuthAppListRequest::clear_lang() {
  lang_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lang();
}
inline const ::std::string& GetAuthAppListRequest::lang() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAuthAppListRequest.Lang)
  return lang_.GetNoArena();
}
inline void GetAuthAppListRequest::set_lang(const ::std::string& value) {
  set_has_lang();
  lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetAuthAppListRequest.Lang)
}
#if LANG_CXX11
inline void GetAuthAppListRequest::set_lang(::std::string&& value) {
  set_has_lang();
  lang_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetAuthAppListRequest.Lang)
}
#endif
inline void GetAuthAppListRequest::set_lang(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_lang();
  lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetAuthAppListRequest.Lang)
}
inline void GetAuthAppListRequest::set_lang(const char* value, size_t size) {
  set_has_lang();
  lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetAuthAppListRequest.Lang)
}
inline ::std::string* GetAuthAppListRequest::mutable_lang() {
  set_has_lang();
  // @@protoc_insertion_point(field_mutable:micromsg.GetAuthAppListRequest.Lang)
  return lang_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAuthAppListRequest::release_lang() {
  // @@protoc_insertion_point(field_release:micromsg.GetAuthAppListRequest.Lang)
  clear_has_lang();
  return lang_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAuthAppListRequest::set_allocated_lang(::std::string* lang) {
  if (lang != NULL) {
    set_has_lang();
  } else {
    clear_has_lang();
  }
  lang_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAuthAppListRequest.Lang)
}

// -------------------------------------------------------------------

// AuthAppBaseInfo

// optional string AppID = 1;
inline bool AuthAppBaseInfo::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthAppBaseInfo::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthAppBaseInfo::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuthAppBaseInfo::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
inline const ::std::string& AuthAppBaseInfo::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.AuthAppBaseInfo.AppID)
  return appid_.GetNoArena();
}
inline void AuthAppBaseInfo::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AuthAppBaseInfo.AppID)
}
#if LANG_CXX11
inline void AuthAppBaseInfo::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AuthAppBaseInfo.AppID)
}
#endif
inline void AuthAppBaseInfo::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AuthAppBaseInfo.AppID)
}
inline void AuthAppBaseInfo::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AuthAppBaseInfo.AppID)
}
inline ::std::string* AuthAppBaseInfo::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.AuthAppBaseInfo.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthAppBaseInfo::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.AuthAppBaseInfo.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthAppBaseInfo::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AuthAppBaseInfo.AppID)
}

// optional string AppType = 2;
inline bool AuthAppBaseInfo::has_apptype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuthAppBaseInfo::set_has_apptype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuthAppBaseInfo::clear_has_apptype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuthAppBaseInfo::clear_apptype() {
  apptype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_apptype();
}
inline const ::std::string& AuthAppBaseInfo::apptype() const {
  // @@protoc_insertion_point(field_get:micromsg.AuthAppBaseInfo.AppType)
  return apptype_.GetNoArena();
}
inline void AuthAppBaseInfo::set_apptype(const ::std::string& value) {
  set_has_apptype();
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AuthAppBaseInfo.AppType)
}
#if LANG_CXX11
inline void AuthAppBaseInfo::set_apptype(::std::string&& value) {
  set_has_apptype();
  apptype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AuthAppBaseInfo.AppType)
}
#endif
inline void AuthAppBaseInfo::set_apptype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_apptype();
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AuthAppBaseInfo.AppType)
}
inline void AuthAppBaseInfo::set_apptype(const char* value, size_t size) {
  set_has_apptype();
  apptype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AuthAppBaseInfo.AppType)
}
inline ::std::string* AuthAppBaseInfo::mutable_apptype() {
  set_has_apptype();
  // @@protoc_insertion_point(field_mutable:micromsg.AuthAppBaseInfo.AppType)
  return apptype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthAppBaseInfo::release_apptype() {
  // @@protoc_insertion_point(field_release:micromsg.AuthAppBaseInfo.AppType)
  clear_has_apptype();
  return apptype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthAppBaseInfo::set_allocated_apptype(::std::string* apptype) {
  if (apptype != NULL) {
    set_has_apptype();
  } else {
    clear_has_apptype();
  }
  apptype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), apptype);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AuthAppBaseInfo.AppType)
}

// optional string IconUrl = 3;
inline bool AuthAppBaseInfo::has_iconurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AuthAppBaseInfo::set_has_iconurl() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AuthAppBaseInfo::clear_has_iconurl() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AuthAppBaseInfo::clear_iconurl() {
  iconurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_iconurl();
}
inline const ::std::string& AuthAppBaseInfo::iconurl() const {
  // @@protoc_insertion_point(field_get:micromsg.AuthAppBaseInfo.IconUrl)
  return iconurl_.GetNoArena();
}
inline void AuthAppBaseInfo::set_iconurl(const ::std::string& value) {
  set_has_iconurl();
  iconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AuthAppBaseInfo.IconUrl)
}
#if LANG_CXX11
inline void AuthAppBaseInfo::set_iconurl(::std::string&& value) {
  set_has_iconurl();
  iconurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AuthAppBaseInfo.IconUrl)
}
#endif
inline void AuthAppBaseInfo::set_iconurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_iconurl();
  iconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AuthAppBaseInfo.IconUrl)
}
inline void AuthAppBaseInfo::set_iconurl(const char* value, size_t size) {
  set_has_iconurl();
  iconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AuthAppBaseInfo.IconUrl)
}
inline ::std::string* AuthAppBaseInfo::mutable_iconurl() {
  set_has_iconurl();
  // @@protoc_insertion_point(field_mutable:micromsg.AuthAppBaseInfo.IconUrl)
  return iconurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthAppBaseInfo::release_iconurl() {
  // @@protoc_insertion_point(field_release:micromsg.AuthAppBaseInfo.IconUrl)
  clear_has_iconurl();
  return iconurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthAppBaseInfo::set_allocated_iconurl(::std::string* iconurl) {
  if (iconurl != NULL) {
    set_has_iconurl();
  } else {
    clear_has_iconurl();
  }
  iconurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), iconurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AuthAppBaseInfo.IconUrl)
}

// optional string AppName = 4;
inline bool AuthAppBaseInfo::has_appname() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AuthAppBaseInfo::set_has_appname() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AuthAppBaseInfo::clear_has_appname() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AuthAppBaseInfo::clear_appname() {
  appname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appname();
}
inline const ::std::string& AuthAppBaseInfo::appname() const {
  // @@protoc_insertion_point(field_get:micromsg.AuthAppBaseInfo.AppName)
  return appname_.GetNoArena();
}
inline void AuthAppBaseInfo::set_appname(const ::std::string& value) {
  set_has_appname();
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AuthAppBaseInfo.AppName)
}
#if LANG_CXX11
inline void AuthAppBaseInfo::set_appname(::std::string&& value) {
  set_has_appname();
  appname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AuthAppBaseInfo.AppName)
}
#endif
inline void AuthAppBaseInfo::set_appname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appname();
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AuthAppBaseInfo.AppName)
}
inline void AuthAppBaseInfo::set_appname(const char* value, size_t size) {
  set_has_appname();
  appname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AuthAppBaseInfo.AppName)
}
inline ::std::string* AuthAppBaseInfo::mutable_appname() {
  set_has_appname();
  // @@protoc_insertion_point(field_mutable:micromsg.AuthAppBaseInfo.AppName)
  return appname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthAppBaseInfo::release_appname() {
  // @@protoc_insertion_point(field_release:micromsg.AuthAppBaseInfo.AppName)
  clear_has_appname();
  return appname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthAppBaseInfo::set_allocated_appname(::std::string* appname) {
  if (appname != NULL) {
    set_has_appname();
  } else {
    clear_has_appname();
  }
  appname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AuthAppBaseInfo.AppName)
}

// required uint32 AppFlag = 5;
inline bool AuthAppBaseInfo::has_appflag() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AuthAppBaseInfo::set_has_appflag() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AuthAppBaseInfo::clear_has_appflag() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AuthAppBaseInfo::clear_appflag() {
  appflag_ = 0u;
  clear_has_appflag();
}
inline ::google::protobuf::uint32 AuthAppBaseInfo::appflag() const {
  // @@protoc_insertion_point(field_get:micromsg.AuthAppBaseInfo.AppFlag)
  return appflag_;
}
inline void AuthAppBaseInfo::set_appflag(::google::protobuf::uint32 value) {
  set_has_appflag();
  appflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AuthAppBaseInfo.AppFlag)
}

// optional string ExternInfo = 6;
inline bool AuthAppBaseInfo::has_externinfo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AuthAppBaseInfo::set_has_externinfo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AuthAppBaseInfo::clear_has_externinfo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AuthAppBaseInfo::clear_externinfo() {
  externinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_externinfo();
}
inline const ::std::string& AuthAppBaseInfo::externinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.AuthAppBaseInfo.ExternInfo)
  return externinfo_.GetNoArena();
}
inline void AuthAppBaseInfo::set_externinfo(const ::std::string& value) {
  set_has_externinfo();
  externinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AuthAppBaseInfo.ExternInfo)
}
#if LANG_CXX11
inline void AuthAppBaseInfo::set_externinfo(::std::string&& value) {
  set_has_externinfo();
  externinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AuthAppBaseInfo.ExternInfo)
}
#endif
inline void AuthAppBaseInfo::set_externinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_externinfo();
  externinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AuthAppBaseInfo.ExternInfo)
}
inline void AuthAppBaseInfo::set_externinfo(const char* value, size_t size) {
  set_has_externinfo();
  externinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AuthAppBaseInfo.ExternInfo)
}
inline ::std::string* AuthAppBaseInfo::mutable_externinfo() {
  set_has_externinfo();
  // @@protoc_insertion_point(field_mutable:micromsg.AuthAppBaseInfo.ExternInfo)
  return externinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthAppBaseInfo::release_externinfo() {
  // @@protoc_insertion_point(field_release:micromsg.AuthAppBaseInfo.ExternInfo)
  clear_has_externinfo();
  return externinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthAppBaseInfo::set_allocated_externinfo(::std::string* externinfo) {
  if (externinfo != NULL) {
    set_has_externinfo();
  } else {
    clear_has_externinfo();
  }
  externinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), externinfo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AuthAppBaseInfo.ExternInfo)
}

// optional string AuthInfo = 7;
inline bool AuthAppBaseInfo::has_authinfo() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AuthAppBaseInfo::set_has_authinfo() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AuthAppBaseInfo::clear_has_authinfo() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AuthAppBaseInfo::clear_authinfo() {
  authinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_authinfo();
}
inline const ::std::string& AuthAppBaseInfo::authinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.AuthAppBaseInfo.AuthInfo)
  return authinfo_.GetNoArena();
}
inline void AuthAppBaseInfo::set_authinfo(const ::std::string& value) {
  set_has_authinfo();
  authinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AuthAppBaseInfo.AuthInfo)
}
#if LANG_CXX11
inline void AuthAppBaseInfo::set_authinfo(::std::string&& value) {
  set_has_authinfo();
  authinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AuthAppBaseInfo.AuthInfo)
}
#endif
inline void AuthAppBaseInfo::set_authinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_authinfo();
  authinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AuthAppBaseInfo.AuthInfo)
}
inline void AuthAppBaseInfo::set_authinfo(const char* value, size_t size) {
  set_has_authinfo();
  authinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AuthAppBaseInfo.AuthInfo)
}
inline ::std::string* AuthAppBaseInfo::mutable_authinfo() {
  set_has_authinfo();
  // @@protoc_insertion_point(field_mutable:micromsg.AuthAppBaseInfo.AuthInfo)
  return authinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthAppBaseInfo::release_authinfo() {
  // @@protoc_insertion_point(field_release:micromsg.AuthAppBaseInfo.AuthInfo)
  clear_has_authinfo();
  return authinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthAppBaseInfo::set_allocated_authinfo(::std::string* authinfo) {
  if (authinfo != NULL) {
    set_has_authinfo();
  } else {
    clear_has_authinfo();
  }
  authinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authinfo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AuthAppBaseInfo.AuthInfo)
}

// optional string DevInfo = 8;
inline bool AuthAppBaseInfo::has_devinfo() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AuthAppBaseInfo::set_has_devinfo() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AuthAppBaseInfo::clear_has_devinfo() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AuthAppBaseInfo::clear_devinfo() {
  devinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_devinfo();
}
inline const ::std::string& AuthAppBaseInfo::devinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.AuthAppBaseInfo.DevInfo)
  return devinfo_.GetNoArena();
}
inline void AuthAppBaseInfo::set_devinfo(const ::std::string& value) {
  set_has_devinfo();
  devinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AuthAppBaseInfo.DevInfo)
}
#if LANG_CXX11
inline void AuthAppBaseInfo::set_devinfo(::std::string&& value) {
  set_has_devinfo();
  devinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AuthAppBaseInfo.DevInfo)
}
#endif
inline void AuthAppBaseInfo::set_devinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_devinfo();
  devinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AuthAppBaseInfo.DevInfo)
}
inline void AuthAppBaseInfo::set_devinfo(const char* value, size_t size) {
  set_has_devinfo();
  devinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AuthAppBaseInfo.DevInfo)
}
inline ::std::string* AuthAppBaseInfo::mutable_devinfo() {
  set_has_devinfo();
  // @@protoc_insertion_point(field_mutable:micromsg.AuthAppBaseInfo.DevInfo)
  return devinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthAppBaseInfo::release_devinfo() {
  // @@protoc_insertion_point(field_release:micromsg.AuthAppBaseInfo.DevInfo)
  clear_has_devinfo();
  return devinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthAppBaseInfo::set_allocated_devinfo(::std::string* devinfo) {
  if (devinfo != NULL) {
    set_has_devinfo();
  } else {
    clear_has_devinfo();
  }
  devinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devinfo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AuthAppBaseInfo.DevInfo)
}

// -------------------------------------------------------------------

// GetAuthAppListResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetAuthAppListResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAuthAppListResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAuthAppListResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAuthAppListResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetAuthAppListResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAuthAppListResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetAuthAppListResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetAuthAppListResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetAuthAppListResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetAuthAppListResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetAuthAppListResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAuthAppListResponse.BaseResponse)
}

// required uint32 AppCount = 2;
inline bool GetAuthAppListResponse::has_appcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetAuthAppListResponse::set_has_appcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetAuthAppListResponse::clear_has_appcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetAuthAppListResponse::clear_appcount() {
  appcount_ = 0u;
  clear_has_appcount();
}
inline ::google::protobuf::uint32 GetAuthAppListResponse::appcount() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAuthAppListResponse.AppCount)
  return appcount_;
}
inline void GetAuthAppListResponse::set_appcount(::google::protobuf::uint32 value) {
  set_has_appcount();
  appcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetAuthAppListResponse.AppCount)
}

// repeated .micromsg.AuthAppBaseInfo AuthAppList = 3;
inline int GetAuthAppListResponse::authapplist_size() const {
  return authapplist_.size();
}
inline void GetAuthAppListResponse::clear_authapplist() {
  authapplist_.Clear();
}
inline const ::micromsg::AuthAppBaseInfo& GetAuthAppListResponse::authapplist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetAuthAppListResponse.AuthAppList)
  return authapplist_.Get(index);
}
inline ::micromsg::AuthAppBaseInfo* GetAuthAppListResponse::mutable_authapplist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetAuthAppListResponse.AuthAppList)
  return authapplist_.Mutable(index);
}
inline ::micromsg::AuthAppBaseInfo* GetAuthAppListResponse::add_authapplist() {
  // @@protoc_insertion_point(field_add:micromsg.GetAuthAppListResponse.AuthAppList)
  return authapplist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::AuthAppBaseInfo >*
GetAuthAppListResponse::mutable_authapplist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetAuthAppListResponse.AuthAppList)
  return &authapplist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::AuthAppBaseInfo >&
GetAuthAppListResponse::authapplist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetAuthAppListResponse.AuthAppList)
  return authapplist_;
}

// -------------------------------------------------------------------

// GetAuthAppInfoRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetAuthAppInfoRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetAuthAppInfoRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetAuthAppInfoRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetAuthAppInfoRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetAuthAppInfoRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAuthAppInfoRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetAuthAppInfoRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetAuthAppInfoRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetAuthAppInfoRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetAuthAppInfoRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetAuthAppInfoRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAuthAppInfoRequest.BaseRequest)
}

// optional string AppID = 2;
inline bool GetAuthAppInfoRequest::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAuthAppInfoRequest::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAuthAppInfoRequest::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAuthAppInfoRequest::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
inline const ::std::string& GetAuthAppInfoRequest::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAuthAppInfoRequest.AppID)
  return appid_.GetNoArena();
}
inline void GetAuthAppInfoRequest::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetAuthAppInfoRequest.AppID)
}
#if LANG_CXX11
inline void GetAuthAppInfoRequest::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetAuthAppInfoRequest.AppID)
}
#endif
inline void GetAuthAppInfoRequest::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetAuthAppInfoRequest.AppID)
}
inline void GetAuthAppInfoRequest::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetAuthAppInfoRequest.AppID)
}
inline ::std::string* GetAuthAppInfoRequest::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetAuthAppInfoRequest.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAuthAppInfoRequest::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.GetAuthAppInfoRequest.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAuthAppInfoRequest::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAuthAppInfoRequest.AppID)
}

// -------------------------------------------------------------------

// GetAuthAppInfoResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetAuthAppInfoResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetAuthAppInfoResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetAuthAppInfoResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetAuthAppInfoResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetAuthAppInfoResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAuthAppInfoResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetAuthAppInfoResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetAuthAppInfoResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetAuthAppInfoResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetAuthAppInfoResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetAuthAppInfoResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAuthAppInfoResponse.BaseResponse)
}

// required .micromsg.AuthAppBaseInfo BaseInfo = 2;
inline bool GetAuthAppInfoResponse::has_baseinfo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetAuthAppInfoResponse::set_has_baseinfo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetAuthAppInfoResponse::clear_has_baseinfo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetAuthAppInfoResponse::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::micromsg::AuthAppBaseInfo::Clear();
  clear_has_baseinfo();
}
inline const ::micromsg::AuthAppBaseInfo& GetAuthAppInfoResponse::baseinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAuthAppInfoResponse.BaseInfo)
  return baseinfo_ != NULL ? *baseinfo_
                         : *::micromsg::AuthAppBaseInfo::internal_default_instance();
}
inline ::micromsg::AuthAppBaseInfo* GetAuthAppInfoResponse::mutable_baseinfo() {
  set_has_baseinfo();
  if (baseinfo_ == NULL) {
    baseinfo_ = new ::micromsg::AuthAppBaseInfo;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetAuthAppInfoResponse.BaseInfo)
  return baseinfo_;
}
inline ::micromsg::AuthAppBaseInfo* GetAuthAppInfoResponse::release_baseinfo() {
  // @@protoc_insertion_point(field_release:micromsg.GetAuthAppInfoResponse.BaseInfo)
  clear_has_baseinfo();
  ::micromsg::AuthAppBaseInfo* temp = baseinfo_;
  baseinfo_ = NULL;
  return temp;
}
inline void GetAuthAppInfoResponse::set_allocated_baseinfo(::micromsg::AuthAppBaseInfo* baseinfo) {
  delete baseinfo_;
  baseinfo_ = baseinfo;
  if (baseinfo) {
    set_has_baseinfo();
  } else {
    clear_has_baseinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAuthAppInfoResponse.BaseInfo)
}

// optional string AuthInfo = 3;
inline bool GetAuthAppInfoResponse::has_authinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAuthAppInfoResponse::set_has_authinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAuthAppInfoResponse::clear_has_authinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAuthAppInfoResponse::clear_authinfo() {
  authinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_authinfo();
}
inline const ::std::string& GetAuthAppInfoResponse::authinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAuthAppInfoResponse.AuthInfo)
  return authinfo_.GetNoArena();
}
inline void GetAuthAppInfoResponse::set_authinfo(const ::std::string& value) {
  set_has_authinfo();
  authinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetAuthAppInfoResponse.AuthInfo)
}
#if LANG_CXX11
inline void GetAuthAppInfoResponse::set_authinfo(::std::string&& value) {
  set_has_authinfo();
  authinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetAuthAppInfoResponse.AuthInfo)
}
#endif
inline void GetAuthAppInfoResponse::set_authinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_authinfo();
  authinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetAuthAppInfoResponse.AuthInfo)
}
inline void GetAuthAppInfoResponse::set_authinfo(const char* value, size_t size) {
  set_has_authinfo();
  authinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetAuthAppInfoResponse.AuthInfo)
}
inline ::std::string* GetAuthAppInfoResponse::mutable_authinfo() {
  set_has_authinfo();
  // @@protoc_insertion_point(field_mutable:micromsg.GetAuthAppInfoResponse.AuthInfo)
  return authinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAuthAppInfoResponse::release_authinfo() {
  // @@protoc_insertion_point(field_release:micromsg.GetAuthAppInfoResponse.AuthInfo)
  clear_has_authinfo();
  return authinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAuthAppInfoResponse::set_allocated_authinfo(::std::string* authinfo) {
  if (authinfo != NULL) {
    set_has_authinfo();
  } else {
    clear_has_authinfo();
  }
  authinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authinfo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAuthAppInfoResponse.AuthInfo)
}

// optional string DevInfo = 4;
inline bool GetAuthAppInfoResponse::has_devinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetAuthAppInfoResponse::set_has_devinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetAuthAppInfoResponse::clear_has_devinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetAuthAppInfoResponse::clear_devinfo() {
  devinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_devinfo();
}
inline const ::std::string& GetAuthAppInfoResponse::devinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAuthAppInfoResponse.DevInfo)
  return devinfo_.GetNoArena();
}
inline void GetAuthAppInfoResponse::set_devinfo(const ::std::string& value) {
  set_has_devinfo();
  devinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetAuthAppInfoResponse.DevInfo)
}
#if LANG_CXX11
inline void GetAuthAppInfoResponse::set_devinfo(::std::string&& value) {
  set_has_devinfo();
  devinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetAuthAppInfoResponse.DevInfo)
}
#endif
inline void GetAuthAppInfoResponse::set_devinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_devinfo();
  devinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetAuthAppInfoResponse.DevInfo)
}
inline void GetAuthAppInfoResponse::set_devinfo(const char* value, size_t size) {
  set_has_devinfo();
  devinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetAuthAppInfoResponse.DevInfo)
}
inline ::std::string* GetAuthAppInfoResponse::mutable_devinfo() {
  set_has_devinfo();
  // @@protoc_insertion_point(field_mutable:micromsg.GetAuthAppInfoResponse.DevInfo)
  return devinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAuthAppInfoResponse::release_devinfo() {
  // @@protoc_insertion_point(field_release:micromsg.GetAuthAppInfoResponse.DevInfo)
  clear_has_devinfo();
  return devinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAuthAppInfoResponse::set_allocated_devinfo(::std::string* devinfo) {
  if (devinfo != NULL) {
    set_has_devinfo();
  } else {
    clear_has_devinfo();
  }
  devinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), devinfo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAuthAppInfoResponse.DevInfo)
}

// optional string ExternInfo = 5;
inline bool GetAuthAppInfoResponse::has_externinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetAuthAppInfoResponse::set_has_externinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetAuthAppInfoResponse::clear_has_externinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetAuthAppInfoResponse::clear_externinfo() {
  externinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_externinfo();
}
inline const ::std::string& GetAuthAppInfoResponse::externinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAuthAppInfoResponse.ExternInfo)
  return externinfo_.GetNoArena();
}
inline void GetAuthAppInfoResponse::set_externinfo(const ::std::string& value) {
  set_has_externinfo();
  externinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetAuthAppInfoResponse.ExternInfo)
}
#if LANG_CXX11
inline void GetAuthAppInfoResponse::set_externinfo(::std::string&& value) {
  set_has_externinfo();
  externinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetAuthAppInfoResponse.ExternInfo)
}
#endif
inline void GetAuthAppInfoResponse::set_externinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_externinfo();
  externinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetAuthAppInfoResponse.ExternInfo)
}
inline void GetAuthAppInfoResponse::set_externinfo(const char* value, size_t size) {
  set_has_externinfo();
  externinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetAuthAppInfoResponse.ExternInfo)
}
inline ::std::string* GetAuthAppInfoResponse::mutable_externinfo() {
  set_has_externinfo();
  // @@protoc_insertion_point(field_mutable:micromsg.GetAuthAppInfoResponse.ExternInfo)
  return externinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAuthAppInfoResponse::release_externinfo() {
  // @@protoc_insertion_point(field_release:micromsg.GetAuthAppInfoResponse.ExternInfo)
  clear_has_externinfo();
  return externinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAuthAppInfoResponse::set_allocated_externinfo(::std::string* externinfo) {
  if (externinfo != NULL) {
    set_has_externinfo();
  } else {
    clear_has_externinfo();
  }
  externinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), externinfo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAuthAppInfoResponse.ExternInfo)
}

// -------------------------------------------------------------------

// SetAppSettingRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool SetAppSettingRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetAppSettingRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetAppSettingRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetAppSettingRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& SetAppSettingRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SetAppSettingRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* SetAppSettingRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SetAppSettingRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* SetAppSettingRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SetAppSettingRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void SetAppSettingRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SetAppSettingRequest.BaseRequest)
}

// optional string AppID = 2;
inline bool SetAppSettingRequest::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetAppSettingRequest::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetAppSettingRequest::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetAppSettingRequest::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
inline const ::std::string& SetAppSettingRequest::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.SetAppSettingRequest.AppID)
  return appid_.GetNoArena();
}
inline void SetAppSettingRequest::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SetAppSettingRequest.AppID)
}
#if LANG_CXX11
inline void SetAppSettingRequest::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SetAppSettingRequest.AppID)
}
#endif
inline void SetAppSettingRequest::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SetAppSettingRequest.AppID)
}
inline void SetAppSettingRequest::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SetAppSettingRequest.AppID)
}
inline ::std::string* SetAppSettingRequest::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.SetAppSettingRequest.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetAppSettingRequest::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.SetAppSettingRequest.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetAppSettingRequest::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SetAppSettingRequest.AppID)
}

// required uint32 CmdID = 3;
inline bool SetAppSettingRequest::has_cmdid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SetAppSettingRequest::set_has_cmdid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SetAppSettingRequest::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SetAppSettingRequest::clear_cmdid() {
  cmdid_ = 0u;
  clear_has_cmdid();
}
inline ::google::protobuf::uint32 SetAppSettingRequest::cmdid() const {
  // @@protoc_insertion_point(field_get:micromsg.SetAppSettingRequest.CmdID)
  return cmdid_;
}
inline void SetAppSettingRequest::set_cmdid(::google::protobuf::uint32 value) {
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SetAppSettingRequest.CmdID)
}

// optional string CmdValue = 4;
inline bool SetAppSettingRequest::has_cmdvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetAppSettingRequest::set_has_cmdvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetAppSettingRequest::clear_has_cmdvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetAppSettingRequest::clear_cmdvalue() {
  cmdvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cmdvalue();
}
inline const ::std::string& SetAppSettingRequest::cmdvalue() const {
  // @@protoc_insertion_point(field_get:micromsg.SetAppSettingRequest.CmdValue)
  return cmdvalue_.GetNoArena();
}
inline void SetAppSettingRequest::set_cmdvalue(const ::std::string& value) {
  set_has_cmdvalue();
  cmdvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SetAppSettingRequest.CmdValue)
}
#if LANG_CXX11
inline void SetAppSettingRequest::set_cmdvalue(::std::string&& value) {
  set_has_cmdvalue();
  cmdvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SetAppSettingRequest.CmdValue)
}
#endif
inline void SetAppSettingRequest::set_cmdvalue(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cmdvalue();
  cmdvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SetAppSettingRequest.CmdValue)
}
inline void SetAppSettingRequest::set_cmdvalue(const char* value, size_t size) {
  set_has_cmdvalue();
  cmdvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SetAppSettingRequest.CmdValue)
}
inline ::std::string* SetAppSettingRequest::mutable_cmdvalue() {
  set_has_cmdvalue();
  // @@protoc_insertion_point(field_mutable:micromsg.SetAppSettingRequest.CmdValue)
  return cmdvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetAppSettingRequest::release_cmdvalue() {
  // @@protoc_insertion_point(field_release:micromsg.SetAppSettingRequest.CmdValue)
  clear_has_cmdvalue();
  return cmdvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetAppSettingRequest::set_allocated_cmdvalue(::std::string* cmdvalue) {
  if (cmdvalue != NULL) {
    set_has_cmdvalue();
  } else {
    clear_has_cmdvalue();
  }
  cmdvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cmdvalue);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SetAppSettingRequest.CmdValue)
}

// -------------------------------------------------------------------

// SetAppSettingResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool SetAppSettingResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetAppSettingResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetAppSettingResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetAppSettingResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& SetAppSettingResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.SetAppSettingResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* SetAppSettingResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SetAppSettingResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* SetAppSettingResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.SetAppSettingResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void SetAppSettingResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SetAppSettingResponse.BaseResponse)
}

// optional string AppID = 2;
inline bool SetAppSettingResponse::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetAppSettingResponse::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetAppSettingResponse::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetAppSettingResponse::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
inline const ::std::string& SetAppSettingResponse::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.SetAppSettingResponse.AppID)
  return appid_.GetNoArena();
}
inline void SetAppSettingResponse::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SetAppSettingResponse.AppID)
}
#if LANG_CXX11
inline void SetAppSettingResponse::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SetAppSettingResponse.AppID)
}
#endif
inline void SetAppSettingResponse::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SetAppSettingResponse.AppID)
}
inline void SetAppSettingResponse::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SetAppSettingResponse.AppID)
}
inline ::std::string* SetAppSettingResponse::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.SetAppSettingResponse.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetAppSettingResponse::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.SetAppSettingResponse.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetAppSettingResponse::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SetAppSettingResponse.AppID)
}

// required uint32 AppFlag = 3;
inline bool SetAppSettingResponse::has_appflag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetAppSettingResponse::set_has_appflag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetAppSettingResponse::clear_has_appflag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetAppSettingResponse::clear_appflag() {
  appflag_ = 0u;
  clear_has_appflag();
}
inline ::google::protobuf::uint32 SetAppSettingResponse::appflag() const {
  // @@protoc_insertion_point(field_get:micromsg.SetAppSettingResponse.AppFlag)
  return appflag_;
}
inline void SetAppSettingResponse::set_appflag(::google::protobuf::uint32 value) {
  set_has_appflag();
  appflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SetAppSettingResponse.AppFlag)
}

// required uint32 CmdID = 4;
inline bool SetAppSettingResponse::has_cmdid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SetAppSettingResponse::set_has_cmdid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SetAppSettingResponse::clear_has_cmdid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SetAppSettingResponse::clear_cmdid() {
  cmdid_ = 0u;
  clear_has_cmdid();
}
inline ::google::protobuf::uint32 SetAppSettingResponse::cmdid() const {
  // @@protoc_insertion_point(field_get:micromsg.SetAppSettingResponse.CmdID)
  return cmdid_;
}
inline void SetAppSettingResponse::set_cmdid(::google::protobuf::uint32 value) {
  set_has_cmdid();
  cmdid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SetAppSettingResponse.CmdID)
}

// -------------------------------------------------------------------

// AppSettingReq

// optional string AppID = 1;
inline bool AppSettingReq::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppSettingReq::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppSettingReq::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppSettingReq::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
inline const ::std::string& AppSettingReq::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.AppSettingReq.AppID)
  return appid_.GetNoArena();
}
inline void AppSettingReq::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AppSettingReq.AppID)
}
#if LANG_CXX11
inline void AppSettingReq::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AppSettingReq.AppID)
}
#endif
inline void AppSettingReq::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AppSettingReq.AppID)
}
inline void AppSettingReq::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AppSettingReq.AppID)
}
inline ::std::string* AppSettingReq::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.AppSettingReq.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppSettingReq::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.AppSettingReq.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppSettingReq::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppSettingReq.AppID)
}

// -------------------------------------------------------------------

// AppSetting

// optional string AppID = 1;
inline bool AppSetting::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppSetting::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppSetting::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppSetting::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
inline const ::std::string& AppSetting::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.AppSetting.AppID)
  return appid_.GetNoArena();
}
inline void AppSetting::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AppSetting.AppID)
}
#if LANG_CXX11
inline void AppSetting::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AppSetting.AppID)
}
#endif
inline void AppSetting::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AppSetting.AppID)
}
inline void AppSetting::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AppSetting.AppID)
}
inline ::std::string* AppSetting::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.AppSetting.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppSetting::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.AppSetting.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppSetting::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppSetting.AppID)
}

// required uint32 AppFlag = 2;
inline bool AppSetting::has_appflag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AppSetting::set_has_appflag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AppSetting::clear_has_appflag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AppSetting::clear_appflag() {
  appflag_ = 0u;
  clear_has_appflag();
}
inline ::google::protobuf::uint32 AppSetting::appflag() const {
  // @@protoc_insertion_point(field_get:micromsg.AppSetting.AppFlag)
  return appflag_;
}
inline void AppSetting::set_appflag(::google::protobuf::uint32 value) {
  set_has_appflag();
  appflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AppSetting.AppFlag)
}

// optional string OpenID = 3;
inline bool AppSetting::has_openid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppSetting::set_has_openid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppSetting::clear_has_openid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppSetting::clear_openid() {
  openid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_openid();
}
inline const ::std::string& AppSetting::openid() const {
  // @@protoc_insertion_point(field_get:micromsg.AppSetting.OpenID)
  return openid_.GetNoArena();
}
inline void AppSetting::set_openid(const ::std::string& value) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AppSetting.OpenID)
}
#if LANG_CXX11
inline void AppSetting::set_openid(::std::string&& value) {
  set_has_openid();
  openid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AppSetting.OpenID)
}
#endif
inline void AppSetting::set_openid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AppSetting.OpenID)
}
inline void AppSetting::set_openid(const char* value, size_t size) {
  set_has_openid();
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AppSetting.OpenID)
}
inline ::std::string* AppSetting::mutable_openid() {
  set_has_openid();
  // @@protoc_insertion_point(field_mutable:micromsg.AppSetting.OpenID)
  return openid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AppSetting::release_openid() {
  // @@protoc_insertion_point(field_release:micromsg.AppSetting.OpenID)
  clear_has_openid();
  return openid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AppSetting::set_allocated_openid(::std::string* openid) {
  if (openid != NULL) {
    set_has_openid();
  } else {
    clear_has_openid();
  }
  openid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AppSetting.OpenID)
}

// -------------------------------------------------------------------

// GetAppSettingRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetAppSettingRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAppSettingRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAppSettingRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAppSettingRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetAppSettingRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppSettingRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetAppSettingRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppSettingRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetAppSettingRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetAppSettingRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetAppSettingRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAppSettingRequest.BaseRequest)
}

// required uint32 AppCount = 2;
inline bool GetAppSettingRequest::has_appcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetAppSettingRequest::set_has_appcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetAppSettingRequest::clear_has_appcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetAppSettingRequest::clear_appcount() {
  appcount_ = 0u;
  clear_has_appcount();
}
inline ::google::protobuf::uint32 GetAppSettingRequest::appcount() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppSettingRequest.AppCount)
  return appcount_;
}
inline void GetAppSettingRequest::set_appcount(::google::protobuf::uint32 value) {
  set_has_appcount();
  appcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetAppSettingRequest.AppCount)
}

// repeated .micromsg.AppSettingReq AppSettingReqList = 3;
inline int GetAppSettingRequest::appsettingreqlist_size() const {
  return appsettingreqlist_.size();
}
inline void GetAppSettingRequest::clear_appsettingreqlist() {
  appsettingreqlist_.Clear();
}
inline const ::micromsg::AppSettingReq& GetAppSettingRequest::appsettingreqlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppSettingRequest.AppSettingReqList)
  return appsettingreqlist_.Get(index);
}
inline ::micromsg::AppSettingReq* GetAppSettingRequest::mutable_appsettingreqlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppSettingRequest.AppSettingReqList)
  return appsettingreqlist_.Mutable(index);
}
inline ::micromsg::AppSettingReq* GetAppSettingRequest::add_appsettingreqlist() {
  // @@protoc_insertion_point(field_add:micromsg.GetAppSettingRequest.AppSettingReqList)
  return appsettingreqlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::AppSettingReq >*
GetAppSettingRequest::mutable_appsettingreqlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetAppSettingRequest.AppSettingReqList)
  return &appsettingreqlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::AppSettingReq >&
GetAppSettingRequest::appsettingreqlist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetAppSettingRequest.AppSettingReqList)
  return appsettingreqlist_;
}

// -------------------------------------------------------------------

// GetAppSettingResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetAppSettingResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetAppSettingResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetAppSettingResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetAppSettingResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetAppSettingResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppSettingResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetAppSettingResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppSettingResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetAppSettingResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetAppSettingResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetAppSettingResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetAppSettingResponse.BaseResponse)
}

// required uint32 AppCount = 2;
inline bool GetAppSettingResponse::has_appcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetAppSettingResponse::set_has_appcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetAppSettingResponse::clear_has_appcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetAppSettingResponse::clear_appcount() {
  appcount_ = 0u;
  clear_has_appcount();
}
inline ::google::protobuf::uint32 GetAppSettingResponse::appcount() const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppSettingResponse.AppCount)
  return appcount_;
}
inline void GetAppSettingResponse::set_appcount(::google::protobuf::uint32 value) {
  set_has_appcount();
  appcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetAppSettingResponse.AppCount)
}

// repeated .micromsg.AppSetting SettingList = 3;
inline int GetAppSettingResponse::settinglist_size() const {
  return settinglist_.size();
}
inline void GetAppSettingResponse::clear_settinglist() {
  settinglist_.Clear();
}
inline const ::micromsg::AppSetting& GetAppSettingResponse::settinglist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetAppSettingResponse.SettingList)
  return settinglist_.Get(index);
}
inline ::micromsg::AppSetting* GetAppSettingResponse::mutable_settinglist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetAppSettingResponse.SettingList)
  return settinglist_.Mutable(index);
}
inline ::micromsg::AppSetting* GetAppSettingResponse::add_settinglist() {
  // @@protoc_insertion_point(field_add:micromsg.GetAppSettingResponse.SettingList)
  return settinglist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::AppSetting >*
GetAppSettingResponse::mutable_settinglist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetAppSettingResponse.SettingList)
  return &settinglist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::AppSetting >&
GetAppSettingResponse::settinglist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetAppSettingResponse.SettingList)
  return settinglist_;
}

// -------------------------------------------------------------------

// GetSuggestionAppListRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetSuggestionAppListRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetSuggestionAppListRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetSuggestionAppListRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetSuggestionAppListRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetSuggestionAppListRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppListRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetSuggestionAppListRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetSuggestionAppListRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetSuggestionAppListRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetSuggestionAppListRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetSuggestionAppListRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetSuggestionAppListRequest.BaseRequest)
}

// required uint32 AppType = 2;
inline bool GetSuggestionAppListRequest::has_apptype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetSuggestionAppListRequest::set_has_apptype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetSuggestionAppListRequest::clear_has_apptype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetSuggestionAppListRequest::clear_apptype() {
  apptype_ = 0u;
  clear_has_apptype();
}
inline ::google::protobuf::uint32 GetSuggestionAppListRequest::apptype() const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppListRequest.AppType)
  return apptype_;
}
inline void GetSuggestionAppListRequest::set_apptype(::google::protobuf::uint32 value) {
  set_has_apptype();
  apptype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetSuggestionAppListRequest.AppType)
}

// required uint32 OffSet = 3;
inline bool GetSuggestionAppListRequest::has_offset() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetSuggestionAppListRequest::set_has_offset() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetSuggestionAppListRequest::clear_has_offset() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetSuggestionAppListRequest::clear_offset() {
  offset_ = 0u;
  clear_has_offset();
}
inline ::google::protobuf::uint32 GetSuggestionAppListRequest::offset() const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppListRequest.OffSet)
  return offset_;
}
inline void GetSuggestionAppListRequest::set_offset(::google::protobuf::uint32 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetSuggestionAppListRequest.OffSet)
}

// required uint32 Limit = 4;
inline bool GetSuggestionAppListRequest::has_limit() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetSuggestionAppListRequest::set_has_limit() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetSuggestionAppListRequest::clear_has_limit() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetSuggestionAppListRequest::clear_limit() {
  limit_ = 0u;
  clear_has_limit();
}
inline ::google::protobuf::uint32 GetSuggestionAppListRequest::limit() const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppListRequest.Limit)
  return limit_;
}
inline void GetSuggestionAppListRequest::set_limit(::google::protobuf::uint32 value) {
  set_has_limit();
  limit_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetSuggestionAppListRequest.Limit)
}

// optional string Lang = 5;
inline bool GetSuggestionAppListRequest::has_lang() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetSuggestionAppListRequest::set_has_lang() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetSuggestionAppListRequest::clear_has_lang() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetSuggestionAppListRequest::clear_lang() {
  lang_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lang();
}
inline const ::std::string& GetSuggestionAppListRequest::lang() const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppListRequest.Lang)
  return lang_.GetNoArena();
}
inline void GetSuggestionAppListRequest::set_lang(const ::std::string& value) {
  set_has_lang();
  lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetSuggestionAppListRequest.Lang)
}
#if LANG_CXX11
inline void GetSuggestionAppListRequest::set_lang(::std::string&& value) {
  set_has_lang();
  lang_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetSuggestionAppListRequest.Lang)
}
#endif
inline void GetSuggestionAppListRequest::set_lang(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_lang();
  lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetSuggestionAppListRequest.Lang)
}
inline void GetSuggestionAppListRequest::set_lang(const char* value, size_t size) {
  set_has_lang();
  lang_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetSuggestionAppListRequest.Lang)
}
inline ::std::string* GetSuggestionAppListRequest::mutable_lang() {
  set_has_lang();
  // @@protoc_insertion_point(field_mutable:micromsg.GetSuggestionAppListRequest.Lang)
  return lang_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetSuggestionAppListRequest::release_lang() {
  // @@protoc_insertion_point(field_release:micromsg.GetSuggestionAppListRequest.Lang)
  clear_has_lang();
  return lang_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetSuggestionAppListRequest::set_allocated_lang(::std::string* lang) {
  if (lang != NULL) {
    set_has_lang();
  } else {
    clear_has_lang();
  }
  lang_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lang);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetSuggestionAppListRequest.Lang)
}

// optional uint32 InstalledAppCount = 6;
inline bool GetSuggestionAppListRequest::has_installedappcount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetSuggestionAppListRequest::set_has_installedappcount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetSuggestionAppListRequest::clear_has_installedappcount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetSuggestionAppListRequest::clear_installedappcount() {
  installedappcount_ = 0u;
  clear_has_installedappcount();
}
inline ::google::protobuf::uint32 GetSuggestionAppListRequest::installedappcount() const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppListRequest.InstalledAppCount)
  return installedappcount_;
}
inline void GetSuggestionAppListRequest::set_installedappcount(::google::protobuf::uint32 value) {
  set_has_installedappcount();
  installedappcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetSuggestionAppListRequest.InstalledAppCount)
}

// repeated .micromsg.SKBuiltinString_t InstalledAppList = 7;
inline int GetSuggestionAppListRequest::installedapplist_size() const {
  return installedapplist_.size();
}
inline void GetSuggestionAppListRequest::clear_installedapplist() {
  installedapplist_.Clear();
}
inline const ::micromsg::SKBuiltinString_t& GetSuggestionAppListRequest::installedapplist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppListRequest.InstalledAppList)
  return installedapplist_.Get(index);
}
inline ::micromsg::SKBuiltinString_t* GetSuggestionAppListRequest::mutable_installedapplist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetSuggestionAppListRequest.InstalledAppList)
  return installedapplist_.Mutable(index);
}
inline ::micromsg::SKBuiltinString_t* GetSuggestionAppListRequest::add_installedapplist() {
  // @@protoc_insertion_point(field_add:micromsg.GetSuggestionAppListRequest.InstalledAppList)
  return installedapplist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
GetSuggestionAppListRequest::mutable_installedapplist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetSuggestionAppListRequest.InstalledAppList)
  return &installedapplist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
GetSuggestionAppListRequest::installedapplist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetSuggestionAppListRequest.InstalledAppList)
  return installedapplist_;
}

// -------------------------------------------------------------------

// GetSuggestionAppListResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetSuggestionAppListResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetSuggestionAppListResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetSuggestionAppListResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetSuggestionAppListResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetSuggestionAppListResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppListResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetSuggestionAppListResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetSuggestionAppListResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetSuggestionAppListResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetSuggestionAppListResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetSuggestionAppListResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetSuggestionAppListResponse.BaseResponse)
}

// required uint32 RcCount = 2;
inline bool GetSuggestionAppListResponse::has_rccount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetSuggestionAppListResponse::set_has_rccount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetSuggestionAppListResponse::clear_has_rccount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetSuggestionAppListResponse::clear_rccount() {
  rccount_ = 0u;
  clear_has_rccount();
}
inline ::google::protobuf::uint32 GetSuggestionAppListResponse::rccount() const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppListResponse.RcCount)
  return rccount_;
}
inline void GetSuggestionAppListResponse::set_rccount(::google::protobuf::uint32 value) {
  set_has_rccount();
  rccount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetSuggestionAppListResponse.RcCount)
}

// repeated .micromsg.RcAppList RcList = 3;
inline int GetSuggestionAppListResponse::rclist_size() const {
  return rclist_.size();
}
inline void GetSuggestionAppListResponse::clear_rclist() {
  rclist_.Clear();
}
inline const ::micromsg::RcAppList& GetSuggestionAppListResponse::rclist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppListResponse.RcList)
  return rclist_.Get(index);
}
inline ::micromsg::RcAppList* GetSuggestionAppListResponse::mutable_rclist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetSuggestionAppListResponse.RcList)
  return rclist_.Mutable(index);
}
inline ::micromsg::RcAppList* GetSuggestionAppListResponse::add_rclist() {
  // @@protoc_insertion_point(field_add:micromsg.GetSuggestionAppListResponse.RcList)
  return rclist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::RcAppList >*
GetSuggestionAppListResponse::mutable_rclist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetSuggestionAppListResponse.RcList)
  return &rclist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::RcAppList >&
GetSuggestionAppListResponse::rclist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetSuggestionAppListResponse.RcList)
  return rclist_;
}

// optional uint32 IsInternalDownload = 4;
inline bool GetSuggestionAppListResponse::has_isinternaldownload() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetSuggestionAppListResponse::set_has_isinternaldownload() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetSuggestionAppListResponse::clear_has_isinternaldownload() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetSuggestionAppListResponse::clear_isinternaldownload() {
  isinternaldownload_ = 0u;
  clear_has_isinternaldownload();
}
inline ::google::protobuf::uint32 GetSuggestionAppListResponse::isinternaldownload() const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppListResponse.IsInternalDownload)
  return isinternaldownload_;
}
inline void GetSuggestionAppListResponse::set_isinternaldownload(::google::protobuf::uint32 value) {
  set_has_isinternaldownload();
  isinternaldownload_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetSuggestionAppListResponse.IsInternalDownload)
}

// optional uint32 AdCount = 5;
inline bool GetSuggestionAppListResponse::has_adcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetSuggestionAppListResponse::set_has_adcount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetSuggestionAppListResponse::clear_has_adcount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetSuggestionAppListResponse::clear_adcount() {
  adcount_ = 0u;
  clear_has_adcount();
}
inline ::google::protobuf::uint32 GetSuggestionAppListResponse::adcount() const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppListResponse.AdCount)
  return adcount_;
}
inline void GetSuggestionAppListResponse::set_adcount(::google::protobuf::uint32 value) {
  set_has_adcount();
  adcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetSuggestionAppListResponse.AdCount)
}

// repeated .micromsg.AdAppList AdList = 6;
inline int GetSuggestionAppListResponse::adlist_size() const {
  return adlist_.size();
}
inline void GetSuggestionAppListResponse::clear_adlist() {
  adlist_.Clear();
}
inline const ::micromsg::AdAppList& GetSuggestionAppListResponse::adlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppListResponse.AdList)
  return adlist_.Get(index);
}
inline ::micromsg::AdAppList* GetSuggestionAppListResponse::mutable_adlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetSuggestionAppListResponse.AdList)
  return adlist_.Mutable(index);
}
inline ::micromsg::AdAppList* GetSuggestionAppListResponse::add_adlist() {
  // @@protoc_insertion_point(field_add:micromsg.GetSuggestionAppListResponse.AdList)
  return adlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::AdAppList >*
GetSuggestionAppListResponse::mutable_adlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetSuggestionAppListResponse.AdList)
  return &adlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::AdAppList >&
GetSuggestionAppListResponse::adlist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetSuggestionAppListResponse.AdList)
  return adlist_;
}

// optional uint32 GiftCount = 7;
inline bool GetSuggestionAppListResponse::has_giftcount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetSuggestionAppListResponse::set_has_giftcount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetSuggestionAppListResponse::clear_has_giftcount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetSuggestionAppListResponse::clear_giftcount() {
  giftcount_ = 0u;
  clear_has_giftcount();
}
inline ::google::protobuf::uint32 GetSuggestionAppListResponse::giftcount() const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppListResponse.GiftCount)
  return giftcount_;
}
inline void GetSuggestionAppListResponse::set_giftcount(::google::protobuf::uint32 value) {
  set_has_giftcount();
  giftcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetSuggestionAppListResponse.GiftCount)
}

// repeated .micromsg.GiftList GiftList = 8;
inline int GetSuggestionAppListResponse::giftlist_size() const {
  return giftlist_.size();
}
inline void GetSuggestionAppListResponse::clear_giftlist() {
  giftlist_.Clear();
}
inline const ::micromsg::GiftList& GetSuggestionAppListResponse::giftlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppListResponse.GiftList)
  return giftlist_.Get(index);
}
inline ::micromsg::GiftList* GetSuggestionAppListResponse::mutable_giftlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetSuggestionAppListResponse.GiftList)
  return giftlist_.Mutable(index);
}
inline ::micromsg::GiftList* GetSuggestionAppListResponse::add_giftlist() {
  // @@protoc_insertion_point(field_add:micromsg.GetSuggestionAppListResponse.GiftList)
  return giftlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::GiftList >*
GetSuggestionAppListResponse::mutable_giftlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetSuggestionAppListResponse.GiftList)
  return &giftlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::GiftList >&
GetSuggestionAppListResponse::giftlist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetSuggestionAppListResponse.GiftList)
  return giftlist_;
}

// optional .micromsg.GiftEntranceItem GiftEntranceItem = 9;
inline bool GetSuggestionAppListResponse::has_giftentranceitem() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetSuggestionAppListResponse::set_has_giftentranceitem() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetSuggestionAppListResponse::clear_has_giftentranceitem() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetSuggestionAppListResponse::clear_giftentranceitem() {
  if (giftentranceitem_ != NULL) giftentranceitem_->::micromsg::GiftEntranceItem::Clear();
  clear_has_giftentranceitem();
}
inline const ::micromsg::GiftEntranceItem& GetSuggestionAppListResponse::giftentranceitem() const {
  // @@protoc_insertion_point(field_get:micromsg.GetSuggestionAppListResponse.GiftEntranceItem)
  return giftentranceitem_ != NULL ? *giftentranceitem_
                         : *::micromsg::GiftEntranceItem::internal_default_instance();
}
inline ::micromsg::GiftEntranceItem* GetSuggestionAppListResponse::mutable_giftentranceitem() {
  set_has_giftentranceitem();
  if (giftentranceitem_ == NULL) {
    giftentranceitem_ = new ::micromsg::GiftEntranceItem;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetSuggestionAppListResponse.GiftEntranceItem)
  return giftentranceitem_;
}
inline ::micromsg::GiftEntranceItem* GetSuggestionAppListResponse::release_giftentranceitem() {
  // @@protoc_insertion_point(field_release:micromsg.GetSuggestionAppListResponse.GiftEntranceItem)
  clear_has_giftentranceitem();
  ::micromsg::GiftEntranceItem* temp = giftentranceitem_;
  giftentranceitem_ = NULL;
  return temp;
}
inline void GetSuggestionAppListResponse::set_allocated_giftentranceitem(::micromsg::GiftEntranceItem* giftentranceitem) {
  delete giftentranceitem_;
  giftentranceitem_ = giftentranceitem;
  if (giftentranceitem) {
    set_has_giftentranceitem();
  } else {
    clear_has_giftentranceitem();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetSuggestionAppListResponse.GiftEntranceItem)
}

// -------------------------------------------------------------------

// JSOAuthRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool JSOAuthRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void JSOAuthRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000080u;
}
inline void JSOAuthRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void JSOAuthRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& JSOAuthRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.JSOAuthRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* JSOAuthRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.JSOAuthRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* JSOAuthRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.JSOAuthRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void JSOAuthRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.JSOAuthRequest.BaseRequest)
}

// optional string AppID = 2;
inline bool JSOAuthRequest::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JSOAuthRequest::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JSOAuthRequest::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JSOAuthRequest::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
inline const ::std::string& JSOAuthRequest::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.JSOAuthRequest.AppID)
  return appid_.GetNoArena();
}
inline void JSOAuthRequest::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.JSOAuthRequest.AppID)
}
#if LANG_CXX11
inline void JSOAuthRequest::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.JSOAuthRequest.AppID)
}
#endif
inline void JSOAuthRequest::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.JSOAuthRequest.AppID)
}
inline void JSOAuthRequest::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.JSOAuthRequest.AppID)
}
inline ::std::string* JSOAuthRequest::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.JSOAuthRequest.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JSOAuthRequest::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.JSOAuthRequest.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JSOAuthRequest::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.JSOAuthRequest.AppID)
}

// optional string Url = 3;
inline bool JSOAuthRequest::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JSOAuthRequest::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JSOAuthRequest::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JSOAuthRequest::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& JSOAuthRequest::url() const {
  // @@protoc_insertion_point(field_get:micromsg.JSOAuthRequest.Url)
  return url_.GetNoArena();
}
inline void JSOAuthRequest::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.JSOAuthRequest.Url)
}
#if LANG_CXX11
inline void JSOAuthRequest::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.JSOAuthRequest.Url)
}
#endif
inline void JSOAuthRequest::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.JSOAuthRequest.Url)
}
inline void JSOAuthRequest::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.JSOAuthRequest.Url)
}
inline ::std::string* JSOAuthRequest::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:micromsg.JSOAuthRequest.Url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JSOAuthRequest::release_url() {
  // @@protoc_insertion_point(field_release:micromsg.JSOAuthRequest.Url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JSOAuthRequest::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:micromsg.JSOAuthRequest.Url)
}

// optional string Scope = 4;
inline bool JSOAuthRequest::has_scope() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JSOAuthRequest::set_has_scope() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JSOAuthRequest::clear_has_scope() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JSOAuthRequest::clear_scope() {
  scope_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_scope();
}
inline const ::std::string& JSOAuthRequest::scope() const {
  // @@protoc_insertion_point(field_get:micromsg.JSOAuthRequest.Scope)
  return scope_.GetNoArena();
}
inline void JSOAuthRequest::set_scope(const ::std::string& value) {
  set_has_scope();
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.JSOAuthRequest.Scope)
}
#if LANG_CXX11
inline void JSOAuthRequest::set_scope(::std::string&& value) {
  set_has_scope();
  scope_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.JSOAuthRequest.Scope)
}
#endif
inline void JSOAuthRequest::set_scope(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_scope();
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.JSOAuthRequest.Scope)
}
inline void JSOAuthRequest::set_scope(const char* value, size_t size) {
  set_has_scope();
  scope_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.JSOAuthRequest.Scope)
}
inline ::std::string* JSOAuthRequest::mutable_scope() {
  set_has_scope();
  // @@protoc_insertion_point(field_mutable:micromsg.JSOAuthRequest.Scope)
  return scope_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JSOAuthRequest::release_scope() {
  // @@protoc_insertion_point(field_release:micromsg.JSOAuthRequest.Scope)
  clear_has_scope();
  return scope_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JSOAuthRequest::set_allocated_scope(::std::string* scope) {
  if (scope != NULL) {
    set_has_scope();
  } else {
    clear_has_scope();
  }
  scope_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scope);
  // @@protoc_insertion_point(field_set_allocated:micromsg.JSOAuthRequest.Scope)
}

// optional string Signature = 5;
inline bool JSOAuthRequest::has_signature() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JSOAuthRequest::set_has_signature() {
  _has_bits_[0] |= 0x00000008u;
}
inline void JSOAuthRequest::clear_has_signature() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void JSOAuthRequest::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_signature();
}
inline const ::std::string& JSOAuthRequest::signature() const {
  // @@protoc_insertion_point(field_get:micromsg.JSOAuthRequest.Signature)
  return signature_.GetNoArena();
}
inline void JSOAuthRequest::set_signature(const ::std::string& value) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.JSOAuthRequest.Signature)
}
#if LANG_CXX11
inline void JSOAuthRequest::set_signature(::std::string&& value) {
  set_has_signature();
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.JSOAuthRequest.Signature)
}
#endif
inline void JSOAuthRequest::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.JSOAuthRequest.Signature)
}
inline void JSOAuthRequest::set_signature(const char* value, size_t size) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.JSOAuthRequest.Signature)
}
inline ::std::string* JSOAuthRequest::mutable_signature() {
  set_has_signature();
  // @@protoc_insertion_point(field_mutable:micromsg.JSOAuthRequest.Signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JSOAuthRequest::release_signature() {
  // @@protoc_insertion_point(field_release:micromsg.JSOAuthRequest.Signature)
  clear_has_signature();
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JSOAuthRequest::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    set_has_signature();
  } else {
    clear_has_signature();
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:micromsg.JSOAuthRequest.Signature)
}

// optional string Signature_method = 6;
inline bool JSOAuthRequest::has_signature_method() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void JSOAuthRequest::set_has_signature_method() {
  _has_bits_[0] |= 0x00000010u;
}
inline void JSOAuthRequest::clear_has_signature_method() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void JSOAuthRequest::clear_signature_method() {
  signature_method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_signature_method();
}
inline const ::std::string& JSOAuthRequest::signature_method() const {
  // @@protoc_insertion_point(field_get:micromsg.JSOAuthRequest.Signature_method)
  return signature_method_.GetNoArena();
}
inline void JSOAuthRequest::set_signature_method(const ::std::string& value) {
  set_has_signature_method();
  signature_method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.JSOAuthRequest.Signature_method)
}
#if LANG_CXX11
inline void JSOAuthRequest::set_signature_method(::std::string&& value) {
  set_has_signature_method();
  signature_method_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.JSOAuthRequest.Signature_method)
}
#endif
inline void JSOAuthRequest::set_signature_method(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_signature_method();
  signature_method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.JSOAuthRequest.Signature_method)
}
inline void JSOAuthRequest::set_signature_method(const char* value, size_t size) {
  set_has_signature_method();
  signature_method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.JSOAuthRequest.Signature_method)
}
inline ::std::string* JSOAuthRequest::mutable_signature_method() {
  set_has_signature_method();
  // @@protoc_insertion_point(field_mutable:micromsg.JSOAuthRequest.Signature_method)
  return signature_method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JSOAuthRequest::release_signature_method() {
  // @@protoc_insertion_point(field_release:micromsg.JSOAuthRequest.Signature_method)
  clear_has_signature_method();
  return signature_method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JSOAuthRequest::set_allocated_signature_method(::std::string* signature_method) {
  if (signature_method != NULL) {
    set_has_signature_method();
  } else {
    clear_has_signature_method();
  }
  signature_method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature_method);
  // @@protoc_insertion_point(field_set_allocated:micromsg.JSOAuthRequest.Signature_method)
}

// optional string TimeStamp = 7;
inline bool JSOAuthRequest::has_timestamp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void JSOAuthRequest::set_has_timestamp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void JSOAuthRequest::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void JSOAuthRequest::clear_timestamp() {
  timestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_timestamp();
}
inline const ::std::string& JSOAuthRequest::timestamp() const {
  // @@protoc_insertion_point(field_get:micromsg.JSOAuthRequest.TimeStamp)
  return timestamp_.GetNoArena();
}
inline void JSOAuthRequest::set_timestamp(const ::std::string& value) {
  set_has_timestamp();
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.JSOAuthRequest.TimeStamp)
}
#if LANG_CXX11
inline void JSOAuthRequest::set_timestamp(::std::string&& value) {
  set_has_timestamp();
  timestamp_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.JSOAuthRequest.TimeStamp)
}
#endif
inline void JSOAuthRequest::set_timestamp(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_timestamp();
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.JSOAuthRequest.TimeStamp)
}
inline void JSOAuthRequest::set_timestamp(const char* value, size_t size) {
  set_has_timestamp();
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.JSOAuthRequest.TimeStamp)
}
inline ::std::string* JSOAuthRequest::mutable_timestamp() {
  set_has_timestamp();
  // @@protoc_insertion_point(field_mutable:micromsg.JSOAuthRequest.TimeStamp)
  return timestamp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JSOAuthRequest::release_timestamp() {
  // @@protoc_insertion_point(field_release:micromsg.JSOAuthRequest.TimeStamp)
  clear_has_timestamp();
  return timestamp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JSOAuthRequest::set_allocated_timestamp(::std::string* timestamp) {
  if (timestamp != NULL) {
    set_has_timestamp();
  } else {
    clear_has_timestamp();
  }
  timestamp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), timestamp);
  // @@protoc_insertion_point(field_set_allocated:micromsg.JSOAuthRequest.TimeStamp)
}

// optional string Nonce = 8;
inline bool JSOAuthRequest::has_nonce() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void JSOAuthRequest::set_has_nonce() {
  _has_bits_[0] |= 0x00000040u;
}
inline void JSOAuthRequest::clear_has_nonce() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void JSOAuthRequest::clear_nonce() {
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nonce();
}
inline const ::std::string& JSOAuthRequest::nonce() const {
  // @@protoc_insertion_point(field_get:micromsg.JSOAuthRequest.Nonce)
  return nonce_.GetNoArena();
}
inline void JSOAuthRequest::set_nonce(const ::std::string& value) {
  set_has_nonce();
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.JSOAuthRequest.Nonce)
}
#if LANG_CXX11
inline void JSOAuthRequest::set_nonce(::std::string&& value) {
  set_has_nonce();
  nonce_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.JSOAuthRequest.Nonce)
}
#endif
inline void JSOAuthRequest::set_nonce(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nonce();
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.JSOAuthRequest.Nonce)
}
inline void JSOAuthRequest::set_nonce(const char* value, size_t size) {
  set_has_nonce();
  nonce_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.JSOAuthRequest.Nonce)
}
inline ::std::string* JSOAuthRequest::mutable_nonce() {
  set_has_nonce();
  // @@protoc_insertion_point(field_mutable:micromsg.JSOAuthRequest.Nonce)
  return nonce_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JSOAuthRequest::release_nonce() {
  // @@protoc_insertion_point(field_release:micromsg.JSOAuthRequest.Nonce)
  clear_has_nonce();
  return nonce_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JSOAuthRequest::set_allocated_nonce(::std::string* nonce) {
  if (nonce != NULL) {
    set_has_nonce();
  } else {
    clear_has_nonce();
  }
  nonce_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nonce);
  // @@protoc_insertion_point(field_set_allocated:micromsg.JSOAuthRequest.Nonce)
}

// -------------------------------------------------------------------

// JSOAuthResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool JSOAuthResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JSOAuthResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JSOAuthResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JSOAuthResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& JSOAuthResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.JSOAuthResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* JSOAuthResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.JSOAuthResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* JSOAuthResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.JSOAuthResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void JSOAuthResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.JSOAuthResponse.BaseResponse)
}

// required uint32 ScopeCount = 2;
inline bool JSOAuthResponse::has_scopecount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JSOAuthResponse::set_has_scopecount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JSOAuthResponse::clear_has_scopecount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JSOAuthResponse::clear_scopecount() {
  scopecount_ = 0u;
  clear_has_scopecount();
}
inline ::google::protobuf::uint32 JSOAuthResponse::scopecount() const {
  // @@protoc_insertion_point(field_get:micromsg.JSOAuthResponse.ScopeCount)
  return scopecount_;
}
inline void JSOAuthResponse::set_scopecount(::google::protobuf::uint32 value) {
  set_has_scopecount();
  scopecount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.JSOAuthResponse.ScopeCount)
}

// repeated .micromsg.BizScopeInfo ScopeList = 3;
inline int JSOAuthResponse::scopelist_size() const {
  return scopelist_.size();
}
inline void JSOAuthResponse::clear_scopelist() {
  scopelist_.Clear();
}
inline const ::micromsg::BizScopeInfo& JSOAuthResponse::scopelist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.JSOAuthResponse.ScopeList)
  return scopelist_.Get(index);
}
inline ::micromsg::BizScopeInfo* JSOAuthResponse::mutable_scopelist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.JSOAuthResponse.ScopeList)
  return scopelist_.Mutable(index);
}
inline ::micromsg::BizScopeInfo* JSOAuthResponse::add_scopelist() {
  // @@protoc_insertion_point(field_add:micromsg.JSOAuthResponse.ScopeList)
  return scopelist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::BizScopeInfo >*
JSOAuthResponse::mutable_scopelist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.JSOAuthResponse.ScopeList)
  return &scopelist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::BizScopeInfo >&
JSOAuthResponse::scopelist() const {
  // @@protoc_insertion_point(field_list:micromsg.JSOAuthResponse.ScopeList)
  return scopelist_;
}

// optional string OAuthTitle = 4;
inline bool JSOAuthResponse::has_oauthtitle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JSOAuthResponse::set_has_oauthtitle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JSOAuthResponse::clear_has_oauthtitle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JSOAuthResponse::clear_oauthtitle() {
  oauthtitle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_oauthtitle();
}
inline const ::std::string& JSOAuthResponse::oauthtitle() const {
  // @@protoc_insertion_point(field_get:micromsg.JSOAuthResponse.OAuthTitle)
  return oauthtitle_.GetNoArena();
}
inline void JSOAuthResponse::set_oauthtitle(const ::std::string& value) {
  set_has_oauthtitle();
  oauthtitle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.JSOAuthResponse.OAuthTitle)
}
#if LANG_CXX11
inline void JSOAuthResponse::set_oauthtitle(::std::string&& value) {
  set_has_oauthtitle();
  oauthtitle_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.JSOAuthResponse.OAuthTitle)
}
#endif
inline void JSOAuthResponse::set_oauthtitle(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_oauthtitle();
  oauthtitle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.JSOAuthResponse.OAuthTitle)
}
inline void JSOAuthResponse::set_oauthtitle(const char* value, size_t size) {
  set_has_oauthtitle();
  oauthtitle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.JSOAuthResponse.OAuthTitle)
}
inline ::std::string* JSOAuthResponse::mutable_oauthtitle() {
  set_has_oauthtitle();
  // @@protoc_insertion_point(field_mutable:micromsg.JSOAuthResponse.OAuthTitle)
  return oauthtitle_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JSOAuthResponse::release_oauthtitle() {
  // @@protoc_insertion_point(field_release:micromsg.JSOAuthResponse.OAuthTitle)
  clear_has_oauthtitle();
  return oauthtitle_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JSOAuthResponse::set_allocated_oauthtitle(::std::string* oauthtitle) {
  if (oauthtitle != NULL) {
    set_has_oauthtitle();
  } else {
    clear_has_oauthtitle();
  }
  oauthtitle_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oauthtitle);
  // @@protoc_insertion_point(field_set_allocated:micromsg.JSOAuthResponse.OAuthTitle)
}

// -------------------------------------------------------------------

// SetOAuthScopeRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool SetOAuthScopeRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetOAuthScopeRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetOAuthScopeRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetOAuthScopeRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& SetOAuthScopeRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SetOAuthScopeRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* SetOAuthScopeRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SetOAuthScopeRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* SetOAuthScopeRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SetOAuthScopeRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void SetOAuthScopeRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SetOAuthScopeRequest.BaseRequest)
}

// optional string AppID = 2;
inline bool SetOAuthScopeRequest::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetOAuthScopeRequest::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetOAuthScopeRequest::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetOAuthScopeRequest::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
inline const ::std::string& SetOAuthScopeRequest::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.SetOAuthScopeRequest.AppID)
  return appid_.GetNoArena();
}
inline void SetOAuthScopeRequest::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SetOAuthScopeRequest.AppID)
}
#if LANG_CXX11
inline void SetOAuthScopeRequest::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SetOAuthScopeRequest.AppID)
}
#endif
inline void SetOAuthScopeRequest::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SetOAuthScopeRequest.AppID)
}
inline void SetOAuthScopeRequest::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SetOAuthScopeRequest.AppID)
}
inline ::std::string* SetOAuthScopeRequest::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.SetOAuthScopeRequest.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetOAuthScopeRequest::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.SetOAuthScopeRequest.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetOAuthScopeRequest::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SetOAuthScopeRequest.AppID)
}

// required uint32 ScopeCount = 3;
inline bool SetOAuthScopeRequest::has_scopecount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetOAuthScopeRequest::set_has_scopecount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetOAuthScopeRequest::clear_has_scopecount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetOAuthScopeRequest::clear_scopecount() {
  scopecount_ = 0u;
  clear_has_scopecount();
}
inline ::google::protobuf::uint32 SetOAuthScopeRequest::scopecount() const {
  // @@protoc_insertion_point(field_get:micromsg.SetOAuthScopeRequest.ScopeCount)
  return scopecount_;
}
inline void SetOAuthScopeRequest::set_scopecount(::google::protobuf::uint32 value) {
  set_has_scopecount();
  scopecount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SetOAuthScopeRequest.ScopeCount)
}

// repeated .micromsg.BizScopeInfo ScopeList = 4;
inline int SetOAuthScopeRequest::scopelist_size() const {
  return scopelist_.size();
}
inline void SetOAuthScopeRequest::clear_scopelist() {
  scopelist_.Clear();
}
inline const ::micromsg::BizScopeInfo& SetOAuthScopeRequest::scopelist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.SetOAuthScopeRequest.ScopeList)
  return scopelist_.Get(index);
}
inline ::micromsg::BizScopeInfo* SetOAuthScopeRequest::mutable_scopelist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.SetOAuthScopeRequest.ScopeList)
  return scopelist_.Mutable(index);
}
inline ::micromsg::BizScopeInfo* SetOAuthScopeRequest::add_scopelist() {
  // @@protoc_insertion_point(field_add:micromsg.SetOAuthScopeRequest.ScopeList)
  return scopelist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::BizScopeInfo >*
SetOAuthScopeRequest::mutable_scopelist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.SetOAuthScopeRequest.ScopeList)
  return &scopelist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::BizScopeInfo >&
SetOAuthScopeRequest::scopelist() const {
  // @@protoc_insertion_point(field_list:micromsg.SetOAuthScopeRequest.ScopeList)
  return scopelist_;
}

// -------------------------------------------------------------------

// SetOAuthScopeResponse

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool SetOAuthScopeResponse::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetOAuthScopeResponse::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetOAuthScopeResponse::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetOAuthScopeResponse::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& SetOAuthScopeResponse::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SetOAuthScopeResponse.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* SetOAuthScopeResponse::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SetOAuthScopeResponse.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* SetOAuthScopeResponse::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SetOAuthScopeResponse.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void SetOAuthScopeResponse::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SetOAuthScopeResponse.BaseRequest)
}

// required uint32 ScopeCount = 2;
inline bool SetOAuthScopeResponse::has_scopecount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetOAuthScopeResponse::set_has_scopecount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetOAuthScopeResponse::clear_has_scopecount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetOAuthScopeResponse::clear_scopecount() {
  scopecount_ = 0u;
  clear_has_scopecount();
}
inline ::google::protobuf::uint32 SetOAuthScopeResponse::scopecount() const {
  // @@protoc_insertion_point(field_get:micromsg.SetOAuthScopeResponse.ScopeCount)
  return scopecount_;
}
inline void SetOAuthScopeResponse::set_scopecount(::google::protobuf::uint32 value) {
  set_has_scopecount();
  scopecount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SetOAuthScopeResponse.ScopeCount)
}

// repeated .micromsg.BizScopeInfo ScopeList = 3;
inline int SetOAuthScopeResponse::scopelist_size() const {
  return scopelist_.size();
}
inline void SetOAuthScopeResponse::clear_scopelist() {
  scopelist_.Clear();
}
inline const ::micromsg::BizScopeInfo& SetOAuthScopeResponse::scopelist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.SetOAuthScopeResponse.ScopeList)
  return scopelist_.Get(index);
}
inline ::micromsg::BizScopeInfo* SetOAuthScopeResponse::mutable_scopelist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.SetOAuthScopeResponse.ScopeList)
  return scopelist_.Mutable(index);
}
inline ::micromsg::BizScopeInfo* SetOAuthScopeResponse::add_scopelist() {
  // @@protoc_insertion_point(field_add:micromsg.SetOAuthScopeResponse.ScopeList)
  return scopelist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::BizScopeInfo >*
SetOAuthScopeResponse::mutable_scopelist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.SetOAuthScopeResponse.ScopeList)
  return &scopelist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::BizScopeInfo >&
SetOAuthScopeResponse::scopelist() const {
  // @@protoc_insertion_point(field_list:micromsg.SetOAuthScopeResponse.ScopeList)
  return scopelist_;
}

// -------------------------------------------------------------------

// GetUserInfoInAppRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetUserInfoInAppRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetUserInfoInAppRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetUserInfoInAppRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetUserInfoInAppRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetUserInfoInAppRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetUserInfoInAppRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetUserInfoInAppRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetUserInfoInAppRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetUserInfoInAppRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetUserInfoInAppRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetUserInfoInAppRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetUserInfoInAppRequest.BaseRequest)
}

// optional string AppID = 2;
inline bool GetUserInfoInAppRequest::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUserInfoInAppRequest::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUserInfoInAppRequest::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUserInfoInAppRequest::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
inline const ::std::string& GetUserInfoInAppRequest::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetUserInfoInAppRequest.AppID)
  return appid_.GetNoArena();
}
inline void GetUserInfoInAppRequest::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetUserInfoInAppRequest.AppID)
}
#if LANG_CXX11
inline void GetUserInfoInAppRequest::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetUserInfoInAppRequest.AppID)
}
#endif
inline void GetUserInfoInAppRequest::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetUserInfoInAppRequest.AppID)
}
inline void GetUserInfoInAppRequest::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetUserInfoInAppRequest.AppID)
}
inline ::std::string* GetUserInfoInAppRequest::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetUserInfoInAppRequest.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetUserInfoInAppRequest::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.GetUserInfoInAppRequest.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetUserInfoInAppRequest::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetUserInfoInAppRequest.AppID)
}

// required uint32 UserCount = 3;
inline bool GetUserInfoInAppRequest::has_usercount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetUserInfoInAppRequest::set_has_usercount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetUserInfoInAppRequest::clear_has_usercount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetUserInfoInAppRequest::clear_usercount() {
  usercount_ = 0u;
  clear_has_usercount();
}
inline ::google::protobuf::uint32 GetUserInfoInAppRequest::usercount() const {
  // @@protoc_insertion_point(field_get:micromsg.GetUserInfoInAppRequest.UserCount)
  return usercount_;
}
inline void GetUserInfoInAppRequest::set_usercount(::google::protobuf::uint32 value) {
  set_has_usercount();
  usercount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetUserInfoInAppRequest.UserCount)
}

// repeated .micromsg.SKBuiltinString_t UserNameList = 4;
inline int GetUserInfoInAppRequest::usernamelist_size() const {
  return usernamelist_.size();
}
inline void GetUserInfoInAppRequest::clear_usernamelist() {
  usernamelist_.Clear();
}
inline const ::micromsg::SKBuiltinString_t& GetUserInfoInAppRequest::usernamelist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetUserInfoInAppRequest.UserNameList)
  return usernamelist_.Get(index);
}
inline ::micromsg::SKBuiltinString_t* GetUserInfoInAppRequest::mutable_usernamelist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetUserInfoInAppRequest.UserNameList)
  return usernamelist_.Mutable(index);
}
inline ::micromsg::SKBuiltinString_t* GetUserInfoInAppRequest::add_usernamelist() {
  // @@protoc_insertion_point(field_add:micromsg.GetUserInfoInAppRequest.UserNameList)
  return usernamelist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
GetUserInfoInAppRequest::mutable_usernamelist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetUserInfoInAppRequest.UserNameList)
  return &usernamelist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
GetUserInfoInAppRequest::usernamelist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetUserInfoInAppRequest.UserNameList)
  return usernamelist_;
}

// required uint32 Scene = 5;
inline bool GetUserInfoInAppRequest::has_scene() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetUserInfoInAppRequest::set_has_scene() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetUserInfoInAppRequest::clear_has_scene() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetUserInfoInAppRequest::clear_scene() {
  scene_ = 0u;
  clear_has_scene();
}
inline ::google::protobuf::uint32 GetUserInfoInAppRequest::scene() const {
  // @@protoc_insertion_point(field_get:micromsg.GetUserInfoInAppRequest.Scene)
  return scene_;
}
inline void GetUserInfoInAppRequest::set_scene(::google::protobuf::uint32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetUserInfoInAppRequest.Scene)
}

// -------------------------------------------------------------------

// UserInfoInApp

// optional string UserName = 1;
inline bool UserInfoInApp::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserInfoInApp::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserInfoInApp::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserInfoInApp::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& UserInfoInApp::username() const {
  // @@protoc_insertion_point(field_get:micromsg.UserInfoInApp.UserName)
  return username_.GetNoArena();
}
inline void UserInfoInApp::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.UserInfoInApp.UserName)
}
#if LANG_CXX11
inline void UserInfoInApp::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.UserInfoInApp.UserName)
}
#endif
inline void UserInfoInApp::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.UserInfoInApp.UserName)
}
inline void UserInfoInApp::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.UserInfoInApp.UserName)
}
inline ::std::string* UserInfoInApp::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.UserInfoInApp.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfoInApp::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.UserInfoInApp.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfoInApp::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.UserInfoInApp.UserName)
}

// optional string PersonalSettingXml = 2;
inline bool UserInfoInApp::has_personalsettingxml() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserInfoInApp::set_has_personalsettingxml() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserInfoInApp::clear_has_personalsettingxml() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserInfoInApp::clear_personalsettingxml() {
  personalsettingxml_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_personalsettingxml();
}
inline const ::std::string& UserInfoInApp::personalsettingxml() const {
  // @@protoc_insertion_point(field_get:micromsg.UserInfoInApp.PersonalSettingXml)
  return personalsettingxml_.GetNoArena();
}
inline void UserInfoInApp::set_personalsettingxml(const ::std::string& value) {
  set_has_personalsettingxml();
  personalsettingxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.UserInfoInApp.PersonalSettingXml)
}
#if LANG_CXX11
inline void UserInfoInApp::set_personalsettingxml(::std::string&& value) {
  set_has_personalsettingxml();
  personalsettingxml_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.UserInfoInApp.PersonalSettingXml)
}
#endif
inline void UserInfoInApp::set_personalsettingxml(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_personalsettingxml();
  personalsettingxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.UserInfoInApp.PersonalSettingXml)
}
inline void UserInfoInApp::set_personalsettingxml(const char* value, size_t size) {
  set_has_personalsettingxml();
  personalsettingxml_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.UserInfoInApp.PersonalSettingXml)
}
inline ::std::string* UserInfoInApp::mutable_personalsettingxml() {
  set_has_personalsettingxml();
  // @@protoc_insertion_point(field_mutable:micromsg.UserInfoInApp.PersonalSettingXml)
  return personalsettingxml_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfoInApp::release_personalsettingxml() {
  // @@protoc_insertion_point(field_release:micromsg.UserInfoInApp.PersonalSettingXml)
  clear_has_personalsettingxml();
  return personalsettingxml_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfoInApp::set_allocated_personalsettingxml(::std::string* personalsettingxml) {
  if (personalsettingxml != NULL) {
    set_has_personalsettingxml();
  } else {
    clear_has_personalsettingxml();
  }
  personalsettingxml_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), personalsettingxml);
  // @@protoc_insertion_point(field_set_allocated:micromsg.UserInfoInApp.PersonalSettingXml)
}

// -------------------------------------------------------------------

// GetUserInfoInAppResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetUserInfoInAppResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUserInfoInAppResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUserInfoInAppResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUserInfoInAppResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetUserInfoInAppResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetUserInfoInAppResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetUserInfoInAppResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetUserInfoInAppResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetUserInfoInAppResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetUserInfoInAppResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetUserInfoInAppResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetUserInfoInAppResponse.BaseResponse)
}

// required uint32 UserCount = 2;
inline bool GetUserInfoInAppResponse::has_usercount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetUserInfoInAppResponse::set_has_usercount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetUserInfoInAppResponse::clear_has_usercount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetUserInfoInAppResponse::clear_usercount() {
  usercount_ = 0u;
  clear_has_usercount();
}
inline ::google::protobuf::uint32 GetUserInfoInAppResponse::usercount() const {
  // @@protoc_insertion_point(field_get:micromsg.GetUserInfoInAppResponse.UserCount)
  return usercount_;
}
inline void GetUserInfoInAppResponse::set_usercount(::google::protobuf::uint32 value) {
  set_has_usercount();
  usercount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetUserInfoInAppResponse.UserCount)
}

// repeated .micromsg.UserInfoInApp UserInfoList = 3;
inline int GetUserInfoInAppResponse::userinfolist_size() const {
  return userinfolist_.size();
}
inline void GetUserInfoInAppResponse::clear_userinfolist() {
  userinfolist_.Clear();
}
inline const ::micromsg::UserInfoInApp& GetUserInfoInAppResponse::userinfolist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetUserInfoInAppResponse.UserInfoList)
  return userinfolist_.Get(index);
}
inline ::micromsg::UserInfoInApp* GetUserInfoInAppResponse::mutable_userinfolist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetUserInfoInAppResponse.UserInfoList)
  return userinfolist_.Mutable(index);
}
inline ::micromsg::UserInfoInApp* GetUserInfoInAppResponse::add_userinfolist() {
  // @@protoc_insertion_point(field_add:micromsg.GetUserInfoInAppResponse.UserInfoList)
  return userinfolist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::UserInfoInApp >*
GetUserInfoInAppResponse::mutable_userinfolist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetUserInfoInAppResponse.UserInfoList)
  return &userinfolist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::UserInfoInApp >&
GetUserInfoInAppResponse::userinfolist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetUserInfoInAppResponse.UserInfoList)
  return userinfolist_;
}

// -------------------------------------------------------------------

// CheckCanSubscribeBizRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool CheckCanSubscribeBizRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CheckCanSubscribeBizRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CheckCanSubscribeBizRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CheckCanSubscribeBizRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& CheckCanSubscribeBizRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCanSubscribeBizRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* CheckCanSubscribeBizRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.CheckCanSubscribeBizRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* CheckCanSubscribeBizRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.CheckCanSubscribeBizRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void CheckCanSubscribeBizRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckCanSubscribeBizRequest.BaseRequest)
}

// required uint32 Source = 2;
inline bool CheckCanSubscribeBizRequest::has_source() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CheckCanSubscribeBizRequest::set_has_source() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CheckCanSubscribeBizRequest::clear_has_source() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CheckCanSubscribeBizRequest::clear_source() {
  source_ = 0u;
  clear_has_source();
}
inline ::google::protobuf::uint32 CheckCanSubscribeBizRequest::source() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCanSubscribeBizRequest.Source)
  return source_;
}
inline void CheckCanSubscribeBizRequest::set_source(::google::protobuf::uint32 value) {
  set_has_source();
  source_ = value;
  // @@protoc_insertion_point(field_set:micromsg.CheckCanSubscribeBizRequest.Source)
}

// optional string ToUserName = 3;
inline bool CheckCanSubscribeBizRequest::has_tousername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CheckCanSubscribeBizRequest::set_has_tousername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CheckCanSubscribeBizRequest::clear_has_tousername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CheckCanSubscribeBizRequest::clear_tousername() {
  tousername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tousername();
}
inline const ::std::string& CheckCanSubscribeBizRequest::tousername() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCanSubscribeBizRequest.ToUserName)
  return tousername_.GetNoArena();
}
inline void CheckCanSubscribeBizRequest::set_tousername(const ::std::string& value) {
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckCanSubscribeBizRequest.ToUserName)
}
#if LANG_CXX11
inline void CheckCanSubscribeBizRequest::set_tousername(::std::string&& value) {
  set_has_tousername();
  tousername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckCanSubscribeBizRequest.ToUserName)
}
#endif
inline void CheckCanSubscribeBizRequest::set_tousername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckCanSubscribeBizRequest.ToUserName)
}
inline void CheckCanSubscribeBizRequest::set_tousername(const char* value, size_t size) {
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckCanSubscribeBizRequest.ToUserName)
}
inline ::std::string* CheckCanSubscribeBizRequest::mutable_tousername() {
  set_has_tousername();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckCanSubscribeBizRequest.ToUserName)
  return tousername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckCanSubscribeBizRequest::release_tousername() {
  // @@protoc_insertion_point(field_release:micromsg.CheckCanSubscribeBizRequest.ToUserName)
  clear_has_tousername();
  return tousername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckCanSubscribeBizRequest::set_allocated_tousername(::std::string* tousername) {
  if (tousername != NULL) {
    set_has_tousername();
  } else {
    clear_has_tousername();
  }
  tousername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tousername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckCanSubscribeBizRequest.ToUserName)
}

// optional string ExtInfo = 4;
inline bool CheckCanSubscribeBizRequest::has_extinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CheckCanSubscribeBizRequest::set_has_extinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CheckCanSubscribeBizRequest::clear_has_extinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CheckCanSubscribeBizRequest::clear_extinfo() {
  extinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_extinfo();
}
inline const ::std::string& CheckCanSubscribeBizRequest::extinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCanSubscribeBizRequest.ExtInfo)
  return extinfo_.GetNoArena();
}
inline void CheckCanSubscribeBizRequest::set_extinfo(const ::std::string& value) {
  set_has_extinfo();
  extinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckCanSubscribeBizRequest.ExtInfo)
}
#if LANG_CXX11
inline void CheckCanSubscribeBizRequest::set_extinfo(::std::string&& value) {
  set_has_extinfo();
  extinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckCanSubscribeBizRequest.ExtInfo)
}
#endif
inline void CheckCanSubscribeBizRequest::set_extinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_extinfo();
  extinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckCanSubscribeBizRequest.ExtInfo)
}
inline void CheckCanSubscribeBizRequest::set_extinfo(const char* value, size_t size) {
  set_has_extinfo();
  extinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckCanSubscribeBizRequest.ExtInfo)
}
inline ::std::string* CheckCanSubscribeBizRequest::mutable_extinfo() {
  set_has_extinfo();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckCanSubscribeBizRequest.ExtInfo)
  return extinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckCanSubscribeBizRequest::release_extinfo() {
  // @@protoc_insertion_point(field_release:micromsg.CheckCanSubscribeBizRequest.ExtInfo)
  clear_has_extinfo();
  return extinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckCanSubscribeBizRequest::set_allocated_extinfo(::std::string* extinfo) {
  if (extinfo != NULL) {
    set_has_extinfo();
  } else {
    clear_has_extinfo();
  }
  extinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extinfo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckCanSubscribeBizRequest.ExtInfo)
}

// optional string AppID = 5;
inline bool CheckCanSubscribeBizRequest::has_appid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CheckCanSubscribeBizRequest::set_has_appid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CheckCanSubscribeBizRequest::clear_has_appid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CheckCanSubscribeBizRequest::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
inline const ::std::string& CheckCanSubscribeBizRequest::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCanSubscribeBizRequest.AppID)
  return appid_.GetNoArena();
}
inline void CheckCanSubscribeBizRequest::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckCanSubscribeBizRequest.AppID)
}
#if LANG_CXX11
inline void CheckCanSubscribeBizRequest::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckCanSubscribeBizRequest.AppID)
}
#endif
inline void CheckCanSubscribeBizRequest::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckCanSubscribeBizRequest.AppID)
}
inline void CheckCanSubscribeBizRequest::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckCanSubscribeBizRequest.AppID)
}
inline ::std::string* CheckCanSubscribeBizRequest::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckCanSubscribeBizRequest.AppID)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckCanSubscribeBizRequest::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.CheckCanSubscribeBizRequest.AppID)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckCanSubscribeBizRequest::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckCanSubscribeBizRequest.AppID)
}

// required uint32 PackNum = 6;
inline bool CheckCanSubscribeBizRequest::has_packnum() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CheckCanSubscribeBizRequest::set_has_packnum() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CheckCanSubscribeBizRequest::clear_has_packnum() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CheckCanSubscribeBizRequest::clear_packnum() {
  packnum_ = 0u;
  clear_has_packnum();
}
inline ::google::protobuf::uint32 CheckCanSubscribeBizRequest::packnum() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCanSubscribeBizRequest.PackNum)
  return packnum_;
}
inline void CheckCanSubscribeBizRequest::set_packnum(::google::protobuf::uint32 value) {
  set_has_packnum();
  packnum_ = value;
  // @@protoc_insertion_point(field_set:micromsg.CheckCanSubscribeBizRequest.PackNum)
}

// repeated .micromsg.SKBuiltinString_t AndroidPackNameList = 7;
inline int CheckCanSubscribeBizRequest::androidpacknamelist_size() const {
  return androidpacknamelist_.size();
}
inline void CheckCanSubscribeBizRequest::clear_androidpacknamelist() {
  androidpacknamelist_.Clear();
}
inline const ::micromsg::SKBuiltinString_t& CheckCanSubscribeBizRequest::androidpacknamelist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCanSubscribeBizRequest.AndroidPackNameList)
  return androidpacknamelist_.Get(index);
}
inline ::micromsg::SKBuiltinString_t* CheckCanSubscribeBizRequest::mutable_androidpacknamelist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.CheckCanSubscribeBizRequest.AndroidPackNameList)
  return androidpacknamelist_.Mutable(index);
}
inline ::micromsg::SKBuiltinString_t* CheckCanSubscribeBizRequest::add_androidpacknamelist() {
  // @@protoc_insertion_point(field_add:micromsg.CheckCanSubscribeBizRequest.AndroidPackNameList)
  return androidpacknamelist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >*
CheckCanSubscribeBizRequest::mutable_androidpacknamelist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.CheckCanSubscribeBizRequest.AndroidPackNameList)
  return &androidpacknamelist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SKBuiltinString_t >&
CheckCanSubscribeBizRequest::androidpacknamelist() const {
  // @@protoc_insertion_point(field_list:micromsg.CheckCanSubscribeBizRequest.AndroidPackNameList)
  return androidpacknamelist_;
}

// optional string IosBunddleID = 8;
inline bool CheckCanSubscribeBizRequest::has_iosbunddleid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CheckCanSubscribeBizRequest::set_has_iosbunddleid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CheckCanSubscribeBizRequest::clear_has_iosbunddleid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CheckCanSubscribeBizRequest::clear_iosbunddleid() {
  iosbunddleid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_iosbunddleid();
}
inline const ::std::string& CheckCanSubscribeBizRequest::iosbunddleid() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCanSubscribeBizRequest.IosBunddleID)
  return iosbunddleid_.GetNoArena();
}
inline void CheckCanSubscribeBizRequest::set_iosbunddleid(const ::std::string& value) {
  set_has_iosbunddleid();
  iosbunddleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckCanSubscribeBizRequest.IosBunddleID)
}
#if LANG_CXX11
inline void CheckCanSubscribeBizRequest::set_iosbunddleid(::std::string&& value) {
  set_has_iosbunddleid();
  iosbunddleid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckCanSubscribeBizRequest.IosBunddleID)
}
#endif
inline void CheckCanSubscribeBizRequest::set_iosbunddleid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_iosbunddleid();
  iosbunddleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckCanSubscribeBizRequest.IosBunddleID)
}
inline void CheckCanSubscribeBizRequest::set_iosbunddleid(const char* value, size_t size) {
  set_has_iosbunddleid();
  iosbunddleid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckCanSubscribeBizRequest.IosBunddleID)
}
inline ::std::string* CheckCanSubscribeBizRequest::mutable_iosbunddleid() {
  set_has_iosbunddleid();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckCanSubscribeBizRequest.IosBunddleID)
  return iosbunddleid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckCanSubscribeBizRequest::release_iosbunddleid() {
  // @@protoc_insertion_point(field_release:micromsg.CheckCanSubscribeBizRequest.IosBunddleID)
  clear_has_iosbunddleid();
  return iosbunddleid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckCanSubscribeBizRequest::set_allocated_iosbunddleid(::std::string* iosbunddleid) {
  if (iosbunddleid != NULL) {
    set_has_iosbunddleid();
  } else {
    clear_has_iosbunddleid();
  }
  iosbunddleid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), iosbunddleid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckCanSubscribeBizRequest.IosBunddleID)
}

// optional string FromURL = 9;
inline bool CheckCanSubscribeBizRequest::has_fromurl() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CheckCanSubscribeBizRequest::set_has_fromurl() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CheckCanSubscribeBizRequest::clear_has_fromurl() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CheckCanSubscribeBizRequest::clear_fromurl() {
  fromurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fromurl();
}
inline const ::std::string& CheckCanSubscribeBizRequest::fromurl() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCanSubscribeBizRequest.FromURL)
  return fromurl_.GetNoArena();
}
inline void CheckCanSubscribeBizRequest::set_fromurl(const ::std::string& value) {
  set_has_fromurl();
  fromurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckCanSubscribeBizRequest.FromURL)
}
#if LANG_CXX11
inline void CheckCanSubscribeBizRequest::set_fromurl(::std::string&& value) {
  set_has_fromurl();
  fromurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckCanSubscribeBizRequest.FromURL)
}
#endif
inline void CheckCanSubscribeBizRequest::set_fromurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_fromurl();
  fromurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckCanSubscribeBizRequest.FromURL)
}
inline void CheckCanSubscribeBizRequest::set_fromurl(const char* value, size_t size) {
  set_has_fromurl();
  fromurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckCanSubscribeBizRequest.FromURL)
}
inline ::std::string* CheckCanSubscribeBizRequest::mutable_fromurl() {
  set_has_fromurl();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckCanSubscribeBizRequest.FromURL)
  return fromurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckCanSubscribeBizRequest::release_fromurl() {
  // @@protoc_insertion_point(field_release:micromsg.CheckCanSubscribeBizRequest.FromURL)
  clear_has_fromurl();
  return fromurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckCanSubscribeBizRequest::set_allocated_fromurl(::std::string* fromurl) {
  if (fromurl != NULL) {
    set_has_fromurl();
  } else {
    clear_has_fromurl();
  }
  fromurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckCanSubscribeBizRequest.FromURL)
}

// optional uint32 Scene = 10;
inline bool CheckCanSubscribeBizRequest::has_scene() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CheckCanSubscribeBizRequest::set_has_scene() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CheckCanSubscribeBizRequest::clear_has_scene() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CheckCanSubscribeBizRequest::clear_scene() {
  scene_ = 0u;
  clear_has_scene();
}
inline ::google::protobuf::uint32 CheckCanSubscribeBizRequest::scene() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCanSubscribeBizRequest.Scene)
  return scene_;
}
inline void CheckCanSubscribeBizRequest::set_scene(::google::protobuf::uint32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.CheckCanSubscribeBizRequest.Scene)
}

// -------------------------------------------------------------------

// CheckCanSubscribeBizResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool CheckCanSubscribeBizResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CheckCanSubscribeBizResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CheckCanSubscribeBizResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CheckCanSubscribeBizResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& CheckCanSubscribeBizResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCanSubscribeBizResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* CheckCanSubscribeBizResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.CheckCanSubscribeBizResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* CheckCanSubscribeBizResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.CheckCanSubscribeBizResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void CheckCanSubscribeBizResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckCanSubscribeBizResponse.BaseResponse)
}

// optional string CheckTicket = 2;
inline bool CheckCanSubscribeBizResponse::has_checkticket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CheckCanSubscribeBizResponse::set_has_checkticket() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CheckCanSubscribeBizResponse::clear_has_checkticket() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CheckCanSubscribeBizResponse::clear_checkticket() {
  checkticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_checkticket();
}
inline const ::std::string& CheckCanSubscribeBizResponse::checkticket() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCanSubscribeBizResponse.CheckTicket)
  return checkticket_.GetNoArena();
}
inline void CheckCanSubscribeBizResponse::set_checkticket(const ::std::string& value) {
  set_has_checkticket();
  checkticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckCanSubscribeBizResponse.CheckTicket)
}
#if LANG_CXX11
inline void CheckCanSubscribeBizResponse::set_checkticket(::std::string&& value) {
  set_has_checkticket();
  checkticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckCanSubscribeBizResponse.CheckTicket)
}
#endif
inline void CheckCanSubscribeBizResponse::set_checkticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_checkticket();
  checkticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckCanSubscribeBizResponse.CheckTicket)
}
inline void CheckCanSubscribeBizResponse::set_checkticket(const char* value, size_t size) {
  set_has_checkticket();
  checkticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckCanSubscribeBizResponse.CheckTicket)
}
inline ::std::string* CheckCanSubscribeBizResponse::mutable_checkticket() {
  set_has_checkticket();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckCanSubscribeBizResponse.CheckTicket)
  return checkticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckCanSubscribeBizResponse::release_checkticket() {
  // @@protoc_insertion_point(field_release:micromsg.CheckCanSubscribeBizResponse.CheckTicket)
  clear_has_checkticket();
  return checkticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckCanSubscribeBizResponse::set_allocated_checkticket(::std::string* checkticket) {
  if (checkticket != NULL) {
    set_has_checkticket();
  } else {
    clear_has_checkticket();
  }
  checkticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), checkticket);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckCanSubscribeBizResponse.CheckTicket)
}

// optional string ToUserName = 3;
inline bool CheckCanSubscribeBizResponse::has_tousername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CheckCanSubscribeBizResponse::set_has_tousername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CheckCanSubscribeBizResponse::clear_has_tousername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CheckCanSubscribeBizResponse::clear_tousername() {
  tousername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tousername();
}
inline const ::std::string& CheckCanSubscribeBizResponse::tousername() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCanSubscribeBizResponse.ToUserName)
  return tousername_.GetNoArena();
}
inline void CheckCanSubscribeBizResponse::set_tousername(const ::std::string& value) {
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckCanSubscribeBizResponse.ToUserName)
}
#if LANG_CXX11
inline void CheckCanSubscribeBizResponse::set_tousername(::std::string&& value) {
  set_has_tousername();
  tousername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckCanSubscribeBizResponse.ToUserName)
}
#endif
inline void CheckCanSubscribeBizResponse::set_tousername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckCanSubscribeBizResponse.ToUserName)
}
inline void CheckCanSubscribeBizResponse::set_tousername(const char* value, size_t size) {
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckCanSubscribeBizResponse.ToUserName)
}
inline ::std::string* CheckCanSubscribeBizResponse::mutable_tousername() {
  set_has_tousername();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckCanSubscribeBizResponse.ToUserName)
  return tousername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckCanSubscribeBizResponse::release_tousername() {
  // @@protoc_insertion_point(field_release:micromsg.CheckCanSubscribeBizResponse.ToUserName)
  clear_has_tousername();
  return tousername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckCanSubscribeBizResponse::set_allocated_tousername(::std::string* tousername) {
  if (tousername != NULL) {
    set_has_tousername();
  } else {
    clear_has_tousername();
  }
  tousername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tousername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckCanSubscribeBizResponse.ToUserName)
}

// optional string WebViewUrl = 4;
inline bool CheckCanSubscribeBizResponse::has_webviewurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CheckCanSubscribeBizResponse::set_has_webviewurl() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CheckCanSubscribeBizResponse::clear_has_webviewurl() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CheckCanSubscribeBizResponse::clear_webviewurl() {
  webviewurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_webviewurl();
}
inline const ::std::string& CheckCanSubscribeBizResponse::webviewurl() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCanSubscribeBizResponse.WebViewUrl)
  return webviewurl_.GetNoArena();
}
inline void CheckCanSubscribeBizResponse::set_webviewurl(const ::std::string& value) {
  set_has_webviewurl();
  webviewurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckCanSubscribeBizResponse.WebViewUrl)
}
#if LANG_CXX11
inline void CheckCanSubscribeBizResponse::set_webviewurl(::std::string&& value) {
  set_has_webviewurl();
  webviewurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckCanSubscribeBizResponse.WebViewUrl)
}
#endif
inline void CheckCanSubscribeBizResponse::set_webviewurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_webviewurl();
  webviewurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckCanSubscribeBizResponse.WebViewUrl)
}
inline void CheckCanSubscribeBizResponse::set_webviewurl(const char* value, size_t size) {
  set_has_webviewurl();
  webviewurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckCanSubscribeBizResponse.WebViewUrl)
}
inline ::std::string* CheckCanSubscribeBizResponse::mutable_webviewurl() {
  set_has_webviewurl();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckCanSubscribeBizResponse.WebViewUrl)
  return webviewurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckCanSubscribeBizResponse::release_webviewurl() {
  // @@protoc_insertion_point(field_release:micromsg.CheckCanSubscribeBizResponse.WebViewUrl)
  clear_has_webviewurl();
  return webviewurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckCanSubscribeBizResponse::set_allocated_webviewurl(::std::string* webviewurl) {
  if (webviewurl != NULL) {
    set_has_webviewurl();
  } else {
    clear_has_webviewurl();
  }
  webviewurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), webviewurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckCanSubscribeBizResponse.WebViewUrl)
}

// optional string ShowWord = 5;
inline bool CheckCanSubscribeBizResponse::has_showword() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CheckCanSubscribeBizResponse::set_has_showword() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CheckCanSubscribeBizResponse::clear_has_showword() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CheckCanSubscribeBizResponse::clear_showword() {
  showword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_showword();
}
inline const ::std::string& CheckCanSubscribeBizResponse::showword() const {
  // @@protoc_insertion_point(field_get:micromsg.CheckCanSubscribeBizResponse.ShowWord)
  return showword_.GetNoArena();
}
inline void CheckCanSubscribeBizResponse::set_showword(const ::std::string& value) {
  set_has_showword();
  showword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CheckCanSubscribeBizResponse.ShowWord)
}
#if LANG_CXX11
inline void CheckCanSubscribeBizResponse::set_showword(::std::string&& value) {
  set_has_showword();
  showword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CheckCanSubscribeBizResponse.ShowWord)
}
#endif
inline void CheckCanSubscribeBizResponse::set_showword(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_showword();
  showword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CheckCanSubscribeBizResponse.ShowWord)
}
inline void CheckCanSubscribeBizResponse::set_showword(const char* value, size_t size) {
  set_has_showword();
  showword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CheckCanSubscribeBizResponse.ShowWord)
}
inline ::std::string* CheckCanSubscribeBizResponse::mutable_showword() {
  set_has_showword();
  // @@protoc_insertion_point(field_mutable:micromsg.CheckCanSubscribeBizResponse.ShowWord)
  return showword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckCanSubscribeBizResponse::release_showword() {
  // @@protoc_insertion_point(field_release:micromsg.CheckCanSubscribeBizResponse.ShowWord)
  clear_has_showword();
  return showword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckCanSubscribeBizResponse::set_allocated_showword(::std::string* showword) {
  if (showword != NULL) {
    set_has_showword();
  } else {
    clear_has_showword();
  }
  showword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), showword);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CheckCanSubscribeBizResponse.ShowWord)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace micromsg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mmopenapi_2eproto__INCLUDED
