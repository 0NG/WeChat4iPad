// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mmpay.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mmpay.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace micromsg {
class RcptInfoNodeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RcptInfoNode> {
} _RcptInfoNode_default_instance_;
class RcptInfoListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RcptInfoList> {
} _RcptInfoList_default_instance_;
class RcptInfoAddRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RcptInfoAddRequest> {
} _RcptInfoAddRequest_default_instance_;
class RcptInfoAddResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RcptInfoAddResponse> {
} _RcptInfoAddResponse_default_instance_;
class RcptInfoRemoveRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RcptInfoRemoveRequest> {
} _RcptInfoRemoveRequest_default_instance_;
class RcptInfoRemoveResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RcptInfoRemoveResponse> {
} _RcptInfoRemoveResponse_default_instance_;
class RcptInfoQueryRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RcptInfoQueryRequest> {
} _RcptInfoQueryRequest_default_instance_;
class RcptInfoQueryResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RcptInfoQueryResponse> {
} _RcptInfoQueryResponse_default_instance_;
class RcptInfoUpdateRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RcptInfoUpdateRequest> {
} _RcptInfoUpdateRequest_default_instance_;
class RcptInfoUpdateResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RcptInfoUpdateResponse> {
} _RcptInfoUpdateResponse_default_instance_;
class RcptInfoTouchRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RcptInfoTouchRequest> {
} _RcptInfoTouchRequest_default_instance_;
class RcptInfoTouchResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RcptInfoTouchResponse> {
} _RcptInfoTouchResponse_default_instance_;
class RcptInfoImportYiXunRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RcptInfoImportYiXunRequest> {
} _RcptInfoImportYiXunRequest_default_instance_;
class RcptInfoImportYiXunResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RcptInfoImportYiXunResponse> {
} _RcptInfoImportYiXunResponse_default_instance_;
class GenBizIapPrepayRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GenBizIapPrepayRequest> {
} _GenBizIapPrepayRequest_default_instance_;
class GenBizIapPrepayResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GenBizIapPrepayResponse> {
} _GenBizIapPrepayResponse_default_instance_;
class GetBizIapPayResultRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetBizIapPayResultRequest> {
} _GetBizIapPayResultRequest_default_instance_;
class GetBizIapPayResultResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetBizIapPayResultResponse> {
} _GetBizIapPayResultResponse_default_instance_;
class GetBizIapDetailRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetBizIapDetailRequest> {
} _GetBizIapDetailRequest_default_instance_;
class GetBizIapDetailResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetBizIapDetailResponse> {
} _GetBizIapDetailResponse_default_instance_;
class GetProductDetailRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetProductDetailRequest> {
} _GetProductDetailRequest_default_instance_;
class GetProductDetailResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetProductDetailResponse> {
} _GetProductDetailResponse_default_instance_;
class LockStockRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LockStockRequest> {
} _LockStockRequest_default_instance_;
class LockStockResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LockStockResponse> {
} _LockStockResponse_default_instance_;
class UnlockStockRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UnlockStockRequest> {
} _UnlockStockRequest_default_instance_;
class UnlockStockResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UnlockStockResponse> {
} _UnlockStockResponse_default_instance_;
class KVItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<KVItem> {
} _KVItem_default_instance_;
class ExpressDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Express> {
} _Express_default_instance_;
class AddressDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Address> {
} _Address_default_instance_;
class ReceiptDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Receipt> {
} _Receipt_default_instance_;
class DiscountDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Discount> {
} _Discount_default_instance_;
class ProductionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Production> {
} _Production_default_instance_;
class SnapshotDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Snapshot> {
} _Snapshot_default_instance_;
class SubmitMallOrderRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SubmitMallOrderRequest> {
} _SubmitMallOrderRequest_default_instance_;
class SubmitMallOrderResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SubmitMallOrderResponse> {
} _SubmitMallOrderResponse_default_instance_;
class SubmitMallFreeOrderRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SubmitMallFreeOrderRequest> {
} _SubmitMallFreeOrderRequest_default_instance_;
class SubmitMallFreeOrderResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SubmitMallFreeOrderResponse> {
} _SubmitMallFreeOrderResponse_default_instance_;
class SampleProductDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SampleProduct> {
} _SampleProduct_default_instance_;
class ActionAttrDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ActionAttr> {
} _ActionAttr_default_instance_;
class PreSubmitOrderRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PreSubmitOrderRequest> {
} _PreSubmitOrderRequest_default_instance_;
class PreSubmitOrderResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PreSubmitOrderResponse> {
} _PreSubmitOrderResponse_default_instance_;
class CancelPreOrderRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CancelPreOrderRequest> {
} _CancelPreOrderRequest_default_instance_;
class CancelPreOrderResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CancelPreOrderResponse> {
} _CancelPreOrderResponse_default_instance_;
class OrderDetailControlRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OrderDetailControlRequest> {
} _OrderDetailControlRequest_default_instance_;
class OrderDetailControlResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OrderDetailControlResponse> {
} _OrderDetailControlResponse_default_instance_;
class GetProductDiscountRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetProductDiscountRequest> {
} _GetProductDiscountRequest_default_instance_;
class GetProductDiscountResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetProductDiscountResponse> {
} _GetProductDiscountResponse_default_instance_;
class GetLastestExpressInfoRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetLastestExpressInfoRequest> {
} _GetLastestExpressInfoRequest_default_instance_;
class GetLastestExpressInfoResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetLastestExpressInfoResponse> {
} _GetLastestExpressInfoResponse_default_instance_;
class SendC2CSecMsgRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SendC2CSecMsgRequest> {
} _SendC2CSecMsgRequest_default_instance_;
class SendC2cSecMsgResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SendC2cSecMsgResponse> {
} _SendC2cSecMsgResponse_default_instance_;

namespace protobuf_mmpay_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[51];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoNode, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoNode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoNode, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoNode, country_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoNode, province_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoNode, city_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoNode, district_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoNode, zipcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoNode, detail_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoNode, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoNode, phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoNode, nationalcode_gbt2260_),
  9,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoList, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoList, rcptinfolist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoList, timestamp_),
  0,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoAddRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoAddRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoAddRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoAddRequest, rcptinfo_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoAddResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoAddResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoAddResponse, rcptinfolist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoAddResponse, baseresponse_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoRemoveRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoRemoveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoRemoveRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoRemoveRequest, id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoRemoveResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoRemoveResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoRemoveResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoRemoveResponse, rcptinfolist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoRemoveResponse, baseresponse_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoQueryRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoQueryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoQueryRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoQueryRequest, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoQueryRequest, webviewurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoQueryRequest, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoQueryRequest, scene_),
  2,
  3,
  0,
  1,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoQueryResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoQueryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoQueryResponse, rcptinfolist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoQueryResponse, islatest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoQueryResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoQueryResponse, appusername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoQueryResponse, isauthority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoQueryResponse, appnickname_),
  2,
  4,
  3,
  0,
  5,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoUpdateRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoUpdateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoUpdateRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoUpdateRequest, rcptinfo_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoUpdateResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoUpdateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoUpdateResponse, rcptinfolist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoUpdateResponse, baseresponse_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoTouchRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoTouchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoTouchRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoTouchRequest, id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoTouchResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoTouchResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoTouchResponse, rcptinfolist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoTouchResponse, baseresponse_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoImportYiXunRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoImportYiXunRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoImportYiXunRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoImportYiXunRequest, qq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoImportYiXunRequest, a2key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoImportYiXunRequest, newa2key_),
  0,
  3,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoImportYiXunResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoImportYiXunResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoImportYiXunResponse, rcptinfolist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoImportYiXunResponse, rcptinfoimportstatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RcptInfoImportYiXunResponse, baseresponse_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenBizIapPrepayRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenBizIapPrepayRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenBizIapPrepayRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenBizIapPrepayRequest, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenBizIapPrepayRequest, noncestr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenBizIapPrepayRequest, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenBizIapPrepayRequest, package_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenBizIapPrepayRequest, paysign_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenBizIapPrepayRequest, signtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenBizIapPrepayRequest, stepinurl_),
  7,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenBizIapPrepayResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenBizIapPrepayResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenBizIapPrepayResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenBizIapPrepayResponse, productid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GenBizIapPrepayResponse, extinfo_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBizIapPayResultRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBizIapPayResultRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBizIapPayResultRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBizIapPayResultRequest, serialid_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBizIapPayResultResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBizIapPayResultResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBizIapPayResultResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBizIapPayResultResponse, detailbuff_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBizIapDetailRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBizIapDetailRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBizIapDetailRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBizIapDetailRequest, serialid_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBizIapDetailResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBizIapDetailResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBizIapDetailResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBizIapDetailResponse, detailbuff_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProductDetailRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProductDetailRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProductDetailRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProductDetailRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProductDetailRequest, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProductDetailRequest, scancode_),
  2,
  0,
  3,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProductDetailResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProductDetailResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProductDetailResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProductDetailResponse, productinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProductDetailResponse, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProductDetailResponse, retmsg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProductDetailResponse, recommendinfo_),
  3,
  0,
  4,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockStockRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockStockRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockStockRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockStockRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockStockRequest, skuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockStockRequest, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockStockRequest, url_),
  3,
  0,
  1,
  4,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockStockResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockStockResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockStockResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LockStockResponse, lockid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockStockRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockStockRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockStockRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockStockRequest, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockStockRequest, skuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockStockRequest, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockStockRequest, url_),
  3,
  0,
  1,
  4,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockStockResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockStockResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockStockResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnlockStockResponse, lockid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KVItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KVItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KVItem, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KVItem, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Express, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Express, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Express, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Express, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Express, pricetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Express, id_),
  0,
  2,
  1,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, country_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, province_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, city_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, detail_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, tel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Address, zipcode_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Receipt, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Receipt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Receipt, isneed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Receipt, detail_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Discount, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Discount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Discount, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Discount, price_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Production, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Production, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Production, skucount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Production, skus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Production, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Production, realprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Production, pricetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Production, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Production, safeurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Production, skuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Production, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Production, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Production, thumburl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Production, subtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Production, scene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Production, preferentialprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Production, discountcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Production, discounts_),
  7,
  ~0u,
  8,
  9,
  0,
  1,
  2,
  3,
  10,
  4,
  5,
  11,
  12,
  6,
  13,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Snapshot, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Snapshot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Snapshot, productcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Snapshot, productions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Snapshot, express_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Snapshot, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Snapshot, receipt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Snapshot, receiptcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Snapshot, lockid_),
  3,
  ~0u,
  1,
  2,
  ~0u,
  4,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitMallOrderRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitMallOrderRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitMallOrderRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitMallOrderRequest, snapshot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitMallOrderRequest, payappid_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitMallOrderResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitMallOrderResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitMallOrderResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitMallOrderResponse, prepareid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitMallOrderResponse, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitMallOrderResponse, retmsg_),
  2,
  0,
  3,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitMallFreeOrderRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitMallFreeOrderRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitMallFreeOrderRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitMallFreeOrderRequest, snapshot_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitMallFreeOrderResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitMallFreeOrderResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitMallFreeOrderResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitMallFreeOrderResponse, prepareid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitMallFreeOrderResponse, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitMallFreeOrderResponse, retmsg_),
  2,
  0,
  3,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SampleProduct, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SampleProduct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SampleProduct, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SampleProduct, skuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SampleProduct, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SampleProduct, safeurl_),
  0,
  1,
  3,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionAttr, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionAttr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionAttr, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionAttr, tips_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionAttr, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionAttr, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionAttr, iconurl_),
  0,
  1,
  4,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PreSubmitOrderRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PreSubmitOrderRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PreSubmitOrderRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PreSubmitOrderRequest, productcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PreSubmitOrderRequest, product_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PreSubmitOrderResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PreSubmitOrderResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PreSubmitOrderResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PreSubmitOrderResponse, expresscount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PreSubmitOrderResponse, express_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PreSubmitOrderResponse, lockid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PreSubmitOrderResponse, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PreSubmitOrderResponse, retmsg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PreSubmitOrderResponse, actionattrs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PreSubmitOrderResponse, actionattrcount_),
  2,
  3,
  ~0u,
  0,
  4,
  1,
  ~0u,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelPreOrderRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelPreOrderRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelPreOrderRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelPreOrderRequest, productcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelPreOrderRequest, product_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelPreOrderRequest, lockid_),
  1,
  2,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelPreOrderResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelPreOrderResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelPreOrderResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelPreOrderResponse, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelPreOrderResponse, retmsg_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderDetailControlRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderDetailControlRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderDetailControlRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderDetailControlRequest, actioncode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderDetailControlRequest, transid_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderDetailControlResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderDetailControlResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderDetailControlResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderDetailControlResponse, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderDetailControlResponse, retmsg_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProductDiscountRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProductDiscountRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProductDiscountRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProductDiscountRequest, lockid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProductDiscountRequest, url_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProductDiscountResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProductDiscountResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProductDiscountResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProductDiscountResponse, discountdetail_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProductDiscountResponse, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetProductDiscountResponse, retmsg_),
  2,
  0,
  3,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLastestExpressInfoRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLastestExpressInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLastestExpressInfoRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLastestExpressInfoRequest, productid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLastestExpressInfoRequest, lockid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLastestExpressInfoRequest, address_),
  2,
  0,
  1,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLastestExpressInfoResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLastestExpressInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLastestExpressInfoResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLastestExpressInfoResponse, expresslist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLastestExpressInfoResponse, expresscount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLastestExpressInfoResponse, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetLastestExpressInfoResponse, retmsg_),
  1,
  ~0u,
  2,
  3,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendC2CSecMsgRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendC2CSecMsgRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendC2CSecMsgRequest, baserequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendC2CSecMsgRequest, touser_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendC2CSecMsgRequest, msgtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendC2CSecMsgRequest, tempid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendC2CSecMsgRequest, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendC2CSecMsgRequest, des_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendC2CSecMsgRequest, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendC2CSecMsgRequest, scene_),
  5,
  0,
  6,
  1,
  2,
  3,
  4,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendC2cSecMsgResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendC2cSecMsgResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendC2cSecMsgResponse, baseresponse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendC2cSecMsgResponse, errcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendC2cSecMsgResponse, errmsg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendC2cSecMsgResponse, msgid_),
  2,
  3,
  0,
  1,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 15, sizeof(RcptInfoNode)},
  { 25, 33, sizeof(RcptInfoList)},
  { 36, 43, sizeof(RcptInfoAddRequest)},
  { 45, 52, sizeof(RcptInfoAddResponse)},
  { 54, 61, sizeof(RcptInfoRemoveRequest)},
  { 63, 71, sizeof(RcptInfoRemoveResponse)},
  { 74, 84, sizeof(RcptInfoQueryRequest)},
  { 89, 100, sizeof(RcptInfoQueryResponse)},
  { 106, 113, sizeof(RcptInfoUpdateRequest)},
  { 115, 122, sizeof(RcptInfoUpdateResponse)},
  { 124, 131, sizeof(RcptInfoTouchRequest)},
  { 133, 140, sizeof(RcptInfoTouchResponse)},
  { 142, 151, sizeof(RcptInfoImportYiXunRequest)},
  { 155, 163, sizeof(RcptInfoImportYiXunResponse)},
  { 166, 179, sizeof(GenBizIapPrepayRequest)},
  { 187, 195, sizeof(GenBizIapPrepayResponse)},
  { 198, 205, sizeof(GetBizIapPayResultRequest)},
  { 207, 214, sizeof(GetBizIapPayResultResponse)},
  { 216, 223, sizeof(GetBizIapDetailRequest)},
  { 225, 232, sizeof(GetBizIapDetailResponse)},
  { 234, 243, sizeof(GetProductDetailRequest)},
  { 247, 257, sizeof(GetProductDetailResponse)},
  { 262, 272, sizeof(LockStockRequest)},
  { 277, 284, sizeof(LockStockResponse)},
  { 286, 296, sizeof(UnlockStockRequest)},
  { 301, 308, sizeof(UnlockStockResponse)},
  { 310, 317, sizeof(KVItem)},
  { 319, 328, sizeof(Express)},
  { 332, 344, sizeof(Address)},
  { 351, 358, sizeof(Receipt)},
  { 360, 367, sizeof(Discount)},
  { 369, 390, sizeof(Production)},
  { 406, 418, sizeof(Snapshot)},
  { 425, 433, sizeof(SubmitMallOrderRequest)},
  { 436, 445, sizeof(SubmitMallOrderResponse)},
  { 449, 456, sizeof(SubmitMallFreeOrderRequest)},
  { 458, 467, sizeof(SubmitMallFreeOrderResponse)},
  { 471, 480, sizeof(SampleProduct)},
  { 484, 494, sizeof(ActionAttr)},
  { 499, 507, sizeof(PreSubmitOrderRequest)},
  { 510, 523, sizeof(PreSubmitOrderResponse)},
  { 531, 540, sizeof(CancelPreOrderRequest)},
  { 544, 552, sizeof(CancelPreOrderResponse)},
  { 555, 563, sizeof(OrderDetailControlRequest)},
  { 566, 574, sizeof(OrderDetailControlResponse)},
  { 577, 585, sizeof(GetProductDiscountRequest)},
  { 588, 597, sizeof(GetProductDiscountResponse)},
  { 601, 610, sizeof(GetLastestExpressInfoRequest)},
  { 614, 624, sizeof(GetLastestExpressInfoResponse)},
  { 629, 642, sizeof(SendC2CSecMsgRequest)},
  { 650, 659, sizeof(SendC2cSecMsgResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_RcptInfoNode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RcptInfoList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RcptInfoAddRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RcptInfoAddResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RcptInfoRemoveRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RcptInfoRemoveResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RcptInfoQueryRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RcptInfoQueryResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RcptInfoUpdateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RcptInfoUpdateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RcptInfoTouchRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RcptInfoTouchResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RcptInfoImportYiXunRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RcptInfoImportYiXunResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GenBizIapPrepayRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GenBizIapPrepayResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetBizIapPayResultRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetBizIapPayResultResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetBizIapDetailRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetBizIapDetailResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetProductDetailRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetProductDetailResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LockStockRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LockStockResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UnlockStockRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UnlockStockResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_KVItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Express_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Address_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Receipt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Discount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Production_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Snapshot_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SubmitMallOrderRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SubmitMallOrderResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SubmitMallFreeOrderRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SubmitMallFreeOrderResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SampleProduct_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ActionAttr_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PreSubmitOrderRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PreSubmitOrderResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CancelPreOrderRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CancelPreOrderResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OrderDetailControlRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OrderDetailControlResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetProductDiscountRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetProductDiscountResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetLastestExpressInfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetLastestExpressInfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SendC2CSecMsgRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SendC2cSecMsgResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "mmpay.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 51);
}

}  // namespace

void TableStruct::Shutdown() {
  _RcptInfoNode_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _RcptInfoList_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _RcptInfoAddRequest_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _RcptInfoAddResponse_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _RcptInfoRemoveRequest_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _RcptInfoRemoveResponse_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _RcptInfoQueryRequest_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _RcptInfoQueryResponse_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _RcptInfoUpdateRequest_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _RcptInfoUpdateResponse_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _RcptInfoTouchRequest_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _RcptInfoTouchResponse_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _RcptInfoImportYiXunRequest_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _RcptInfoImportYiXunResponse_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _GenBizIapPrepayRequest_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _GenBizIapPrepayResponse_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _GetBizIapPayResultRequest_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _GetBizIapPayResultResponse_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _GetBizIapDetailRequest_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _GetBizIapDetailResponse_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _GetProductDetailRequest_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _GetProductDetailResponse_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
  _LockStockRequest_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
  _LockStockResponse_default_instance_.Shutdown();
  delete file_level_metadata[23].reflection;
  _UnlockStockRequest_default_instance_.Shutdown();
  delete file_level_metadata[24].reflection;
  _UnlockStockResponse_default_instance_.Shutdown();
  delete file_level_metadata[25].reflection;
  _KVItem_default_instance_.Shutdown();
  delete file_level_metadata[26].reflection;
  _Express_default_instance_.Shutdown();
  delete file_level_metadata[27].reflection;
  _Address_default_instance_.Shutdown();
  delete file_level_metadata[28].reflection;
  _Receipt_default_instance_.Shutdown();
  delete file_level_metadata[29].reflection;
  _Discount_default_instance_.Shutdown();
  delete file_level_metadata[30].reflection;
  _Production_default_instance_.Shutdown();
  delete file_level_metadata[31].reflection;
  _Snapshot_default_instance_.Shutdown();
  delete file_level_metadata[32].reflection;
  _SubmitMallOrderRequest_default_instance_.Shutdown();
  delete file_level_metadata[33].reflection;
  _SubmitMallOrderResponse_default_instance_.Shutdown();
  delete file_level_metadata[34].reflection;
  _SubmitMallFreeOrderRequest_default_instance_.Shutdown();
  delete file_level_metadata[35].reflection;
  _SubmitMallFreeOrderResponse_default_instance_.Shutdown();
  delete file_level_metadata[36].reflection;
  _SampleProduct_default_instance_.Shutdown();
  delete file_level_metadata[37].reflection;
  _ActionAttr_default_instance_.Shutdown();
  delete file_level_metadata[38].reflection;
  _PreSubmitOrderRequest_default_instance_.Shutdown();
  delete file_level_metadata[39].reflection;
  _PreSubmitOrderResponse_default_instance_.Shutdown();
  delete file_level_metadata[40].reflection;
  _CancelPreOrderRequest_default_instance_.Shutdown();
  delete file_level_metadata[41].reflection;
  _CancelPreOrderResponse_default_instance_.Shutdown();
  delete file_level_metadata[42].reflection;
  _OrderDetailControlRequest_default_instance_.Shutdown();
  delete file_level_metadata[43].reflection;
  _OrderDetailControlResponse_default_instance_.Shutdown();
  delete file_level_metadata[44].reflection;
  _GetProductDiscountRequest_default_instance_.Shutdown();
  delete file_level_metadata[45].reflection;
  _GetProductDiscountResponse_default_instance_.Shutdown();
  delete file_level_metadata[46].reflection;
  _GetLastestExpressInfoRequest_default_instance_.Shutdown();
  delete file_level_metadata[47].reflection;
  _GetLastestExpressInfoResponse_default_instance_.Shutdown();
  delete file_level_metadata[48].reflection;
  _SendC2CSecMsgRequest_default_instance_.Shutdown();
  delete file_level_metadata[49].reflection;
  _SendC2cSecMsgResponse_default_instance_.Shutdown();
  delete file_level_metadata[50].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::micromsg::protobuf_mmbuiltintype_2eproto::InitDefaults();
  ::micromsg::protobuf_mmbase_2eproto::InitDefaults();
  _RcptInfoNode_default_instance_.DefaultConstruct();
  _RcptInfoList_default_instance_.DefaultConstruct();
  _RcptInfoAddRequest_default_instance_.DefaultConstruct();
  _RcptInfoAddResponse_default_instance_.DefaultConstruct();
  _RcptInfoRemoveRequest_default_instance_.DefaultConstruct();
  _RcptInfoRemoveResponse_default_instance_.DefaultConstruct();
  _RcptInfoQueryRequest_default_instance_.DefaultConstruct();
  _RcptInfoQueryResponse_default_instance_.DefaultConstruct();
  _RcptInfoUpdateRequest_default_instance_.DefaultConstruct();
  _RcptInfoUpdateResponse_default_instance_.DefaultConstruct();
  _RcptInfoTouchRequest_default_instance_.DefaultConstruct();
  _RcptInfoTouchResponse_default_instance_.DefaultConstruct();
  _RcptInfoImportYiXunRequest_default_instance_.DefaultConstruct();
  _RcptInfoImportYiXunResponse_default_instance_.DefaultConstruct();
  _GenBizIapPrepayRequest_default_instance_.DefaultConstruct();
  _GenBizIapPrepayResponse_default_instance_.DefaultConstruct();
  _GetBizIapPayResultRequest_default_instance_.DefaultConstruct();
  _GetBizIapPayResultResponse_default_instance_.DefaultConstruct();
  _GetBizIapDetailRequest_default_instance_.DefaultConstruct();
  _GetBizIapDetailResponse_default_instance_.DefaultConstruct();
  _GetProductDetailRequest_default_instance_.DefaultConstruct();
  _GetProductDetailResponse_default_instance_.DefaultConstruct();
  _LockStockRequest_default_instance_.DefaultConstruct();
  _LockStockResponse_default_instance_.DefaultConstruct();
  _UnlockStockRequest_default_instance_.DefaultConstruct();
  _UnlockStockResponse_default_instance_.DefaultConstruct();
  _KVItem_default_instance_.DefaultConstruct();
  _Express_default_instance_.DefaultConstruct();
  _Address_default_instance_.DefaultConstruct();
  _Receipt_default_instance_.DefaultConstruct();
  _Discount_default_instance_.DefaultConstruct();
  _Production_default_instance_.DefaultConstruct();
  _Snapshot_default_instance_.DefaultConstruct();
  _SubmitMallOrderRequest_default_instance_.DefaultConstruct();
  _SubmitMallOrderResponse_default_instance_.DefaultConstruct();
  _SubmitMallFreeOrderRequest_default_instance_.DefaultConstruct();
  _SubmitMallFreeOrderResponse_default_instance_.DefaultConstruct();
  _SampleProduct_default_instance_.DefaultConstruct();
  _ActionAttr_default_instance_.DefaultConstruct();
  _PreSubmitOrderRequest_default_instance_.DefaultConstruct();
  _PreSubmitOrderResponse_default_instance_.DefaultConstruct();
  _CancelPreOrderRequest_default_instance_.DefaultConstruct();
  _CancelPreOrderResponse_default_instance_.DefaultConstruct();
  _OrderDetailControlRequest_default_instance_.DefaultConstruct();
  _OrderDetailControlResponse_default_instance_.DefaultConstruct();
  _GetProductDiscountRequest_default_instance_.DefaultConstruct();
  _GetProductDiscountResponse_default_instance_.DefaultConstruct();
  _GetLastestExpressInfoRequest_default_instance_.DefaultConstruct();
  _GetLastestExpressInfoResponse_default_instance_.DefaultConstruct();
  _SendC2CSecMsgRequest_default_instance_.DefaultConstruct();
  _SendC2cSecMsgResponse_default_instance_.DefaultConstruct();
  _RcptInfoNode_default_instance_.get_mutable()->country_ = const_cast< ::micromsg::SKBuiltinString_t*>(
      ::micromsg::SKBuiltinString_t::internal_default_instance());
  _RcptInfoNode_default_instance_.get_mutable()->province_ = const_cast< ::micromsg::SKBuiltinString_t*>(
      ::micromsg::SKBuiltinString_t::internal_default_instance());
  _RcptInfoNode_default_instance_.get_mutable()->city_ = const_cast< ::micromsg::SKBuiltinString_t*>(
      ::micromsg::SKBuiltinString_t::internal_default_instance());
  _RcptInfoNode_default_instance_.get_mutable()->district_ = const_cast< ::micromsg::SKBuiltinString_t*>(
      ::micromsg::SKBuiltinString_t::internal_default_instance());
  _RcptInfoNode_default_instance_.get_mutable()->zipcode_ = const_cast< ::micromsg::SKBuiltinString_t*>(
      ::micromsg::SKBuiltinString_t::internal_default_instance());
  _RcptInfoNode_default_instance_.get_mutable()->detail_ = const_cast< ::micromsg::SKBuiltinString_t*>(
      ::micromsg::SKBuiltinString_t::internal_default_instance());
  _RcptInfoNode_default_instance_.get_mutable()->name_ = const_cast< ::micromsg::SKBuiltinString_t*>(
      ::micromsg::SKBuiltinString_t::internal_default_instance());
  _RcptInfoNode_default_instance_.get_mutable()->phone_ = const_cast< ::micromsg::SKBuiltinString_t*>(
      ::micromsg::SKBuiltinString_t::internal_default_instance());
  _RcptInfoNode_default_instance_.get_mutable()->nationalcode_gbt2260_ = const_cast< ::micromsg::SKBuiltinString_t*>(
      ::micromsg::SKBuiltinString_t::internal_default_instance());
  _RcptInfoAddRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _RcptInfoAddRequest_default_instance_.get_mutable()->rcptinfo_ = const_cast< ::micromsg::RcptInfoNode*>(
      ::micromsg::RcptInfoNode::internal_default_instance());
  _RcptInfoAddResponse_default_instance_.get_mutable()->rcptinfolist_ = const_cast< ::micromsg::RcptInfoList*>(
      ::micromsg::RcptInfoList::internal_default_instance());
  _RcptInfoAddResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _RcptInfoRemoveRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _RcptInfoRemoveResponse_default_instance_.get_mutable()->rcptinfolist_ = const_cast< ::micromsg::RcptInfoList*>(
      ::micromsg::RcptInfoList::internal_default_instance());
  _RcptInfoRemoveResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _RcptInfoQueryRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _RcptInfoQueryResponse_default_instance_.get_mutable()->rcptinfolist_ = const_cast< ::micromsg::RcptInfoList*>(
      ::micromsg::RcptInfoList::internal_default_instance());
  _RcptInfoQueryResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _RcptInfoUpdateRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _RcptInfoUpdateRequest_default_instance_.get_mutable()->rcptinfo_ = const_cast< ::micromsg::RcptInfoNode*>(
      ::micromsg::RcptInfoNode::internal_default_instance());
  _RcptInfoUpdateResponse_default_instance_.get_mutable()->rcptinfolist_ = const_cast< ::micromsg::RcptInfoList*>(
      ::micromsg::RcptInfoList::internal_default_instance());
  _RcptInfoUpdateResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _RcptInfoTouchRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _RcptInfoTouchResponse_default_instance_.get_mutable()->rcptinfolist_ = const_cast< ::micromsg::RcptInfoList*>(
      ::micromsg::RcptInfoList::internal_default_instance());
  _RcptInfoTouchResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _RcptInfoImportYiXunRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _RcptInfoImportYiXunRequest_default_instance_.get_mutable()->a2key_ = const_cast< ::micromsg::SKBuiltinBuffer_t*>(
      ::micromsg::SKBuiltinBuffer_t::internal_default_instance());
  _RcptInfoImportYiXunRequest_default_instance_.get_mutable()->newa2key_ = const_cast< ::micromsg::SKBuiltinBuffer_t*>(
      ::micromsg::SKBuiltinBuffer_t::internal_default_instance());
  _RcptInfoImportYiXunResponse_default_instance_.get_mutable()->rcptinfolist_ = const_cast< ::micromsg::RcptInfoList*>(
      ::micromsg::RcptInfoList::internal_default_instance());
  _RcptInfoImportYiXunResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _GenBizIapPrepayRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _GenBizIapPrepayResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _GetBizIapPayResultRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _GetBizIapPayResultResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _GetBizIapDetailRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _GetBizIapDetailResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _GetProductDetailRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _GetProductDetailResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _LockStockRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _LockStockResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _UnlockStockRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _UnlockStockResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _Snapshot_default_instance_.get_mutable()->express_ = const_cast< ::micromsg::Express*>(
      ::micromsg::Express::internal_default_instance());
  _Snapshot_default_instance_.get_mutable()->address_ = const_cast< ::micromsg::Address*>(
      ::micromsg::Address::internal_default_instance());
  _SubmitMallOrderRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _SubmitMallOrderRequest_default_instance_.get_mutable()->snapshot_ = const_cast< ::micromsg::Snapshot*>(
      ::micromsg::Snapshot::internal_default_instance());
  _SubmitMallOrderResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _SubmitMallFreeOrderRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _SubmitMallFreeOrderRequest_default_instance_.get_mutable()->snapshot_ = const_cast< ::micromsg::Snapshot*>(
      ::micromsg::Snapshot::internal_default_instance());
  _SubmitMallFreeOrderResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _PreSubmitOrderRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _PreSubmitOrderResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _CancelPreOrderRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _CancelPreOrderResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _OrderDetailControlRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _OrderDetailControlResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _GetProductDiscountRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _GetProductDiscountResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _GetLastestExpressInfoRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _GetLastestExpressInfoRequest_default_instance_.get_mutable()->address_ = const_cast< ::micromsg::Address*>(
      ::micromsg::Address::internal_default_instance());
  _GetLastestExpressInfoResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
  _SendC2CSecMsgRequest_default_instance_.get_mutable()->baserequest_ = const_cast< ::micromsg::BaseRequest*>(
      ::micromsg::BaseRequest::internal_default_instance());
  _SendC2cSecMsgResponse_default_instance_.get_mutable()->baseresponse_ = const_cast< ::micromsg::BaseResponse*>(
      ::micromsg::BaseResponse::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\013mmpay.proto\022\010micromsg\032\023mmbuiltintype.p"
      "roto\032\014mmbase.proto\"\276\003\n\014RcptInfoNode\022\n\n\002i"
      "d\030\001 \001(\r\022,\n\007country\030\002 \001(\0132\033.micromsg.SKBu"
      "iltinString_t\022-\n\010province\030\003 \002(\0132\033.microm"
      "sg.SKBuiltinString_t\022)\n\004city\030\004 \002(\0132\033.mic"
      "romsg.SKBuiltinString_t\022-\n\010district\030\005 \002("
      "\0132\033.micromsg.SKBuiltinString_t\022,\n\007zipcod"
      "e\030\006 \002(\0132\033.micromsg.SKBuiltinString_t\022+\n\006"
      "detail\030\007 \002(\0132\033.micromsg.SKBuiltinString_"
      "t\022)\n\004name\030\010 \002(\0132\033.micromsg.SKBuiltinStri"
      "ng_t\022*\n\005phone\030\t \002(\0132\033.micromsg.SKBuiltin"
      "String_t\0229\n\024nationalcode_gbt2260\030\n \001(\0132\033"
      ".micromsg.SKBuiltinString_t\"^\n\014RcptInfoL"
      "ist\022\r\n\005count\030\001 \002(\r\022,\n\014rcptinfolist\030\002 \003(\013"
      "2\026.micromsg.RcptInfoNode\022\021\n\ttimestamp\030\003 "
      "\002(\r\"j\n\022RcptInfoAddRequest\022*\n\013BaseRequest"
      "\030\001 \002(\0132\025.micromsg.BaseRequest\022(\n\010rcptinf"
      "o\030\002 \002(\0132\026.micromsg.RcptInfoNode\"q\n\023RcptI"
      "nfoAddResponse\022,\n\014rcptinfolist\030\001 \002(\0132\026.m"
      "icromsg.RcptInfoList\022,\n\014BaseResponse\030\002 \002"
      "(\0132\026.micromsg.BaseResponse\"O\n\025RcptInfoRe"
      "moveRequest\022*\n\013BaseRequest\030\001 \002(\0132\025.micro"
      "msg.BaseRequest\022\n\n\002id\030\002 \002(\r\"\200\001\n\026RcptInfo"
      "RemoveResponse\022\n\n\002id\030\001 \002(\r\022,\n\014rcptinfoli"
      "st\030\002 \002(\0132\026.micromsg.RcptInfoList\022,\n\014Base"
      "Response\030\003 \002(\0132\026.micromsg.BaseResponse\"\207"
      "\001\n\024RcptInfoQueryRequest\022*\n\013BaseRequest\030\001"
      " \002(\0132\025.micromsg.BaseRequest\022\021\n\ttimestamp"
      "\030\002 \002(\r\022\022\n\nwebviewurl\030\003 \001(\t\022\r\n\005appid\030\004 \001("
      "\t\022\r\n\005scene\030\005 \001(\r\"\304\001\n\025RcptInfoQueryRespon"
      "se\022,\n\014rcptinfolist\030\001 \002(\0132\026.micromsg.Rcpt"
      "InfoList\022\020\n\010islatest\030\002 \002(\r\022,\n\014BaseRespon"
      "se\030\003 \002(\0132\026.micromsg.BaseResponse\022\023\n\013appu"
      "sername\030\004 \001(\t\022\023\n\013isauthority\030\005 \001(\r\022\023\n\013ap"
      "pnickname\030\006 \001(\t\"m\n\025RcptInfoUpdateRequest"
      "\022*\n\013BaseRequest\030\001 \002(\0132\025.micromsg.BaseReq"
      "uest\022(\n\010rcptinfo\030\002 \002(\0132\026.micromsg.RcptIn"
      "foNode\"t\n\026RcptInfoUpdateResponse\022,\n\014rcpt"
      "infolist\030\001 \002(\0132\026.micromsg.RcptInfoList\022,"
      "\n\014BaseResponse\030\002 \002(\0132\026.micromsg.BaseResp"
      "onse\"N\n\024RcptInfoTouchRequest\022*\n\013BaseRequ"
      "est\030\001 \002(\0132\025.micromsg.BaseRequest\022\n\n\002id\030\002"
      " \002(\r\"s\n\025RcptInfoTouchResponse\022,\n\014rcptinf"
      "olist\030\001 \002(\0132\026.micromsg.RcptInfoList\022,\n\014B"
      "aseResponse\030\002 \002(\0132\026.micromsg.BaseRespons"
      "e\"\257\001\n\032RcptInfoImportYiXunRequest\022*\n\013Base"
      "Request\030\001 \002(\0132\025.micromsg.BaseRequest\022\n\n\002"
      "qq\030\002 \002(\r\022*\n\005A2Key\030\003 \001(\0132\033.micromsg.SKBui"
      "ltinBuffer_t\022-\n\010NewA2Key\030\004 \001(\0132\033.microms"
      "g.SKBuiltinBuffer_t\"\227\001\n\033RcptInfoImportYi"
      "XunResponse\022,\n\014rcptinfolist\030\001 \002(\0132\026.micr"
      "omsg.RcptInfoList\022\034\n\024rcptinfoimportstatu"
      "s\030\002 \002(\005\022,\n\014BaseResponse\030\003 \002(\0132\026.micromsg"
      ".BaseResponse\"\277\001\n\026GenBizIapPrepayRequest"
      "\022*\n\013BaseRequest\030\001 \002(\0132\025.micromsg.BaseReq"
      "uest\022\r\n\005AppId\030\002 \001(\t\022\020\n\010NonceStr\030\003 \001(\t\022\021\n"
      "\tTimeStamp\030\004 \001(\t\022\017\n\007Package\030\005 \001(\t\022\017\n\007Pay"
      "Sign\030\006 \001(\t\022\020\n\010SignType\030\007 \001(\t\022\021\n\tStepInUr"
      "l\030\010 \001(\t\"k\n\027GenBizIapPrepayResponse\022,\n\014Ba"
      "seResponse\030\001 \002(\0132\026.micromsg.BaseResponse"
      "\022\021\n\tProductId\030\002 \001(\t\022\017\n\007ExtInfo\030\004 \001(\t\"Y\n\031"
      "GetBizIapPayResultRequest\022*\n\013BaseRequest"
      "\030\001 \002(\0132\025.micromsg.BaseRequest\022\020\n\010SerialI"
      "d\030\002 \001(\t\"^\n\032GetBizIapPayResultResponse\022,\n"
      "\014BaseResponse\030\001 \002(\0132\026.micromsg.BaseRespo"
      "nse\022\022\n\nDetailBuff\030\002 \001(\t\"V\n\026GetBizIapDeta"
      "ilRequest\022*\n\013BaseRequest\030\001 \002(\0132\025.microms"
      "g.BaseRequest\022\020\n\010SerialId\030\003 \001(\t\"[\n\027GetBi"
      "zIapDetailResponse\022,\n\014BaseResponse\030\001 \002(\013"
      "2\026.micromsg.BaseResponse\022\022\n\nDetailBuff\030\002"
      " \001(\t\"u\n\027GetProductDetailRequest\022*\n\013BaseR"
      "equest\030\001 \002(\0132\025.micromsg.BaseRequest\022\013\n\003P"
      "id\030\002 \001(\t\022\017\n\007Version\030\003 \001(\r\022\020\n\010ScanCode\030\004 "
      "\001(\t\"\225\001\n\030GetProductDetailResponse\022,\n\014Base"
      "Response\030\001 \002(\0132\026.micromsg.BaseResponse\022\023"
      "\n\013ProductInfo\030\002 \001(\t\022\017\n\007RetCode\030\003 \001(\005\022\016\n\006"
      "RetMsg\030\004 \001(\t\022\025\n\rRecommendInfo\030\005 \001(\t\"v\n\020L"
      "ockStockRequest\022*\n\013BaseRequest\030\001 \002(\0132\025.m"
      "icromsg.BaseRequest\022\013\n\003Pid\030\002 \001(\t\022\r\n\005SkuI"
      "d\030\003 \001(\t\022\r\n\005Count\030\004 \001(\r\022\013\n\003Url\030\005 \001(\t\"Q\n\021L"
      "ockStockResponse\022,\n\014BaseResponse\030\001 \002(\0132\026"
      ".micromsg.BaseResponse\022\016\n\006LockId\030\002 \001(\r\"x"
      "\n\022UnlockStockRequest\022*\n\013BaseRequest\030\001 \002("
      "\0132\025.micromsg.BaseRequest\022\013\n\003Pid\030\002 \001(\t\022\r\n"
      "\005SkuId\030\003 \001(\t\022\r\n\005Count\030\004 \001(\r\022\013\n\003Url\030\005 \001(\t"
      "\"S\n\023UnlockStockResponse\022,\n\014BaseResponse\030"
      "\001 \002(\0132\026.micromsg.BaseResponse\022\016\n\006LockId\030"
      "\002 \001(\r\"$\n\006KVItem\022\013\n\003Key\030\001 \001(\t\022\r\n\005Value\030\002 "
      "\001(\t\"E\n\007Express\022\014\n\004Name\030\001 \001(\t\022\r\n\005Price\030\002 "
      "\001(\r\022\021\n\tPriceType\030\003 \001(\t\022\n\n\002Id\030\004 \001(\r\"z\n\007Ad"
      "dress\022\017\n\007Country\030\001 \001(\t\022\020\n\010Province\030\002 \001(\t"
      "\022\014\n\004City\030\003 \001(\t\022\016\n\006Detail\030\004 \001(\t\022\020\n\010UserNa"
      "me\030\005 \001(\t\022\013\n\003Tel\030\006 \001(\t\022\017\n\007ZipCode\030\007 \001(\t\")"
      "\n\007Receipt\022\016\n\006IsNeed\030\001 \002(\r\022\016\n\006Detail\030\002 \001("
      "\t\"(\n\010Discount\022\r\n\005Title\030\001 \001(\t\022\r\n\005Price\030\002 "
      "\002(\r\"\307\002\n\nProduction\022\020\n\010SkuCount\030\001 \002(\r\022\036\n\004"
      "Skus\030\002 \003(\0132\020.micromsg.KVItem\022\r\n\005Count\030\003 "
      "\002(\r\022\021\n\tRealPrice\030\004 \002(\r\022\021\n\tPriceType\030\005 \001("
      "\t\022\013\n\003Pid\030\006 \001(\t\022\017\n\007SafeUrl\030\007 \001(\t\022\r\n\005SkuId"
      "\030\010 \001(\t\022\014\n\004Type\030\t \001(\r\022\014\n\004Name\030\n \001(\t\022\020\n\010Th"
      "umbUrl\030\013 \001(\t\022\017\n\007SubType\030\014 \001(\r\022\r\n\005Scene\030\r"
      " \001(\r\022\031\n\021PreferentialPrice\030\016 \001(\t\022\025\n\rDisco"
      "untCount\030\017 \001(\r\022%\n\tDiscounts\030\020 \003(\0132\022.micr"
      "omsg.Discount\"\335\001\n\010Snapshot\022\024\n\014ProductCou"
      "nt\030\001 \002(\r\022)\n\013Productions\030\002 \003(\0132\024.micromsg"
      ".Production\022\"\n\007Express\030\003 \001(\0132\021.micromsg."
      "Express\022\"\n\007Address\030\004 \001(\0132\021.micromsg.Addr"
      "ess\022\"\n\007Receipt\030\005 \003(\0132\021.micromsg.Receipt\022"
      "\024\n\014ReceiptCount\030\006 \001(\r\022\016\n\006LockId\030\007 \001(\t\"|\n"
      "\026SubmitMallOrderRequest\022*\n\013BaseRequest\030\001"
      " \002(\0132\025.micromsg.BaseRequest\022$\n\010Snapshot\030"
      "\002 \001(\0132\022.micromsg.Snapshot\022\020\n\010PayAppid\030\003 "
      "\001(\t\"{\n\027SubmitMallOrderResponse\022,\n\014BaseRe"
      "sponse\030\001 \002(\0132\026.micromsg.BaseResponse\022\021\n\t"
      "PrepareId\030\002 \001(\t\022\017\n\007RetCode\030\003 \001(\005\022\016\n\006RetM"
      "sg\030\004 \001(\t\"n\n\032SubmitMallFreeOrderRequest\022*"
      "\n\013BaseRequest\030\001 \002(\0132\025.micromsg.BaseReque"
      "st\022$\n\010Snapshot\030\002 \001(\0132\022.micromsg.Snapshot"
      "\"\177\n\033SubmitMallFreeOrderResponse\022,\n\014BaseR"
      "esponse\030\001 \002(\0132\026.micromsg.BaseResponse\022\021\n"
      "\tPrepareId\030\002 \001(\t\022\017\n\007RetCode\030\003 \001(\005\022\016\n\006Ret"
      "Msg\030\004 \001(\t\"K\n\rSampleProduct\022\013\n\003Pid\030\001 \001(\t\022"
      "\r\n\005SkuId\030\002 \001(\t\022\r\n\005Count\030\003 \001(\r\022\017\n\007SafeUrl"
      "\030\004 \001(\t\"X\n\nActionAttr\022\014\n\004Name\030\001 \001(\t\022\014\n\004Ti"
      "ps\030\002 \001(\t\022\014\n\004Type\030\003 \001(\r\022\017\n\007Content\030\004 \001(\t\022"
      "\017\n\007IconUrl\030\005 \001(\t\"\203\001\n\025PreSubmitOrderReque"
      "st\022*\n\013BaseRequest\030\001 \002(\0132\025.micromsg.BaseR"
      "equest\022\024\n\014ProductCount\030\002 \002(\r\022(\n\007Product\030"
      "\003 \003(\0132\027.micromsg.SampleProduct\"\365\001\n\026PreSu"
      "bmitOrderResponse\022,\n\014BaseResponse\030\001 \001(\0132"
      "\026.micromsg.BaseResponse\022\024\n\014ExpressCount\030"
      "\002 \001(\r\022\"\n\007Express\030\003 \003(\0132\021.micromsg.Expres"
      "s\022\016\n\006LockId\030\004 \001(\t\022\017\n\007RetCode\030\005 \001(\005\022\016\n\006Re"
      "tMsg\030\006 \001(\t\022)\n\013ActionAttrs\030\007 \003(\0132\024.microm"
      "sg.ActionAttr\022\027\n\017ActionAttrCount\030\010 \001(\r\"\223"
      "\001\n\025CancelPreOrderRequest\022*\n\013BaseRequest\030"
      "\001 \002(\0132\025.micromsg.BaseRequest\022\024\n\014ProductC"
      "ount\030\002 \002(\r\022(\n\007Product\030\003 \003(\0132\027.micromsg.S"
      "ampleProduct\022\016\n\006LockId\030\004 \001(\t\"g\n\026CancelPr"
      "eOrderResponse\022,\n\014BaseResponse\030\001 \002(\0132\026.m"
      "icromsg.BaseResponse\022\017\n\007RetCode\030\002 \001(\005\022\016\n"
      "\006RetMsg\030\003 \001(\t\"l\n\031OrderDetailControlReque"
      "st\022*\n\013BaseRequest\030\001 \002(\0132\025.micromsg.BaseR"
      "equest\022\022\n\nActionCode\030\002 \002(\r\022\017\n\007TransID\030\003 "
      "\001(\t\"k\n\032OrderDetailControlResponse\022,\n\014Bas"
      "eResponse\030\001 \002(\0132\026.micromsg.BaseResponse\022"
      "\017\n\007RetCode\030\002 \001(\005\022\016\n\006RetMsg\030\003 \001(\t\"d\n\031GetP"
      "roductDiscountRequest\022*\n\013BaseRequest\030\001 \002"
      "(\0132\025.micromsg.BaseRequest\022\016\n\006LockId\030\002 \001("
      "\t\022\013\n\003Url\030\003 \001(\t\"\203\001\n\032GetProductDiscountRes"
      "ponse\022,\n\014BaseResponse\030\001 \002(\0132\026.micromsg.B"
      "aseResponse\022\026\n\016DiscountDetail\030\002 \001(\t\022\017\n\007R"
      "etCode\030\003 \001(\005\022\016\n\006RetMsg\030\004 \001(\t\"\221\001\n\034GetLast"
      "estExpressInfoRequest\022*\n\013BaseRequest\030\001 \002"
      "(\0132\025.micromsg.BaseRequest\022\021\n\tProductId\030\002"
      " \001(\t\022\016\n\006LockId\030\003 \001(\t\022\"\n\007Address\030\004 \002(\0132\021."
      "micromsg.Address\"\254\001\n\035GetLastestExpressIn"
      "foResponse\022,\n\014BaseResponse\030\001 \002(\0132\026.micro"
      "msg.BaseResponse\022&\n\013ExpressList\030\002 \003(\0132\021."
      "micromsg.Express\022\024\n\014ExpressCount\030\003 \001(\r\022\017"
      "\n\007RetCode\030\004 \001(\005\022\016\n\006RetMsg\030\005 \001(\t\"\253\001\n\024Send"
      "C2CSecMsgRequest\022*\n\013BaseRequest\030\001 \002(\0132\025."
      "micromsg.BaseRequest\022\016\n\006ToUser\030\002 \001(\t\022\017\n\007"
      "MsgType\030\003 \001(\005\022\016\n\006TempId\030\004 \001(\t\022\r\n\005Title\030\005"
      " \001(\t\022\013\n\003Des\030\006 \001(\t\022\013\n\003Url\030\007 \001(\t\022\r\n\005Scene\030"
      "\010 \001(\005\"u\n\025SendC2cSecMsgResponse\022,\n\014BaseRe"
      "sponse\030\001 \002(\0132\026.micromsg.BaseResponse\022\017\n\007"
      "ErrCode\030\002 \001(\005\022\016\n\006ErrMsg\030\003 \001(\t\022\r\n\005MsgId\030\004"
      " \001(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 6724);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mmpay.proto", &protobuf_RegisterTypes);
  ::micromsg::protobuf_mmbuiltintype_2eproto::AddDescriptors();
  ::micromsg::protobuf_mmbase_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_mmpay_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RcptInfoNode::kIdFieldNumber;
const int RcptInfoNode::kCountryFieldNumber;
const int RcptInfoNode::kProvinceFieldNumber;
const int RcptInfoNode::kCityFieldNumber;
const int RcptInfoNode::kDistrictFieldNumber;
const int RcptInfoNode::kZipcodeFieldNumber;
const int RcptInfoNode::kDetailFieldNumber;
const int RcptInfoNode::kNameFieldNumber;
const int RcptInfoNode::kPhoneFieldNumber;
const int RcptInfoNode::kNationalcodeGbt2260FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RcptInfoNode::RcptInfoNode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.RcptInfoNode)
}
RcptInfoNode::RcptInfoNode(const RcptInfoNode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_country()) {
    country_ = new ::micromsg::SKBuiltinString_t(*from.country_);
  } else {
    country_ = NULL;
  }
  if (from.has_province()) {
    province_ = new ::micromsg::SKBuiltinString_t(*from.province_);
  } else {
    province_ = NULL;
  }
  if (from.has_city()) {
    city_ = new ::micromsg::SKBuiltinString_t(*from.city_);
  } else {
    city_ = NULL;
  }
  if (from.has_district()) {
    district_ = new ::micromsg::SKBuiltinString_t(*from.district_);
  } else {
    district_ = NULL;
  }
  if (from.has_zipcode()) {
    zipcode_ = new ::micromsg::SKBuiltinString_t(*from.zipcode_);
  } else {
    zipcode_ = NULL;
  }
  if (from.has_detail()) {
    detail_ = new ::micromsg::SKBuiltinString_t(*from.detail_);
  } else {
    detail_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::micromsg::SKBuiltinString_t(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_phone()) {
    phone_ = new ::micromsg::SKBuiltinString_t(*from.phone_);
  } else {
    phone_ = NULL;
  }
  if (from.has_nationalcode_gbt2260()) {
    nationalcode_gbt2260_ = new ::micromsg::SKBuiltinString_t(*from.nationalcode_gbt2260_);
  } else {
    nationalcode_gbt2260_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:micromsg.RcptInfoNode)
}

void RcptInfoNode::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&country_, 0, reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&country_) + sizeof(id_));
}

RcptInfoNode::~RcptInfoNode() {
  // @@protoc_insertion_point(destructor:micromsg.RcptInfoNode)
  SharedDtor();
}

void RcptInfoNode::SharedDtor() {
  if (this != internal_default_instance()) {
    delete country_;
  }
  if (this != internal_default_instance()) {
    delete province_;
  }
  if (this != internal_default_instance()) {
    delete city_;
  }
  if (this != internal_default_instance()) {
    delete district_;
  }
  if (this != internal_default_instance()) {
    delete zipcode_;
  }
  if (this != internal_default_instance()) {
    delete detail_;
  }
  if (this != internal_default_instance()) {
    delete name_;
  }
  if (this != internal_default_instance()) {
    delete phone_;
  }
  if (this != internal_default_instance()) {
    delete nationalcode_gbt2260_;
  }
}

void RcptInfoNode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RcptInfoNode::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RcptInfoNode& RcptInfoNode::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

RcptInfoNode* RcptInfoNode::New(::google::protobuf::Arena* arena) const {
  RcptInfoNode* n = new RcptInfoNode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RcptInfoNode::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.RcptInfoNode)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_country()) {
      GOOGLE_DCHECK(country_ != NULL);
      country_->::micromsg::SKBuiltinString_t::Clear();
    }
    if (has_province()) {
      GOOGLE_DCHECK(province_ != NULL);
      province_->::micromsg::SKBuiltinString_t::Clear();
    }
    if (has_city()) {
      GOOGLE_DCHECK(city_ != NULL);
      city_->::micromsg::SKBuiltinString_t::Clear();
    }
    if (has_district()) {
      GOOGLE_DCHECK(district_ != NULL);
      district_->::micromsg::SKBuiltinString_t::Clear();
    }
    if (has_zipcode()) {
      GOOGLE_DCHECK(zipcode_ != NULL);
      zipcode_->::micromsg::SKBuiltinString_t::Clear();
    }
    if (has_detail()) {
      GOOGLE_DCHECK(detail_ != NULL);
      detail_->::micromsg::SKBuiltinString_t::Clear();
    }
    if (has_name()) {
      GOOGLE_DCHECK(name_ != NULL);
      name_->::micromsg::SKBuiltinString_t::Clear();
    }
    if (has_phone()) {
      GOOGLE_DCHECK(phone_ != NULL);
      phone_->::micromsg::SKBuiltinString_t::Clear();
    }
  }
  if (has_nationalcode_gbt2260()) {
    GOOGLE_DCHECK(nationalcode_gbt2260_ != NULL);
    nationalcode_gbt2260_->::micromsg::SKBuiltinString_t::Clear();
  }
  id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RcptInfoNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.RcptInfoNode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .micromsg.SKBuiltinString_t country = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_country()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.SKBuiltinString_t province = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_province()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.SKBuiltinString_t city = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_city()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.SKBuiltinString_t district = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_district()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.SKBuiltinString_t zipcode = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_zipcode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.SKBuiltinString_t detail = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_detail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.SKBuiltinString_t name = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.SKBuiltinString_t phone = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_phone()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .micromsg.SKBuiltinString_t nationalcode_gbt2260 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nationalcode_gbt2260()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.RcptInfoNode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.RcptInfoNode)
  return false;
#undef DO_
}

void RcptInfoNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.RcptInfoNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 id = 1;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional .micromsg.SKBuiltinString_t country = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->country_, output);
  }

  // required .micromsg.SKBuiltinString_t province = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->province_, output);
  }

  // required .micromsg.SKBuiltinString_t city = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->city_, output);
  }

  // required .micromsg.SKBuiltinString_t district = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->district_, output);
  }

  // required .micromsg.SKBuiltinString_t zipcode = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->zipcode_, output);
  }

  // required .micromsg.SKBuiltinString_t detail = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->detail_, output);
  }

  // required .micromsg.SKBuiltinString_t name = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->name_, output);
  }

  // required .micromsg.SKBuiltinString_t phone = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->phone_, output);
  }

  // optional .micromsg.SKBuiltinString_t nationalcode_gbt2260 = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->nationalcode_gbt2260_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.RcptInfoNode)
}

::google::protobuf::uint8* RcptInfoNode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.RcptInfoNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 id = 1;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional .micromsg.SKBuiltinString_t country = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->country_, deterministic, target);
  }

  // required .micromsg.SKBuiltinString_t province = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->province_, deterministic, target);
  }

  // required .micromsg.SKBuiltinString_t city = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->city_, deterministic, target);
  }

  // required .micromsg.SKBuiltinString_t district = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->district_, deterministic, target);
  }

  // required .micromsg.SKBuiltinString_t zipcode = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->zipcode_, deterministic, target);
  }

  // required .micromsg.SKBuiltinString_t detail = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->detail_, deterministic, target);
  }

  // required .micromsg.SKBuiltinString_t name = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->name_, deterministic, target);
  }

  // required .micromsg.SKBuiltinString_t phone = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->phone_, deterministic, target);
  }

  // optional .micromsg.SKBuiltinString_t nationalcode_gbt2260 = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->nationalcode_gbt2260_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.RcptInfoNode)
  return target;
}

size_t RcptInfoNode::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.RcptInfoNode)
  size_t total_size = 0;

  if (has_province()) {
    // required .micromsg.SKBuiltinString_t province = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->province_);
  }

  if (has_city()) {
    // required .micromsg.SKBuiltinString_t city = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->city_);
  }

  if (has_district()) {
    // required .micromsg.SKBuiltinString_t district = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->district_);
  }

  if (has_zipcode()) {
    // required .micromsg.SKBuiltinString_t zipcode = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->zipcode_);
  }

  if (has_detail()) {
    // required .micromsg.SKBuiltinString_t detail = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->detail_);
  }

  if (has_name()) {
    // required .micromsg.SKBuiltinString_t name = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->name_);
  }

  if (has_phone()) {
    // required .micromsg.SKBuiltinString_t phone = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->phone_);
  }

  return total_size;
}
size_t RcptInfoNode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.RcptInfoNode)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x000000fe) ^ 0x000000fe) == 0) {  // All required fields are present.
    // required .micromsg.SKBuiltinString_t province = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->province_);

    // required .micromsg.SKBuiltinString_t city = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->city_);

    // required .micromsg.SKBuiltinString_t district = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->district_);

    // required .micromsg.SKBuiltinString_t zipcode = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->zipcode_);

    // required .micromsg.SKBuiltinString_t detail = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->detail_);

    // required .micromsg.SKBuiltinString_t name = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->name_);

    // required .micromsg.SKBuiltinString_t phone = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->phone_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .micromsg.SKBuiltinString_t country = 2;
  if (has_country()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->country_);
  }

  if (_has_bits_[8 / 32] & 768u) {
    // optional .micromsg.SKBuiltinString_t nationalcode_gbt2260 = 10;
    if (has_nationalcode_gbt2260()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->nationalcode_gbt2260_);
    }

    // optional uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RcptInfoNode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.RcptInfoNode)
  GOOGLE_DCHECK_NE(&from, this);
  const RcptInfoNode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RcptInfoNode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.RcptInfoNode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.RcptInfoNode)
    MergeFrom(*source);
  }
}

void RcptInfoNode::MergeFrom(const RcptInfoNode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.RcptInfoNode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_country()->::micromsg::SKBuiltinString_t::MergeFrom(from.country());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_province()->::micromsg::SKBuiltinString_t::MergeFrom(from.province());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_city()->::micromsg::SKBuiltinString_t::MergeFrom(from.city());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_district()->::micromsg::SKBuiltinString_t::MergeFrom(from.district());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_zipcode()->::micromsg::SKBuiltinString_t::MergeFrom(from.zipcode());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_detail()->::micromsg::SKBuiltinString_t::MergeFrom(from.detail());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_name()->::micromsg::SKBuiltinString_t::MergeFrom(from.name());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_phone()->::micromsg::SKBuiltinString_t::MergeFrom(from.phone());
    }
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_nationalcode_gbt2260()->::micromsg::SKBuiltinString_t::MergeFrom(from.nationalcode_gbt2260());
    }
    if (cached_has_bits & 0x00000200u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RcptInfoNode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.RcptInfoNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RcptInfoNode::CopyFrom(const RcptInfoNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.RcptInfoNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RcptInfoNode::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000fe) != 0x000000fe) return false;
  return true;
}

void RcptInfoNode::Swap(RcptInfoNode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RcptInfoNode::InternalSwap(RcptInfoNode* other) {
  std::swap(country_, other->country_);
  std::swap(province_, other->province_);
  std::swap(city_, other->city_);
  std::swap(district_, other->district_);
  std::swap(zipcode_, other->zipcode_);
  std::swap(detail_, other->detail_);
  std::swap(name_, other->name_);
  std::swap(phone_, other->phone_);
  std::swap(nationalcode_gbt2260_, other->nationalcode_gbt2260_);
  std::swap(id_, other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RcptInfoNode::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RcptInfoNode

// optional uint32 id = 1;
bool RcptInfoNode::has_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void RcptInfoNode::set_has_id() {
  _has_bits_[0] |= 0x00000200u;
}
void RcptInfoNode::clear_has_id() {
  _has_bits_[0] &= ~0x00000200u;
}
void RcptInfoNode::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 RcptInfoNode::id() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoNode.id)
  return id_;
}
void RcptInfoNode::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RcptInfoNode.id)
}

// optional .micromsg.SKBuiltinString_t country = 2;
bool RcptInfoNode::has_country() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RcptInfoNode::set_has_country() {
  _has_bits_[0] |= 0x00000001u;
}
void RcptInfoNode::clear_has_country() {
  _has_bits_[0] &= ~0x00000001u;
}
void RcptInfoNode::clear_country() {
  if (country_ != NULL) country_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_country();
}
const ::micromsg::SKBuiltinString_t& RcptInfoNode::country() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoNode.country)
  return country_ != NULL ? *country_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
::micromsg::SKBuiltinString_t* RcptInfoNode::mutable_country() {
  set_has_country();
  if (country_ == NULL) {
    country_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoNode.country)
  return country_;
}
::micromsg::SKBuiltinString_t* RcptInfoNode::release_country() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoNode.country)
  clear_has_country();
  ::micromsg::SKBuiltinString_t* temp = country_;
  country_ = NULL;
  return temp;
}
void RcptInfoNode::set_allocated_country(::micromsg::SKBuiltinString_t* country) {
  delete country_;
  country_ = country;
  if (country) {
    set_has_country();
  } else {
    clear_has_country();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoNode.country)
}

// required .micromsg.SKBuiltinString_t province = 3;
bool RcptInfoNode::has_province() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RcptInfoNode::set_has_province() {
  _has_bits_[0] |= 0x00000002u;
}
void RcptInfoNode::clear_has_province() {
  _has_bits_[0] &= ~0x00000002u;
}
void RcptInfoNode::clear_province() {
  if (province_ != NULL) province_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_province();
}
const ::micromsg::SKBuiltinString_t& RcptInfoNode::province() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoNode.province)
  return province_ != NULL ? *province_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
::micromsg::SKBuiltinString_t* RcptInfoNode::mutable_province() {
  set_has_province();
  if (province_ == NULL) {
    province_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoNode.province)
  return province_;
}
::micromsg::SKBuiltinString_t* RcptInfoNode::release_province() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoNode.province)
  clear_has_province();
  ::micromsg::SKBuiltinString_t* temp = province_;
  province_ = NULL;
  return temp;
}
void RcptInfoNode::set_allocated_province(::micromsg::SKBuiltinString_t* province) {
  delete province_;
  province_ = province;
  if (province) {
    set_has_province();
  } else {
    clear_has_province();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoNode.province)
}

// required .micromsg.SKBuiltinString_t city = 4;
bool RcptInfoNode::has_city() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RcptInfoNode::set_has_city() {
  _has_bits_[0] |= 0x00000004u;
}
void RcptInfoNode::clear_has_city() {
  _has_bits_[0] &= ~0x00000004u;
}
void RcptInfoNode::clear_city() {
  if (city_ != NULL) city_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_city();
}
const ::micromsg::SKBuiltinString_t& RcptInfoNode::city() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoNode.city)
  return city_ != NULL ? *city_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
::micromsg::SKBuiltinString_t* RcptInfoNode::mutable_city() {
  set_has_city();
  if (city_ == NULL) {
    city_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoNode.city)
  return city_;
}
::micromsg::SKBuiltinString_t* RcptInfoNode::release_city() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoNode.city)
  clear_has_city();
  ::micromsg::SKBuiltinString_t* temp = city_;
  city_ = NULL;
  return temp;
}
void RcptInfoNode::set_allocated_city(::micromsg::SKBuiltinString_t* city) {
  delete city_;
  city_ = city;
  if (city) {
    set_has_city();
  } else {
    clear_has_city();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoNode.city)
}

// required .micromsg.SKBuiltinString_t district = 5;
bool RcptInfoNode::has_district() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RcptInfoNode::set_has_district() {
  _has_bits_[0] |= 0x00000008u;
}
void RcptInfoNode::clear_has_district() {
  _has_bits_[0] &= ~0x00000008u;
}
void RcptInfoNode::clear_district() {
  if (district_ != NULL) district_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_district();
}
const ::micromsg::SKBuiltinString_t& RcptInfoNode::district() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoNode.district)
  return district_ != NULL ? *district_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
::micromsg::SKBuiltinString_t* RcptInfoNode::mutable_district() {
  set_has_district();
  if (district_ == NULL) {
    district_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoNode.district)
  return district_;
}
::micromsg::SKBuiltinString_t* RcptInfoNode::release_district() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoNode.district)
  clear_has_district();
  ::micromsg::SKBuiltinString_t* temp = district_;
  district_ = NULL;
  return temp;
}
void RcptInfoNode::set_allocated_district(::micromsg::SKBuiltinString_t* district) {
  delete district_;
  district_ = district;
  if (district) {
    set_has_district();
  } else {
    clear_has_district();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoNode.district)
}

// required .micromsg.SKBuiltinString_t zipcode = 6;
bool RcptInfoNode::has_zipcode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void RcptInfoNode::set_has_zipcode() {
  _has_bits_[0] |= 0x00000010u;
}
void RcptInfoNode::clear_has_zipcode() {
  _has_bits_[0] &= ~0x00000010u;
}
void RcptInfoNode::clear_zipcode() {
  if (zipcode_ != NULL) zipcode_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_zipcode();
}
const ::micromsg::SKBuiltinString_t& RcptInfoNode::zipcode() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoNode.zipcode)
  return zipcode_ != NULL ? *zipcode_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
::micromsg::SKBuiltinString_t* RcptInfoNode::mutable_zipcode() {
  set_has_zipcode();
  if (zipcode_ == NULL) {
    zipcode_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoNode.zipcode)
  return zipcode_;
}
::micromsg::SKBuiltinString_t* RcptInfoNode::release_zipcode() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoNode.zipcode)
  clear_has_zipcode();
  ::micromsg::SKBuiltinString_t* temp = zipcode_;
  zipcode_ = NULL;
  return temp;
}
void RcptInfoNode::set_allocated_zipcode(::micromsg::SKBuiltinString_t* zipcode) {
  delete zipcode_;
  zipcode_ = zipcode;
  if (zipcode) {
    set_has_zipcode();
  } else {
    clear_has_zipcode();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoNode.zipcode)
}

// required .micromsg.SKBuiltinString_t detail = 7;
bool RcptInfoNode::has_detail() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void RcptInfoNode::set_has_detail() {
  _has_bits_[0] |= 0x00000020u;
}
void RcptInfoNode::clear_has_detail() {
  _has_bits_[0] &= ~0x00000020u;
}
void RcptInfoNode::clear_detail() {
  if (detail_ != NULL) detail_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_detail();
}
const ::micromsg::SKBuiltinString_t& RcptInfoNode::detail() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoNode.detail)
  return detail_ != NULL ? *detail_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
::micromsg::SKBuiltinString_t* RcptInfoNode::mutable_detail() {
  set_has_detail();
  if (detail_ == NULL) {
    detail_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoNode.detail)
  return detail_;
}
::micromsg::SKBuiltinString_t* RcptInfoNode::release_detail() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoNode.detail)
  clear_has_detail();
  ::micromsg::SKBuiltinString_t* temp = detail_;
  detail_ = NULL;
  return temp;
}
void RcptInfoNode::set_allocated_detail(::micromsg::SKBuiltinString_t* detail) {
  delete detail_;
  detail_ = detail;
  if (detail) {
    set_has_detail();
  } else {
    clear_has_detail();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoNode.detail)
}

// required .micromsg.SKBuiltinString_t name = 8;
bool RcptInfoNode::has_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void RcptInfoNode::set_has_name() {
  _has_bits_[0] |= 0x00000040u;
}
void RcptInfoNode::clear_has_name() {
  _has_bits_[0] &= ~0x00000040u;
}
void RcptInfoNode::clear_name() {
  if (name_ != NULL) name_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_name();
}
const ::micromsg::SKBuiltinString_t& RcptInfoNode::name() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoNode.name)
  return name_ != NULL ? *name_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
::micromsg::SKBuiltinString_t* RcptInfoNode::mutable_name() {
  set_has_name();
  if (name_ == NULL) {
    name_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoNode.name)
  return name_;
}
::micromsg::SKBuiltinString_t* RcptInfoNode::release_name() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoNode.name)
  clear_has_name();
  ::micromsg::SKBuiltinString_t* temp = name_;
  name_ = NULL;
  return temp;
}
void RcptInfoNode::set_allocated_name(::micromsg::SKBuiltinString_t* name) {
  delete name_;
  name_ = name;
  if (name) {
    set_has_name();
  } else {
    clear_has_name();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoNode.name)
}

// required .micromsg.SKBuiltinString_t phone = 9;
bool RcptInfoNode::has_phone() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void RcptInfoNode::set_has_phone() {
  _has_bits_[0] |= 0x00000080u;
}
void RcptInfoNode::clear_has_phone() {
  _has_bits_[0] &= ~0x00000080u;
}
void RcptInfoNode::clear_phone() {
  if (phone_ != NULL) phone_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_phone();
}
const ::micromsg::SKBuiltinString_t& RcptInfoNode::phone() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoNode.phone)
  return phone_ != NULL ? *phone_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
::micromsg::SKBuiltinString_t* RcptInfoNode::mutable_phone() {
  set_has_phone();
  if (phone_ == NULL) {
    phone_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoNode.phone)
  return phone_;
}
::micromsg::SKBuiltinString_t* RcptInfoNode::release_phone() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoNode.phone)
  clear_has_phone();
  ::micromsg::SKBuiltinString_t* temp = phone_;
  phone_ = NULL;
  return temp;
}
void RcptInfoNode::set_allocated_phone(::micromsg::SKBuiltinString_t* phone) {
  delete phone_;
  phone_ = phone;
  if (phone) {
    set_has_phone();
  } else {
    clear_has_phone();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoNode.phone)
}

// optional .micromsg.SKBuiltinString_t nationalcode_gbt2260 = 10;
bool RcptInfoNode::has_nationalcode_gbt2260() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void RcptInfoNode::set_has_nationalcode_gbt2260() {
  _has_bits_[0] |= 0x00000100u;
}
void RcptInfoNode::clear_has_nationalcode_gbt2260() {
  _has_bits_[0] &= ~0x00000100u;
}
void RcptInfoNode::clear_nationalcode_gbt2260() {
  if (nationalcode_gbt2260_ != NULL) nationalcode_gbt2260_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_nationalcode_gbt2260();
}
const ::micromsg::SKBuiltinString_t& RcptInfoNode::nationalcode_gbt2260() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoNode.nationalcode_gbt2260)
  return nationalcode_gbt2260_ != NULL ? *nationalcode_gbt2260_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
::micromsg::SKBuiltinString_t* RcptInfoNode::mutable_nationalcode_gbt2260() {
  set_has_nationalcode_gbt2260();
  if (nationalcode_gbt2260_ == NULL) {
    nationalcode_gbt2260_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoNode.nationalcode_gbt2260)
  return nationalcode_gbt2260_;
}
::micromsg::SKBuiltinString_t* RcptInfoNode::release_nationalcode_gbt2260() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoNode.nationalcode_gbt2260)
  clear_has_nationalcode_gbt2260();
  ::micromsg::SKBuiltinString_t* temp = nationalcode_gbt2260_;
  nationalcode_gbt2260_ = NULL;
  return temp;
}
void RcptInfoNode::set_allocated_nationalcode_gbt2260(::micromsg::SKBuiltinString_t* nationalcode_gbt2260) {
  delete nationalcode_gbt2260_;
  nationalcode_gbt2260_ = nationalcode_gbt2260;
  if (nationalcode_gbt2260) {
    set_has_nationalcode_gbt2260();
  } else {
    clear_has_nationalcode_gbt2260();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoNode.nationalcode_gbt2260)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RcptInfoList::kCountFieldNumber;
const int RcptInfoList::kRcptinfolistFieldNumber;
const int RcptInfoList::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RcptInfoList::RcptInfoList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.RcptInfoList)
}
RcptInfoList::RcptInfoList(const RcptInfoList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      rcptinfolist_(from.rcptinfolist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&count_, &from.count_,
    reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&count_) + sizeof(timestamp_));
  // @@protoc_insertion_point(copy_constructor:micromsg.RcptInfoList)
}

void RcptInfoList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&count_, 0, reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&count_) + sizeof(timestamp_));
}

RcptInfoList::~RcptInfoList() {
  // @@protoc_insertion_point(destructor:micromsg.RcptInfoList)
  SharedDtor();
}

void RcptInfoList::SharedDtor() {
}

void RcptInfoList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RcptInfoList::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RcptInfoList& RcptInfoList::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

RcptInfoList* RcptInfoList::New(::google::protobuf::Arena* arena) const {
  RcptInfoList* n = new RcptInfoList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RcptInfoList::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.RcptInfoList)
  rcptinfolist_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&count_, 0, reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&count_) + sizeof(timestamp_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RcptInfoList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.RcptInfoList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.RcptInfoNode rcptinfolist = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rcptinfolist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 timestamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.RcptInfoList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.RcptInfoList)
  return false;
#undef DO_
}

void RcptInfoList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.RcptInfoList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 count = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  // repeated .micromsg.RcptInfoNode rcptinfolist = 2;
  for (unsigned int i = 0, n = this->rcptinfolist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->rcptinfolist(i), output);
  }

  // required uint32 timestamp = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->timestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.RcptInfoList)
}

::google::protobuf::uint8* RcptInfoList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.RcptInfoList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 count = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  // repeated .micromsg.RcptInfoNode rcptinfolist = 2;
  for (unsigned int i = 0, n = this->rcptinfolist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->rcptinfolist(i), deterministic, target);
  }

  // required uint32 timestamp = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->timestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.RcptInfoList)
  return target;
}

size_t RcptInfoList::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.RcptInfoList)
  size_t total_size = 0;

  if (has_count()) {
    // required uint32 count = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  if (has_timestamp()) {
    // required uint32 timestamp = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timestamp());
  }

  return total_size;
}
size_t RcptInfoList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.RcptInfoList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 count = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());

    // required uint32 timestamp = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timestamp());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.RcptInfoNode rcptinfolist = 2;
  {
    unsigned int count = this->rcptinfolist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rcptinfolist(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RcptInfoList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.RcptInfoList)
  GOOGLE_DCHECK_NE(&from, this);
  const RcptInfoList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RcptInfoList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.RcptInfoList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.RcptInfoList)
    MergeFrom(*source);
  }
}

void RcptInfoList::MergeFrom(const RcptInfoList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.RcptInfoList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rcptinfolist_.MergeFrom(from.rcptinfolist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      count_ = from.count_;
    }
    if (cached_has_bits & 0x00000002u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RcptInfoList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.RcptInfoList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RcptInfoList::CopyFrom(const RcptInfoList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.RcptInfoList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RcptInfoList::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->rcptinfolist())) return false;
  return true;
}

void RcptInfoList::Swap(RcptInfoList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RcptInfoList::InternalSwap(RcptInfoList* other) {
  rcptinfolist_.InternalSwap(&other->rcptinfolist_);
  std::swap(count_, other->count_);
  std::swap(timestamp_, other->timestamp_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RcptInfoList::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RcptInfoList

// required uint32 count = 1;
bool RcptInfoList::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RcptInfoList::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
void RcptInfoList::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
void RcptInfoList::clear_count() {
  count_ = 0u;
  clear_has_count();
}
::google::protobuf::uint32 RcptInfoList::count() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoList.count)
  return count_;
}
void RcptInfoList::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RcptInfoList.count)
}

// repeated .micromsg.RcptInfoNode rcptinfolist = 2;
int RcptInfoList::rcptinfolist_size() const {
  return rcptinfolist_.size();
}
void RcptInfoList::clear_rcptinfolist() {
  rcptinfolist_.Clear();
}
const ::micromsg::RcptInfoNode& RcptInfoList::rcptinfolist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoList.rcptinfolist)
  return rcptinfolist_.Get(index);
}
::micromsg::RcptInfoNode* RcptInfoList::mutable_rcptinfolist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoList.rcptinfolist)
  return rcptinfolist_.Mutable(index);
}
::micromsg::RcptInfoNode* RcptInfoList::add_rcptinfolist() {
  // @@protoc_insertion_point(field_add:micromsg.RcptInfoList.rcptinfolist)
  return rcptinfolist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::RcptInfoNode >*
RcptInfoList::mutable_rcptinfolist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.RcptInfoList.rcptinfolist)
  return &rcptinfolist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::RcptInfoNode >&
RcptInfoList::rcptinfolist() const {
  // @@protoc_insertion_point(field_list:micromsg.RcptInfoList.rcptinfolist)
  return rcptinfolist_;
}

// required uint32 timestamp = 3;
bool RcptInfoList::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RcptInfoList::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
void RcptInfoList::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
void RcptInfoList::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
::google::protobuf::uint32 RcptInfoList::timestamp() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoList.timestamp)
  return timestamp_;
}
void RcptInfoList::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RcptInfoList.timestamp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RcptInfoAddRequest::kBaseRequestFieldNumber;
const int RcptInfoAddRequest::kRcptinfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RcptInfoAddRequest::RcptInfoAddRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.RcptInfoAddRequest)
}
RcptInfoAddRequest::RcptInfoAddRequest(const RcptInfoAddRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  if (from.has_rcptinfo()) {
    rcptinfo_ = new ::micromsg::RcptInfoNode(*from.rcptinfo_);
  } else {
    rcptinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.RcptInfoAddRequest)
}

void RcptInfoAddRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&rcptinfo_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(rcptinfo_));
}

RcptInfoAddRequest::~RcptInfoAddRequest() {
  // @@protoc_insertion_point(destructor:micromsg.RcptInfoAddRequest)
  SharedDtor();
}

void RcptInfoAddRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
  if (this != internal_default_instance()) {
    delete rcptinfo_;
  }
}

void RcptInfoAddRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RcptInfoAddRequest::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RcptInfoAddRequest& RcptInfoAddRequest::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

RcptInfoAddRequest* RcptInfoAddRequest::New(::google::protobuf::Arena* arena) const {
  RcptInfoAddRequest* n = new RcptInfoAddRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RcptInfoAddRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.RcptInfoAddRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
    if (has_rcptinfo()) {
      GOOGLE_DCHECK(rcptinfo_ != NULL);
      rcptinfo_->::micromsg::RcptInfoNode::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RcptInfoAddRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.RcptInfoAddRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.RcptInfoNode rcptinfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rcptinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.RcptInfoAddRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.RcptInfoAddRequest)
  return false;
#undef DO_
}

void RcptInfoAddRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.RcptInfoAddRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required .micromsg.RcptInfoNode rcptinfo = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->rcptinfo_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.RcptInfoAddRequest)
}

::google::protobuf::uint8* RcptInfoAddRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.RcptInfoAddRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required .micromsg.RcptInfoNode rcptinfo = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->rcptinfo_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.RcptInfoAddRequest)
  return target;
}

size_t RcptInfoAddRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.RcptInfoAddRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_rcptinfo()) {
    // required .micromsg.RcptInfoNode rcptinfo = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rcptinfo_);
  }

  return total_size;
}
size_t RcptInfoAddRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.RcptInfoAddRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required .micromsg.RcptInfoNode rcptinfo = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rcptinfo_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RcptInfoAddRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.RcptInfoAddRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RcptInfoAddRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RcptInfoAddRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.RcptInfoAddRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.RcptInfoAddRequest)
    MergeFrom(*source);
  }
}

void RcptInfoAddRequest::MergeFrom(const RcptInfoAddRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.RcptInfoAddRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_rcptinfo()->::micromsg::RcptInfoNode::MergeFrom(from.rcptinfo());
    }
  }
}

void RcptInfoAddRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.RcptInfoAddRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RcptInfoAddRequest::CopyFrom(const RcptInfoAddRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.RcptInfoAddRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RcptInfoAddRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  if (has_rcptinfo()) {
    if (!this->rcptinfo_->IsInitialized()) return false;
  }
  return true;
}

void RcptInfoAddRequest::Swap(RcptInfoAddRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RcptInfoAddRequest::InternalSwap(RcptInfoAddRequest* other) {
  std::swap(baserequest_, other->baserequest_);
  std::swap(rcptinfo_, other->rcptinfo_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RcptInfoAddRequest::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RcptInfoAddRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool RcptInfoAddRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RcptInfoAddRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
void RcptInfoAddRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
void RcptInfoAddRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& RcptInfoAddRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoAddRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* RcptInfoAddRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoAddRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* RcptInfoAddRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoAddRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void RcptInfoAddRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoAddRequest.BaseRequest)
}

// required .micromsg.RcptInfoNode rcptinfo = 2;
bool RcptInfoAddRequest::has_rcptinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RcptInfoAddRequest::set_has_rcptinfo() {
  _has_bits_[0] |= 0x00000002u;
}
void RcptInfoAddRequest::clear_has_rcptinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
void RcptInfoAddRequest::clear_rcptinfo() {
  if (rcptinfo_ != NULL) rcptinfo_->::micromsg::RcptInfoNode::Clear();
  clear_has_rcptinfo();
}
const ::micromsg::RcptInfoNode& RcptInfoAddRequest::rcptinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoAddRequest.rcptinfo)
  return rcptinfo_ != NULL ? *rcptinfo_
                         : *::micromsg::RcptInfoNode::internal_default_instance();
}
::micromsg::RcptInfoNode* RcptInfoAddRequest::mutable_rcptinfo() {
  set_has_rcptinfo();
  if (rcptinfo_ == NULL) {
    rcptinfo_ = new ::micromsg::RcptInfoNode;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoAddRequest.rcptinfo)
  return rcptinfo_;
}
::micromsg::RcptInfoNode* RcptInfoAddRequest::release_rcptinfo() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoAddRequest.rcptinfo)
  clear_has_rcptinfo();
  ::micromsg::RcptInfoNode* temp = rcptinfo_;
  rcptinfo_ = NULL;
  return temp;
}
void RcptInfoAddRequest::set_allocated_rcptinfo(::micromsg::RcptInfoNode* rcptinfo) {
  delete rcptinfo_;
  rcptinfo_ = rcptinfo;
  if (rcptinfo) {
    set_has_rcptinfo();
  } else {
    clear_has_rcptinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoAddRequest.rcptinfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RcptInfoAddResponse::kRcptinfolistFieldNumber;
const int RcptInfoAddResponse::kBaseResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RcptInfoAddResponse::RcptInfoAddResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.RcptInfoAddResponse)
}
RcptInfoAddResponse::RcptInfoAddResponse(const RcptInfoAddResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rcptinfolist()) {
    rcptinfolist_ = new ::micromsg::RcptInfoList(*from.rcptinfolist_);
  } else {
    rcptinfolist_ = NULL;
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.RcptInfoAddResponse)
}

void RcptInfoAddResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&rcptinfolist_, 0, reinterpret_cast<char*>(&baseresponse_) -
    reinterpret_cast<char*>(&rcptinfolist_) + sizeof(baseresponse_));
}

RcptInfoAddResponse::~RcptInfoAddResponse() {
  // @@protoc_insertion_point(destructor:micromsg.RcptInfoAddResponse)
  SharedDtor();
}

void RcptInfoAddResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete rcptinfolist_;
  }
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void RcptInfoAddResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RcptInfoAddResponse::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RcptInfoAddResponse& RcptInfoAddResponse::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

RcptInfoAddResponse* RcptInfoAddResponse::New(::google::protobuf::Arena* arena) const {
  RcptInfoAddResponse* n = new RcptInfoAddResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RcptInfoAddResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.RcptInfoAddResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_rcptinfolist()) {
      GOOGLE_DCHECK(rcptinfolist_ != NULL);
      rcptinfolist_->::micromsg::RcptInfoList::Clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RcptInfoAddResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.RcptInfoAddResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.RcptInfoList rcptinfolist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rcptinfolist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.BaseResponse BaseResponse = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.RcptInfoAddResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.RcptInfoAddResponse)
  return false;
#undef DO_
}

void RcptInfoAddResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.RcptInfoAddResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.RcptInfoList rcptinfolist = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->rcptinfolist_, output);
  }

  // required .micromsg.BaseResponse BaseResponse = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->baseresponse_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.RcptInfoAddResponse)
}

::google::protobuf::uint8* RcptInfoAddResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.RcptInfoAddResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.RcptInfoList rcptinfolist = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->rcptinfolist_, deterministic, target);
  }

  // required .micromsg.BaseResponse BaseResponse = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->baseresponse_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.RcptInfoAddResponse)
  return target;
}

size_t RcptInfoAddResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.RcptInfoAddResponse)
  size_t total_size = 0;

  if (has_rcptinfolist()) {
    // required .micromsg.RcptInfoList rcptinfolist = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rcptinfolist_);
  }

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  return total_size;
}
size_t RcptInfoAddResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.RcptInfoAddResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .micromsg.RcptInfoList rcptinfolist = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rcptinfolist_);

    // required .micromsg.BaseResponse BaseResponse = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RcptInfoAddResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.RcptInfoAddResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RcptInfoAddResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RcptInfoAddResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.RcptInfoAddResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.RcptInfoAddResponse)
    MergeFrom(*source);
  }
}

void RcptInfoAddResponse::MergeFrom(const RcptInfoAddResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.RcptInfoAddResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_rcptinfolist()->::micromsg::RcptInfoList::MergeFrom(from.rcptinfolist());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
  }
}

void RcptInfoAddResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.RcptInfoAddResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RcptInfoAddResponse::CopyFrom(const RcptInfoAddResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.RcptInfoAddResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RcptInfoAddResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_rcptinfolist()) {
    if (!this->rcptinfolist_->IsInitialized()) return false;
  }
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void RcptInfoAddResponse::Swap(RcptInfoAddResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RcptInfoAddResponse::InternalSwap(RcptInfoAddResponse* other) {
  std::swap(rcptinfolist_, other->rcptinfolist_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RcptInfoAddResponse::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RcptInfoAddResponse

// required .micromsg.RcptInfoList rcptinfolist = 1;
bool RcptInfoAddResponse::has_rcptinfolist() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RcptInfoAddResponse::set_has_rcptinfolist() {
  _has_bits_[0] |= 0x00000001u;
}
void RcptInfoAddResponse::clear_has_rcptinfolist() {
  _has_bits_[0] &= ~0x00000001u;
}
void RcptInfoAddResponse::clear_rcptinfolist() {
  if (rcptinfolist_ != NULL) rcptinfolist_->::micromsg::RcptInfoList::Clear();
  clear_has_rcptinfolist();
}
const ::micromsg::RcptInfoList& RcptInfoAddResponse::rcptinfolist() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoAddResponse.rcptinfolist)
  return rcptinfolist_ != NULL ? *rcptinfolist_
                         : *::micromsg::RcptInfoList::internal_default_instance();
}
::micromsg::RcptInfoList* RcptInfoAddResponse::mutable_rcptinfolist() {
  set_has_rcptinfolist();
  if (rcptinfolist_ == NULL) {
    rcptinfolist_ = new ::micromsg::RcptInfoList;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoAddResponse.rcptinfolist)
  return rcptinfolist_;
}
::micromsg::RcptInfoList* RcptInfoAddResponse::release_rcptinfolist() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoAddResponse.rcptinfolist)
  clear_has_rcptinfolist();
  ::micromsg::RcptInfoList* temp = rcptinfolist_;
  rcptinfolist_ = NULL;
  return temp;
}
void RcptInfoAddResponse::set_allocated_rcptinfolist(::micromsg::RcptInfoList* rcptinfolist) {
  delete rcptinfolist_;
  rcptinfolist_ = rcptinfolist;
  if (rcptinfolist) {
    set_has_rcptinfolist();
  } else {
    clear_has_rcptinfolist();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoAddResponse.rcptinfolist)
}

// required .micromsg.BaseResponse BaseResponse = 2;
bool RcptInfoAddResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RcptInfoAddResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
void RcptInfoAddResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
void RcptInfoAddResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& RcptInfoAddResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoAddResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* RcptInfoAddResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoAddResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* RcptInfoAddResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoAddResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void RcptInfoAddResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoAddResponse.BaseResponse)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RcptInfoRemoveRequest::kBaseRequestFieldNumber;
const int RcptInfoRemoveRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RcptInfoRemoveRequest::RcptInfoRemoveRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.RcptInfoRemoveRequest)
}
RcptInfoRemoveRequest::RcptInfoRemoveRequest(const RcptInfoRemoveRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:micromsg.RcptInfoRemoveRequest)
}

void RcptInfoRemoveRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(id_));
}

RcptInfoRemoveRequest::~RcptInfoRemoveRequest() {
  // @@protoc_insertion_point(destructor:micromsg.RcptInfoRemoveRequest)
  SharedDtor();
}

void RcptInfoRemoveRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void RcptInfoRemoveRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RcptInfoRemoveRequest::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RcptInfoRemoveRequest& RcptInfoRemoveRequest::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

RcptInfoRemoveRequest* RcptInfoRemoveRequest::New(::google::protobuf::Arena* arena) const {
  RcptInfoRemoveRequest* n = new RcptInfoRemoveRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RcptInfoRemoveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.RcptInfoRemoveRequest)
  if (has_baserequest()) {
    GOOGLE_DCHECK(baserequest_ != NULL);
    baserequest_->::micromsg::BaseRequest::Clear();
  }
  id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RcptInfoRemoveRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.RcptInfoRemoveRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.RcptInfoRemoveRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.RcptInfoRemoveRequest)
  return false;
#undef DO_
}

void RcptInfoRemoveRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.RcptInfoRemoveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required uint32 id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.RcptInfoRemoveRequest)
}

::google::protobuf::uint8* RcptInfoRemoveRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.RcptInfoRemoveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required uint32 id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.RcptInfoRemoveRequest)
  return target;
}

size_t RcptInfoRemoveRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.RcptInfoRemoveRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_id()) {
    // required uint32 id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  return total_size;
}
size_t RcptInfoRemoveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.RcptInfoRemoveRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required uint32 id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RcptInfoRemoveRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.RcptInfoRemoveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RcptInfoRemoveRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RcptInfoRemoveRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.RcptInfoRemoveRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.RcptInfoRemoveRequest)
    MergeFrom(*source);
  }
}

void RcptInfoRemoveRequest::MergeFrom(const RcptInfoRemoveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.RcptInfoRemoveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RcptInfoRemoveRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.RcptInfoRemoveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RcptInfoRemoveRequest::CopyFrom(const RcptInfoRemoveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.RcptInfoRemoveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RcptInfoRemoveRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void RcptInfoRemoveRequest::Swap(RcptInfoRemoveRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RcptInfoRemoveRequest::InternalSwap(RcptInfoRemoveRequest* other) {
  std::swap(baserequest_, other->baserequest_);
  std::swap(id_, other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RcptInfoRemoveRequest::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RcptInfoRemoveRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool RcptInfoRemoveRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RcptInfoRemoveRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
void RcptInfoRemoveRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
void RcptInfoRemoveRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& RcptInfoRemoveRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoRemoveRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* RcptInfoRemoveRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoRemoveRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* RcptInfoRemoveRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoRemoveRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void RcptInfoRemoveRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoRemoveRequest.BaseRequest)
}

// required uint32 id = 2;
bool RcptInfoRemoveRequest::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RcptInfoRemoveRequest::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
void RcptInfoRemoveRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void RcptInfoRemoveRequest::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 RcptInfoRemoveRequest::id() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoRemoveRequest.id)
  return id_;
}
void RcptInfoRemoveRequest::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RcptInfoRemoveRequest.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RcptInfoRemoveResponse::kIdFieldNumber;
const int RcptInfoRemoveResponse::kRcptinfolistFieldNumber;
const int RcptInfoRemoveResponse::kBaseResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RcptInfoRemoveResponse::RcptInfoRemoveResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.RcptInfoRemoveResponse)
}
RcptInfoRemoveResponse::RcptInfoRemoveResponse(const RcptInfoRemoveResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rcptinfolist()) {
    rcptinfolist_ = new ::micromsg::RcptInfoList(*from.rcptinfolist_);
  } else {
    rcptinfolist_ = NULL;
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:micromsg.RcptInfoRemoveResponse)
}

void RcptInfoRemoveResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&rcptinfolist_, 0, reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&rcptinfolist_) + sizeof(id_));
}

RcptInfoRemoveResponse::~RcptInfoRemoveResponse() {
  // @@protoc_insertion_point(destructor:micromsg.RcptInfoRemoveResponse)
  SharedDtor();
}

void RcptInfoRemoveResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete rcptinfolist_;
  }
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void RcptInfoRemoveResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RcptInfoRemoveResponse::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RcptInfoRemoveResponse& RcptInfoRemoveResponse::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

RcptInfoRemoveResponse* RcptInfoRemoveResponse::New(::google::protobuf::Arena* arena) const {
  RcptInfoRemoveResponse* n = new RcptInfoRemoveResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RcptInfoRemoveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.RcptInfoRemoveResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_rcptinfolist()) {
      GOOGLE_DCHECK(rcptinfolist_ != NULL);
      rcptinfolist_->::micromsg::RcptInfoList::Clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RcptInfoRemoveResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.RcptInfoRemoveResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.RcptInfoList rcptinfolist = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rcptinfolist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.BaseResponse BaseResponse = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.RcptInfoRemoveResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.RcptInfoRemoveResponse)
  return false;
#undef DO_
}

void RcptInfoRemoveResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.RcptInfoRemoveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required .micromsg.RcptInfoList rcptinfolist = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->rcptinfolist_, output);
  }

  // required .micromsg.BaseResponse BaseResponse = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->baseresponse_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.RcptInfoRemoveResponse)
}

::google::protobuf::uint8* RcptInfoRemoveResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.RcptInfoRemoveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required .micromsg.RcptInfoList rcptinfolist = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->rcptinfolist_, deterministic, target);
  }

  // required .micromsg.BaseResponse BaseResponse = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->baseresponse_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.RcptInfoRemoveResponse)
  return target;
}

size_t RcptInfoRemoveResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.RcptInfoRemoveResponse)
  size_t total_size = 0;

  if (has_rcptinfolist()) {
    // required .micromsg.RcptInfoList rcptinfolist = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rcptinfolist_);
  }

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_id()) {
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  return total_size;
}
size_t RcptInfoRemoveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.RcptInfoRemoveResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .micromsg.RcptInfoList rcptinfolist = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rcptinfolist_);

    // required .micromsg.BaseResponse BaseResponse = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RcptInfoRemoveResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.RcptInfoRemoveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RcptInfoRemoveResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RcptInfoRemoveResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.RcptInfoRemoveResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.RcptInfoRemoveResponse)
    MergeFrom(*source);
  }
}

void RcptInfoRemoveResponse::MergeFrom(const RcptInfoRemoveResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.RcptInfoRemoveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_rcptinfolist()->::micromsg::RcptInfoList::MergeFrom(from.rcptinfolist());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000004u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RcptInfoRemoveResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.RcptInfoRemoveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RcptInfoRemoveResponse::CopyFrom(const RcptInfoRemoveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.RcptInfoRemoveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RcptInfoRemoveResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (has_rcptinfolist()) {
    if (!this->rcptinfolist_->IsInitialized()) return false;
  }
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void RcptInfoRemoveResponse::Swap(RcptInfoRemoveResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RcptInfoRemoveResponse::InternalSwap(RcptInfoRemoveResponse* other) {
  std::swap(rcptinfolist_, other->rcptinfolist_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(id_, other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RcptInfoRemoveResponse::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RcptInfoRemoveResponse

// required uint32 id = 1;
bool RcptInfoRemoveResponse::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RcptInfoRemoveResponse::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
void RcptInfoRemoveResponse::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void RcptInfoRemoveResponse::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 RcptInfoRemoveResponse::id() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoRemoveResponse.id)
  return id_;
}
void RcptInfoRemoveResponse::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RcptInfoRemoveResponse.id)
}

// required .micromsg.RcptInfoList rcptinfolist = 2;
bool RcptInfoRemoveResponse::has_rcptinfolist() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RcptInfoRemoveResponse::set_has_rcptinfolist() {
  _has_bits_[0] |= 0x00000001u;
}
void RcptInfoRemoveResponse::clear_has_rcptinfolist() {
  _has_bits_[0] &= ~0x00000001u;
}
void RcptInfoRemoveResponse::clear_rcptinfolist() {
  if (rcptinfolist_ != NULL) rcptinfolist_->::micromsg::RcptInfoList::Clear();
  clear_has_rcptinfolist();
}
const ::micromsg::RcptInfoList& RcptInfoRemoveResponse::rcptinfolist() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoRemoveResponse.rcptinfolist)
  return rcptinfolist_ != NULL ? *rcptinfolist_
                         : *::micromsg::RcptInfoList::internal_default_instance();
}
::micromsg::RcptInfoList* RcptInfoRemoveResponse::mutable_rcptinfolist() {
  set_has_rcptinfolist();
  if (rcptinfolist_ == NULL) {
    rcptinfolist_ = new ::micromsg::RcptInfoList;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoRemoveResponse.rcptinfolist)
  return rcptinfolist_;
}
::micromsg::RcptInfoList* RcptInfoRemoveResponse::release_rcptinfolist() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoRemoveResponse.rcptinfolist)
  clear_has_rcptinfolist();
  ::micromsg::RcptInfoList* temp = rcptinfolist_;
  rcptinfolist_ = NULL;
  return temp;
}
void RcptInfoRemoveResponse::set_allocated_rcptinfolist(::micromsg::RcptInfoList* rcptinfolist) {
  delete rcptinfolist_;
  rcptinfolist_ = rcptinfolist;
  if (rcptinfolist) {
    set_has_rcptinfolist();
  } else {
    clear_has_rcptinfolist();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoRemoveResponse.rcptinfolist)
}

// required .micromsg.BaseResponse BaseResponse = 3;
bool RcptInfoRemoveResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RcptInfoRemoveResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
void RcptInfoRemoveResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
void RcptInfoRemoveResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& RcptInfoRemoveResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoRemoveResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* RcptInfoRemoveResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoRemoveResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* RcptInfoRemoveResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoRemoveResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void RcptInfoRemoveResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoRemoveResponse.BaseResponse)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RcptInfoQueryRequest::kBaseRequestFieldNumber;
const int RcptInfoQueryRequest::kTimestampFieldNumber;
const int RcptInfoQueryRequest::kWebviewurlFieldNumber;
const int RcptInfoQueryRequest::kAppidFieldNumber;
const int RcptInfoQueryRequest::kSceneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RcptInfoQueryRequest::RcptInfoQueryRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.RcptInfoQueryRequest)
}
RcptInfoQueryRequest::RcptInfoQueryRequest(const RcptInfoQueryRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  webviewurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_webviewurl()) {
    webviewurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.webviewurl_);
  }
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appid()) {
    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    reinterpret_cast<char*>(&scene_) -
    reinterpret_cast<char*>(&timestamp_) + sizeof(scene_));
  // @@protoc_insertion_point(copy_constructor:micromsg.RcptInfoQueryRequest)
}

void RcptInfoQueryRequest::SharedCtor() {
  _cached_size_ = 0;
  webviewurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&scene_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(scene_));
}

RcptInfoQueryRequest::~RcptInfoQueryRequest() {
  // @@protoc_insertion_point(destructor:micromsg.RcptInfoQueryRequest)
  SharedDtor();
}

void RcptInfoQueryRequest::SharedDtor() {
  webviewurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void RcptInfoQueryRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RcptInfoQueryRequest::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RcptInfoQueryRequest& RcptInfoQueryRequest::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

RcptInfoQueryRequest* RcptInfoQueryRequest::New(::google::protobuf::Arena* arena) const {
  RcptInfoQueryRequest* n = new RcptInfoQueryRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RcptInfoQueryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.RcptInfoQueryRequest)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_webviewurl()) {
      GOOGLE_DCHECK(!webviewurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*webviewurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_appid()) {
      GOOGLE_DCHECK(!appid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appid_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 24u) {
    ::memset(&timestamp_, 0, reinterpret_cast<char*>(&scene_) -
      reinterpret_cast<char*>(&timestamp_) + sizeof(scene_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RcptInfoQueryRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.RcptInfoQueryRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string webviewurl = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_webviewurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->webviewurl().data(), this->webviewurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RcptInfoQueryRequest.webviewurl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string appid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appid().data(), this->appid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RcptInfoQueryRequest.appid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 scene = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_scene();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.RcptInfoQueryRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.RcptInfoQueryRequest)
  return false;
#undef DO_
}

void RcptInfoQueryRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.RcptInfoQueryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required uint32 timestamp = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->timestamp(), output);
  }

  // optional string webviewurl = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->webviewurl().data(), this->webviewurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcptInfoQueryRequest.webviewurl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->webviewurl(), output);
  }

  // optional string appid = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcptInfoQueryRequest.appid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->appid(), output);
  }

  // optional uint32 scene = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->scene(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.RcptInfoQueryRequest)
}

::google::protobuf::uint8* RcptInfoQueryRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.RcptInfoQueryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required uint32 timestamp = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->timestamp(), target);
  }

  // optional string webviewurl = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->webviewurl().data(), this->webviewurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcptInfoQueryRequest.webviewurl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->webviewurl(), target);
  }

  // optional string appid = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcptInfoQueryRequest.appid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->appid(), target);
  }

  // optional uint32 scene = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->scene(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.RcptInfoQueryRequest)
  return target;
}

size_t RcptInfoQueryRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.RcptInfoQueryRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_timestamp()) {
    // required uint32 timestamp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timestamp());
  }

  return total_size;
}
size_t RcptInfoQueryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.RcptInfoQueryRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000c) ^ 0x0000000c) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required uint32 timestamp = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timestamp());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string webviewurl = 3;
    if (has_webviewurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->webviewurl());
    }

    // optional string appid = 4;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appid());
    }

  }
  // optional uint32 scene = 5;
  if (has_scene()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scene());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RcptInfoQueryRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.RcptInfoQueryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RcptInfoQueryRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RcptInfoQueryRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.RcptInfoQueryRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.RcptInfoQueryRequest)
    MergeFrom(*source);
  }
}

void RcptInfoQueryRequest::MergeFrom(const RcptInfoQueryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.RcptInfoQueryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_webviewurl();
      webviewurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.webviewurl_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_appid();
      appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000008u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000010u) {
      scene_ = from.scene_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RcptInfoQueryRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.RcptInfoQueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RcptInfoQueryRequest::CopyFrom(const RcptInfoQueryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.RcptInfoQueryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RcptInfoQueryRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void RcptInfoQueryRequest::Swap(RcptInfoQueryRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RcptInfoQueryRequest::InternalSwap(RcptInfoQueryRequest* other) {
  webviewurl_.Swap(&other->webviewurl_);
  appid_.Swap(&other->appid_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(timestamp_, other->timestamp_);
  std::swap(scene_, other->scene_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RcptInfoQueryRequest::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RcptInfoQueryRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool RcptInfoQueryRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RcptInfoQueryRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000004u;
}
void RcptInfoQueryRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000004u;
}
void RcptInfoQueryRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& RcptInfoQueryRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoQueryRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* RcptInfoQueryRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoQueryRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* RcptInfoQueryRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoQueryRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void RcptInfoQueryRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoQueryRequest.BaseRequest)
}

// required uint32 timestamp = 2;
bool RcptInfoQueryRequest::has_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RcptInfoQueryRequest::set_has_timestamp() {
  _has_bits_[0] |= 0x00000008u;
}
void RcptInfoQueryRequest::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000008u;
}
void RcptInfoQueryRequest::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
::google::protobuf::uint32 RcptInfoQueryRequest::timestamp() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoQueryRequest.timestamp)
  return timestamp_;
}
void RcptInfoQueryRequest::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RcptInfoQueryRequest.timestamp)
}

// optional string webviewurl = 3;
bool RcptInfoQueryRequest::has_webviewurl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RcptInfoQueryRequest::set_has_webviewurl() {
  _has_bits_[0] |= 0x00000001u;
}
void RcptInfoQueryRequest::clear_has_webviewurl() {
  _has_bits_[0] &= ~0x00000001u;
}
void RcptInfoQueryRequest::clear_webviewurl() {
  webviewurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_webviewurl();
}
const ::std::string& RcptInfoQueryRequest::webviewurl() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoQueryRequest.webviewurl)
  return webviewurl_.GetNoArena();
}
void RcptInfoQueryRequest::set_webviewurl(const ::std::string& value) {
  set_has_webviewurl();
  webviewurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcptInfoQueryRequest.webviewurl)
}
#if LANG_CXX11
void RcptInfoQueryRequest::set_webviewurl(::std::string&& value) {
  set_has_webviewurl();
  webviewurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcptInfoQueryRequest.webviewurl)
}
#endif
void RcptInfoQueryRequest::set_webviewurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_webviewurl();
  webviewurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcptInfoQueryRequest.webviewurl)
}
void RcptInfoQueryRequest::set_webviewurl(const char* value, size_t size) {
  set_has_webviewurl();
  webviewurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcptInfoQueryRequest.webviewurl)
}
::std::string* RcptInfoQueryRequest::mutable_webviewurl() {
  set_has_webviewurl();
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoQueryRequest.webviewurl)
  return webviewurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RcptInfoQueryRequest::release_webviewurl() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoQueryRequest.webviewurl)
  clear_has_webviewurl();
  return webviewurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RcptInfoQueryRequest::set_allocated_webviewurl(::std::string* webviewurl) {
  if (webviewurl != NULL) {
    set_has_webviewurl();
  } else {
    clear_has_webviewurl();
  }
  webviewurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), webviewurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoQueryRequest.webviewurl)
}

// optional string appid = 4;
bool RcptInfoQueryRequest::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RcptInfoQueryRequest::set_has_appid() {
  _has_bits_[0] |= 0x00000002u;
}
void RcptInfoQueryRequest::clear_has_appid() {
  _has_bits_[0] &= ~0x00000002u;
}
void RcptInfoQueryRequest::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
const ::std::string& RcptInfoQueryRequest::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoQueryRequest.appid)
  return appid_.GetNoArena();
}
void RcptInfoQueryRequest::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcptInfoQueryRequest.appid)
}
#if LANG_CXX11
void RcptInfoQueryRequest::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcptInfoQueryRequest.appid)
}
#endif
void RcptInfoQueryRequest::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcptInfoQueryRequest.appid)
}
void RcptInfoQueryRequest::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcptInfoQueryRequest.appid)
}
::std::string* RcptInfoQueryRequest::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoQueryRequest.appid)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RcptInfoQueryRequest::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoQueryRequest.appid)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RcptInfoQueryRequest::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoQueryRequest.appid)
}

// optional uint32 scene = 5;
bool RcptInfoQueryRequest::has_scene() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void RcptInfoQueryRequest::set_has_scene() {
  _has_bits_[0] |= 0x00000010u;
}
void RcptInfoQueryRequest::clear_has_scene() {
  _has_bits_[0] &= ~0x00000010u;
}
void RcptInfoQueryRequest::clear_scene() {
  scene_ = 0u;
  clear_has_scene();
}
::google::protobuf::uint32 RcptInfoQueryRequest::scene() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoQueryRequest.scene)
  return scene_;
}
void RcptInfoQueryRequest::set_scene(::google::protobuf::uint32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RcptInfoQueryRequest.scene)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RcptInfoQueryResponse::kRcptinfolistFieldNumber;
const int RcptInfoQueryResponse::kIslatestFieldNumber;
const int RcptInfoQueryResponse::kBaseResponseFieldNumber;
const int RcptInfoQueryResponse::kAppusernameFieldNumber;
const int RcptInfoQueryResponse::kIsauthorityFieldNumber;
const int RcptInfoQueryResponse::kAppnicknameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RcptInfoQueryResponse::RcptInfoQueryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.RcptInfoQueryResponse)
}
RcptInfoQueryResponse::RcptInfoQueryResponse(const RcptInfoQueryResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appusername()) {
    appusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appusername_);
  }
  appnickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appnickname()) {
    appnickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appnickname_);
  }
  if (from.has_rcptinfolist()) {
    rcptinfolist_ = new ::micromsg::RcptInfoList(*from.rcptinfolist_);
  } else {
    rcptinfolist_ = NULL;
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  ::memcpy(&islatest_, &from.islatest_,
    reinterpret_cast<char*>(&isauthority_) -
    reinterpret_cast<char*>(&islatest_) + sizeof(isauthority_));
  // @@protoc_insertion_point(copy_constructor:micromsg.RcptInfoQueryResponse)
}

void RcptInfoQueryResponse::SharedCtor() {
  _cached_size_ = 0;
  appusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appnickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&rcptinfolist_, 0, reinterpret_cast<char*>(&isauthority_) -
    reinterpret_cast<char*>(&rcptinfolist_) + sizeof(isauthority_));
}

RcptInfoQueryResponse::~RcptInfoQueryResponse() {
  // @@protoc_insertion_point(destructor:micromsg.RcptInfoQueryResponse)
  SharedDtor();
}

void RcptInfoQueryResponse::SharedDtor() {
  appusername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  appnickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete rcptinfolist_;
  }
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void RcptInfoQueryResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RcptInfoQueryResponse::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RcptInfoQueryResponse& RcptInfoQueryResponse::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

RcptInfoQueryResponse* RcptInfoQueryResponse::New(::google::protobuf::Arena* arena) const {
  RcptInfoQueryResponse* n = new RcptInfoQueryResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RcptInfoQueryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.RcptInfoQueryResponse)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_appusername()) {
      GOOGLE_DCHECK(!appusername_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appusername_.UnsafeRawStringPointer())->clear();
    }
    if (has_appnickname()) {
      GOOGLE_DCHECK(!appnickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appnickname_.UnsafeRawStringPointer())->clear();
    }
    if (has_rcptinfolist()) {
      GOOGLE_DCHECK(rcptinfolist_ != NULL);
      rcptinfolist_->::micromsg::RcptInfoList::Clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 48u) {
    ::memset(&islatest_, 0, reinterpret_cast<char*>(&isauthority_) -
      reinterpret_cast<char*>(&islatest_) + sizeof(isauthority_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RcptInfoQueryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.RcptInfoQueryResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.RcptInfoList rcptinfolist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rcptinfolist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 islatest = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_islatest();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &islatest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.BaseResponse BaseResponse = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string appusername = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appusername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appusername().data(), this->appusername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RcptInfoQueryResponse.appusername");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 isauthority = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_isauthority();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &isauthority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string appnickname = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appnickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appnickname().data(), this->appnickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.RcptInfoQueryResponse.appnickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.RcptInfoQueryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.RcptInfoQueryResponse)
  return false;
#undef DO_
}

void RcptInfoQueryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.RcptInfoQueryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.RcptInfoList rcptinfolist = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->rcptinfolist_, output);
  }

  // required uint32 islatest = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->islatest(), output);
  }

  // required .micromsg.BaseResponse BaseResponse = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->baseresponse_, output);
  }

  // optional string appusername = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appusername().data(), this->appusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcptInfoQueryResponse.appusername");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->appusername(), output);
  }

  // optional uint32 isauthority = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->isauthority(), output);
  }

  // optional string appnickname = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appnickname().data(), this->appnickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcptInfoQueryResponse.appnickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->appnickname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.RcptInfoQueryResponse)
}

::google::protobuf::uint8* RcptInfoQueryResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.RcptInfoQueryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.RcptInfoList rcptinfolist = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->rcptinfolist_, deterministic, target);
  }

  // required uint32 islatest = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->islatest(), target);
  }

  // required .micromsg.BaseResponse BaseResponse = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->baseresponse_, deterministic, target);
  }

  // optional string appusername = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appusername().data(), this->appusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcptInfoQueryResponse.appusername");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->appusername(), target);
  }

  // optional uint32 isauthority = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->isauthority(), target);
  }

  // optional string appnickname = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appnickname().data(), this->appnickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.RcptInfoQueryResponse.appnickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->appnickname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.RcptInfoQueryResponse)
  return target;
}

size_t RcptInfoQueryResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.RcptInfoQueryResponse)
  size_t total_size = 0;

  if (has_rcptinfolist()) {
    // required .micromsg.RcptInfoList rcptinfolist = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rcptinfolist_);
  }

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_islatest()) {
    // required uint32 islatest = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->islatest());
  }

  return total_size;
}
size_t RcptInfoQueryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.RcptInfoQueryResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000001c) ^ 0x0000001c) == 0) {  // All required fields are present.
    // required .micromsg.RcptInfoList rcptinfolist = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rcptinfolist_);

    // required .micromsg.BaseResponse BaseResponse = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required uint32 islatest = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->islatest());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string appusername = 4;
    if (has_appusername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appusername());
    }

    // optional string appnickname = 6;
    if (has_appnickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appnickname());
    }

  }
  // optional uint32 isauthority = 5;
  if (has_isauthority()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->isauthority());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RcptInfoQueryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.RcptInfoQueryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RcptInfoQueryResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RcptInfoQueryResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.RcptInfoQueryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.RcptInfoQueryResponse)
    MergeFrom(*source);
  }
}

void RcptInfoQueryResponse::MergeFrom(const RcptInfoQueryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.RcptInfoQueryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_appusername();
      appusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appusername_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_appnickname();
      appnickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appnickname_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_rcptinfolist()->::micromsg::RcptInfoList::MergeFrom(from.rcptinfolist());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000010u) {
      islatest_ = from.islatest_;
    }
    if (cached_has_bits & 0x00000020u) {
      isauthority_ = from.isauthority_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RcptInfoQueryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.RcptInfoQueryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RcptInfoQueryResponse::CopyFrom(const RcptInfoQueryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.RcptInfoQueryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RcptInfoQueryResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001c) != 0x0000001c) return false;
  if (has_rcptinfolist()) {
    if (!this->rcptinfolist_->IsInitialized()) return false;
  }
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void RcptInfoQueryResponse::Swap(RcptInfoQueryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RcptInfoQueryResponse::InternalSwap(RcptInfoQueryResponse* other) {
  appusername_.Swap(&other->appusername_);
  appnickname_.Swap(&other->appnickname_);
  std::swap(rcptinfolist_, other->rcptinfolist_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(islatest_, other->islatest_);
  std::swap(isauthority_, other->isauthority_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RcptInfoQueryResponse::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RcptInfoQueryResponse

// required .micromsg.RcptInfoList rcptinfolist = 1;
bool RcptInfoQueryResponse::has_rcptinfolist() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RcptInfoQueryResponse::set_has_rcptinfolist() {
  _has_bits_[0] |= 0x00000004u;
}
void RcptInfoQueryResponse::clear_has_rcptinfolist() {
  _has_bits_[0] &= ~0x00000004u;
}
void RcptInfoQueryResponse::clear_rcptinfolist() {
  if (rcptinfolist_ != NULL) rcptinfolist_->::micromsg::RcptInfoList::Clear();
  clear_has_rcptinfolist();
}
const ::micromsg::RcptInfoList& RcptInfoQueryResponse::rcptinfolist() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoQueryResponse.rcptinfolist)
  return rcptinfolist_ != NULL ? *rcptinfolist_
                         : *::micromsg::RcptInfoList::internal_default_instance();
}
::micromsg::RcptInfoList* RcptInfoQueryResponse::mutable_rcptinfolist() {
  set_has_rcptinfolist();
  if (rcptinfolist_ == NULL) {
    rcptinfolist_ = new ::micromsg::RcptInfoList;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoQueryResponse.rcptinfolist)
  return rcptinfolist_;
}
::micromsg::RcptInfoList* RcptInfoQueryResponse::release_rcptinfolist() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoQueryResponse.rcptinfolist)
  clear_has_rcptinfolist();
  ::micromsg::RcptInfoList* temp = rcptinfolist_;
  rcptinfolist_ = NULL;
  return temp;
}
void RcptInfoQueryResponse::set_allocated_rcptinfolist(::micromsg::RcptInfoList* rcptinfolist) {
  delete rcptinfolist_;
  rcptinfolist_ = rcptinfolist;
  if (rcptinfolist) {
    set_has_rcptinfolist();
  } else {
    clear_has_rcptinfolist();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoQueryResponse.rcptinfolist)
}

// required uint32 islatest = 2;
bool RcptInfoQueryResponse::has_islatest() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void RcptInfoQueryResponse::set_has_islatest() {
  _has_bits_[0] |= 0x00000010u;
}
void RcptInfoQueryResponse::clear_has_islatest() {
  _has_bits_[0] &= ~0x00000010u;
}
void RcptInfoQueryResponse::clear_islatest() {
  islatest_ = 0u;
  clear_has_islatest();
}
::google::protobuf::uint32 RcptInfoQueryResponse::islatest() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoQueryResponse.islatest)
  return islatest_;
}
void RcptInfoQueryResponse::set_islatest(::google::protobuf::uint32 value) {
  set_has_islatest();
  islatest_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RcptInfoQueryResponse.islatest)
}

// required .micromsg.BaseResponse BaseResponse = 3;
bool RcptInfoQueryResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RcptInfoQueryResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000008u;
}
void RcptInfoQueryResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000008u;
}
void RcptInfoQueryResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& RcptInfoQueryResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoQueryResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* RcptInfoQueryResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoQueryResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* RcptInfoQueryResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoQueryResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void RcptInfoQueryResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoQueryResponse.BaseResponse)
}

// optional string appusername = 4;
bool RcptInfoQueryResponse::has_appusername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RcptInfoQueryResponse::set_has_appusername() {
  _has_bits_[0] |= 0x00000001u;
}
void RcptInfoQueryResponse::clear_has_appusername() {
  _has_bits_[0] &= ~0x00000001u;
}
void RcptInfoQueryResponse::clear_appusername() {
  appusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appusername();
}
const ::std::string& RcptInfoQueryResponse::appusername() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoQueryResponse.appusername)
  return appusername_.GetNoArena();
}
void RcptInfoQueryResponse::set_appusername(const ::std::string& value) {
  set_has_appusername();
  appusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcptInfoQueryResponse.appusername)
}
#if LANG_CXX11
void RcptInfoQueryResponse::set_appusername(::std::string&& value) {
  set_has_appusername();
  appusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcptInfoQueryResponse.appusername)
}
#endif
void RcptInfoQueryResponse::set_appusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appusername();
  appusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcptInfoQueryResponse.appusername)
}
void RcptInfoQueryResponse::set_appusername(const char* value, size_t size) {
  set_has_appusername();
  appusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcptInfoQueryResponse.appusername)
}
::std::string* RcptInfoQueryResponse::mutable_appusername() {
  set_has_appusername();
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoQueryResponse.appusername)
  return appusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RcptInfoQueryResponse::release_appusername() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoQueryResponse.appusername)
  clear_has_appusername();
  return appusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RcptInfoQueryResponse::set_allocated_appusername(::std::string* appusername) {
  if (appusername != NULL) {
    set_has_appusername();
  } else {
    clear_has_appusername();
  }
  appusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appusername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoQueryResponse.appusername)
}

// optional uint32 isauthority = 5;
bool RcptInfoQueryResponse::has_isauthority() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void RcptInfoQueryResponse::set_has_isauthority() {
  _has_bits_[0] |= 0x00000020u;
}
void RcptInfoQueryResponse::clear_has_isauthority() {
  _has_bits_[0] &= ~0x00000020u;
}
void RcptInfoQueryResponse::clear_isauthority() {
  isauthority_ = 0u;
  clear_has_isauthority();
}
::google::protobuf::uint32 RcptInfoQueryResponse::isauthority() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoQueryResponse.isauthority)
  return isauthority_;
}
void RcptInfoQueryResponse::set_isauthority(::google::protobuf::uint32 value) {
  set_has_isauthority();
  isauthority_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RcptInfoQueryResponse.isauthority)
}

// optional string appnickname = 6;
bool RcptInfoQueryResponse::has_appnickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RcptInfoQueryResponse::set_has_appnickname() {
  _has_bits_[0] |= 0x00000002u;
}
void RcptInfoQueryResponse::clear_has_appnickname() {
  _has_bits_[0] &= ~0x00000002u;
}
void RcptInfoQueryResponse::clear_appnickname() {
  appnickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appnickname();
}
const ::std::string& RcptInfoQueryResponse::appnickname() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoQueryResponse.appnickname)
  return appnickname_.GetNoArena();
}
void RcptInfoQueryResponse::set_appnickname(const ::std::string& value) {
  set_has_appnickname();
  appnickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcptInfoQueryResponse.appnickname)
}
#if LANG_CXX11
void RcptInfoQueryResponse::set_appnickname(::std::string&& value) {
  set_has_appnickname();
  appnickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcptInfoQueryResponse.appnickname)
}
#endif
void RcptInfoQueryResponse::set_appnickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appnickname();
  appnickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcptInfoQueryResponse.appnickname)
}
void RcptInfoQueryResponse::set_appnickname(const char* value, size_t size) {
  set_has_appnickname();
  appnickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcptInfoQueryResponse.appnickname)
}
::std::string* RcptInfoQueryResponse::mutable_appnickname() {
  set_has_appnickname();
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoQueryResponse.appnickname)
  return appnickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RcptInfoQueryResponse::release_appnickname() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoQueryResponse.appnickname)
  clear_has_appnickname();
  return appnickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RcptInfoQueryResponse::set_allocated_appnickname(::std::string* appnickname) {
  if (appnickname != NULL) {
    set_has_appnickname();
  } else {
    clear_has_appnickname();
  }
  appnickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appnickname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoQueryResponse.appnickname)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RcptInfoUpdateRequest::kBaseRequestFieldNumber;
const int RcptInfoUpdateRequest::kRcptinfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RcptInfoUpdateRequest::RcptInfoUpdateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.RcptInfoUpdateRequest)
}
RcptInfoUpdateRequest::RcptInfoUpdateRequest(const RcptInfoUpdateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  if (from.has_rcptinfo()) {
    rcptinfo_ = new ::micromsg::RcptInfoNode(*from.rcptinfo_);
  } else {
    rcptinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.RcptInfoUpdateRequest)
}

void RcptInfoUpdateRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&rcptinfo_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(rcptinfo_));
}

RcptInfoUpdateRequest::~RcptInfoUpdateRequest() {
  // @@protoc_insertion_point(destructor:micromsg.RcptInfoUpdateRequest)
  SharedDtor();
}

void RcptInfoUpdateRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
  if (this != internal_default_instance()) {
    delete rcptinfo_;
  }
}

void RcptInfoUpdateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RcptInfoUpdateRequest::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RcptInfoUpdateRequest& RcptInfoUpdateRequest::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

RcptInfoUpdateRequest* RcptInfoUpdateRequest::New(::google::protobuf::Arena* arena) const {
  RcptInfoUpdateRequest* n = new RcptInfoUpdateRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RcptInfoUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.RcptInfoUpdateRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
    if (has_rcptinfo()) {
      GOOGLE_DCHECK(rcptinfo_ != NULL);
      rcptinfo_->::micromsg::RcptInfoNode::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RcptInfoUpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.RcptInfoUpdateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.RcptInfoNode rcptinfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rcptinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.RcptInfoUpdateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.RcptInfoUpdateRequest)
  return false;
#undef DO_
}

void RcptInfoUpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.RcptInfoUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required .micromsg.RcptInfoNode rcptinfo = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->rcptinfo_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.RcptInfoUpdateRequest)
}

::google::protobuf::uint8* RcptInfoUpdateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.RcptInfoUpdateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required .micromsg.RcptInfoNode rcptinfo = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->rcptinfo_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.RcptInfoUpdateRequest)
  return target;
}

size_t RcptInfoUpdateRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.RcptInfoUpdateRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_rcptinfo()) {
    // required .micromsg.RcptInfoNode rcptinfo = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rcptinfo_);
  }

  return total_size;
}
size_t RcptInfoUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.RcptInfoUpdateRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required .micromsg.RcptInfoNode rcptinfo = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rcptinfo_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RcptInfoUpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.RcptInfoUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RcptInfoUpdateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RcptInfoUpdateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.RcptInfoUpdateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.RcptInfoUpdateRequest)
    MergeFrom(*source);
  }
}

void RcptInfoUpdateRequest::MergeFrom(const RcptInfoUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.RcptInfoUpdateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_rcptinfo()->::micromsg::RcptInfoNode::MergeFrom(from.rcptinfo());
    }
  }
}

void RcptInfoUpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.RcptInfoUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RcptInfoUpdateRequest::CopyFrom(const RcptInfoUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.RcptInfoUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RcptInfoUpdateRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  if (has_rcptinfo()) {
    if (!this->rcptinfo_->IsInitialized()) return false;
  }
  return true;
}

void RcptInfoUpdateRequest::Swap(RcptInfoUpdateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RcptInfoUpdateRequest::InternalSwap(RcptInfoUpdateRequest* other) {
  std::swap(baserequest_, other->baserequest_);
  std::swap(rcptinfo_, other->rcptinfo_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RcptInfoUpdateRequest::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RcptInfoUpdateRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool RcptInfoUpdateRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RcptInfoUpdateRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
void RcptInfoUpdateRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
void RcptInfoUpdateRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& RcptInfoUpdateRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoUpdateRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* RcptInfoUpdateRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoUpdateRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* RcptInfoUpdateRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoUpdateRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void RcptInfoUpdateRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoUpdateRequest.BaseRequest)
}

// required .micromsg.RcptInfoNode rcptinfo = 2;
bool RcptInfoUpdateRequest::has_rcptinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RcptInfoUpdateRequest::set_has_rcptinfo() {
  _has_bits_[0] |= 0x00000002u;
}
void RcptInfoUpdateRequest::clear_has_rcptinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
void RcptInfoUpdateRequest::clear_rcptinfo() {
  if (rcptinfo_ != NULL) rcptinfo_->::micromsg::RcptInfoNode::Clear();
  clear_has_rcptinfo();
}
const ::micromsg::RcptInfoNode& RcptInfoUpdateRequest::rcptinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoUpdateRequest.rcptinfo)
  return rcptinfo_ != NULL ? *rcptinfo_
                         : *::micromsg::RcptInfoNode::internal_default_instance();
}
::micromsg::RcptInfoNode* RcptInfoUpdateRequest::mutable_rcptinfo() {
  set_has_rcptinfo();
  if (rcptinfo_ == NULL) {
    rcptinfo_ = new ::micromsg::RcptInfoNode;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoUpdateRequest.rcptinfo)
  return rcptinfo_;
}
::micromsg::RcptInfoNode* RcptInfoUpdateRequest::release_rcptinfo() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoUpdateRequest.rcptinfo)
  clear_has_rcptinfo();
  ::micromsg::RcptInfoNode* temp = rcptinfo_;
  rcptinfo_ = NULL;
  return temp;
}
void RcptInfoUpdateRequest::set_allocated_rcptinfo(::micromsg::RcptInfoNode* rcptinfo) {
  delete rcptinfo_;
  rcptinfo_ = rcptinfo;
  if (rcptinfo) {
    set_has_rcptinfo();
  } else {
    clear_has_rcptinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoUpdateRequest.rcptinfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RcptInfoUpdateResponse::kRcptinfolistFieldNumber;
const int RcptInfoUpdateResponse::kBaseResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RcptInfoUpdateResponse::RcptInfoUpdateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.RcptInfoUpdateResponse)
}
RcptInfoUpdateResponse::RcptInfoUpdateResponse(const RcptInfoUpdateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rcptinfolist()) {
    rcptinfolist_ = new ::micromsg::RcptInfoList(*from.rcptinfolist_);
  } else {
    rcptinfolist_ = NULL;
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.RcptInfoUpdateResponse)
}

void RcptInfoUpdateResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&rcptinfolist_, 0, reinterpret_cast<char*>(&baseresponse_) -
    reinterpret_cast<char*>(&rcptinfolist_) + sizeof(baseresponse_));
}

RcptInfoUpdateResponse::~RcptInfoUpdateResponse() {
  // @@protoc_insertion_point(destructor:micromsg.RcptInfoUpdateResponse)
  SharedDtor();
}

void RcptInfoUpdateResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete rcptinfolist_;
  }
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void RcptInfoUpdateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RcptInfoUpdateResponse::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RcptInfoUpdateResponse& RcptInfoUpdateResponse::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

RcptInfoUpdateResponse* RcptInfoUpdateResponse::New(::google::protobuf::Arena* arena) const {
  RcptInfoUpdateResponse* n = new RcptInfoUpdateResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RcptInfoUpdateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.RcptInfoUpdateResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_rcptinfolist()) {
      GOOGLE_DCHECK(rcptinfolist_ != NULL);
      rcptinfolist_->::micromsg::RcptInfoList::Clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RcptInfoUpdateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.RcptInfoUpdateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.RcptInfoList rcptinfolist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rcptinfolist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.BaseResponse BaseResponse = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.RcptInfoUpdateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.RcptInfoUpdateResponse)
  return false;
#undef DO_
}

void RcptInfoUpdateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.RcptInfoUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.RcptInfoList rcptinfolist = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->rcptinfolist_, output);
  }

  // required .micromsg.BaseResponse BaseResponse = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->baseresponse_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.RcptInfoUpdateResponse)
}

::google::protobuf::uint8* RcptInfoUpdateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.RcptInfoUpdateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.RcptInfoList rcptinfolist = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->rcptinfolist_, deterministic, target);
  }

  // required .micromsg.BaseResponse BaseResponse = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->baseresponse_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.RcptInfoUpdateResponse)
  return target;
}

size_t RcptInfoUpdateResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.RcptInfoUpdateResponse)
  size_t total_size = 0;

  if (has_rcptinfolist()) {
    // required .micromsg.RcptInfoList rcptinfolist = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rcptinfolist_);
  }

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  return total_size;
}
size_t RcptInfoUpdateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.RcptInfoUpdateResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .micromsg.RcptInfoList rcptinfolist = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rcptinfolist_);

    // required .micromsg.BaseResponse BaseResponse = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RcptInfoUpdateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.RcptInfoUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RcptInfoUpdateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RcptInfoUpdateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.RcptInfoUpdateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.RcptInfoUpdateResponse)
    MergeFrom(*source);
  }
}

void RcptInfoUpdateResponse::MergeFrom(const RcptInfoUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.RcptInfoUpdateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_rcptinfolist()->::micromsg::RcptInfoList::MergeFrom(from.rcptinfolist());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
  }
}

void RcptInfoUpdateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.RcptInfoUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RcptInfoUpdateResponse::CopyFrom(const RcptInfoUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.RcptInfoUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RcptInfoUpdateResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_rcptinfolist()) {
    if (!this->rcptinfolist_->IsInitialized()) return false;
  }
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void RcptInfoUpdateResponse::Swap(RcptInfoUpdateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RcptInfoUpdateResponse::InternalSwap(RcptInfoUpdateResponse* other) {
  std::swap(rcptinfolist_, other->rcptinfolist_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RcptInfoUpdateResponse::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RcptInfoUpdateResponse

// required .micromsg.RcptInfoList rcptinfolist = 1;
bool RcptInfoUpdateResponse::has_rcptinfolist() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RcptInfoUpdateResponse::set_has_rcptinfolist() {
  _has_bits_[0] |= 0x00000001u;
}
void RcptInfoUpdateResponse::clear_has_rcptinfolist() {
  _has_bits_[0] &= ~0x00000001u;
}
void RcptInfoUpdateResponse::clear_rcptinfolist() {
  if (rcptinfolist_ != NULL) rcptinfolist_->::micromsg::RcptInfoList::Clear();
  clear_has_rcptinfolist();
}
const ::micromsg::RcptInfoList& RcptInfoUpdateResponse::rcptinfolist() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoUpdateResponse.rcptinfolist)
  return rcptinfolist_ != NULL ? *rcptinfolist_
                         : *::micromsg::RcptInfoList::internal_default_instance();
}
::micromsg::RcptInfoList* RcptInfoUpdateResponse::mutable_rcptinfolist() {
  set_has_rcptinfolist();
  if (rcptinfolist_ == NULL) {
    rcptinfolist_ = new ::micromsg::RcptInfoList;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoUpdateResponse.rcptinfolist)
  return rcptinfolist_;
}
::micromsg::RcptInfoList* RcptInfoUpdateResponse::release_rcptinfolist() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoUpdateResponse.rcptinfolist)
  clear_has_rcptinfolist();
  ::micromsg::RcptInfoList* temp = rcptinfolist_;
  rcptinfolist_ = NULL;
  return temp;
}
void RcptInfoUpdateResponse::set_allocated_rcptinfolist(::micromsg::RcptInfoList* rcptinfolist) {
  delete rcptinfolist_;
  rcptinfolist_ = rcptinfolist;
  if (rcptinfolist) {
    set_has_rcptinfolist();
  } else {
    clear_has_rcptinfolist();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoUpdateResponse.rcptinfolist)
}

// required .micromsg.BaseResponse BaseResponse = 2;
bool RcptInfoUpdateResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RcptInfoUpdateResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
void RcptInfoUpdateResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
void RcptInfoUpdateResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& RcptInfoUpdateResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoUpdateResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* RcptInfoUpdateResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoUpdateResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* RcptInfoUpdateResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoUpdateResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void RcptInfoUpdateResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoUpdateResponse.BaseResponse)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RcptInfoTouchRequest::kBaseRequestFieldNumber;
const int RcptInfoTouchRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RcptInfoTouchRequest::RcptInfoTouchRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.RcptInfoTouchRequest)
}
RcptInfoTouchRequest::RcptInfoTouchRequest(const RcptInfoTouchRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:micromsg.RcptInfoTouchRequest)
}

void RcptInfoTouchRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(id_));
}

RcptInfoTouchRequest::~RcptInfoTouchRequest() {
  // @@protoc_insertion_point(destructor:micromsg.RcptInfoTouchRequest)
  SharedDtor();
}

void RcptInfoTouchRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void RcptInfoTouchRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RcptInfoTouchRequest::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RcptInfoTouchRequest& RcptInfoTouchRequest::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

RcptInfoTouchRequest* RcptInfoTouchRequest::New(::google::protobuf::Arena* arena) const {
  RcptInfoTouchRequest* n = new RcptInfoTouchRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RcptInfoTouchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.RcptInfoTouchRequest)
  if (has_baserequest()) {
    GOOGLE_DCHECK(baserequest_ != NULL);
    baserequest_->::micromsg::BaseRequest::Clear();
  }
  id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RcptInfoTouchRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.RcptInfoTouchRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.RcptInfoTouchRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.RcptInfoTouchRequest)
  return false;
#undef DO_
}

void RcptInfoTouchRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.RcptInfoTouchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required uint32 id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.RcptInfoTouchRequest)
}

::google::protobuf::uint8* RcptInfoTouchRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.RcptInfoTouchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required uint32 id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.RcptInfoTouchRequest)
  return target;
}

size_t RcptInfoTouchRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.RcptInfoTouchRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_id()) {
    // required uint32 id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  return total_size;
}
size_t RcptInfoTouchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.RcptInfoTouchRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required uint32 id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RcptInfoTouchRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.RcptInfoTouchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RcptInfoTouchRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RcptInfoTouchRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.RcptInfoTouchRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.RcptInfoTouchRequest)
    MergeFrom(*source);
  }
}

void RcptInfoTouchRequest::MergeFrom(const RcptInfoTouchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.RcptInfoTouchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000002u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RcptInfoTouchRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.RcptInfoTouchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RcptInfoTouchRequest::CopyFrom(const RcptInfoTouchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.RcptInfoTouchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RcptInfoTouchRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void RcptInfoTouchRequest::Swap(RcptInfoTouchRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RcptInfoTouchRequest::InternalSwap(RcptInfoTouchRequest* other) {
  std::swap(baserequest_, other->baserequest_);
  std::swap(id_, other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RcptInfoTouchRequest::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RcptInfoTouchRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool RcptInfoTouchRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RcptInfoTouchRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
void RcptInfoTouchRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
void RcptInfoTouchRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& RcptInfoTouchRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoTouchRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* RcptInfoTouchRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoTouchRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* RcptInfoTouchRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoTouchRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void RcptInfoTouchRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoTouchRequest.BaseRequest)
}

// required uint32 id = 2;
bool RcptInfoTouchRequest::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RcptInfoTouchRequest::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
void RcptInfoTouchRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void RcptInfoTouchRequest::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 RcptInfoTouchRequest::id() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoTouchRequest.id)
  return id_;
}
void RcptInfoTouchRequest::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RcptInfoTouchRequest.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RcptInfoTouchResponse::kRcptinfolistFieldNumber;
const int RcptInfoTouchResponse::kBaseResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RcptInfoTouchResponse::RcptInfoTouchResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.RcptInfoTouchResponse)
}
RcptInfoTouchResponse::RcptInfoTouchResponse(const RcptInfoTouchResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rcptinfolist()) {
    rcptinfolist_ = new ::micromsg::RcptInfoList(*from.rcptinfolist_);
  } else {
    rcptinfolist_ = NULL;
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.RcptInfoTouchResponse)
}

void RcptInfoTouchResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&rcptinfolist_, 0, reinterpret_cast<char*>(&baseresponse_) -
    reinterpret_cast<char*>(&rcptinfolist_) + sizeof(baseresponse_));
}

RcptInfoTouchResponse::~RcptInfoTouchResponse() {
  // @@protoc_insertion_point(destructor:micromsg.RcptInfoTouchResponse)
  SharedDtor();
}

void RcptInfoTouchResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete rcptinfolist_;
  }
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void RcptInfoTouchResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RcptInfoTouchResponse::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RcptInfoTouchResponse& RcptInfoTouchResponse::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

RcptInfoTouchResponse* RcptInfoTouchResponse::New(::google::protobuf::Arena* arena) const {
  RcptInfoTouchResponse* n = new RcptInfoTouchResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RcptInfoTouchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.RcptInfoTouchResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_rcptinfolist()) {
      GOOGLE_DCHECK(rcptinfolist_ != NULL);
      rcptinfolist_->::micromsg::RcptInfoList::Clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RcptInfoTouchResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.RcptInfoTouchResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.RcptInfoList rcptinfolist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rcptinfolist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.BaseResponse BaseResponse = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.RcptInfoTouchResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.RcptInfoTouchResponse)
  return false;
#undef DO_
}

void RcptInfoTouchResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.RcptInfoTouchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.RcptInfoList rcptinfolist = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->rcptinfolist_, output);
  }

  // required .micromsg.BaseResponse BaseResponse = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->baseresponse_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.RcptInfoTouchResponse)
}

::google::protobuf::uint8* RcptInfoTouchResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.RcptInfoTouchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.RcptInfoList rcptinfolist = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->rcptinfolist_, deterministic, target);
  }

  // required .micromsg.BaseResponse BaseResponse = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->baseresponse_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.RcptInfoTouchResponse)
  return target;
}

size_t RcptInfoTouchResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.RcptInfoTouchResponse)
  size_t total_size = 0;

  if (has_rcptinfolist()) {
    // required .micromsg.RcptInfoList rcptinfolist = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rcptinfolist_);
  }

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  return total_size;
}
size_t RcptInfoTouchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.RcptInfoTouchResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .micromsg.RcptInfoList rcptinfolist = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rcptinfolist_);

    // required .micromsg.BaseResponse BaseResponse = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RcptInfoTouchResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.RcptInfoTouchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RcptInfoTouchResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RcptInfoTouchResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.RcptInfoTouchResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.RcptInfoTouchResponse)
    MergeFrom(*source);
  }
}

void RcptInfoTouchResponse::MergeFrom(const RcptInfoTouchResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.RcptInfoTouchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_rcptinfolist()->::micromsg::RcptInfoList::MergeFrom(from.rcptinfolist());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
  }
}

void RcptInfoTouchResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.RcptInfoTouchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RcptInfoTouchResponse::CopyFrom(const RcptInfoTouchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.RcptInfoTouchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RcptInfoTouchResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_rcptinfolist()) {
    if (!this->rcptinfolist_->IsInitialized()) return false;
  }
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void RcptInfoTouchResponse::Swap(RcptInfoTouchResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RcptInfoTouchResponse::InternalSwap(RcptInfoTouchResponse* other) {
  std::swap(rcptinfolist_, other->rcptinfolist_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RcptInfoTouchResponse::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RcptInfoTouchResponse

// required .micromsg.RcptInfoList rcptinfolist = 1;
bool RcptInfoTouchResponse::has_rcptinfolist() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RcptInfoTouchResponse::set_has_rcptinfolist() {
  _has_bits_[0] |= 0x00000001u;
}
void RcptInfoTouchResponse::clear_has_rcptinfolist() {
  _has_bits_[0] &= ~0x00000001u;
}
void RcptInfoTouchResponse::clear_rcptinfolist() {
  if (rcptinfolist_ != NULL) rcptinfolist_->::micromsg::RcptInfoList::Clear();
  clear_has_rcptinfolist();
}
const ::micromsg::RcptInfoList& RcptInfoTouchResponse::rcptinfolist() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoTouchResponse.rcptinfolist)
  return rcptinfolist_ != NULL ? *rcptinfolist_
                         : *::micromsg::RcptInfoList::internal_default_instance();
}
::micromsg::RcptInfoList* RcptInfoTouchResponse::mutable_rcptinfolist() {
  set_has_rcptinfolist();
  if (rcptinfolist_ == NULL) {
    rcptinfolist_ = new ::micromsg::RcptInfoList;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoTouchResponse.rcptinfolist)
  return rcptinfolist_;
}
::micromsg::RcptInfoList* RcptInfoTouchResponse::release_rcptinfolist() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoTouchResponse.rcptinfolist)
  clear_has_rcptinfolist();
  ::micromsg::RcptInfoList* temp = rcptinfolist_;
  rcptinfolist_ = NULL;
  return temp;
}
void RcptInfoTouchResponse::set_allocated_rcptinfolist(::micromsg::RcptInfoList* rcptinfolist) {
  delete rcptinfolist_;
  rcptinfolist_ = rcptinfolist;
  if (rcptinfolist) {
    set_has_rcptinfolist();
  } else {
    clear_has_rcptinfolist();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoTouchResponse.rcptinfolist)
}

// required .micromsg.BaseResponse BaseResponse = 2;
bool RcptInfoTouchResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RcptInfoTouchResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
void RcptInfoTouchResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
void RcptInfoTouchResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& RcptInfoTouchResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoTouchResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* RcptInfoTouchResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoTouchResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* RcptInfoTouchResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoTouchResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void RcptInfoTouchResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoTouchResponse.BaseResponse)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RcptInfoImportYiXunRequest::kBaseRequestFieldNumber;
const int RcptInfoImportYiXunRequest::kQqFieldNumber;
const int RcptInfoImportYiXunRequest::kA2KeyFieldNumber;
const int RcptInfoImportYiXunRequest::kNewA2KeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RcptInfoImportYiXunRequest::RcptInfoImportYiXunRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.RcptInfoImportYiXunRequest)
}
RcptInfoImportYiXunRequest::RcptInfoImportYiXunRequest(const RcptInfoImportYiXunRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  if (from.has_a2key()) {
    a2key_ = new ::micromsg::SKBuiltinBuffer_t(*from.a2key_);
  } else {
    a2key_ = NULL;
  }
  if (from.has_newa2key()) {
    newa2key_ = new ::micromsg::SKBuiltinBuffer_t(*from.newa2key_);
  } else {
    newa2key_ = NULL;
  }
  qq_ = from.qq_;
  // @@protoc_insertion_point(copy_constructor:micromsg.RcptInfoImportYiXunRequest)
}

void RcptInfoImportYiXunRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&qq_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(qq_));
}

RcptInfoImportYiXunRequest::~RcptInfoImportYiXunRequest() {
  // @@protoc_insertion_point(destructor:micromsg.RcptInfoImportYiXunRequest)
  SharedDtor();
}

void RcptInfoImportYiXunRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
  if (this != internal_default_instance()) {
    delete a2key_;
  }
  if (this != internal_default_instance()) {
    delete newa2key_;
  }
}

void RcptInfoImportYiXunRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RcptInfoImportYiXunRequest::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RcptInfoImportYiXunRequest& RcptInfoImportYiXunRequest::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

RcptInfoImportYiXunRequest* RcptInfoImportYiXunRequest::New(::google::protobuf::Arena* arena) const {
  RcptInfoImportYiXunRequest* n = new RcptInfoImportYiXunRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RcptInfoImportYiXunRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.RcptInfoImportYiXunRequest)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
    if (has_a2key()) {
      GOOGLE_DCHECK(a2key_ != NULL);
      a2key_->::micromsg::SKBuiltinBuffer_t::Clear();
    }
    if (has_newa2key()) {
      GOOGLE_DCHECK(newa2key_ != NULL);
      newa2key_->::micromsg::SKBuiltinBuffer_t::Clear();
    }
  }
  qq_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RcptInfoImportYiXunRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.RcptInfoImportYiXunRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 qq = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_qq();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &qq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .micromsg.SKBuiltinBuffer_t A2Key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_a2key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .micromsg.SKBuiltinBuffer_t NewA2Key = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_newa2key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.RcptInfoImportYiXunRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.RcptInfoImportYiXunRequest)
  return false;
#undef DO_
}

void RcptInfoImportYiXunRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.RcptInfoImportYiXunRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required uint32 qq = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->qq(), output);
  }

  // optional .micromsg.SKBuiltinBuffer_t A2Key = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->a2key_, output);
  }

  // optional .micromsg.SKBuiltinBuffer_t NewA2Key = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->newa2key_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.RcptInfoImportYiXunRequest)
}

::google::protobuf::uint8* RcptInfoImportYiXunRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.RcptInfoImportYiXunRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required uint32 qq = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->qq(), target);
  }

  // optional .micromsg.SKBuiltinBuffer_t A2Key = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->a2key_, deterministic, target);
  }

  // optional .micromsg.SKBuiltinBuffer_t NewA2Key = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->newa2key_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.RcptInfoImportYiXunRequest)
  return target;
}

size_t RcptInfoImportYiXunRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.RcptInfoImportYiXunRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_qq()) {
    // required uint32 qq = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->qq());
  }

  return total_size;
}
size_t RcptInfoImportYiXunRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.RcptInfoImportYiXunRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000009) ^ 0x00000009) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required uint32 qq = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->qq());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional .micromsg.SKBuiltinBuffer_t A2Key = 3;
    if (has_a2key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->a2key_);
    }

    // optional .micromsg.SKBuiltinBuffer_t NewA2Key = 4;
    if (has_newa2key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->newa2key_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RcptInfoImportYiXunRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.RcptInfoImportYiXunRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RcptInfoImportYiXunRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RcptInfoImportYiXunRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.RcptInfoImportYiXunRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.RcptInfoImportYiXunRequest)
    MergeFrom(*source);
  }
}

void RcptInfoImportYiXunRequest::MergeFrom(const RcptInfoImportYiXunRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.RcptInfoImportYiXunRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_a2key()->::micromsg::SKBuiltinBuffer_t::MergeFrom(from.a2key());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_newa2key()->::micromsg::SKBuiltinBuffer_t::MergeFrom(from.newa2key());
    }
    if (cached_has_bits & 0x00000008u) {
      qq_ = from.qq_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RcptInfoImportYiXunRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.RcptInfoImportYiXunRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RcptInfoImportYiXunRequest::CopyFrom(const RcptInfoImportYiXunRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.RcptInfoImportYiXunRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RcptInfoImportYiXunRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000009) != 0x00000009) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  if (has_a2key()) {
    if (!this->a2key_->IsInitialized()) return false;
  }
  if (has_newa2key()) {
    if (!this->newa2key_->IsInitialized()) return false;
  }
  return true;
}

void RcptInfoImportYiXunRequest::Swap(RcptInfoImportYiXunRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RcptInfoImportYiXunRequest::InternalSwap(RcptInfoImportYiXunRequest* other) {
  std::swap(baserequest_, other->baserequest_);
  std::swap(a2key_, other->a2key_);
  std::swap(newa2key_, other->newa2key_);
  std::swap(qq_, other->qq_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RcptInfoImportYiXunRequest::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RcptInfoImportYiXunRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool RcptInfoImportYiXunRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RcptInfoImportYiXunRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
void RcptInfoImportYiXunRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
void RcptInfoImportYiXunRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& RcptInfoImportYiXunRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoImportYiXunRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* RcptInfoImportYiXunRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoImportYiXunRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* RcptInfoImportYiXunRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoImportYiXunRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void RcptInfoImportYiXunRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoImportYiXunRequest.BaseRequest)
}

// required uint32 qq = 2;
bool RcptInfoImportYiXunRequest::has_qq() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RcptInfoImportYiXunRequest::set_has_qq() {
  _has_bits_[0] |= 0x00000008u;
}
void RcptInfoImportYiXunRequest::clear_has_qq() {
  _has_bits_[0] &= ~0x00000008u;
}
void RcptInfoImportYiXunRequest::clear_qq() {
  qq_ = 0u;
  clear_has_qq();
}
::google::protobuf::uint32 RcptInfoImportYiXunRequest::qq() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoImportYiXunRequest.qq)
  return qq_;
}
void RcptInfoImportYiXunRequest::set_qq(::google::protobuf::uint32 value) {
  set_has_qq();
  qq_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RcptInfoImportYiXunRequest.qq)
}

// optional .micromsg.SKBuiltinBuffer_t A2Key = 3;
bool RcptInfoImportYiXunRequest::has_a2key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RcptInfoImportYiXunRequest::set_has_a2key() {
  _has_bits_[0] |= 0x00000002u;
}
void RcptInfoImportYiXunRequest::clear_has_a2key() {
  _has_bits_[0] &= ~0x00000002u;
}
void RcptInfoImportYiXunRequest::clear_a2key() {
  if (a2key_ != NULL) a2key_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_a2key();
}
const ::micromsg::SKBuiltinBuffer_t& RcptInfoImportYiXunRequest::a2key() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoImportYiXunRequest.A2Key)
  return a2key_ != NULL ? *a2key_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
::micromsg::SKBuiltinBuffer_t* RcptInfoImportYiXunRequest::mutable_a2key() {
  set_has_a2key();
  if (a2key_ == NULL) {
    a2key_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoImportYiXunRequest.A2Key)
  return a2key_;
}
::micromsg::SKBuiltinBuffer_t* RcptInfoImportYiXunRequest::release_a2key() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoImportYiXunRequest.A2Key)
  clear_has_a2key();
  ::micromsg::SKBuiltinBuffer_t* temp = a2key_;
  a2key_ = NULL;
  return temp;
}
void RcptInfoImportYiXunRequest::set_allocated_a2key(::micromsg::SKBuiltinBuffer_t* a2key) {
  delete a2key_;
  a2key_ = a2key;
  if (a2key) {
    set_has_a2key();
  } else {
    clear_has_a2key();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoImportYiXunRequest.A2Key)
}

// optional .micromsg.SKBuiltinBuffer_t NewA2Key = 4;
bool RcptInfoImportYiXunRequest::has_newa2key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RcptInfoImportYiXunRequest::set_has_newa2key() {
  _has_bits_[0] |= 0x00000004u;
}
void RcptInfoImportYiXunRequest::clear_has_newa2key() {
  _has_bits_[0] &= ~0x00000004u;
}
void RcptInfoImportYiXunRequest::clear_newa2key() {
  if (newa2key_ != NULL) newa2key_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_newa2key();
}
const ::micromsg::SKBuiltinBuffer_t& RcptInfoImportYiXunRequest::newa2key() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoImportYiXunRequest.NewA2Key)
  return newa2key_ != NULL ? *newa2key_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
::micromsg::SKBuiltinBuffer_t* RcptInfoImportYiXunRequest::mutable_newa2key() {
  set_has_newa2key();
  if (newa2key_ == NULL) {
    newa2key_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoImportYiXunRequest.NewA2Key)
  return newa2key_;
}
::micromsg::SKBuiltinBuffer_t* RcptInfoImportYiXunRequest::release_newa2key() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoImportYiXunRequest.NewA2Key)
  clear_has_newa2key();
  ::micromsg::SKBuiltinBuffer_t* temp = newa2key_;
  newa2key_ = NULL;
  return temp;
}
void RcptInfoImportYiXunRequest::set_allocated_newa2key(::micromsg::SKBuiltinBuffer_t* newa2key) {
  delete newa2key_;
  newa2key_ = newa2key;
  if (newa2key) {
    set_has_newa2key();
  } else {
    clear_has_newa2key();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoImportYiXunRequest.NewA2Key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RcptInfoImportYiXunResponse::kRcptinfolistFieldNumber;
const int RcptInfoImportYiXunResponse::kRcptinfoimportstatusFieldNumber;
const int RcptInfoImportYiXunResponse::kBaseResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RcptInfoImportYiXunResponse::RcptInfoImportYiXunResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.RcptInfoImportYiXunResponse)
}
RcptInfoImportYiXunResponse::RcptInfoImportYiXunResponse(const RcptInfoImportYiXunResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rcptinfolist()) {
    rcptinfolist_ = new ::micromsg::RcptInfoList(*from.rcptinfolist_);
  } else {
    rcptinfolist_ = NULL;
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  rcptinfoimportstatus_ = from.rcptinfoimportstatus_;
  // @@protoc_insertion_point(copy_constructor:micromsg.RcptInfoImportYiXunResponse)
}

void RcptInfoImportYiXunResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&rcptinfolist_, 0, reinterpret_cast<char*>(&rcptinfoimportstatus_) -
    reinterpret_cast<char*>(&rcptinfolist_) + sizeof(rcptinfoimportstatus_));
}

RcptInfoImportYiXunResponse::~RcptInfoImportYiXunResponse() {
  // @@protoc_insertion_point(destructor:micromsg.RcptInfoImportYiXunResponse)
  SharedDtor();
}

void RcptInfoImportYiXunResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete rcptinfolist_;
  }
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void RcptInfoImportYiXunResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RcptInfoImportYiXunResponse::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RcptInfoImportYiXunResponse& RcptInfoImportYiXunResponse::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

RcptInfoImportYiXunResponse* RcptInfoImportYiXunResponse::New(::google::protobuf::Arena* arena) const {
  RcptInfoImportYiXunResponse* n = new RcptInfoImportYiXunResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RcptInfoImportYiXunResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.RcptInfoImportYiXunResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_rcptinfolist()) {
      GOOGLE_DCHECK(rcptinfolist_ != NULL);
      rcptinfolist_->::micromsg::RcptInfoList::Clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  rcptinfoimportstatus_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RcptInfoImportYiXunResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.RcptInfoImportYiXunResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.RcptInfoList rcptinfolist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rcptinfolist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 rcptinfoimportstatus = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_rcptinfoimportstatus();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rcptinfoimportstatus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.BaseResponse BaseResponse = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.RcptInfoImportYiXunResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.RcptInfoImportYiXunResponse)
  return false;
#undef DO_
}

void RcptInfoImportYiXunResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.RcptInfoImportYiXunResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.RcptInfoList rcptinfolist = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->rcptinfolist_, output);
  }

  // required int32 rcptinfoimportstatus = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rcptinfoimportstatus(), output);
  }

  // required .micromsg.BaseResponse BaseResponse = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->baseresponse_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.RcptInfoImportYiXunResponse)
}

::google::protobuf::uint8* RcptInfoImportYiXunResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.RcptInfoImportYiXunResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.RcptInfoList rcptinfolist = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->rcptinfolist_, deterministic, target);
  }

  // required int32 rcptinfoimportstatus = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rcptinfoimportstatus(), target);
  }

  // required .micromsg.BaseResponse BaseResponse = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->baseresponse_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.RcptInfoImportYiXunResponse)
  return target;
}

size_t RcptInfoImportYiXunResponse::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.RcptInfoImportYiXunResponse)
  size_t total_size = 0;

  if (has_rcptinfolist()) {
    // required .micromsg.RcptInfoList rcptinfolist = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rcptinfolist_);
  }

  if (has_baseresponse()) {
    // required .micromsg.BaseResponse BaseResponse = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }

  if (has_rcptinfoimportstatus()) {
    // required int32 rcptinfoimportstatus = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rcptinfoimportstatus());
  }

  return total_size;
}
size_t RcptInfoImportYiXunResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.RcptInfoImportYiXunResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .micromsg.RcptInfoList rcptinfolist = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rcptinfolist_);

    // required .micromsg.BaseResponse BaseResponse = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);

    // required int32 rcptinfoimportstatus = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rcptinfoimportstatus());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RcptInfoImportYiXunResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.RcptInfoImportYiXunResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RcptInfoImportYiXunResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RcptInfoImportYiXunResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.RcptInfoImportYiXunResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.RcptInfoImportYiXunResponse)
    MergeFrom(*source);
  }
}

void RcptInfoImportYiXunResponse::MergeFrom(const RcptInfoImportYiXunResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.RcptInfoImportYiXunResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_rcptinfolist()->::micromsg::RcptInfoList::MergeFrom(from.rcptinfolist());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000004u) {
      rcptinfoimportstatus_ = from.rcptinfoimportstatus_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RcptInfoImportYiXunResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.RcptInfoImportYiXunResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RcptInfoImportYiXunResponse::CopyFrom(const RcptInfoImportYiXunResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.RcptInfoImportYiXunResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RcptInfoImportYiXunResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (has_rcptinfolist()) {
    if (!this->rcptinfolist_->IsInitialized()) return false;
  }
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void RcptInfoImportYiXunResponse::Swap(RcptInfoImportYiXunResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RcptInfoImportYiXunResponse::InternalSwap(RcptInfoImportYiXunResponse* other) {
  std::swap(rcptinfolist_, other->rcptinfolist_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(rcptinfoimportstatus_, other->rcptinfoimportstatus_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RcptInfoImportYiXunResponse::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RcptInfoImportYiXunResponse

// required .micromsg.RcptInfoList rcptinfolist = 1;
bool RcptInfoImportYiXunResponse::has_rcptinfolist() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RcptInfoImportYiXunResponse::set_has_rcptinfolist() {
  _has_bits_[0] |= 0x00000001u;
}
void RcptInfoImportYiXunResponse::clear_has_rcptinfolist() {
  _has_bits_[0] &= ~0x00000001u;
}
void RcptInfoImportYiXunResponse::clear_rcptinfolist() {
  if (rcptinfolist_ != NULL) rcptinfolist_->::micromsg::RcptInfoList::Clear();
  clear_has_rcptinfolist();
}
const ::micromsg::RcptInfoList& RcptInfoImportYiXunResponse::rcptinfolist() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoImportYiXunResponse.rcptinfolist)
  return rcptinfolist_ != NULL ? *rcptinfolist_
                         : *::micromsg::RcptInfoList::internal_default_instance();
}
::micromsg::RcptInfoList* RcptInfoImportYiXunResponse::mutable_rcptinfolist() {
  set_has_rcptinfolist();
  if (rcptinfolist_ == NULL) {
    rcptinfolist_ = new ::micromsg::RcptInfoList;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoImportYiXunResponse.rcptinfolist)
  return rcptinfolist_;
}
::micromsg::RcptInfoList* RcptInfoImportYiXunResponse::release_rcptinfolist() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoImportYiXunResponse.rcptinfolist)
  clear_has_rcptinfolist();
  ::micromsg::RcptInfoList* temp = rcptinfolist_;
  rcptinfolist_ = NULL;
  return temp;
}
void RcptInfoImportYiXunResponse::set_allocated_rcptinfolist(::micromsg::RcptInfoList* rcptinfolist) {
  delete rcptinfolist_;
  rcptinfolist_ = rcptinfolist;
  if (rcptinfolist) {
    set_has_rcptinfolist();
  } else {
    clear_has_rcptinfolist();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoImportYiXunResponse.rcptinfolist)
}

// required int32 rcptinfoimportstatus = 2;
bool RcptInfoImportYiXunResponse::has_rcptinfoimportstatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RcptInfoImportYiXunResponse::set_has_rcptinfoimportstatus() {
  _has_bits_[0] |= 0x00000004u;
}
void RcptInfoImportYiXunResponse::clear_has_rcptinfoimportstatus() {
  _has_bits_[0] &= ~0x00000004u;
}
void RcptInfoImportYiXunResponse::clear_rcptinfoimportstatus() {
  rcptinfoimportstatus_ = 0;
  clear_has_rcptinfoimportstatus();
}
::google::protobuf::int32 RcptInfoImportYiXunResponse::rcptinfoimportstatus() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoImportYiXunResponse.rcptinfoimportstatus)
  return rcptinfoimportstatus_;
}
void RcptInfoImportYiXunResponse::set_rcptinfoimportstatus(::google::protobuf::int32 value) {
  set_has_rcptinfoimportstatus();
  rcptinfoimportstatus_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RcptInfoImportYiXunResponse.rcptinfoimportstatus)
}

// required .micromsg.BaseResponse BaseResponse = 3;
bool RcptInfoImportYiXunResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RcptInfoImportYiXunResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
void RcptInfoImportYiXunResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
void RcptInfoImportYiXunResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& RcptInfoImportYiXunResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoImportYiXunResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* RcptInfoImportYiXunResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoImportYiXunResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* RcptInfoImportYiXunResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoImportYiXunResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void RcptInfoImportYiXunResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoImportYiXunResponse.BaseResponse)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenBizIapPrepayRequest::kBaseRequestFieldNumber;
const int GenBizIapPrepayRequest::kAppIdFieldNumber;
const int GenBizIapPrepayRequest::kNonceStrFieldNumber;
const int GenBizIapPrepayRequest::kTimeStampFieldNumber;
const int GenBizIapPrepayRequest::kPackageFieldNumber;
const int GenBizIapPrepayRequest::kPaySignFieldNumber;
const int GenBizIapPrepayRequest::kSignTypeFieldNumber;
const int GenBizIapPrepayRequest::kStepInUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenBizIapPrepayRequest::GenBizIapPrepayRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GenBizIapPrepayRequest)
}
GenBizIapPrepayRequest::GenBizIapPrepayRequest(const GenBizIapPrepayRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_appid()) {
    appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
  }
  noncestr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_noncestr()) {
    noncestr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.noncestr_);
  }
  timestamp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_timestamp()) {
    timestamp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timestamp_);
  }
  package_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_package()) {
    package_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_);
  }
  paysign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_paysign()) {
    paysign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.paysign_);
  }
  signtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_signtype()) {
    signtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signtype_);
  }
  stepinurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_stepinurl()) {
    stepinurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stepinurl_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.GenBizIapPrepayRequest)
}

void GenBizIapPrepayRequest::SharedCtor() {
  _cached_size_ = 0;
  appid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  noncestr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  paysign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stepinurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  baserequest_ = NULL;
}

GenBizIapPrepayRequest::~GenBizIapPrepayRequest() {
  // @@protoc_insertion_point(destructor:micromsg.GenBizIapPrepayRequest)
  SharedDtor();
}

void GenBizIapPrepayRequest::SharedDtor() {
  appid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  noncestr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timestamp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  paysign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signtype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stepinurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void GenBizIapPrepayRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GenBizIapPrepayRequest::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GenBizIapPrepayRequest& GenBizIapPrepayRequest::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

GenBizIapPrepayRequest* GenBizIapPrepayRequest::New(::google::protobuf::Arena* arena) const {
  GenBizIapPrepayRequest* n = new GenBizIapPrepayRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GenBizIapPrepayRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GenBizIapPrepayRequest)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_appid()) {
      GOOGLE_DCHECK(!appid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*appid_.UnsafeRawStringPointer())->clear();
    }
    if (has_noncestr()) {
      GOOGLE_DCHECK(!noncestr_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*noncestr_.UnsafeRawStringPointer())->clear();
    }
    if (has_timestamp()) {
      GOOGLE_DCHECK(!timestamp_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*timestamp_.UnsafeRawStringPointer())->clear();
    }
    if (has_package()) {
      GOOGLE_DCHECK(!package_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*package_.UnsafeRawStringPointer())->clear();
    }
    if (has_paysign()) {
      GOOGLE_DCHECK(!paysign_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*paysign_.UnsafeRawStringPointer())->clear();
    }
    if (has_signtype()) {
      GOOGLE_DCHECK(!signtype_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*signtype_.UnsafeRawStringPointer())->clear();
    }
    if (has_stepinurl()) {
      GOOGLE_DCHECK(!stepinurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*stepinurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GenBizIapPrepayRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GenBizIapPrepayRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string AppId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_appid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->appid().data(), this->appid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GenBizIapPrepayRequest.AppId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string NonceStr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_noncestr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->noncestr().data(), this->noncestr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GenBizIapPrepayRequest.NonceStr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string TimeStamp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_timestamp()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->timestamp().data(), this->timestamp().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GenBizIapPrepayRequest.TimeStamp");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Package = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_package()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->package().data(), this->package().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GenBizIapPrepayRequest.Package");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string PaySign = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_paysign()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->paysign().data(), this->paysign().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GenBizIapPrepayRequest.PaySign");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string SignType = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signtype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->signtype().data(), this->signtype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GenBizIapPrepayRequest.SignType");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string StepInUrl = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stepinurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stepinurl().data(), this->stepinurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GenBizIapPrepayRequest.StepInUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GenBizIapPrepayRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GenBizIapPrepayRequest)
  return false;
#undef DO_
}

void GenBizIapPrepayRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GenBizIapPrepayRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // optional string AppId = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GenBizIapPrepayRequest.AppId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->appid(), output);
  }

  // optional string NonceStr = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->noncestr().data(), this->noncestr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GenBizIapPrepayRequest.NonceStr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->noncestr(), output);
  }

  // optional string TimeStamp = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->timestamp().data(), this->timestamp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GenBizIapPrepayRequest.TimeStamp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->timestamp(), output);
  }

  // optional string Package = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->package().data(), this->package().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GenBizIapPrepayRequest.Package");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->package(), output);
  }

  // optional string PaySign = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->paysign().data(), this->paysign().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GenBizIapPrepayRequest.PaySign");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->paysign(), output);
  }

  // optional string SignType = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->signtype().data(), this->signtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GenBizIapPrepayRequest.SignType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->signtype(), output);
  }

  // optional string StepInUrl = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stepinurl().data(), this->stepinurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GenBizIapPrepayRequest.StepInUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->stepinurl(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GenBizIapPrepayRequest)
}

::google::protobuf::uint8* GenBizIapPrepayRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GenBizIapPrepayRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // optional string AppId = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->appid().data(), this->appid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GenBizIapPrepayRequest.AppId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->appid(), target);
  }

  // optional string NonceStr = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->noncestr().data(), this->noncestr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GenBizIapPrepayRequest.NonceStr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->noncestr(), target);
  }

  // optional string TimeStamp = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->timestamp().data(), this->timestamp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GenBizIapPrepayRequest.TimeStamp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->timestamp(), target);
  }

  // optional string Package = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->package().data(), this->package().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GenBizIapPrepayRequest.Package");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->package(), target);
  }

  // optional string PaySign = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->paysign().data(), this->paysign().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GenBizIapPrepayRequest.PaySign");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->paysign(), target);
  }

  // optional string SignType = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->signtype().data(), this->signtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GenBizIapPrepayRequest.SignType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->signtype(), target);
  }

  // optional string StepInUrl = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stepinurl().data(), this->stepinurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GenBizIapPrepayRequest.StepInUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->stepinurl(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GenBizIapPrepayRequest)
  return target;
}

size_t GenBizIapPrepayRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GenBizIapPrepayRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (has_baserequest()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string AppId = 2;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->appid());
    }

    // optional string NonceStr = 3;
    if (has_noncestr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->noncestr());
    }

    // optional string TimeStamp = 4;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->timestamp());
    }

    // optional string Package = 5;
    if (has_package()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->package());
    }

    // optional string PaySign = 6;
    if (has_paysign()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->paysign());
    }

    // optional string SignType = 7;
    if (has_signtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->signtype());
    }

    // optional string StepInUrl = 8;
    if (has_stepinurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stepinurl());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GenBizIapPrepayRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GenBizIapPrepayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GenBizIapPrepayRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GenBizIapPrepayRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GenBizIapPrepayRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GenBizIapPrepayRequest)
    MergeFrom(*source);
  }
}

void GenBizIapPrepayRequest::MergeFrom(const GenBizIapPrepayRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GenBizIapPrepayRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_appid();
      appid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.appid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_noncestr();
      noncestr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.noncestr_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_timestamp();
      timestamp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timestamp_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_package();
      package_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_paysign();
      paysign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.paysign_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_signtype();
      signtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signtype_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_stepinurl();
      stepinurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stepinurl_);
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
  }
}

void GenBizIapPrepayRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GenBizIapPrepayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenBizIapPrepayRequest::CopyFrom(const GenBizIapPrepayRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GenBizIapPrepayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenBizIapPrepayRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000080) != 0x00000080) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void GenBizIapPrepayRequest::Swap(GenBizIapPrepayRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenBizIapPrepayRequest::InternalSwap(GenBizIapPrepayRequest* other) {
  appid_.Swap(&other->appid_);
  noncestr_.Swap(&other->noncestr_);
  timestamp_.Swap(&other->timestamp_);
  package_.Swap(&other->package_);
  paysign_.Swap(&other->paysign_);
  signtype_.Swap(&other->signtype_);
  stepinurl_.Swap(&other->stepinurl_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GenBizIapPrepayRequest::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GenBizIapPrepayRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool GenBizIapPrepayRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void GenBizIapPrepayRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000080u;
}
void GenBizIapPrepayRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000080u;
}
void GenBizIapPrepayRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& GenBizIapPrepayRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GenBizIapPrepayRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* GenBizIapPrepayRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GenBizIapPrepayRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* GenBizIapPrepayRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GenBizIapPrepayRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void GenBizIapPrepayRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GenBizIapPrepayRequest.BaseRequest)
}

// optional string AppId = 2;
bool GenBizIapPrepayRequest::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GenBizIapPrepayRequest::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
void GenBizIapPrepayRequest::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
void GenBizIapPrepayRequest::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
const ::std::string& GenBizIapPrepayRequest::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.GenBizIapPrepayRequest.AppId)
  return appid_.GetNoArena();
}
void GenBizIapPrepayRequest::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GenBizIapPrepayRequest.AppId)
}
#if LANG_CXX11
void GenBizIapPrepayRequest::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GenBizIapPrepayRequest.AppId)
}
#endif
void GenBizIapPrepayRequest::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GenBizIapPrepayRequest.AppId)
}
void GenBizIapPrepayRequest::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GenBizIapPrepayRequest.AppId)
}
::std::string* GenBizIapPrepayRequest::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.GenBizIapPrepayRequest.AppId)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GenBizIapPrepayRequest::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.GenBizIapPrepayRequest.AppId)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GenBizIapPrepayRequest::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GenBizIapPrepayRequest.AppId)
}

// optional string NonceStr = 3;
bool GenBizIapPrepayRequest::has_noncestr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GenBizIapPrepayRequest::set_has_noncestr() {
  _has_bits_[0] |= 0x00000002u;
}
void GenBizIapPrepayRequest::clear_has_noncestr() {
  _has_bits_[0] &= ~0x00000002u;
}
void GenBizIapPrepayRequest::clear_noncestr() {
  noncestr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_noncestr();
}
const ::std::string& GenBizIapPrepayRequest::noncestr() const {
  // @@protoc_insertion_point(field_get:micromsg.GenBizIapPrepayRequest.NonceStr)
  return noncestr_.GetNoArena();
}
void GenBizIapPrepayRequest::set_noncestr(const ::std::string& value) {
  set_has_noncestr();
  noncestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GenBizIapPrepayRequest.NonceStr)
}
#if LANG_CXX11
void GenBizIapPrepayRequest::set_noncestr(::std::string&& value) {
  set_has_noncestr();
  noncestr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GenBizIapPrepayRequest.NonceStr)
}
#endif
void GenBizIapPrepayRequest::set_noncestr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_noncestr();
  noncestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GenBizIapPrepayRequest.NonceStr)
}
void GenBizIapPrepayRequest::set_noncestr(const char* value, size_t size) {
  set_has_noncestr();
  noncestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GenBizIapPrepayRequest.NonceStr)
}
::std::string* GenBizIapPrepayRequest::mutable_noncestr() {
  set_has_noncestr();
  // @@protoc_insertion_point(field_mutable:micromsg.GenBizIapPrepayRequest.NonceStr)
  return noncestr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GenBizIapPrepayRequest::release_noncestr() {
  // @@protoc_insertion_point(field_release:micromsg.GenBizIapPrepayRequest.NonceStr)
  clear_has_noncestr();
  return noncestr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GenBizIapPrepayRequest::set_allocated_noncestr(::std::string* noncestr) {
  if (noncestr != NULL) {
    set_has_noncestr();
  } else {
    clear_has_noncestr();
  }
  noncestr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), noncestr);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GenBizIapPrepayRequest.NonceStr)
}

// optional string TimeStamp = 4;
bool GenBizIapPrepayRequest::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GenBizIapPrepayRequest::set_has_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
void GenBizIapPrepayRequest::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
void GenBizIapPrepayRequest::clear_timestamp() {
  timestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_timestamp();
}
const ::std::string& GenBizIapPrepayRequest::timestamp() const {
  // @@protoc_insertion_point(field_get:micromsg.GenBizIapPrepayRequest.TimeStamp)
  return timestamp_.GetNoArena();
}
void GenBizIapPrepayRequest::set_timestamp(const ::std::string& value) {
  set_has_timestamp();
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GenBizIapPrepayRequest.TimeStamp)
}
#if LANG_CXX11
void GenBizIapPrepayRequest::set_timestamp(::std::string&& value) {
  set_has_timestamp();
  timestamp_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GenBizIapPrepayRequest.TimeStamp)
}
#endif
void GenBizIapPrepayRequest::set_timestamp(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_timestamp();
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GenBizIapPrepayRequest.TimeStamp)
}
void GenBizIapPrepayRequest::set_timestamp(const char* value, size_t size) {
  set_has_timestamp();
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GenBizIapPrepayRequest.TimeStamp)
}
::std::string* GenBizIapPrepayRequest::mutable_timestamp() {
  set_has_timestamp();
  // @@protoc_insertion_point(field_mutable:micromsg.GenBizIapPrepayRequest.TimeStamp)
  return timestamp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GenBizIapPrepayRequest::release_timestamp() {
  // @@protoc_insertion_point(field_release:micromsg.GenBizIapPrepayRequest.TimeStamp)
  clear_has_timestamp();
  return timestamp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GenBizIapPrepayRequest::set_allocated_timestamp(::std::string* timestamp) {
  if (timestamp != NULL) {
    set_has_timestamp();
  } else {
    clear_has_timestamp();
  }
  timestamp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), timestamp);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GenBizIapPrepayRequest.TimeStamp)
}

// optional string Package = 5;
bool GenBizIapPrepayRequest::has_package() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GenBizIapPrepayRequest::set_has_package() {
  _has_bits_[0] |= 0x00000008u;
}
void GenBizIapPrepayRequest::clear_has_package() {
  _has_bits_[0] &= ~0x00000008u;
}
void GenBizIapPrepayRequest::clear_package() {
  package_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package();
}
const ::std::string& GenBizIapPrepayRequest::package() const {
  // @@protoc_insertion_point(field_get:micromsg.GenBizIapPrepayRequest.Package)
  return package_.GetNoArena();
}
void GenBizIapPrepayRequest::set_package(const ::std::string& value) {
  set_has_package();
  package_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GenBizIapPrepayRequest.Package)
}
#if LANG_CXX11
void GenBizIapPrepayRequest::set_package(::std::string&& value) {
  set_has_package();
  package_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GenBizIapPrepayRequest.Package)
}
#endif
void GenBizIapPrepayRequest::set_package(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package();
  package_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GenBizIapPrepayRequest.Package)
}
void GenBizIapPrepayRequest::set_package(const char* value, size_t size) {
  set_has_package();
  package_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GenBizIapPrepayRequest.Package)
}
::std::string* GenBizIapPrepayRequest::mutable_package() {
  set_has_package();
  // @@protoc_insertion_point(field_mutable:micromsg.GenBizIapPrepayRequest.Package)
  return package_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GenBizIapPrepayRequest::release_package() {
  // @@protoc_insertion_point(field_release:micromsg.GenBizIapPrepayRequest.Package)
  clear_has_package();
  return package_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GenBizIapPrepayRequest::set_allocated_package(::std::string* package) {
  if (package != NULL) {
    set_has_package();
  } else {
    clear_has_package();
  }
  package_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GenBizIapPrepayRequest.Package)
}

// optional string PaySign = 6;
bool GenBizIapPrepayRequest::has_paysign() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GenBizIapPrepayRequest::set_has_paysign() {
  _has_bits_[0] |= 0x00000010u;
}
void GenBizIapPrepayRequest::clear_has_paysign() {
  _has_bits_[0] &= ~0x00000010u;
}
void GenBizIapPrepayRequest::clear_paysign() {
  paysign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_paysign();
}
const ::std::string& GenBizIapPrepayRequest::paysign() const {
  // @@protoc_insertion_point(field_get:micromsg.GenBizIapPrepayRequest.PaySign)
  return paysign_.GetNoArena();
}
void GenBizIapPrepayRequest::set_paysign(const ::std::string& value) {
  set_has_paysign();
  paysign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GenBizIapPrepayRequest.PaySign)
}
#if LANG_CXX11
void GenBizIapPrepayRequest::set_paysign(::std::string&& value) {
  set_has_paysign();
  paysign_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GenBizIapPrepayRequest.PaySign)
}
#endif
void GenBizIapPrepayRequest::set_paysign(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_paysign();
  paysign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GenBizIapPrepayRequest.PaySign)
}
void GenBizIapPrepayRequest::set_paysign(const char* value, size_t size) {
  set_has_paysign();
  paysign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GenBizIapPrepayRequest.PaySign)
}
::std::string* GenBizIapPrepayRequest::mutable_paysign() {
  set_has_paysign();
  // @@protoc_insertion_point(field_mutable:micromsg.GenBizIapPrepayRequest.PaySign)
  return paysign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GenBizIapPrepayRequest::release_paysign() {
  // @@protoc_insertion_point(field_release:micromsg.GenBizIapPrepayRequest.PaySign)
  clear_has_paysign();
  return paysign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GenBizIapPrepayRequest::set_allocated_paysign(::std::string* paysign) {
  if (paysign != NULL) {
    set_has_paysign();
  } else {
    clear_has_paysign();
  }
  paysign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), paysign);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GenBizIapPrepayRequest.PaySign)
}

// optional string SignType = 7;
bool GenBizIapPrepayRequest::has_signtype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void GenBizIapPrepayRequest::set_has_signtype() {
  _has_bits_[0] |= 0x00000020u;
}
void GenBizIapPrepayRequest::clear_has_signtype() {
  _has_bits_[0] &= ~0x00000020u;
}
void GenBizIapPrepayRequest::clear_signtype() {
  signtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_signtype();
}
const ::std::string& GenBizIapPrepayRequest::signtype() const {
  // @@protoc_insertion_point(field_get:micromsg.GenBizIapPrepayRequest.SignType)
  return signtype_.GetNoArena();
}
void GenBizIapPrepayRequest::set_signtype(const ::std::string& value) {
  set_has_signtype();
  signtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GenBizIapPrepayRequest.SignType)
}
#if LANG_CXX11
void GenBizIapPrepayRequest::set_signtype(::std::string&& value) {
  set_has_signtype();
  signtype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GenBizIapPrepayRequest.SignType)
}
#endif
void GenBizIapPrepayRequest::set_signtype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_signtype();
  signtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GenBizIapPrepayRequest.SignType)
}
void GenBizIapPrepayRequest::set_signtype(const char* value, size_t size) {
  set_has_signtype();
  signtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GenBizIapPrepayRequest.SignType)
}
::std::string* GenBizIapPrepayRequest::mutable_signtype() {
  set_has_signtype();
  // @@protoc_insertion_point(field_mutable:micromsg.GenBizIapPrepayRequest.SignType)
  return signtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GenBizIapPrepayRequest::release_signtype() {
  // @@protoc_insertion_point(field_release:micromsg.GenBizIapPrepayRequest.SignType)
  clear_has_signtype();
  return signtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GenBizIapPrepayRequest::set_allocated_signtype(::std::string* signtype) {
  if (signtype != NULL) {
    set_has_signtype();
  } else {
    clear_has_signtype();
  }
  signtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signtype);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GenBizIapPrepayRequest.SignType)
}

// optional string StepInUrl = 8;
bool GenBizIapPrepayRequest::has_stepinurl() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void GenBizIapPrepayRequest::set_has_stepinurl() {
  _has_bits_[0] |= 0x00000040u;
}
void GenBizIapPrepayRequest::clear_has_stepinurl() {
  _has_bits_[0] &= ~0x00000040u;
}
void GenBizIapPrepayRequest::clear_stepinurl() {
  stepinurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_stepinurl();
}
const ::std::string& GenBizIapPrepayRequest::stepinurl() const {
  // @@protoc_insertion_point(field_get:micromsg.GenBizIapPrepayRequest.StepInUrl)
  return stepinurl_.GetNoArena();
}
void GenBizIapPrepayRequest::set_stepinurl(const ::std::string& value) {
  set_has_stepinurl();
  stepinurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GenBizIapPrepayRequest.StepInUrl)
}
#if LANG_CXX11
void GenBizIapPrepayRequest::set_stepinurl(::std::string&& value) {
  set_has_stepinurl();
  stepinurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GenBizIapPrepayRequest.StepInUrl)
}
#endif
void GenBizIapPrepayRequest::set_stepinurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_stepinurl();
  stepinurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GenBizIapPrepayRequest.StepInUrl)
}
void GenBizIapPrepayRequest::set_stepinurl(const char* value, size_t size) {
  set_has_stepinurl();
  stepinurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GenBizIapPrepayRequest.StepInUrl)
}
::std::string* GenBizIapPrepayRequest::mutable_stepinurl() {
  set_has_stepinurl();
  // @@protoc_insertion_point(field_mutable:micromsg.GenBizIapPrepayRequest.StepInUrl)
  return stepinurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GenBizIapPrepayRequest::release_stepinurl() {
  // @@protoc_insertion_point(field_release:micromsg.GenBizIapPrepayRequest.StepInUrl)
  clear_has_stepinurl();
  return stepinurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GenBizIapPrepayRequest::set_allocated_stepinurl(::std::string* stepinurl) {
  if (stepinurl != NULL) {
    set_has_stepinurl();
  } else {
    clear_has_stepinurl();
  }
  stepinurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stepinurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GenBizIapPrepayRequest.StepInUrl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenBizIapPrepayResponse::kBaseResponseFieldNumber;
const int GenBizIapPrepayResponse::kProductIdFieldNumber;
const int GenBizIapPrepayResponse::kExtInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenBizIapPrepayResponse::GenBizIapPrepayResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GenBizIapPrepayResponse)
}
GenBizIapPrepayResponse::GenBizIapPrepayResponse(const GenBizIapPrepayResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  productid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_productid()) {
    productid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productid_);
  }
  extinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_extinfo()) {
    extinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extinfo_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.GenBizIapPrepayResponse)
}

void GenBizIapPrepayResponse::SharedCtor() {
  _cached_size_ = 0;
  productid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  baseresponse_ = NULL;
}

GenBizIapPrepayResponse::~GenBizIapPrepayResponse() {
  // @@protoc_insertion_point(destructor:micromsg.GenBizIapPrepayResponse)
  SharedDtor();
}

void GenBizIapPrepayResponse::SharedDtor() {
  productid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void GenBizIapPrepayResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GenBizIapPrepayResponse::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GenBizIapPrepayResponse& GenBizIapPrepayResponse::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

GenBizIapPrepayResponse* GenBizIapPrepayResponse::New(::google::protobuf::Arena* arena) const {
  GenBizIapPrepayResponse* n = new GenBizIapPrepayResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GenBizIapPrepayResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GenBizIapPrepayResponse)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_productid()) {
      GOOGLE_DCHECK(!productid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*productid_.UnsafeRawStringPointer())->clear();
    }
    if (has_extinfo()) {
      GOOGLE_DCHECK(!extinfo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*extinfo_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GenBizIapPrepayResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GenBizIapPrepayResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ProductId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->productid().data(), this->productid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GenBizIapPrepayResponse.ProductId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ExtInfo = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->extinfo().data(), this->extinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GenBizIapPrepayResponse.ExtInfo");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GenBizIapPrepayResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GenBizIapPrepayResponse)
  return false;
#undef DO_
}

void GenBizIapPrepayResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GenBizIapPrepayResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // optional string ProductId = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->productid().data(), this->productid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GenBizIapPrepayResponse.ProductId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->productid(), output);
  }

  // optional string ExtInfo = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extinfo().data(), this->extinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GenBizIapPrepayResponse.ExtInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->extinfo(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GenBizIapPrepayResponse)
}

::google::protobuf::uint8* GenBizIapPrepayResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GenBizIapPrepayResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // optional string ProductId = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->productid().data(), this->productid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GenBizIapPrepayResponse.ProductId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->productid(), target);
  }

  // optional string ExtInfo = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extinfo().data(), this->extinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GenBizIapPrepayResponse.ExtInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->extinfo(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GenBizIapPrepayResponse)
  return target;
}

size_t GenBizIapPrepayResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GenBizIapPrepayResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (has_baseresponse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string ProductId = 2;
    if (has_productid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->productid());
    }

    // optional string ExtInfo = 4;
    if (has_extinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extinfo());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GenBizIapPrepayResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GenBizIapPrepayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GenBizIapPrepayResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GenBizIapPrepayResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GenBizIapPrepayResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GenBizIapPrepayResponse)
    MergeFrom(*source);
  }
}

void GenBizIapPrepayResponse::MergeFrom(const GenBizIapPrepayResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GenBizIapPrepayResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_productid();
      productid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_extinfo();
      extinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extinfo_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
  }
}

void GenBizIapPrepayResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GenBizIapPrepayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenBizIapPrepayResponse::CopyFrom(const GenBizIapPrepayResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GenBizIapPrepayResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenBizIapPrepayResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void GenBizIapPrepayResponse::Swap(GenBizIapPrepayResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenBizIapPrepayResponse::InternalSwap(GenBizIapPrepayResponse* other) {
  productid_.Swap(&other->productid_);
  extinfo_.Swap(&other->extinfo_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GenBizIapPrepayResponse::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GenBizIapPrepayResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool GenBizIapPrepayResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GenBizIapPrepayResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000004u;
}
void GenBizIapPrepayResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000004u;
}
void GenBizIapPrepayResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& GenBizIapPrepayResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GenBizIapPrepayResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* GenBizIapPrepayResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GenBizIapPrepayResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* GenBizIapPrepayResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GenBizIapPrepayResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void GenBizIapPrepayResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GenBizIapPrepayResponse.BaseResponse)
}

// optional string ProductId = 2;
bool GenBizIapPrepayResponse::has_productid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GenBizIapPrepayResponse::set_has_productid() {
  _has_bits_[0] |= 0x00000001u;
}
void GenBizIapPrepayResponse::clear_has_productid() {
  _has_bits_[0] &= ~0x00000001u;
}
void GenBizIapPrepayResponse::clear_productid() {
  productid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_productid();
}
const ::std::string& GenBizIapPrepayResponse::productid() const {
  // @@protoc_insertion_point(field_get:micromsg.GenBizIapPrepayResponse.ProductId)
  return productid_.GetNoArena();
}
void GenBizIapPrepayResponse::set_productid(const ::std::string& value) {
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GenBizIapPrepayResponse.ProductId)
}
#if LANG_CXX11
void GenBizIapPrepayResponse::set_productid(::std::string&& value) {
  set_has_productid();
  productid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GenBizIapPrepayResponse.ProductId)
}
#endif
void GenBizIapPrepayResponse::set_productid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GenBizIapPrepayResponse.ProductId)
}
void GenBizIapPrepayResponse::set_productid(const char* value, size_t size) {
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GenBizIapPrepayResponse.ProductId)
}
::std::string* GenBizIapPrepayResponse::mutable_productid() {
  set_has_productid();
  // @@protoc_insertion_point(field_mutable:micromsg.GenBizIapPrepayResponse.ProductId)
  return productid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GenBizIapPrepayResponse::release_productid() {
  // @@protoc_insertion_point(field_release:micromsg.GenBizIapPrepayResponse.ProductId)
  clear_has_productid();
  return productid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GenBizIapPrepayResponse::set_allocated_productid(::std::string* productid) {
  if (productid != NULL) {
    set_has_productid();
  } else {
    clear_has_productid();
  }
  productid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GenBizIapPrepayResponse.ProductId)
}

// optional string ExtInfo = 4;
bool GenBizIapPrepayResponse::has_extinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GenBizIapPrepayResponse::set_has_extinfo() {
  _has_bits_[0] |= 0x00000002u;
}
void GenBizIapPrepayResponse::clear_has_extinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
void GenBizIapPrepayResponse::clear_extinfo() {
  extinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_extinfo();
}
const ::std::string& GenBizIapPrepayResponse::extinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.GenBizIapPrepayResponse.ExtInfo)
  return extinfo_.GetNoArena();
}
void GenBizIapPrepayResponse::set_extinfo(const ::std::string& value) {
  set_has_extinfo();
  extinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GenBizIapPrepayResponse.ExtInfo)
}
#if LANG_CXX11
void GenBizIapPrepayResponse::set_extinfo(::std::string&& value) {
  set_has_extinfo();
  extinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GenBizIapPrepayResponse.ExtInfo)
}
#endif
void GenBizIapPrepayResponse::set_extinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_extinfo();
  extinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GenBizIapPrepayResponse.ExtInfo)
}
void GenBizIapPrepayResponse::set_extinfo(const char* value, size_t size) {
  set_has_extinfo();
  extinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GenBizIapPrepayResponse.ExtInfo)
}
::std::string* GenBizIapPrepayResponse::mutable_extinfo() {
  set_has_extinfo();
  // @@protoc_insertion_point(field_mutable:micromsg.GenBizIapPrepayResponse.ExtInfo)
  return extinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GenBizIapPrepayResponse::release_extinfo() {
  // @@protoc_insertion_point(field_release:micromsg.GenBizIapPrepayResponse.ExtInfo)
  clear_has_extinfo();
  return extinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GenBizIapPrepayResponse::set_allocated_extinfo(::std::string* extinfo) {
  if (extinfo != NULL) {
    set_has_extinfo();
  } else {
    clear_has_extinfo();
  }
  extinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extinfo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GenBizIapPrepayResponse.ExtInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBizIapPayResultRequest::kBaseRequestFieldNumber;
const int GetBizIapPayResultRequest::kSerialIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBizIapPayResultRequest::GetBizIapPayResultRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetBizIapPayResultRequest)
}
GetBizIapPayResultRequest::GetBizIapPayResultRequest(const GetBizIapPayResultRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  serialid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_serialid()) {
    serialid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialid_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.GetBizIapPayResultRequest)
}

void GetBizIapPayResultRequest::SharedCtor() {
  _cached_size_ = 0;
  serialid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  baserequest_ = NULL;
}

GetBizIapPayResultRequest::~GetBizIapPayResultRequest() {
  // @@protoc_insertion_point(destructor:micromsg.GetBizIapPayResultRequest)
  SharedDtor();
}

void GetBizIapPayResultRequest::SharedDtor() {
  serialid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void GetBizIapPayResultRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBizIapPayResultRequest::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetBizIapPayResultRequest& GetBizIapPayResultRequest::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetBizIapPayResultRequest* GetBizIapPayResultRequest::New(::google::protobuf::Arena* arena) const {
  GetBizIapPayResultRequest* n = new GetBizIapPayResultRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetBizIapPayResultRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetBizIapPayResultRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_serialid()) {
      GOOGLE_DCHECK(!serialid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*serialid_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetBizIapPayResultRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetBizIapPayResultRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string SerialId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serialid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->serialid().data(), this->serialid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetBizIapPayResultRequest.SerialId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetBizIapPayResultRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetBizIapPayResultRequest)
  return false;
#undef DO_
}

void GetBizIapPayResultRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetBizIapPayResultRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // optional string SerialId = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serialid().data(), this->serialid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetBizIapPayResultRequest.SerialId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->serialid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetBizIapPayResultRequest)
}

::google::protobuf::uint8* GetBizIapPayResultRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetBizIapPayResultRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // optional string SerialId = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serialid().data(), this->serialid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetBizIapPayResultRequest.SerialId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->serialid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetBizIapPayResultRequest)
  return target;
}

size_t GetBizIapPayResultRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetBizIapPayResultRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (has_baserequest()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }
  // optional string SerialId = 2;
  if (has_serialid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serialid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBizIapPayResultRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetBizIapPayResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBizIapPayResultRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBizIapPayResultRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetBizIapPayResultRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetBizIapPayResultRequest)
    MergeFrom(*source);
  }
}

void GetBizIapPayResultRequest::MergeFrom(const GetBizIapPayResultRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetBizIapPayResultRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_serialid();
      serialid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialid_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
  }
}

void GetBizIapPayResultRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetBizIapPayResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBizIapPayResultRequest::CopyFrom(const GetBizIapPayResultRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetBizIapPayResultRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBizIapPayResultRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void GetBizIapPayResultRequest::Swap(GetBizIapPayResultRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBizIapPayResultRequest::InternalSwap(GetBizIapPayResultRequest* other) {
  serialid_.Swap(&other->serialid_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetBizIapPayResultRequest::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetBizIapPayResultRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool GetBizIapPayResultRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetBizIapPayResultRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
void GetBizIapPayResultRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetBizIapPayResultRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& GetBizIapPayResultRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetBizIapPayResultRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* GetBizIapPayResultRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetBizIapPayResultRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* GetBizIapPayResultRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetBizIapPayResultRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void GetBizIapPayResultRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetBizIapPayResultRequest.BaseRequest)
}

// optional string SerialId = 2;
bool GetBizIapPayResultRequest::has_serialid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetBizIapPayResultRequest::set_has_serialid() {
  _has_bits_[0] |= 0x00000001u;
}
void GetBizIapPayResultRequest::clear_has_serialid() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetBizIapPayResultRequest::clear_serialid() {
  serialid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_serialid();
}
const ::std::string& GetBizIapPayResultRequest::serialid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetBizIapPayResultRequest.SerialId)
  return serialid_.GetNoArena();
}
void GetBizIapPayResultRequest::set_serialid(const ::std::string& value) {
  set_has_serialid();
  serialid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetBizIapPayResultRequest.SerialId)
}
#if LANG_CXX11
void GetBizIapPayResultRequest::set_serialid(::std::string&& value) {
  set_has_serialid();
  serialid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetBizIapPayResultRequest.SerialId)
}
#endif
void GetBizIapPayResultRequest::set_serialid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_serialid();
  serialid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetBizIapPayResultRequest.SerialId)
}
void GetBizIapPayResultRequest::set_serialid(const char* value, size_t size) {
  set_has_serialid();
  serialid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetBizIapPayResultRequest.SerialId)
}
::std::string* GetBizIapPayResultRequest::mutable_serialid() {
  set_has_serialid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetBizIapPayResultRequest.SerialId)
  return serialid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetBizIapPayResultRequest::release_serialid() {
  // @@protoc_insertion_point(field_release:micromsg.GetBizIapPayResultRequest.SerialId)
  clear_has_serialid();
  return serialid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetBizIapPayResultRequest::set_allocated_serialid(::std::string* serialid) {
  if (serialid != NULL) {
    set_has_serialid();
  } else {
    clear_has_serialid();
  }
  serialid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serialid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetBizIapPayResultRequest.SerialId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBizIapPayResultResponse::kBaseResponseFieldNumber;
const int GetBizIapPayResultResponse::kDetailBuffFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBizIapPayResultResponse::GetBizIapPayResultResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetBizIapPayResultResponse)
}
GetBizIapPayResultResponse::GetBizIapPayResultResponse(const GetBizIapPayResultResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  detailbuff_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_detailbuff()) {
    detailbuff_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detailbuff_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.GetBizIapPayResultResponse)
}

void GetBizIapPayResultResponse::SharedCtor() {
  _cached_size_ = 0;
  detailbuff_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  baseresponse_ = NULL;
}

GetBizIapPayResultResponse::~GetBizIapPayResultResponse() {
  // @@protoc_insertion_point(destructor:micromsg.GetBizIapPayResultResponse)
  SharedDtor();
}

void GetBizIapPayResultResponse::SharedDtor() {
  detailbuff_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void GetBizIapPayResultResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBizIapPayResultResponse::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetBizIapPayResultResponse& GetBizIapPayResultResponse::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetBizIapPayResultResponse* GetBizIapPayResultResponse::New(::google::protobuf::Arena* arena) const {
  GetBizIapPayResultResponse* n = new GetBizIapPayResultResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetBizIapPayResultResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetBizIapPayResultResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_detailbuff()) {
      GOOGLE_DCHECK(!detailbuff_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*detailbuff_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetBizIapPayResultResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetBizIapPayResultResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string DetailBuff = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_detailbuff()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->detailbuff().data(), this->detailbuff().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetBizIapPayResultResponse.DetailBuff");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetBizIapPayResultResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetBizIapPayResultResponse)
  return false;
#undef DO_
}

void GetBizIapPayResultResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetBizIapPayResultResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // optional string DetailBuff = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->detailbuff().data(), this->detailbuff().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetBizIapPayResultResponse.DetailBuff");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->detailbuff(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetBizIapPayResultResponse)
}

::google::protobuf::uint8* GetBizIapPayResultResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetBizIapPayResultResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // optional string DetailBuff = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->detailbuff().data(), this->detailbuff().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetBizIapPayResultResponse.DetailBuff");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->detailbuff(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetBizIapPayResultResponse)
  return target;
}

size_t GetBizIapPayResultResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetBizIapPayResultResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (has_baseresponse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }
  // optional string DetailBuff = 2;
  if (has_detailbuff()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->detailbuff());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBizIapPayResultResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetBizIapPayResultResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBizIapPayResultResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBizIapPayResultResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetBizIapPayResultResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetBizIapPayResultResponse)
    MergeFrom(*source);
  }
}

void GetBizIapPayResultResponse::MergeFrom(const GetBizIapPayResultResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetBizIapPayResultResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_detailbuff();
      detailbuff_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detailbuff_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
  }
}

void GetBizIapPayResultResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetBizIapPayResultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBizIapPayResultResponse::CopyFrom(const GetBizIapPayResultResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetBizIapPayResultResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBizIapPayResultResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void GetBizIapPayResultResponse::Swap(GetBizIapPayResultResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBizIapPayResultResponse::InternalSwap(GetBizIapPayResultResponse* other) {
  detailbuff_.Swap(&other->detailbuff_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetBizIapPayResultResponse::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetBizIapPayResultResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool GetBizIapPayResultResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetBizIapPayResultResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
void GetBizIapPayResultResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetBizIapPayResultResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& GetBizIapPayResultResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetBizIapPayResultResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* GetBizIapPayResultResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetBizIapPayResultResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* GetBizIapPayResultResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetBizIapPayResultResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void GetBizIapPayResultResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetBizIapPayResultResponse.BaseResponse)
}

// optional string DetailBuff = 2;
bool GetBizIapPayResultResponse::has_detailbuff() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetBizIapPayResultResponse::set_has_detailbuff() {
  _has_bits_[0] |= 0x00000001u;
}
void GetBizIapPayResultResponse::clear_has_detailbuff() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetBizIapPayResultResponse::clear_detailbuff() {
  detailbuff_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_detailbuff();
}
const ::std::string& GetBizIapPayResultResponse::detailbuff() const {
  // @@protoc_insertion_point(field_get:micromsg.GetBizIapPayResultResponse.DetailBuff)
  return detailbuff_.GetNoArena();
}
void GetBizIapPayResultResponse::set_detailbuff(const ::std::string& value) {
  set_has_detailbuff();
  detailbuff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetBizIapPayResultResponse.DetailBuff)
}
#if LANG_CXX11
void GetBizIapPayResultResponse::set_detailbuff(::std::string&& value) {
  set_has_detailbuff();
  detailbuff_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetBizIapPayResultResponse.DetailBuff)
}
#endif
void GetBizIapPayResultResponse::set_detailbuff(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_detailbuff();
  detailbuff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetBizIapPayResultResponse.DetailBuff)
}
void GetBizIapPayResultResponse::set_detailbuff(const char* value, size_t size) {
  set_has_detailbuff();
  detailbuff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetBizIapPayResultResponse.DetailBuff)
}
::std::string* GetBizIapPayResultResponse::mutable_detailbuff() {
  set_has_detailbuff();
  // @@protoc_insertion_point(field_mutable:micromsg.GetBizIapPayResultResponse.DetailBuff)
  return detailbuff_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetBizIapPayResultResponse::release_detailbuff() {
  // @@protoc_insertion_point(field_release:micromsg.GetBizIapPayResultResponse.DetailBuff)
  clear_has_detailbuff();
  return detailbuff_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetBizIapPayResultResponse::set_allocated_detailbuff(::std::string* detailbuff) {
  if (detailbuff != NULL) {
    set_has_detailbuff();
  } else {
    clear_has_detailbuff();
  }
  detailbuff_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), detailbuff);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetBizIapPayResultResponse.DetailBuff)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBizIapDetailRequest::kBaseRequestFieldNumber;
const int GetBizIapDetailRequest::kSerialIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBizIapDetailRequest::GetBizIapDetailRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetBizIapDetailRequest)
}
GetBizIapDetailRequest::GetBizIapDetailRequest(const GetBizIapDetailRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  serialid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_serialid()) {
    serialid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialid_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.GetBizIapDetailRequest)
}

void GetBizIapDetailRequest::SharedCtor() {
  _cached_size_ = 0;
  serialid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  baserequest_ = NULL;
}

GetBizIapDetailRequest::~GetBizIapDetailRequest() {
  // @@protoc_insertion_point(destructor:micromsg.GetBizIapDetailRequest)
  SharedDtor();
}

void GetBizIapDetailRequest::SharedDtor() {
  serialid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void GetBizIapDetailRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBizIapDetailRequest::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetBizIapDetailRequest& GetBizIapDetailRequest::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetBizIapDetailRequest* GetBizIapDetailRequest::New(::google::protobuf::Arena* arena) const {
  GetBizIapDetailRequest* n = new GetBizIapDetailRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetBizIapDetailRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetBizIapDetailRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_serialid()) {
      GOOGLE_DCHECK(!serialid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*serialid_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetBizIapDetailRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetBizIapDetailRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string SerialId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serialid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->serialid().data(), this->serialid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetBizIapDetailRequest.SerialId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetBizIapDetailRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetBizIapDetailRequest)
  return false;
#undef DO_
}

void GetBizIapDetailRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetBizIapDetailRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // optional string SerialId = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serialid().data(), this->serialid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetBizIapDetailRequest.SerialId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->serialid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetBizIapDetailRequest)
}

::google::protobuf::uint8* GetBizIapDetailRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetBizIapDetailRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // optional string SerialId = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serialid().data(), this->serialid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetBizIapDetailRequest.SerialId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->serialid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetBizIapDetailRequest)
  return target;
}

size_t GetBizIapDetailRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetBizIapDetailRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (has_baserequest()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }
  // optional string SerialId = 3;
  if (has_serialid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->serialid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBizIapDetailRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetBizIapDetailRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBizIapDetailRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBizIapDetailRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetBizIapDetailRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetBizIapDetailRequest)
    MergeFrom(*source);
  }
}

void GetBizIapDetailRequest::MergeFrom(const GetBizIapDetailRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetBizIapDetailRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_serialid();
      serialid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialid_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
  }
}

void GetBizIapDetailRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetBizIapDetailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBizIapDetailRequest::CopyFrom(const GetBizIapDetailRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetBizIapDetailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBizIapDetailRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void GetBizIapDetailRequest::Swap(GetBizIapDetailRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBizIapDetailRequest::InternalSwap(GetBizIapDetailRequest* other) {
  serialid_.Swap(&other->serialid_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetBizIapDetailRequest::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetBizIapDetailRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool GetBizIapDetailRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetBizIapDetailRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
void GetBizIapDetailRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetBizIapDetailRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& GetBizIapDetailRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetBizIapDetailRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* GetBizIapDetailRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetBizIapDetailRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* GetBizIapDetailRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetBizIapDetailRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void GetBizIapDetailRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetBizIapDetailRequest.BaseRequest)
}

// optional string SerialId = 3;
bool GetBizIapDetailRequest::has_serialid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetBizIapDetailRequest::set_has_serialid() {
  _has_bits_[0] |= 0x00000001u;
}
void GetBizIapDetailRequest::clear_has_serialid() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetBizIapDetailRequest::clear_serialid() {
  serialid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_serialid();
}
const ::std::string& GetBizIapDetailRequest::serialid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetBizIapDetailRequest.SerialId)
  return serialid_.GetNoArena();
}
void GetBizIapDetailRequest::set_serialid(const ::std::string& value) {
  set_has_serialid();
  serialid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetBizIapDetailRequest.SerialId)
}
#if LANG_CXX11
void GetBizIapDetailRequest::set_serialid(::std::string&& value) {
  set_has_serialid();
  serialid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetBizIapDetailRequest.SerialId)
}
#endif
void GetBizIapDetailRequest::set_serialid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_serialid();
  serialid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetBizIapDetailRequest.SerialId)
}
void GetBizIapDetailRequest::set_serialid(const char* value, size_t size) {
  set_has_serialid();
  serialid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetBizIapDetailRequest.SerialId)
}
::std::string* GetBizIapDetailRequest::mutable_serialid() {
  set_has_serialid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetBizIapDetailRequest.SerialId)
  return serialid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetBizIapDetailRequest::release_serialid() {
  // @@protoc_insertion_point(field_release:micromsg.GetBizIapDetailRequest.SerialId)
  clear_has_serialid();
  return serialid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetBizIapDetailRequest::set_allocated_serialid(::std::string* serialid) {
  if (serialid != NULL) {
    set_has_serialid();
  } else {
    clear_has_serialid();
  }
  serialid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serialid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetBizIapDetailRequest.SerialId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBizIapDetailResponse::kBaseResponseFieldNumber;
const int GetBizIapDetailResponse::kDetailBuffFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBizIapDetailResponse::GetBizIapDetailResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetBizIapDetailResponse)
}
GetBizIapDetailResponse::GetBizIapDetailResponse(const GetBizIapDetailResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  detailbuff_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_detailbuff()) {
    detailbuff_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detailbuff_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.GetBizIapDetailResponse)
}

void GetBizIapDetailResponse::SharedCtor() {
  _cached_size_ = 0;
  detailbuff_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  baseresponse_ = NULL;
}

GetBizIapDetailResponse::~GetBizIapDetailResponse() {
  // @@protoc_insertion_point(destructor:micromsg.GetBizIapDetailResponse)
  SharedDtor();
}

void GetBizIapDetailResponse::SharedDtor() {
  detailbuff_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void GetBizIapDetailResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBizIapDetailResponse::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetBizIapDetailResponse& GetBizIapDetailResponse::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetBizIapDetailResponse* GetBizIapDetailResponse::New(::google::protobuf::Arena* arena) const {
  GetBizIapDetailResponse* n = new GetBizIapDetailResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetBizIapDetailResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetBizIapDetailResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_detailbuff()) {
      GOOGLE_DCHECK(!detailbuff_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*detailbuff_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetBizIapDetailResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetBizIapDetailResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string DetailBuff = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_detailbuff()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->detailbuff().data(), this->detailbuff().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetBizIapDetailResponse.DetailBuff");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetBizIapDetailResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetBizIapDetailResponse)
  return false;
#undef DO_
}

void GetBizIapDetailResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetBizIapDetailResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // optional string DetailBuff = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->detailbuff().data(), this->detailbuff().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetBizIapDetailResponse.DetailBuff");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->detailbuff(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetBizIapDetailResponse)
}

::google::protobuf::uint8* GetBizIapDetailResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetBizIapDetailResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // optional string DetailBuff = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->detailbuff().data(), this->detailbuff().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetBizIapDetailResponse.DetailBuff");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->detailbuff(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetBizIapDetailResponse)
  return target;
}

size_t GetBizIapDetailResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetBizIapDetailResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (has_baseresponse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }
  // optional string DetailBuff = 2;
  if (has_detailbuff()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->detailbuff());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBizIapDetailResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetBizIapDetailResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBizIapDetailResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBizIapDetailResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetBizIapDetailResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetBizIapDetailResponse)
    MergeFrom(*source);
  }
}

void GetBizIapDetailResponse::MergeFrom(const GetBizIapDetailResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetBizIapDetailResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_detailbuff();
      detailbuff_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detailbuff_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
  }
}

void GetBizIapDetailResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetBizIapDetailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBizIapDetailResponse::CopyFrom(const GetBizIapDetailResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetBizIapDetailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBizIapDetailResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void GetBizIapDetailResponse::Swap(GetBizIapDetailResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBizIapDetailResponse::InternalSwap(GetBizIapDetailResponse* other) {
  detailbuff_.Swap(&other->detailbuff_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetBizIapDetailResponse::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetBizIapDetailResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool GetBizIapDetailResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetBizIapDetailResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
void GetBizIapDetailResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetBizIapDetailResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& GetBizIapDetailResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetBizIapDetailResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* GetBizIapDetailResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetBizIapDetailResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* GetBizIapDetailResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetBizIapDetailResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void GetBizIapDetailResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetBizIapDetailResponse.BaseResponse)
}

// optional string DetailBuff = 2;
bool GetBizIapDetailResponse::has_detailbuff() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetBizIapDetailResponse::set_has_detailbuff() {
  _has_bits_[0] |= 0x00000001u;
}
void GetBizIapDetailResponse::clear_has_detailbuff() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetBizIapDetailResponse::clear_detailbuff() {
  detailbuff_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_detailbuff();
}
const ::std::string& GetBizIapDetailResponse::detailbuff() const {
  // @@protoc_insertion_point(field_get:micromsg.GetBizIapDetailResponse.DetailBuff)
  return detailbuff_.GetNoArena();
}
void GetBizIapDetailResponse::set_detailbuff(const ::std::string& value) {
  set_has_detailbuff();
  detailbuff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetBizIapDetailResponse.DetailBuff)
}
#if LANG_CXX11
void GetBizIapDetailResponse::set_detailbuff(::std::string&& value) {
  set_has_detailbuff();
  detailbuff_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetBizIapDetailResponse.DetailBuff)
}
#endif
void GetBizIapDetailResponse::set_detailbuff(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_detailbuff();
  detailbuff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetBizIapDetailResponse.DetailBuff)
}
void GetBizIapDetailResponse::set_detailbuff(const char* value, size_t size) {
  set_has_detailbuff();
  detailbuff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetBizIapDetailResponse.DetailBuff)
}
::std::string* GetBizIapDetailResponse::mutable_detailbuff() {
  set_has_detailbuff();
  // @@protoc_insertion_point(field_mutable:micromsg.GetBizIapDetailResponse.DetailBuff)
  return detailbuff_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetBizIapDetailResponse::release_detailbuff() {
  // @@protoc_insertion_point(field_release:micromsg.GetBizIapDetailResponse.DetailBuff)
  clear_has_detailbuff();
  return detailbuff_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetBizIapDetailResponse::set_allocated_detailbuff(::std::string* detailbuff) {
  if (detailbuff != NULL) {
    set_has_detailbuff();
  } else {
    clear_has_detailbuff();
  }
  detailbuff_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), detailbuff);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetBizIapDetailResponse.DetailBuff)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetProductDetailRequest::kBaseRequestFieldNumber;
const int GetProductDetailRequest::kPidFieldNumber;
const int GetProductDetailRequest::kVersionFieldNumber;
const int GetProductDetailRequest::kScanCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetProductDetailRequest::GetProductDetailRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetProductDetailRequest)
}
GetProductDetailRequest::GetProductDetailRequest(const GetProductDetailRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pid()) {
    pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pid_);
  }
  scancode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_scancode()) {
    scancode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scancode_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:micromsg.GetProductDetailRequest)
}

void GetProductDetailRequest::SharedCtor() {
  _cached_size_ = 0;
  pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scancode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(version_));
}

GetProductDetailRequest::~GetProductDetailRequest() {
  // @@protoc_insertion_point(destructor:micromsg.GetProductDetailRequest)
  SharedDtor();
}

void GetProductDetailRequest::SharedDtor() {
  pid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scancode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void GetProductDetailRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetProductDetailRequest::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetProductDetailRequest& GetProductDetailRequest::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetProductDetailRequest* GetProductDetailRequest::New(::google::protobuf::Arena* arena) const {
  GetProductDetailRequest* n = new GetProductDetailRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetProductDetailRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetProductDetailRequest)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_pid()) {
      GOOGLE_DCHECK(!pid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*pid_.UnsafeRawStringPointer())->clear();
    }
    if (has_scancode()) {
      GOOGLE_DCHECK(!scancode_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*scancode_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  version_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetProductDetailRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetProductDetailRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pid().data(), this->pid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetProductDetailRequest.Pid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 Version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ScanCode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scancode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->scancode().data(), this->scancode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetProductDetailRequest.ScanCode");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetProductDetailRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetProductDetailRequest)
  return false;
#undef DO_
}

void GetProductDetailRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetProductDetailRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // optional string Pid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pid().data(), this->pid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetProductDetailRequest.Pid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pid(), output);
  }

  // optional uint32 Version = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->version(), output);
  }

  // optional string ScanCode = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scancode().data(), this->scancode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetProductDetailRequest.ScanCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->scancode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetProductDetailRequest)
}

::google::protobuf::uint8* GetProductDetailRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetProductDetailRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // optional string Pid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pid().data(), this->pid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetProductDetailRequest.Pid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pid(), target);
  }

  // optional uint32 Version = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->version(), target);
  }

  // optional string ScanCode = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scancode().data(), this->scancode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetProductDetailRequest.ScanCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->scancode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetProductDetailRequest)
  return target;
}

size_t GetProductDetailRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetProductDetailRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (has_baserequest()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string Pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pid());
    }

    // optional string ScanCode = 4;
    if (has_scancode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->scancode());
    }

  }
  // optional uint32 Version = 3;
  if (has_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetProductDetailRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetProductDetailRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetProductDetailRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetProductDetailRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetProductDetailRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetProductDetailRequest)
    MergeFrom(*source);
  }
}

void GetProductDetailRequest::MergeFrom(const GetProductDetailRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetProductDetailRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_pid();
      pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_scancode();
      scancode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scancode_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000008u) {
      version_ = from.version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetProductDetailRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetProductDetailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetProductDetailRequest::CopyFrom(const GetProductDetailRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetProductDetailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetProductDetailRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void GetProductDetailRequest::Swap(GetProductDetailRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetProductDetailRequest::InternalSwap(GetProductDetailRequest* other) {
  pid_.Swap(&other->pid_);
  scancode_.Swap(&other->scancode_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(version_, other->version_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetProductDetailRequest::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetProductDetailRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool GetProductDetailRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetProductDetailRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000004u;
}
void GetProductDetailRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetProductDetailRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& GetProductDetailRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductDetailRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* GetProductDetailRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetProductDetailRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* GetProductDetailRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetProductDetailRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void GetProductDetailRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetProductDetailRequest.BaseRequest)
}

// optional string Pid = 2;
bool GetProductDetailRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetProductDetailRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
void GetProductDetailRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetProductDetailRequest::clear_pid() {
  pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pid();
}
const ::std::string& GetProductDetailRequest::pid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductDetailRequest.Pid)
  return pid_.GetNoArena();
}
void GetProductDetailRequest::set_pid(const ::std::string& value) {
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetProductDetailRequest.Pid)
}
#if LANG_CXX11
void GetProductDetailRequest::set_pid(::std::string&& value) {
  set_has_pid();
  pid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetProductDetailRequest.Pid)
}
#endif
void GetProductDetailRequest::set_pid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetProductDetailRequest.Pid)
}
void GetProductDetailRequest::set_pid(const char* value, size_t size) {
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetProductDetailRequest.Pid)
}
::std::string* GetProductDetailRequest::mutable_pid() {
  set_has_pid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetProductDetailRequest.Pid)
  return pid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetProductDetailRequest::release_pid() {
  // @@protoc_insertion_point(field_release:micromsg.GetProductDetailRequest.Pid)
  clear_has_pid();
  return pid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetProductDetailRequest::set_allocated_pid(::std::string* pid) {
  if (pid != NULL) {
    set_has_pid();
  } else {
    clear_has_pid();
  }
  pid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetProductDetailRequest.Pid)
}

// optional uint32 Version = 3;
bool GetProductDetailRequest::has_version() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GetProductDetailRequest::set_has_version() {
  _has_bits_[0] |= 0x00000008u;
}
void GetProductDetailRequest::clear_has_version() {
  _has_bits_[0] &= ~0x00000008u;
}
void GetProductDetailRequest::clear_version() {
  version_ = 0u;
  clear_has_version();
}
::google::protobuf::uint32 GetProductDetailRequest::version() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductDetailRequest.Version)
  return version_;
}
void GetProductDetailRequest::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetProductDetailRequest.Version)
}

// optional string ScanCode = 4;
bool GetProductDetailRequest::has_scancode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetProductDetailRequest::set_has_scancode() {
  _has_bits_[0] |= 0x00000002u;
}
void GetProductDetailRequest::clear_has_scancode() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetProductDetailRequest::clear_scancode() {
  scancode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_scancode();
}
const ::std::string& GetProductDetailRequest::scancode() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductDetailRequest.ScanCode)
  return scancode_.GetNoArena();
}
void GetProductDetailRequest::set_scancode(const ::std::string& value) {
  set_has_scancode();
  scancode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetProductDetailRequest.ScanCode)
}
#if LANG_CXX11
void GetProductDetailRequest::set_scancode(::std::string&& value) {
  set_has_scancode();
  scancode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetProductDetailRequest.ScanCode)
}
#endif
void GetProductDetailRequest::set_scancode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_scancode();
  scancode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetProductDetailRequest.ScanCode)
}
void GetProductDetailRequest::set_scancode(const char* value, size_t size) {
  set_has_scancode();
  scancode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetProductDetailRequest.ScanCode)
}
::std::string* GetProductDetailRequest::mutable_scancode() {
  set_has_scancode();
  // @@protoc_insertion_point(field_mutable:micromsg.GetProductDetailRequest.ScanCode)
  return scancode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetProductDetailRequest::release_scancode() {
  // @@protoc_insertion_point(field_release:micromsg.GetProductDetailRequest.ScanCode)
  clear_has_scancode();
  return scancode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetProductDetailRequest::set_allocated_scancode(::std::string* scancode) {
  if (scancode != NULL) {
    set_has_scancode();
  } else {
    clear_has_scancode();
  }
  scancode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scancode);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetProductDetailRequest.ScanCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetProductDetailResponse::kBaseResponseFieldNumber;
const int GetProductDetailResponse::kProductInfoFieldNumber;
const int GetProductDetailResponse::kRetCodeFieldNumber;
const int GetProductDetailResponse::kRetMsgFieldNumber;
const int GetProductDetailResponse::kRecommendInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetProductDetailResponse::GetProductDetailResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetProductDetailResponse)
}
GetProductDetailResponse::GetProductDetailResponse(const GetProductDetailResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  productinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_productinfo()) {
    productinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productinfo_);
  }
  retmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_retmsg()) {
    retmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retmsg_);
  }
  recommendinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_recommendinfo()) {
    recommendinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recommendinfo_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:micromsg.GetProductDetailResponse)
}

void GetProductDetailResponse::SharedCtor() {
  _cached_size_ = 0;
  productinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recommendinfo_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(retcode_));
}

GetProductDetailResponse::~GetProductDetailResponse() {
  // @@protoc_insertion_point(destructor:micromsg.GetProductDetailResponse)
  SharedDtor();
}

void GetProductDetailResponse::SharedDtor() {
  productinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recommendinfo_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void GetProductDetailResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetProductDetailResponse::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetProductDetailResponse& GetProductDetailResponse::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetProductDetailResponse* GetProductDetailResponse::New(::google::protobuf::Arena* arena) const {
  GetProductDetailResponse* n = new GetProductDetailResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetProductDetailResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetProductDetailResponse)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_productinfo()) {
      GOOGLE_DCHECK(!productinfo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*productinfo_.UnsafeRawStringPointer())->clear();
    }
    if (has_retmsg()) {
      GOOGLE_DCHECK(!retmsg_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*retmsg_.UnsafeRawStringPointer())->clear();
    }
    if (has_recommendinfo()) {
      GOOGLE_DCHECK(!recommendinfo_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*recommendinfo_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  retcode_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetProductDetailResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetProductDetailResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ProductInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->productinfo().data(), this->productinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetProductDetailResponse.ProductInfo");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 RetCode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_retcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string RetMsg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retmsg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->retmsg().data(), this->retmsg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetProductDetailResponse.RetMsg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string RecommendInfo = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_recommendinfo()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->recommendinfo().data(), this->recommendinfo().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetProductDetailResponse.RecommendInfo");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetProductDetailResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetProductDetailResponse)
  return false;
#undef DO_
}

void GetProductDetailResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetProductDetailResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // optional string ProductInfo = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->productinfo().data(), this->productinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetProductDetailResponse.ProductInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->productinfo(), output);
  }

  // optional int32 RetCode = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->retcode(), output);
  }

  // optional string RetMsg = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retmsg().data(), this->retmsg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetProductDetailResponse.RetMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->retmsg(), output);
  }

  // optional string RecommendInfo = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->recommendinfo().data(), this->recommendinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetProductDetailResponse.RecommendInfo");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->recommendinfo(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetProductDetailResponse)
}

::google::protobuf::uint8* GetProductDetailResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetProductDetailResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // optional string ProductInfo = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->productinfo().data(), this->productinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetProductDetailResponse.ProductInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->productinfo(), target);
  }

  // optional int32 RetCode = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->retcode(), target);
  }

  // optional string RetMsg = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retmsg().data(), this->retmsg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetProductDetailResponse.RetMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->retmsg(), target);
  }

  // optional string RecommendInfo = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->recommendinfo().data(), this->recommendinfo().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetProductDetailResponse.RecommendInfo");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->recommendinfo(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetProductDetailResponse)
  return target;
}

size_t GetProductDetailResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetProductDetailResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (has_baseresponse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string ProductInfo = 2;
    if (has_productinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->productinfo());
    }

    // optional string RetMsg = 4;
    if (has_retmsg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->retmsg());
    }

    // optional string RecommendInfo = 5;
    if (has_recommendinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->recommendinfo());
    }

  }
  // optional int32 RetCode = 3;
  if (has_retcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetProductDetailResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetProductDetailResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetProductDetailResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetProductDetailResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetProductDetailResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetProductDetailResponse)
    MergeFrom(*source);
  }
}

void GetProductDetailResponse::MergeFrom(const GetProductDetailResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetProductDetailResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_productinfo();
      productinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productinfo_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_retmsg();
      retmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retmsg_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_recommendinfo();
      recommendinfo_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recommendinfo_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000010u) {
      retcode_ = from.retcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetProductDetailResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetProductDetailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetProductDetailResponse::CopyFrom(const GetProductDetailResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetProductDetailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetProductDetailResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000008) != 0x00000008) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void GetProductDetailResponse::Swap(GetProductDetailResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetProductDetailResponse::InternalSwap(GetProductDetailResponse* other) {
  productinfo_.Swap(&other->productinfo_);
  retmsg_.Swap(&other->retmsg_);
  recommendinfo_.Swap(&other->recommendinfo_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(retcode_, other->retcode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetProductDetailResponse::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetProductDetailResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool GetProductDetailResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GetProductDetailResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000008u;
}
void GetProductDetailResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000008u;
}
void GetProductDetailResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& GetProductDetailResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductDetailResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* GetProductDetailResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetProductDetailResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* GetProductDetailResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetProductDetailResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void GetProductDetailResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetProductDetailResponse.BaseResponse)
}

// optional string ProductInfo = 2;
bool GetProductDetailResponse::has_productinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetProductDetailResponse::set_has_productinfo() {
  _has_bits_[0] |= 0x00000001u;
}
void GetProductDetailResponse::clear_has_productinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetProductDetailResponse::clear_productinfo() {
  productinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_productinfo();
}
const ::std::string& GetProductDetailResponse::productinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductDetailResponse.ProductInfo)
  return productinfo_.GetNoArena();
}
void GetProductDetailResponse::set_productinfo(const ::std::string& value) {
  set_has_productinfo();
  productinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetProductDetailResponse.ProductInfo)
}
#if LANG_CXX11
void GetProductDetailResponse::set_productinfo(::std::string&& value) {
  set_has_productinfo();
  productinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetProductDetailResponse.ProductInfo)
}
#endif
void GetProductDetailResponse::set_productinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_productinfo();
  productinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetProductDetailResponse.ProductInfo)
}
void GetProductDetailResponse::set_productinfo(const char* value, size_t size) {
  set_has_productinfo();
  productinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetProductDetailResponse.ProductInfo)
}
::std::string* GetProductDetailResponse::mutable_productinfo() {
  set_has_productinfo();
  // @@protoc_insertion_point(field_mutable:micromsg.GetProductDetailResponse.ProductInfo)
  return productinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetProductDetailResponse::release_productinfo() {
  // @@protoc_insertion_point(field_release:micromsg.GetProductDetailResponse.ProductInfo)
  clear_has_productinfo();
  return productinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetProductDetailResponse::set_allocated_productinfo(::std::string* productinfo) {
  if (productinfo != NULL) {
    set_has_productinfo();
  } else {
    clear_has_productinfo();
  }
  productinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productinfo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetProductDetailResponse.ProductInfo)
}

// optional int32 RetCode = 3;
bool GetProductDetailResponse::has_retcode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GetProductDetailResponse::set_has_retcode() {
  _has_bits_[0] |= 0x00000010u;
}
void GetProductDetailResponse::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000010u;
}
void GetProductDetailResponse::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
::google::protobuf::int32 GetProductDetailResponse::retcode() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductDetailResponse.RetCode)
  return retcode_;
}
void GetProductDetailResponse::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetProductDetailResponse.RetCode)
}

// optional string RetMsg = 4;
bool GetProductDetailResponse::has_retmsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetProductDetailResponse::set_has_retmsg() {
  _has_bits_[0] |= 0x00000002u;
}
void GetProductDetailResponse::clear_has_retmsg() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetProductDetailResponse::clear_retmsg() {
  retmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_retmsg();
}
const ::std::string& GetProductDetailResponse::retmsg() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductDetailResponse.RetMsg)
  return retmsg_.GetNoArena();
}
void GetProductDetailResponse::set_retmsg(const ::std::string& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetProductDetailResponse.RetMsg)
}
#if LANG_CXX11
void GetProductDetailResponse::set_retmsg(::std::string&& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetProductDetailResponse.RetMsg)
}
#endif
void GetProductDetailResponse::set_retmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetProductDetailResponse.RetMsg)
}
void GetProductDetailResponse::set_retmsg(const char* value, size_t size) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetProductDetailResponse.RetMsg)
}
::std::string* GetProductDetailResponse::mutable_retmsg() {
  set_has_retmsg();
  // @@protoc_insertion_point(field_mutable:micromsg.GetProductDetailResponse.RetMsg)
  return retmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetProductDetailResponse::release_retmsg() {
  // @@protoc_insertion_point(field_release:micromsg.GetProductDetailResponse.RetMsg)
  clear_has_retmsg();
  return retmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetProductDetailResponse::set_allocated_retmsg(::std::string* retmsg) {
  if (retmsg != NULL) {
    set_has_retmsg();
  } else {
    clear_has_retmsg();
  }
  retmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retmsg);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetProductDetailResponse.RetMsg)
}

// optional string RecommendInfo = 5;
bool GetProductDetailResponse::has_recommendinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetProductDetailResponse::set_has_recommendinfo() {
  _has_bits_[0] |= 0x00000004u;
}
void GetProductDetailResponse::clear_has_recommendinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetProductDetailResponse::clear_recommendinfo() {
  recommendinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_recommendinfo();
}
const ::std::string& GetProductDetailResponse::recommendinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductDetailResponse.RecommendInfo)
  return recommendinfo_.GetNoArena();
}
void GetProductDetailResponse::set_recommendinfo(const ::std::string& value) {
  set_has_recommendinfo();
  recommendinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetProductDetailResponse.RecommendInfo)
}
#if LANG_CXX11
void GetProductDetailResponse::set_recommendinfo(::std::string&& value) {
  set_has_recommendinfo();
  recommendinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetProductDetailResponse.RecommendInfo)
}
#endif
void GetProductDetailResponse::set_recommendinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_recommendinfo();
  recommendinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetProductDetailResponse.RecommendInfo)
}
void GetProductDetailResponse::set_recommendinfo(const char* value, size_t size) {
  set_has_recommendinfo();
  recommendinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetProductDetailResponse.RecommendInfo)
}
::std::string* GetProductDetailResponse::mutable_recommendinfo() {
  set_has_recommendinfo();
  // @@protoc_insertion_point(field_mutable:micromsg.GetProductDetailResponse.RecommendInfo)
  return recommendinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetProductDetailResponse::release_recommendinfo() {
  // @@protoc_insertion_point(field_release:micromsg.GetProductDetailResponse.RecommendInfo)
  clear_has_recommendinfo();
  return recommendinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetProductDetailResponse::set_allocated_recommendinfo(::std::string* recommendinfo) {
  if (recommendinfo != NULL) {
    set_has_recommendinfo();
  } else {
    clear_has_recommendinfo();
  }
  recommendinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), recommendinfo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetProductDetailResponse.RecommendInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LockStockRequest::kBaseRequestFieldNumber;
const int LockStockRequest::kPidFieldNumber;
const int LockStockRequest::kSkuIdFieldNumber;
const int LockStockRequest::kCountFieldNumber;
const int LockStockRequest::kUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LockStockRequest::LockStockRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.LockStockRequest)
}
LockStockRequest::LockStockRequest(const LockStockRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pid()) {
    pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pid_);
  }
  skuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_skuid()) {
    skuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.skuid_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:micromsg.LockStockRequest)
}

void LockStockRequest::SharedCtor() {
  _cached_size_ = 0;
  pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  skuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(count_));
}

LockStockRequest::~LockStockRequest() {
  // @@protoc_insertion_point(destructor:micromsg.LockStockRequest)
  SharedDtor();
}

void LockStockRequest::SharedDtor() {
  pid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  skuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void LockStockRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LockStockRequest::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LockStockRequest& LockStockRequest::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

LockStockRequest* LockStockRequest::New(::google::protobuf::Arena* arena) const {
  LockStockRequest* n = new LockStockRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LockStockRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.LockStockRequest)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_pid()) {
      GOOGLE_DCHECK(!pid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*pid_.UnsafeRawStringPointer())->clear();
    }
    if (has_skuid()) {
      GOOGLE_DCHECK(!skuid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*skuid_.UnsafeRawStringPointer())->clear();
    }
    if (has_url()) {
      GOOGLE_DCHECK(!url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*url_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  count_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LockStockRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.LockStockRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pid().data(), this->pid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LockStockRequest.Pid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string SkuId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_skuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->skuid().data(), this->skuid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LockStockRequest.SkuId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 Count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Url = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.LockStockRequest.Url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.LockStockRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.LockStockRequest)
  return false;
#undef DO_
}

void LockStockRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.LockStockRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // optional string Pid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pid().data(), this->pid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LockStockRequest.Pid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pid(), output);
  }

  // optional string SkuId = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->skuid().data(), this->skuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LockStockRequest.SkuId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->skuid(), output);
  }

  // optional uint32 Count = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->count(), output);
  }

  // optional string Url = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LockStockRequest.Url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->url(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.LockStockRequest)
}

::google::protobuf::uint8* LockStockRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.LockStockRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // optional string Pid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pid().data(), this->pid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LockStockRequest.Pid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pid(), target);
  }

  // optional string SkuId = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->skuid().data(), this->skuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LockStockRequest.SkuId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->skuid(), target);
  }

  // optional uint32 Count = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->count(), target);
  }

  // optional string Url = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.LockStockRequest.Url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->url(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.LockStockRequest)
  return target;
}

size_t LockStockRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.LockStockRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (has_baserequest()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string Pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pid());
    }

    // optional string SkuId = 3;
    if (has_skuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->skuid());
    }

    // optional string Url = 5;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

  }
  // optional uint32 Count = 4;
  if (has_count()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LockStockRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.LockStockRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LockStockRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LockStockRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.LockStockRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.LockStockRequest)
    MergeFrom(*source);
  }
}

void LockStockRequest::MergeFrom(const LockStockRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.LockStockRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_pid();
      pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_skuid();
      skuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.skuid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000010u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LockStockRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.LockStockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockStockRequest::CopyFrom(const LockStockRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.LockStockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockStockRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000008) != 0x00000008) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void LockStockRequest::Swap(LockStockRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LockStockRequest::InternalSwap(LockStockRequest* other) {
  pid_.Swap(&other->pid_);
  skuid_.Swap(&other->skuid_);
  url_.Swap(&other->url_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(count_, other->count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LockStockRequest::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LockStockRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool LockStockRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void LockStockRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000008u;
}
void LockStockRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000008u;
}
void LockStockRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& LockStockRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.LockStockRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* LockStockRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.LockStockRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* LockStockRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.LockStockRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void LockStockRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.LockStockRequest.BaseRequest)
}

// optional string Pid = 2;
bool LockStockRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LockStockRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
void LockStockRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
void LockStockRequest::clear_pid() {
  pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pid();
}
const ::std::string& LockStockRequest::pid() const {
  // @@protoc_insertion_point(field_get:micromsg.LockStockRequest.Pid)
  return pid_.GetNoArena();
}
void LockStockRequest::set_pid(const ::std::string& value) {
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LockStockRequest.Pid)
}
#if LANG_CXX11
void LockStockRequest::set_pid(::std::string&& value) {
  set_has_pid();
  pid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LockStockRequest.Pid)
}
#endif
void LockStockRequest::set_pid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LockStockRequest.Pid)
}
void LockStockRequest::set_pid(const char* value, size_t size) {
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LockStockRequest.Pid)
}
::std::string* LockStockRequest::mutable_pid() {
  set_has_pid();
  // @@protoc_insertion_point(field_mutable:micromsg.LockStockRequest.Pid)
  return pid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LockStockRequest::release_pid() {
  // @@protoc_insertion_point(field_release:micromsg.LockStockRequest.Pid)
  clear_has_pid();
  return pid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LockStockRequest::set_allocated_pid(::std::string* pid) {
  if (pid != NULL) {
    set_has_pid();
  } else {
    clear_has_pid();
  }
  pid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LockStockRequest.Pid)
}

// optional string SkuId = 3;
bool LockStockRequest::has_skuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LockStockRequest::set_has_skuid() {
  _has_bits_[0] |= 0x00000002u;
}
void LockStockRequest::clear_has_skuid() {
  _has_bits_[0] &= ~0x00000002u;
}
void LockStockRequest::clear_skuid() {
  skuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_skuid();
}
const ::std::string& LockStockRequest::skuid() const {
  // @@protoc_insertion_point(field_get:micromsg.LockStockRequest.SkuId)
  return skuid_.GetNoArena();
}
void LockStockRequest::set_skuid(const ::std::string& value) {
  set_has_skuid();
  skuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LockStockRequest.SkuId)
}
#if LANG_CXX11
void LockStockRequest::set_skuid(::std::string&& value) {
  set_has_skuid();
  skuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LockStockRequest.SkuId)
}
#endif
void LockStockRequest::set_skuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_skuid();
  skuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LockStockRequest.SkuId)
}
void LockStockRequest::set_skuid(const char* value, size_t size) {
  set_has_skuid();
  skuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LockStockRequest.SkuId)
}
::std::string* LockStockRequest::mutable_skuid() {
  set_has_skuid();
  // @@protoc_insertion_point(field_mutable:micromsg.LockStockRequest.SkuId)
  return skuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LockStockRequest::release_skuid() {
  // @@protoc_insertion_point(field_release:micromsg.LockStockRequest.SkuId)
  clear_has_skuid();
  return skuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LockStockRequest::set_allocated_skuid(::std::string* skuid) {
  if (skuid != NULL) {
    set_has_skuid();
  } else {
    clear_has_skuid();
  }
  skuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), skuid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LockStockRequest.SkuId)
}

// optional uint32 Count = 4;
bool LockStockRequest::has_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void LockStockRequest::set_has_count() {
  _has_bits_[0] |= 0x00000010u;
}
void LockStockRequest::clear_has_count() {
  _has_bits_[0] &= ~0x00000010u;
}
void LockStockRequest::clear_count() {
  count_ = 0u;
  clear_has_count();
}
::google::protobuf::uint32 LockStockRequest::count() const {
  // @@protoc_insertion_point(field_get:micromsg.LockStockRequest.Count)
  return count_;
}
void LockStockRequest::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LockStockRequest.Count)
}

// optional string Url = 5;
bool LockStockRequest::has_url() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LockStockRequest::set_has_url() {
  _has_bits_[0] |= 0x00000004u;
}
void LockStockRequest::clear_has_url() {
  _has_bits_[0] &= ~0x00000004u;
}
void LockStockRequest::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
const ::std::string& LockStockRequest::url() const {
  // @@protoc_insertion_point(field_get:micromsg.LockStockRequest.Url)
  return url_.GetNoArena();
}
void LockStockRequest::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LockStockRequest.Url)
}
#if LANG_CXX11
void LockStockRequest::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LockStockRequest.Url)
}
#endif
void LockStockRequest::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LockStockRequest.Url)
}
void LockStockRequest::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LockStockRequest.Url)
}
::std::string* LockStockRequest::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:micromsg.LockStockRequest.Url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LockStockRequest::release_url() {
  // @@protoc_insertion_point(field_release:micromsg.LockStockRequest.Url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LockStockRequest::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LockStockRequest.Url)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LockStockResponse::kBaseResponseFieldNumber;
const int LockStockResponse::kLockIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LockStockResponse::LockStockResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.LockStockResponse)
}
LockStockResponse::LockStockResponse(const LockStockResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  lockid_ = from.lockid_;
  // @@protoc_insertion_point(copy_constructor:micromsg.LockStockResponse)
}

void LockStockResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&lockid_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(lockid_));
}

LockStockResponse::~LockStockResponse() {
  // @@protoc_insertion_point(destructor:micromsg.LockStockResponse)
  SharedDtor();
}

void LockStockResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void LockStockResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LockStockResponse::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LockStockResponse& LockStockResponse::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

LockStockResponse* LockStockResponse::New(::google::protobuf::Arena* arena) const {
  LockStockResponse* n = new LockStockResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LockStockResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.LockStockResponse)
  if (has_baseresponse()) {
    GOOGLE_DCHECK(baseresponse_ != NULL);
    baseresponse_->::micromsg::BaseResponse::Clear();
  }
  lockid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LockStockResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.LockStockResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 LockId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_lockid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lockid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.LockStockResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.LockStockResponse)
  return false;
#undef DO_
}

void LockStockResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.LockStockResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // optional uint32 LockId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->lockid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.LockStockResponse)
}

::google::protobuf::uint8* LockStockResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.LockStockResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // optional uint32 LockId = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->lockid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.LockStockResponse)
  return target;
}

size_t LockStockResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.LockStockResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (has_baseresponse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }
  // optional uint32 LockId = 2;
  if (has_lockid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lockid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LockStockResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.LockStockResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LockStockResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LockStockResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.LockStockResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.LockStockResponse)
    MergeFrom(*source);
  }
}

void LockStockResponse::MergeFrom(const LockStockResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.LockStockResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000002u) {
      lockid_ = from.lockid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LockStockResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.LockStockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockStockResponse::CopyFrom(const LockStockResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.LockStockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockStockResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void LockStockResponse::Swap(LockStockResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LockStockResponse::InternalSwap(LockStockResponse* other) {
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(lockid_, other->lockid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LockStockResponse::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LockStockResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool LockStockResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LockStockResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
void LockStockResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
void LockStockResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& LockStockResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.LockStockResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* LockStockResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.LockStockResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* LockStockResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.LockStockResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void LockStockResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.LockStockResponse.BaseResponse)
}

// optional uint32 LockId = 2;
bool LockStockResponse::has_lockid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LockStockResponse::set_has_lockid() {
  _has_bits_[0] |= 0x00000002u;
}
void LockStockResponse::clear_has_lockid() {
  _has_bits_[0] &= ~0x00000002u;
}
void LockStockResponse::clear_lockid() {
  lockid_ = 0u;
  clear_has_lockid();
}
::google::protobuf::uint32 LockStockResponse::lockid() const {
  // @@protoc_insertion_point(field_get:micromsg.LockStockResponse.LockId)
  return lockid_;
}
void LockStockResponse::set_lockid(::google::protobuf::uint32 value) {
  set_has_lockid();
  lockid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LockStockResponse.LockId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnlockStockRequest::kBaseRequestFieldNumber;
const int UnlockStockRequest::kPidFieldNumber;
const int UnlockStockRequest::kSkuIdFieldNumber;
const int UnlockStockRequest::kCountFieldNumber;
const int UnlockStockRequest::kUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnlockStockRequest::UnlockStockRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.UnlockStockRequest)
}
UnlockStockRequest::UnlockStockRequest(const UnlockStockRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pid()) {
    pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pid_);
  }
  skuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_skuid()) {
    skuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.skuid_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:micromsg.UnlockStockRequest)
}

void UnlockStockRequest::SharedCtor() {
  _cached_size_ = 0;
  pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  skuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(count_));
}

UnlockStockRequest::~UnlockStockRequest() {
  // @@protoc_insertion_point(destructor:micromsg.UnlockStockRequest)
  SharedDtor();
}

void UnlockStockRequest::SharedDtor() {
  pid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  skuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void UnlockStockRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnlockStockRequest::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnlockStockRequest& UnlockStockRequest::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

UnlockStockRequest* UnlockStockRequest::New(::google::protobuf::Arena* arena) const {
  UnlockStockRequest* n = new UnlockStockRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnlockStockRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.UnlockStockRequest)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_pid()) {
      GOOGLE_DCHECK(!pid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*pid_.UnsafeRawStringPointer())->clear();
    }
    if (has_skuid()) {
      GOOGLE_DCHECK(!skuid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*skuid_.UnsafeRawStringPointer())->clear();
    }
    if (has_url()) {
      GOOGLE_DCHECK(!url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*url_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  count_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UnlockStockRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.UnlockStockRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pid().data(), this->pid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.UnlockStockRequest.Pid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string SkuId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_skuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->skuid().data(), this->skuid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.UnlockStockRequest.SkuId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 Count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Url = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.UnlockStockRequest.Url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.UnlockStockRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.UnlockStockRequest)
  return false;
#undef DO_
}

void UnlockStockRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.UnlockStockRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // optional string Pid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pid().data(), this->pid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.UnlockStockRequest.Pid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pid(), output);
  }

  // optional string SkuId = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->skuid().data(), this->skuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.UnlockStockRequest.SkuId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->skuid(), output);
  }

  // optional uint32 Count = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->count(), output);
  }

  // optional string Url = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.UnlockStockRequest.Url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->url(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.UnlockStockRequest)
}

::google::protobuf::uint8* UnlockStockRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.UnlockStockRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // optional string Pid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pid().data(), this->pid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.UnlockStockRequest.Pid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pid(), target);
  }

  // optional string SkuId = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->skuid().data(), this->skuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.UnlockStockRequest.SkuId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->skuid(), target);
  }

  // optional uint32 Count = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->count(), target);
  }

  // optional string Url = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.UnlockStockRequest.Url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->url(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.UnlockStockRequest)
  return target;
}

size_t UnlockStockRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.UnlockStockRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (has_baserequest()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string Pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pid());
    }

    // optional string SkuId = 3;
    if (has_skuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->skuid());
    }

    // optional string Url = 5;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

  }
  // optional uint32 Count = 4;
  if (has_count()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnlockStockRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.UnlockStockRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UnlockStockRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnlockStockRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.UnlockStockRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.UnlockStockRequest)
    MergeFrom(*source);
  }
}

void UnlockStockRequest::MergeFrom(const UnlockStockRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.UnlockStockRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_pid();
      pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_skuid();
      skuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.skuid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000010u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UnlockStockRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.UnlockStockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnlockStockRequest::CopyFrom(const UnlockStockRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.UnlockStockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnlockStockRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000008) != 0x00000008) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void UnlockStockRequest::Swap(UnlockStockRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnlockStockRequest::InternalSwap(UnlockStockRequest* other) {
  pid_.Swap(&other->pid_);
  skuid_.Swap(&other->skuid_);
  url_.Swap(&other->url_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(count_, other->count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnlockStockRequest::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnlockStockRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool UnlockStockRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void UnlockStockRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000008u;
}
void UnlockStockRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000008u;
}
void UnlockStockRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& UnlockStockRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.UnlockStockRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* UnlockStockRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.UnlockStockRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* UnlockStockRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.UnlockStockRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void UnlockStockRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.UnlockStockRequest.BaseRequest)
}

// optional string Pid = 2;
bool UnlockStockRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UnlockStockRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
void UnlockStockRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
void UnlockStockRequest::clear_pid() {
  pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pid();
}
const ::std::string& UnlockStockRequest::pid() const {
  // @@protoc_insertion_point(field_get:micromsg.UnlockStockRequest.Pid)
  return pid_.GetNoArena();
}
void UnlockStockRequest::set_pid(const ::std::string& value) {
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.UnlockStockRequest.Pid)
}
#if LANG_CXX11
void UnlockStockRequest::set_pid(::std::string&& value) {
  set_has_pid();
  pid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.UnlockStockRequest.Pid)
}
#endif
void UnlockStockRequest::set_pid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.UnlockStockRequest.Pid)
}
void UnlockStockRequest::set_pid(const char* value, size_t size) {
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.UnlockStockRequest.Pid)
}
::std::string* UnlockStockRequest::mutable_pid() {
  set_has_pid();
  // @@protoc_insertion_point(field_mutable:micromsg.UnlockStockRequest.Pid)
  return pid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UnlockStockRequest::release_pid() {
  // @@protoc_insertion_point(field_release:micromsg.UnlockStockRequest.Pid)
  clear_has_pid();
  return pid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnlockStockRequest::set_allocated_pid(::std::string* pid) {
  if (pid != NULL) {
    set_has_pid();
  } else {
    clear_has_pid();
  }
  pid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.UnlockStockRequest.Pid)
}

// optional string SkuId = 3;
bool UnlockStockRequest::has_skuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UnlockStockRequest::set_has_skuid() {
  _has_bits_[0] |= 0x00000002u;
}
void UnlockStockRequest::clear_has_skuid() {
  _has_bits_[0] &= ~0x00000002u;
}
void UnlockStockRequest::clear_skuid() {
  skuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_skuid();
}
const ::std::string& UnlockStockRequest::skuid() const {
  // @@protoc_insertion_point(field_get:micromsg.UnlockStockRequest.SkuId)
  return skuid_.GetNoArena();
}
void UnlockStockRequest::set_skuid(const ::std::string& value) {
  set_has_skuid();
  skuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.UnlockStockRequest.SkuId)
}
#if LANG_CXX11
void UnlockStockRequest::set_skuid(::std::string&& value) {
  set_has_skuid();
  skuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.UnlockStockRequest.SkuId)
}
#endif
void UnlockStockRequest::set_skuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_skuid();
  skuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.UnlockStockRequest.SkuId)
}
void UnlockStockRequest::set_skuid(const char* value, size_t size) {
  set_has_skuid();
  skuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.UnlockStockRequest.SkuId)
}
::std::string* UnlockStockRequest::mutable_skuid() {
  set_has_skuid();
  // @@protoc_insertion_point(field_mutable:micromsg.UnlockStockRequest.SkuId)
  return skuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UnlockStockRequest::release_skuid() {
  // @@protoc_insertion_point(field_release:micromsg.UnlockStockRequest.SkuId)
  clear_has_skuid();
  return skuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnlockStockRequest::set_allocated_skuid(::std::string* skuid) {
  if (skuid != NULL) {
    set_has_skuid();
  } else {
    clear_has_skuid();
  }
  skuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), skuid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.UnlockStockRequest.SkuId)
}

// optional uint32 Count = 4;
bool UnlockStockRequest::has_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void UnlockStockRequest::set_has_count() {
  _has_bits_[0] |= 0x00000010u;
}
void UnlockStockRequest::clear_has_count() {
  _has_bits_[0] &= ~0x00000010u;
}
void UnlockStockRequest::clear_count() {
  count_ = 0u;
  clear_has_count();
}
::google::protobuf::uint32 UnlockStockRequest::count() const {
  // @@protoc_insertion_point(field_get:micromsg.UnlockStockRequest.Count)
  return count_;
}
void UnlockStockRequest::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.UnlockStockRequest.Count)
}

// optional string Url = 5;
bool UnlockStockRequest::has_url() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void UnlockStockRequest::set_has_url() {
  _has_bits_[0] |= 0x00000004u;
}
void UnlockStockRequest::clear_has_url() {
  _has_bits_[0] &= ~0x00000004u;
}
void UnlockStockRequest::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
const ::std::string& UnlockStockRequest::url() const {
  // @@protoc_insertion_point(field_get:micromsg.UnlockStockRequest.Url)
  return url_.GetNoArena();
}
void UnlockStockRequest::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.UnlockStockRequest.Url)
}
#if LANG_CXX11
void UnlockStockRequest::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.UnlockStockRequest.Url)
}
#endif
void UnlockStockRequest::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.UnlockStockRequest.Url)
}
void UnlockStockRequest::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.UnlockStockRequest.Url)
}
::std::string* UnlockStockRequest::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:micromsg.UnlockStockRequest.Url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UnlockStockRequest::release_url() {
  // @@protoc_insertion_point(field_release:micromsg.UnlockStockRequest.Url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnlockStockRequest::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:micromsg.UnlockStockRequest.Url)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnlockStockResponse::kBaseResponseFieldNumber;
const int UnlockStockResponse::kLockIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnlockStockResponse::UnlockStockResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.UnlockStockResponse)
}
UnlockStockResponse::UnlockStockResponse(const UnlockStockResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  lockid_ = from.lockid_;
  // @@protoc_insertion_point(copy_constructor:micromsg.UnlockStockResponse)
}

void UnlockStockResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&lockid_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(lockid_));
}

UnlockStockResponse::~UnlockStockResponse() {
  // @@protoc_insertion_point(destructor:micromsg.UnlockStockResponse)
  SharedDtor();
}

void UnlockStockResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void UnlockStockResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnlockStockResponse::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnlockStockResponse& UnlockStockResponse::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

UnlockStockResponse* UnlockStockResponse::New(::google::protobuf::Arena* arena) const {
  UnlockStockResponse* n = new UnlockStockResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnlockStockResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.UnlockStockResponse)
  if (has_baseresponse()) {
    GOOGLE_DCHECK(baseresponse_ != NULL);
    baseresponse_->::micromsg::BaseResponse::Clear();
  }
  lockid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UnlockStockResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.UnlockStockResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 LockId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_lockid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lockid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.UnlockStockResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.UnlockStockResponse)
  return false;
#undef DO_
}

void UnlockStockResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.UnlockStockResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // optional uint32 LockId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->lockid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.UnlockStockResponse)
}

::google::protobuf::uint8* UnlockStockResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.UnlockStockResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // optional uint32 LockId = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->lockid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.UnlockStockResponse)
  return target;
}

size_t UnlockStockResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.UnlockStockResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (has_baseresponse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }
  // optional uint32 LockId = 2;
  if (has_lockid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lockid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnlockStockResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.UnlockStockResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UnlockStockResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnlockStockResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.UnlockStockResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.UnlockStockResponse)
    MergeFrom(*source);
  }
}

void UnlockStockResponse::MergeFrom(const UnlockStockResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.UnlockStockResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000002u) {
      lockid_ = from.lockid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UnlockStockResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.UnlockStockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnlockStockResponse::CopyFrom(const UnlockStockResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.UnlockStockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnlockStockResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void UnlockStockResponse::Swap(UnlockStockResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnlockStockResponse::InternalSwap(UnlockStockResponse* other) {
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(lockid_, other->lockid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnlockStockResponse::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnlockStockResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool UnlockStockResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UnlockStockResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
void UnlockStockResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
void UnlockStockResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& UnlockStockResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.UnlockStockResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* UnlockStockResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.UnlockStockResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* UnlockStockResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.UnlockStockResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void UnlockStockResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.UnlockStockResponse.BaseResponse)
}

// optional uint32 LockId = 2;
bool UnlockStockResponse::has_lockid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UnlockStockResponse::set_has_lockid() {
  _has_bits_[0] |= 0x00000002u;
}
void UnlockStockResponse::clear_has_lockid() {
  _has_bits_[0] &= ~0x00000002u;
}
void UnlockStockResponse::clear_lockid() {
  lockid_ = 0u;
  clear_has_lockid();
}
::google::protobuf::uint32 UnlockStockResponse::lockid() const {
  // @@protoc_insertion_point(field_get:micromsg.UnlockStockResponse.LockId)
  return lockid_;
}
void UnlockStockResponse::set_lockid(::google::protobuf::uint32 value) {
  set_has_lockid();
  lockid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.UnlockStockResponse.LockId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KVItem::kKeyFieldNumber;
const int KVItem::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KVItem::KVItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.KVItem)
}
KVItem::KVItem(const KVItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.KVItem)
}

void KVItem::SharedCtor() {
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

KVItem::~KVItem() {
  // @@protoc_insertion_point(destructor:micromsg.KVItem)
  SharedDtor();
}

void KVItem::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KVItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KVItem::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KVItem& KVItem::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

KVItem* KVItem::New(::google::protobuf::Arena* arena) const {
  KVItem* n = new KVItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KVItem::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.KVItem)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_key()) {
      GOOGLE_DCHECK(!key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*key_.UnsafeRawStringPointer())->clear();
    }
    if (has_value()) {
      GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*value_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool KVItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.KVItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.KVItem.Key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.KVItem.Value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.KVItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.KVItem)
  return false;
#undef DO_
}

void KVItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.KVItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string Key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.KVItem.Key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional string Value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.KVItem.Value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.KVItem)
}

::google::protobuf::uint8* KVItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.KVItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string Key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.KVItem.Key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional string Value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.KVItem.Value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.KVItem)
  return target;
}

size_t KVItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.KVItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string Key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional string Value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KVItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.KVItem)
  GOOGLE_DCHECK_NE(&from, this);
  const KVItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KVItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.KVItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.KVItem)
    MergeFrom(*source);
  }
}

void KVItem::MergeFrom(const KVItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.KVItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void KVItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.KVItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KVItem::CopyFrom(const KVItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.KVItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KVItem::IsInitialized() const {
  return true;
}

void KVItem::Swap(KVItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KVItem::InternalSwap(KVItem* other) {
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KVItem::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KVItem

// optional string Key = 1;
bool KVItem::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void KVItem::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void KVItem::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void KVItem::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
const ::std::string& KVItem::key() const {
  // @@protoc_insertion_point(field_get:micromsg.KVItem.Key)
  return key_.GetNoArena();
}
void KVItem::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.KVItem.Key)
}
#if LANG_CXX11
void KVItem::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.KVItem.Key)
}
#endif
void KVItem::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.KVItem.Key)
}
void KVItem::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.KVItem.Key)
}
::std::string* KVItem::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:micromsg.KVItem.Key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* KVItem::release_key() {
  // @@protoc_insertion_point(field_release:micromsg.KVItem.Key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void KVItem::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:micromsg.KVItem.Key)
}

// optional string Value = 2;
bool KVItem::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void KVItem::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void KVItem::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void KVItem::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
const ::std::string& KVItem::value() const {
  // @@protoc_insertion_point(field_get:micromsg.KVItem.Value)
  return value_.GetNoArena();
}
void KVItem::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.KVItem.Value)
}
#if LANG_CXX11
void KVItem::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.KVItem.Value)
}
#endif
void KVItem::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.KVItem.Value)
}
void KVItem::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.KVItem.Value)
}
::std::string* KVItem::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:micromsg.KVItem.Value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* KVItem::release_value() {
  // @@protoc_insertion_point(field_release:micromsg.KVItem.Value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void KVItem::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:micromsg.KVItem.Value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Express::kNameFieldNumber;
const int Express::kPriceFieldNumber;
const int Express::kPriceTypeFieldNumber;
const int Express::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Express::Express()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.Express)
}
Express::Express(const Express& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  pricetype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pricetype()) {
    pricetype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pricetype_);
  }
  ::memcpy(&price_, &from.price_,
    reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&price_) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:micromsg.Express)
}

void Express::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pricetype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&price_, 0, reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&price_) + sizeof(id_));
}

Express::~Express() {
  // @@protoc_insertion_point(destructor:micromsg.Express)
  SharedDtor();
}

void Express::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pricetype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Express::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Express::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Express& Express::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

Express* Express::New(::google::protobuf::Arena* arena) const {
  Express* n = new Express;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Express::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.Express)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_pricetype()) {
      GOOGLE_DCHECK(!pricetype_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*pricetype_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 12u) {
    ::memset(&price_, 0, reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&price_) + sizeof(id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Express::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.Express)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.Express.Name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 Price = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_price();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string PriceType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pricetype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pricetype().data(), this->pricetype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.Express.PriceType");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 Id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.Express)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.Express)
  return false;
#undef DO_
}

void Express::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.Express)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string Name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Express.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint32 Price = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->price(), output);
  }

  // optional string PriceType = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pricetype().data(), this->pricetype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Express.PriceType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->pricetype(), output);
  }

  // optional uint32 Id = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.Express)
}

::google::protobuf::uint8* Express::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.Express)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string Name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Express.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint32 Price = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->price(), target);
  }

  // optional string PriceType = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pricetype().data(), this->pricetype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Express.PriceType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->pricetype(), target);
  }

  // optional uint32 Id = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.Express)
  return target;
}

size_t Express::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.Express)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string Name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string PriceType = 3;
    if (has_pricetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pricetype());
    }

    // optional uint32 Price = 2;
    if (has_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->price());
    }

    // optional uint32 Id = 4;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Express::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.Express)
  GOOGLE_DCHECK_NE(&from, this);
  const Express* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Express>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.Express)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.Express)
    MergeFrom(*source);
  }
}

void Express::MergeFrom(const Express& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.Express)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_pricetype();
      pricetype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pricetype_);
    }
    if (cached_has_bits & 0x00000004u) {
      price_ = from.price_;
    }
    if (cached_has_bits & 0x00000008u) {
      id_ = from.id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Express::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.Express)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Express::CopyFrom(const Express& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.Express)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Express::IsInitialized() const {
  return true;
}

void Express::Swap(Express* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Express::InternalSwap(Express* other) {
  name_.Swap(&other->name_);
  pricetype_.Swap(&other->pricetype_);
  std::swap(price_, other->price_);
  std::swap(id_, other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Express::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Express

// optional string Name = 1;
bool Express::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Express::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void Express::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void Express::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& Express::name() const {
  // @@protoc_insertion_point(field_get:micromsg.Express.Name)
  return name_.GetNoArena();
}
void Express::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Express.Name)
}
#if LANG_CXX11
void Express::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Express.Name)
}
#endif
void Express::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Express.Name)
}
void Express::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Express.Name)
}
::std::string* Express::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:micromsg.Express.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Express::release_name() {
  // @@protoc_insertion_point(field_release:micromsg.Express.Name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Express::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Express.Name)
}

// optional uint32 Price = 2;
bool Express::has_price() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Express::set_has_price() {
  _has_bits_[0] |= 0x00000004u;
}
void Express::clear_has_price() {
  _has_bits_[0] &= ~0x00000004u;
}
void Express::clear_price() {
  price_ = 0u;
  clear_has_price();
}
::google::protobuf::uint32 Express::price() const {
  // @@protoc_insertion_point(field_get:micromsg.Express.Price)
  return price_;
}
void Express::set_price(::google::protobuf::uint32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:micromsg.Express.Price)
}

// optional string PriceType = 3;
bool Express::has_pricetype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Express::set_has_pricetype() {
  _has_bits_[0] |= 0x00000002u;
}
void Express::clear_has_pricetype() {
  _has_bits_[0] &= ~0x00000002u;
}
void Express::clear_pricetype() {
  pricetype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pricetype();
}
const ::std::string& Express::pricetype() const {
  // @@protoc_insertion_point(field_get:micromsg.Express.PriceType)
  return pricetype_.GetNoArena();
}
void Express::set_pricetype(const ::std::string& value) {
  set_has_pricetype();
  pricetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Express.PriceType)
}
#if LANG_CXX11
void Express::set_pricetype(::std::string&& value) {
  set_has_pricetype();
  pricetype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Express.PriceType)
}
#endif
void Express::set_pricetype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pricetype();
  pricetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Express.PriceType)
}
void Express::set_pricetype(const char* value, size_t size) {
  set_has_pricetype();
  pricetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Express.PriceType)
}
::std::string* Express::mutable_pricetype() {
  set_has_pricetype();
  // @@protoc_insertion_point(field_mutable:micromsg.Express.PriceType)
  return pricetype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Express::release_pricetype() {
  // @@protoc_insertion_point(field_release:micromsg.Express.PriceType)
  clear_has_pricetype();
  return pricetype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Express::set_allocated_pricetype(::std::string* pricetype) {
  if (pricetype != NULL) {
    set_has_pricetype();
  } else {
    clear_has_pricetype();
  }
  pricetype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pricetype);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Express.PriceType)
}

// optional uint32 Id = 4;
bool Express::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Express::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
void Express::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void Express::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 Express::id() const {
  // @@protoc_insertion_point(field_get:micromsg.Express.Id)
  return id_;
}
void Express::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:micromsg.Express.Id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Address::kCountryFieldNumber;
const int Address::kProvinceFieldNumber;
const int Address::kCityFieldNumber;
const int Address::kDetailFieldNumber;
const int Address::kUserNameFieldNumber;
const int Address::kTelFieldNumber;
const int Address::kZipCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Address::Address()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.Address)
}
Address::Address(const Address& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_country()) {
    country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_);
  }
  province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_province()) {
    province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.province_);
  }
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_city()) {
    city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
  }
  detail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_detail()) {
    detail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detail_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  tel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tel()) {
    tel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tel_);
  }
  zipcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_zipcode()) {
    zipcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zipcode_);
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.Address)
}

void Address::SharedCtor() {
  _cached_size_ = 0;
  country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zipcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Address::~Address() {
  // @@protoc_insertion_point(destructor:micromsg.Address)
  SharedDtor();
}

void Address::SharedDtor() {
  country_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  province_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  city_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  detail_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zipcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Address::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Address::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Address& Address::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

Address* Address::New(::google::protobuf::Arena* arena) const {
  Address* n = new Address;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Address::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.Address)
  if (_has_bits_[0 / 32] & 127u) {
    if (has_country()) {
      GOOGLE_DCHECK(!country_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*country_.UnsafeRawStringPointer())->clear();
    }
    if (has_province()) {
      GOOGLE_DCHECK(!province_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*province_.UnsafeRawStringPointer())->clear();
    }
    if (has_city()) {
      GOOGLE_DCHECK(!city_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*city_.UnsafeRawStringPointer())->clear();
    }
    if (has_detail()) {
      GOOGLE_DCHECK(!detail_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*detail_.UnsafeRawStringPointer())->clear();
    }
    if (has_username()) {
      GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*username_.UnsafeRawStringPointer())->clear();
    }
    if (has_tel()) {
      GOOGLE_DCHECK(!tel_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*tel_.UnsafeRawStringPointer())->clear();
    }
    if (has_zipcode()) {
      GOOGLE_DCHECK(!zipcode_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*zipcode_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Address::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.Address)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Country = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->country().data(), this->country().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.Address.Country");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Province = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_province()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->province().data(), this->province().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.Address.Province");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string City = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_city()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->city().data(), this->city().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.Address.City");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Detail = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_detail()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->detail().data(), this->detail().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.Address.Detail");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string UserName = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.Address.UserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Tel = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tel().data(), this->tel().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.Address.Tel");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ZipCode = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zipcode()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->zipcode().data(), this->zipcode().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.Address.ZipCode");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.Address)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.Address)
  return false;
#undef DO_
}

void Address::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string Country = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country().data(), this->country().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Address.Country");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->country(), output);
  }

  // optional string Province = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->province().data(), this->province().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Address.Province");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->province(), output);
  }

  // optional string City = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->city().data(), this->city().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Address.City");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->city(), output);
  }

  // optional string Detail = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->detail().data(), this->detail().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Address.Detail");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->detail(), output);
  }

  // optional string UserName = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Address.UserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->username(), output);
  }

  // optional string Tel = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tel().data(), this->tel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Address.Tel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->tel(), output);
  }

  // optional string ZipCode = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->zipcode().data(), this->zipcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Address.ZipCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->zipcode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.Address)
}

::google::protobuf::uint8* Address::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string Country = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country().data(), this->country().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Address.Country");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->country(), target);
  }

  // optional string Province = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->province().data(), this->province().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Address.Province");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->province(), target);
  }

  // optional string City = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->city().data(), this->city().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Address.City");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->city(), target);
  }

  // optional string Detail = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->detail().data(), this->detail().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Address.Detail");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->detail(), target);
  }

  // optional string UserName = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Address.UserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->username(), target);
  }

  // optional string Tel = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tel().data(), this->tel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Address.Tel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->tel(), target);
  }

  // optional string ZipCode = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->zipcode().data(), this->zipcode().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Address.ZipCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->zipcode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.Address)
  return target;
}

size_t Address::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.Address)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string Country = 1;
    if (has_country()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->country());
    }

    // optional string Province = 2;
    if (has_province()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->province());
    }

    // optional string City = 3;
    if (has_city()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->city());
    }

    // optional string Detail = 4;
    if (has_detail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->detail());
    }

    // optional string UserName = 5;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional string Tel = 6;
    if (has_tel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tel());
    }

    // optional string ZipCode = 7;
    if (has_zipcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->zipcode());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Address::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.Address)
  GOOGLE_DCHECK_NE(&from, this);
  const Address* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Address>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.Address)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.Address)
    MergeFrom(*source);
  }
}

void Address::MergeFrom(const Address& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.Address)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_country();
      country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_province();
      province_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.province_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_city();
      city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_detail();
      detail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detail_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_tel();
      tel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tel_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_zipcode();
      zipcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zipcode_);
    }
  }
}

void Address::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Address::CopyFrom(const Address& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Address::IsInitialized() const {
  return true;
}

void Address::Swap(Address* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Address::InternalSwap(Address* other) {
  country_.Swap(&other->country_);
  province_.Swap(&other->province_);
  city_.Swap(&other->city_);
  detail_.Swap(&other->detail_);
  username_.Swap(&other->username_);
  tel_.Swap(&other->tel_);
  zipcode_.Swap(&other->zipcode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Address::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Address

// optional string Country = 1;
bool Address::has_country() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Address::set_has_country() {
  _has_bits_[0] |= 0x00000001u;
}
void Address::clear_has_country() {
  _has_bits_[0] &= ~0x00000001u;
}
void Address::clear_country() {
  country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_country();
}
const ::std::string& Address::country() const {
  // @@protoc_insertion_point(field_get:micromsg.Address.Country)
  return country_.GetNoArena();
}
void Address::set_country(const ::std::string& value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Address.Country)
}
#if LANG_CXX11
void Address::set_country(::std::string&& value) {
  set_has_country();
  country_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Address.Country)
}
#endif
void Address::set_country(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Address.Country)
}
void Address::set_country(const char* value, size_t size) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Address.Country)
}
::std::string* Address::mutable_country() {
  set_has_country();
  // @@protoc_insertion_point(field_mutable:micromsg.Address.Country)
  return country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Address::release_country() {
  // @@protoc_insertion_point(field_release:micromsg.Address.Country)
  clear_has_country();
  return country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Address::set_allocated_country(::std::string* country) {
  if (country != NULL) {
    set_has_country();
  } else {
    clear_has_country();
  }
  country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Address.Country)
}

// optional string Province = 2;
bool Address::has_province() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Address::set_has_province() {
  _has_bits_[0] |= 0x00000002u;
}
void Address::clear_has_province() {
  _has_bits_[0] &= ~0x00000002u;
}
void Address::clear_province() {
  province_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_province();
}
const ::std::string& Address::province() const {
  // @@protoc_insertion_point(field_get:micromsg.Address.Province)
  return province_.GetNoArena();
}
void Address::set_province(const ::std::string& value) {
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Address.Province)
}
#if LANG_CXX11
void Address::set_province(::std::string&& value) {
  set_has_province();
  province_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Address.Province)
}
#endif
void Address::set_province(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Address.Province)
}
void Address::set_province(const char* value, size_t size) {
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Address.Province)
}
::std::string* Address::mutable_province() {
  set_has_province();
  // @@protoc_insertion_point(field_mutable:micromsg.Address.Province)
  return province_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Address::release_province() {
  // @@protoc_insertion_point(field_release:micromsg.Address.Province)
  clear_has_province();
  return province_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Address::set_allocated_province(::std::string* province) {
  if (province != NULL) {
    set_has_province();
  } else {
    clear_has_province();
  }
  province_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), province);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Address.Province)
}

// optional string City = 3;
bool Address::has_city() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Address::set_has_city() {
  _has_bits_[0] |= 0x00000004u;
}
void Address::clear_has_city() {
  _has_bits_[0] &= ~0x00000004u;
}
void Address::clear_city() {
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_city();
}
const ::std::string& Address::city() const {
  // @@protoc_insertion_point(field_get:micromsg.Address.City)
  return city_.GetNoArena();
}
void Address::set_city(const ::std::string& value) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Address.City)
}
#if LANG_CXX11
void Address::set_city(::std::string&& value) {
  set_has_city();
  city_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Address.City)
}
#endif
void Address::set_city(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Address.City)
}
void Address::set_city(const char* value, size_t size) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Address.City)
}
::std::string* Address::mutable_city() {
  set_has_city();
  // @@protoc_insertion_point(field_mutable:micromsg.Address.City)
  return city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Address::release_city() {
  // @@protoc_insertion_point(field_release:micromsg.Address.City)
  clear_has_city();
  return city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Address::set_allocated_city(::std::string* city) {
  if (city != NULL) {
    set_has_city();
  } else {
    clear_has_city();
  }
  city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Address.City)
}

// optional string Detail = 4;
bool Address::has_detail() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Address::set_has_detail() {
  _has_bits_[0] |= 0x00000008u;
}
void Address::clear_has_detail() {
  _has_bits_[0] &= ~0x00000008u;
}
void Address::clear_detail() {
  detail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_detail();
}
const ::std::string& Address::detail() const {
  // @@protoc_insertion_point(field_get:micromsg.Address.Detail)
  return detail_.GetNoArena();
}
void Address::set_detail(const ::std::string& value) {
  set_has_detail();
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Address.Detail)
}
#if LANG_CXX11
void Address::set_detail(::std::string&& value) {
  set_has_detail();
  detail_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Address.Detail)
}
#endif
void Address::set_detail(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_detail();
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Address.Detail)
}
void Address::set_detail(const char* value, size_t size) {
  set_has_detail();
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Address.Detail)
}
::std::string* Address::mutable_detail() {
  set_has_detail();
  // @@protoc_insertion_point(field_mutable:micromsg.Address.Detail)
  return detail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Address::release_detail() {
  // @@protoc_insertion_point(field_release:micromsg.Address.Detail)
  clear_has_detail();
  return detail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Address::set_allocated_detail(::std::string* detail) {
  if (detail != NULL) {
    set_has_detail();
  } else {
    clear_has_detail();
  }
  detail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), detail);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Address.Detail)
}

// optional string UserName = 5;
bool Address::has_username() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Address::set_has_username() {
  _has_bits_[0] |= 0x00000010u;
}
void Address::clear_has_username() {
  _has_bits_[0] &= ~0x00000010u;
}
void Address::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& Address::username() const {
  // @@protoc_insertion_point(field_get:micromsg.Address.UserName)
  return username_.GetNoArena();
}
void Address::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Address.UserName)
}
#if LANG_CXX11
void Address::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Address.UserName)
}
#endif
void Address::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Address.UserName)
}
void Address::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Address.UserName)
}
::std::string* Address::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.Address.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Address::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.Address.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Address::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Address.UserName)
}

// optional string Tel = 6;
bool Address::has_tel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Address::set_has_tel() {
  _has_bits_[0] |= 0x00000020u;
}
void Address::clear_has_tel() {
  _has_bits_[0] &= ~0x00000020u;
}
void Address::clear_tel() {
  tel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tel();
}
const ::std::string& Address::tel() const {
  // @@protoc_insertion_point(field_get:micromsg.Address.Tel)
  return tel_.GetNoArena();
}
void Address::set_tel(const ::std::string& value) {
  set_has_tel();
  tel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Address.Tel)
}
#if LANG_CXX11
void Address::set_tel(::std::string&& value) {
  set_has_tel();
  tel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Address.Tel)
}
#endif
void Address::set_tel(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tel();
  tel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Address.Tel)
}
void Address::set_tel(const char* value, size_t size) {
  set_has_tel();
  tel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Address.Tel)
}
::std::string* Address::mutable_tel() {
  set_has_tel();
  // @@protoc_insertion_point(field_mutable:micromsg.Address.Tel)
  return tel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Address::release_tel() {
  // @@protoc_insertion_point(field_release:micromsg.Address.Tel)
  clear_has_tel();
  return tel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Address::set_allocated_tel(::std::string* tel) {
  if (tel != NULL) {
    set_has_tel();
  } else {
    clear_has_tel();
  }
  tel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tel);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Address.Tel)
}

// optional string ZipCode = 7;
bool Address::has_zipcode() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Address::set_has_zipcode() {
  _has_bits_[0] |= 0x00000040u;
}
void Address::clear_has_zipcode() {
  _has_bits_[0] &= ~0x00000040u;
}
void Address::clear_zipcode() {
  zipcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_zipcode();
}
const ::std::string& Address::zipcode() const {
  // @@protoc_insertion_point(field_get:micromsg.Address.ZipCode)
  return zipcode_.GetNoArena();
}
void Address::set_zipcode(const ::std::string& value) {
  set_has_zipcode();
  zipcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Address.ZipCode)
}
#if LANG_CXX11
void Address::set_zipcode(::std::string&& value) {
  set_has_zipcode();
  zipcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Address.ZipCode)
}
#endif
void Address::set_zipcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_zipcode();
  zipcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Address.ZipCode)
}
void Address::set_zipcode(const char* value, size_t size) {
  set_has_zipcode();
  zipcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Address.ZipCode)
}
::std::string* Address::mutable_zipcode() {
  set_has_zipcode();
  // @@protoc_insertion_point(field_mutable:micromsg.Address.ZipCode)
  return zipcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Address::release_zipcode() {
  // @@protoc_insertion_point(field_release:micromsg.Address.ZipCode)
  clear_has_zipcode();
  return zipcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Address::set_allocated_zipcode(::std::string* zipcode) {
  if (zipcode != NULL) {
    set_has_zipcode();
  } else {
    clear_has_zipcode();
  }
  zipcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), zipcode);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Address.ZipCode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Receipt::kIsNeedFieldNumber;
const int Receipt::kDetailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Receipt::Receipt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.Receipt)
}
Receipt::Receipt(const Receipt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  detail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_detail()) {
    detail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detail_);
  }
  isneed_ = from.isneed_;
  // @@protoc_insertion_point(copy_constructor:micromsg.Receipt)
}

void Receipt::SharedCtor() {
  _cached_size_ = 0;
  detail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isneed_ = 0u;
}

Receipt::~Receipt() {
  // @@protoc_insertion_point(destructor:micromsg.Receipt)
  SharedDtor();
}

void Receipt::SharedDtor() {
  detail_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Receipt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Receipt::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Receipt& Receipt::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

Receipt* Receipt::New(::google::protobuf::Arena* arena) const {
  Receipt* n = new Receipt;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Receipt::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.Receipt)
  if (has_detail()) {
    GOOGLE_DCHECK(!detail_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*detail_.UnsafeRawStringPointer())->clear();
  }
  isneed_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Receipt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.Receipt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 IsNeed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_isneed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &isneed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Detail = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_detail()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->detail().data(), this->detail().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.Receipt.Detail");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.Receipt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.Receipt)
  return false;
#undef DO_
}

void Receipt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.Receipt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 IsNeed = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->isneed(), output);
  }

  // optional string Detail = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->detail().data(), this->detail().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Receipt.Detail");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->detail(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.Receipt)
}

::google::protobuf::uint8* Receipt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.Receipt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 IsNeed = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->isneed(), target);
  }

  // optional string Detail = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->detail().data(), this->detail().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Receipt.Detail");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->detail(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.Receipt)
  return target;
}

size_t Receipt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.Receipt)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint32 IsNeed = 1;
  if (has_isneed()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->isneed());
  }
  // optional string Detail = 2;
  if (has_detail()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->detail());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Receipt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.Receipt)
  GOOGLE_DCHECK_NE(&from, this);
  const Receipt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Receipt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.Receipt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.Receipt)
    MergeFrom(*source);
  }
}

void Receipt::MergeFrom(const Receipt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.Receipt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_detail();
      detail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.detail_);
    }
    if (cached_has_bits & 0x00000002u) {
      isneed_ = from.isneed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Receipt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.Receipt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Receipt::CopyFrom(const Receipt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.Receipt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Receipt::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void Receipt::Swap(Receipt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Receipt::InternalSwap(Receipt* other) {
  detail_.Swap(&other->detail_);
  std::swap(isneed_, other->isneed_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Receipt::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Receipt

// required uint32 IsNeed = 1;
bool Receipt::has_isneed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Receipt::set_has_isneed() {
  _has_bits_[0] |= 0x00000002u;
}
void Receipt::clear_has_isneed() {
  _has_bits_[0] &= ~0x00000002u;
}
void Receipt::clear_isneed() {
  isneed_ = 0u;
  clear_has_isneed();
}
::google::protobuf::uint32 Receipt::isneed() const {
  // @@protoc_insertion_point(field_get:micromsg.Receipt.IsNeed)
  return isneed_;
}
void Receipt::set_isneed(::google::protobuf::uint32 value) {
  set_has_isneed();
  isneed_ = value;
  // @@protoc_insertion_point(field_set:micromsg.Receipt.IsNeed)
}

// optional string Detail = 2;
bool Receipt::has_detail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Receipt::set_has_detail() {
  _has_bits_[0] |= 0x00000001u;
}
void Receipt::clear_has_detail() {
  _has_bits_[0] &= ~0x00000001u;
}
void Receipt::clear_detail() {
  detail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_detail();
}
const ::std::string& Receipt::detail() const {
  // @@protoc_insertion_point(field_get:micromsg.Receipt.Detail)
  return detail_.GetNoArena();
}
void Receipt::set_detail(const ::std::string& value) {
  set_has_detail();
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Receipt.Detail)
}
#if LANG_CXX11
void Receipt::set_detail(::std::string&& value) {
  set_has_detail();
  detail_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Receipt.Detail)
}
#endif
void Receipt::set_detail(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_detail();
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Receipt.Detail)
}
void Receipt::set_detail(const char* value, size_t size) {
  set_has_detail();
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Receipt.Detail)
}
::std::string* Receipt::mutable_detail() {
  set_has_detail();
  // @@protoc_insertion_point(field_mutable:micromsg.Receipt.Detail)
  return detail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Receipt::release_detail() {
  // @@protoc_insertion_point(field_release:micromsg.Receipt.Detail)
  clear_has_detail();
  return detail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Receipt::set_allocated_detail(::std::string* detail) {
  if (detail != NULL) {
    set_has_detail();
  } else {
    clear_has_detail();
  }
  detail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), detail);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Receipt.Detail)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Discount::kTitleFieldNumber;
const int Discount::kPriceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Discount::Discount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.Discount)
}
Discount::Discount(const Discount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  price_ = from.price_;
  // @@protoc_insertion_point(copy_constructor:micromsg.Discount)
}

void Discount::SharedCtor() {
  _cached_size_ = 0;
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  price_ = 0u;
}

Discount::~Discount() {
  // @@protoc_insertion_point(destructor:micromsg.Discount)
  SharedDtor();
}

void Discount::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Discount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Discount::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Discount& Discount::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

Discount* Discount::New(::google::protobuf::Arena* arena) const {
  Discount* n = new Discount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Discount::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.Discount)
  if (has_title()) {
    GOOGLE_DCHECK(!title_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*title_.UnsafeRawStringPointer())->clear();
  }
  price_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Discount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.Discount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Title = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.Discount.Title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Price = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_price();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.Discount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.Discount)
  return false;
#undef DO_
}

void Discount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.Discount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string Title = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Discount.Title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->title(), output);
  }

  // required uint32 Price = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->price(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.Discount)
}

::google::protobuf::uint8* Discount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.Discount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string Title = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Discount.Title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->title(), target);
  }

  // required uint32 Price = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->price(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.Discount)
  return target;
}

size_t Discount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.Discount)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint32 Price = 2;
  if (has_price()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->price());
  }
  // optional string Title = 1;
  if (has_title()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Discount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.Discount)
  GOOGLE_DCHECK_NE(&from, this);
  const Discount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Discount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.Discount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.Discount)
    MergeFrom(*source);
  }
}

void Discount::MergeFrom(const Discount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.Discount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (cached_has_bits & 0x00000002u) {
      price_ = from.price_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Discount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.Discount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Discount::CopyFrom(const Discount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.Discount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Discount::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  return true;
}

void Discount::Swap(Discount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Discount::InternalSwap(Discount* other) {
  title_.Swap(&other->title_);
  std::swap(price_, other->price_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Discount::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Discount

// optional string Title = 1;
bool Discount::has_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Discount::set_has_title() {
  _has_bits_[0] |= 0x00000001u;
}
void Discount::clear_has_title() {
  _has_bits_[0] &= ~0x00000001u;
}
void Discount::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
const ::std::string& Discount::title() const {
  // @@protoc_insertion_point(field_get:micromsg.Discount.Title)
  return title_.GetNoArena();
}
void Discount::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Discount.Title)
}
#if LANG_CXX11
void Discount::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Discount.Title)
}
#endif
void Discount::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Discount.Title)
}
void Discount::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Discount.Title)
}
::std::string* Discount::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:micromsg.Discount.Title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Discount::release_title() {
  // @@protoc_insertion_point(field_release:micromsg.Discount.Title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Discount::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Discount.Title)
}

// required uint32 Price = 2;
bool Discount::has_price() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Discount::set_has_price() {
  _has_bits_[0] |= 0x00000002u;
}
void Discount::clear_has_price() {
  _has_bits_[0] &= ~0x00000002u;
}
void Discount::clear_price() {
  price_ = 0u;
  clear_has_price();
}
::google::protobuf::uint32 Discount::price() const {
  // @@protoc_insertion_point(field_get:micromsg.Discount.Price)
  return price_;
}
void Discount::set_price(::google::protobuf::uint32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:micromsg.Discount.Price)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Production::kSkuCountFieldNumber;
const int Production::kSkusFieldNumber;
const int Production::kCountFieldNumber;
const int Production::kRealPriceFieldNumber;
const int Production::kPriceTypeFieldNumber;
const int Production::kPidFieldNumber;
const int Production::kSafeUrlFieldNumber;
const int Production::kSkuIdFieldNumber;
const int Production::kTypeFieldNumber;
const int Production::kNameFieldNumber;
const int Production::kThumbUrlFieldNumber;
const int Production::kSubTypeFieldNumber;
const int Production::kSceneFieldNumber;
const int Production::kPreferentialPriceFieldNumber;
const int Production::kDiscountCountFieldNumber;
const int Production::kDiscountsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Production::Production()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.Production)
}
Production::Production(const Production& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      skus_(from.skus_),
      discounts_(from.discounts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pricetype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pricetype()) {
    pricetype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pricetype_);
  }
  pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pid()) {
    pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pid_);
  }
  safeurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_safeurl()) {
    safeurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.safeurl_);
  }
  skuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_skuid()) {
    skuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.skuid_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  thumburl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_thumburl()) {
    thumburl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumburl_);
  }
  preferentialprice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_preferentialprice()) {
    preferentialprice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.preferentialprice_);
  }
  ::memcpy(&skucount_, &from.skucount_,
    reinterpret_cast<char*>(&discountcount_) -
    reinterpret_cast<char*>(&skucount_) + sizeof(discountcount_));
  // @@protoc_insertion_point(copy_constructor:micromsg.Production)
}

void Production::SharedCtor() {
  _cached_size_ = 0;
  pricetype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  safeurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  skuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumburl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preferentialprice_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&skucount_, 0, reinterpret_cast<char*>(&discountcount_) -
    reinterpret_cast<char*>(&skucount_) + sizeof(discountcount_));
}

Production::~Production() {
  // @@protoc_insertion_point(destructor:micromsg.Production)
  SharedDtor();
}

void Production::SharedDtor() {
  pricetype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  safeurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  skuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumburl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preferentialprice_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Production::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Production::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Production& Production::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

Production* Production::New(::google::protobuf::Arena* arena) const {
  Production* n = new Production;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Production::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.Production)
  skus_.Clear();
  discounts_.Clear();
  if (_has_bits_[0 / 32] & 127u) {
    if (has_pricetype()) {
      GOOGLE_DCHECK(!pricetype_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*pricetype_.UnsafeRawStringPointer())->clear();
    }
    if (has_pid()) {
      GOOGLE_DCHECK(!pid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*pid_.UnsafeRawStringPointer())->clear();
    }
    if (has_safeurl()) {
      GOOGLE_DCHECK(!safeurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*safeurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_skuid()) {
      GOOGLE_DCHECK(!skuid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*skuid_.UnsafeRawStringPointer())->clear();
    }
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_thumburl()) {
      GOOGLE_DCHECK(!thumburl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*thumburl_.UnsafeRawStringPointer())->clear();
    }
    if (has_preferentialprice()) {
      GOOGLE_DCHECK(!preferentialprice_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*preferentialprice_.UnsafeRawStringPointer())->clear();
    }
  }
  skucount_ = 0u;
  if (_has_bits_[8 / 32] & 16128u) {
    ::memset(&count_, 0, reinterpret_cast<char*>(&discountcount_) -
      reinterpret_cast<char*>(&count_) + sizeof(discountcount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Production::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.Production)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 SkuCount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_skucount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &skucount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.KVItem Skus = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_skus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 Count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 RealPrice = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_realprice();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &realprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string PriceType = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pricetype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pricetype().data(), this->pricetype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.Production.PriceType");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Pid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pid().data(), this->pid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.Production.Pid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string SafeUrl = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_safeurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->safeurl().data(), this->safeurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.Production.SafeUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string SkuId = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_skuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->skuid().data(), this->skuid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.Production.SkuId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 Type = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Name = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.Production.Name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ThumbUrl = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_thumburl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->thumburl().data(), this->thumburl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.Production.ThumbUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 SubType = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {
          set_has_subtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &subtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 Scene = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {
          set_has_scene();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scene_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string PreferentialPrice = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_preferentialprice()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->preferentialprice().data(), this->preferentialprice().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.Production.PreferentialPrice");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 DiscountCount = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u)) {
          set_has_discountcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &discountcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.Discount Discounts = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_discounts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.Production)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.Production)
  return false;
#undef DO_
}

void Production::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.Production)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 SkuCount = 1;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->skucount(), output);
  }

  // repeated .micromsg.KVItem Skus = 2;
  for (unsigned int i = 0, n = this->skus_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->skus(i), output);
  }

  // required uint32 Count = 3;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->count(), output);
  }

  // required uint32 RealPrice = 4;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->realprice(), output);
  }

  // optional string PriceType = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pricetype().data(), this->pricetype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Production.PriceType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->pricetype(), output);
  }

  // optional string Pid = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pid().data(), this->pid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Production.Pid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->pid(), output);
  }

  // optional string SafeUrl = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->safeurl().data(), this->safeurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Production.SafeUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->safeurl(), output);
  }

  // optional string SkuId = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->skuid().data(), this->skuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Production.SkuId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->skuid(), output);
  }

  // optional uint32 Type = 9;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->type(), output);
  }

  // optional string Name = 10;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Production.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->name(), output);
  }

  // optional string ThumbUrl = 11;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->thumburl().data(), this->thumburl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Production.ThumbUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->thumburl(), output);
  }

  // optional uint32 SubType = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->subtype(), output);
  }

  // optional uint32 Scene = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->scene(), output);
  }

  // optional string PreferentialPrice = 14;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->preferentialprice().data(), this->preferentialprice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Production.PreferentialPrice");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->preferentialprice(), output);
  }

  // optional uint32 DiscountCount = 15;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->discountcount(), output);
  }

  // repeated .micromsg.Discount Discounts = 16;
  for (unsigned int i = 0, n = this->discounts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->discounts(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.Production)
}

::google::protobuf::uint8* Production::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.Production)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 SkuCount = 1;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->skucount(), target);
  }

  // repeated .micromsg.KVItem Skus = 2;
  for (unsigned int i = 0, n = this->skus_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->skus(i), deterministic, target);
  }

  // required uint32 Count = 3;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->count(), target);
  }

  // required uint32 RealPrice = 4;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->realprice(), target);
  }

  // optional string PriceType = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pricetype().data(), this->pricetype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Production.PriceType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->pricetype(), target);
  }

  // optional string Pid = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pid().data(), this->pid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Production.Pid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->pid(), target);
  }

  // optional string SafeUrl = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->safeurl().data(), this->safeurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Production.SafeUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->safeurl(), target);
  }

  // optional string SkuId = 8;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->skuid().data(), this->skuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Production.SkuId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->skuid(), target);
  }

  // optional uint32 Type = 9;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->type(), target);
  }

  // optional string Name = 10;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Production.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->name(), target);
  }

  // optional string ThumbUrl = 11;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->thumburl().data(), this->thumburl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Production.ThumbUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->thumburl(), target);
  }

  // optional uint32 SubType = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->subtype(), target);
  }

  // optional uint32 Scene = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->scene(), target);
  }

  // optional string PreferentialPrice = 14;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->preferentialprice().data(), this->preferentialprice().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Production.PreferentialPrice");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->preferentialprice(), target);
  }

  // optional uint32 DiscountCount = 15;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->discountcount(), target);
  }

  // repeated .micromsg.Discount Discounts = 16;
  for (unsigned int i = 0, n = this->discounts_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        16, this->discounts(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.Production)
  return target;
}

size_t Production::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.Production)
  size_t total_size = 0;

  if (has_skucount()) {
    // required uint32 SkuCount = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->skucount());
  }

  if (has_count()) {
    // required uint32 Count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  if (has_realprice()) {
    // required uint32 RealPrice = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->realprice());
  }

  return total_size;
}
size_t Production::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.Production)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000380) ^ 0x00000380) == 0) {  // All required fields are present.
    // required uint32 SkuCount = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->skucount());

    // required uint32 Count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());

    // required uint32 RealPrice = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->realprice());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.KVItem Skus = 2;
  {
    unsigned int count = this->skus_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->skus(i));
    }
  }

  // repeated .micromsg.Discount Discounts = 16;
  {
    unsigned int count = this->discounts_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->discounts(i));
    }
  }

  if (_has_bits_[0 / 32] & 127u) {
    // optional string PriceType = 5;
    if (has_pricetype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pricetype());
    }

    // optional string Pid = 6;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pid());
    }

    // optional string SafeUrl = 7;
    if (has_safeurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->safeurl());
    }

    // optional string SkuId = 8;
    if (has_skuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->skuid());
    }

    // optional string Name = 10;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string ThumbUrl = 11;
    if (has_thumburl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->thumburl());
    }

    // optional string PreferentialPrice = 14;
    if (has_preferentialprice()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->preferentialprice());
    }

  }
  if (_has_bits_[8 / 32] & 15360u) {
    // optional uint32 Type = 9;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

    // optional uint32 SubType = 12;
    if (has_subtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->subtype());
    }

    // optional uint32 Scene = 13;
    if (has_scene()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->scene());
    }

    // optional uint32 DiscountCount = 15;
    if (has_discountcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->discountcount());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Production::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.Production)
  GOOGLE_DCHECK_NE(&from, this);
  const Production* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Production>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.Production)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.Production)
    MergeFrom(*source);
  }
}

void Production::MergeFrom(const Production& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.Production)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  skus_.MergeFrom(from.skus_);
  discounts_.MergeFrom(from.discounts_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_pricetype();
      pricetype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pricetype_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_pid();
      pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_safeurl();
      safeurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.safeurl_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_skuid();
      skuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.skuid_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_thumburl();
      thumburl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumburl_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_preferentialprice();
      preferentialprice_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.preferentialprice_);
    }
    if (cached_has_bits & 0x00000080u) {
      skucount_ = from.skucount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16128u) {
    if (cached_has_bits & 0x00000100u) {
      count_ = from.count_;
    }
    if (cached_has_bits & 0x00000200u) {
      realprice_ = from.realprice_;
    }
    if (cached_has_bits & 0x00000400u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000800u) {
      subtype_ = from.subtype_;
    }
    if (cached_has_bits & 0x00001000u) {
      scene_ = from.scene_;
    }
    if (cached_has_bits & 0x00002000u) {
      discountcount_ = from.discountcount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Production::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.Production)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Production::CopyFrom(const Production& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.Production)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Production::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000380) != 0x00000380) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->discounts())) return false;
  return true;
}

void Production::Swap(Production* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Production::InternalSwap(Production* other) {
  skus_.InternalSwap(&other->skus_);
  discounts_.InternalSwap(&other->discounts_);
  pricetype_.Swap(&other->pricetype_);
  pid_.Swap(&other->pid_);
  safeurl_.Swap(&other->safeurl_);
  skuid_.Swap(&other->skuid_);
  name_.Swap(&other->name_);
  thumburl_.Swap(&other->thumburl_);
  preferentialprice_.Swap(&other->preferentialprice_);
  std::swap(skucount_, other->skucount_);
  std::swap(count_, other->count_);
  std::swap(realprice_, other->realprice_);
  std::swap(type_, other->type_);
  std::swap(subtype_, other->subtype_);
  std::swap(scene_, other->scene_);
  std::swap(discountcount_, other->discountcount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Production::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Production

// required uint32 SkuCount = 1;
bool Production::has_skucount() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Production::set_has_skucount() {
  _has_bits_[0] |= 0x00000080u;
}
void Production::clear_has_skucount() {
  _has_bits_[0] &= ~0x00000080u;
}
void Production::clear_skucount() {
  skucount_ = 0u;
  clear_has_skucount();
}
::google::protobuf::uint32 Production::skucount() const {
  // @@protoc_insertion_point(field_get:micromsg.Production.SkuCount)
  return skucount_;
}
void Production::set_skucount(::google::protobuf::uint32 value) {
  set_has_skucount();
  skucount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.Production.SkuCount)
}

// repeated .micromsg.KVItem Skus = 2;
int Production::skus_size() const {
  return skus_.size();
}
void Production::clear_skus() {
  skus_.Clear();
}
const ::micromsg::KVItem& Production::skus(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.Production.Skus)
  return skus_.Get(index);
}
::micromsg::KVItem* Production::mutable_skus(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.Production.Skus)
  return skus_.Mutable(index);
}
::micromsg::KVItem* Production::add_skus() {
  // @@protoc_insertion_point(field_add:micromsg.Production.Skus)
  return skus_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::KVItem >*
Production::mutable_skus() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.Production.Skus)
  return &skus_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::KVItem >&
Production::skus() const {
  // @@protoc_insertion_point(field_list:micromsg.Production.Skus)
  return skus_;
}

// required uint32 Count = 3;
bool Production::has_count() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Production::set_has_count() {
  _has_bits_[0] |= 0x00000100u;
}
void Production::clear_has_count() {
  _has_bits_[0] &= ~0x00000100u;
}
void Production::clear_count() {
  count_ = 0u;
  clear_has_count();
}
::google::protobuf::uint32 Production::count() const {
  // @@protoc_insertion_point(field_get:micromsg.Production.Count)
  return count_;
}
void Production::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.Production.Count)
}

// required uint32 RealPrice = 4;
bool Production::has_realprice() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Production::set_has_realprice() {
  _has_bits_[0] |= 0x00000200u;
}
void Production::clear_has_realprice() {
  _has_bits_[0] &= ~0x00000200u;
}
void Production::clear_realprice() {
  realprice_ = 0u;
  clear_has_realprice();
}
::google::protobuf::uint32 Production::realprice() const {
  // @@protoc_insertion_point(field_get:micromsg.Production.RealPrice)
  return realprice_;
}
void Production::set_realprice(::google::protobuf::uint32 value) {
  set_has_realprice();
  realprice_ = value;
  // @@protoc_insertion_point(field_set:micromsg.Production.RealPrice)
}

// optional string PriceType = 5;
bool Production::has_pricetype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Production::set_has_pricetype() {
  _has_bits_[0] |= 0x00000001u;
}
void Production::clear_has_pricetype() {
  _has_bits_[0] &= ~0x00000001u;
}
void Production::clear_pricetype() {
  pricetype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pricetype();
}
const ::std::string& Production::pricetype() const {
  // @@protoc_insertion_point(field_get:micromsg.Production.PriceType)
  return pricetype_.GetNoArena();
}
void Production::set_pricetype(const ::std::string& value) {
  set_has_pricetype();
  pricetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Production.PriceType)
}
#if LANG_CXX11
void Production::set_pricetype(::std::string&& value) {
  set_has_pricetype();
  pricetype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Production.PriceType)
}
#endif
void Production::set_pricetype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pricetype();
  pricetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Production.PriceType)
}
void Production::set_pricetype(const char* value, size_t size) {
  set_has_pricetype();
  pricetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Production.PriceType)
}
::std::string* Production::mutable_pricetype() {
  set_has_pricetype();
  // @@protoc_insertion_point(field_mutable:micromsg.Production.PriceType)
  return pricetype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Production::release_pricetype() {
  // @@protoc_insertion_point(field_release:micromsg.Production.PriceType)
  clear_has_pricetype();
  return pricetype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Production::set_allocated_pricetype(::std::string* pricetype) {
  if (pricetype != NULL) {
    set_has_pricetype();
  } else {
    clear_has_pricetype();
  }
  pricetype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pricetype);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Production.PriceType)
}

// optional string Pid = 6;
bool Production::has_pid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Production::set_has_pid() {
  _has_bits_[0] |= 0x00000002u;
}
void Production::clear_has_pid() {
  _has_bits_[0] &= ~0x00000002u;
}
void Production::clear_pid() {
  pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pid();
}
const ::std::string& Production::pid() const {
  // @@protoc_insertion_point(field_get:micromsg.Production.Pid)
  return pid_.GetNoArena();
}
void Production::set_pid(const ::std::string& value) {
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Production.Pid)
}
#if LANG_CXX11
void Production::set_pid(::std::string&& value) {
  set_has_pid();
  pid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Production.Pid)
}
#endif
void Production::set_pid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Production.Pid)
}
void Production::set_pid(const char* value, size_t size) {
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Production.Pid)
}
::std::string* Production::mutable_pid() {
  set_has_pid();
  // @@protoc_insertion_point(field_mutable:micromsg.Production.Pid)
  return pid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Production::release_pid() {
  // @@protoc_insertion_point(field_release:micromsg.Production.Pid)
  clear_has_pid();
  return pid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Production::set_allocated_pid(::std::string* pid) {
  if (pid != NULL) {
    set_has_pid();
  } else {
    clear_has_pid();
  }
  pid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Production.Pid)
}

// optional string SafeUrl = 7;
bool Production::has_safeurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Production::set_has_safeurl() {
  _has_bits_[0] |= 0x00000004u;
}
void Production::clear_has_safeurl() {
  _has_bits_[0] &= ~0x00000004u;
}
void Production::clear_safeurl() {
  safeurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_safeurl();
}
const ::std::string& Production::safeurl() const {
  // @@protoc_insertion_point(field_get:micromsg.Production.SafeUrl)
  return safeurl_.GetNoArena();
}
void Production::set_safeurl(const ::std::string& value) {
  set_has_safeurl();
  safeurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Production.SafeUrl)
}
#if LANG_CXX11
void Production::set_safeurl(::std::string&& value) {
  set_has_safeurl();
  safeurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Production.SafeUrl)
}
#endif
void Production::set_safeurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_safeurl();
  safeurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Production.SafeUrl)
}
void Production::set_safeurl(const char* value, size_t size) {
  set_has_safeurl();
  safeurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Production.SafeUrl)
}
::std::string* Production::mutable_safeurl() {
  set_has_safeurl();
  // @@protoc_insertion_point(field_mutable:micromsg.Production.SafeUrl)
  return safeurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Production::release_safeurl() {
  // @@protoc_insertion_point(field_release:micromsg.Production.SafeUrl)
  clear_has_safeurl();
  return safeurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Production::set_allocated_safeurl(::std::string* safeurl) {
  if (safeurl != NULL) {
    set_has_safeurl();
  } else {
    clear_has_safeurl();
  }
  safeurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), safeurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Production.SafeUrl)
}

// optional string SkuId = 8;
bool Production::has_skuid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Production::set_has_skuid() {
  _has_bits_[0] |= 0x00000008u;
}
void Production::clear_has_skuid() {
  _has_bits_[0] &= ~0x00000008u;
}
void Production::clear_skuid() {
  skuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_skuid();
}
const ::std::string& Production::skuid() const {
  // @@protoc_insertion_point(field_get:micromsg.Production.SkuId)
  return skuid_.GetNoArena();
}
void Production::set_skuid(const ::std::string& value) {
  set_has_skuid();
  skuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Production.SkuId)
}
#if LANG_CXX11
void Production::set_skuid(::std::string&& value) {
  set_has_skuid();
  skuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Production.SkuId)
}
#endif
void Production::set_skuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_skuid();
  skuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Production.SkuId)
}
void Production::set_skuid(const char* value, size_t size) {
  set_has_skuid();
  skuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Production.SkuId)
}
::std::string* Production::mutable_skuid() {
  set_has_skuid();
  // @@protoc_insertion_point(field_mutable:micromsg.Production.SkuId)
  return skuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Production::release_skuid() {
  // @@protoc_insertion_point(field_release:micromsg.Production.SkuId)
  clear_has_skuid();
  return skuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Production::set_allocated_skuid(::std::string* skuid) {
  if (skuid != NULL) {
    set_has_skuid();
  } else {
    clear_has_skuid();
  }
  skuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), skuid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Production.SkuId)
}

// optional uint32 Type = 9;
bool Production::has_type() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void Production::set_has_type() {
  _has_bits_[0] |= 0x00000400u;
}
void Production::clear_has_type() {
  _has_bits_[0] &= ~0x00000400u;
}
void Production::clear_type() {
  type_ = 0u;
  clear_has_type();
}
::google::protobuf::uint32 Production::type() const {
  // @@protoc_insertion_point(field_get:micromsg.Production.Type)
  return type_;
}
void Production::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.Production.Type)
}

// optional string Name = 10;
bool Production::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Production::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
void Production::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
void Production::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& Production::name() const {
  // @@protoc_insertion_point(field_get:micromsg.Production.Name)
  return name_.GetNoArena();
}
void Production::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Production.Name)
}
#if LANG_CXX11
void Production::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Production.Name)
}
#endif
void Production::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Production.Name)
}
void Production::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Production.Name)
}
::std::string* Production::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:micromsg.Production.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Production::release_name() {
  // @@protoc_insertion_point(field_release:micromsg.Production.Name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Production::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Production.Name)
}

// optional string ThumbUrl = 11;
bool Production::has_thumburl() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Production::set_has_thumburl() {
  _has_bits_[0] |= 0x00000020u;
}
void Production::clear_has_thumburl() {
  _has_bits_[0] &= ~0x00000020u;
}
void Production::clear_thumburl() {
  thumburl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_thumburl();
}
const ::std::string& Production::thumburl() const {
  // @@protoc_insertion_point(field_get:micromsg.Production.ThumbUrl)
  return thumburl_.GetNoArena();
}
void Production::set_thumburl(const ::std::string& value) {
  set_has_thumburl();
  thumburl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Production.ThumbUrl)
}
#if LANG_CXX11
void Production::set_thumburl(::std::string&& value) {
  set_has_thumburl();
  thumburl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Production.ThumbUrl)
}
#endif
void Production::set_thumburl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_thumburl();
  thumburl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Production.ThumbUrl)
}
void Production::set_thumburl(const char* value, size_t size) {
  set_has_thumburl();
  thumburl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Production.ThumbUrl)
}
::std::string* Production::mutable_thumburl() {
  set_has_thumburl();
  // @@protoc_insertion_point(field_mutable:micromsg.Production.ThumbUrl)
  return thumburl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Production::release_thumburl() {
  // @@protoc_insertion_point(field_release:micromsg.Production.ThumbUrl)
  clear_has_thumburl();
  return thumburl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Production::set_allocated_thumburl(::std::string* thumburl) {
  if (thumburl != NULL) {
    set_has_thumburl();
  } else {
    clear_has_thumburl();
  }
  thumburl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), thumburl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Production.ThumbUrl)
}

// optional uint32 SubType = 12;
bool Production::has_subtype() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void Production::set_has_subtype() {
  _has_bits_[0] |= 0x00000800u;
}
void Production::clear_has_subtype() {
  _has_bits_[0] &= ~0x00000800u;
}
void Production::clear_subtype() {
  subtype_ = 0u;
  clear_has_subtype();
}
::google::protobuf::uint32 Production::subtype() const {
  // @@protoc_insertion_point(field_get:micromsg.Production.SubType)
  return subtype_;
}
void Production::set_subtype(::google::protobuf::uint32 value) {
  set_has_subtype();
  subtype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.Production.SubType)
}

// optional uint32 Scene = 13;
bool Production::has_scene() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void Production::set_has_scene() {
  _has_bits_[0] |= 0x00001000u;
}
void Production::clear_has_scene() {
  _has_bits_[0] &= ~0x00001000u;
}
void Production::clear_scene() {
  scene_ = 0u;
  clear_has_scene();
}
::google::protobuf::uint32 Production::scene() const {
  // @@protoc_insertion_point(field_get:micromsg.Production.Scene)
  return scene_;
}
void Production::set_scene(::google::protobuf::uint32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.Production.Scene)
}

// optional string PreferentialPrice = 14;
bool Production::has_preferentialprice() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Production::set_has_preferentialprice() {
  _has_bits_[0] |= 0x00000040u;
}
void Production::clear_has_preferentialprice() {
  _has_bits_[0] &= ~0x00000040u;
}
void Production::clear_preferentialprice() {
  preferentialprice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_preferentialprice();
}
const ::std::string& Production::preferentialprice() const {
  // @@protoc_insertion_point(field_get:micromsg.Production.PreferentialPrice)
  return preferentialprice_.GetNoArena();
}
void Production::set_preferentialprice(const ::std::string& value) {
  set_has_preferentialprice();
  preferentialprice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Production.PreferentialPrice)
}
#if LANG_CXX11
void Production::set_preferentialprice(::std::string&& value) {
  set_has_preferentialprice();
  preferentialprice_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Production.PreferentialPrice)
}
#endif
void Production::set_preferentialprice(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_preferentialprice();
  preferentialprice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Production.PreferentialPrice)
}
void Production::set_preferentialprice(const char* value, size_t size) {
  set_has_preferentialprice();
  preferentialprice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Production.PreferentialPrice)
}
::std::string* Production::mutable_preferentialprice() {
  set_has_preferentialprice();
  // @@protoc_insertion_point(field_mutable:micromsg.Production.PreferentialPrice)
  return preferentialprice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Production::release_preferentialprice() {
  // @@protoc_insertion_point(field_release:micromsg.Production.PreferentialPrice)
  clear_has_preferentialprice();
  return preferentialprice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Production::set_allocated_preferentialprice(::std::string* preferentialprice) {
  if (preferentialprice != NULL) {
    set_has_preferentialprice();
  } else {
    clear_has_preferentialprice();
  }
  preferentialprice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), preferentialprice);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Production.PreferentialPrice)
}

// optional uint32 DiscountCount = 15;
bool Production::has_discountcount() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void Production::set_has_discountcount() {
  _has_bits_[0] |= 0x00002000u;
}
void Production::clear_has_discountcount() {
  _has_bits_[0] &= ~0x00002000u;
}
void Production::clear_discountcount() {
  discountcount_ = 0u;
  clear_has_discountcount();
}
::google::protobuf::uint32 Production::discountcount() const {
  // @@protoc_insertion_point(field_get:micromsg.Production.DiscountCount)
  return discountcount_;
}
void Production::set_discountcount(::google::protobuf::uint32 value) {
  set_has_discountcount();
  discountcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.Production.DiscountCount)
}

// repeated .micromsg.Discount Discounts = 16;
int Production::discounts_size() const {
  return discounts_.size();
}
void Production::clear_discounts() {
  discounts_.Clear();
}
const ::micromsg::Discount& Production::discounts(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.Production.Discounts)
  return discounts_.Get(index);
}
::micromsg::Discount* Production::mutable_discounts(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.Production.Discounts)
  return discounts_.Mutable(index);
}
::micromsg::Discount* Production::add_discounts() {
  // @@protoc_insertion_point(field_add:micromsg.Production.Discounts)
  return discounts_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::Discount >*
Production::mutable_discounts() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.Production.Discounts)
  return &discounts_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::Discount >&
Production::discounts() const {
  // @@protoc_insertion_point(field_list:micromsg.Production.Discounts)
  return discounts_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Snapshot::kProductCountFieldNumber;
const int Snapshot::kProductionsFieldNumber;
const int Snapshot::kExpressFieldNumber;
const int Snapshot::kAddressFieldNumber;
const int Snapshot::kReceiptFieldNumber;
const int Snapshot::kReceiptCountFieldNumber;
const int Snapshot::kLockIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Snapshot::Snapshot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.Snapshot)
}
Snapshot::Snapshot(const Snapshot& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      productions_(from.productions_),
      receipt_(from.receipt_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lockid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_lockid()) {
    lockid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lockid_);
  }
  if (from.has_express()) {
    express_ = new ::micromsg::Express(*from.express_);
  } else {
    express_ = NULL;
  }
  if (from.has_address()) {
    address_ = new ::micromsg::Address(*from.address_);
  } else {
    address_ = NULL;
  }
  ::memcpy(&productcount_, &from.productcount_,
    reinterpret_cast<char*>(&receiptcount_) -
    reinterpret_cast<char*>(&productcount_) + sizeof(receiptcount_));
  // @@protoc_insertion_point(copy_constructor:micromsg.Snapshot)
}

void Snapshot::SharedCtor() {
  _cached_size_ = 0;
  lockid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&express_, 0, reinterpret_cast<char*>(&receiptcount_) -
    reinterpret_cast<char*>(&express_) + sizeof(receiptcount_));
}

Snapshot::~Snapshot() {
  // @@protoc_insertion_point(destructor:micromsg.Snapshot)
  SharedDtor();
}

void Snapshot::SharedDtor() {
  lockid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete express_;
  }
  if (this != internal_default_instance()) {
    delete address_;
  }
}

void Snapshot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Snapshot::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Snapshot& Snapshot::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

Snapshot* Snapshot::New(::google::protobuf::Arena* arena) const {
  Snapshot* n = new Snapshot;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Snapshot::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.Snapshot)
  productions_.Clear();
  receipt_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    if (has_lockid()) {
      GOOGLE_DCHECK(!lockid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*lockid_.UnsafeRawStringPointer())->clear();
    }
    if (has_express()) {
      GOOGLE_DCHECK(express_ != NULL);
      express_->::micromsg::Express::Clear();
    }
    if (has_address()) {
      GOOGLE_DCHECK(address_ != NULL);
      address_->::micromsg::Address::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 24u) {
    ::memset(&productcount_, 0, reinterpret_cast<char*>(&receiptcount_) -
      reinterpret_cast<char*>(&productcount_) + sizeof(receiptcount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Snapshot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.Snapshot)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 ProductCount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_productcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &productcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.Production Productions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_productions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .micromsg.Express Express = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_express()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .micromsg.Address Address = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.Receipt Receipt = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_receipt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ReceiptCount = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_receiptcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &receiptcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string LockId = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lockid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->lockid().data(), this->lockid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.Snapshot.LockId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.Snapshot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.Snapshot)
  return false;
#undef DO_
}

void Snapshot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.Snapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 ProductCount = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->productcount(), output);
  }

  // repeated .micromsg.Production Productions = 2;
  for (unsigned int i = 0, n = this->productions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->productions(i), output);
  }

  // optional .micromsg.Express Express = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->express_, output);
  }

  // optional .micromsg.Address Address = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->address_, output);
  }

  // repeated .micromsg.Receipt Receipt = 5;
  for (unsigned int i = 0, n = this->receipt_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->receipt(i), output);
  }

  // optional uint32 ReceiptCount = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->receiptcount(), output);
  }

  // optional string LockId = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lockid().data(), this->lockid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Snapshot.LockId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->lockid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.Snapshot)
}

::google::protobuf::uint8* Snapshot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.Snapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 ProductCount = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->productcount(), target);
  }

  // repeated .micromsg.Production Productions = 2;
  for (unsigned int i = 0, n = this->productions_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->productions(i), deterministic, target);
  }

  // optional .micromsg.Express Express = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->express_, deterministic, target);
  }

  // optional .micromsg.Address Address = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->address_, deterministic, target);
  }

  // repeated .micromsg.Receipt Receipt = 5;
  for (unsigned int i = 0, n = this->receipt_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->receipt(i), deterministic, target);
  }

  // optional uint32 ReceiptCount = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->receiptcount(), target);
  }

  // optional string LockId = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lockid().data(), this->lockid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.Snapshot.LockId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->lockid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.Snapshot)
  return target;
}

size_t Snapshot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.Snapshot)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required uint32 ProductCount = 1;
  if (has_productcount()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->productcount());
  }
  // repeated .micromsg.Production Productions = 2;
  {
    unsigned int count = this->productions_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->productions(i));
    }
  }

  // repeated .micromsg.Receipt Receipt = 5;
  {
    unsigned int count = this->receipt_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->receipt(i));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional string LockId = 7;
    if (has_lockid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->lockid());
    }

    // optional .micromsg.Express Express = 3;
    if (has_express()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->express_);
    }

    // optional .micromsg.Address Address = 4;
    if (has_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->address_);
    }

  }
  // optional uint32 ReceiptCount = 6;
  if (has_receiptcount()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->receiptcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Snapshot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.Snapshot)
  GOOGLE_DCHECK_NE(&from, this);
  const Snapshot* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Snapshot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.Snapshot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.Snapshot)
    MergeFrom(*source);
  }
}

void Snapshot::MergeFrom(const Snapshot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.Snapshot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  productions_.MergeFrom(from.productions_);
  receipt_.MergeFrom(from.receipt_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_lockid();
      lockid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lockid_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_express()->::micromsg::Express::MergeFrom(from.express());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_address()->::micromsg::Address::MergeFrom(from.address());
    }
    if (cached_has_bits & 0x00000008u) {
      productcount_ = from.productcount_;
    }
    if (cached_has_bits & 0x00000010u) {
      receiptcount_ = from.receiptcount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Snapshot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.Snapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Snapshot::CopyFrom(const Snapshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.Snapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Snapshot::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000008) != 0x00000008) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->productions())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->receipt())) return false;
  return true;
}

void Snapshot::Swap(Snapshot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Snapshot::InternalSwap(Snapshot* other) {
  productions_.InternalSwap(&other->productions_);
  receipt_.InternalSwap(&other->receipt_);
  lockid_.Swap(&other->lockid_);
  std::swap(express_, other->express_);
  std::swap(address_, other->address_);
  std::swap(productcount_, other->productcount_);
  std::swap(receiptcount_, other->receiptcount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Snapshot::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Snapshot

// required uint32 ProductCount = 1;
bool Snapshot::has_productcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Snapshot::set_has_productcount() {
  _has_bits_[0] |= 0x00000008u;
}
void Snapshot::clear_has_productcount() {
  _has_bits_[0] &= ~0x00000008u;
}
void Snapshot::clear_productcount() {
  productcount_ = 0u;
  clear_has_productcount();
}
::google::protobuf::uint32 Snapshot::productcount() const {
  // @@protoc_insertion_point(field_get:micromsg.Snapshot.ProductCount)
  return productcount_;
}
void Snapshot::set_productcount(::google::protobuf::uint32 value) {
  set_has_productcount();
  productcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.Snapshot.ProductCount)
}

// repeated .micromsg.Production Productions = 2;
int Snapshot::productions_size() const {
  return productions_.size();
}
void Snapshot::clear_productions() {
  productions_.Clear();
}
const ::micromsg::Production& Snapshot::productions(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.Snapshot.Productions)
  return productions_.Get(index);
}
::micromsg::Production* Snapshot::mutable_productions(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.Snapshot.Productions)
  return productions_.Mutable(index);
}
::micromsg::Production* Snapshot::add_productions() {
  // @@protoc_insertion_point(field_add:micromsg.Snapshot.Productions)
  return productions_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::Production >*
Snapshot::mutable_productions() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.Snapshot.Productions)
  return &productions_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::Production >&
Snapshot::productions() const {
  // @@protoc_insertion_point(field_list:micromsg.Snapshot.Productions)
  return productions_;
}

// optional .micromsg.Express Express = 3;
bool Snapshot::has_express() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Snapshot::set_has_express() {
  _has_bits_[0] |= 0x00000002u;
}
void Snapshot::clear_has_express() {
  _has_bits_[0] &= ~0x00000002u;
}
void Snapshot::clear_express() {
  if (express_ != NULL) express_->::micromsg::Express::Clear();
  clear_has_express();
}
const ::micromsg::Express& Snapshot::express() const {
  // @@protoc_insertion_point(field_get:micromsg.Snapshot.Express)
  return express_ != NULL ? *express_
                         : *::micromsg::Express::internal_default_instance();
}
::micromsg::Express* Snapshot::mutable_express() {
  set_has_express();
  if (express_ == NULL) {
    express_ = new ::micromsg::Express;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.Snapshot.Express)
  return express_;
}
::micromsg::Express* Snapshot::release_express() {
  // @@protoc_insertion_point(field_release:micromsg.Snapshot.Express)
  clear_has_express();
  ::micromsg::Express* temp = express_;
  express_ = NULL;
  return temp;
}
void Snapshot::set_allocated_express(::micromsg::Express* express) {
  delete express_;
  express_ = express;
  if (express) {
    set_has_express();
  } else {
    clear_has_express();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.Snapshot.Express)
}

// optional .micromsg.Address Address = 4;
bool Snapshot::has_address() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Snapshot::set_has_address() {
  _has_bits_[0] |= 0x00000004u;
}
void Snapshot::clear_has_address() {
  _has_bits_[0] &= ~0x00000004u;
}
void Snapshot::clear_address() {
  if (address_ != NULL) address_->::micromsg::Address::Clear();
  clear_has_address();
}
const ::micromsg::Address& Snapshot::address() const {
  // @@protoc_insertion_point(field_get:micromsg.Snapshot.Address)
  return address_ != NULL ? *address_
                         : *::micromsg::Address::internal_default_instance();
}
::micromsg::Address* Snapshot::mutable_address() {
  set_has_address();
  if (address_ == NULL) {
    address_ = new ::micromsg::Address;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.Snapshot.Address)
  return address_;
}
::micromsg::Address* Snapshot::release_address() {
  // @@protoc_insertion_point(field_release:micromsg.Snapshot.Address)
  clear_has_address();
  ::micromsg::Address* temp = address_;
  address_ = NULL;
  return temp;
}
void Snapshot::set_allocated_address(::micromsg::Address* address) {
  delete address_;
  address_ = address;
  if (address) {
    set_has_address();
  } else {
    clear_has_address();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.Snapshot.Address)
}

// repeated .micromsg.Receipt Receipt = 5;
int Snapshot::receipt_size() const {
  return receipt_.size();
}
void Snapshot::clear_receipt() {
  receipt_.Clear();
}
const ::micromsg::Receipt& Snapshot::receipt(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.Snapshot.Receipt)
  return receipt_.Get(index);
}
::micromsg::Receipt* Snapshot::mutable_receipt(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.Snapshot.Receipt)
  return receipt_.Mutable(index);
}
::micromsg::Receipt* Snapshot::add_receipt() {
  // @@protoc_insertion_point(field_add:micromsg.Snapshot.Receipt)
  return receipt_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::Receipt >*
Snapshot::mutable_receipt() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.Snapshot.Receipt)
  return &receipt_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::Receipt >&
Snapshot::receipt() const {
  // @@protoc_insertion_point(field_list:micromsg.Snapshot.Receipt)
  return receipt_;
}

// optional uint32 ReceiptCount = 6;
bool Snapshot::has_receiptcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Snapshot::set_has_receiptcount() {
  _has_bits_[0] |= 0x00000010u;
}
void Snapshot::clear_has_receiptcount() {
  _has_bits_[0] &= ~0x00000010u;
}
void Snapshot::clear_receiptcount() {
  receiptcount_ = 0u;
  clear_has_receiptcount();
}
::google::protobuf::uint32 Snapshot::receiptcount() const {
  // @@protoc_insertion_point(field_get:micromsg.Snapshot.ReceiptCount)
  return receiptcount_;
}
void Snapshot::set_receiptcount(::google::protobuf::uint32 value) {
  set_has_receiptcount();
  receiptcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.Snapshot.ReceiptCount)
}

// optional string LockId = 7;
bool Snapshot::has_lockid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Snapshot::set_has_lockid() {
  _has_bits_[0] |= 0x00000001u;
}
void Snapshot::clear_has_lockid() {
  _has_bits_[0] &= ~0x00000001u;
}
void Snapshot::clear_lockid() {
  lockid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lockid();
}
const ::std::string& Snapshot::lockid() const {
  // @@protoc_insertion_point(field_get:micromsg.Snapshot.LockId)
  return lockid_.GetNoArena();
}
void Snapshot::set_lockid(const ::std::string& value) {
  set_has_lockid();
  lockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Snapshot.LockId)
}
#if LANG_CXX11
void Snapshot::set_lockid(::std::string&& value) {
  set_has_lockid();
  lockid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Snapshot.LockId)
}
#endif
void Snapshot::set_lockid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_lockid();
  lockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Snapshot.LockId)
}
void Snapshot::set_lockid(const char* value, size_t size) {
  set_has_lockid();
  lockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Snapshot.LockId)
}
::std::string* Snapshot::mutable_lockid() {
  set_has_lockid();
  // @@protoc_insertion_point(field_mutable:micromsg.Snapshot.LockId)
  return lockid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Snapshot::release_lockid() {
  // @@protoc_insertion_point(field_release:micromsg.Snapshot.LockId)
  clear_has_lockid();
  return lockid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Snapshot::set_allocated_lockid(::std::string* lockid) {
  if (lockid != NULL) {
    set_has_lockid();
  } else {
    clear_has_lockid();
  }
  lockid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lockid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Snapshot.LockId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubmitMallOrderRequest::kBaseRequestFieldNumber;
const int SubmitMallOrderRequest::kSnapshotFieldNumber;
const int SubmitMallOrderRequest::kPayAppidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubmitMallOrderRequest::SubmitMallOrderRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.SubmitMallOrderRequest)
}
SubmitMallOrderRequest::SubmitMallOrderRequest(const SubmitMallOrderRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  payappid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_payappid()) {
    payappid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payappid_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  if (from.has_snapshot()) {
    snapshot_ = new ::micromsg::Snapshot(*from.snapshot_);
  } else {
    snapshot_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.SubmitMallOrderRequest)
}

void SubmitMallOrderRequest::SharedCtor() {
  _cached_size_ = 0;
  payappid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&snapshot_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(snapshot_));
}

SubmitMallOrderRequest::~SubmitMallOrderRequest() {
  // @@protoc_insertion_point(destructor:micromsg.SubmitMallOrderRequest)
  SharedDtor();
}

void SubmitMallOrderRequest::SharedDtor() {
  payappid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
  if (this != internal_default_instance()) {
    delete snapshot_;
  }
}

void SubmitMallOrderRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubmitMallOrderRequest::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubmitMallOrderRequest& SubmitMallOrderRequest::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

SubmitMallOrderRequest* SubmitMallOrderRequest::New(::google::protobuf::Arena* arena) const {
  SubmitMallOrderRequest* n = new SubmitMallOrderRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubmitMallOrderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.SubmitMallOrderRequest)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_payappid()) {
      GOOGLE_DCHECK(!payappid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*payappid_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
    if (has_snapshot()) {
      GOOGLE_DCHECK(snapshot_ != NULL);
      snapshot_->::micromsg::Snapshot::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SubmitMallOrderRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.SubmitMallOrderRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .micromsg.Snapshot Snapshot = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_snapshot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string PayAppid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_payappid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->payappid().data(), this->payappid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.SubmitMallOrderRequest.PayAppid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.SubmitMallOrderRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.SubmitMallOrderRequest)
  return false;
#undef DO_
}

void SubmitMallOrderRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.SubmitMallOrderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // optional .micromsg.Snapshot Snapshot = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->snapshot_, output);
  }

  // optional string PayAppid = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->payappid().data(), this->payappid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SubmitMallOrderRequest.PayAppid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->payappid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.SubmitMallOrderRequest)
}

::google::protobuf::uint8* SubmitMallOrderRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.SubmitMallOrderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // optional .micromsg.Snapshot Snapshot = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->snapshot_, deterministic, target);
  }

  // optional string PayAppid = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->payappid().data(), this->payappid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SubmitMallOrderRequest.PayAppid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->payappid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.SubmitMallOrderRequest)
  return target;
}

size_t SubmitMallOrderRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.SubmitMallOrderRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (has_baserequest()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }
  // optional string PayAppid = 3;
  if (has_payappid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->payappid());
  }

  // optional .micromsg.Snapshot Snapshot = 2;
  if (has_snapshot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->snapshot_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubmitMallOrderRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.SubmitMallOrderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SubmitMallOrderRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubmitMallOrderRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.SubmitMallOrderRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.SubmitMallOrderRequest)
    MergeFrom(*source);
  }
}

void SubmitMallOrderRequest::MergeFrom(const SubmitMallOrderRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.SubmitMallOrderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_payappid();
      payappid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payappid_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_snapshot()->::micromsg::Snapshot::MergeFrom(from.snapshot());
    }
  }
}

void SubmitMallOrderRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.SubmitMallOrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubmitMallOrderRequest::CopyFrom(const SubmitMallOrderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.SubmitMallOrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubmitMallOrderRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  if (has_snapshot()) {
    if (!this->snapshot_->IsInitialized()) return false;
  }
  return true;
}

void SubmitMallOrderRequest::Swap(SubmitMallOrderRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubmitMallOrderRequest::InternalSwap(SubmitMallOrderRequest* other) {
  payappid_.Swap(&other->payappid_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(snapshot_, other->snapshot_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubmitMallOrderRequest::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubmitMallOrderRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool SubmitMallOrderRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SubmitMallOrderRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
void SubmitMallOrderRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
void SubmitMallOrderRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& SubmitMallOrderRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SubmitMallOrderRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* SubmitMallOrderRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SubmitMallOrderRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* SubmitMallOrderRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SubmitMallOrderRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void SubmitMallOrderRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SubmitMallOrderRequest.BaseRequest)
}

// optional .micromsg.Snapshot Snapshot = 2;
bool SubmitMallOrderRequest::has_snapshot() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SubmitMallOrderRequest::set_has_snapshot() {
  _has_bits_[0] |= 0x00000004u;
}
void SubmitMallOrderRequest::clear_has_snapshot() {
  _has_bits_[0] &= ~0x00000004u;
}
void SubmitMallOrderRequest::clear_snapshot() {
  if (snapshot_ != NULL) snapshot_->::micromsg::Snapshot::Clear();
  clear_has_snapshot();
}
const ::micromsg::Snapshot& SubmitMallOrderRequest::snapshot() const {
  // @@protoc_insertion_point(field_get:micromsg.SubmitMallOrderRequest.Snapshot)
  return snapshot_ != NULL ? *snapshot_
                         : *::micromsg::Snapshot::internal_default_instance();
}
::micromsg::Snapshot* SubmitMallOrderRequest::mutable_snapshot() {
  set_has_snapshot();
  if (snapshot_ == NULL) {
    snapshot_ = new ::micromsg::Snapshot;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SubmitMallOrderRequest.Snapshot)
  return snapshot_;
}
::micromsg::Snapshot* SubmitMallOrderRequest::release_snapshot() {
  // @@protoc_insertion_point(field_release:micromsg.SubmitMallOrderRequest.Snapshot)
  clear_has_snapshot();
  ::micromsg::Snapshot* temp = snapshot_;
  snapshot_ = NULL;
  return temp;
}
void SubmitMallOrderRequest::set_allocated_snapshot(::micromsg::Snapshot* snapshot) {
  delete snapshot_;
  snapshot_ = snapshot;
  if (snapshot) {
    set_has_snapshot();
  } else {
    clear_has_snapshot();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SubmitMallOrderRequest.Snapshot)
}

// optional string PayAppid = 3;
bool SubmitMallOrderRequest::has_payappid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SubmitMallOrderRequest::set_has_payappid() {
  _has_bits_[0] |= 0x00000001u;
}
void SubmitMallOrderRequest::clear_has_payappid() {
  _has_bits_[0] &= ~0x00000001u;
}
void SubmitMallOrderRequest::clear_payappid() {
  payappid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_payappid();
}
const ::std::string& SubmitMallOrderRequest::payappid() const {
  // @@protoc_insertion_point(field_get:micromsg.SubmitMallOrderRequest.PayAppid)
  return payappid_.GetNoArena();
}
void SubmitMallOrderRequest::set_payappid(const ::std::string& value) {
  set_has_payappid();
  payappid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SubmitMallOrderRequest.PayAppid)
}
#if LANG_CXX11
void SubmitMallOrderRequest::set_payappid(::std::string&& value) {
  set_has_payappid();
  payappid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SubmitMallOrderRequest.PayAppid)
}
#endif
void SubmitMallOrderRequest::set_payappid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_payappid();
  payappid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SubmitMallOrderRequest.PayAppid)
}
void SubmitMallOrderRequest::set_payappid(const char* value, size_t size) {
  set_has_payappid();
  payappid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SubmitMallOrderRequest.PayAppid)
}
::std::string* SubmitMallOrderRequest::mutable_payappid() {
  set_has_payappid();
  // @@protoc_insertion_point(field_mutable:micromsg.SubmitMallOrderRequest.PayAppid)
  return payappid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubmitMallOrderRequest::release_payappid() {
  // @@protoc_insertion_point(field_release:micromsg.SubmitMallOrderRequest.PayAppid)
  clear_has_payappid();
  return payappid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubmitMallOrderRequest::set_allocated_payappid(::std::string* payappid) {
  if (payappid != NULL) {
    set_has_payappid();
  } else {
    clear_has_payappid();
  }
  payappid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payappid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SubmitMallOrderRequest.PayAppid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubmitMallOrderResponse::kBaseResponseFieldNumber;
const int SubmitMallOrderResponse::kPrepareIdFieldNumber;
const int SubmitMallOrderResponse::kRetCodeFieldNumber;
const int SubmitMallOrderResponse::kRetMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubmitMallOrderResponse::SubmitMallOrderResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.SubmitMallOrderResponse)
}
SubmitMallOrderResponse::SubmitMallOrderResponse(const SubmitMallOrderResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  prepareid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_prepareid()) {
    prepareid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prepareid_);
  }
  retmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_retmsg()) {
    retmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retmsg_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:micromsg.SubmitMallOrderResponse)
}

void SubmitMallOrderResponse::SharedCtor() {
  _cached_size_ = 0;
  prepareid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(retcode_));
}

SubmitMallOrderResponse::~SubmitMallOrderResponse() {
  // @@protoc_insertion_point(destructor:micromsg.SubmitMallOrderResponse)
  SharedDtor();
}

void SubmitMallOrderResponse::SharedDtor() {
  prepareid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void SubmitMallOrderResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubmitMallOrderResponse::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubmitMallOrderResponse& SubmitMallOrderResponse::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

SubmitMallOrderResponse* SubmitMallOrderResponse::New(::google::protobuf::Arena* arena) const {
  SubmitMallOrderResponse* n = new SubmitMallOrderResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubmitMallOrderResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.SubmitMallOrderResponse)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_prepareid()) {
      GOOGLE_DCHECK(!prepareid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*prepareid_.UnsafeRawStringPointer())->clear();
    }
    if (has_retmsg()) {
      GOOGLE_DCHECK(!retmsg_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*retmsg_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  retcode_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SubmitMallOrderResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.SubmitMallOrderResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string PrepareId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_prepareid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->prepareid().data(), this->prepareid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.SubmitMallOrderResponse.PrepareId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 RetCode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_retcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string RetMsg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retmsg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->retmsg().data(), this->retmsg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.SubmitMallOrderResponse.RetMsg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.SubmitMallOrderResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.SubmitMallOrderResponse)
  return false;
#undef DO_
}

void SubmitMallOrderResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.SubmitMallOrderResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // optional string PrepareId = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->prepareid().data(), this->prepareid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SubmitMallOrderResponse.PrepareId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->prepareid(), output);
  }

  // optional int32 RetCode = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->retcode(), output);
  }

  // optional string RetMsg = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retmsg().data(), this->retmsg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SubmitMallOrderResponse.RetMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->retmsg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.SubmitMallOrderResponse)
}

::google::protobuf::uint8* SubmitMallOrderResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.SubmitMallOrderResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // optional string PrepareId = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->prepareid().data(), this->prepareid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SubmitMallOrderResponse.PrepareId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->prepareid(), target);
  }

  // optional int32 RetCode = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->retcode(), target);
  }

  // optional string RetMsg = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retmsg().data(), this->retmsg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SubmitMallOrderResponse.RetMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->retmsg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.SubmitMallOrderResponse)
  return target;
}

size_t SubmitMallOrderResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.SubmitMallOrderResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (has_baseresponse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string PrepareId = 2;
    if (has_prepareid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->prepareid());
    }

    // optional string RetMsg = 4;
    if (has_retmsg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->retmsg());
    }

  }
  // optional int32 RetCode = 3;
  if (has_retcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubmitMallOrderResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.SubmitMallOrderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SubmitMallOrderResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubmitMallOrderResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.SubmitMallOrderResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.SubmitMallOrderResponse)
    MergeFrom(*source);
  }
}

void SubmitMallOrderResponse::MergeFrom(const SubmitMallOrderResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.SubmitMallOrderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_prepareid();
      prepareid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prepareid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_retmsg();
      retmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retmsg_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000008u) {
      retcode_ = from.retcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SubmitMallOrderResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.SubmitMallOrderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubmitMallOrderResponse::CopyFrom(const SubmitMallOrderResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.SubmitMallOrderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubmitMallOrderResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void SubmitMallOrderResponse::Swap(SubmitMallOrderResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubmitMallOrderResponse::InternalSwap(SubmitMallOrderResponse* other) {
  prepareid_.Swap(&other->prepareid_);
  retmsg_.Swap(&other->retmsg_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(retcode_, other->retcode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubmitMallOrderResponse::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubmitMallOrderResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool SubmitMallOrderResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SubmitMallOrderResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000004u;
}
void SubmitMallOrderResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000004u;
}
void SubmitMallOrderResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& SubmitMallOrderResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.SubmitMallOrderResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* SubmitMallOrderResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SubmitMallOrderResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* SubmitMallOrderResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.SubmitMallOrderResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void SubmitMallOrderResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SubmitMallOrderResponse.BaseResponse)
}

// optional string PrepareId = 2;
bool SubmitMallOrderResponse::has_prepareid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SubmitMallOrderResponse::set_has_prepareid() {
  _has_bits_[0] |= 0x00000001u;
}
void SubmitMallOrderResponse::clear_has_prepareid() {
  _has_bits_[0] &= ~0x00000001u;
}
void SubmitMallOrderResponse::clear_prepareid() {
  prepareid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_prepareid();
}
const ::std::string& SubmitMallOrderResponse::prepareid() const {
  // @@protoc_insertion_point(field_get:micromsg.SubmitMallOrderResponse.PrepareId)
  return prepareid_.GetNoArena();
}
void SubmitMallOrderResponse::set_prepareid(const ::std::string& value) {
  set_has_prepareid();
  prepareid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SubmitMallOrderResponse.PrepareId)
}
#if LANG_CXX11
void SubmitMallOrderResponse::set_prepareid(::std::string&& value) {
  set_has_prepareid();
  prepareid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SubmitMallOrderResponse.PrepareId)
}
#endif
void SubmitMallOrderResponse::set_prepareid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_prepareid();
  prepareid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SubmitMallOrderResponse.PrepareId)
}
void SubmitMallOrderResponse::set_prepareid(const char* value, size_t size) {
  set_has_prepareid();
  prepareid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SubmitMallOrderResponse.PrepareId)
}
::std::string* SubmitMallOrderResponse::mutable_prepareid() {
  set_has_prepareid();
  // @@protoc_insertion_point(field_mutable:micromsg.SubmitMallOrderResponse.PrepareId)
  return prepareid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubmitMallOrderResponse::release_prepareid() {
  // @@protoc_insertion_point(field_release:micromsg.SubmitMallOrderResponse.PrepareId)
  clear_has_prepareid();
  return prepareid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubmitMallOrderResponse::set_allocated_prepareid(::std::string* prepareid) {
  if (prepareid != NULL) {
    set_has_prepareid();
  } else {
    clear_has_prepareid();
  }
  prepareid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prepareid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SubmitMallOrderResponse.PrepareId)
}

// optional int32 RetCode = 3;
bool SubmitMallOrderResponse::has_retcode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SubmitMallOrderResponse::set_has_retcode() {
  _has_bits_[0] |= 0x00000008u;
}
void SubmitMallOrderResponse::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000008u;
}
void SubmitMallOrderResponse::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
::google::protobuf::int32 SubmitMallOrderResponse::retcode() const {
  // @@protoc_insertion_point(field_get:micromsg.SubmitMallOrderResponse.RetCode)
  return retcode_;
}
void SubmitMallOrderResponse::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SubmitMallOrderResponse.RetCode)
}

// optional string RetMsg = 4;
bool SubmitMallOrderResponse::has_retmsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SubmitMallOrderResponse::set_has_retmsg() {
  _has_bits_[0] |= 0x00000002u;
}
void SubmitMallOrderResponse::clear_has_retmsg() {
  _has_bits_[0] &= ~0x00000002u;
}
void SubmitMallOrderResponse::clear_retmsg() {
  retmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_retmsg();
}
const ::std::string& SubmitMallOrderResponse::retmsg() const {
  // @@protoc_insertion_point(field_get:micromsg.SubmitMallOrderResponse.RetMsg)
  return retmsg_.GetNoArena();
}
void SubmitMallOrderResponse::set_retmsg(const ::std::string& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SubmitMallOrderResponse.RetMsg)
}
#if LANG_CXX11
void SubmitMallOrderResponse::set_retmsg(::std::string&& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SubmitMallOrderResponse.RetMsg)
}
#endif
void SubmitMallOrderResponse::set_retmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SubmitMallOrderResponse.RetMsg)
}
void SubmitMallOrderResponse::set_retmsg(const char* value, size_t size) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SubmitMallOrderResponse.RetMsg)
}
::std::string* SubmitMallOrderResponse::mutable_retmsg() {
  set_has_retmsg();
  // @@protoc_insertion_point(field_mutable:micromsg.SubmitMallOrderResponse.RetMsg)
  return retmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubmitMallOrderResponse::release_retmsg() {
  // @@protoc_insertion_point(field_release:micromsg.SubmitMallOrderResponse.RetMsg)
  clear_has_retmsg();
  return retmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubmitMallOrderResponse::set_allocated_retmsg(::std::string* retmsg) {
  if (retmsg != NULL) {
    set_has_retmsg();
  } else {
    clear_has_retmsg();
  }
  retmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retmsg);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SubmitMallOrderResponse.RetMsg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubmitMallFreeOrderRequest::kBaseRequestFieldNumber;
const int SubmitMallFreeOrderRequest::kSnapshotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubmitMallFreeOrderRequest::SubmitMallFreeOrderRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.SubmitMallFreeOrderRequest)
}
SubmitMallFreeOrderRequest::SubmitMallFreeOrderRequest(const SubmitMallFreeOrderRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  if (from.has_snapshot()) {
    snapshot_ = new ::micromsg::Snapshot(*from.snapshot_);
  } else {
    snapshot_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.SubmitMallFreeOrderRequest)
}

void SubmitMallFreeOrderRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&snapshot_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(snapshot_));
}

SubmitMallFreeOrderRequest::~SubmitMallFreeOrderRequest() {
  // @@protoc_insertion_point(destructor:micromsg.SubmitMallFreeOrderRequest)
  SharedDtor();
}

void SubmitMallFreeOrderRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
  if (this != internal_default_instance()) {
    delete snapshot_;
  }
}

void SubmitMallFreeOrderRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubmitMallFreeOrderRequest::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubmitMallFreeOrderRequest& SubmitMallFreeOrderRequest::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

SubmitMallFreeOrderRequest* SubmitMallFreeOrderRequest::New(::google::protobuf::Arena* arena) const {
  SubmitMallFreeOrderRequest* n = new SubmitMallFreeOrderRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubmitMallFreeOrderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.SubmitMallFreeOrderRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
    if (has_snapshot()) {
      GOOGLE_DCHECK(snapshot_ != NULL);
      snapshot_->::micromsg::Snapshot::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SubmitMallFreeOrderRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.SubmitMallFreeOrderRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .micromsg.Snapshot Snapshot = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_snapshot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.SubmitMallFreeOrderRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.SubmitMallFreeOrderRequest)
  return false;
#undef DO_
}

void SubmitMallFreeOrderRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.SubmitMallFreeOrderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // optional .micromsg.Snapshot Snapshot = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->snapshot_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.SubmitMallFreeOrderRequest)
}

::google::protobuf::uint8* SubmitMallFreeOrderRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.SubmitMallFreeOrderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // optional .micromsg.Snapshot Snapshot = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->snapshot_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.SubmitMallFreeOrderRequest)
  return target;
}

size_t SubmitMallFreeOrderRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.SubmitMallFreeOrderRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (has_baserequest()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }
  // optional .micromsg.Snapshot Snapshot = 2;
  if (has_snapshot()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->snapshot_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubmitMallFreeOrderRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.SubmitMallFreeOrderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SubmitMallFreeOrderRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubmitMallFreeOrderRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.SubmitMallFreeOrderRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.SubmitMallFreeOrderRequest)
    MergeFrom(*source);
  }
}

void SubmitMallFreeOrderRequest::MergeFrom(const SubmitMallFreeOrderRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.SubmitMallFreeOrderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_snapshot()->::micromsg::Snapshot::MergeFrom(from.snapshot());
    }
  }
}

void SubmitMallFreeOrderRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.SubmitMallFreeOrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubmitMallFreeOrderRequest::CopyFrom(const SubmitMallFreeOrderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.SubmitMallFreeOrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubmitMallFreeOrderRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  if (has_snapshot()) {
    if (!this->snapshot_->IsInitialized()) return false;
  }
  return true;
}

void SubmitMallFreeOrderRequest::Swap(SubmitMallFreeOrderRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubmitMallFreeOrderRequest::InternalSwap(SubmitMallFreeOrderRequest* other) {
  std::swap(baserequest_, other->baserequest_);
  std::swap(snapshot_, other->snapshot_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubmitMallFreeOrderRequest::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubmitMallFreeOrderRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool SubmitMallFreeOrderRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SubmitMallFreeOrderRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
void SubmitMallFreeOrderRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
void SubmitMallFreeOrderRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& SubmitMallFreeOrderRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SubmitMallFreeOrderRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* SubmitMallFreeOrderRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SubmitMallFreeOrderRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* SubmitMallFreeOrderRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SubmitMallFreeOrderRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void SubmitMallFreeOrderRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SubmitMallFreeOrderRequest.BaseRequest)
}

// optional .micromsg.Snapshot Snapshot = 2;
bool SubmitMallFreeOrderRequest::has_snapshot() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SubmitMallFreeOrderRequest::set_has_snapshot() {
  _has_bits_[0] |= 0x00000002u;
}
void SubmitMallFreeOrderRequest::clear_has_snapshot() {
  _has_bits_[0] &= ~0x00000002u;
}
void SubmitMallFreeOrderRequest::clear_snapshot() {
  if (snapshot_ != NULL) snapshot_->::micromsg::Snapshot::Clear();
  clear_has_snapshot();
}
const ::micromsg::Snapshot& SubmitMallFreeOrderRequest::snapshot() const {
  // @@protoc_insertion_point(field_get:micromsg.SubmitMallFreeOrderRequest.Snapshot)
  return snapshot_ != NULL ? *snapshot_
                         : *::micromsg::Snapshot::internal_default_instance();
}
::micromsg::Snapshot* SubmitMallFreeOrderRequest::mutable_snapshot() {
  set_has_snapshot();
  if (snapshot_ == NULL) {
    snapshot_ = new ::micromsg::Snapshot;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SubmitMallFreeOrderRequest.Snapshot)
  return snapshot_;
}
::micromsg::Snapshot* SubmitMallFreeOrderRequest::release_snapshot() {
  // @@protoc_insertion_point(field_release:micromsg.SubmitMallFreeOrderRequest.Snapshot)
  clear_has_snapshot();
  ::micromsg::Snapshot* temp = snapshot_;
  snapshot_ = NULL;
  return temp;
}
void SubmitMallFreeOrderRequest::set_allocated_snapshot(::micromsg::Snapshot* snapshot) {
  delete snapshot_;
  snapshot_ = snapshot;
  if (snapshot) {
    set_has_snapshot();
  } else {
    clear_has_snapshot();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SubmitMallFreeOrderRequest.Snapshot)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubmitMallFreeOrderResponse::kBaseResponseFieldNumber;
const int SubmitMallFreeOrderResponse::kPrepareIdFieldNumber;
const int SubmitMallFreeOrderResponse::kRetCodeFieldNumber;
const int SubmitMallFreeOrderResponse::kRetMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubmitMallFreeOrderResponse::SubmitMallFreeOrderResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.SubmitMallFreeOrderResponse)
}
SubmitMallFreeOrderResponse::SubmitMallFreeOrderResponse(const SubmitMallFreeOrderResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  prepareid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_prepareid()) {
    prepareid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prepareid_);
  }
  retmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_retmsg()) {
    retmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retmsg_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:micromsg.SubmitMallFreeOrderResponse)
}

void SubmitMallFreeOrderResponse::SharedCtor() {
  _cached_size_ = 0;
  prepareid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(retcode_));
}

SubmitMallFreeOrderResponse::~SubmitMallFreeOrderResponse() {
  // @@protoc_insertion_point(destructor:micromsg.SubmitMallFreeOrderResponse)
  SharedDtor();
}

void SubmitMallFreeOrderResponse::SharedDtor() {
  prepareid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void SubmitMallFreeOrderResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubmitMallFreeOrderResponse::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubmitMallFreeOrderResponse& SubmitMallFreeOrderResponse::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

SubmitMallFreeOrderResponse* SubmitMallFreeOrderResponse::New(::google::protobuf::Arena* arena) const {
  SubmitMallFreeOrderResponse* n = new SubmitMallFreeOrderResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubmitMallFreeOrderResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.SubmitMallFreeOrderResponse)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_prepareid()) {
      GOOGLE_DCHECK(!prepareid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*prepareid_.UnsafeRawStringPointer())->clear();
    }
    if (has_retmsg()) {
      GOOGLE_DCHECK(!retmsg_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*retmsg_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  retcode_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SubmitMallFreeOrderResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.SubmitMallFreeOrderResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string PrepareId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_prepareid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->prepareid().data(), this->prepareid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.SubmitMallFreeOrderResponse.PrepareId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 RetCode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_retcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string RetMsg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retmsg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->retmsg().data(), this->retmsg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.SubmitMallFreeOrderResponse.RetMsg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.SubmitMallFreeOrderResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.SubmitMallFreeOrderResponse)
  return false;
#undef DO_
}

void SubmitMallFreeOrderResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.SubmitMallFreeOrderResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // optional string PrepareId = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->prepareid().data(), this->prepareid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SubmitMallFreeOrderResponse.PrepareId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->prepareid(), output);
  }

  // optional int32 RetCode = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->retcode(), output);
  }

  // optional string RetMsg = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retmsg().data(), this->retmsg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SubmitMallFreeOrderResponse.RetMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->retmsg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.SubmitMallFreeOrderResponse)
}

::google::protobuf::uint8* SubmitMallFreeOrderResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.SubmitMallFreeOrderResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // optional string PrepareId = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->prepareid().data(), this->prepareid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SubmitMallFreeOrderResponse.PrepareId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->prepareid(), target);
  }

  // optional int32 RetCode = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->retcode(), target);
  }

  // optional string RetMsg = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retmsg().data(), this->retmsg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SubmitMallFreeOrderResponse.RetMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->retmsg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.SubmitMallFreeOrderResponse)
  return target;
}

size_t SubmitMallFreeOrderResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.SubmitMallFreeOrderResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (has_baseresponse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string PrepareId = 2;
    if (has_prepareid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->prepareid());
    }

    // optional string RetMsg = 4;
    if (has_retmsg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->retmsg());
    }

  }
  // optional int32 RetCode = 3;
  if (has_retcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubmitMallFreeOrderResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.SubmitMallFreeOrderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SubmitMallFreeOrderResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubmitMallFreeOrderResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.SubmitMallFreeOrderResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.SubmitMallFreeOrderResponse)
    MergeFrom(*source);
  }
}

void SubmitMallFreeOrderResponse::MergeFrom(const SubmitMallFreeOrderResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.SubmitMallFreeOrderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_prepareid();
      prepareid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prepareid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_retmsg();
      retmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retmsg_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000008u) {
      retcode_ = from.retcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SubmitMallFreeOrderResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.SubmitMallFreeOrderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubmitMallFreeOrderResponse::CopyFrom(const SubmitMallFreeOrderResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.SubmitMallFreeOrderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubmitMallFreeOrderResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void SubmitMallFreeOrderResponse::Swap(SubmitMallFreeOrderResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubmitMallFreeOrderResponse::InternalSwap(SubmitMallFreeOrderResponse* other) {
  prepareid_.Swap(&other->prepareid_);
  retmsg_.Swap(&other->retmsg_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(retcode_, other->retcode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubmitMallFreeOrderResponse::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubmitMallFreeOrderResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool SubmitMallFreeOrderResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SubmitMallFreeOrderResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000004u;
}
void SubmitMallFreeOrderResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000004u;
}
void SubmitMallFreeOrderResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& SubmitMallFreeOrderResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.SubmitMallFreeOrderResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* SubmitMallFreeOrderResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SubmitMallFreeOrderResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* SubmitMallFreeOrderResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.SubmitMallFreeOrderResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void SubmitMallFreeOrderResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SubmitMallFreeOrderResponse.BaseResponse)
}

// optional string PrepareId = 2;
bool SubmitMallFreeOrderResponse::has_prepareid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SubmitMallFreeOrderResponse::set_has_prepareid() {
  _has_bits_[0] |= 0x00000001u;
}
void SubmitMallFreeOrderResponse::clear_has_prepareid() {
  _has_bits_[0] &= ~0x00000001u;
}
void SubmitMallFreeOrderResponse::clear_prepareid() {
  prepareid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_prepareid();
}
const ::std::string& SubmitMallFreeOrderResponse::prepareid() const {
  // @@protoc_insertion_point(field_get:micromsg.SubmitMallFreeOrderResponse.PrepareId)
  return prepareid_.GetNoArena();
}
void SubmitMallFreeOrderResponse::set_prepareid(const ::std::string& value) {
  set_has_prepareid();
  prepareid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SubmitMallFreeOrderResponse.PrepareId)
}
#if LANG_CXX11
void SubmitMallFreeOrderResponse::set_prepareid(::std::string&& value) {
  set_has_prepareid();
  prepareid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SubmitMallFreeOrderResponse.PrepareId)
}
#endif
void SubmitMallFreeOrderResponse::set_prepareid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_prepareid();
  prepareid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SubmitMallFreeOrderResponse.PrepareId)
}
void SubmitMallFreeOrderResponse::set_prepareid(const char* value, size_t size) {
  set_has_prepareid();
  prepareid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SubmitMallFreeOrderResponse.PrepareId)
}
::std::string* SubmitMallFreeOrderResponse::mutable_prepareid() {
  set_has_prepareid();
  // @@protoc_insertion_point(field_mutable:micromsg.SubmitMallFreeOrderResponse.PrepareId)
  return prepareid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubmitMallFreeOrderResponse::release_prepareid() {
  // @@protoc_insertion_point(field_release:micromsg.SubmitMallFreeOrderResponse.PrepareId)
  clear_has_prepareid();
  return prepareid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubmitMallFreeOrderResponse::set_allocated_prepareid(::std::string* prepareid) {
  if (prepareid != NULL) {
    set_has_prepareid();
  } else {
    clear_has_prepareid();
  }
  prepareid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prepareid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SubmitMallFreeOrderResponse.PrepareId)
}

// optional int32 RetCode = 3;
bool SubmitMallFreeOrderResponse::has_retcode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SubmitMallFreeOrderResponse::set_has_retcode() {
  _has_bits_[0] |= 0x00000008u;
}
void SubmitMallFreeOrderResponse::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000008u;
}
void SubmitMallFreeOrderResponse::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
::google::protobuf::int32 SubmitMallFreeOrderResponse::retcode() const {
  // @@protoc_insertion_point(field_get:micromsg.SubmitMallFreeOrderResponse.RetCode)
  return retcode_;
}
void SubmitMallFreeOrderResponse::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SubmitMallFreeOrderResponse.RetCode)
}

// optional string RetMsg = 4;
bool SubmitMallFreeOrderResponse::has_retmsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SubmitMallFreeOrderResponse::set_has_retmsg() {
  _has_bits_[0] |= 0x00000002u;
}
void SubmitMallFreeOrderResponse::clear_has_retmsg() {
  _has_bits_[0] &= ~0x00000002u;
}
void SubmitMallFreeOrderResponse::clear_retmsg() {
  retmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_retmsg();
}
const ::std::string& SubmitMallFreeOrderResponse::retmsg() const {
  // @@protoc_insertion_point(field_get:micromsg.SubmitMallFreeOrderResponse.RetMsg)
  return retmsg_.GetNoArena();
}
void SubmitMallFreeOrderResponse::set_retmsg(const ::std::string& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SubmitMallFreeOrderResponse.RetMsg)
}
#if LANG_CXX11
void SubmitMallFreeOrderResponse::set_retmsg(::std::string&& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SubmitMallFreeOrderResponse.RetMsg)
}
#endif
void SubmitMallFreeOrderResponse::set_retmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SubmitMallFreeOrderResponse.RetMsg)
}
void SubmitMallFreeOrderResponse::set_retmsg(const char* value, size_t size) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SubmitMallFreeOrderResponse.RetMsg)
}
::std::string* SubmitMallFreeOrderResponse::mutable_retmsg() {
  set_has_retmsg();
  // @@protoc_insertion_point(field_mutable:micromsg.SubmitMallFreeOrderResponse.RetMsg)
  return retmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubmitMallFreeOrderResponse::release_retmsg() {
  // @@protoc_insertion_point(field_release:micromsg.SubmitMallFreeOrderResponse.RetMsg)
  clear_has_retmsg();
  return retmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubmitMallFreeOrderResponse::set_allocated_retmsg(::std::string* retmsg) {
  if (retmsg != NULL) {
    set_has_retmsg();
  } else {
    clear_has_retmsg();
  }
  retmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retmsg);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SubmitMallFreeOrderResponse.RetMsg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SampleProduct::kPidFieldNumber;
const int SampleProduct::kSkuIdFieldNumber;
const int SampleProduct::kCountFieldNumber;
const int SampleProduct::kSafeUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SampleProduct::SampleProduct()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.SampleProduct)
}
SampleProduct::SampleProduct(const SampleProduct& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pid()) {
    pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pid_);
  }
  skuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_skuid()) {
    skuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.skuid_);
  }
  safeurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_safeurl()) {
    safeurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.safeurl_);
  }
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:micromsg.SampleProduct)
}

void SampleProduct::SharedCtor() {
  _cached_size_ = 0;
  pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  skuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  safeurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  count_ = 0u;
}

SampleProduct::~SampleProduct() {
  // @@protoc_insertion_point(destructor:micromsg.SampleProduct)
  SharedDtor();
}

void SampleProduct::SharedDtor() {
  pid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  skuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  safeurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SampleProduct::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SampleProduct::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SampleProduct& SampleProduct::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

SampleProduct* SampleProduct::New(::google::protobuf::Arena* arena) const {
  SampleProduct* n = new SampleProduct;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SampleProduct::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.SampleProduct)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_pid()) {
      GOOGLE_DCHECK(!pid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*pid_.UnsafeRawStringPointer())->clear();
    }
    if (has_skuid()) {
      GOOGLE_DCHECK(!skuid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*skuid_.UnsafeRawStringPointer())->clear();
    }
    if (has_safeurl()) {
      GOOGLE_DCHECK(!safeurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*safeurl_.UnsafeRawStringPointer())->clear();
    }
  }
  count_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SampleProduct::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.SampleProduct)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Pid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pid().data(), this->pid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.SampleProduct.Pid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string SkuId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_skuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->skuid().data(), this->skuid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.SampleProduct.SkuId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 Count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string SafeUrl = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_safeurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->safeurl().data(), this->safeurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.SampleProduct.SafeUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.SampleProduct)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.SampleProduct)
  return false;
#undef DO_
}

void SampleProduct::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.SampleProduct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string Pid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pid().data(), this->pid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SampleProduct.Pid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pid(), output);
  }

  // optional string SkuId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->skuid().data(), this->skuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SampleProduct.SkuId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->skuid(), output);
  }

  // optional uint32 Count = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->count(), output);
  }

  // optional string SafeUrl = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->safeurl().data(), this->safeurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SampleProduct.SafeUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->safeurl(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.SampleProduct)
}

::google::protobuf::uint8* SampleProduct::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.SampleProduct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string Pid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pid().data(), this->pid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SampleProduct.Pid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pid(), target);
  }

  // optional string SkuId = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->skuid().data(), this->skuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SampleProduct.SkuId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->skuid(), target);
  }

  // optional uint32 Count = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->count(), target);
  }

  // optional string SafeUrl = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->safeurl().data(), this->safeurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SampleProduct.SafeUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->safeurl(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.SampleProduct)
  return target;
}

size_t SampleProduct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.SampleProduct)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string Pid = 1;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pid());
    }

    // optional string SkuId = 2;
    if (has_skuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->skuid());
    }

    // optional string SafeUrl = 4;
    if (has_safeurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->safeurl());
    }

    // optional uint32 Count = 3;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SampleProduct::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.SampleProduct)
  GOOGLE_DCHECK_NE(&from, this);
  const SampleProduct* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SampleProduct>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.SampleProduct)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.SampleProduct)
    MergeFrom(*source);
  }
}

void SampleProduct::MergeFrom(const SampleProduct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.SampleProduct)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_pid();
      pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_skuid();
      skuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.skuid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_safeurl();
      safeurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.safeurl_);
    }
    if (cached_has_bits & 0x00000008u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SampleProduct::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.SampleProduct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SampleProduct::CopyFrom(const SampleProduct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.SampleProduct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SampleProduct::IsInitialized() const {
  return true;
}

void SampleProduct::Swap(SampleProduct* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SampleProduct::InternalSwap(SampleProduct* other) {
  pid_.Swap(&other->pid_);
  skuid_.Swap(&other->skuid_);
  safeurl_.Swap(&other->safeurl_);
  std::swap(count_, other->count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SampleProduct::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SampleProduct

// optional string Pid = 1;
bool SampleProduct::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SampleProduct::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
void SampleProduct::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
void SampleProduct::clear_pid() {
  pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pid();
}
const ::std::string& SampleProduct::pid() const {
  // @@protoc_insertion_point(field_get:micromsg.SampleProduct.Pid)
  return pid_.GetNoArena();
}
void SampleProduct::set_pid(const ::std::string& value) {
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SampleProduct.Pid)
}
#if LANG_CXX11
void SampleProduct::set_pid(::std::string&& value) {
  set_has_pid();
  pid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SampleProduct.Pid)
}
#endif
void SampleProduct::set_pid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SampleProduct.Pid)
}
void SampleProduct::set_pid(const char* value, size_t size) {
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SampleProduct.Pid)
}
::std::string* SampleProduct::mutable_pid() {
  set_has_pid();
  // @@protoc_insertion_point(field_mutable:micromsg.SampleProduct.Pid)
  return pid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SampleProduct::release_pid() {
  // @@protoc_insertion_point(field_release:micromsg.SampleProduct.Pid)
  clear_has_pid();
  return pid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SampleProduct::set_allocated_pid(::std::string* pid) {
  if (pid != NULL) {
    set_has_pid();
  } else {
    clear_has_pid();
  }
  pid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SampleProduct.Pid)
}

// optional string SkuId = 2;
bool SampleProduct::has_skuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SampleProduct::set_has_skuid() {
  _has_bits_[0] |= 0x00000002u;
}
void SampleProduct::clear_has_skuid() {
  _has_bits_[0] &= ~0x00000002u;
}
void SampleProduct::clear_skuid() {
  skuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_skuid();
}
const ::std::string& SampleProduct::skuid() const {
  // @@protoc_insertion_point(field_get:micromsg.SampleProduct.SkuId)
  return skuid_.GetNoArena();
}
void SampleProduct::set_skuid(const ::std::string& value) {
  set_has_skuid();
  skuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SampleProduct.SkuId)
}
#if LANG_CXX11
void SampleProduct::set_skuid(::std::string&& value) {
  set_has_skuid();
  skuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SampleProduct.SkuId)
}
#endif
void SampleProduct::set_skuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_skuid();
  skuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SampleProduct.SkuId)
}
void SampleProduct::set_skuid(const char* value, size_t size) {
  set_has_skuid();
  skuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SampleProduct.SkuId)
}
::std::string* SampleProduct::mutable_skuid() {
  set_has_skuid();
  // @@protoc_insertion_point(field_mutable:micromsg.SampleProduct.SkuId)
  return skuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SampleProduct::release_skuid() {
  // @@protoc_insertion_point(field_release:micromsg.SampleProduct.SkuId)
  clear_has_skuid();
  return skuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SampleProduct::set_allocated_skuid(::std::string* skuid) {
  if (skuid != NULL) {
    set_has_skuid();
  } else {
    clear_has_skuid();
  }
  skuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), skuid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SampleProduct.SkuId)
}

// optional uint32 Count = 3;
bool SampleProduct::has_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SampleProduct::set_has_count() {
  _has_bits_[0] |= 0x00000008u;
}
void SampleProduct::clear_has_count() {
  _has_bits_[0] &= ~0x00000008u;
}
void SampleProduct::clear_count() {
  count_ = 0u;
  clear_has_count();
}
::google::protobuf::uint32 SampleProduct::count() const {
  // @@protoc_insertion_point(field_get:micromsg.SampleProduct.Count)
  return count_;
}
void SampleProduct::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SampleProduct.Count)
}

// optional string SafeUrl = 4;
bool SampleProduct::has_safeurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SampleProduct::set_has_safeurl() {
  _has_bits_[0] |= 0x00000004u;
}
void SampleProduct::clear_has_safeurl() {
  _has_bits_[0] &= ~0x00000004u;
}
void SampleProduct::clear_safeurl() {
  safeurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_safeurl();
}
const ::std::string& SampleProduct::safeurl() const {
  // @@protoc_insertion_point(field_get:micromsg.SampleProduct.SafeUrl)
  return safeurl_.GetNoArena();
}
void SampleProduct::set_safeurl(const ::std::string& value) {
  set_has_safeurl();
  safeurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SampleProduct.SafeUrl)
}
#if LANG_CXX11
void SampleProduct::set_safeurl(::std::string&& value) {
  set_has_safeurl();
  safeurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SampleProduct.SafeUrl)
}
#endif
void SampleProduct::set_safeurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_safeurl();
  safeurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SampleProduct.SafeUrl)
}
void SampleProduct::set_safeurl(const char* value, size_t size) {
  set_has_safeurl();
  safeurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SampleProduct.SafeUrl)
}
::std::string* SampleProduct::mutable_safeurl() {
  set_has_safeurl();
  // @@protoc_insertion_point(field_mutable:micromsg.SampleProduct.SafeUrl)
  return safeurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SampleProduct::release_safeurl() {
  // @@protoc_insertion_point(field_release:micromsg.SampleProduct.SafeUrl)
  clear_has_safeurl();
  return safeurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SampleProduct::set_allocated_safeurl(::std::string* safeurl) {
  if (safeurl != NULL) {
    set_has_safeurl();
  } else {
    clear_has_safeurl();
  }
  safeurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), safeurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SampleProduct.SafeUrl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ActionAttr::kNameFieldNumber;
const int ActionAttr::kTipsFieldNumber;
const int ActionAttr::kTypeFieldNumber;
const int ActionAttr::kContentFieldNumber;
const int ActionAttr::kIconUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ActionAttr::ActionAttr()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.ActionAttr)
}
ActionAttr::ActionAttr(const ActionAttr& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  tips_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tips()) {
    tips_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tips_);
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_content()) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  iconurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_iconurl()) {
    iconurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iconurl_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:micromsg.ActionAttr)
}

void ActionAttr::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tips_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iconurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0u;
}

ActionAttr::~ActionAttr() {
  // @@protoc_insertion_point(destructor:micromsg.ActionAttr)
  SharedDtor();
}

void ActionAttr::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tips_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iconurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ActionAttr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActionAttr::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ActionAttr& ActionAttr::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

ActionAttr* ActionAttr::New(::google::protobuf::Arena* arena) const {
  ActionAttr* n = new ActionAttr;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ActionAttr::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.ActionAttr)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_tips()) {
      GOOGLE_DCHECK(!tips_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*tips_.UnsafeRawStringPointer())->clear();
    }
    if (has_content()) {
      GOOGLE_DCHECK(!content_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*content_.UnsafeRawStringPointer())->clear();
    }
    if (has_iconurl()) {
      GOOGLE_DCHECK(!iconurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*iconurl_.UnsafeRawStringPointer())->clear();
    }
  }
  type_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ActionAttr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.ActionAttr)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.ActionAttr.Name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Tips = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tips()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tips().data(), this->tips().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.ActionAttr.Tips");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 Type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Content = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.ActionAttr.Content");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string IconUrl = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_iconurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->iconurl().data(), this->iconurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.ActionAttr.IconUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.ActionAttr)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.ActionAttr)
  return false;
#undef DO_
}

void ActionAttr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.ActionAttr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string Name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ActionAttr.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string Tips = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tips().data(), this->tips().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ActionAttr.Tips");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tips(), output);
  }

  // optional uint32 Type = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->type(), output);
  }

  // optional string Content = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ActionAttr.Content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->content(), output);
  }

  // optional string IconUrl = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->iconurl().data(), this->iconurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ActionAttr.IconUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->iconurl(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.ActionAttr)
}

::google::protobuf::uint8* ActionAttr::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.ActionAttr)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string Name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ActionAttr.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string Tips = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tips().data(), this->tips().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ActionAttr.Tips");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tips(), target);
  }

  // optional uint32 Type = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->type(), target);
  }

  // optional string Content = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ActionAttr.Content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->content(), target);
  }

  // optional string IconUrl = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->iconurl().data(), this->iconurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.ActionAttr.IconUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->iconurl(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.ActionAttr)
  return target;
}

size_t ActionAttr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.ActionAttr)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string Name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string Tips = 2;
    if (has_tips()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tips());
    }

    // optional string Content = 4;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }

    // optional string IconUrl = 5;
    if (has_iconurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->iconurl());
    }

    // optional uint32 Type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActionAttr::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.ActionAttr)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionAttr* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ActionAttr>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.ActionAttr)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.ActionAttr)
    MergeFrom(*source);
  }
}

void ActionAttr::MergeFrom(const ActionAttr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.ActionAttr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_tips();
      tips_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tips_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_content();
      content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_iconurl();
      iconurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iconurl_);
    }
    if (cached_has_bits & 0x00000010u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ActionAttr::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.ActionAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionAttr::CopyFrom(const ActionAttr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.ActionAttr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionAttr::IsInitialized() const {
  return true;
}

void ActionAttr::Swap(ActionAttr* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ActionAttr::InternalSwap(ActionAttr* other) {
  name_.Swap(&other->name_);
  tips_.Swap(&other->tips_);
  content_.Swap(&other->content_);
  iconurl_.Swap(&other->iconurl_);
  std::swap(type_, other->type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ActionAttr::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ActionAttr

// optional string Name = 1;
bool ActionAttr::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ActionAttr::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void ActionAttr::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void ActionAttr::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& ActionAttr::name() const {
  // @@protoc_insertion_point(field_get:micromsg.ActionAttr.Name)
  return name_.GetNoArena();
}
void ActionAttr::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ActionAttr.Name)
}
#if LANG_CXX11
void ActionAttr::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ActionAttr.Name)
}
#endif
void ActionAttr::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ActionAttr.Name)
}
void ActionAttr::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ActionAttr.Name)
}
::std::string* ActionAttr::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:micromsg.ActionAttr.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ActionAttr::release_name() {
  // @@protoc_insertion_point(field_release:micromsg.ActionAttr.Name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ActionAttr::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ActionAttr.Name)
}

// optional string Tips = 2;
bool ActionAttr::has_tips() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ActionAttr::set_has_tips() {
  _has_bits_[0] |= 0x00000002u;
}
void ActionAttr::clear_has_tips() {
  _has_bits_[0] &= ~0x00000002u;
}
void ActionAttr::clear_tips() {
  tips_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tips();
}
const ::std::string& ActionAttr::tips() const {
  // @@protoc_insertion_point(field_get:micromsg.ActionAttr.Tips)
  return tips_.GetNoArena();
}
void ActionAttr::set_tips(const ::std::string& value) {
  set_has_tips();
  tips_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ActionAttr.Tips)
}
#if LANG_CXX11
void ActionAttr::set_tips(::std::string&& value) {
  set_has_tips();
  tips_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ActionAttr.Tips)
}
#endif
void ActionAttr::set_tips(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tips();
  tips_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ActionAttr.Tips)
}
void ActionAttr::set_tips(const char* value, size_t size) {
  set_has_tips();
  tips_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ActionAttr.Tips)
}
::std::string* ActionAttr::mutable_tips() {
  set_has_tips();
  // @@protoc_insertion_point(field_mutable:micromsg.ActionAttr.Tips)
  return tips_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ActionAttr::release_tips() {
  // @@protoc_insertion_point(field_release:micromsg.ActionAttr.Tips)
  clear_has_tips();
  return tips_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ActionAttr::set_allocated_tips(::std::string* tips) {
  if (tips != NULL) {
    set_has_tips();
  } else {
    clear_has_tips();
  }
  tips_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tips);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ActionAttr.Tips)
}

// optional uint32 Type = 3;
bool ActionAttr::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ActionAttr::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
void ActionAttr::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
void ActionAttr::clear_type() {
  type_ = 0u;
  clear_has_type();
}
::google::protobuf::uint32 ActionAttr::type() const {
  // @@protoc_insertion_point(field_get:micromsg.ActionAttr.Type)
  return type_;
}
void ActionAttr::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ActionAttr.Type)
}

// optional string Content = 4;
bool ActionAttr::has_content() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ActionAttr::set_has_content() {
  _has_bits_[0] |= 0x00000004u;
}
void ActionAttr::clear_has_content() {
  _has_bits_[0] &= ~0x00000004u;
}
void ActionAttr::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
const ::std::string& ActionAttr::content() const {
  // @@protoc_insertion_point(field_get:micromsg.ActionAttr.Content)
  return content_.GetNoArena();
}
void ActionAttr::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ActionAttr.Content)
}
#if LANG_CXX11
void ActionAttr::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ActionAttr.Content)
}
#endif
void ActionAttr::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ActionAttr.Content)
}
void ActionAttr::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ActionAttr.Content)
}
::std::string* ActionAttr::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:micromsg.ActionAttr.Content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ActionAttr::release_content() {
  // @@protoc_insertion_point(field_release:micromsg.ActionAttr.Content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ActionAttr::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ActionAttr.Content)
}

// optional string IconUrl = 5;
bool ActionAttr::has_iconurl() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ActionAttr::set_has_iconurl() {
  _has_bits_[0] |= 0x00000008u;
}
void ActionAttr::clear_has_iconurl() {
  _has_bits_[0] &= ~0x00000008u;
}
void ActionAttr::clear_iconurl() {
  iconurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_iconurl();
}
const ::std::string& ActionAttr::iconurl() const {
  // @@protoc_insertion_point(field_get:micromsg.ActionAttr.IconUrl)
  return iconurl_.GetNoArena();
}
void ActionAttr::set_iconurl(const ::std::string& value) {
  set_has_iconurl();
  iconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ActionAttr.IconUrl)
}
#if LANG_CXX11
void ActionAttr::set_iconurl(::std::string&& value) {
  set_has_iconurl();
  iconurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ActionAttr.IconUrl)
}
#endif
void ActionAttr::set_iconurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_iconurl();
  iconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ActionAttr.IconUrl)
}
void ActionAttr::set_iconurl(const char* value, size_t size) {
  set_has_iconurl();
  iconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ActionAttr.IconUrl)
}
::std::string* ActionAttr::mutable_iconurl() {
  set_has_iconurl();
  // @@protoc_insertion_point(field_mutable:micromsg.ActionAttr.IconUrl)
  return iconurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ActionAttr::release_iconurl() {
  // @@protoc_insertion_point(field_release:micromsg.ActionAttr.IconUrl)
  clear_has_iconurl();
  return iconurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ActionAttr::set_allocated_iconurl(::std::string* iconurl) {
  if (iconurl != NULL) {
    set_has_iconurl();
  } else {
    clear_has_iconurl();
  }
  iconurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), iconurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ActionAttr.IconUrl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PreSubmitOrderRequest::kBaseRequestFieldNumber;
const int PreSubmitOrderRequest::kProductCountFieldNumber;
const int PreSubmitOrderRequest::kProductFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PreSubmitOrderRequest::PreSubmitOrderRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.PreSubmitOrderRequest)
}
PreSubmitOrderRequest::PreSubmitOrderRequest(const PreSubmitOrderRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      product_(from.product_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  productcount_ = from.productcount_;
  // @@protoc_insertion_point(copy_constructor:micromsg.PreSubmitOrderRequest)
}

void PreSubmitOrderRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&productcount_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(productcount_));
}

PreSubmitOrderRequest::~PreSubmitOrderRequest() {
  // @@protoc_insertion_point(destructor:micromsg.PreSubmitOrderRequest)
  SharedDtor();
}

void PreSubmitOrderRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void PreSubmitOrderRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PreSubmitOrderRequest::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PreSubmitOrderRequest& PreSubmitOrderRequest::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

PreSubmitOrderRequest* PreSubmitOrderRequest::New(::google::protobuf::Arena* arena) const {
  PreSubmitOrderRequest* n = new PreSubmitOrderRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PreSubmitOrderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.PreSubmitOrderRequest)
  product_.Clear();
  if (has_baserequest()) {
    GOOGLE_DCHECK(baserequest_ != NULL);
    baserequest_->::micromsg::BaseRequest::Clear();
  }
  productcount_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PreSubmitOrderRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.PreSubmitOrderRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ProductCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_productcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &productcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.SampleProduct Product = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_product()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.PreSubmitOrderRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.PreSubmitOrderRequest)
  return false;
#undef DO_
}

void PreSubmitOrderRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.PreSubmitOrderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required uint32 ProductCount = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->productcount(), output);
  }

  // repeated .micromsg.SampleProduct Product = 3;
  for (unsigned int i = 0, n = this->product_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->product(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.PreSubmitOrderRequest)
}

::google::protobuf::uint8* PreSubmitOrderRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.PreSubmitOrderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required uint32 ProductCount = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->productcount(), target);
  }

  // repeated .micromsg.SampleProduct Product = 3;
  for (unsigned int i = 0, n = this->product_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->product(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.PreSubmitOrderRequest)
  return target;
}

size_t PreSubmitOrderRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.PreSubmitOrderRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_productcount()) {
    // required uint32 ProductCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->productcount());
  }

  return total_size;
}
size_t PreSubmitOrderRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.PreSubmitOrderRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required uint32 ProductCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->productcount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.SampleProduct Product = 3;
  {
    unsigned int count = this->product_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->product(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PreSubmitOrderRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.PreSubmitOrderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PreSubmitOrderRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PreSubmitOrderRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.PreSubmitOrderRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.PreSubmitOrderRequest)
    MergeFrom(*source);
  }
}

void PreSubmitOrderRequest::MergeFrom(const PreSubmitOrderRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.PreSubmitOrderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  product_.MergeFrom(from.product_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000002u) {
      productcount_ = from.productcount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PreSubmitOrderRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.PreSubmitOrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PreSubmitOrderRequest::CopyFrom(const PreSubmitOrderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.PreSubmitOrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PreSubmitOrderRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void PreSubmitOrderRequest::Swap(PreSubmitOrderRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PreSubmitOrderRequest::InternalSwap(PreSubmitOrderRequest* other) {
  product_.InternalSwap(&other->product_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(productcount_, other->productcount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PreSubmitOrderRequest::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PreSubmitOrderRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool PreSubmitOrderRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PreSubmitOrderRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
void PreSubmitOrderRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
void PreSubmitOrderRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& PreSubmitOrderRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.PreSubmitOrderRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* PreSubmitOrderRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.PreSubmitOrderRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* PreSubmitOrderRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.PreSubmitOrderRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void PreSubmitOrderRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.PreSubmitOrderRequest.BaseRequest)
}

// required uint32 ProductCount = 2;
bool PreSubmitOrderRequest::has_productcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PreSubmitOrderRequest::set_has_productcount() {
  _has_bits_[0] |= 0x00000002u;
}
void PreSubmitOrderRequest::clear_has_productcount() {
  _has_bits_[0] &= ~0x00000002u;
}
void PreSubmitOrderRequest::clear_productcount() {
  productcount_ = 0u;
  clear_has_productcount();
}
::google::protobuf::uint32 PreSubmitOrderRequest::productcount() const {
  // @@protoc_insertion_point(field_get:micromsg.PreSubmitOrderRequest.ProductCount)
  return productcount_;
}
void PreSubmitOrderRequest::set_productcount(::google::protobuf::uint32 value) {
  set_has_productcount();
  productcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.PreSubmitOrderRequest.ProductCount)
}

// repeated .micromsg.SampleProduct Product = 3;
int PreSubmitOrderRequest::product_size() const {
  return product_.size();
}
void PreSubmitOrderRequest::clear_product() {
  product_.Clear();
}
const ::micromsg::SampleProduct& PreSubmitOrderRequest::product(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.PreSubmitOrderRequest.Product)
  return product_.Get(index);
}
::micromsg::SampleProduct* PreSubmitOrderRequest::mutable_product(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.PreSubmitOrderRequest.Product)
  return product_.Mutable(index);
}
::micromsg::SampleProduct* PreSubmitOrderRequest::add_product() {
  // @@protoc_insertion_point(field_add:micromsg.PreSubmitOrderRequest.Product)
  return product_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::SampleProduct >*
PreSubmitOrderRequest::mutable_product() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.PreSubmitOrderRequest.Product)
  return &product_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::SampleProduct >&
PreSubmitOrderRequest::product() const {
  // @@protoc_insertion_point(field_list:micromsg.PreSubmitOrderRequest.Product)
  return product_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PreSubmitOrderResponse::kBaseResponseFieldNumber;
const int PreSubmitOrderResponse::kExpressCountFieldNumber;
const int PreSubmitOrderResponse::kExpressFieldNumber;
const int PreSubmitOrderResponse::kLockIdFieldNumber;
const int PreSubmitOrderResponse::kRetCodeFieldNumber;
const int PreSubmitOrderResponse::kRetMsgFieldNumber;
const int PreSubmitOrderResponse::kActionAttrsFieldNumber;
const int PreSubmitOrderResponse::kActionAttrCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PreSubmitOrderResponse::PreSubmitOrderResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.PreSubmitOrderResponse)
}
PreSubmitOrderResponse::PreSubmitOrderResponse(const PreSubmitOrderResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      express_(from.express_),
      actionattrs_(from.actionattrs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lockid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_lockid()) {
    lockid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lockid_);
  }
  retmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_retmsg()) {
    retmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retmsg_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  ::memcpy(&expresscount_, &from.expresscount_,
    reinterpret_cast<char*>(&actionattrcount_) -
    reinterpret_cast<char*>(&expresscount_) + sizeof(actionattrcount_));
  // @@protoc_insertion_point(copy_constructor:micromsg.PreSubmitOrderResponse)
}

void PreSubmitOrderResponse::SharedCtor() {
  _cached_size_ = 0;
  lockid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&actionattrcount_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(actionattrcount_));
}

PreSubmitOrderResponse::~PreSubmitOrderResponse() {
  // @@protoc_insertion_point(destructor:micromsg.PreSubmitOrderResponse)
  SharedDtor();
}

void PreSubmitOrderResponse::SharedDtor() {
  lockid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void PreSubmitOrderResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PreSubmitOrderResponse::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PreSubmitOrderResponse& PreSubmitOrderResponse::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

PreSubmitOrderResponse* PreSubmitOrderResponse::New(::google::protobuf::Arena* arena) const {
  PreSubmitOrderResponse* n = new PreSubmitOrderResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PreSubmitOrderResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.PreSubmitOrderResponse)
  express_.Clear();
  actionattrs_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    if (has_lockid()) {
      GOOGLE_DCHECK(!lockid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*lockid_.UnsafeRawStringPointer())->clear();
    }
    if (has_retmsg()) {
      GOOGLE_DCHECK(!retmsg_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*retmsg_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 56u) {
    ::memset(&expresscount_, 0, reinterpret_cast<char*>(&actionattrcount_) -
      reinterpret_cast<char*>(&expresscount_) + sizeof(actionattrcount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PreSubmitOrderResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.PreSubmitOrderResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ExpressCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_expresscount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &expresscount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.Express Express = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_express()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string LockId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lockid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->lockid().data(), this->lockid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.PreSubmitOrderResponse.LockId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 RetCode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_retcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string RetMsg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retmsg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->retmsg().data(), this->retmsg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.PreSubmitOrderResponse.RetMsg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.ActionAttr ActionAttrs = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_actionattrs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ActionAttrCount = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_actionattrcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &actionattrcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.PreSubmitOrderResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.PreSubmitOrderResponse)
  return false;
#undef DO_
}

void PreSubmitOrderResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.PreSubmitOrderResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // optional uint32 ExpressCount = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->expresscount(), output);
  }

  // repeated .micromsg.Express Express = 3;
  for (unsigned int i = 0, n = this->express_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->express(i), output);
  }

  // optional string LockId = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lockid().data(), this->lockid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.PreSubmitOrderResponse.LockId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->lockid(), output);
  }

  // optional int32 RetCode = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->retcode(), output);
  }

  // optional string RetMsg = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retmsg().data(), this->retmsg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.PreSubmitOrderResponse.RetMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->retmsg(), output);
  }

  // repeated .micromsg.ActionAttr ActionAttrs = 7;
  for (unsigned int i = 0, n = this->actionattrs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->actionattrs(i), output);
  }

  // optional uint32 ActionAttrCount = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->actionattrcount(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.PreSubmitOrderResponse)
}

::google::protobuf::uint8* PreSubmitOrderResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.PreSubmitOrderResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // optional uint32 ExpressCount = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->expresscount(), target);
  }

  // repeated .micromsg.Express Express = 3;
  for (unsigned int i = 0, n = this->express_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->express(i), deterministic, target);
  }

  // optional string LockId = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lockid().data(), this->lockid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.PreSubmitOrderResponse.LockId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->lockid(), target);
  }

  // optional int32 RetCode = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->retcode(), target);
  }

  // optional string RetMsg = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retmsg().data(), this->retmsg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.PreSubmitOrderResponse.RetMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->retmsg(), target);
  }

  // repeated .micromsg.ActionAttr ActionAttrs = 7;
  for (unsigned int i = 0, n = this->actionattrs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->actionattrs(i), deterministic, target);
  }

  // optional uint32 ActionAttrCount = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->actionattrcount(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.PreSubmitOrderResponse)
  return target;
}

size_t PreSubmitOrderResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.PreSubmitOrderResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .micromsg.Express Express = 3;
  {
    unsigned int count = this->express_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->express(i));
    }
  }

  // repeated .micromsg.ActionAttr ActionAttrs = 7;
  {
    unsigned int count = this->actionattrs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->actionattrs(i));
    }
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional string LockId = 4;
    if (has_lockid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->lockid());
    }

    // optional string RetMsg = 6;
    if (has_retmsg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->retmsg());
    }

    // optional .micromsg.BaseResponse BaseResponse = 1;
    if (has_baseresponse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->baseresponse_);
    }

    // optional uint32 ExpressCount = 2;
    if (has_expresscount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->expresscount());
    }

    // optional int32 RetCode = 5;
    if (has_retcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->retcode());
    }

    // optional uint32 ActionAttrCount = 8;
    if (has_actionattrcount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->actionattrcount());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PreSubmitOrderResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.PreSubmitOrderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PreSubmitOrderResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PreSubmitOrderResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.PreSubmitOrderResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.PreSubmitOrderResponse)
    MergeFrom(*source);
  }
}

void PreSubmitOrderResponse::MergeFrom(const PreSubmitOrderResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.PreSubmitOrderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  express_.MergeFrom(from.express_);
  actionattrs_.MergeFrom(from.actionattrs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_lockid();
      lockid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lockid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_retmsg();
      retmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retmsg_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000008u) {
      expresscount_ = from.expresscount_;
    }
    if (cached_has_bits & 0x00000010u) {
      retcode_ = from.retcode_;
    }
    if (cached_has_bits & 0x00000020u) {
      actionattrcount_ = from.actionattrcount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PreSubmitOrderResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.PreSubmitOrderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PreSubmitOrderResponse::CopyFrom(const PreSubmitOrderResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.PreSubmitOrderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PreSubmitOrderResponse::IsInitialized() const {
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void PreSubmitOrderResponse::Swap(PreSubmitOrderResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PreSubmitOrderResponse::InternalSwap(PreSubmitOrderResponse* other) {
  express_.InternalSwap(&other->express_);
  actionattrs_.InternalSwap(&other->actionattrs_);
  lockid_.Swap(&other->lockid_);
  retmsg_.Swap(&other->retmsg_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(expresscount_, other->expresscount_);
  std::swap(retcode_, other->retcode_);
  std::swap(actionattrcount_, other->actionattrcount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PreSubmitOrderResponse::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PreSubmitOrderResponse

// optional .micromsg.BaseResponse BaseResponse = 1;
bool PreSubmitOrderResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PreSubmitOrderResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000004u;
}
void PreSubmitOrderResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000004u;
}
void PreSubmitOrderResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& PreSubmitOrderResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.PreSubmitOrderResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* PreSubmitOrderResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.PreSubmitOrderResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* PreSubmitOrderResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.PreSubmitOrderResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void PreSubmitOrderResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.PreSubmitOrderResponse.BaseResponse)
}

// optional uint32 ExpressCount = 2;
bool PreSubmitOrderResponse::has_expresscount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PreSubmitOrderResponse::set_has_expresscount() {
  _has_bits_[0] |= 0x00000008u;
}
void PreSubmitOrderResponse::clear_has_expresscount() {
  _has_bits_[0] &= ~0x00000008u;
}
void PreSubmitOrderResponse::clear_expresscount() {
  expresscount_ = 0u;
  clear_has_expresscount();
}
::google::protobuf::uint32 PreSubmitOrderResponse::expresscount() const {
  // @@protoc_insertion_point(field_get:micromsg.PreSubmitOrderResponse.ExpressCount)
  return expresscount_;
}
void PreSubmitOrderResponse::set_expresscount(::google::protobuf::uint32 value) {
  set_has_expresscount();
  expresscount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.PreSubmitOrderResponse.ExpressCount)
}

// repeated .micromsg.Express Express = 3;
int PreSubmitOrderResponse::express_size() const {
  return express_.size();
}
void PreSubmitOrderResponse::clear_express() {
  express_.Clear();
}
const ::micromsg::Express& PreSubmitOrderResponse::express(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.PreSubmitOrderResponse.Express)
  return express_.Get(index);
}
::micromsg::Express* PreSubmitOrderResponse::mutable_express(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.PreSubmitOrderResponse.Express)
  return express_.Mutable(index);
}
::micromsg::Express* PreSubmitOrderResponse::add_express() {
  // @@protoc_insertion_point(field_add:micromsg.PreSubmitOrderResponse.Express)
  return express_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::Express >*
PreSubmitOrderResponse::mutable_express() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.PreSubmitOrderResponse.Express)
  return &express_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::Express >&
PreSubmitOrderResponse::express() const {
  // @@protoc_insertion_point(field_list:micromsg.PreSubmitOrderResponse.Express)
  return express_;
}

// optional string LockId = 4;
bool PreSubmitOrderResponse::has_lockid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PreSubmitOrderResponse::set_has_lockid() {
  _has_bits_[0] |= 0x00000001u;
}
void PreSubmitOrderResponse::clear_has_lockid() {
  _has_bits_[0] &= ~0x00000001u;
}
void PreSubmitOrderResponse::clear_lockid() {
  lockid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lockid();
}
const ::std::string& PreSubmitOrderResponse::lockid() const {
  // @@protoc_insertion_point(field_get:micromsg.PreSubmitOrderResponse.LockId)
  return lockid_.GetNoArena();
}
void PreSubmitOrderResponse::set_lockid(const ::std::string& value) {
  set_has_lockid();
  lockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.PreSubmitOrderResponse.LockId)
}
#if LANG_CXX11
void PreSubmitOrderResponse::set_lockid(::std::string&& value) {
  set_has_lockid();
  lockid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.PreSubmitOrderResponse.LockId)
}
#endif
void PreSubmitOrderResponse::set_lockid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_lockid();
  lockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.PreSubmitOrderResponse.LockId)
}
void PreSubmitOrderResponse::set_lockid(const char* value, size_t size) {
  set_has_lockid();
  lockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.PreSubmitOrderResponse.LockId)
}
::std::string* PreSubmitOrderResponse::mutable_lockid() {
  set_has_lockid();
  // @@protoc_insertion_point(field_mutable:micromsg.PreSubmitOrderResponse.LockId)
  return lockid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PreSubmitOrderResponse::release_lockid() {
  // @@protoc_insertion_point(field_release:micromsg.PreSubmitOrderResponse.LockId)
  clear_has_lockid();
  return lockid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PreSubmitOrderResponse::set_allocated_lockid(::std::string* lockid) {
  if (lockid != NULL) {
    set_has_lockid();
  } else {
    clear_has_lockid();
  }
  lockid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lockid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.PreSubmitOrderResponse.LockId)
}

// optional int32 RetCode = 5;
bool PreSubmitOrderResponse::has_retcode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PreSubmitOrderResponse::set_has_retcode() {
  _has_bits_[0] |= 0x00000010u;
}
void PreSubmitOrderResponse::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000010u;
}
void PreSubmitOrderResponse::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
::google::protobuf::int32 PreSubmitOrderResponse::retcode() const {
  // @@protoc_insertion_point(field_get:micromsg.PreSubmitOrderResponse.RetCode)
  return retcode_;
}
void PreSubmitOrderResponse::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.PreSubmitOrderResponse.RetCode)
}

// optional string RetMsg = 6;
bool PreSubmitOrderResponse::has_retmsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PreSubmitOrderResponse::set_has_retmsg() {
  _has_bits_[0] |= 0x00000002u;
}
void PreSubmitOrderResponse::clear_has_retmsg() {
  _has_bits_[0] &= ~0x00000002u;
}
void PreSubmitOrderResponse::clear_retmsg() {
  retmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_retmsg();
}
const ::std::string& PreSubmitOrderResponse::retmsg() const {
  // @@protoc_insertion_point(field_get:micromsg.PreSubmitOrderResponse.RetMsg)
  return retmsg_.GetNoArena();
}
void PreSubmitOrderResponse::set_retmsg(const ::std::string& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.PreSubmitOrderResponse.RetMsg)
}
#if LANG_CXX11
void PreSubmitOrderResponse::set_retmsg(::std::string&& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.PreSubmitOrderResponse.RetMsg)
}
#endif
void PreSubmitOrderResponse::set_retmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.PreSubmitOrderResponse.RetMsg)
}
void PreSubmitOrderResponse::set_retmsg(const char* value, size_t size) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.PreSubmitOrderResponse.RetMsg)
}
::std::string* PreSubmitOrderResponse::mutable_retmsg() {
  set_has_retmsg();
  // @@protoc_insertion_point(field_mutable:micromsg.PreSubmitOrderResponse.RetMsg)
  return retmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PreSubmitOrderResponse::release_retmsg() {
  // @@protoc_insertion_point(field_release:micromsg.PreSubmitOrderResponse.RetMsg)
  clear_has_retmsg();
  return retmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PreSubmitOrderResponse::set_allocated_retmsg(::std::string* retmsg) {
  if (retmsg != NULL) {
    set_has_retmsg();
  } else {
    clear_has_retmsg();
  }
  retmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retmsg);
  // @@protoc_insertion_point(field_set_allocated:micromsg.PreSubmitOrderResponse.RetMsg)
}

// repeated .micromsg.ActionAttr ActionAttrs = 7;
int PreSubmitOrderResponse::actionattrs_size() const {
  return actionattrs_.size();
}
void PreSubmitOrderResponse::clear_actionattrs() {
  actionattrs_.Clear();
}
const ::micromsg::ActionAttr& PreSubmitOrderResponse::actionattrs(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.PreSubmitOrderResponse.ActionAttrs)
  return actionattrs_.Get(index);
}
::micromsg::ActionAttr* PreSubmitOrderResponse::mutable_actionattrs(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.PreSubmitOrderResponse.ActionAttrs)
  return actionattrs_.Mutable(index);
}
::micromsg::ActionAttr* PreSubmitOrderResponse::add_actionattrs() {
  // @@protoc_insertion_point(field_add:micromsg.PreSubmitOrderResponse.ActionAttrs)
  return actionattrs_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::ActionAttr >*
PreSubmitOrderResponse::mutable_actionattrs() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.PreSubmitOrderResponse.ActionAttrs)
  return &actionattrs_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::ActionAttr >&
PreSubmitOrderResponse::actionattrs() const {
  // @@protoc_insertion_point(field_list:micromsg.PreSubmitOrderResponse.ActionAttrs)
  return actionattrs_;
}

// optional uint32 ActionAttrCount = 8;
bool PreSubmitOrderResponse::has_actionattrcount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void PreSubmitOrderResponse::set_has_actionattrcount() {
  _has_bits_[0] |= 0x00000020u;
}
void PreSubmitOrderResponse::clear_has_actionattrcount() {
  _has_bits_[0] &= ~0x00000020u;
}
void PreSubmitOrderResponse::clear_actionattrcount() {
  actionattrcount_ = 0u;
  clear_has_actionattrcount();
}
::google::protobuf::uint32 PreSubmitOrderResponse::actionattrcount() const {
  // @@protoc_insertion_point(field_get:micromsg.PreSubmitOrderResponse.ActionAttrCount)
  return actionattrcount_;
}
void PreSubmitOrderResponse::set_actionattrcount(::google::protobuf::uint32 value) {
  set_has_actionattrcount();
  actionattrcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.PreSubmitOrderResponse.ActionAttrCount)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CancelPreOrderRequest::kBaseRequestFieldNumber;
const int CancelPreOrderRequest::kProductCountFieldNumber;
const int CancelPreOrderRequest::kProductFieldNumber;
const int CancelPreOrderRequest::kLockIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CancelPreOrderRequest::CancelPreOrderRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.CancelPreOrderRequest)
}
CancelPreOrderRequest::CancelPreOrderRequest(const CancelPreOrderRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      product_(from.product_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lockid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_lockid()) {
    lockid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lockid_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  productcount_ = from.productcount_;
  // @@protoc_insertion_point(copy_constructor:micromsg.CancelPreOrderRequest)
}

void CancelPreOrderRequest::SharedCtor() {
  _cached_size_ = 0;
  lockid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&productcount_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(productcount_));
}

CancelPreOrderRequest::~CancelPreOrderRequest() {
  // @@protoc_insertion_point(destructor:micromsg.CancelPreOrderRequest)
  SharedDtor();
}

void CancelPreOrderRequest::SharedDtor() {
  lockid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void CancelPreOrderRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CancelPreOrderRequest::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CancelPreOrderRequest& CancelPreOrderRequest::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

CancelPreOrderRequest* CancelPreOrderRequest::New(::google::protobuf::Arena* arena) const {
  CancelPreOrderRequest* n = new CancelPreOrderRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CancelPreOrderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.CancelPreOrderRequest)
  product_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    if (has_lockid()) {
      GOOGLE_DCHECK(!lockid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*lockid_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  productcount_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CancelPreOrderRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.CancelPreOrderRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ProductCount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_productcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &productcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.SampleProduct Product = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_product()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string LockId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lockid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->lockid().data(), this->lockid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.CancelPreOrderRequest.LockId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.CancelPreOrderRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.CancelPreOrderRequest)
  return false;
#undef DO_
}

void CancelPreOrderRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.CancelPreOrderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required uint32 ProductCount = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->productcount(), output);
  }

  // repeated .micromsg.SampleProduct Product = 3;
  for (unsigned int i = 0, n = this->product_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->product(i), output);
  }

  // optional string LockId = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lockid().data(), this->lockid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CancelPreOrderRequest.LockId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->lockid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.CancelPreOrderRequest)
}

::google::protobuf::uint8* CancelPreOrderRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.CancelPreOrderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required uint32 ProductCount = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->productcount(), target);
  }

  // repeated .micromsg.SampleProduct Product = 3;
  for (unsigned int i = 0, n = this->product_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->product(i), deterministic, target);
  }

  // optional string LockId = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lockid().data(), this->lockid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CancelPreOrderRequest.LockId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->lockid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.CancelPreOrderRequest)
  return target;
}

size_t CancelPreOrderRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.CancelPreOrderRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_productcount()) {
    // required uint32 ProductCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->productcount());
  }

  return total_size;
}
size_t CancelPreOrderRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.CancelPreOrderRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required uint32 ProductCount = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->productcount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .micromsg.SampleProduct Product = 3;
  {
    unsigned int count = this->product_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->product(i));
    }
  }

  // optional string LockId = 4;
  if (has_lockid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lockid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CancelPreOrderRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.CancelPreOrderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelPreOrderRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CancelPreOrderRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.CancelPreOrderRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.CancelPreOrderRequest)
    MergeFrom(*source);
  }
}

void CancelPreOrderRequest::MergeFrom(const CancelPreOrderRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.CancelPreOrderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  product_.MergeFrom(from.product_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_lockid();
      lockid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lockid_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000004u) {
      productcount_ = from.productcount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CancelPreOrderRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.CancelPreOrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelPreOrderRequest::CopyFrom(const CancelPreOrderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.CancelPreOrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelPreOrderRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void CancelPreOrderRequest::Swap(CancelPreOrderRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CancelPreOrderRequest::InternalSwap(CancelPreOrderRequest* other) {
  product_.InternalSwap(&other->product_);
  lockid_.Swap(&other->lockid_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(productcount_, other->productcount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CancelPreOrderRequest::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CancelPreOrderRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool CancelPreOrderRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CancelPreOrderRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
void CancelPreOrderRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
void CancelPreOrderRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& CancelPreOrderRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.CancelPreOrderRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* CancelPreOrderRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.CancelPreOrderRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* CancelPreOrderRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.CancelPreOrderRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void CancelPreOrderRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.CancelPreOrderRequest.BaseRequest)
}

// required uint32 ProductCount = 2;
bool CancelPreOrderRequest::has_productcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CancelPreOrderRequest::set_has_productcount() {
  _has_bits_[0] |= 0x00000004u;
}
void CancelPreOrderRequest::clear_has_productcount() {
  _has_bits_[0] &= ~0x00000004u;
}
void CancelPreOrderRequest::clear_productcount() {
  productcount_ = 0u;
  clear_has_productcount();
}
::google::protobuf::uint32 CancelPreOrderRequest::productcount() const {
  // @@protoc_insertion_point(field_get:micromsg.CancelPreOrderRequest.ProductCount)
  return productcount_;
}
void CancelPreOrderRequest::set_productcount(::google::protobuf::uint32 value) {
  set_has_productcount();
  productcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.CancelPreOrderRequest.ProductCount)
}

// repeated .micromsg.SampleProduct Product = 3;
int CancelPreOrderRequest::product_size() const {
  return product_.size();
}
void CancelPreOrderRequest::clear_product() {
  product_.Clear();
}
const ::micromsg::SampleProduct& CancelPreOrderRequest::product(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.CancelPreOrderRequest.Product)
  return product_.Get(index);
}
::micromsg::SampleProduct* CancelPreOrderRequest::mutable_product(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.CancelPreOrderRequest.Product)
  return product_.Mutable(index);
}
::micromsg::SampleProduct* CancelPreOrderRequest::add_product() {
  // @@protoc_insertion_point(field_add:micromsg.CancelPreOrderRequest.Product)
  return product_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::SampleProduct >*
CancelPreOrderRequest::mutable_product() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.CancelPreOrderRequest.Product)
  return &product_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::SampleProduct >&
CancelPreOrderRequest::product() const {
  // @@protoc_insertion_point(field_list:micromsg.CancelPreOrderRequest.Product)
  return product_;
}

// optional string LockId = 4;
bool CancelPreOrderRequest::has_lockid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CancelPreOrderRequest::set_has_lockid() {
  _has_bits_[0] |= 0x00000001u;
}
void CancelPreOrderRequest::clear_has_lockid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CancelPreOrderRequest::clear_lockid() {
  lockid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lockid();
}
const ::std::string& CancelPreOrderRequest::lockid() const {
  // @@protoc_insertion_point(field_get:micromsg.CancelPreOrderRequest.LockId)
  return lockid_.GetNoArena();
}
void CancelPreOrderRequest::set_lockid(const ::std::string& value) {
  set_has_lockid();
  lockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CancelPreOrderRequest.LockId)
}
#if LANG_CXX11
void CancelPreOrderRequest::set_lockid(::std::string&& value) {
  set_has_lockid();
  lockid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CancelPreOrderRequest.LockId)
}
#endif
void CancelPreOrderRequest::set_lockid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_lockid();
  lockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CancelPreOrderRequest.LockId)
}
void CancelPreOrderRequest::set_lockid(const char* value, size_t size) {
  set_has_lockid();
  lockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CancelPreOrderRequest.LockId)
}
::std::string* CancelPreOrderRequest::mutable_lockid() {
  set_has_lockid();
  // @@protoc_insertion_point(field_mutable:micromsg.CancelPreOrderRequest.LockId)
  return lockid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CancelPreOrderRequest::release_lockid() {
  // @@protoc_insertion_point(field_release:micromsg.CancelPreOrderRequest.LockId)
  clear_has_lockid();
  return lockid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CancelPreOrderRequest::set_allocated_lockid(::std::string* lockid) {
  if (lockid != NULL) {
    set_has_lockid();
  } else {
    clear_has_lockid();
  }
  lockid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lockid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CancelPreOrderRequest.LockId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CancelPreOrderResponse::kBaseResponseFieldNumber;
const int CancelPreOrderResponse::kRetCodeFieldNumber;
const int CancelPreOrderResponse::kRetMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CancelPreOrderResponse::CancelPreOrderResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.CancelPreOrderResponse)
}
CancelPreOrderResponse::CancelPreOrderResponse(const CancelPreOrderResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_retmsg()) {
    retmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retmsg_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:micromsg.CancelPreOrderResponse)
}

void CancelPreOrderResponse::SharedCtor() {
  _cached_size_ = 0;
  retmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(retcode_));
}

CancelPreOrderResponse::~CancelPreOrderResponse() {
  // @@protoc_insertion_point(destructor:micromsg.CancelPreOrderResponse)
  SharedDtor();
}

void CancelPreOrderResponse::SharedDtor() {
  retmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void CancelPreOrderResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CancelPreOrderResponse::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CancelPreOrderResponse& CancelPreOrderResponse::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

CancelPreOrderResponse* CancelPreOrderResponse::New(::google::protobuf::Arena* arena) const {
  CancelPreOrderResponse* n = new CancelPreOrderResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CancelPreOrderResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.CancelPreOrderResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_retmsg()) {
      GOOGLE_DCHECK(!retmsg_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*retmsg_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  retcode_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CancelPreOrderResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.CancelPreOrderResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 RetCode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_retcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string RetMsg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retmsg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->retmsg().data(), this->retmsg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.CancelPreOrderResponse.RetMsg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.CancelPreOrderResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.CancelPreOrderResponse)
  return false;
#undef DO_
}

void CancelPreOrderResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.CancelPreOrderResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // optional int32 RetCode = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->retcode(), output);
  }

  // optional string RetMsg = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retmsg().data(), this->retmsg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CancelPreOrderResponse.RetMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->retmsg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.CancelPreOrderResponse)
}

::google::protobuf::uint8* CancelPreOrderResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.CancelPreOrderResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // optional int32 RetCode = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->retcode(), target);
  }

  // optional string RetMsg = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retmsg().data(), this->retmsg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.CancelPreOrderResponse.RetMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->retmsg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.CancelPreOrderResponse)
  return target;
}

size_t CancelPreOrderResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.CancelPreOrderResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (has_baseresponse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }
  // optional string RetMsg = 3;
  if (has_retmsg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->retmsg());
  }

  // optional int32 RetCode = 2;
  if (has_retcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CancelPreOrderResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.CancelPreOrderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelPreOrderResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CancelPreOrderResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.CancelPreOrderResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.CancelPreOrderResponse)
    MergeFrom(*source);
  }
}

void CancelPreOrderResponse::MergeFrom(const CancelPreOrderResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.CancelPreOrderResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_retmsg();
      retmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retmsg_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000004u) {
      retcode_ = from.retcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CancelPreOrderResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.CancelPreOrderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelPreOrderResponse::CopyFrom(const CancelPreOrderResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.CancelPreOrderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelPreOrderResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void CancelPreOrderResponse::Swap(CancelPreOrderResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CancelPreOrderResponse::InternalSwap(CancelPreOrderResponse* other) {
  retmsg_.Swap(&other->retmsg_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(retcode_, other->retcode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CancelPreOrderResponse::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CancelPreOrderResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool CancelPreOrderResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CancelPreOrderResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
void CancelPreOrderResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
void CancelPreOrderResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& CancelPreOrderResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.CancelPreOrderResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* CancelPreOrderResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.CancelPreOrderResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* CancelPreOrderResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.CancelPreOrderResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void CancelPreOrderResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.CancelPreOrderResponse.BaseResponse)
}

// optional int32 RetCode = 2;
bool CancelPreOrderResponse::has_retcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CancelPreOrderResponse::set_has_retcode() {
  _has_bits_[0] |= 0x00000004u;
}
void CancelPreOrderResponse::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000004u;
}
void CancelPreOrderResponse::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
::google::protobuf::int32 CancelPreOrderResponse::retcode() const {
  // @@protoc_insertion_point(field_get:micromsg.CancelPreOrderResponse.RetCode)
  return retcode_;
}
void CancelPreOrderResponse::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.CancelPreOrderResponse.RetCode)
}

// optional string RetMsg = 3;
bool CancelPreOrderResponse::has_retmsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CancelPreOrderResponse::set_has_retmsg() {
  _has_bits_[0] |= 0x00000001u;
}
void CancelPreOrderResponse::clear_has_retmsg() {
  _has_bits_[0] &= ~0x00000001u;
}
void CancelPreOrderResponse::clear_retmsg() {
  retmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_retmsg();
}
const ::std::string& CancelPreOrderResponse::retmsg() const {
  // @@protoc_insertion_point(field_get:micromsg.CancelPreOrderResponse.RetMsg)
  return retmsg_.GetNoArena();
}
void CancelPreOrderResponse::set_retmsg(const ::std::string& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CancelPreOrderResponse.RetMsg)
}
#if LANG_CXX11
void CancelPreOrderResponse::set_retmsg(::std::string&& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CancelPreOrderResponse.RetMsg)
}
#endif
void CancelPreOrderResponse::set_retmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CancelPreOrderResponse.RetMsg)
}
void CancelPreOrderResponse::set_retmsg(const char* value, size_t size) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CancelPreOrderResponse.RetMsg)
}
::std::string* CancelPreOrderResponse::mutable_retmsg() {
  set_has_retmsg();
  // @@protoc_insertion_point(field_mutable:micromsg.CancelPreOrderResponse.RetMsg)
  return retmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CancelPreOrderResponse::release_retmsg() {
  // @@protoc_insertion_point(field_release:micromsg.CancelPreOrderResponse.RetMsg)
  clear_has_retmsg();
  return retmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CancelPreOrderResponse::set_allocated_retmsg(::std::string* retmsg) {
  if (retmsg != NULL) {
    set_has_retmsg();
  } else {
    clear_has_retmsg();
  }
  retmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retmsg);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CancelPreOrderResponse.RetMsg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderDetailControlRequest::kBaseRequestFieldNumber;
const int OrderDetailControlRequest::kActionCodeFieldNumber;
const int OrderDetailControlRequest::kTransIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderDetailControlRequest::OrderDetailControlRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.OrderDetailControlRequest)
}
OrderDetailControlRequest::OrderDetailControlRequest(const OrderDetailControlRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  transid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_transid()) {
    transid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transid_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  actioncode_ = from.actioncode_;
  // @@protoc_insertion_point(copy_constructor:micromsg.OrderDetailControlRequest)
}

void OrderDetailControlRequest::SharedCtor() {
  _cached_size_ = 0;
  transid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&actioncode_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(actioncode_));
}

OrderDetailControlRequest::~OrderDetailControlRequest() {
  // @@protoc_insertion_point(destructor:micromsg.OrderDetailControlRequest)
  SharedDtor();
}

void OrderDetailControlRequest::SharedDtor() {
  transid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void OrderDetailControlRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrderDetailControlRequest::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderDetailControlRequest& OrderDetailControlRequest::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

OrderDetailControlRequest* OrderDetailControlRequest::New(::google::protobuf::Arena* arena) const {
  OrderDetailControlRequest* n = new OrderDetailControlRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OrderDetailControlRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.OrderDetailControlRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_transid()) {
      GOOGLE_DCHECK(!transid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*transid_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  actioncode_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OrderDetailControlRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.OrderDetailControlRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint32 ActionCode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_actioncode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &actioncode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string TransID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->transid().data(), this->transid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.OrderDetailControlRequest.TransID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.OrderDetailControlRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.OrderDetailControlRequest)
  return false;
#undef DO_
}

void OrderDetailControlRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.OrderDetailControlRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // required uint32 ActionCode = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->actioncode(), output);
  }

  // optional string TransID = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transid().data(), this->transid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.OrderDetailControlRequest.TransID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->transid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.OrderDetailControlRequest)
}

::google::protobuf::uint8* OrderDetailControlRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.OrderDetailControlRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // required uint32 ActionCode = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->actioncode(), target);
  }

  // optional string TransID = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->transid().data(), this->transid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.OrderDetailControlRequest.TransID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->transid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.OrderDetailControlRequest)
  return target;
}

size_t OrderDetailControlRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.OrderDetailControlRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_actioncode()) {
    // required uint32 ActionCode = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->actioncode());
  }

  return total_size;
}
size_t OrderDetailControlRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.OrderDetailControlRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000006) ^ 0x00000006) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required uint32 ActionCode = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->actioncode());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string TransID = 3;
  if (has_transid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->transid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrderDetailControlRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.OrderDetailControlRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderDetailControlRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderDetailControlRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.OrderDetailControlRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.OrderDetailControlRequest)
    MergeFrom(*source);
  }
}

void OrderDetailControlRequest::MergeFrom(const OrderDetailControlRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.OrderDetailControlRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_transid();
      transid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transid_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000004u) {
      actioncode_ = from.actioncode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OrderDetailControlRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.OrderDetailControlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderDetailControlRequest::CopyFrom(const OrderDetailControlRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.OrderDetailControlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderDetailControlRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000006) != 0x00000006) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void OrderDetailControlRequest::Swap(OrderDetailControlRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderDetailControlRequest::InternalSwap(OrderDetailControlRequest* other) {
  transid_.Swap(&other->transid_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(actioncode_, other->actioncode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OrderDetailControlRequest::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OrderDetailControlRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool OrderDetailControlRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OrderDetailControlRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
void OrderDetailControlRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
void OrderDetailControlRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& OrderDetailControlRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.OrderDetailControlRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* OrderDetailControlRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.OrderDetailControlRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* OrderDetailControlRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.OrderDetailControlRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void OrderDetailControlRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.OrderDetailControlRequest.BaseRequest)
}

// required uint32 ActionCode = 2;
bool OrderDetailControlRequest::has_actioncode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void OrderDetailControlRequest::set_has_actioncode() {
  _has_bits_[0] |= 0x00000004u;
}
void OrderDetailControlRequest::clear_has_actioncode() {
  _has_bits_[0] &= ~0x00000004u;
}
void OrderDetailControlRequest::clear_actioncode() {
  actioncode_ = 0u;
  clear_has_actioncode();
}
::google::protobuf::uint32 OrderDetailControlRequest::actioncode() const {
  // @@protoc_insertion_point(field_get:micromsg.OrderDetailControlRequest.ActionCode)
  return actioncode_;
}
void OrderDetailControlRequest::set_actioncode(::google::protobuf::uint32 value) {
  set_has_actioncode();
  actioncode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.OrderDetailControlRequest.ActionCode)
}

// optional string TransID = 3;
bool OrderDetailControlRequest::has_transid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OrderDetailControlRequest::set_has_transid() {
  _has_bits_[0] |= 0x00000001u;
}
void OrderDetailControlRequest::clear_has_transid() {
  _has_bits_[0] &= ~0x00000001u;
}
void OrderDetailControlRequest::clear_transid() {
  transid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_transid();
}
const ::std::string& OrderDetailControlRequest::transid() const {
  // @@protoc_insertion_point(field_get:micromsg.OrderDetailControlRequest.TransID)
  return transid_.GetNoArena();
}
void OrderDetailControlRequest::set_transid(const ::std::string& value) {
  set_has_transid();
  transid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.OrderDetailControlRequest.TransID)
}
#if LANG_CXX11
void OrderDetailControlRequest::set_transid(::std::string&& value) {
  set_has_transid();
  transid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.OrderDetailControlRequest.TransID)
}
#endif
void OrderDetailControlRequest::set_transid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_transid();
  transid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.OrderDetailControlRequest.TransID)
}
void OrderDetailControlRequest::set_transid(const char* value, size_t size) {
  set_has_transid();
  transid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.OrderDetailControlRequest.TransID)
}
::std::string* OrderDetailControlRequest::mutable_transid() {
  set_has_transid();
  // @@protoc_insertion_point(field_mutable:micromsg.OrderDetailControlRequest.TransID)
  return transid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderDetailControlRequest::release_transid() {
  // @@protoc_insertion_point(field_release:micromsg.OrderDetailControlRequest.TransID)
  clear_has_transid();
  return transid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderDetailControlRequest::set_allocated_transid(::std::string* transid) {
  if (transid != NULL) {
    set_has_transid();
  } else {
    clear_has_transid();
  }
  transid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), transid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.OrderDetailControlRequest.TransID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderDetailControlResponse::kBaseResponseFieldNumber;
const int OrderDetailControlResponse::kRetCodeFieldNumber;
const int OrderDetailControlResponse::kRetMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderDetailControlResponse::OrderDetailControlResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.OrderDetailControlResponse)
}
OrderDetailControlResponse::OrderDetailControlResponse(const OrderDetailControlResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_retmsg()) {
    retmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retmsg_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:micromsg.OrderDetailControlResponse)
}

void OrderDetailControlResponse::SharedCtor() {
  _cached_size_ = 0;
  retmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(retcode_));
}

OrderDetailControlResponse::~OrderDetailControlResponse() {
  // @@protoc_insertion_point(destructor:micromsg.OrderDetailControlResponse)
  SharedDtor();
}

void OrderDetailControlResponse::SharedDtor() {
  retmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void OrderDetailControlResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrderDetailControlResponse::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderDetailControlResponse& OrderDetailControlResponse::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

OrderDetailControlResponse* OrderDetailControlResponse::New(::google::protobuf::Arena* arena) const {
  OrderDetailControlResponse* n = new OrderDetailControlResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OrderDetailControlResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.OrderDetailControlResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_retmsg()) {
      GOOGLE_DCHECK(!retmsg_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*retmsg_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  retcode_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OrderDetailControlResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.OrderDetailControlResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 RetCode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_retcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string RetMsg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retmsg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->retmsg().data(), this->retmsg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.OrderDetailControlResponse.RetMsg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.OrderDetailControlResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.OrderDetailControlResponse)
  return false;
#undef DO_
}

void OrderDetailControlResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.OrderDetailControlResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // optional int32 RetCode = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->retcode(), output);
  }

  // optional string RetMsg = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retmsg().data(), this->retmsg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.OrderDetailControlResponse.RetMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->retmsg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.OrderDetailControlResponse)
}

::google::protobuf::uint8* OrderDetailControlResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.OrderDetailControlResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // optional int32 RetCode = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->retcode(), target);
  }

  // optional string RetMsg = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retmsg().data(), this->retmsg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.OrderDetailControlResponse.RetMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->retmsg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.OrderDetailControlResponse)
  return target;
}

size_t OrderDetailControlResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.OrderDetailControlResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (has_baseresponse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }
  // optional string RetMsg = 3;
  if (has_retmsg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->retmsg());
  }

  // optional int32 RetCode = 2;
  if (has_retcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrderDetailControlResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.OrderDetailControlResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderDetailControlResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderDetailControlResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.OrderDetailControlResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.OrderDetailControlResponse)
    MergeFrom(*source);
  }
}

void OrderDetailControlResponse::MergeFrom(const OrderDetailControlResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.OrderDetailControlResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_retmsg();
      retmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retmsg_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000004u) {
      retcode_ = from.retcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OrderDetailControlResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.OrderDetailControlResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderDetailControlResponse::CopyFrom(const OrderDetailControlResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.OrderDetailControlResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderDetailControlResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void OrderDetailControlResponse::Swap(OrderDetailControlResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderDetailControlResponse::InternalSwap(OrderDetailControlResponse* other) {
  retmsg_.Swap(&other->retmsg_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(retcode_, other->retcode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OrderDetailControlResponse::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OrderDetailControlResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool OrderDetailControlResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OrderDetailControlResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
void OrderDetailControlResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
void OrderDetailControlResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& OrderDetailControlResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.OrderDetailControlResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* OrderDetailControlResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.OrderDetailControlResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* OrderDetailControlResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.OrderDetailControlResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void OrderDetailControlResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.OrderDetailControlResponse.BaseResponse)
}

// optional int32 RetCode = 2;
bool OrderDetailControlResponse::has_retcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void OrderDetailControlResponse::set_has_retcode() {
  _has_bits_[0] |= 0x00000004u;
}
void OrderDetailControlResponse::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000004u;
}
void OrderDetailControlResponse::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
::google::protobuf::int32 OrderDetailControlResponse::retcode() const {
  // @@protoc_insertion_point(field_get:micromsg.OrderDetailControlResponse.RetCode)
  return retcode_;
}
void OrderDetailControlResponse::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.OrderDetailControlResponse.RetCode)
}

// optional string RetMsg = 3;
bool OrderDetailControlResponse::has_retmsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OrderDetailControlResponse::set_has_retmsg() {
  _has_bits_[0] |= 0x00000001u;
}
void OrderDetailControlResponse::clear_has_retmsg() {
  _has_bits_[0] &= ~0x00000001u;
}
void OrderDetailControlResponse::clear_retmsg() {
  retmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_retmsg();
}
const ::std::string& OrderDetailControlResponse::retmsg() const {
  // @@protoc_insertion_point(field_get:micromsg.OrderDetailControlResponse.RetMsg)
  return retmsg_.GetNoArena();
}
void OrderDetailControlResponse::set_retmsg(const ::std::string& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.OrderDetailControlResponse.RetMsg)
}
#if LANG_CXX11
void OrderDetailControlResponse::set_retmsg(::std::string&& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.OrderDetailControlResponse.RetMsg)
}
#endif
void OrderDetailControlResponse::set_retmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.OrderDetailControlResponse.RetMsg)
}
void OrderDetailControlResponse::set_retmsg(const char* value, size_t size) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.OrderDetailControlResponse.RetMsg)
}
::std::string* OrderDetailControlResponse::mutable_retmsg() {
  set_has_retmsg();
  // @@protoc_insertion_point(field_mutable:micromsg.OrderDetailControlResponse.RetMsg)
  return retmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OrderDetailControlResponse::release_retmsg() {
  // @@protoc_insertion_point(field_release:micromsg.OrderDetailControlResponse.RetMsg)
  clear_has_retmsg();
  return retmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OrderDetailControlResponse::set_allocated_retmsg(::std::string* retmsg) {
  if (retmsg != NULL) {
    set_has_retmsg();
  } else {
    clear_has_retmsg();
  }
  retmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retmsg);
  // @@protoc_insertion_point(field_set_allocated:micromsg.OrderDetailControlResponse.RetMsg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetProductDiscountRequest::kBaseRequestFieldNumber;
const int GetProductDiscountRequest::kLockIdFieldNumber;
const int GetProductDiscountRequest::kUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetProductDiscountRequest::GetProductDiscountRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetProductDiscountRequest)
}
GetProductDiscountRequest::GetProductDiscountRequest(const GetProductDiscountRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  lockid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_lockid()) {
    lockid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lockid_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.GetProductDiscountRequest)
}

void GetProductDiscountRequest::SharedCtor() {
  _cached_size_ = 0;
  lockid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  baserequest_ = NULL;
}

GetProductDiscountRequest::~GetProductDiscountRequest() {
  // @@protoc_insertion_point(destructor:micromsg.GetProductDiscountRequest)
  SharedDtor();
}

void GetProductDiscountRequest::SharedDtor() {
  lockid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void GetProductDiscountRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetProductDiscountRequest::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetProductDiscountRequest& GetProductDiscountRequest::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetProductDiscountRequest* GetProductDiscountRequest::New(::google::protobuf::Arena* arena) const {
  GetProductDiscountRequest* n = new GetProductDiscountRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetProductDiscountRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetProductDiscountRequest)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_lockid()) {
      GOOGLE_DCHECK(!lockid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*lockid_.UnsafeRawStringPointer())->clear();
    }
    if (has_url()) {
      GOOGLE_DCHECK(!url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*url_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetProductDiscountRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetProductDiscountRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string LockId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lockid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->lockid().data(), this->lockid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetProductDiscountRequest.LockId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Url = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetProductDiscountRequest.Url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetProductDiscountRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetProductDiscountRequest)
  return false;
#undef DO_
}

void GetProductDiscountRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetProductDiscountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // optional string LockId = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lockid().data(), this->lockid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetProductDiscountRequest.LockId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->lockid(), output);
  }

  // optional string Url = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetProductDiscountRequest.Url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->url(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetProductDiscountRequest)
}

::google::protobuf::uint8* GetProductDiscountRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetProductDiscountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // optional string LockId = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lockid().data(), this->lockid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetProductDiscountRequest.LockId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->lockid(), target);
  }

  // optional string Url = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetProductDiscountRequest.Url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->url(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetProductDiscountRequest)
  return target;
}

size_t GetProductDiscountRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetProductDiscountRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (has_baserequest()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string LockId = 2;
    if (has_lockid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->lockid());
    }

    // optional string Url = 3;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetProductDiscountRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetProductDiscountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetProductDiscountRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetProductDiscountRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetProductDiscountRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetProductDiscountRequest)
    MergeFrom(*source);
  }
}

void GetProductDiscountRequest::MergeFrom(const GetProductDiscountRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetProductDiscountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_lockid();
      lockid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lockid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
  }
}

void GetProductDiscountRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetProductDiscountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetProductDiscountRequest::CopyFrom(const GetProductDiscountRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetProductDiscountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetProductDiscountRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void GetProductDiscountRequest::Swap(GetProductDiscountRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetProductDiscountRequest::InternalSwap(GetProductDiscountRequest* other) {
  lockid_.Swap(&other->lockid_);
  url_.Swap(&other->url_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetProductDiscountRequest::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetProductDiscountRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool GetProductDiscountRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetProductDiscountRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000004u;
}
void GetProductDiscountRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetProductDiscountRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& GetProductDiscountRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductDiscountRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* GetProductDiscountRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetProductDiscountRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* GetProductDiscountRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetProductDiscountRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void GetProductDiscountRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetProductDiscountRequest.BaseRequest)
}

// optional string LockId = 2;
bool GetProductDiscountRequest::has_lockid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetProductDiscountRequest::set_has_lockid() {
  _has_bits_[0] |= 0x00000001u;
}
void GetProductDiscountRequest::clear_has_lockid() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetProductDiscountRequest::clear_lockid() {
  lockid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lockid();
}
const ::std::string& GetProductDiscountRequest::lockid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductDiscountRequest.LockId)
  return lockid_.GetNoArena();
}
void GetProductDiscountRequest::set_lockid(const ::std::string& value) {
  set_has_lockid();
  lockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetProductDiscountRequest.LockId)
}
#if LANG_CXX11
void GetProductDiscountRequest::set_lockid(::std::string&& value) {
  set_has_lockid();
  lockid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetProductDiscountRequest.LockId)
}
#endif
void GetProductDiscountRequest::set_lockid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_lockid();
  lockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetProductDiscountRequest.LockId)
}
void GetProductDiscountRequest::set_lockid(const char* value, size_t size) {
  set_has_lockid();
  lockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetProductDiscountRequest.LockId)
}
::std::string* GetProductDiscountRequest::mutable_lockid() {
  set_has_lockid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetProductDiscountRequest.LockId)
  return lockid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetProductDiscountRequest::release_lockid() {
  // @@protoc_insertion_point(field_release:micromsg.GetProductDiscountRequest.LockId)
  clear_has_lockid();
  return lockid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetProductDiscountRequest::set_allocated_lockid(::std::string* lockid) {
  if (lockid != NULL) {
    set_has_lockid();
  } else {
    clear_has_lockid();
  }
  lockid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lockid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetProductDiscountRequest.LockId)
}

// optional string Url = 3;
bool GetProductDiscountRequest::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetProductDiscountRequest::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
void GetProductDiscountRequest::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetProductDiscountRequest::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
const ::std::string& GetProductDiscountRequest::url() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductDiscountRequest.Url)
  return url_.GetNoArena();
}
void GetProductDiscountRequest::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetProductDiscountRequest.Url)
}
#if LANG_CXX11
void GetProductDiscountRequest::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetProductDiscountRequest.Url)
}
#endif
void GetProductDiscountRequest::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetProductDiscountRequest.Url)
}
void GetProductDiscountRequest::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetProductDiscountRequest.Url)
}
::std::string* GetProductDiscountRequest::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:micromsg.GetProductDiscountRequest.Url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetProductDiscountRequest::release_url() {
  // @@protoc_insertion_point(field_release:micromsg.GetProductDiscountRequest.Url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetProductDiscountRequest::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetProductDiscountRequest.Url)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetProductDiscountResponse::kBaseResponseFieldNumber;
const int GetProductDiscountResponse::kDiscountDetailFieldNumber;
const int GetProductDiscountResponse::kRetCodeFieldNumber;
const int GetProductDiscountResponse::kRetMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetProductDiscountResponse::GetProductDiscountResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetProductDiscountResponse)
}
GetProductDiscountResponse::GetProductDiscountResponse(const GetProductDiscountResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  discountdetail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_discountdetail()) {
    discountdetail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.discountdetail_);
  }
  retmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_retmsg()) {
    retmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retmsg_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:micromsg.GetProductDiscountResponse)
}

void GetProductDiscountResponse::SharedCtor() {
  _cached_size_ = 0;
  discountdetail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(retcode_));
}

GetProductDiscountResponse::~GetProductDiscountResponse() {
  // @@protoc_insertion_point(destructor:micromsg.GetProductDiscountResponse)
  SharedDtor();
}

void GetProductDiscountResponse::SharedDtor() {
  discountdetail_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void GetProductDiscountResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetProductDiscountResponse::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetProductDiscountResponse& GetProductDiscountResponse::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetProductDiscountResponse* GetProductDiscountResponse::New(::google::protobuf::Arena* arena) const {
  GetProductDiscountResponse* n = new GetProductDiscountResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetProductDiscountResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetProductDiscountResponse)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_discountdetail()) {
      GOOGLE_DCHECK(!discountdetail_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*discountdetail_.UnsafeRawStringPointer())->clear();
    }
    if (has_retmsg()) {
      GOOGLE_DCHECK(!retmsg_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*retmsg_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  retcode_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetProductDiscountResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetProductDiscountResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string DiscountDetail = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_discountdetail()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->discountdetail().data(), this->discountdetail().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetProductDiscountResponse.DiscountDetail");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 RetCode = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_retcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string RetMsg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retmsg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->retmsg().data(), this->retmsg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetProductDiscountResponse.RetMsg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetProductDiscountResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetProductDiscountResponse)
  return false;
#undef DO_
}

void GetProductDiscountResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetProductDiscountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // optional string DiscountDetail = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->discountdetail().data(), this->discountdetail().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetProductDiscountResponse.DiscountDetail");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->discountdetail(), output);
  }

  // optional int32 RetCode = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->retcode(), output);
  }

  // optional string RetMsg = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retmsg().data(), this->retmsg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetProductDiscountResponse.RetMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->retmsg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetProductDiscountResponse)
}

::google::protobuf::uint8* GetProductDiscountResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetProductDiscountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // optional string DiscountDetail = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->discountdetail().data(), this->discountdetail().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetProductDiscountResponse.DiscountDetail");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->discountdetail(), target);
  }

  // optional int32 RetCode = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->retcode(), target);
  }

  // optional string RetMsg = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retmsg().data(), this->retmsg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetProductDiscountResponse.RetMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->retmsg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetProductDiscountResponse)
  return target;
}

size_t GetProductDiscountResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetProductDiscountResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (has_baseresponse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string DiscountDetail = 2;
    if (has_discountdetail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->discountdetail());
    }

    // optional string RetMsg = 4;
    if (has_retmsg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->retmsg());
    }

  }
  // optional int32 RetCode = 3;
  if (has_retcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetProductDiscountResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetProductDiscountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetProductDiscountResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetProductDiscountResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetProductDiscountResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetProductDiscountResponse)
    MergeFrom(*source);
  }
}

void GetProductDiscountResponse::MergeFrom(const GetProductDiscountResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetProductDiscountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_discountdetail();
      discountdetail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.discountdetail_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_retmsg();
      retmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retmsg_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000008u) {
      retcode_ = from.retcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetProductDiscountResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetProductDiscountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetProductDiscountResponse::CopyFrom(const GetProductDiscountResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetProductDiscountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetProductDiscountResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void GetProductDiscountResponse::Swap(GetProductDiscountResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetProductDiscountResponse::InternalSwap(GetProductDiscountResponse* other) {
  discountdetail_.Swap(&other->discountdetail_);
  retmsg_.Swap(&other->retmsg_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(retcode_, other->retcode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetProductDiscountResponse::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetProductDiscountResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool GetProductDiscountResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetProductDiscountResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000004u;
}
void GetProductDiscountResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetProductDiscountResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& GetProductDiscountResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductDiscountResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* GetProductDiscountResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetProductDiscountResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* GetProductDiscountResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetProductDiscountResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void GetProductDiscountResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetProductDiscountResponse.BaseResponse)
}

// optional string DiscountDetail = 2;
bool GetProductDiscountResponse::has_discountdetail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetProductDiscountResponse::set_has_discountdetail() {
  _has_bits_[0] |= 0x00000001u;
}
void GetProductDiscountResponse::clear_has_discountdetail() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetProductDiscountResponse::clear_discountdetail() {
  discountdetail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_discountdetail();
}
const ::std::string& GetProductDiscountResponse::discountdetail() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductDiscountResponse.DiscountDetail)
  return discountdetail_.GetNoArena();
}
void GetProductDiscountResponse::set_discountdetail(const ::std::string& value) {
  set_has_discountdetail();
  discountdetail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetProductDiscountResponse.DiscountDetail)
}
#if LANG_CXX11
void GetProductDiscountResponse::set_discountdetail(::std::string&& value) {
  set_has_discountdetail();
  discountdetail_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetProductDiscountResponse.DiscountDetail)
}
#endif
void GetProductDiscountResponse::set_discountdetail(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_discountdetail();
  discountdetail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetProductDiscountResponse.DiscountDetail)
}
void GetProductDiscountResponse::set_discountdetail(const char* value, size_t size) {
  set_has_discountdetail();
  discountdetail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetProductDiscountResponse.DiscountDetail)
}
::std::string* GetProductDiscountResponse::mutable_discountdetail() {
  set_has_discountdetail();
  // @@protoc_insertion_point(field_mutable:micromsg.GetProductDiscountResponse.DiscountDetail)
  return discountdetail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetProductDiscountResponse::release_discountdetail() {
  // @@protoc_insertion_point(field_release:micromsg.GetProductDiscountResponse.DiscountDetail)
  clear_has_discountdetail();
  return discountdetail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetProductDiscountResponse::set_allocated_discountdetail(::std::string* discountdetail) {
  if (discountdetail != NULL) {
    set_has_discountdetail();
  } else {
    clear_has_discountdetail();
  }
  discountdetail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), discountdetail);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetProductDiscountResponse.DiscountDetail)
}

// optional int32 RetCode = 3;
bool GetProductDiscountResponse::has_retcode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GetProductDiscountResponse::set_has_retcode() {
  _has_bits_[0] |= 0x00000008u;
}
void GetProductDiscountResponse::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000008u;
}
void GetProductDiscountResponse::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
::google::protobuf::int32 GetProductDiscountResponse::retcode() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductDiscountResponse.RetCode)
  return retcode_;
}
void GetProductDiscountResponse::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetProductDiscountResponse.RetCode)
}

// optional string RetMsg = 4;
bool GetProductDiscountResponse::has_retmsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetProductDiscountResponse::set_has_retmsg() {
  _has_bits_[0] |= 0x00000002u;
}
void GetProductDiscountResponse::clear_has_retmsg() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetProductDiscountResponse::clear_retmsg() {
  retmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_retmsg();
}
const ::std::string& GetProductDiscountResponse::retmsg() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductDiscountResponse.RetMsg)
  return retmsg_.GetNoArena();
}
void GetProductDiscountResponse::set_retmsg(const ::std::string& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetProductDiscountResponse.RetMsg)
}
#if LANG_CXX11
void GetProductDiscountResponse::set_retmsg(::std::string&& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetProductDiscountResponse.RetMsg)
}
#endif
void GetProductDiscountResponse::set_retmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetProductDiscountResponse.RetMsg)
}
void GetProductDiscountResponse::set_retmsg(const char* value, size_t size) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetProductDiscountResponse.RetMsg)
}
::std::string* GetProductDiscountResponse::mutable_retmsg() {
  set_has_retmsg();
  // @@protoc_insertion_point(field_mutable:micromsg.GetProductDiscountResponse.RetMsg)
  return retmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetProductDiscountResponse::release_retmsg() {
  // @@protoc_insertion_point(field_release:micromsg.GetProductDiscountResponse.RetMsg)
  clear_has_retmsg();
  return retmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetProductDiscountResponse::set_allocated_retmsg(::std::string* retmsg) {
  if (retmsg != NULL) {
    set_has_retmsg();
  } else {
    clear_has_retmsg();
  }
  retmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retmsg);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetProductDiscountResponse.RetMsg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetLastestExpressInfoRequest::kBaseRequestFieldNumber;
const int GetLastestExpressInfoRequest::kProductIdFieldNumber;
const int GetLastestExpressInfoRequest::kLockIdFieldNumber;
const int GetLastestExpressInfoRequest::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetLastestExpressInfoRequest::GetLastestExpressInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetLastestExpressInfoRequest)
}
GetLastestExpressInfoRequest::GetLastestExpressInfoRequest(const GetLastestExpressInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  productid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_productid()) {
    productid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productid_);
  }
  lockid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_lockid()) {
    lockid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lockid_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  if (from.has_address()) {
    address_ = new ::micromsg::Address(*from.address_);
  } else {
    address_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:micromsg.GetLastestExpressInfoRequest)
}

void GetLastestExpressInfoRequest::SharedCtor() {
  _cached_size_ = 0;
  productid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lockid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&address_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(address_));
}

GetLastestExpressInfoRequest::~GetLastestExpressInfoRequest() {
  // @@protoc_insertion_point(destructor:micromsg.GetLastestExpressInfoRequest)
  SharedDtor();
}

void GetLastestExpressInfoRequest::SharedDtor() {
  productid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lockid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
  if (this != internal_default_instance()) {
    delete address_;
  }
}

void GetLastestExpressInfoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLastestExpressInfoRequest::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetLastestExpressInfoRequest& GetLastestExpressInfoRequest::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetLastestExpressInfoRequest* GetLastestExpressInfoRequest::New(::google::protobuf::Arena* arena) const {
  GetLastestExpressInfoRequest* n = new GetLastestExpressInfoRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetLastestExpressInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetLastestExpressInfoRequest)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_productid()) {
      GOOGLE_DCHECK(!productid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*productid_.UnsafeRawStringPointer())->clear();
    }
    if (has_lockid()) {
      GOOGLE_DCHECK(!lockid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*lockid_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
    if (has_address()) {
      GOOGLE_DCHECK(address_ != NULL);
      address_->::micromsg::Address::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetLastestExpressInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetLastestExpressInfoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ProductId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_productid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->productid().data(), this->productid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetLastestExpressInfoRequest.ProductId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string LockId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lockid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->lockid().data(), this->lockid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetLastestExpressInfoRequest.LockId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .micromsg.Address Address = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetLastestExpressInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetLastestExpressInfoRequest)
  return false;
#undef DO_
}

void GetLastestExpressInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetLastestExpressInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // optional string ProductId = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->productid().data(), this->productid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetLastestExpressInfoRequest.ProductId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->productid(), output);
  }

  // optional string LockId = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lockid().data(), this->lockid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetLastestExpressInfoRequest.LockId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->lockid(), output);
  }

  // required .micromsg.Address Address = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->address_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetLastestExpressInfoRequest)
}

::google::protobuf::uint8* GetLastestExpressInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetLastestExpressInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // optional string ProductId = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->productid().data(), this->productid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetLastestExpressInfoRequest.ProductId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->productid(), target);
  }

  // optional string LockId = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lockid().data(), this->lockid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetLastestExpressInfoRequest.LockId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->lockid(), target);
  }

  // required .micromsg.Address Address = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->address_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetLastestExpressInfoRequest)
  return target;
}

size_t GetLastestExpressInfoRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:micromsg.GetLastestExpressInfoRequest)
  size_t total_size = 0;

  if (has_baserequest()) {
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }

  if (has_address()) {
    // required .micromsg.Address Address = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->address_);
  }

  return total_size;
}
size_t GetLastestExpressInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetLastestExpressInfoRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000c) ^ 0x0000000c) == 0) {  // All required fields are present.
    // required .micromsg.BaseRequest BaseRequest = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);

    // required .micromsg.Address Address = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->address_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string ProductId = 2;
    if (has_productid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->productid());
    }

    // optional string LockId = 3;
    if (has_lockid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->lockid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetLastestExpressInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetLastestExpressInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLastestExpressInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetLastestExpressInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetLastestExpressInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetLastestExpressInfoRequest)
    MergeFrom(*source);
  }
}

void GetLastestExpressInfoRequest::MergeFrom(const GetLastestExpressInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetLastestExpressInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_productid();
      productid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.productid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_lockid();
      lockid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lockid_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_address()->::micromsg::Address::MergeFrom(from.address());
    }
  }
}

void GetLastestExpressInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetLastestExpressInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLastestExpressInfoRequest::CopyFrom(const GetLastestExpressInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetLastestExpressInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLastestExpressInfoRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void GetLastestExpressInfoRequest::Swap(GetLastestExpressInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetLastestExpressInfoRequest::InternalSwap(GetLastestExpressInfoRequest* other) {
  productid_.Swap(&other->productid_);
  lockid_.Swap(&other->lockid_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(address_, other->address_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetLastestExpressInfoRequest::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetLastestExpressInfoRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool GetLastestExpressInfoRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetLastestExpressInfoRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000004u;
}
void GetLastestExpressInfoRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetLastestExpressInfoRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& GetLastestExpressInfoRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLastestExpressInfoRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* GetLastestExpressInfoRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetLastestExpressInfoRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* GetLastestExpressInfoRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetLastestExpressInfoRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void GetLastestExpressInfoRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLastestExpressInfoRequest.BaseRequest)
}

// optional string ProductId = 2;
bool GetLastestExpressInfoRequest::has_productid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetLastestExpressInfoRequest::set_has_productid() {
  _has_bits_[0] |= 0x00000001u;
}
void GetLastestExpressInfoRequest::clear_has_productid() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetLastestExpressInfoRequest::clear_productid() {
  productid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_productid();
}
const ::std::string& GetLastestExpressInfoRequest::productid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLastestExpressInfoRequest.ProductId)
  return productid_.GetNoArena();
}
void GetLastestExpressInfoRequest::set_productid(const ::std::string& value) {
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetLastestExpressInfoRequest.ProductId)
}
#if LANG_CXX11
void GetLastestExpressInfoRequest::set_productid(::std::string&& value) {
  set_has_productid();
  productid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetLastestExpressInfoRequest.ProductId)
}
#endif
void GetLastestExpressInfoRequest::set_productid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetLastestExpressInfoRequest.ProductId)
}
void GetLastestExpressInfoRequest::set_productid(const char* value, size_t size) {
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetLastestExpressInfoRequest.ProductId)
}
::std::string* GetLastestExpressInfoRequest::mutable_productid() {
  set_has_productid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetLastestExpressInfoRequest.ProductId)
  return productid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetLastestExpressInfoRequest::release_productid() {
  // @@protoc_insertion_point(field_release:micromsg.GetLastestExpressInfoRequest.ProductId)
  clear_has_productid();
  return productid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetLastestExpressInfoRequest::set_allocated_productid(::std::string* productid) {
  if (productid != NULL) {
    set_has_productid();
  } else {
    clear_has_productid();
  }
  productid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLastestExpressInfoRequest.ProductId)
}

// optional string LockId = 3;
bool GetLastestExpressInfoRequest::has_lockid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetLastestExpressInfoRequest::set_has_lockid() {
  _has_bits_[0] |= 0x00000002u;
}
void GetLastestExpressInfoRequest::clear_has_lockid() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetLastestExpressInfoRequest::clear_lockid() {
  lockid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lockid();
}
const ::std::string& GetLastestExpressInfoRequest::lockid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLastestExpressInfoRequest.LockId)
  return lockid_.GetNoArena();
}
void GetLastestExpressInfoRequest::set_lockid(const ::std::string& value) {
  set_has_lockid();
  lockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetLastestExpressInfoRequest.LockId)
}
#if LANG_CXX11
void GetLastestExpressInfoRequest::set_lockid(::std::string&& value) {
  set_has_lockid();
  lockid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetLastestExpressInfoRequest.LockId)
}
#endif
void GetLastestExpressInfoRequest::set_lockid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_lockid();
  lockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetLastestExpressInfoRequest.LockId)
}
void GetLastestExpressInfoRequest::set_lockid(const char* value, size_t size) {
  set_has_lockid();
  lockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetLastestExpressInfoRequest.LockId)
}
::std::string* GetLastestExpressInfoRequest::mutable_lockid() {
  set_has_lockid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetLastestExpressInfoRequest.LockId)
  return lockid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetLastestExpressInfoRequest::release_lockid() {
  // @@protoc_insertion_point(field_release:micromsg.GetLastestExpressInfoRequest.LockId)
  clear_has_lockid();
  return lockid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetLastestExpressInfoRequest::set_allocated_lockid(::std::string* lockid) {
  if (lockid != NULL) {
    set_has_lockid();
  } else {
    clear_has_lockid();
  }
  lockid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lockid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLastestExpressInfoRequest.LockId)
}

// required .micromsg.Address Address = 4;
bool GetLastestExpressInfoRequest::has_address() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GetLastestExpressInfoRequest::set_has_address() {
  _has_bits_[0] |= 0x00000008u;
}
void GetLastestExpressInfoRequest::clear_has_address() {
  _has_bits_[0] &= ~0x00000008u;
}
void GetLastestExpressInfoRequest::clear_address() {
  if (address_ != NULL) address_->::micromsg::Address::Clear();
  clear_has_address();
}
const ::micromsg::Address& GetLastestExpressInfoRequest::address() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLastestExpressInfoRequest.Address)
  return address_ != NULL ? *address_
                         : *::micromsg::Address::internal_default_instance();
}
::micromsg::Address* GetLastestExpressInfoRequest::mutable_address() {
  set_has_address();
  if (address_ == NULL) {
    address_ = new ::micromsg::Address;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetLastestExpressInfoRequest.Address)
  return address_;
}
::micromsg::Address* GetLastestExpressInfoRequest::release_address() {
  // @@protoc_insertion_point(field_release:micromsg.GetLastestExpressInfoRequest.Address)
  clear_has_address();
  ::micromsg::Address* temp = address_;
  address_ = NULL;
  return temp;
}
void GetLastestExpressInfoRequest::set_allocated_address(::micromsg::Address* address) {
  delete address_;
  address_ = address;
  if (address) {
    set_has_address();
  } else {
    clear_has_address();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLastestExpressInfoRequest.Address)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetLastestExpressInfoResponse::kBaseResponseFieldNumber;
const int GetLastestExpressInfoResponse::kExpressListFieldNumber;
const int GetLastestExpressInfoResponse::kExpressCountFieldNumber;
const int GetLastestExpressInfoResponse::kRetCodeFieldNumber;
const int GetLastestExpressInfoResponse::kRetMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetLastestExpressInfoResponse::GetLastestExpressInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.GetLastestExpressInfoResponse)
}
GetLastestExpressInfoResponse::GetLastestExpressInfoResponse(const GetLastestExpressInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      expresslist_(from.expresslist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_retmsg()) {
    retmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retmsg_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  ::memcpy(&expresscount_, &from.expresscount_,
    reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&expresscount_) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:micromsg.GetLastestExpressInfoResponse)
}

void GetLastestExpressInfoResponse::SharedCtor() {
  _cached_size_ = 0;
  retmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(retcode_));
}

GetLastestExpressInfoResponse::~GetLastestExpressInfoResponse() {
  // @@protoc_insertion_point(destructor:micromsg.GetLastestExpressInfoResponse)
  SharedDtor();
}

void GetLastestExpressInfoResponse::SharedDtor() {
  retmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void GetLastestExpressInfoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetLastestExpressInfoResponse::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetLastestExpressInfoResponse& GetLastestExpressInfoResponse::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetLastestExpressInfoResponse* GetLastestExpressInfoResponse::New(::google::protobuf::Arena* arena) const {
  GetLastestExpressInfoResponse* n = new GetLastestExpressInfoResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetLastestExpressInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.GetLastestExpressInfoResponse)
  expresslist_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    if (has_retmsg()) {
      GOOGLE_DCHECK(!retmsg_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*retmsg_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 12u) {
    ::memset(&expresscount_, 0, reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&expresscount_) + sizeof(retcode_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetLastestExpressInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.GetLastestExpressInfoResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .micromsg.Express ExpressList = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_expresslist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ExpressCount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_expresscount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &expresscount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 RetCode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_retcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string RetMsg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_retmsg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->retmsg().data(), this->retmsg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.GetLastestExpressInfoResponse.RetMsg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.GetLastestExpressInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.GetLastestExpressInfoResponse)
  return false;
#undef DO_
}

void GetLastestExpressInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.GetLastestExpressInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // repeated .micromsg.Express ExpressList = 2;
  for (unsigned int i = 0, n = this->expresslist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->expresslist(i), output);
  }

  // optional uint32 ExpressCount = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->expresscount(), output);
  }

  // optional int32 RetCode = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->retcode(), output);
  }

  // optional string RetMsg = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retmsg().data(), this->retmsg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetLastestExpressInfoResponse.RetMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->retmsg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.GetLastestExpressInfoResponse)
}

::google::protobuf::uint8* GetLastestExpressInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.GetLastestExpressInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // repeated .micromsg.Express ExpressList = 2;
  for (unsigned int i = 0, n = this->expresslist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->expresslist(i), deterministic, target);
  }

  // optional uint32 ExpressCount = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->expresscount(), target);
  }

  // optional int32 RetCode = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->retcode(), target);
  }

  // optional string RetMsg = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->retmsg().data(), this->retmsg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.GetLastestExpressInfoResponse.RetMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->retmsg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.GetLastestExpressInfoResponse)
  return target;
}

size_t GetLastestExpressInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.GetLastestExpressInfoResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (has_baseresponse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }
  // repeated .micromsg.Express ExpressList = 2;
  {
    unsigned int count = this->expresslist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->expresslist(i));
    }
  }

  // optional string RetMsg = 5;
  if (has_retmsg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->retmsg());
  }

  if (_has_bits_[0 / 32] & 12u) {
    // optional uint32 ExpressCount = 3;
    if (has_expresscount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->expresscount());
    }

    // optional int32 RetCode = 4;
    if (has_retcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->retcode());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetLastestExpressInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.GetLastestExpressInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetLastestExpressInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetLastestExpressInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.GetLastestExpressInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.GetLastestExpressInfoResponse)
    MergeFrom(*source);
  }
}

void GetLastestExpressInfoResponse::MergeFrom(const GetLastestExpressInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.GetLastestExpressInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  expresslist_.MergeFrom(from.expresslist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_retmsg();
      retmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.retmsg_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000004u) {
      expresscount_ = from.expresscount_;
    }
    if (cached_has_bits & 0x00000008u) {
      retcode_ = from.retcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetLastestExpressInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.GetLastestExpressInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetLastestExpressInfoResponse::CopyFrom(const GetLastestExpressInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.GetLastestExpressInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetLastestExpressInfoResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void GetLastestExpressInfoResponse::Swap(GetLastestExpressInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetLastestExpressInfoResponse::InternalSwap(GetLastestExpressInfoResponse* other) {
  expresslist_.InternalSwap(&other->expresslist_);
  retmsg_.Swap(&other->retmsg_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(expresscount_, other->expresscount_);
  std::swap(retcode_, other->retcode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetLastestExpressInfoResponse::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetLastestExpressInfoResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool GetLastestExpressInfoResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GetLastestExpressInfoResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
void GetLastestExpressInfoResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
void GetLastestExpressInfoResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& GetLastestExpressInfoResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLastestExpressInfoResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* GetLastestExpressInfoResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetLastestExpressInfoResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* GetLastestExpressInfoResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetLastestExpressInfoResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void GetLastestExpressInfoResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLastestExpressInfoResponse.BaseResponse)
}

// repeated .micromsg.Express ExpressList = 2;
int GetLastestExpressInfoResponse::expresslist_size() const {
  return expresslist_.size();
}
void GetLastestExpressInfoResponse::clear_expresslist() {
  expresslist_.Clear();
}
const ::micromsg::Express& GetLastestExpressInfoResponse::expresslist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetLastestExpressInfoResponse.ExpressList)
  return expresslist_.Get(index);
}
::micromsg::Express* GetLastestExpressInfoResponse::mutable_expresslist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetLastestExpressInfoResponse.ExpressList)
  return expresslist_.Mutable(index);
}
::micromsg::Express* GetLastestExpressInfoResponse::add_expresslist() {
  // @@protoc_insertion_point(field_add:micromsg.GetLastestExpressInfoResponse.ExpressList)
  return expresslist_.Add();
}
::google::protobuf::RepeatedPtrField< ::micromsg::Express >*
GetLastestExpressInfoResponse::mutable_expresslist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetLastestExpressInfoResponse.ExpressList)
  return &expresslist_;
}
const ::google::protobuf::RepeatedPtrField< ::micromsg::Express >&
GetLastestExpressInfoResponse::expresslist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetLastestExpressInfoResponse.ExpressList)
  return expresslist_;
}

// optional uint32 ExpressCount = 3;
bool GetLastestExpressInfoResponse::has_expresscount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GetLastestExpressInfoResponse::set_has_expresscount() {
  _has_bits_[0] |= 0x00000004u;
}
void GetLastestExpressInfoResponse::clear_has_expresscount() {
  _has_bits_[0] &= ~0x00000004u;
}
void GetLastestExpressInfoResponse::clear_expresscount() {
  expresscount_ = 0u;
  clear_has_expresscount();
}
::google::protobuf::uint32 GetLastestExpressInfoResponse::expresscount() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLastestExpressInfoResponse.ExpressCount)
  return expresscount_;
}
void GetLastestExpressInfoResponse::set_expresscount(::google::protobuf::uint32 value) {
  set_has_expresscount();
  expresscount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetLastestExpressInfoResponse.ExpressCount)
}

// optional int32 RetCode = 4;
bool GetLastestExpressInfoResponse::has_retcode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GetLastestExpressInfoResponse::set_has_retcode() {
  _has_bits_[0] |= 0x00000008u;
}
void GetLastestExpressInfoResponse::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000008u;
}
void GetLastestExpressInfoResponse::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
::google::protobuf::int32 GetLastestExpressInfoResponse::retcode() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLastestExpressInfoResponse.RetCode)
  return retcode_;
}
void GetLastestExpressInfoResponse::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetLastestExpressInfoResponse.RetCode)
}

// optional string RetMsg = 5;
bool GetLastestExpressInfoResponse::has_retmsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GetLastestExpressInfoResponse::set_has_retmsg() {
  _has_bits_[0] |= 0x00000001u;
}
void GetLastestExpressInfoResponse::clear_has_retmsg() {
  _has_bits_[0] &= ~0x00000001u;
}
void GetLastestExpressInfoResponse::clear_retmsg() {
  retmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_retmsg();
}
const ::std::string& GetLastestExpressInfoResponse::retmsg() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLastestExpressInfoResponse.RetMsg)
  return retmsg_.GetNoArena();
}
void GetLastestExpressInfoResponse::set_retmsg(const ::std::string& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetLastestExpressInfoResponse.RetMsg)
}
#if LANG_CXX11
void GetLastestExpressInfoResponse::set_retmsg(::std::string&& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetLastestExpressInfoResponse.RetMsg)
}
#endif
void GetLastestExpressInfoResponse::set_retmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetLastestExpressInfoResponse.RetMsg)
}
void GetLastestExpressInfoResponse::set_retmsg(const char* value, size_t size) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetLastestExpressInfoResponse.RetMsg)
}
::std::string* GetLastestExpressInfoResponse::mutable_retmsg() {
  set_has_retmsg();
  // @@protoc_insertion_point(field_mutable:micromsg.GetLastestExpressInfoResponse.RetMsg)
  return retmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetLastestExpressInfoResponse::release_retmsg() {
  // @@protoc_insertion_point(field_release:micromsg.GetLastestExpressInfoResponse.RetMsg)
  clear_has_retmsg();
  return retmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetLastestExpressInfoResponse::set_allocated_retmsg(::std::string* retmsg) {
  if (retmsg != NULL) {
    set_has_retmsg();
  } else {
    clear_has_retmsg();
  }
  retmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retmsg);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLastestExpressInfoResponse.RetMsg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendC2CSecMsgRequest::kBaseRequestFieldNumber;
const int SendC2CSecMsgRequest::kToUserFieldNumber;
const int SendC2CSecMsgRequest::kMsgTypeFieldNumber;
const int SendC2CSecMsgRequest::kTempIdFieldNumber;
const int SendC2CSecMsgRequest::kTitleFieldNumber;
const int SendC2CSecMsgRequest::kDesFieldNumber;
const int SendC2CSecMsgRequest::kUrlFieldNumber;
const int SendC2CSecMsgRequest::kSceneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendC2CSecMsgRequest::SendC2CSecMsgRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.SendC2CSecMsgRequest)
}
SendC2CSecMsgRequest::SendC2CSecMsgRequest(const SendC2CSecMsgRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  touser_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_touser()) {
    touser_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.touser_);
  }
  tempid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tempid()) {
    tempid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tempid_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  des_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_des()) {
    des_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.des_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.has_baserequest()) {
    baserequest_ = new ::micromsg::BaseRequest(*from.baserequest_);
  } else {
    baserequest_ = NULL;
  }
  ::memcpy(&msgtype_, &from.msgtype_,
    reinterpret_cast<char*>(&scene_) -
    reinterpret_cast<char*>(&msgtype_) + sizeof(scene_));
  // @@protoc_insertion_point(copy_constructor:micromsg.SendC2CSecMsgRequest)
}

void SendC2CSecMsgRequest::SharedCtor() {
  _cached_size_ = 0;
  touser_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tempid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  des_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baserequest_, 0, reinterpret_cast<char*>(&scene_) -
    reinterpret_cast<char*>(&baserequest_) + sizeof(scene_));
}

SendC2CSecMsgRequest::~SendC2CSecMsgRequest() {
  // @@protoc_insertion_point(destructor:micromsg.SendC2CSecMsgRequest)
  SharedDtor();
}

void SendC2CSecMsgRequest::SharedDtor() {
  touser_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tempid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  des_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baserequest_;
  }
}

void SendC2CSecMsgRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendC2CSecMsgRequest::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendC2CSecMsgRequest& SendC2CSecMsgRequest::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

SendC2CSecMsgRequest* SendC2CSecMsgRequest::New(::google::protobuf::Arena* arena) const {
  SendC2CSecMsgRequest* n = new SendC2CSecMsgRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendC2CSecMsgRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.SendC2CSecMsgRequest)
  if (_has_bits_[0 / 32] & 63u) {
    if (has_touser()) {
      GOOGLE_DCHECK(!touser_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*touser_.UnsafeRawStringPointer())->clear();
    }
    if (has_tempid()) {
      GOOGLE_DCHECK(!tempid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*tempid_.UnsafeRawStringPointer())->clear();
    }
    if (has_title()) {
      GOOGLE_DCHECK(!title_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*title_.UnsafeRawStringPointer())->clear();
    }
    if (has_des()) {
      GOOGLE_DCHECK(!des_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*des_.UnsafeRawStringPointer())->clear();
    }
    if (has_url()) {
      GOOGLE_DCHECK(!url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*url_.UnsafeRawStringPointer())->clear();
    }
    if (has_baserequest()) {
      GOOGLE_DCHECK(baserequest_ != NULL);
      baserequest_->::micromsg::BaseRequest::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 192u) {
    ::memset(&msgtype_, 0, reinterpret_cast<char*>(&scene_) -
      reinterpret_cast<char*>(&msgtype_) + sizeof(scene_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SendC2CSecMsgRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.SendC2CSecMsgRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseRequest BaseRequest = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baserequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ToUser = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_touser()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->touser().data(), this->touser().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.SendC2CSecMsgRequest.ToUser");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 MsgType = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_msgtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msgtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string TempId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tempid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tempid().data(), this->tempid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.SendC2CSecMsgRequest.TempId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Title = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.SendC2CSecMsgRequest.Title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Des = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_des()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->des().data(), this->des().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.SendC2CSecMsgRequest.Des");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Url = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.SendC2CSecMsgRequest.Url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 Scene = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_scene();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.SendC2CSecMsgRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.SendC2CSecMsgRequest)
  return false;
#undef DO_
}

void SendC2CSecMsgRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.SendC2CSecMsgRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baserequest_, output);
  }

  // optional string ToUser = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->touser().data(), this->touser().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SendC2CSecMsgRequest.ToUser");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->touser(), output);
  }

  // optional int32 MsgType = 3;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->msgtype(), output);
  }

  // optional string TempId = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tempid().data(), this->tempid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SendC2CSecMsgRequest.TempId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->tempid(), output);
  }

  // optional string Title = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SendC2CSecMsgRequest.Title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->title(), output);
  }

  // optional string Des = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->des().data(), this->des().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SendC2CSecMsgRequest.Des");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->des(), output);
  }

  // optional string Url = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SendC2CSecMsgRequest.Url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->url(), output);
  }

  // optional int32 Scene = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->scene(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.SendC2CSecMsgRequest)
}

::google::protobuf::uint8* SendC2CSecMsgRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.SendC2CSecMsgRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baserequest_, deterministic, target);
  }

  // optional string ToUser = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->touser().data(), this->touser().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SendC2CSecMsgRequest.ToUser");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->touser(), target);
  }

  // optional int32 MsgType = 3;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->msgtype(), target);
  }

  // optional string TempId = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tempid().data(), this->tempid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SendC2CSecMsgRequest.TempId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->tempid(), target);
  }

  // optional string Title = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SendC2CSecMsgRequest.Title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->title(), target);
  }

  // optional string Des = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->des().data(), this->des().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SendC2CSecMsgRequest.Des");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->des(), target);
  }

  // optional string Url = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SendC2CSecMsgRequest.Url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->url(), target);
  }

  // optional int32 Scene = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->scene(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.SendC2CSecMsgRequest)
  return target;
}

size_t SendC2CSecMsgRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.SendC2CSecMsgRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseRequest BaseRequest = 1;
  if (has_baserequest()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baserequest_);
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string ToUser = 2;
    if (has_touser()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->touser());
    }

    // optional string TempId = 4;
    if (has_tempid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tempid());
    }

    // optional string Title = 5;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string Des = 6;
    if (has_des()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->des());
    }

    // optional string Url = 7;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

  }
  if (_has_bits_[0 / 32] & 192u) {
    // optional int32 MsgType = 3;
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->msgtype());
    }

    // optional int32 Scene = 8;
    if (has_scene()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendC2CSecMsgRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.SendC2CSecMsgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SendC2CSecMsgRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendC2CSecMsgRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.SendC2CSecMsgRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.SendC2CSecMsgRequest)
    MergeFrom(*source);
  }
}

void SendC2CSecMsgRequest::MergeFrom(const SendC2CSecMsgRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.SendC2CSecMsgRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_touser();
      touser_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.touser_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_tempid();
      tempid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tempid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_des();
      des_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.des_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_baserequest()->::micromsg::BaseRequest::MergeFrom(from.baserequest());
    }
    if (cached_has_bits & 0x00000040u) {
      msgtype_ = from.msgtype_;
    }
    if (cached_has_bits & 0x00000080u) {
      scene_ = from.scene_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SendC2CSecMsgRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.SendC2CSecMsgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendC2CSecMsgRequest::CopyFrom(const SendC2CSecMsgRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.SendC2CSecMsgRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendC2CSecMsgRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000020) != 0x00000020) return false;
  if (has_baserequest()) {
    if (!this->baserequest_->IsInitialized()) return false;
  }
  return true;
}

void SendC2CSecMsgRequest::Swap(SendC2CSecMsgRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendC2CSecMsgRequest::InternalSwap(SendC2CSecMsgRequest* other) {
  touser_.Swap(&other->touser_);
  tempid_.Swap(&other->tempid_);
  title_.Swap(&other->title_);
  des_.Swap(&other->des_);
  url_.Swap(&other->url_);
  std::swap(baserequest_, other->baserequest_);
  std::swap(msgtype_, other->msgtype_);
  std::swap(scene_, other->scene_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendC2CSecMsgRequest::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SendC2CSecMsgRequest

// required .micromsg.BaseRequest BaseRequest = 1;
bool SendC2CSecMsgRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void SendC2CSecMsgRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000020u;
}
void SendC2CSecMsgRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000020u;
}
void SendC2CSecMsgRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
const ::micromsg::BaseRequest& SendC2CSecMsgRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SendC2CSecMsgRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
::micromsg::BaseRequest* SendC2CSecMsgRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SendC2CSecMsgRequest.BaseRequest)
  return baserequest_;
}
::micromsg::BaseRequest* SendC2CSecMsgRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SendC2CSecMsgRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
void SendC2CSecMsgRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendC2CSecMsgRequest.BaseRequest)
}

// optional string ToUser = 2;
bool SendC2CSecMsgRequest::has_touser() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SendC2CSecMsgRequest::set_has_touser() {
  _has_bits_[0] |= 0x00000001u;
}
void SendC2CSecMsgRequest::clear_has_touser() {
  _has_bits_[0] &= ~0x00000001u;
}
void SendC2CSecMsgRequest::clear_touser() {
  touser_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_touser();
}
const ::std::string& SendC2CSecMsgRequest::touser() const {
  // @@protoc_insertion_point(field_get:micromsg.SendC2CSecMsgRequest.ToUser)
  return touser_.GetNoArena();
}
void SendC2CSecMsgRequest::set_touser(const ::std::string& value) {
  set_has_touser();
  touser_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendC2CSecMsgRequest.ToUser)
}
#if LANG_CXX11
void SendC2CSecMsgRequest::set_touser(::std::string&& value) {
  set_has_touser();
  touser_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendC2CSecMsgRequest.ToUser)
}
#endif
void SendC2CSecMsgRequest::set_touser(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_touser();
  touser_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendC2CSecMsgRequest.ToUser)
}
void SendC2CSecMsgRequest::set_touser(const char* value, size_t size) {
  set_has_touser();
  touser_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendC2CSecMsgRequest.ToUser)
}
::std::string* SendC2CSecMsgRequest::mutable_touser() {
  set_has_touser();
  // @@protoc_insertion_point(field_mutable:micromsg.SendC2CSecMsgRequest.ToUser)
  return touser_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendC2CSecMsgRequest::release_touser() {
  // @@protoc_insertion_point(field_release:micromsg.SendC2CSecMsgRequest.ToUser)
  clear_has_touser();
  return touser_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendC2CSecMsgRequest::set_allocated_touser(::std::string* touser) {
  if (touser != NULL) {
    set_has_touser();
  } else {
    clear_has_touser();
  }
  touser_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), touser);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendC2CSecMsgRequest.ToUser)
}

// optional int32 MsgType = 3;
bool SendC2CSecMsgRequest::has_msgtype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void SendC2CSecMsgRequest::set_has_msgtype() {
  _has_bits_[0] |= 0x00000040u;
}
void SendC2CSecMsgRequest::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000040u;
}
void SendC2CSecMsgRequest::clear_msgtype() {
  msgtype_ = 0;
  clear_has_msgtype();
}
::google::protobuf::int32 SendC2CSecMsgRequest::msgtype() const {
  // @@protoc_insertion_point(field_get:micromsg.SendC2CSecMsgRequest.MsgType)
  return msgtype_;
}
void SendC2CSecMsgRequest::set_msgtype(::google::protobuf::int32 value) {
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SendC2CSecMsgRequest.MsgType)
}

// optional string TempId = 4;
bool SendC2CSecMsgRequest::has_tempid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SendC2CSecMsgRequest::set_has_tempid() {
  _has_bits_[0] |= 0x00000002u;
}
void SendC2CSecMsgRequest::clear_has_tempid() {
  _has_bits_[0] &= ~0x00000002u;
}
void SendC2CSecMsgRequest::clear_tempid() {
  tempid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tempid();
}
const ::std::string& SendC2CSecMsgRequest::tempid() const {
  // @@protoc_insertion_point(field_get:micromsg.SendC2CSecMsgRequest.TempId)
  return tempid_.GetNoArena();
}
void SendC2CSecMsgRequest::set_tempid(const ::std::string& value) {
  set_has_tempid();
  tempid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendC2CSecMsgRequest.TempId)
}
#if LANG_CXX11
void SendC2CSecMsgRequest::set_tempid(::std::string&& value) {
  set_has_tempid();
  tempid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendC2CSecMsgRequest.TempId)
}
#endif
void SendC2CSecMsgRequest::set_tempid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tempid();
  tempid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendC2CSecMsgRequest.TempId)
}
void SendC2CSecMsgRequest::set_tempid(const char* value, size_t size) {
  set_has_tempid();
  tempid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendC2CSecMsgRequest.TempId)
}
::std::string* SendC2CSecMsgRequest::mutable_tempid() {
  set_has_tempid();
  // @@protoc_insertion_point(field_mutable:micromsg.SendC2CSecMsgRequest.TempId)
  return tempid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendC2CSecMsgRequest::release_tempid() {
  // @@protoc_insertion_point(field_release:micromsg.SendC2CSecMsgRequest.TempId)
  clear_has_tempid();
  return tempid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendC2CSecMsgRequest::set_allocated_tempid(::std::string* tempid) {
  if (tempid != NULL) {
    set_has_tempid();
  } else {
    clear_has_tempid();
  }
  tempid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tempid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendC2CSecMsgRequest.TempId)
}

// optional string Title = 5;
bool SendC2CSecMsgRequest::has_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SendC2CSecMsgRequest::set_has_title() {
  _has_bits_[0] |= 0x00000004u;
}
void SendC2CSecMsgRequest::clear_has_title() {
  _has_bits_[0] &= ~0x00000004u;
}
void SendC2CSecMsgRequest::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
const ::std::string& SendC2CSecMsgRequest::title() const {
  // @@protoc_insertion_point(field_get:micromsg.SendC2CSecMsgRequest.Title)
  return title_.GetNoArena();
}
void SendC2CSecMsgRequest::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendC2CSecMsgRequest.Title)
}
#if LANG_CXX11
void SendC2CSecMsgRequest::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendC2CSecMsgRequest.Title)
}
#endif
void SendC2CSecMsgRequest::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendC2CSecMsgRequest.Title)
}
void SendC2CSecMsgRequest::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendC2CSecMsgRequest.Title)
}
::std::string* SendC2CSecMsgRequest::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:micromsg.SendC2CSecMsgRequest.Title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendC2CSecMsgRequest::release_title() {
  // @@protoc_insertion_point(field_release:micromsg.SendC2CSecMsgRequest.Title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendC2CSecMsgRequest::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendC2CSecMsgRequest.Title)
}

// optional string Des = 6;
bool SendC2CSecMsgRequest::has_des() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SendC2CSecMsgRequest::set_has_des() {
  _has_bits_[0] |= 0x00000008u;
}
void SendC2CSecMsgRequest::clear_has_des() {
  _has_bits_[0] &= ~0x00000008u;
}
void SendC2CSecMsgRequest::clear_des() {
  des_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_des();
}
const ::std::string& SendC2CSecMsgRequest::des() const {
  // @@protoc_insertion_point(field_get:micromsg.SendC2CSecMsgRequest.Des)
  return des_.GetNoArena();
}
void SendC2CSecMsgRequest::set_des(const ::std::string& value) {
  set_has_des();
  des_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendC2CSecMsgRequest.Des)
}
#if LANG_CXX11
void SendC2CSecMsgRequest::set_des(::std::string&& value) {
  set_has_des();
  des_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendC2CSecMsgRequest.Des)
}
#endif
void SendC2CSecMsgRequest::set_des(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_des();
  des_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendC2CSecMsgRequest.Des)
}
void SendC2CSecMsgRequest::set_des(const char* value, size_t size) {
  set_has_des();
  des_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendC2CSecMsgRequest.Des)
}
::std::string* SendC2CSecMsgRequest::mutable_des() {
  set_has_des();
  // @@protoc_insertion_point(field_mutable:micromsg.SendC2CSecMsgRequest.Des)
  return des_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendC2CSecMsgRequest::release_des() {
  // @@protoc_insertion_point(field_release:micromsg.SendC2CSecMsgRequest.Des)
  clear_has_des();
  return des_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendC2CSecMsgRequest::set_allocated_des(::std::string* des) {
  if (des != NULL) {
    set_has_des();
  } else {
    clear_has_des();
  }
  des_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), des);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendC2CSecMsgRequest.Des)
}

// optional string Url = 7;
bool SendC2CSecMsgRequest::has_url() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SendC2CSecMsgRequest::set_has_url() {
  _has_bits_[0] |= 0x00000010u;
}
void SendC2CSecMsgRequest::clear_has_url() {
  _has_bits_[0] &= ~0x00000010u;
}
void SendC2CSecMsgRequest::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
const ::std::string& SendC2CSecMsgRequest::url() const {
  // @@protoc_insertion_point(field_get:micromsg.SendC2CSecMsgRequest.Url)
  return url_.GetNoArena();
}
void SendC2CSecMsgRequest::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendC2CSecMsgRequest.Url)
}
#if LANG_CXX11
void SendC2CSecMsgRequest::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendC2CSecMsgRequest.Url)
}
#endif
void SendC2CSecMsgRequest::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendC2CSecMsgRequest.Url)
}
void SendC2CSecMsgRequest::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendC2CSecMsgRequest.Url)
}
::std::string* SendC2CSecMsgRequest::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:micromsg.SendC2CSecMsgRequest.Url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendC2CSecMsgRequest::release_url() {
  // @@protoc_insertion_point(field_release:micromsg.SendC2CSecMsgRequest.Url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendC2CSecMsgRequest::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendC2CSecMsgRequest.Url)
}

// optional int32 Scene = 8;
bool SendC2CSecMsgRequest::has_scene() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void SendC2CSecMsgRequest::set_has_scene() {
  _has_bits_[0] |= 0x00000080u;
}
void SendC2CSecMsgRequest::clear_has_scene() {
  _has_bits_[0] &= ~0x00000080u;
}
void SendC2CSecMsgRequest::clear_scene() {
  scene_ = 0;
  clear_has_scene();
}
::google::protobuf::int32 SendC2CSecMsgRequest::scene() const {
  // @@protoc_insertion_point(field_get:micromsg.SendC2CSecMsgRequest.Scene)
  return scene_;
}
void SendC2CSecMsgRequest::set_scene(::google::protobuf::int32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SendC2CSecMsgRequest.Scene)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendC2cSecMsgResponse::kBaseResponseFieldNumber;
const int SendC2cSecMsgResponse::kErrCodeFieldNumber;
const int SendC2cSecMsgResponse::kErrMsgFieldNumber;
const int SendC2cSecMsgResponse::kMsgIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendC2cSecMsgResponse::SendC2cSecMsgResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_mmpay_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:micromsg.SendC2cSecMsgResponse)
}
SendC2cSecMsgResponse::SendC2cSecMsgResponse(const SendC2cSecMsgResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_errmsg()) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  msgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msgid()) {
    msgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgid_);
  }
  if (from.has_baseresponse()) {
    baseresponse_ = new ::micromsg::BaseResponse(*from.baseresponse_);
  } else {
    baseresponse_ = NULL;
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:micromsg.SendC2cSecMsgResponse)
}

void SendC2cSecMsgResponse::SharedCtor() {
  _cached_size_ = 0;
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseresponse_, 0, reinterpret_cast<char*>(&errcode_) -
    reinterpret_cast<char*>(&baseresponse_) + sizeof(errcode_));
}

SendC2cSecMsgResponse::~SendC2cSecMsgResponse() {
  // @@protoc_insertion_point(destructor:micromsg.SendC2cSecMsgResponse)
  SharedDtor();
}

void SendC2cSecMsgResponse::SharedDtor() {
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresponse_;
  }
}

void SendC2cSecMsgResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendC2cSecMsgResponse::descriptor() {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendC2cSecMsgResponse& SendC2cSecMsgResponse::default_instance() {
  protobuf_mmpay_2eproto::InitDefaults();
  return *internal_default_instance();
}

SendC2cSecMsgResponse* SendC2cSecMsgResponse::New(::google::protobuf::Arena* arena) const {
  SendC2cSecMsgResponse* n = new SendC2cSecMsgResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendC2cSecMsgResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:micromsg.SendC2cSecMsgResponse)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_errmsg()) {
      GOOGLE_DCHECK(!errmsg_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*errmsg_.UnsafeRawStringPointer())->clear();
    }
    if (has_msgid()) {
      GOOGLE_DCHECK(!msgid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*msgid_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresponse()) {
      GOOGLE_DCHECK(baseresponse_ != NULL);
      baseresponse_->::micromsg::BaseResponse::Clear();
    }
  }
  errcode_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SendC2cSecMsgResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:micromsg.SendC2cSecMsgResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .micromsg.BaseResponse BaseResponse = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ErrCode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_errcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string ErrMsg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->errmsg().data(), this->errmsg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.SendC2cSecMsgResponse.ErrMsg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string MsgId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msgid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msgid().data(), this->msgid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "micromsg.SendC2cSecMsgResponse.MsgId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:micromsg.SendC2cSecMsgResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:micromsg.SendC2cSecMsgResponse)
  return false;
#undef DO_
}

void SendC2cSecMsgResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:micromsg.SendC2cSecMsgResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresponse_, output);
  }

  // optional int32 ErrCode = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->errcode(), output);
  }

  // optional string ErrMsg = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->errmsg().data(), this->errmsg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SendC2cSecMsgResponse.ErrMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->errmsg(), output);
  }

  // optional string MsgId = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msgid().data(), this->msgid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SendC2cSecMsgResponse.MsgId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->msgid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:micromsg.SendC2cSecMsgResponse)
}

::google::protobuf::uint8* SendC2cSecMsgResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:micromsg.SendC2cSecMsgResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresponse_, deterministic, target);
  }

  // optional int32 ErrCode = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->errcode(), target);
  }

  // optional string ErrMsg = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->errmsg().data(), this->errmsg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SendC2cSecMsgResponse.ErrMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->errmsg(), target);
  }

  // optional string MsgId = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msgid().data(), this->msgid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "micromsg.SendC2cSecMsgResponse.MsgId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->msgid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:micromsg.SendC2cSecMsgResponse)
  return target;
}

size_t SendC2cSecMsgResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:micromsg.SendC2cSecMsgResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .micromsg.BaseResponse BaseResponse = 1;
  if (has_baseresponse()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresponse_);
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string ErrMsg = 3;
    if (has_errmsg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->errmsg());
    }

    // optional string MsgId = 4;
    if (has_msgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msgid());
    }

  }
  // optional int32 ErrCode = 2;
  if (has_errcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendC2cSecMsgResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:micromsg.SendC2cSecMsgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SendC2cSecMsgResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendC2cSecMsgResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:micromsg.SendC2cSecMsgResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:micromsg.SendC2cSecMsgResponse)
    MergeFrom(*source);
  }
}

void SendC2cSecMsgResponse::MergeFrom(const SendC2cSecMsgResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:micromsg.SendC2cSecMsgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_errmsg();
      errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_msgid();
      msgid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgid_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_baseresponse()->::micromsg::BaseResponse::MergeFrom(from.baseresponse());
    }
    if (cached_has_bits & 0x00000008u) {
      errcode_ = from.errcode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SendC2cSecMsgResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:micromsg.SendC2cSecMsgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendC2cSecMsgResponse::CopyFrom(const SendC2cSecMsgResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:micromsg.SendC2cSecMsgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendC2cSecMsgResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (has_baseresponse()) {
    if (!this->baseresponse_->IsInitialized()) return false;
  }
  return true;
}

void SendC2cSecMsgResponse::Swap(SendC2cSecMsgResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendC2cSecMsgResponse::InternalSwap(SendC2cSecMsgResponse* other) {
  errmsg_.Swap(&other->errmsg_);
  msgid_.Swap(&other->msgid_);
  std::swap(baseresponse_, other->baseresponse_);
  std::swap(errcode_, other->errcode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendC2cSecMsgResponse::GetMetadata() const {
  protobuf_mmpay_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mmpay_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SendC2cSecMsgResponse

// required .micromsg.BaseResponse BaseResponse = 1;
bool SendC2cSecMsgResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SendC2cSecMsgResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000004u;
}
void SendC2cSecMsgResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000004u;
}
void SendC2cSecMsgResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
const ::micromsg::BaseResponse& SendC2cSecMsgResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.SendC2cSecMsgResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
::micromsg::BaseResponse* SendC2cSecMsgResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SendC2cSecMsgResponse.BaseResponse)
  return baseresponse_;
}
::micromsg::BaseResponse* SendC2cSecMsgResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.SendC2cSecMsgResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
void SendC2cSecMsgResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendC2cSecMsgResponse.BaseResponse)
}

// optional int32 ErrCode = 2;
bool SendC2cSecMsgResponse::has_errcode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SendC2cSecMsgResponse::set_has_errcode() {
  _has_bits_[0] |= 0x00000008u;
}
void SendC2cSecMsgResponse::clear_has_errcode() {
  _has_bits_[0] &= ~0x00000008u;
}
void SendC2cSecMsgResponse::clear_errcode() {
  errcode_ = 0;
  clear_has_errcode();
}
::google::protobuf::int32 SendC2cSecMsgResponse::errcode() const {
  // @@protoc_insertion_point(field_get:micromsg.SendC2cSecMsgResponse.ErrCode)
  return errcode_;
}
void SendC2cSecMsgResponse::set_errcode(::google::protobuf::int32 value) {
  set_has_errcode();
  errcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SendC2cSecMsgResponse.ErrCode)
}

// optional string ErrMsg = 3;
bool SendC2cSecMsgResponse::has_errmsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SendC2cSecMsgResponse::set_has_errmsg() {
  _has_bits_[0] |= 0x00000001u;
}
void SendC2cSecMsgResponse::clear_has_errmsg() {
  _has_bits_[0] &= ~0x00000001u;
}
void SendC2cSecMsgResponse::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_errmsg();
}
const ::std::string& SendC2cSecMsgResponse::errmsg() const {
  // @@protoc_insertion_point(field_get:micromsg.SendC2cSecMsgResponse.ErrMsg)
  return errmsg_.GetNoArena();
}
void SendC2cSecMsgResponse::set_errmsg(const ::std::string& value) {
  set_has_errmsg();
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendC2cSecMsgResponse.ErrMsg)
}
#if LANG_CXX11
void SendC2cSecMsgResponse::set_errmsg(::std::string&& value) {
  set_has_errmsg();
  errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendC2cSecMsgResponse.ErrMsg)
}
#endif
void SendC2cSecMsgResponse::set_errmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_errmsg();
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendC2cSecMsgResponse.ErrMsg)
}
void SendC2cSecMsgResponse::set_errmsg(const char* value, size_t size) {
  set_has_errmsg();
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendC2cSecMsgResponse.ErrMsg)
}
::std::string* SendC2cSecMsgResponse::mutable_errmsg() {
  set_has_errmsg();
  // @@protoc_insertion_point(field_mutable:micromsg.SendC2cSecMsgResponse.ErrMsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendC2cSecMsgResponse::release_errmsg() {
  // @@protoc_insertion_point(field_release:micromsg.SendC2cSecMsgResponse.ErrMsg)
  clear_has_errmsg();
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendC2cSecMsgResponse::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != NULL) {
    set_has_errmsg();
  } else {
    clear_has_errmsg();
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendC2cSecMsgResponse.ErrMsg)
}

// optional string MsgId = 4;
bool SendC2cSecMsgResponse::has_msgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SendC2cSecMsgResponse::set_has_msgid() {
  _has_bits_[0] |= 0x00000002u;
}
void SendC2cSecMsgResponse::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000002u;
}
void SendC2cSecMsgResponse::clear_msgid() {
  msgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msgid();
}
const ::std::string& SendC2cSecMsgResponse::msgid() const {
  // @@protoc_insertion_point(field_get:micromsg.SendC2cSecMsgResponse.MsgId)
  return msgid_.GetNoArena();
}
void SendC2cSecMsgResponse::set_msgid(const ::std::string& value) {
  set_has_msgid();
  msgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendC2cSecMsgResponse.MsgId)
}
#if LANG_CXX11
void SendC2cSecMsgResponse::set_msgid(::std::string&& value) {
  set_has_msgid();
  msgid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendC2cSecMsgResponse.MsgId)
}
#endif
void SendC2cSecMsgResponse::set_msgid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msgid();
  msgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendC2cSecMsgResponse.MsgId)
}
void SendC2cSecMsgResponse::set_msgid(const char* value, size_t size) {
  set_has_msgid();
  msgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendC2cSecMsgResponse.MsgId)
}
::std::string* SendC2cSecMsgResponse::mutable_msgid() {
  set_has_msgid();
  // @@protoc_insertion_point(field_mutable:micromsg.SendC2cSecMsgResponse.MsgId)
  return msgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendC2cSecMsgResponse::release_msgid() {
  // @@protoc_insertion_point(field_release:micromsg.SendC2cSecMsgResponse.MsgId)
  clear_has_msgid();
  return msgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendC2cSecMsgResponse::set_allocated_msgid(::std::string* msgid) {
  if (msgid != NULL) {
    set_has_msgid();
  } else {
    clear_has_msgid();
  }
  msgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendC2cSecMsgResponse.MsgId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace micromsg

// @@protoc_insertion_point(global_scope)
