// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mmpay.proto

#ifndef PROTOBUF_mmpay_2eproto__INCLUDED
#define PROTOBUF_mmpay_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "mmbuiltintype.pb.h"
#include "mmbase.pb.h"
// @@protoc_insertion_point(includes)
namespace micromsg {
class ActionAttr;
class ActionAttrDefaultTypeInternal;
extern ActionAttrDefaultTypeInternal _ActionAttr_default_instance_;
class AdditionalContactList;
class AdditionalContactListDefaultTypeInternal;
extern AdditionalContactListDefaultTypeInternal _AdditionalContactList_default_instance_;
class Address;
class AddressDefaultTypeInternal;
extern AddressDefaultTypeInternal _Address_default_instance_;
class BaseRequest;
class BaseRequestDefaultTypeInternal;
extern BaseRequestDefaultTypeInternal _BaseRequest_default_instance_;
class BaseResponse;
class BaseResponseDefaultTypeInternal;
extern BaseResponseDefaultTypeInternal _BaseResponse_default_instance_;
class BindEmailRequest;
class BindEmailRequestDefaultTypeInternal;
extern BindEmailRequestDefaultTypeInternal _BindEmailRequest_default_instance_;
class BindEmailResponse;
class BindEmailResponseDefaultTypeInternal;
extern BindEmailResponseDefaultTypeInternal _BindEmailResponse_default_instance_;
class BuiltinIP;
class BuiltinIPDefaultTypeInternal;
extern BuiltinIPDefaultTypeInternal _BuiltinIP_default_instance_;
class BuiltinIPList;
class BuiltinIPListDefaultTypeInternal;
extern BuiltinIPListDefaultTypeInternal _BuiltinIPList_default_instance_;
class CDNDnsInfo;
class CDNDnsInfoDefaultTypeInternal;
extern CDNDnsInfoDefaultTypeInternal _CDNDnsInfo_default_instance_;
class CancelPreOrderRequest;
class CancelPreOrderRequestDefaultTypeInternal;
extern CancelPreOrderRequestDefaultTypeInternal _CancelPreOrderRequest_default_instance_;
class CancelPreOrderResponse;
class CancelPreOrderResponseDefaultTypeInternal;
extern CancelPreOrderResponseDefaultTypeInternal _CancelPreOrderResponse_default_instance_;
class ChatRoomMemberData;
class ChatRoomMemberDataDefaultTypeInternal;
extern ChatRoomMemberDataDefaultTypeInternal _ChatRoomMemberData_default_instance_;
class ChatRoomMemberInfo;
class ChatRoomMemberInfoDefaultTypeInternal;
extern ChatRoomMemberInfoDefaultTypeInternal _ChatRoomMemberInfo_default_instance_;
class CmdItem;
class CmdItemDefaultTypeInternal;
extern CmdItemDefaultTypeInternal _CmdItem_default_instance_;
class CmdList;
class CmdListDefaultTypeInternal;
extern CmdListDefaultTypeInternal _CmdList_default_instance_;
class CustomizedInfo;
class CustomizedInfoDefaultTypeInternal;
extern CustomizedInfoDefaultTypeInternal _CustomizedInfo_default_instance_;
class DelMemberReq;
class DelMemberReqDefaultTypeInternal;
extern DelMemberReqDefaultTypeInternal _DelMemberReq_default_instance_;
class DelMemberResp;
class DelMemberRespDefaultTypeInternal;
extern DelMemberRespDefaultTypeInternal _DelMemberResp_default_instance_;
class Discount;
class DiscountDefaultTypeInternal;
extern DiscountDefaultTypeInternal _Discount_default_instance_;
class DisturbSetting;
class DisturbSettingDefaultTypeInternal;
extern DisturbSettingDefaultTypeInternal _DisturbSetting_default_instance_;
class DisturbTimeSpan;
class DisturbTimeSpanDefaultTypeInternal;
extern DisturbTimeSpanDefaultTypeInternal _DisturbTimeSpan_default_instance_;
class Express;
class ExpressDefaultTypeInternal;
extern ExpressDefaultTypeInternal _Express_default_instance_;
class GenBizIapPrepayRequest;
class GenBizIapPrepayRequestDefaultTypeInternal;
extern GenBizIapPrepayRequestDefaultTypeInternal _GenBizIapPrepayRequest_default_instance_;
class GenBizIapPrepayResponse;
class GenBizIapPrepayResponseDefaultTypeInternal;
extern GenBizIapPrepayResponseDefaultTypeInternal _GenBizIapPrepayResponse_default_instance_;
class GetBizIapDetailRequest;
class GetBizIapDetailRequestDefaultTypeInternal;
extern GetBizIapDetailRequestDefaultTypeInternal _GetBizIapDetailRequest_default_instance_;
class GetBizIapDetailResponse;
class GetBizIapDetailResponseDefaultTypeInternal;
extern GetBizIapDetailResponseDefaultTypeInternal _GetBizIapDetailResponse_default_instance_;
class GetBizIapPayResultRequest;
class GetBizIapPayResultRequestDefaultTypeInternal;
extern GetBizIapPayResultRequestDefaultTypeInternal _GetBizIapPayResultRequest_default_instance_;
class GetBizIapPayResultResponse;
class GetBizIapPayResultResponseDefaultTypeInternal;
extern GetBizIapPayResultResponseDefaultTypeInternal _GetBizIapPayResultResponse_default_instance_;
class GetLastestExpressInfoRequest;
class GetLastestExpressInfoRequestDefaultTypeInternal;
extern GetLastestExpressInfoRequestDefaultTypeInternal _GetLastestExpressInfoRequest_default_instance_;
class GetLastestExpressInfoResponse;
class GetLastestExpressInfoResponseDefaultTypeInternal;
extern GetLastestExpressInfoResponseDefaultTypeInternal _GetLastestExpressInfoResponse_default_instance_;
class GetLocationRequest;
class GetLocationRequestDefaultTypeInternal;
extern GetLocationRequestDefaultTypeInternal _GetLocationRequest_default_instance_;
class GetLocationResponse;
class GetLocationResponseDefaultTypeInternal;
extern GetLocationResponseDefaultTypeInternal _GetLocationResponse_default_instance_;
class GetProductDetailRequest;
class GetProductDetailRequestDefaultTypeInternal;
extern GetProductDetailRequestDefaultTypeInternal _GetProductDetailRequest_default_instance_;
class GetProductDetailResponse;
class GetProductDetailResponseDefaultTypeInternal;
extern GetProductDetailResponseDefaultTypeInternal _GetProductDetailResponse_default_instance_;
class GetProductDiscountRequest;
class GetProductDiscountRequestDefaultTypeInternal;
extern GetProductDiscountRequestDefaultTypeInternal _GetProductDiscountRequest_default_instance_;
class GetProductDiscountResponse;
class GetProductDiscountResponseDefaultTypeInternal;
extern GetProductDiscountResponseDefaultTypeInternal _GetProductDiscountResponse_default_instance_;
class GmailInfo;
class GmailInfoDefaultTypeInternal;
extern GmailInfoDefaultTypeInternal _GmailInfo_default_instance_;
class GmailList;
class GmailListDefaultTypeInternal;
extern GmailListDefaultTypeInternal _GmailList_default_instance_;
class HardDevice;
class HardDeviceDefaultTypeInternal;
extern HardDeviceDefaultTypeInternal _HardDevice_default_instance_;
class Host;
class HostDefaultTypeInternal;
extern HostDefaultTypeInternal _Host_default_instance_;
class HostList;
class HostListDefaultTypeInternal;
extern HostListDefaultTypeInternal _HostList_default_instance_;
class KVItem;
class KVItemDefaultTypeInternal;
extern KVItemDefaultTypeInternal _KVItem_default_instance_;
class LinkedinContactItem;
class LinkedinContactItemDefaultTypeInternal;
extern LinkedinContactItemDefaultTypeInternal _LinkedinContactItem_default_instance_;
class LockStockRequest;
class LockStockRequestDefaultTypeInternal;
extern LockStockRequestDefaultTypeInternal _LockStockRequest_default_instance_;
class LockStockResponse;
class LockStockResponseDefaultTypeInternal;
extern LockStockResponseDefaultTypeInternal _LockStockResponse_default_instance_;
class MemberReq;
class MemberReqDefaultTypeInternal;
extern MemberReqDefaultTypeInternal _MemberReq_default_instance_;
class MemberResp;
class MemberRespDefaultTypeInternal;
extern MemberRespDefaultTypeInternal _MemberResp_default_instance_;
class ModContact;
class ModContactDefaultTypeInternal;
extern ModContactDefaultTypeInternal _ModContact_default_instance_;
class ModUserInfo;
class ModUserInfoDefaultTypeInternal;
extern ModUserInfoDefaultTypeInternal _ModUserInfo_default_instance_;
class NetworkControl;
class NetworkControlDefaultTypeInternal;
extern NetworkControlDefaultTypeInternal _NetworkControl_default_instance_;
class OrderDetailControlRequest;
class OrderDetailControlRequestDefaultTypeInternal;
extern OrderDetailControlRequestDefaultTypeInternal _OrderDetailControlRequest_default_instance_;
class OrderDetailControlResponse;
class OrderDetailControlResponseDefaultTypeInternal;
extern OrderDetailControlResponseDefaultTypeInternal _OrderDetailControlResponse_default_instance_;
class PatternLockInfo;
class PatternLockInfoDefaultTypeInternal;
extern PatternLockInfoDefaultTypeInternal _PatternLockInfo_default_instance_;
class PluginKey;
class PluginKeyDefaultTypeInternal;
extern PluginKeyDefaultTypeInternal _PluginKey_default_instance_;
class PluginKeyList;
class PluginKeyListDefaultTypeInternal;
extern PluginKeyListDefaultTypeInternal _PluginKeyList_default_instance_;
class PositionInfo;
class PositionInfoDefaultTypeInternal;
extern PositionInfoDefaultTypeInternal _PositionInfo_default_instance_;
class PreSubmitOrderRequest;
class PreSubmitOrderRequestDefaultTypeInternal;
extern PreSubmitOrderRequestDefaultTypeInternal _PreSubmitOrderRequest_default_instance_;
class PreSubmitOrderResponse;
class PreSubmitOrderResponseDefaultTypeInternal;
extern PreSubmitOrderResponseDefaultTypeInternal _PreSubmitOrderResponse_default_instance_;
class Production;
class ProductionDefaultTypeInternal;
extern ProductionDefaultTypeInternal _Production_default_instance_;
class RcptInfoAddRequest;
class RcptInfoAddRequestDefaultTypeInternal;
extern RcptInfoAddRequestDefaultTypeInternal _RcptInfoAddRequest_default_instance_;
class RcptInfoAddResponse;
class RcptInfoAddResponseDefaultTypeInternal;
extern RcptInfoAddResponseDefaultTypeInternal _RcptInfoAddResponse_default_instance_;
class RcptInfoImportYiXunRequest;
class RcptInfoImportYiXunRequestDefaultTypeInternal;
extern RcptInfoImportYiXunRequestDefaultTypeInternal _RcptInfoImportYiXunRequest_default_instance_;
class RcptInfoImportYiXunResponse;
class RcptInfoImportYiXunResponseDefaultTypeInternal;
extern RcptInfoImportYiXunResponseDefaultTypeInternal _RcptInfoImportYiXunResponse_default_instance_;
class RcptInfoList;
class RcptInfoListDefaultTypeInternal;
extern RcptInfoListDefaultTypeInternal _RcptInfoList_default_instance_;
class RcptInfoNode;
class RcptInfoNodeDefaultTypeInternal;
extern RcptInfoNodeDefaultTypeInternal _RcptInfoNode_default_instance_;
class RcptInfoQueryRequest;
class RcptInfoQueryRequestDefaultTypeInternal;
extern RcptInfoQueryRequestDefaultTypeInternal _RcptInfoQueryRequest_default_instance_;
class RcptInfoQueryResponse;
class RcptInfoQueryResponseDefaultTypeInternal;
extern RcptInfoQueryResponseDefaultTypeInternal _RcptInfoQueryResponse_default_instance_;
class RcptInfoRemoveRequest;
class RcptInfoRemoveRequestDefaultTypeInternal;
extern RcptInfoRemoveRequestDefaultTypeInternal _RcptInfoRemoveRequest_default_instance_;
class RcptInfoRemoveResponse;
class RcptInfoRemoveResponseDefaultTypeInternal;
extern RcptInfoRemoveResponseDefaultTypeInternal _RcptInfoRemoveResponse_default_instance_;
class RcptInfoTouchRequest;
class RcptInfoTouchRequestDefaultTypeInternal;
extern RcptInfoTouchRequestDefaultTypeInternal _RcptInfoTouchRequest_default_instance_;
class RcptInfoTouchResponse;
class RcptInfoTouchResponseDefaultTypeInternal;
extern RcptInfoTouchResponseDefaultTypeInternal _RcptInfoTouchResponse_default_instance_;
class RcptInfoUpdateRequest;
class RcptInfoUpdateRequestDefaultTypeInternal;
extern RcptInfoUpdateRequestDefaultTypeInternal _RcptInfoUpdateRequest_default_instance_;
class RcptInfoUpdateResponse;
class RcptInfoUpdateResponseDefaultTypeInternal;
extern RcptInfoUpdateResponseDefaultTypeInternal _RcptInfoUpdateResponse_default_instance_;
class Receipt;
class ReceiptDefaultTypeInternal;
extern ReceiptDefaultTypeInternal _Receipt_default_instance_;
class RoomInfo;
class RoomInfoDefaultTypeInternal;
extern RoomInfoDefaultTypeInternal _RoomInfo_default_instance_;
class SKBuiltinBuffer_t;
class SKBuiltinBuffer_tDefaultTypeInternal;
extern SKBuiltinBuffer_tDefaultTypeInternal _SKBuiltinBuffer_t_default_instance_;
class SKBuiltinChar_t;
class SKBuiltinChar_tDefaultTypeInternal;
extern SKBuiltinChar_tDefaultTypeInternal _SKBuiltinChar_t_default_instance_;
class SKBuiltinDouble64_t;
class SKBuiltinDouble64_tDefaultTypeInternal;
extern SKBuiltinDouble64_tDefaultTypeInternal _SKBuiltinDouble64_t_default_instance_;
class SKBuiltinFloat32_t;
class SKBuiltinFloat32_tDefaultTypeInternal;
extern SKBuiltinFloat32_tDefaultTypeInternal _SKBuiltinFloat32_t_default_instance_;
class SKBuiltinInt16_t;
class SKBuiltinInt16_tDefaultTypeInternal;
extern SKBuiltinInt16_tDefaultTypeInternal _SKBuiltinInt16_t_default_instance_;
class SKBuiltinInt32_t;
class SKBuiltinInt32_tDefaultTypeInternal;
extern SKBuiltinInt32_tDefaultTypeInternal _SKBuiltinInt32_t_default_instance_;
class SKBuiltinInt64_t;
class SKBuiltinInt64_tDefaultTypeInternal;
extern SKBuiltinInt64_tDefaultTypeInternal _SKBuiltinInt64_t_default_instance_;
class SKBuiltinInt8_t;
class SKBuiltinInt8_tDefaultTypeInternal;
extern SKBuiltinInt8_tDefaultTypeInternal _SKBuiltinInt8_t_default_instance_;
class SKBuiltinString_t;
class SKBuiltinString_tDefaultTypeInternal;
extern SKBuiltinString_tDefaultTypeInternal _SKBuiltinString_t_default_instance_;
class SKBuiltinUchar_t;
class SKBuiltinUchar_tDefaultTypeInternal;
extern SKBuiltinUchar_tDefaultTypeInternal _SKBuiltinUchar_t_default_instance_;
class SKBuiltinUint16_t;
class SKBuiltinUint16_tDefaultTypeInternal;
extern SKBuiltinUint16_tDefaultTypeInternal _SKBuiltinUint16_t_default_instance_;
class SKBuiltinUint32_t;
class SKBuiltinUint32_tDefaultTypeInternal;
extern SKBuiltinUint32_tDefaultTypeInternal _SKBuiltinUint32_t_default_instance_;
class SKBuiltinUint64_t;
class SKBuiltinUint64_tDefaultTypeInternal;
extern SKBuiltinUint64_tDefaultTypeInternal _SKBuiltinUint64_t_default_instance_;
class SKBuiltinUint8_t;
class SKBuiltinUint8_tDefaultTypeInternal;
extern SKBuiltinUint8_tDefaultTypeInternal _SKBuiltinUint8_t_default_instance_;
class SafeDevice;
class SafeDeviceDefaultTypeInternal;
extern SafeDeviceDefaultTypeInternal _SafeDevice_default_instance_;
class SafeDeviceList;
class SafeDeviceListDefaultTypeInternal;
extern SafeDeviceListDefaultTypeInternal _SafeDeviceList_default_instance_;
class SampleProduct;
class SampleProductDefaultTypeInternal;
extern SampleProductDefaultTypeInternal _SampleProduct_default_instance_;
class SendC2CSecMsgRequest;
class SendC2CSecMsgRequestDefaultTypeInternal;
extern SendC2CSecMsgRequestDefaultTypeInternal _SendC2CSecMsgRequest_default_instance_;
class SendC2cSecMsgResponse;
class SendC2cSecMsgResponseDefaultTypeInternal;
extern SendC2cSecMsgResponseDefaultTypeInternal _SendC2cSecMsgResponse_default_instance_;
class ShakeSyncRequest;
class ShakeSyncRequestDefaultTypeInternal;
extern ShakeSyncRequestDefaultTypeInternal _ShakeSyncRequest_default_instance_;
class ShakeSyncResponse;
class ShakeSyncResponseDefaultTypeInternal;
extern ShakeSyncResponseDefaultTypeInternal _ShakeSyncResponse_default_instance_;
class ShowStyleKey;
class ShowStyleKeyDefaultTypeInternal;
extern ShowStyleKeyDefaultTypeInternal _ShowStyleKey_default_instance_;
class Snapshot;
class SnapshotDefaultTypeInternal;
extern SnapshotDefaultTypeInternal _Snapshot_default_instance_;
class SnsUserInfo;
class SnsUserInfoDefaultTypeInternal;
extern SnsUserInfoDefaultTypeInternal _SnsUserInfo_default_instance_;
class StyleKeyVal;
class StyleKeyValDefaultTypeInternal;
extern StyleKeyValDefaultTypeInternal _StyleKeyVal_default_instance_;
class SubmitMallFreeOrderRequest;
class SubmitMallFreeOrderRequestDefaultTypeInternal;
extern SubmitMallFreeOrderRequestDefaultTypeInternal _SubmitMallFreeOrderRequest_default_instance_;
class SubmitMallFreeOrderResponse;
class SubmitMallFreeOrderResponseDefaultTypeInternal;
extern SubmitMallFreeOrderResponseDefaultTypeInternal _SubmitMallFreeOrderResponse_default_instance_;
class SubmitMallOrderRequest;
class SubmitMallOrderRequestDefaultTypeInternal;
extern SubmitMallOrderRequestDefaultTypeInternal _SubmitMallOrderRequest_default_instance_;
class SubmitMallOrderResponse;
class SubmitMallOrderResponseDefaultTypeInternal;
extern SubmitMallOrderResponseDefaultTypeInternal _SubmitMallOrderResponse_default_instance_;
class UnlockStockRequest;
class UnlockStockRequestDefaultTypeInternal;
extern UnlockStockRequestDefaultTypeInternal _UnlockStockRequest_default_instance_;
class UnlockStockResponse;
class UnlockStockResponseDefaultTypeInternal;
extern UnlockStockResponseDefaultTypeInternal _UnlockStockResponse_default_instance_;
class UserInfoExt;
class UserInfoExtDefaultTypeInternal;
extern UserInfoExtDefaultTypeInternal _UserInfoExt_default_instance_;
}  // namespace micromsg

namespace micromsg {

namespace protobuf_mmpay_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_mmpay_2eproto

// ===================================================================

class RcptInfoNode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.RcptInfoNode) */ {
 public:
  RcptInfoNode();
  virtual ~RcptInfoNode();

  RcptInfoNode(const RcptInfoNode& from);

  inline RcptInfoNode& operator=(const RcptInfoNode& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RcptInfoNode& default_instance();

  static inline const RcptInfoNode* internal_default_instance() {
    return reinterpret_cast<const RcptInfoNode*>(
               &_RcptInfoNode_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RcptInfoNode* other);

  // implements Message ----------------------------------------------

  inline RcptInfoNode* New() const PROTOBUF_FINAL { return New(NULL); }

  RcptInfoNode* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RcptInfoNode& from);
  void MergeFrom(const RcptInfoNode& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RcptInfoNode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .micromsg.SKBuiltinString_t country = 2;
  bool has_country() const;
  void clear_country();
  static const int kCountryFieldNumber = 2;
  const ::micromsg::SKBuiltinString_t& country() const;
  ::micromsg::SKBuiltinString_t* mutable_country();
  ::micromsg::SKBuiltinString_t* release_country();
  void set_allocated_country(::micromsg::SKBuiltinString_t* country);

  // required .micromsg.SKBuiltinString_t province = 3;
  bool has_province() const;
  void clear_province();
  static const int kProvinceFieldNumber = 3;
  const ::micromsg::SKBuiltinString_t& province() const;
  ::micromsg::SKBuiltinString_t* mutable_province();
  ::micromsg::SKBuiltinString_t* release_province();
  void set_allocated_province(::micromsg::SKBuiltinString_t* province);

  // required .micromsg.SKBuiltinString_t city = 4;
  bool has_city() const;
  void clear_city();
  static const int kCityFieldNumber = 4;
  const ::micromsg::SKBuiltinString_t& city() const;
  ::micromsg::SKBuiltinString_t* mutable_city();
  ::micromsg::SKBuiltinString_t* release_city();
  void set_allocated_city(::micromsg::SKBuiltinString_t* city);

  // required .micromsg.SKBuiltinString_t district = 5;
  bool has_district() const;
  void clear_district();
  static const int kDistrictFieldNumber = 5;
  const ::micromsg::SKBuiltinString_t& district() const;
  ::micromsg::SKBuiltinString_t* mutable_district();
  ::micromsg::SKBuiltinString_t* release_district();
  void set_allocated_district(::micromsg::SKBuiltinString_t* district);

  // required .micromsg.SKBuiltinString_t zipcode = 6;
  bool has_zipcode() const;
  void clear_zipcode();
  static const int kZipcodeFieldNumber = 6;
  const ::micromsg::SKBuiltinString_t& zipcode() const;
  ::micromsg::SKBuiltinString_t* mutable_zipcode();
  ::micromsg::SKBuiltinString_t* release_zipcode();
  void set_allocated_zipcode(::micromsg::SKBuiltinString_t* zipcode);

  // required .micromsg.SKBuiltinString_t detail = 7;
  bool has_detail() const;
  void clear_detail();
  static const int kDetailFieldNumber = 7;
  const ::micromsg::SKBuiltinString_t& detail() const;
  ::micromsg::SKBuiltinString_t* mutable_detail();
  ::micromsg::SKBuiltinString_t* release_detail();
  void set_allocated_detail(::micromsg::SKBuiltinString_t* detail);

  // required .micromsg.SKBuiltinString_t name = 8;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 8;
  const ::micromsg::SKBuiltinString_t& name() const;
  ::micromsg::SKBuiltinString_t* mutable_name();
  ::micromsg::SKBuiltinString_t* release_name();
  void set_allocated_name(::micromsg::SKBuiltinString_t* name);

  // required .micromsg.SKBuiltinString_t phone = 9;
  bool has_phone() const;
  void clear_phone();
  static const int kPhoneFieldNumber = 9;
  const ::micromsg::SKBuiltinString_t& phone() const;
  ::micromsg::SKBuiltinString_t* mutable_phone();
  ::micromsg::SKBuiltinString_t* release_phone();
  void set_allocated_phone(::micromsg::SKBuiltinString_t* phone);

  // optional .micromsg.SKBuiltinString_t nationalcode_gbt2260 = 10;
  bool has_nationalcode_gbt2260() const;
  void clear_nationalcode_gbt2260();
  static const int kNationalcodeGbt2260FieldNumber = 10;
  const ::micromsg::SKBuiltinString_t& nationalcode_gbt2260() const;
  ::micromsg::SKBuiltinString_t* mutable_nationalcode_gbt2260();
  ::micromsg::SKBuiltinString_t* release_nationalcode_gbt2260();
  void set_allocated_nationalcode_gbt2260(::micromsg::SKBuiltinString_t* nationalcode_gbt2260);

  // optional uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.RcptInfoNode)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_country();
  void clear_has_country();
  void set_has_province();
  void clear_has_province();
  void set_has_city();
  void clear_has_city();
  void set_has_district();
  void clear_has_district();
  void set_has_zipcode();
  void clear_has_zipcode();
  void set_has_detail();
  void clear_has_detail();
  void set_has_name();
  void clear_has_name();
  void set_has_phone();
  void clear_has_phone();
  void set_has_nationalcode_gbt2260();
  void clear_has_nationalcode_gbt2260();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::SKBuiltinString_t* country_;
  ::micromsg::SKBuiltinString_t* province_;
  ::micromsg::SKBuiltinString_t* city_;
  ::micromsg::SKBuiltinString_t* district_;
  ::micromsg::SKBuiltinString_t* zipcode_;
  ::micromsg::SKBuiltinString_t* detail_;
  ::micromsg::SKBuiltinString_t* name_;
  ::micromsg::SKBuiltinString_t* phone_;
  ::micromsg::SKBuiltinString_t* nationalcode_gbt2260_;
  ::google::protobuf::uint32 id_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RcptInfoList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.RcptInfoList) */ {
 public:
  RcptInfoList();
  virtual ~RcptInfoList();

  RcptInfoList(const RcptInfoList& from);

  inline RcptInfoList& operator=(const RcptInfoList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RcptInfoList& default_instance();

  static inline const RcptInfoList* internal_default_instance() {
    return reinterpret_cast<const RcptInfoList*>(
               &_RcptInfoList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(RcptInfoList* other);

  // implements Message ----------------------------------------------

  inline RcptInfoList* New() const PROTOBUF_FINAL { return New(NULL); }

  RcptInfoList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RcptInfoList& from);
  void MergeFrom(const RcptInfoList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RcptInfoList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.RcptInfoNode rcptinfolist = 2;
  int rcptinfolist_size() const;
  void clear_rcptinfolist();
  static const int kRcptinfolistFieldNumber = 2;
  const ::micromsg::RcptInfoNode& rcptinfolist(int index) const;
  ::micromsg::RcptInfoNode* mutable_rcptinfolist(int index);
  ::micromsg::RcptInfoNode* add_rcptinfolist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::RcptInfoNode >*
      mutable_rcptinfolist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::RcptInfoNode >&
      rcptinfolist() const;

  // required uint32 count = 1;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // required uint32 timestamp = 3;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.RcptInfoList)
 private:
  void set_has_count();
  void clear_has_count();
  void set_has_timestamp();
  void clear_has_timestamp();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::RcptInfoNode > rcptinfolist_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 timestamp_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RcptInfoAddRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.RcptInfoAddRequest) */ {
 public:
  RcptInfoAddRequest();
  virtual ~RcptInfoAddRequest();

  RcptInfoAddRequest(const RcptInfoAddRequest& from);

  inline RcptInfoAddRequest& operator=(const RcptInfoAddRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RcptInfoAddRequest& default_instance();

  static inline const RcptInfoAddRequest* internal_default_instance() {
    return reinterpret_cast<const RcptInfoAddRequest*>(
               &_RcptInfoAddRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(RcptInfoAddRequest* other);

  // implements Message ----------------------------------------------

  inline RcptInfoAddRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  RcptInfoAddRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RcptInfoAddRequest& from);
  void MergeFrom(const RcptInfoAddRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RcptInfoAddRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.RcptInfoNode rcptinfo = 2;
  bool has_rcptinfo() const;
  void clear_rcptinfo();
  static const int kRcptinfoFieldNumber = 2;
  const ::micromsg::RcptInfoNode& rcptinfo() const;
  ::micromsg::RcptInfoNode* mutable_rcptinfo();
  ::micromsg::RcptInfoNode* release_rcptinfo();
  void set_allocated_rcptinfo(::micromsg::RcptInfoNode* rcptinfo);

  // @@protoc_insertion_point(class_scope:micromsg.RcptInfoAddRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_rcptinfo();
  void clear_has_rcptinfo();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::RcptInfoNode* rcptinfo_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RcptInfoAddResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.RcptInfoAddResponse) */ {
 public:
  RcptInfoAddResponse();
  virtual ~RcptInfoAddResponse();

  RcptInfoAddResponse(const RcptInfoAddResponse& from);

  inline RcptInfoAddResponse& operator=(const RcptInfoAddResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RcptInfoAddResponse& default_instance();

  static inline const RcptInfoAddResponse* internal_default_instance() {
    return reinterpret_cast<const RcptInfoAddResponse*>(
               &_RcptInfoAddResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(RcptInfoAddResponse* other);

  // implements Message ----------------------------------------------

  inline RcptInfoAddResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  RcptInfoAddResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RcptInfoAddResponse& from);
  void MergeFrom(const RcptInfoAddResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RcptInfoAddResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.RcptInfoList rcptinfolist = 1;
  bool has_rcptinfolist() const;
  void clear_rcptinfolist();
  static const int kRcptinfolistFieldNumber = 1;
  const ::micromsg::RcptInfoList& rcptinfolist() const;
  ::micromsg::RcptInfoList* mutable_rcptinfolist();
  ::micromsg::RcptInfoList* release_rcptinfolist();
  void set_allocated_rcptinfolist(::micromsg::RcptInfoList* rcptinfolist);

  // required .micromsg.BaseResponse BaseResponse = 2;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 2;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // @@protoc_insertion_point(class_scope:micromsg.RcptInfoAddResponse)
 private:
  void set_has_rcptinfolist();
  void clear_has_rcptinfolist();
  void set_has_baseresponse();
  void clear_has_baseresponse();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::RcptInfoList* rcptinfolist_;
  ::micromsg::BaseResponse* baseresponse_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RcptInfoRemoveRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.RcptInfoRemoveRequest) */ {
 public:
  RcptInfoRemoveRequest();
  virtual ~RcptInfoRemoveRequest();

  RcptInfoRemoveRequest(const RcptInfoRemoveRequest& from);

  inline RcptInfoRemoveRequest& operator=(const RcptInfoRemoveRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RcptInfoRemoveRequest& default_instance();

  static inline const RcptInfoRemoveRequest* internal_default_instance() {
    return reinterpret_cast<const RcptInfoRemoveRequest*>(
               &_RcptInfoRemoveRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(RcptInfoRemoveRequest* other);

  // implements Message ----------------------------------------------

  inline RcptInfoRemoveRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  RcptInfoRemoveRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RcptInfoRemoveRequest& from);
  void MergeFrom(const RcptInfoRemoveRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RcptInfoRemoveRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.RcptInfoRemoveRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_id();
  void clear_has_id();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 id_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RcptInfoRemoveResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.RcptInfoRemoveResponse) */ {
 public:
  RcptInfoRemoveResponse();
  virtual ~RcptInfoRemoveResponse();

  RcptInfoRemoveResponse(const RcptInfoRemoveResponse& from);

  inline RcptInfoRemoveResponse& operator=(const RcptInfoRemoveResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RcptInfoRemoveResponse& default_instance();

  static inline const RcptInfoRemoveResponse* internal_default_instance() {
    return reinterpret_cast<const RcptInfoRemoveResponse*>(
               &_RcptInfoRemoveResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(RcptInfoRemoveResponse* other);

  // implements Message ----------------------------------------------

  inline RcptInfoRemoveResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  RcptInfoRemoveResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RcptInfoRemoveResponse& from);
  void MergeFrom(const RcptInfoRemoveResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RcptInfoRemoveResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.RcptInfoList rcptinfolist = 2;
  bool has_rcptinfolist() const;
  void clear_rcptinfolist();
  static const int kRcptinfolistFieldNumber = 2;
  const ::micromsg::RcptInfoList& rcptinfolist() const;
  ::micromsg::RcptInfoList* mutable_rcptinfolist();
  ::micromsg::RcptInfoList* release_rcptinfolist();
  void set_allocated_rcptinfolist(::micromsg::RcptInfoList* rcptinfolist);

  // required .micromsg.BaseResponse BaseResponse = 3;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 3;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.RcptInfoRemoveResponse)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_rcptinfolist();
  void clear_has_rcptinfolist();
  void set_has_baseresponse();
  void clear_has_baseresponse();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::RcptInfoList* rcptinfolist_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 id_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RcptInfoQueryRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.RcptInfoQueryRequest) */ {
 public:
  RcptInfoQueryRequest();
  virtual ~RcptInfoQueryRequest();

  RcptInfoQueryRequest(const RcptInfoQueryRequest& from);

  inline RcptInfoQueryRequest& operator=(const RcptInfoQueryRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RcptInfoQueryRequest& default_instance();

  static inline const RcptInfoQueryRequest* internal_default_instance() {
    return reinterpret_cast<const RcptInfoQueryRequest*>(
               &_RcptInfoQueryRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(RcptInfoQueryRequest* other);

  // implements Message ----------------------------------------------

  inline RcptInfoQueryRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  RcptInfoQueryRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RcptInfoQueryRequest& from);
  void MergeFrom(const RcptInfoQueryRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RcptInfoQueryRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string webviewurl = 3;
  bool has_webviewurl() const;
  void clear_webviewurl();
  static const int kWebviewurlFieldNumber = 3;
  const ::std::string& webviewurl() const;
  void set_webviewurl(const ::std::string& value);
  #if LANG_CXX11
  void set_webviewurl(::std::string&& value);
  #endif
  void set_webviewurl(const char* value);
  void set_webviewurl(const char* value, size_t size);
  ::std::string* mutable_webviewurl();
  ::std::string* release_webviewurl();
  void set_allocated_webviewurl(::std::string* webviewurl);

  // optional string appid = 4;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 4;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // optional uint32 scene = 5;
  bool has_scene() const;
  void clear_scene();
  static const int kSceneFieldNumber = 5;
  ::google::protobuf::uint32 scene() const;
  void set_scene(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.RcptInfoQueryRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_webviewurl();
  void clear_has_webviewurl();
  void set_has_appid();
  void clear_has_appid();
  void set_has_scene();
  void clear_has_scene();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr webviewurl_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 timestamp_;
  ::google::protobuf::uint32 scene_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RcptInfoQueryResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.RcptInfoQueryResponse) */ {
 public:
  RcptInfoQueryResponse();
  virtual ~RcptInfoQueryResponse();

  RcptInfoQueryResponse(const RcptInfoQueryResponse& from);

  inline RcptInfoQueryResponse& operator=(const RcptInfoQueryResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RcptInfoQueryResponse& default_instance();

  static inline const RcptInfoQueryResponse* internal_default_instance() {
    return reinterpret_cast<const RcptInfoQueryResponse*>(
               &_RcptInfoQueryResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(RcptInfoQueryResponse* other);

  // implements Message ----------------------------------------------

  inline RcptInfoQueryResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  RcptInfoQueryResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RcptInfoQueryResponse& from);
  void MergeFrom(const RcptInfoQueryResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RcptInfoQueryResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string appusername = 4;
  bool has_appusername() const;
  void clear_appusername();
  static const int kAppusernameFieldNumber = 4;
  const ::std::string& appusername() const;
  void set_appusername(const ::std::string& value);
  #if LANG_CXX11
  void set_appusername(::std::string&& value);
  #endif
  void set_appusername(const char* value);
  void set_appusername(const char* value, size_t size);
  ::std::string* mutable_appusername();
  ::std::string* release_appusername();
  void set_allocated_appusername(::std::string* appusername);

  // optional string appnickname = 6;
  bool has_appnickname() const;
  void clear_appnickname();
  static const int kAppnicknameFieldNumber = 6;
  const ::std::string& appnickname() const;
  void set_appnickname(const ::std::string& value);
  #if LANG_CXX11
  void set_appnickname(::std::string&& value);
  #endif
  void set_appnickname(const char* value);
  void set_appnickname(const char* value, size_t size);
  ::std::string* mutable_appnickname();
  ::std::string* release_appnickname();
  void set_allocated_appnickname(::std::string* appnickname);

  // required .micromsg.RcptInfoList rcptinfolist = 1;
  bool has_rcptinfolist() const;
  void clear_rcptinfolist();
  static const int kRcptinfolistFieldNumber = 1;
  const ::micromsg::RcptInfoList& rcptinfolist() const;
  ::micromsg::RcptInfoList* mutable_rcptinfolist();
  ::micromsg::RcptInfoList* release_rcptinfolist();
  void set_allocated_rcptinfolist(::micromsg::RcptInfoList* rcptinfolist);

  // required .micromsg.BaseResponse BaseResponse = 3;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 3;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 islatest = 2;
  bool has_islatest() const;
  void clear_islatest();
  static const int kIslatestFieldNumber = 2;
  ::google::protobuf::uint32 islatest() const;
  void set_islatest(::google::protobuf::uint32 value);

  // optional uint32 isauthority = 5;
  bool has_isauthority() const;
  void clear_isauthority();
  static const int kIsauthorityFieldNumber = 5;
  ::google::protobuf::uint32 isauthority() const;
  void set_isauthority(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.RcptInfoQueryResponse)
 private:
  void set_has_rcptinfolist();
  void clear_has_rcptinfolist();
  void set_has_islatest();
  void clear_has_islatest();
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_appusername();
  void clear_has_appusername();
  void set_has_isauthority();
  void clear_has_isauthority();
  void set_has_appnickname();
  void clear_has_appnickname();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr appusername_;
  ::google::protobuf::internal::ArenaStringPtr appnickname_;
  ::micromsg::RcptInfoList* rcptinfolist_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 islatest_;
  ::google::protobuf::uint32 isauthority_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RcptInfoUpdateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.RcptInfoUpdateRequest) */ {
 public:
  RcptInfoUpdateRequest();
  virtual ~RcptInfoUpdateRequest();

  RcptInfoUpdateRequest(const RcptInfoUpdateRequest& from);

  inline RcptInfoUpdateRequest& operator=(const RcptInfoUpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RcptInfoUpdateRequest& default_instance();

  static inline const RcptInfoUpdateRequest* internal_default_instance() {
    return reinterpret_cast<const RcptInfoUpdateRequest*>(
               &_RcptInfoUpdateRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(RcptInfoUpdateRequest* other);

  // implements Message ----------------------------------------------

  inline RcptInfoUpdateRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  RcptInfoUpdateRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RcptInfoUpdateRequest& from);
  void MergeFrom(const RcptInfoUpdateRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RcptInfoUpdateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.RcptInfoNode rcptinfo = 2;
  bool has_rcptinfo() const;
  void clear_rcptinfo();
  static const int kRcptinfoFieldNumber = 2;
  const ::micromsg::RcptInfoNode& rcptinfo() const;
  ::micromsg::RcptInfoNode* mutable_rcptinfo();
  ::micromsg::RcptInfoNode* release_rcptinfo();
  void set_allocated_rcptinfo(::micromsg::RcptInfoNode* rcptinfo);

  // @@protoc_insertion_point(class_scope:micromsg.RcptInfoUpdateRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_rcptinfo();
  void clear_has_rcptinfo();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::RcptInfoNode* rcptinfo_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RcptInfoUpdateResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.RcptInfoUpdateResponse) */ {
 public:
  RcptInfoUpdateResponse();
  virtual ~RcptInfoUpdateResponse();

  RcptInfoUpdateResponse(const RcptInfoUpdateResponse& from);

  inline RcptInfoUpdateResponse& operator=(const RcptInfoUpdateResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RcptInfoUpdateResponse& default_instance();

  static inline const RcptInfoUpdateResponse* internal_default_instance() {
    return reinterpret_cast<const RcptInfoUpdateResponse*>(
               &_RcptInfoUpdateResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(RcptInfoUpdateResponse* other);

  // implements Message ----------------------------------------------

  inline RcptInfoUpdateResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  RcptInfoUpdateResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RcptInfoUpdateResponse& from);
  void MergeFrom(const RcptInfoUpdateResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RcptInfoUpdateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.RcptInfoList rcptinfolist = 1;
  bool has_rcptinfolist() const;
  void clear_rcptinfolist();
  static const int kRcptinfolistFieldNumber = 1;
  const ::micromsg::RcptInfoList& rcptinfolist() const;
  ::micromsg::RcptInfoList* mutable_rcptinfolist();
  ::micromsg::RcptInfoList* release_rcptinfolist();
  void set_allocated_rcptinfolist(::micromsg::RcptInfoList* rcptinfolist);

  // required .micromsg.BaseResponse BaseResponse = 2;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 2;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // @@protoc_insertion_point(class_scope:micromsg.RcptInfoUpdateResponse)
 private:
  void set_has_rcptinfolist();
  void clear_has_rcptinfolist();
  void set_has_baseresponse();
  void clear_has_baseresponse();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::RcptInfoList* rcptinfolist_;
  ::micromsg::BaseResponse* baseresponse_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RcptInfoTouchRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.RcptInfoTouchRequest) */ {
 public:
  RcptInfoTouchRequest();
  virtual ~RcptInfoTouchRequest();

  RcptInfoTouchRequest(const RcptInfoTouchRequest& from);

  inline RcptInfoTouchRequest& operator=(const RcptInfoTouchRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RcptInfoTouchRequest& default_instance();

  static inline const RcptInfoTouchRequest* internal_default_instance() {
    return reinterpret_cast<const RcptInfoTouchRequest*>(
               &_RcptInfoTouchRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(RcptInfoTouchRequest* other);

  // implements Message ----------------------------------------------

  inline RcptInfoTouchRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  RcptInfoTouchRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RcptInfoTouchRequest& from);
  void MergeFrom(const RcptInfoTouchRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RcptInfoTouchRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.RcptInfoTouchRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_id();
  void clear_has_id();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 id_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RcptInfoTouchResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.RcptInfoTouchResponse) */ {
 public:
  RcptInfoTouchResponse();
  virtual ~RcptInfoTouchResponse();

  RcptInfoTouchResponse(const RcptInfoTouchResponse& from);

  inline RcptInfoTouchResponse& operator=(const RcptInfoTouchResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RcptInfoTouchResponse& default_instance();

  static inline const RcptInfoTouchResponse* internal_default_instance() {
    return reinterpret_cast<const RcptInfoTouchResponse*>(
               &_RcptInfoTouchResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(RcptInfoTouchResponse* other);

  // implements Message ----------------------------------------------

  inline RcptInfoTouchResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  RcptInfoTouchResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RcptInfoTouchResponse& from);
  void MergeFrom(const RcptInfoTouchResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RcptInfoTouchResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.RcptInfoList rcptinfolist = 1;
  bool has_rcptinfolist() const;
  void clear_rcptinfolist();
  static const int kRcptinfolistFieldNumber = 1;
  const ::micromsg::RcptInfoList& rcptinfolist() const;
  ::micromsg::RcptInfoList* mutable_rcptinfolist();
  ::micromsg::RcptInfoList* release_rcptinfolist();
  void set_allocated_rcptinfolist(::micromsg::RcptInfoList* rcptinfolist);

  // required .micromsg.BaseResponse BaseResponse = 2;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 2;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // @@protoc_insertion_point(class_scope:micromsg.RcptInfoTouchResponse)
 private:
  void set_has_rcptinfolist();
  void clear_has_rcptinfolist();
  void set_has_baseresponse();
  void clear_has_baseresponse();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::RcptInfoList* rcptinfolist_;
  ::micromsg::BaseResponse* baseresponse_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RcptInfoImportYiXunRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.RcptInfoImportYiXunRequest) */ {
 public:
  RcptInfoImportYiXunRequest();
  virtual ~RcptInfoImportYiXunRequest();

  RcptInfoImportYiXunRequest(const RcptInfoImportYiXunRequest& from);

  inline RcptInfoImportYiXunRequest& operator=(const RcptInfoImportYiXunRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RcptInfoImportYiXunRequest& default_instance();

  static inline const RcptInfoImportYiXunRequest* internal_default_instance() {
    return reinterpret_cast<const RcptInfoImportYiXunRequest*>(
               &_RcptInfoImportYiXunRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(RcptInfoImportYiXunRequest* other);

  // implements Message ----------------------------------------------

  inline RcptInfoImportYiXunRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  RcptInfoImportYiXunRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RcptInfoImportYiXunRequest& from);
  void MergeFrom(const RcptInfoImportYiXunRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RcptInfoImportYiXunRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // optional .micromsg.SKBuiltinBuffer_t A2Key = 3;
  bool has_a2key() const;
  void clear_a2key();
  static const int kA2KeyFieldNumber = 3;
  const ::micromsg::SKBuiltinBuffer_t& a2key() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_a2key();
  ::micromsg::SKBuiltinBuffer_t* release_a2key();
  void set_allocated_a2key(::micromsg::SKBuiltinBuffer_t* a2key);

  // optional .micromsg.SKBuiltinBuffer_t NewA2Key = 4;
  bool has_newa2key() const;
  void clear_newa2key();
  static const int kNewA2KeyFieldNumber = 4;
  const ::micromsg::SKBuiltinBuffer_t& newa2key() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_newa2key();
  ::micromsg::SKBuiltinBuffer_t* release_newa2key();
  void set_allocated_newa2key(::micromsg::SKBuiltinBuffer_t* newa2key);

  // required uint32 qq = 2;
  bool has_qq() const;
  void clear_qq();
  static const int kQqFieldNumber = 2;
  ::google::protobuf::uint32 qq() const;
  void set_qq(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.RcptInfoImportYiXunRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_qq();
  void clear_has_qq();
  void set_has_a2key();
  void clear_has_a2key();
  void set_has_newa2key();
  void clear_has_newa2key();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::SKBuiltinBuffer_t* a2key_;
  ::micromsg::SKBuiltinBuffer_t* newa2key_;
  ::google::protobuf::uint32 qq_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RcptInfoImportYiXunResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.RcptInfoImportYiXunResponse) */ {
 public:
  RcptInfoImportYiXunResponse();
  virtual ~RcptInfoImportYiXunResponse();

  RcptInfoImportYiXunResponse(const RcptInfoImportYiXunResponse& from);

  inline RcptInfoImportYiXunResponse& operator=(const RcptInfoImportYiXunResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RcptInfoImportYiXunResponse& default_instance();

  static inline const RcptInfoImportYiXunResponse* internal_default_instance() {
    return reinterpret_cast<const RcptInfoImportYiXunResponse*>(
               &_RcptInfoImportYiXunResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(RcptInfoImportYiXunResponse* other);

  // implements Message ----------------------------------------------

  inline RcptInfoImportYiXunResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  RcptInfoImportYiXunResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RcptInfoImportYiXunResponse& from);
  void MergeFrom(const RcptInfoImportYiXunResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RcptInfoImportYiXunResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.RcptInfoList rcptinfolist = 1;
  bool has_rcptinfolist() const;
  void clear_rcptinfolist();
  static const int kRcptinfolistFieldNumber = 1;
  const ::micromsg::RcptInfoList& rcptinfolist() const;
  ::micromsg::RcptInfoList* mutable_rcptinfolist();
  ::micromsg::RcptInfoList* release_rcptinfolist();
  void set_allocated_rcptinfolist(::micromsg::RcptInfoList* rcptinfolist);

  // required .micromsg.BaseResponse BaseResponse = 3;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 3;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required int32 rcptinfoimportstatus = 2;
  bool has_rcptinfoimportstatus() const;
  void clear_rcptinfoimportstatus();
  static const int kRcptinfoimportstatusFieldNumber = 2;
  ::google::protobuf::int32 rcptinfoimportstatus() const;
  void set_rcptinfoimportstatus(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.RcptInfoImportYiXunResponse)
 private:
  void set_has_rcptinfolist();
  void clear_has_rcptinfolist();
  void set_has_rcptinfoimportstatus();
  void clear_has_rcptinfoimportstatus();
  void set_has_baseresponse();
  void clear_has_baseresponse();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::RcptInfoList* rcptinfolist_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::int32 rcptinfoimportstatus_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GenBizIapPrepayRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GenBizIapPrepayRequest) */ {
 public:
  GenBizIapPrepayRequest();
  virtual ~GenBizIapPrepayRequest();

  GenBizIapPrepayRequest(const GenBizIapPrepayRequest& from);

  inline GenBizIapPrepayRequest& operator=(const GenBizIapPrepayRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GenBizIapPrepayRequest& default_instance();

  static inline const GenBizIapPrepayRequest* internal_default_instance() {
    return reinterpret_cast<const GenBizIapPrepayRequest*>(
               &_GenBizIapPrepayRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(GenBizIapPrepayRequest* other);

  // implements Message ----------------------------------------------

  inline GenBizIapPrepayRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GenBizIapPrepayRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GenBizIapPrepayRequest& from);
  void MergeFrom(const GenBizIapPrepayRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GenBizIapPrepayRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string AppId = 2;
  bool has_appid() const;
  void clear_appid();
  static const int kAppIdFieldNumber = 2;
  const ::std::string& appid() const;
  void set_appid(const ::std::string& value);
  #if LANG_CXX11
  void set_appid(::std::string&& value);
  #endif
  void set_appid(const char* value);
  void set_appid(const char* value, size_t size);
  ::std::string* mutable_appid();
  ::std::string* release_appid();
  void set_allocated_appid(::std::string* appid);

  // optional string NonceStr = 3;
  bool has_noncestr() const;
  void clear_noncestr();
  static const int kNonceStrFieldNumber = 3;
  const ::std::string& noncestr() const;
  void set_noncestr(const ::std::string& value);
  #if LANG_CXX11
  void set_noncestr(::std::string&& value);
  #endif
  void set_noncestr(const char* value);
  void set_noncestr(const char* value, size_t size);
  ::std::string* mutable_noncestr();
  ::std::string* release_noncestr();
  void set_allocated_noncestr(::std::string* noncestr);

  // optional string TimeStamp = 4;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimeStampFieldNumber = 4;
  const ::std::string& timestamp() const;
  void set_timestamp(const ::std::string& value);
  #if LANG_CXX11
  void set_timestamp(::std::string&& value);
  #endif
  void set_timestamp(const char* value);
  void set_timestamp(const char* value, size_t size);
  ::std::string* mutable_timestamp();
  ::std::string* release_timestamp();
  void set_allocated_timestamp(::std::string* timestamp);

  // optional string Package = 5;
  bool has_package() const;
  void clear_package();
  static const int kPackageFieldNumber = 5;
  const ::std::string& package() const;
  void set_package(const ::std::string& value);
  #if LANG_CXX11
  void set_package(::std::string&& value);
  #endif
  void set_package(const char* value);
  void set_package(const char* value, size_t size);
  ::std::string* mutable_package();
  ::std::string* release_package();
  void set_allocated_package(::std::string* package);

  // optional string PaySign = 6;
  bool has_paysign() const;
  void clear_paysign();
  static const int kPaySignFieldNumber = 6;
  const ::std::string& paysign() const;
  void set_paysign(const ::std::string& value);
  #if LANG_CXX11
  void set_paysign(::std::string&& value);
  #endif
  void set_paysign(const char* value);
  void set_paysign(const char* value, size_t size);
  ::std::string* mutable_paysign();
  ::std::string* release_paysign();
  void set_allocated_paysign(::std::string* paysign);

  // optional string SignType = 7;
  bool has_signtype() const;
  void clear_signtype();
  static const int kSignTypeFieldNumber = 7;
  const ::std::string& signtype() const;
  void set_signtype(const ::std::string& value);
  #if LANG_CXX11
  void set_signtype(::std::string&& value);
  #endif
  void set_signtype(const char* value);
  void set_signtype(const char* value, size_t size);
  ::std::string* mutable_signtype();
  ::std::string* release_signtype();
  void set_allocated_signtype(::std::string* signtype);

  // optional string StepInUrl = 8;
  bool has_stepinurl() const;
  void clear_stepinurl();
  static const int kStepInUrlFieldNumber = 8;
  const ::std::string& stepinurl() const;
  void set_stepinurl(const ::std::string& value);
  #if LANG_CXX11
  void set_stepinurl(::std::string&& value);
  #endif
  void set_stepinurl(const char* value);
  void set_stepinurl(const char* value, size_t size);
  ::std::string* mutable_stepinurl();
  ::std::string* release_stepinurl();
  void set_allocated_stepinurl(::std::string* stepinurl);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // @@protoc_insertion_point(class_scope:micromsg.GenBizIapPrepayRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_appid();
  void clear_has_appid();
  void set_has_noncestr();
  void clear_has_noncestr();
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_package();
  void clear_has_package();
  void set_has_paysign();
  void clear_has_paysign();
  void set_has_signtype();
  void clear_has_signtype();
  void set_has_stepinurl();
  void clear_has_stepinurl();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr appid_;
  ::google::protobuf::internal::ArenaStringPtr noncestr_;
  ::google::protobuf::internal::ArenaStringPtr timestamp_;
  ::google::protobuf::internal::ArenaStringPtr package_;
  ::google::protobuf::internal::ArenaStringPtr paysign_;
  ::google::protobuf::internal::ArenaStringPtr signtype_;
  ::google::protobuf::internal::ArenaStringPtr stepinurl_;
  ::micromsg::BaseRequest* baserequest_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GenBizIapPrepayResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GenBizIapPrepayResponse) */ {
 public:
  GenBizIapPrepayResponse();
  virtual ~GenBizIapPrepayResponse();

  GenBizIapPrepayResponse(const GenBizIapPrepayResponse& from);

  inline GenBizIapPrepayResponse& operator=(const GenBizIapPrepayResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GenBizIapPrepayResponse& default_instance();

  static inline const GenBizIapPrepayResponse* internal_default_instance() {
    return reinterpret_cast<const GenBizIapPrepayResponse*>(
               &_GenBizIapPrepayResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(GenBizIapPrepayResponse* other);

  // implements Message ----------------------------------------------

  inline GenBizIapPrepayResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GenBizIapPrepayResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GenBizIapPrepayResponse& from);
  void MergeFrom(const GenBizIapPrepayResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GenBizIapPrepayResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ProductId = 2;
  bool has_productid() const;
  void clear_productid();
  static const int kProductIdFieldNumber = 2;
  const ::std::string& productid() const;
  void set_productid(const ::std::string& value);
  #if LANG_CXX11
  void set_productid(::std::string&& value);
  #endif
  void set_productid(const char* value);
  void set_productid(const char* value, size_t size);
  ::std::string* mutable_productid();
  ::std::string* release_productid();
  void set_allocated_productid(::std::string* productid);

  // optional string ExtInfo = 4;
  bool has_extinfo() const;
  void clear_extinfo();
  static const int kExtInfoFieldNumber = 4;
  const ::std::string& extinfo() const;
  void set_extinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_extinfo(::std::string&& value);
  #endif
  void set_extinfo(const char* value);
  void set_extinfo(const char* value, size_t size);
  ::std::string* mutable_extinfo();
  ::std::string* release_extinfo();
  void set_allocated_extinfo(::std::string* extinfo);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // @@protoc_insertion_point(class_scope:micromsg.GenBizIapPrepayResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_productid();
  void clear_has_productid();
  void set_has_extinfo();
  void clear_has_extinfo();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr productid_;
  ::google::protobuf::internal::ArenaStringPtr extinfo_;
  ::micromsg::BaseResponse* baseresponse_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetBizIapPayResultRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetBizIapPayResultRequest) */ {
 public:
  GetBizIapPayResultRequest();
  virtual ~GetBizIapPayResultRequest();

  GetBizIapPayResultRequest(const GetBizIapPayResultRequest& from);

  inline GetBizIapPayResultRequest& operator=(const GetBizIapPayResultRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBizIapPayResultRequest& default_instance();

  static inline const GetBizIapPayResultRequest* internal_default_instance() {
    return reinterpret_cast<const GetBizIapPayResultRequest*>(
               &_GetBizIapPayResultRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(GetBizIapPayResultRequest* other);

  // implements Message ----------------------------------------------

  inline GetBizIapPayResultRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetBizIapPayResultRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetBizIapPayResultRequest& from);
  void MergeFrom(const GetBizIapPayResultRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetBizIapPayResultRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string SerialId = 2;
  bool has_serialid() const;
  void clear_serialid();
  static const int kSerialIdFieldNumber = 2;
  const ::std::string& serialid() const;
  void set_serialid(const ::std::string& value);
  #if LANG_CXX11
  void set_serialid(::std::string&& value);
  #endif
  void set_serialid(const char* value);
  void set_serialid(const char* value, size_t size);
  ::std::string* mutable_serialid();
  ::std::string* release_serialid();
  void set_allocated_serialid(::std::string* serialid);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // @@protoc_insertion_point(class_scope:micromsg.GetBizIapPayResultRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_serialid();
  void clear_has_serialid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr serialid_;
  ::micromsg::BaseRequest* baserequest_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetBizIapPayResultResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetBizIapPayResultResponse) */ {
 public:
  GetBizIapPayResultResponse();
  virtual ~GetBizIapPayResultResponse();

  GetBizIapPayResultResponse(const GetBizIapPayResultResponse& from);

  inline GetBizIapPayResultResponse& operator=(const GetBizIapPayResultResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBizIapPayResultResponse& default_instance();

  static inline const GetBizIapPayResultResponse* internal_default_instance() {
    return reinterpret_cast<const GetBizIapPayResultResponse*>(
               &_GetBizIapPayResultResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(GetBizIapPayResultResponse* other);

  // implements Message ----------------------------------------------

  inline GetBizIapPayResultResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetBizIapPayResultResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetBizIapPayResultResponse& from);
  void MergeFrom(const GetBizIapPayResultResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetBizIapPayResultResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string DetailBuff = 2;
  bool has_detailbuff() const;
  void clear_detailbuff();
  static const int kDetailBuffFieldNumber = 2;
  const ::std::string& detailbuff() const;
  void set_detailbuff(const ::std::string& value);
  #if LANG_CXX11
  void set_detailbuff(::std::string&& value);
  #endif
  void set_detailbuff(const char* value);
  void set_detailbuff(const char* value, size_t size);
  ::std::string* mutable_detailbuff();
  ::std::string* release_detailbuff();
  void set_allocated_detailbuff(::std::string* detailbuff);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // @@protoc_insertion_point(class_scope:micromsg.GetBizIapPayResultResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_detailbuff();
  void clear_has_detailbuff();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr detailbuff_;
  ::micromsg::BaseResponse* baseresponse_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetBizIapDetailRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetBizIapDetailRequest) */ {
 public:
  GetBizIapDetailRequest();
  virtual ~GetBizIapDetailRequest();

  GetBizIapDetailRequest(const GetBizIapDetailRequest& from);

  inline GetBizIapDetailRequest& operator=(const GetBizIapDetailRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBizIapDetailRequest& default_instance();

  static inline const GetBizIapDetailRequest* internal_default_instance() {
    return reinterpret_cast<const GetBizIapDetailRequest*>(
               &_GetBizIapDetailRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(GetBizIapDetailRequest* other);

  // implements Message ----------------------------------------------

  inline GetBizIapDetailRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetBizIapDetailRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetBizIapDetailRequest& from);
  void MergeFrom(const GetBizIapDetailRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetBizIapDetailRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string SerialId = 3;
  bool has_serialid() const;
  void clear_serialid();
  static const int kSerialIdFieldNumber = 3;
  const ::std::string& serialid() const;
  void set_serialid(const ::std::string& value);
  #if LANG_CXX11
  void set_serialid(::std::string&& value);
  #endif
  void set_serialid(const char* value);
  void set_serialid(const char* value, size_t size);
  ::std::string* mutable_serialid();
  ::std::string* release_serialid();
  void set_allocated_serialid(::std::string* serialid);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // @@protoc_insertion_point(class_scope:micromsg.GetBizIapDetailRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_serialid();
  void clear_has_serialid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr serialid_;
  ::micromsg::BaseRequest* baserequest_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetBizIapDetailResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetBizIapDetailResponse) */ {
 public:
  GetBizIapDetailResponse();
  virtual ~GetBizIapDetailResponse();

  GetBizIapDetailResponse(const GetBizIapDetailResponse& from);

  inline GetBizIapDetailResponse& operator=(const GetBizIapDetailResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBizIapDetailResponse& default_instance();

  static inline const GetBizIapDetailResponse* internal_default_instance() {
    return reinterpret_cast<const GetBizIapDetailResponse*>(
               &_GetBizIapDetailResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(GetBizIapDetailResponse* other);

  // implements Message ----------------------------------------------

  inline GetBizIapDetailResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetBizIapDetailResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetBizIapDetailResponse& from);
  void MergeFrom(const GetBizIapDetailResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetBizIapDetailResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string DetailBuff = 2;
  bool has_detailbuff() const;
  void clear_detailbuff();
  static const int kDetailBuffFieldNumber = 2;
  const ::std::string& detailbuff() const;
  void set_detailbuff(const ::std::string& value);
  #if LANG_CXX11
  void set_detailbuff(::std::string&& value);
  #endif
  void set_detailbuff(const char* value);
  void set_detailbuff(const char* value, size_t size);
  ::std::string* mutable_detailbuff();
  ::std::string* release_detailbuff();
  void set_allocated_detailbuff(::std::string* detailbuff);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // @@protoc_insertion_point(class_scope:micromsg.GetBizIapDetailResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_detailbuff();
  void clear_has_detailbuff();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr detailbuff_;
  ::micromsg::BaseResponse* baseresponse_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetProductDetailRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetProductDetailRequest) */ {
 public:
  GetProductDetailRequest();
  virtual ~GetProductDetailRequest();

  GetProductDetailRequest(const GetProductDetailRequest& from);

  inline GetProductDetailRequest& operator=(const GetProductDetailRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetProductDetailRequest& default_instance();

  static inline const GetProductDetailRequest* internal_default_instance() {
    return reinterpret_cast<const GetProductDetailRequest*>(
               &_GetProductDetailRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(GetProductDetailRequest* other);

  // implements Message ----------------------------------------------

  inline GetProductDetailRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetProductDetailRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetProductDetailRequest& from);
  void MergeFrom(const GetProductDetailRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetProductDetailRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  const ::std::string& pid() const;
  void set_pid(const ::std::string& value);
  #if LANG_CXX11
  void set_pid(::std::string&& value);
  #endif
  void set_pid(const char* value);
  void set_pid(const char* value, size_t size);
  ::std::string* mutable_pid();
  ::std::string* release_pid();
  void set_allocated_pid(::std::string* pid);

  // optional string ScanCode = 4;
  bool has_scancode() const;
  void clear_scancode();
  static const int kScanCodeFieldNumber = 4;
  const ::std::string& scancode() const;
  void set_scancode(const ::std::string& value);
  #if LANG_CXX11
  void set_scancode(::std::string&& value);
  #endif
  void set_scancode(const char* value);
  void set_scancode(const char* value, size_t size);
  ::std::string* mutable_scancode();
  ::std::string* release_scancode();
  void set_allocated_scancode(::std::string* scancode);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // optional uint32 Version = 3;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetProductDetailRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_pid();
  void clear_has_pid();
  void set_has_version();
  void clear_has_version();
  void set_has_scancode();
  void clear_has_scancode();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr pid_;
  ::google::protobuf::internal::ArenaStringPtr scancode_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 version_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetProductDetailResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetProductDetailResponse) */ {
 public:
  GetProductDetailResponse();
  virtual ~GetProductDetailResponse();

  GetProductDetailResponse(const GetProductDetailResponse& from);

  inline GetProductDetailResponse& operator=(const GetProductDetailResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetProductDetailResponse& default_instance();

  static inline const GetProductDetailResponse* internal_default_instance() {
    return reinterpret_cast<const GetProductDetailResponse*>(
               &_GetProductDetailResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(GetProductDetailResponse* other);

  // implements Message ----------------------------------------------

  inline GetProductDetailResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetProductDetailResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetProductDetailResponse& from);
  void MergeFrom(const GetProductDetailResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetProductDetailResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ProductInfo = 2;
  bool has_productinfo() const;
  void clear_productinfo();
  static const int kProductInfoFieldNumber = 2;
  const ::std::string& productinfo() const;
  void set_productinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_productinfo(::std::string&& value);
  #endif
  void set_productinfo(const char* value);
  void set_productinfo(const char* value, size_t size);
  ::std::string* mutable_productinfo();
  ::std::string* release_productinfo();
  void set_allocated_productinfo(::std::string* productinfo);

  // optional string RetMsg = 4;
  bool has_retmsg() const;
  void clear_retmsg();
  static const int kRetMsgFieldNumber = 4;
  const ::std::string& retmsg() const;
  void set_retmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_retmsg(::std::string&& value);
  #endif
  void set_retmsg(const char* value);
  void set_retmsg(const char* value, size_t size);
  ::std::string* mutable_retmsg();
  ::std::string* release_retmsg();
  void set_allocated_retmsg(::std::string* retmsg);

  // optional string RecommendInfo = 5;
  bool has_recommendinfo() const;
  void clear_recommendinfo();
  static const int kRecommendInfoFieldNumber = 5;
  const ::std::string& recommendinfo() const;
  void set_recommendinfo(const ::std::string& value);
  #if LANG_CXX11
  void set_recommendinfo(::std::string&& value);
  #endif
  void set_recommendinfo(const char* value);
  void set_recommendinfo(const char* value, size_t size);
  ::std::string* mutable_recommendinfo();
  ::std::string* release_recommendinfo();
  void set_allocated_recommendinfo(::std::string* recommendinfo);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // optional int32 RetCode = 3;
  bool has_retcode() const;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 3;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetProductDetailResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_productinfo();
  void clear_has_productinfo();
  void set_has_retcode();
  void clear_has_retcode();
  void set_has_retmsg();
  void clear_has_retmsg();
  void set_has_recommendinfo();
  void clear_has_recommendinfo();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr productinfo_;
  ::google::protobuf::internal::ArenaStringPtr retmsg_;
  ::google::protobuf::internal::ArenaStringPtr recommendinfo_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::int32 retcode_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LockStockRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.LockStockRequest) */ {
 public:
  LockStockRequest();
  virtual ~LockStockRequest();

  LockStockRequest(const LockStockRequest& from);

  inline LockStockRequest& operator=(const LockStockRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LockStockRequest& default_instance();

  static inline const LockStockRequest* internal_default_instance() {
    return reinterpret_cast<const LockStockRequest*>(
               &_LockStockRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(LockStockRequest* other);

  // implements Message ----------------------------------------------

  inline LockStockRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  LockStockRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LockStockRequest& from);
  void MergeFrom(const LockStockRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LockStockRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  const ::std::string& pid() const;
  void set_pid(const ::std::string& value);
  #if LANG_CXX11
  void set_pid(::std::string&& value);
  #endif
  void set_pid(const char* value);
  void set_pid(const char* value, size_t size);
  ::std::string* mutable_pid();
  ::std::string* release_pid();
  void set_allocated_pid(::std::string* pid);

  // optional string SkuId = 3;
  bool has_skuid() const;
  void clear_skuid();
  static const int kSkuIdFieldNumber = 3;
  const ::std::string& skuid() const;
  void set_skuid(const ::std::string& value);
  #if LANG_CXX11
  void set_skuid(::std::string&& value);
  #endif
  void set_skuid(const char* value);
  void set_skuid(const char* value, size_t size);
  ::std::string* mutable_skuid();
  ::std::string* release_skuid();
  void set_allocated_skuid(::std::string* skuid);

  // optional string Url = 5;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 5;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // optional uint32 Count = 4;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 4;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.LockStockRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_pid();
  void clear_has_pid();
  void set_has_skuid();
  void clear_has_skuid();
  void set_has_count();
  void clear_has_count();
  void set_has_url();
  void clear_has_url();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr pid_;
  ::google::protobuf::internal::ArenaStringPtr skuid_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 count_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LockStockResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.LockStockResponse) */ {
 public:
  LockStockResponse();
  virtual ~LockStockResponse();

  LockStockResponse(const LockStockResponse& from);

  inline LockStockResponse& operator=(const LockStockResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LockStockResponse& default_instance();

  static inline const LockStockResponse* internal_default_instance() {
    return reinterpret_cast<const LockStockResponse*>(
               &_LockStockResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(LockStockResponse* other);

  // implements Message ----------------------------------------------

  inline LockStockResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  LockStockResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LockStockResponse& from);
  void MergeFrom(const LockStockResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LockStockResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // optional uint32 LockId = 2;
  bool has_lockid() const;
  void clear_lockid();
  static const int kLockIdFieldNumber = 2;
  ::google::protobuf::uint32 lockid() const;
  void set_lockid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.LockStockResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_lockid();
  void clear_has_lockid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 lockid_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnlockStockRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.UnlockStockRequest) */ {
 public:
  UnlockStockRequest();
  virtual ~UnlockStockRequest();

  UnlockStockRequest(const UnlockStockRequest& from);

  inline UnlockStockRequest& operator=(const UnlockStockRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnlockStockRequest& default_instance();

  static inline const UnlockStockRequest* internal_default_instance() {
    return reinterpret_cast<const UnlockStockRequest*>(
               &_UnlockStockRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(UnlockStockRequest* other);

  // implements Message ----------------------------------------------

  inline UnlockStockRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  UnlockStockRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnlockStockRequest& from);
  void MergeFrom(const UnlockStockRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnlockStockRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Pid = 2;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 2;
  const ::std::string& pid() const;
  void set_pid(const ::std::string& value);
  #if LANG_CXX11
  void set_pid(::std::string&& value);
  #endif
  void set_pid(const char* value);
  void set_pid(const char* value, size_t size);
  ::std::string* mutable_pid();
  ::std::string* release_pid();
  void set_allocated_pid(::std::string* pid);

  // optional string SkuId = 3;
  bool has_skuid() const;
  void clear_skuid();
  static const int kSkuIdFieldNumber = 3;
  const ::std::string& skuid() const;
  void set_skuid(const ::std::string& value);
  #if LANG_CXX11
  void set_skuid(::std::string&& value);
  #endif
  void set_skuid(const char* value);
  void set_skuid(const char* value, size_t size);
  ::std::string* mutable_skuid();
  ::std::string* release_skuid();
  void set_allocated_skuid(::std::string* skuid);

  // optional string Url = 5;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 5;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // optional uint32 Count = 4;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 4;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.UnlockStockRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_pid();
  void clear_has_pid();
  void set_has_skuid();
  void clear_has_skuid();
  void set_has_count();
  void clear_has_count();
  void set_has_url();
  void clear_has_url();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr pid_;
  ::google::protobuf::internal::ArenaStringPtr skuid_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 count_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnlockStockResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.UnlockStockResponse) */ {
 public:
  UnlockStockResponse();
  virtual ~UnlockStockResponse();

  UnlockStockResponse(const UnlockStockResponse& from);

  inline UnlockStockResponse& operator=(const UnlockStockResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnlockStockResponse& default_instance();

  static inline const UnlockStockResponse* internal_default_instance() {
    return reinterpret_cast<const UnlockStockResponse*>(
               &_UnlockStockResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(UnlockStockResponse* other);

  // implements Message ----------------------------------------------

  inline UnlockStockResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  UnlockStockResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnlockStockResponse& from);
  void MergeFrom(const UnlockStockResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnlockStockResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // optional uint32 LockId = 2;
  bool has_lockid() const;
  void clear_lockid();
  static const int kLockIdFieldNumber = 2;
  ::google::protobuf::uint32 lockid() const;
  void set_lockid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.UnlockStockResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_lockid();
  void clear_has_lockid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 lockid_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class KVItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.KVItem) */ {
 public:
  KVItem();
  virtual ~KVItem();

  KVItem(const KVItem& from);

  inline KVItem& operator=(const KVItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KVItem& default_instance();

  static inline const KVItem* internal_default_instance() {
    return reinterpret_cast<const KVItem*>(
               &_KVItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(KVItem* other);

  // implements Message ----------------------------------------------

  inline KVItem* New() const PROTOBUF_FINAL { return New(NULL); }

  KVItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KVItem& from);
  void MergeFrom(const KVItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KVItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional string Value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:micromsg.KVItem)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Express : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.Express) */ {
 public:
  Express();
  virtual ~Express();

  Express(const Express& from);

  inline Express& operator=(const Express& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Express& default_instance();

  static inline const Express* internal_default_instance() {
    return reinterpret_cast<const Express*>(
               &_Express_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(Express* other);

  // implements Message ----------------------------------------------

  inline Express* New() const PROTOBUF_FINAL { return New(NULL); }

  Express* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Express& from);
  void MergeFrom(const Express& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Express* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string PriceType = 3;
  bool has_pricetype() const;
  void clear_pricetype();
  static const int kPriceTypeFieldNumber = 3;
  const ::std::string& pricetype() const;
  void set_pricetype(const ::std::string& value);
  #if LANG_CXX11
  void set_pricetype(::std::string&& value);
  #endif
  void set_pricetype(const char* value);
  void set_pricetype(const char* value, size_t size);
  ::std::string* mutable_pricetype();
  ::std::string* release_pricetype();
  void set_allocated_pricetype(::std::string* pricetype);

  // optional uint32 Price = 2;
  bool has_price() const;
  void clear_price();
  static const int kPriceFieldNumber = 2;
  ::google::protobuf::uint32 price() const;
  void set_price(::google::protobuf::uint32 value);

  // optional uint32 Id = 4;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 4;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.Express)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_price();
  void clear_has_price();
  void set_has_pricetype();
  void clear_has_pricetype();
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr pricetype_;
  ::google::protobuf::uint32 price_;
  ::google::protobuf::uint32 id_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Address : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.Address) */ {
 public:
  Address();
  virtual ~Address();

  Address(const Address& from);

  inline Address& operator=(const Address& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Address& default_instance();

  static inline const Address* internal_default_instance() {
    return reinterpret_cast<const Address*>(
               &_Address_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(Address* other);

  // implements Message ----------------------------------------------

  inline Address* New() const PROTOBUF_FINAL { return New(NULL); }

  Address* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Address& from);
  void MergeFrom(const Address& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Address* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Country = 1;
  bool has_country() const;
  void clear_country();
  static const int kCountryFieldNumber = 1;
  const ::std::string& country() const;
  void set_country(const ::std::string& value);
  #if LANG_CXX11
  void set_country(::std::string&& value);
  #endif
  void set_country(const char* value);
  void set_country(const char* value, size_t size);
  ::std::string* mutable_country();
  ::std::string* release_country();
  void set_allocated_country(::std::string* country);

  // optional string Province = 2;
  bool has_province() const;
  void clear_province();
  static const int kProvinceFieldNumber = 2;
  const ::std::string& province() const;
  void set_province(const ::std::string& value);
  #if LANG_CXX11
  void set_province(::std::string&& value);
  #endif
  void set_province(const char* value);
  void set_province(const char* value, size_t size);
  ::std::string* mutable_province();
  ::std::string* release_province();
  void set_allocated_province(::std::string* province);

  // optional string City = 3;
  bool has_city() const;
  void clear_city();
  static const int kCityFieldNumber = 3;
  const ::std::string& city() const;
  void set_city(const ::std::string& value);
  #if LANG_CXX11
  void set_city(::std::string&& value);
  #endif
  void set_city(const char* value);
  void set_city(const char* value, size_t size);
  ::std::string* mutable_city();
  ::std::string* release_city();
  void set_allocated_city(::std::string* city);

  // optional string Detail = 4;
  bool has_detail() const;
  void clear_detail();
  static const int kDetailFieldNumber = 4;
  const ::std::string& detail() const;
  void set_detail(const ::std::string& value);
  #if LANG_CXX11
  void set_detail(::std::string&& value);
  #endif
  void set_detail(const char* value);
  void set_detail(const char* value, size_t size);
  ::std::string* mutable_detail();
  ::std::string* release_detail();
  void set_allocated_detail(::std::string* detail);

  // optional string UserName = 5;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 5;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string Tel = 6;
  bool has_tel() const;
  void clear_tel();
  static const int kTelFieldNumber = 6;
  const ::std::string& tel() const;
  void set_tel(const ::std::string& value);
  #if LANG_CXX11
  void set_tel(::std::string&& value);
  #endif
  void set_tel(const char* value);
  void set_tel(const char* value, size_t size);
  ::std::string* mutable_tel();
  ::std::string* release_tel();
  void set_allocated_tel(::std::string* tel);

  // optional string ZipCode = 7;
  bool has_zipcode() const;
  void clear_zipcode();
  static const int kZipCodeFieldNumber = 7;
  const ::std::string& zipcode() const;
  void set_zipcode(const ::std::string& value);
  #if LANG_CXX11
  void set_zipcode(::std::string&& value);
  #endif
  void set_zipcode(const char* value);
  void set_zipcode(const char* value, size_t size);
  ::std::string* mutable_zipcode();
  ::std::string* release_zipcode();
  void set_allocated_zipcode(::std::string* zipcode);

  // @@protoc_insertion_point(class_scope:micromsg.Address)
 private:
  void set_has_country();
  void clear_has_country();
  void set_has_province();
  void clear_has_province();
  void set_has_city();
  void clear_has_city();
  void set_has_detail();
  void clear_has_detail();
  void set_has_username();
  void clear_has_username();
  void set_has_tel();
  void clear_has_tel();
  void set_has_zipcode();
  void clear_has_zipcode();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr country_;
  ::google::protobuf::internal::ArenaStringPtr province_;
  ::google::protobuf::internal::ArenaStringPtr city_;
  ::google::protobuf::internal::ArenaStringPtr detail_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr tel_;
  ::google::protobuf::internal::ArenaStringPtr zipcode_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Receipt : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.Receipt) */ {
 public:
  Receipt();
  virtual ~Receipt();

  Receipt(const Receipt& from);

  inline Receipt& operator=(const Receipt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Receipt& default_instance();

  static inline const Receipt* internal_default_instance() {
    return reinterpret_cast<const Receipt*>(
               &_Receipt_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(Receipt* other);

  // implements Message ----------------------------------------------

  inline Receipt* New() const PROTOBUF_FINAL { return New(NULL); }

  Receipt* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Receipt& from);
  void MergeFrom(const Receipt& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Receipt* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Detail = 2;
  bool has_detail() const;
  void clear_detail();
  static const int kDetailFieldNumber = 2;
  const ::std::string& detail() const;
  void set_detail(const ::std::string& value);
  #if LANG_CXX11
  void set_detail(::std::string&& value);
  #endif
  void set_detail(const char* value);
  void set_detail(const char* value, size_t size);
  ::std::string* mutable_detail();
  ::std::string* release_detail();
  void set_allocated_detail(::std::string* detail);

  // required uint32 IsNeed = 1;
  bool has_isneed() const;
  void clear_isneed();
  static const int kIsNeedFieldNumber = 1;
  ::google::protobuf::uint32 isneed() const;
  void set_isneed(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.Receipt)
 private:
  void set_has_isneed();
  void clear_has_isneed();
  void set_has_detail();
  void clear_has_detail();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr detail_;
  ::google::protobuf::uint32 isneed_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Discount : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.Discount) */ {
 public:
  Discount();
  virtual ~Discount();

  Discount(const Discount& from);

  inline Discount& operator=(const Discount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Discount& default_instance();

  static inline const Discount* internal_default_instance() {
    return reinterpret_cast<const Discount*>(
               &_Discount_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(Discount* other);

  // implements Message ----------------------------------------------

  inline Discount* New() const PROTOBUF_FINAL { return New(NULL); }

  Discount* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Discount& from);
  void MergeFrom(const Discount& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Discount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Title = 1;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // required uint32 Price = 2;
  bool has_price() const;
  void clear_price();
  static const int kPriceFieldNumber = 2;
  ::google::protobuf::uint32 price() const;
  void set_price(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.Discount)
 private:
  void set_has_title();
  void clear_has_title();
  void set_has_price();
  void clear_has_price();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::uint32 price_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Production : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.Production) */ {
 public:
  Production();
  virtual ~Production();

  Production(const Production& from);

  inline Production& operator=(const Production& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Production& default_instance();

  static inline const Production* internal_default_instance() {
    return reinterpret_cast<const Production*>(
               &_Production_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(Production* other);

  // implements Message ----------------------------------------------

  inline Production* New() const PROTOBUF_FINAL { return New(NULL); }

  Production* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Production& from);
  void MergeFrom(const Production& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Production* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.KVItem Skus = 2;
  int skus_size() const;
  void clear_skus();
  static const int kSkusFieldNumber = 2;
  const ::micromsg::KVItem& skus(int index) const;
  ::micromsg::KVItem* mutable_skus(int index);
  ::micromsg::KVItem* add_skus();
  ::google::protobuf::RepeatedPtrField< ::micromsg::KVItem >*
      mutable_skus();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::KVItem >&
      skus() const;

  // repeated .micromsg.Discount Discounts = 16;
  int discounts_size() const;
  void clear_discounts();
  static const int kDiscountsFieldNumber = 16;
  const ::micromsg::Discount& discounts(int index) const;
  ::micromsg::Discount* mutable_discounts(int index);
  ::micromsg::Discount* add_discounts();
  ::google::protobuf::RepeatedPtrField< ::micromsg::Discount >*
      mutable_discounts();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::Discount >&
      discounts() const;

  // optional string PriceType = 5;
  bool has_pricetype() const;
  void clear_pricetype();
  static const int kPriceTypeFieldNumber = 5;
  const ::std::string& pricetype() const;
  void set_pricetype(const ::std::string& value);
  #if LANG_CXX11
  void set_pricetype(::std::string&& value);
  #endif
  void set_pricetype(const char* value);
  void set_pricetype(const char* value, size_t size);
  ::std::string* mutable_pricetype();
  ::std::string* release_pricetype();
  void set_allocated_pricetype(::std::string* pricetype);

  // optional string Pid = 6;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 6;
  const ::std::string& pid() const;
  void set_pid(const ::std::string& value);
  #if LANG_CXX11
  void set_pid(::std::string&& value);
  #endif
  void set_pid(const char* value);
  void set_pid(const char* value, size_t size);
  ::std::string* mutable_pid();
  ::std::string* release_pid();
  void set_allocated_pid(::std::string* pid);

  // optional string SafeUrl = 7;
  bool has_safeurl() const;
  void clear_safeurl();
  static const int kSafeUrlFieldNumber = 7;
  const ::std::string& safeurl() const;
  void set_safeurl(const ::std::string& value);
  #if LANG_CXX11
  void set_safeurl(::std::string&& value);
  #endif
  void set_safeurl(const char* value);
  void set_safeurl(const char* value, size_t size);
  ::std::string* mutable_safeurl();
  ::std::string* release_safeurl();
  void set_allocated_safeurl(::std::string* safeurl);

  // optional string SkuId = 8;
  bool has_skuid() const;
  void clear_skuid();
  static const int kSkuIdFieldNumber = 8;
  const ::std::string& skuid() const;
  void set_skuid(const ::std::string& value);
  #if LANG_CXX11
  void set_skuid(::std::string&& value);
  #endif
  void set_skuid(const char* value);
  void set_skuid(const char* value, size_t size);
  ::std::string* mutable_skuid();
  ::std::string* release_skuid();
  void set_allocated_skuid(::std::string* skuid);

  // optional string Name = 10;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 10;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string ThumbUrl = 11;
  bool has_thumburl() const;
  void clear_thumburl();
  static const int kThumbUrlFieldNumber = 11;
  const ::std::string& thumburl() const;
  void set_thumburl(const ::std::string& value);
  #if LANG_CXX11
  void set_thumburl(::std::string&& value);
  #endif
  void set_thumburl(const char* value);
  void set_thumburl(const char* value, size_t size);
  ::std::string* mutable_thumburl();
  ::std::string* release_thumburl();
  void set_allocated_thumburl(::std::string* thumburl);

  // optional string PreferentialPrice = 14;
  bool has_preferentialprice() const;
  void clear_preferentialprice();
  static const int kPreferentialPriceFieldNumber = 14;
  const ::std::string& preferentialprice() const;
  void set_preferentialprice(const ::std::string& value);
  #if LANG_CXX11
  void set_preferentialprice(::std::string&& value);
  #endif
  void set_preferentialprice(const char* value);
  void set_preferentialprice(const char* value, size_t size);
  ::std::string* mutable_preferentialprice();
  ::std::string* release_preferentialprice();
  void set_allocated_preferentialprice(::std::string* preferentialprice);

  // required uint32 SkuCount = 1;
  bool has_skucount() const;
  void clear_skucount();
  static const int kSkuCountFieldNumber = 1;
  ::google::protobuf::uint32 skucount() const;
  void set_skucount(::google::protobuf::uint32 value);

  // required uint32 Count = 3;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // required uint32 RealPrice = 4;
  bool has_realprice() const;
  void clear_realprice();
  static const int kRealPriceFieldNumber = 4;
  ::google::protobuf::uint32 realprice() const;
  void set_realprice(::google::protobuf::uint32 value);

  // optional uint32 Type = 9;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 9;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional uint32 SubType = 12;
  bool has_subtype() const;
  void clear_subtype();
  static const int kSubTypeFieldNumber = 12;
  ::google::protobuf::uint32 subtype() const;
  void set_subtype(::google::protobuf::uint32 value);

  // optional uint32 Scene = 13;
  bool has_scene() const;
  void clear_scene();
  static const int kSceneFieldNumber = 13;
  ::google::protobuf::uint32 scene() const;
  void set_scene(::google::protobuf::uint32 value);

  // optional uint32 DiscountCount = 15;
  bool has_discountcount() const;
  void clear_discountcount();
  static const int kDiscountCountFieldNumber = 15;
  ::google::protobuf::uint32 discountcount() const;
  void set_discountcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.Production)
 private:
  void set_has_skucount();
  void clear_has_skucount();
  void set_has_count();
  void clear_has_count();
  void set_has_realprice();
  void clear_has_realprice();
  void set_has_pricetype();
  void clear_has_pricetype();
  void set_has_pid();
  void clear_has_pid();
  void set_has_safeurl();
  void clear_has_safeurl();
  void set_has_skuid();
  void clear_has_skuid();
  void set_has_type();
  void clear_has_type();
  void set_has_name();
  void clear_has_name();
  void set_has_thumburl();
  void clear_has_thumburl();
  void set_has_subtype();
  void clear_has_subtype();
  void set_has_scene();
  void clear_has_scene();
  void set_has_preferentialprice();
  void clear_has_preferentialprice();
  void set_has_discountcount();
  void clear_has_discountcount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::KVItem > skus_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::Discount > discounts_;
  ::google::protobuf::internal::ArenaStringPtr pricetype_;
  ::google::protobuf::internal::ArenaStringPtr pid_;
  ::google::protobuf::internal::ArenaStringPtr safeurl_;
  ::google::protobuf::internal::ArenaStringPtr skuid_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr thumburl_;
  ::google::protobuf::internal::ArenaStringPtr preferentialprice_;
  ::google::protobuf::uint32 skucount_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 realprice_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 subtype_;
  ::google::protobuf::uint32 scene_;
  ::google::protobuf::uint32 discountcount_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Snapshot : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.Snapshot) */ {
 public:
  Snapshot();
  virtual ~Snapshot();

  Snapshot(const Snapshot& from);

  inline Snapshot& operator=(const Snapshot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Snapshot& default_instance();

  static inline const Snapshot* internal_default_instance() {
    return reinterpret_cast<const Snapshot*>(
               &_Snapshot_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(Snapshot* other);

  // implements Message ----------------------------------------------

  inline Snapshot* New() const PROTOBUF_FINAL { return New(NULL); }

  Snapshot* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Snapshot& from);
  void MergeFrom(const Snapshot& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Snapshot* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.Production Productions = 2;
  int productions_size() const;
  void clear_productions();
  static const int kProductionsFieldNumber = 2;
  const ::micromsg::Production& productions(int index) const;
  ::micromsg::Production* mutable_productions(int index);
  ::micromsg::Production* add_productions();
  ::google::protobuf::RepeatedPtrField< ::micromsg::Production >*
      mutable_productions();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::Production >&
      productions() const;

  // repeated .micromsg.Receipt Receipt = 5;
  int receipt_size() const;
  void clear_receipt();
  static const int kReceiptFieldNumber = 5;
  const ::micromsg::Receipt& receipt(int index) const;
  ::micromsg::Receipt* mutable_receipt(int index);
  ::micromsg::Receipt* add_receipt();
  ::google::protobuf::RepeatedPtrField< ::micromsg::Receipt >*
      mutable_receipt();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::Receipt >&
      receipt() const;

  // optional string LockId = 7;
  bool has_lockid() const;
  void clear_lockid();
  static const int kLockIdFieldNumber = 7;
  const ::std::string& lockid() const;
  void set_lockid(const ::std::string& value);
  #if LANG_CXX11
  void set_lockid(::std::string&& value);
  #endif
  void set_lockid(const char* value);
  void set_lockid(const char* value, size_t size);
  ::std::string* mutable_lockid();
  ::std::string* release_lockid();
  void set_allocated_lockid(::std::string* lockid);

  // optional .micromsg.Express Express = 3;
  bool has_express() const;
  void clear_express();
  static const int kExpressFieldNumber = 3;
  const ::micromsg::Express& express() const;
  ::micromsg::Express* mutable_express();
  ::micromsg::Express* release_express();
  void set_allocated_express(::micromsg::Express* express);

  // optional .micromsg.Address Address = 4;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 4;
  const ::micromsg::Address& address() const;
  ::micromsg::Address* mutable_address();
  ::micromsg::Address* release_address();
  void set_allocated_address(::micromsg::Address* address);

  // required uint32 ProductCount = 1;
  bool has_productcount() const;
  void clear_productcount();
  static const int kProductCountFieldNumber = 1;
  ::google::protobuf::uint32 productcount() const;
  void set_productcount(::google::protobuf::uint32 value);

  // optional uint32 ReceiptCount = 6;
  bool has_receiptcount() const;
  void clear_receiptcount();
  static const int kReceiptCountFieldNumber = 6;
  ::google::protobuf::uint32 receiptcount() const;
  void set_receiptcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.Snapshot)
 private:
  void set_has_productcount();
  void clear_has_productcount();
  void set_has_express();
  void clear_has_express();
  void set_has_address();
  void clear_has_address();
  void set_has_receiptcount();
  void clear_has_receiptcount();
  void set_has_lockid();
  void clear_has_lockid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::Production > productions_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::Receipt > receipt_;
  ::google::protobuf::internal::ArenaStringPtr lockid_;
  ::micromsg::Express* express_;
  ::micromsg::Address* address_;
  ::google::protobuf::uint32 productcount_;
  ::google::protobuf::uint32 receiptcount_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SubmitMallOrderRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SubmitMallOrderRequest) */ {
 public:
  SubmitMallOrderRequest();
  virtual ~SubmitMallOrderRequest();

  SubmitMallOrderRequest(const SubmitMallOrderRequest& from);

  inline SubmitMallOrderRequest& operator=(const SubmitMallOrderRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SubmitMallOrderRequest& default_instance();

  static inline const SubmitMallOrderRequest* internal_default_instance() {
    return reinterpret_cast<const SubmitMallOrderRequest*>(
               &_SubmitMallOrderRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(SubmitMallOrderRequest* other);

  // implements Message ----------------------------------------------

  inline SubmitMallOrderRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SubmitMallOrderRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SubmitMallOrderRequest& from);
  void MergeFrom(const SubmitMallOrderRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SubmitMallOrderRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string PayAppid = 3;
  bool has_payappid() const;
  void clear_payappid();
  static const int kPayAppidFieldNumber = 3;
  const ::std::string& payappid() const;
  void set_payappid(const ::std::string& value);
  #if LANG_CXX11
  void set_payappid(::std::string&& value);
  #endif
  void set_payappid(const char* value);
  void set_payappid(const char* value, size_t size);
  ::std::string* mutable_payappid();
  ::std::string* release_payappid();
  void set_allocated_payappid(::std::string* payappid);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // optional .micromsg.Snapshot Snapshot = 2;
  bool has_snapshot() const;
  void clear_snapshot();
  static const int kSnapshotFieldNumber = 2;
  const ::micromsg::Snapshot& snapshot() const;
  ::micromsg::Snapshot* mutable_snapshot();
  ::micromsg::Snapshot* release_snapshot();
  void set_allocated_snapshot(::micromsg::Snapshot* snapshot);

  // @@protoc_insertion_point(class_scope:micromsg.SubmitMallOrderRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_snapshot();
  void clear_has_snapshot();
  void set_has_payappid();
  void clear_has_payappid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr payappid_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::Snapshot* snapshot_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SubmitMallOrderResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SubmitMallOrderResponse) */ {
 public:
  SubmitMallOrderResponse();
  virtual ~SubmitMallOrderResponse();

  SubmitMallOrderResponse(const SubmitMallOrderResponse& from);

  inline SubmitMallOrderResponse& operator=(const SubmitMallOrderResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SubmitMallOrderResponse& default_instance();

  static inline const SubmitMallOrderResponse* internal_default_instance() {
    return reinterpret_cast<const SubmitMallOrderResponse*>(
               &_SubmitMallOrderResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(SubmitMallOrderResponse* other);

  // implements Message ----------------------------------------------

  inline SubmitMallOrderResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SubmitMallOrderResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SubmitMallOrderResponse& from);
  void MergeFrom(const SubmitMallOrderResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SubmitMallOrderResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string PrepareId = 2;
  bool has_prepareid() const;
  void clear_prepareid();
  static const int kPrepareIdFieldNumber = 2;
  const ::std::string& prepareid() const;
  void set_prepareid(const ::std::string& value);
  #if LANG_CXX11
  void set_prepareid(::std::string&& value);
  #endif
  void set_prepareid(const char* value);
  void set_prepareid(const char* value, size_t size);
  ::std::string* mutable_prepareid();
  ::std::string* release_prepareid();
  void set_allocated_prepareid(::std::string* prepareid);

  // optional string RetMsg = 4;
  bool has_retmsg() const;
  void clear_retmsg();
  static const int kRetMsgFieldNumber = 4;
  const ::std::string& retmsg() const;
  void set_retmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_retmsg(::std::string&& value);
  #endif
  void set_retmsg(const char* value);
  void set_retmsg(const char* value, size_t size);
  ::std::string* mutable_retmsg();
  ::std::string* release_retmsg();
  void set_allocated_retmsg(::std::string* retmsg);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // optional int32 RetCode = 3;
  bool has_retcode() const;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 3;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SubmitMallOrderResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_prepareid();
  void clear_has_prepareid();
  void set_has_retcode();
  void clear_has_retcode();
  void set_has_retmsg();
  void clear_has_retmsg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr prepareid_;
  ::google::protobuf::internal::ArenaStringPtr retmsg_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::int32 retcode_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SubmitMallFreeOrderRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SubmitMallFreeOrderRequest) */ {
 public:
  SubmitMallFreeOrderRequest();
  virtual ~SubmitMallFreeOrderRequest();

  SubmitMallFreeOrderRequest(const SubmitMallFreeOrderRequest& from);

  inline SubmitMallFreeOrderRequest& operator=(const SubmitMallFreeOrderRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SubmitMallFreeOrderRequest& default_instance();

  static inline const SubmitMallFreeOrderRequest* internal_default_instance() {
    return reinterpret_cast<const SubmitMallFreeOrderRequest*>(
               &_SubmitMallFreeOrderRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(SubmitMallFreeOrderRequest* other);

  // implements Message ----------------------------------------------

  inline SubmitMallFreeOrderRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SubmitMallFreeOrderRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SubmitMallFreeOrderRequest& from);
  void MergeFrom(const SubmitMallFreeOrderRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SubmitMallFreeOrderRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // optional .micromsg.Snapshot Snapshot = 2;
  bool has_snapshot() const;
  void clear_snapshot();
  static const int kSnapshotFieldNumber = 2;
  const ::micromsg::Snapshot& snapshot() const;
  ::micromsg::Snapshot* mutable_snapshot();
  ::micromsg::Snapshot* release_snapshot();
  void set_allocated_snapshot(::micromsg::Snapshot* snapshot);

  // @@protoc_insertion_point(class_scope:micromsg.SubmitMallFreeOrderRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_snapshot();
  void clear_has_snapshot();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::Snapshot* snapshot_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SubmitMallFreeOrderResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SubmitMallFreeOrderResponse) */ {
 public:
  SubmitMallFreeOrderResponse();
  virtual ~SubmitMallFreeOrderResponse();

  SubmitMallFreeOrderResponse(const SubmitMallFreeOrderResponse& from);

  inline SubmitMallFreeOrderResponse& operator=(const SubmitMallFreeOrderResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SubmitMallFreeOrderResponse& default_instance();

  static inline const SubmitMallFreeOrderResponse* internal_default_instance() {
    return reinterpret_cast<const SubmitMallFreeOrderResponse*>(
               &_SubmitMallFreeOrderResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(SubmitMallFreeOrderResponse* other);

  // implements Message ----------------------------------------------

  inline SubmitMallFreeOrderResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SubmitMallFreeOrderResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SubmitMallFreeOrderResponse& from);
  void MergeFrom(const SubmitMallFreeOrderResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SubmitMallFreeOrderResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string PrepareId = 2;
  bool has_prepareid() const;
  void clear_prepareid();
  static const int kPrepareIdFieldNumber = 2;
  const ::std::string& prepareid() const;
  void set_prepareid(const ::std::string& value);
  #if LANG_CXX11
  void set_prepareid(::std::string&& value);
  #endif
  void set_prepareid(const char* value);
  void set_prepareid(const char* value, size_t size);
  ::std::string* mutable_prepareid();
  ::std::string* release_prepareid();
  void set_allocated_prepareid(::std::string* prepareid);

  // optional string RetMsg = 4;
  bool has_retmsg() const;
  void clear_retmsg();
  static const int kRetMsgFieldNumber = 4;
  const ::std::string& retmsg() const;
  void set_retmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_retmsg(::std::string&& value);
  #endif
  void set_retmsg(const char* value);
  void set_retmsg(const char* value, size_t size);
  ::std::string* mutable_retmsg();
  ::std::string* release_retmsg();
  void set_allocated_retmsg(::std::string* retmsg);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // optional int32 RetCode = 3;
  bool has_retcode() const;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 3;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SubmitMallFreeOrderResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_prepareid();
  void clear_has_prepareid();
  void set_has_retcode();
  void clear_has_retcode();
  void set_has_retmsg();
  void clear_has_retmsg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr prepareid_;
  ::google::protobuf::internal::ArenaStringPtr retmsg_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::int32 retcode_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SampleProduct : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SampleProduct) */ {
 public:
  SampleProduct();
  virtual ~SampleProduct();

  SampleProduct(const SampleProduct& from);

  inline SampleProduct& operator=(const SampleProduct& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SampleProduct& default_instance();

  static inline const SampleProduct* internal_default_instance() {
    return reinterpret_cast<const SampleProduct*>(
               &_SampleProduct_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(SampleProduct* other);

  // implements Message ----------------------------------------------

  inline SampleProduct* New() const PROTOBUF_FINAL { return New(NULL); }

  SampleProduct* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SampleProduct& from);
  void MergeFrom(const SampleProduct& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SampleProduct* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Pid = 1;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 1;
  const ::std::string& pid() const;
  void set_pid(const ::std::string& value);
  #if LANG_CXX11
  void set_pid(::std::string&& value);
  #endif
  void set_pid(const char* value);
  void set_pid(const char* value, size_t size);
  ::std::string* mutable_pid();
  ::std::string* release_pid();
  void set_allocated_pid(::std::string* pid);

  // optional string SkuId = 2;
  bool has_skuid() const;
  void clear_skuid();
  static const int kSkuIdFieldNumber = 2;
  const ::std::string& skuid() const;
  void set_skuid(const ::std::string& value);
  #if LANG_CXX11
  void set_skuid(::std::string&& value);
  #endif
  void set_skuid(const char* value);
  void set_skuid(const char* value, size_t size);
  ::std::string* mutable_skuid();
  ::std::string* release_skuid();
  void set_allocated_skuid(::std::string* skuid);

  // optional string SafeUrl = 4;
  bool has_safeurl() const;
  void clear_safeurl();
  static const int kSafeUrlFieldNumber = 4;
  const ::std::string& safeurl() const;
  void set_safeurl(const ::std::string& value);
  #if LANG_CXX11
  void set_safeurl(::std::string&& value);
  #endif
  void set_safeurl(const char* value);
  void set_safeurl(const char* value, size_t size);
  ::std::string* mutable_safeurl();
  ::std::string* release_safeurl();
  void set_allocated_safeurl(::std::string* safeurl);

  // optional uint32 Count = 3;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SampleProduct)
 private:
  void set_has_pid();
  void clear_has_pid();
  void set_has_skuid();
  void clear_has_skuid();
  void set_has_count();
  void clear_has_count();
  void set_has_safeurl();
  void clear_has_safeurl();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr pid_;
  ::google::protobuf::internal::ArenaStringPtr skuid_;
  ::google::protobuf::internal::ArenaStringPtr safeurl_;
  ::google::protobuf::uint32 count_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActionAttr : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ActionAttr) */ {
 public:
  ActionAttr();
  virtual ~ActionAttr();

  ActionAttr(const ActionAttr& from);

  inline ActionAttr& operator=(const ActionAttr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionAttr& default_instance();

  static inline const ActionAttr* internal_default_instance() {
    return reinterpret_cast<const ActionAttr*>(
               &_ActionAttr_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(ActionAttr* other);

  // implements Message ----------------------------------------------

  inline ActionAttr* New() const PROTOBUF_FINAL { return New(NULL); }

  ActionAttr* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ActionAttr& from);
  void MergeFrom(const ActionAttr& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ActionAttr* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string Name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string Tips = 2;
  bool has_tips() const;
  void clear_tips();
  static const int kTipsFieldNumber = 2;
  const ::std::string& tips() const;
  void set_tips(const ::std::string& value);
  #if LANG_CXX11
  void set_tips(::std::string&& value);
  #endif
  void set_tips(const char* value);
  void set_tips(const char* value, size_t size);
  ::std::string* mutable_tips();
  ::std::string* release_tips();
  void set_allocated_tips(::std::string* tips);

  // optional string Content = 4;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 4;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // optional string IconUrl = 5;
  bool has_iconurl() const;
  void clear_iconurl();
  static const int kIconUrlFieldNumber = 5;
  const ::std::string& iconurl() const;
  void set_iconurl(const ::std::string& value);
  #if LANG_CXX11
  void set_iconurl(::std::string&& value);
  #endif
  void set_iconurl(const char* value);
  void set_iconurl(const char* value, size_t size);
  ::std::string* mutable_iconurl();
  ::std::string* release_iconurl();
  void set_allocated_iconurl(::std::string* iconurl);

  // optional uint32 Type = 3;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ActionAttr)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_tips();
  void clear_has_tips();
  void set_has_type();
  void clear_has_type();
  void set_has_content();
  void clear_has_content();
  void set_has_iconurl();
  void clear_has_iconurl();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr tips_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::internal::ArenaStringPtr iconurl_;
  ::google::protobuf::uint32 type_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PreSubmitOrderRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.PreSubmitOrderRequest) */ {
 public:
  PreSubmitOrderRequest();
  virtual ~PreSubmitOrderRequest();

  PreSubmitOrderRequest(const PreSubmitOrderRequest& from);

  inline PreSubmitOrderRequest& operator=(const PreSubmitOrderRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PreSubmitOrderRequest& default_instance();

  static inline const PreSubmitOrderRequest* internal_default_instance() {
    return reinterpret_cast<const PreSubmitOrderRequest*>(
               &_PreSubmitOrderRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(PreSubmitOrderRequest* other);

  // implements Message ----------------------------------------------

  inline PreSubmitOrderRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  PreSubmitOrderRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PreSubmitOrderRequest& from);
  void MergeFrom(const PreSubmitOrderRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PreSubmitOrderRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.SampleProduct Product = 3;
  int product_size() const;
  void clear_product();
  static const int kProductFieldNumber = 3;
  const ::micromsg::SampleProduct& product(int index) const;
  ::micromsg::SampleProduct* mutable_product(int index);
  ::micromsg::SampleProduct* add_product();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SampleProduct >*
      mutable_product();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SampleProduct >&
      product() const;

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 ProductCount = 2;
  bool has_productcount() const;
  void clear_productcount();
  static const int kProductCountFieldNumber = 2;
  ::google::protobuf::uint32 productcount() const;
  void set_productcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.PreSubmitOrderRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_productcount();
  void clear_has_productcount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SampleProduct > product_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 productcount_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PreSubmitOrderResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.PreSubmitOrderResponse) */ {
 public:
  PreSubmitOrderResponse();
  virtual ~PreSubmitOrderResponse();

  PreSubmitOrderResponse(const PreSubmitOrderResponse& from);

  inline PreSubmitOrderResponse& operator=(const PreSubmitOrderResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PreSubmitOrderResponse& default_instance();

  static inline const PreSubmitOrderResponse* internal_default_instance() {
    return reinterpret_cast<const PreSubmitOrderResponse*>(
               &_PreSubmitOrderResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(PreSubmitOrderResponse* other);

  // implements Message ----------------------------------------------

  inline PreSubmitOrderResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  PreSubmitOrderResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PreSubmitOrderResponse& from);
  void MergeFrom(const PreSubmitOrderResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PreSubmitOrderResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.Express Express = 3;
  int express_size() const;
  void clear_express();
  static const int kExpressFieldNumber = 3;
  const ::micromsg::Express& express(int index) const;
  ::micromsg::Express* mutable_express(int index);
  ::micromsg::Express* add_express();
  ::google::protobuf::RepeatedPtrField< ::micromsg::Express >*
      mutable_express();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::Express >&
      express() const;

  // repeated .micromsg.ActionAttr ActionAttrs = 7;
  int actionattrs_size() const;
  void clear_actionattrs();
  static const int kActionAttrsFieldNumber = 7;
  const ::micromsg::ActionAttr& actionattrs(int index) const;
  ::micromsg::ActionAttr* mutable_actionattrs(int index);
  ::micromsg::ActionAttr* add_actionattrs();
  ::google::protobuf::RepeatedPtrField< ::micromsg::ActionAttr >*
      mutable_actionattrs();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::ActionAttr >&
      actionattrs() const;

  // optional string LockId = 4;
  bool has_lockid() const;
  void clear_lockid();
  static const int kLockIdFieldNumber = 4;
  const ::std::string& lockid() const;
  void set_lockid(const ::std::string& value);
  #if LANG_CXX11
  void set_lockid(::std::string&& value);
  #endif
  void set_lockid(const char* value);
  void set_lockid(const char* value, size_t size);
  ::std::string* mutable_lockid();
  ::std::string* release_lockid();
  void set_allocated_lockid(::std::string* lockid);

  // optional string RetMsg = 6;
  bool has_retmsg() const;
  void clear_retmsg();
  static const int kRetMsgFieldNumber = 6;
  const ::std::string& retmsg() const;
  void set_retmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_retmsg(::std::string&& value);
  #endif
  void set_retmsg(const char* value);
  void set_retmsg(const char* value, size_t size);
  ::std::string* mutable_retmsg();
  ::std::string* release_retmsg();
  void set_allocated_retmsg(::std::string* retmsg);

  // optional .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // optional uint32 ExpressCount = 2;
  bool has_expresscount() const;
  void clear_expresscount();
  static const int kExpressCountFieldNumber = 2;
  ::google::protobuf::uint32 expresscount() const;
  void set_expresscount(::google::protobuf::uint32 value);

  // optional int32 RetCode = 5;
  bool has_retcode() const;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 5;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // optional uint32 ActionAttrCount = 8;
  bool has_actionattrcount() const;
  void clear_actionattrcount();
  static const int kActionAttrCountFieldNumber = 8;
  ::google::protobuf::uint32 actionattrcount() const;
  void set_actionattrcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.PreSubmitOrderResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_expresscount();
  void clear_has_expresscount();
  void set_has_lockid();
  void clear_has_lockid();
  void set_has_retcode();
  void clear_has_retcode();
  void set_has_retmsg();
  void clear_has_retmsg();
  void set_has_actionattrcount();
  void clear_has_actionattrcount();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::Express > express_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::ActionAttr > actionattrs_;
  ::google::protobuf::internal::ArenaStringPtr lockid_;
  ::google::protobuf::internal::ArenaStringPtr retmsg_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 expresscount_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 actionattrcount_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CancelPreOrderRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.CancelPreOrderRequest) */ {
 public:
  CancelPreOrderRequest();
  virtual ~CancelPreOrderRequest();

  CancelPreOrderRequest(const CancelPreOrderRequest& from);

  inline CancelPreOrderRequest& operator=(const CancelPreOrderRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CancelPreOrderRequest& default_instance();

  static inline const CancelPreOrderRequest* internal_default_instance() {
    return reinterpret_cast<const CancelPreOrderRequest*>(
               &_CancelPreOrderRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(CancelPreOrderRequest* other);

  // implements Message ----------------------------------------------

  inline CancelPreOrderRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CancelPreOrderRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CancelPreOrderRequest& from);
  void MergeFrom(const CancelPreOrderRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CancelPreOrderRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.SampleProduct Product = 3;
  int product_size() const;
  void clear_product();
  static const int kProductFieldNumber = 3;
  const ::micromsg::SampleProduct& product(int index) const;
  ::micromsg::SampleProduct* mutable_product(int index);
  ::micromsg::SampleProduct* add_product();
  ::google::protobuf::RepeatedPtrField< ::micromsg::SampleProduct >*
      mutable_product();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::SampleProduct >&
      product() const;

  // optional string LockId = 4;
  bool has_lockid() const;
  void clear_lockid();
  static const int kLockIdFieldNumber = 4;
  const ::std::string& lockid() const;
  void set_lockid(const ::std::string& value);
  #if LANG_CXX11
  void set_lockid(::std::string&& value);
  #endif
  void set_lockid(const char* value);
  void set_lockid(const char* value, size_t size);
  ::std::string* mutable_lockid();
  ::std::string* release_lockid();
  void set_allocated_lockid(::std::string* lockid);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 ProductCount = 2;
  bool has_productcount() const;
  void clear_productcount();
  static const int kProductCountFieldNumber = 2;
  ::google::protobuf::uint32 productcount() const;
  void set_productcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.CancelPreOrderRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_productcount();
  void clear_has_productcount();
  void set_has_lockid();
  void clear_has_lockid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::SampleProduct > product_;
  ::google::protobuf::internal::ArenaStringPtr lockid_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 productcount_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CancelPreOrderResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.CancelPreOrderResponse) */ {
 public:
  CancelPreOrderResponse();
  virtual ~CancelPreOrderResponse();

  CancelPreOrderResponse(const CancelPreOrderResponse& from);

  inline CancelPreOrderResponse& operator=(const CancelPreOrderResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CancelPreOrderResponse& default_instance();

  static inline const CancelPreOrderResponse* internal_default_instance() {
    return reinterpret_cast<const CancelPreOrderResponse*>(
               &_CancelPreOrderResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(CancelPreOrderResponse* other);

  // implements Message ----------------------------------------------

  inline CancelPreOrderResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CancelPreOrderResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CancelPreOrderResponse& from);
  void MergeFrom(const CancelPreOrderResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CancelPreOrderResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string RetMsg = 3;
  bool has_retmsg() const;
  void clear_retmsg();
  static const int kRetMsgFieldNumber = 3;
  const ::std::string& retmsg() const;
  void set_retmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_retmsg(::std::string&& value);
  #endif
  void set_retmsg(const char* value);
  void set_retmsg(const char* value, size_t size);
  ::std::string* mutable_retmsg();
  ::std::string* release_retmsg();
  void set_allocated_retmsg(::std::string* retmsg);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // optional int32 RetCode = 2;
  bool has_retcode() const;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 2;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.CancelPreOrderResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_retcode();
  void clear_has_retcode();
  void set_has_retmsg();
  void clear_has_retmsg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr retmsg_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::int32 retcode_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OrderDetailControlRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.OrderDetailControlRequest) */ {
 public:
  OrderDetailControlRequest();
  virtual ~OrderDetailControlRequest();

  OrderDetailControlRequest(const OrderDetailControlRequest& from);

  inline OrderDetailControlRequest& operator=(const OrderDetailControlRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderDetailControlRequest& default_instance();

  static inline const OrderDetailControlRequest* internal_default_instance() {
    return reinterpret_cast<const OrderDetailControlRequest*>(
               &_OrderDetailControlRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(OrderDetailControlRequest* other);

  // implements Message ----------------------------------------------

  inline OrderDetailControlRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  OrderDetailControlRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OrderDetailControlRequest& from);
  void MergeFrom(const OrderDetailControlRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OrderDetailControlRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string TransID = 3;
  bool has_transid() const;
  void clear_transid();
  static const int kTransIDFieldNumber = 3;
  const ::std::string& transid() const;
  void set_transid(const ::std::string& value);
  #if LANG_CXX11
  void set_transid(::std::string&& value);
  #endif
  void set_transid(const char* value);
  void set_transid(const char* value, size_t size);
  ::std::string* mutable_transid();
  ::std::string* release_transid();
  void set_allocated_transid(::std::string* transid);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 ActionCode = 2;
  bool has_actioncode() const;
  void clear_actioncode();
  static const int kActionCodeFieldNumber = 2;
  ::google::protobuf::uint32 actioncode() const;
  void set_actioncode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.OrderDetailControlRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_actioncode();
  void clear_has_actioncode();
  void set_has_transid();
  void clear_has_transid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr transid_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 actioncode_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OrderDetailControlResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.OrderDetailControlResponse) */ {
 public:
  OrderDetailControlResponse();
  virtual ~OrderDetailControlResponse();

  OrderDetailControlResponse(const OrderDetailControlResponse& from);

  inline OrderDetailControlResponse& operator=(const OrderDetailControlResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderDetailControlResponse& default_instance();

  static inline const OrderDetailControlResponse* internal_default_instance() {
    return reinterpret_cast<const OrderDetailControlResponse*>(
               &_OrderDetailControlResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(OrderDetailControlResponse* other);

  // implements Message ----------------------------------------------

  inline OrderDetailControlResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  OrderDetailControlResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OrderDetailControlResponse& from);
  void MergeFrom(const OrderDetailControlResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OrderDetailControlResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string RetMsg = 3;
  bool has_retmsg() const;
  void clear_retmsg();
  static const int kRetMsgFieldNumber = 3;
  const ::std::string& retmsg() const;
  void set_retmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_retmsg(::std::string&& value);
  #endif
  void set_retmsg(const char* value);
  void set_retmsg(const char* value, size_t size);
  ::std::string* mutable_retmsg();
  ::std::string* release_retmsg();
  void set_allocated_retmsg(::std::string* retmsg);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // optional int32 RetCode = 2;
  bool has_retcode() const;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 2;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.OrderDetailControlResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_retcode();
  void clear_has_retcode();
  void set_has_retmsg();
  void clear_has_retmsg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr retmsg_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::int32 retcode_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetProductDiscountRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetProductDiscountRequest) */ {
 public:
  GetProductDiscountRequest();
  virtual ~GetProductDiscountRequest();

  GetProductDiscountRequest(const GetProductDiscountRequest& from);

  inline GetProductDiscountRequest& operator=(const GetProductDiscountRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetProductDiscountRequest& default_instance();

  static inline const GetProductDiscountRequest* internal_default_instance() {
    return reinterpret_cast<const GetProductDiscountRequest*>(
               &_GetProductDiscountRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(GetProductDiscountRequest* other);

  // implements Message ----------------------------------------------

  inline GetProductDiscountRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetProductDiscountRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetProductDiscountRequest& from);
  void MergeFrom(const GetProductDiscountRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetProductDiscountRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string LockId = 2;
  bool has_lockid() const;
  void clear_lockid();
  static const int kLockIdFieldNumber = 2;
  const ::std::string& lockid() const;
  void set_lockid(const ::std::string& value);
  #if LANG_CXX11
  void set_lockid(::std::string&& value);
  #endif
  void set_lockid(const char* value);
  void set_lockid(const char* value, size_t size);
  ::std::string* mutable_lockid();
  ::std::string* release_lockid();
  void set_allocated_lockid(::std::string* lockid);

  // optional string Url = 3;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 3;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // @@protoc_insertion_point(class_scope:micromsg.GetProductDiscountRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_lockid();
  void clear_has_lockid();
  void set_has_url();
  void clear_has_url();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr lockid_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::micromsg::BaseRequest* baserequest_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetProductDiscountResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetProductDiscountResponse) */ {
 public:
  GetProductDiscountResponse();
  virtual ~GetProductDiscountResponse();

  GetProductDiscountResponse(const GetProductDiscountResponse& from);

  inline GetProductDiscountResponse& operator=(const GetProductDiscountResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetProductDiscountResponse& default_instance();

  static inline const GetProductDiscountResponse* internal_default_instance() {
    return reinterpret_cast<const GetProductDiscountResponse*>(
               &_GetProductDiscountResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(GetProductDiscountResponse* other);

  // implements Message ----------------------------------------------

  inline GetProductDiscountResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetProductDiscountResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetProductDiscountResponse& from);
  void MergeFrom(const GetProductDiscountResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetProductDiscountResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string DiscountDetail = 2;
  bool has_discountdetail() const;
  void clear_discountdetail();
  static const int kDiscountDetailFieldNumber = 2;
  const ::std::string& discountdetail() const;
  void set_discountdetail(const ::std::string& value);
  #if LANG_CXX11
  void set_discountdetail(::std::string&& value);
  #endif
  void set_discountdetail(const char* value);
  void set_discountdetail(const char* value, size_t size);
  ::std::string* mutable_discountdetail();
  ::std::string* release_discountdetail();
  void set_allocated_discountdetail(::std::string* discountdetail);

  // optional string RetMsg = 4;
  bool has_retmsg() const;
  void clear_retmsg();
  static const int kRetMsgFieldNumber = 4;
  const ::std::string& retmsg() const;
  void set_retmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_retmsg(::std::string&& value);
  #endif
  void set_retmsg(const char* value);
  void set_retmsg(const char* value, size_t size);
  ::std::string* mutable_retmsg();
  ::std::string* release_retmsg();
  void set_allocated_retmsg(::std::string* retmsg);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // optional int32 RetCode = 3;
  bool has_retcode() const;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 3;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetProductDiscountResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_discountdetail();
  void clear_has_discountdetail();
  void set_has_retcode();
  void clear_has_retcode();
  void set_has_retmsg();
  void clear_has_retmsg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr discountdetail_;
  ::google::protobuf::internal::ArenaStringPtr retmsg_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::int32 retcode_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetLastestExpressInfoRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetLastestExpressInfoRequest) */ {
 public:
  GetLastestExpressInfoRequest();
  virtual ~GetLastestExpressInfoRequest();

  GetLastestExpressInfoRequest(const GetLastestExpressInfoRequest& from);

  inline GetLastestExpressInfoRequest& operator=(const GetLastestExpressInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetLastestExpressInfoRequest& default_instance();

  static inline const GetLastestExpressInfoRequest* internal_default_instance() {
    return reinterpret_cast<const GetLastestExpressInfoRequest*>(
               &_GetLastestExpressInfoRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(GetLastestExpressInfoRequest* other);

  // implements Message ----------------------------------------------

  inline GetLastestExpressInfoRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GetLastestExpressInfoRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetLastestExpressInfoRequest& from);
  void MergeFrom(const GetLastestExpressInfoRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetLastestExpressInfoRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ProductId = 2;
  bool has_productid() const;
  void clear_productid();
  static const int kProductIdFieldNumber = 2;
  const ::std::string& productid() const;
  void set_productid(const ::std::string& value);
  #if LANG_CXX11
  void set_productid(::std::string&& value);
  #endif
  void set_productid(const char* value);
  void set_productid(const char* value, size_t size);
  ::std::string* mutable_productid();
  ::std::string* release_productid();
  void set_allocated_productid(::std::string* productid);

  // optional string LockId = 3;
  bool has_lockid() const;
  void clear_lockid();
  static const int kLockIdFieldNumber = 3;
  const ::std::string& lockid() const;
  void set_lockid(const ::std::string& value);
  #if LANG_CXX11
  void set_lockid(::std::string&& value);
  #endif
  void set_lockid(const char* value);
  void set_lockid(const char* value, size_t size);
  ::std::string* mutable_lockid();
  ::std::string* release_lockid();
  void set_allocated_lockid(::std::string* lockid);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.Address Address = 4;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 4;
  const ::micromsg::Address& address() const;
  ::micromsg::Address* mutable_address();
  ::micromsg::Address* release_address();
  void set_allocated_address(::micromsg::Address* address);

  // @@protoc_insertion_point(class_scope:micromsg.GetLastestExpressInfoRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_productid();
  void clear_has_productid();
  void set_has_lockid();
  void clear_has_lockid();
  void set_has_address();
  void clear_has_address();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr productid_;
  ::google::protobuf::internal::ArenaStringPtr lockid_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::Address* address_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetLastestExpressInfoResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.GetLastestExpressInfoResponse) */ {
 public:
  GetLastestExpressInfoResponse();
  virtual ~GetLastestExpressInfoResponse();

  GetLastestExpressInfoResponse(const GetLastestExpressInfoResponse& from);

  inline GetLastestExpressInfoResponse& operator=(const GetLastestExpressInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetLastestExpressInfoResponse& default_instance();

  static inline const GetLastestExpressInfoResponse* internal_default_instance() {
    return reinterpret_cast<const GetLastestExpressInfoResponse*>(
               &_GetLastestExpressInfoResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(GetLastestExpressInfoResponse* other);

  // implements Message ----------------------------------------------

  inline GetLastestExpressInfoResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  GetLastestExpressInfoResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetLastestExpressInfoResponse& from);
  void MergeFrom(const GetLastestExpressInfoResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetLastestExpressInfoResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.Express ExpressList = 2;
  int expresslist_size() const;
  void clear_expresslist();
  static const int kExpressListFieldNumber = 2;
  const ::micromsg::Express& expresslist(int index) const;
  ::micromsg::Express* mutable_expresslist(int index);
  ::micromsg::Express* add_expresslist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::Express >*
      mutable_expresslist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::Express >&
      expresslist() const;

  // optional string RetMsg = 5;
  bool has_retmsg() const;
  void clear_retmsg();
  static const int kRetMsgFieldNumber = 5;
  const ::std::string& retmsg() const;
  void set_retmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_retmsg(::std::string&& value);
  #endif
  void set_retmsg(const char* value);
  void set_retmsg(const char* value, size_t size);
  ::std::string* mutable_retmsg();
  ::std::string* release_retmsg();
  void set_allocated_retmsg(::std::string* retmsg);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // optional uint32 ExpressCount = 3;
  bool has_expresscount() const;
  void clear_expresscount();
  static const int kExpressCountFieldNumber = 3;
  ::google::protobuf::uint32 expresscount() const;
  void set_expresscount(::google::protobuf::uint32 value);

  // optional int32 RetCode = 4;
  bool has_retcode() const;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 4;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.GetLastestExpressInfoResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_expresscount();
  void clear_has_expresscount();
  void set_has_retcode();
  void clear_has_retcode();
  void set_has_retmsg();
  void clear_has_retmsg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::Express > expresslist_;
  ::google::protobuf::internal::ArenaStringPtr retmsg_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 expresscount_;
  ::google::protobuf::int32 retcode_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendC2CSecMsgRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SendC2CSecMsgRequest) */ {
 public:
  SendC2CSecMsgRequest();
  virtual ~SendC2CSecMsgRequest();

  SendC2CSecMsgRequest(const SendC2CSecMsgRequest& from);

  inline SendC2CSecMsgRequest& operator=(const SendC2CSecMsgRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendC2CSecMsgRequest& default_instance();

  static inline const SendC2CSecMsgRequest* internal_default_instance() {
    return reinterpret_cast<const SendC2CSecMsgRequest*>(
               &_SendC2CSecMsgRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(SendC2CSecMsgRequest* other);

  // implements Message ----------------------------------------------

  inline SendC2CSecMsgRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SendC2CSecMsgRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SendC2CSecMsgRequest& from);
  void MergeFrom(const SendC2CSecMsgRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SendC2CSecMsgRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ToUser = 2;
  bool has_touser() const;
  void clear_touser();
  static const int kToUserFieldNumber = 2;
  const ::std::string& touser() const;
  void set_touser(const ::std::string& value);
  #if LANG_CXX11
  void set_touser(::std::string&& value);
  #endif
  void set_touser(const char* value);
  void set_touser(const char* value, size_t size);
  ::std::string* mutable_touser();
  ::std::string* release_touser();
  void set_allocated_touser(::std::string* touser);

  // optional string TempId = 4;
  bool has_tempid() const;
  void clear_tempid();
  static const int kTempIdFieldNumber = 4;
  const ::std::string& tempid() const;
  void set_tempid(const ::std::string& value);
  #if LANG_CXX11
  void set_tempid(::std::string&& value);
  #endif
  void set_tempid(const char* value);
  void set_tempid(const char* value, size_t size);
  ::std::string* mutable_tempid();
  ::std::string* release_tempid();
  void set_allocated_tempid(::std::string* tempid);

  // optional string Title = 5;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 5;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional string Des = 6;
  bool has_des() const;
  void clear_des();
  static const int kDesFieldNumber = 6;
  const ::std::string& des() const;
  void set_des(const ::std::string& value);
  #if LANG_CXX11
  void set_des(::std::string&& value);
  #endif
  void set_des(const char* value);
  void set_des(const char* value, size_t size);
  ::std::string* mutable_des();
  ::std::string* release_des();
  void set_allocated_des(::std::string* des);

  // optional string Url = 7;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 7;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // optional int32 MsgType = 3;
  bool has_msgtype() const;
  void clear_msgtype();
  static const int kMsgTypeFieldNumber = 3;
  ::google::protobuf::int32 msgtype() const;
  void set_msgtype(::google::protobuf::int32 value);

  // optional int32 Scene = 8;
  bool has_scene() const;
  void clear_scene();
  static const int kSceneFieldNumber = 8;
  ::google::protobuf::int32 scene() const;
  void set_scene(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SendC2CSecMsgRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_touser();
  void clear_has_touser();
  void set_has_msgtype();
  void clear_has_msgtype();
  void set_has_tempid();
  void clear_has_tempid();
  void set_has_title();
  void clear_has_title();
  void set_has_des();
  void clear_has_des();
  void set_has_url();
  void clear_has_url();
  void set_has_scene();
  void clear_has_scene();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr touser_;
  ::google::protobuf::internal::ArenaStringPtr tempid_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr des_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::int32 msgtype_;
  ::google::protobuf::int32 scene_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendC2cSecMsgResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.SendC2cSecMsgResponse) */ {
 public:
  SendC2cSecMsgResponse();
  virtual ~SendC2cSecMsgResponse();

  SendC2cSecMsgResponse(const SendC2cSecMsgResponse& from);

  inline SendC2cSecMsgResponse& operator=(const SendC2cSecMsgResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendC2cSecMsgResponse& default_instance();

  static inline const SendC2cSecMsgResponse* internal_default_instance() {
    return reinterpret_cast<const SendC2cSecMsgResponse*>(
               &_SendC2cSecMsgResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(SendC2cSecMsgResponse* other);

  // implements Message ----------------------------------------------

  inline SendC2cSecMsgResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SendC2cSecMsgResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SendC2cSecMsgResponse& from);
  void MergeFrom(const SendC2cSecMsgResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SendC2cSecMsgResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string ErrMsg = 3;
  bool has_errmsg() const;
  void clear_errmsg();
  static const int kErrMsgFieldNumber = 3;
  const ::std::string& errmsg() const;
  void set_errmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_errmsg(::std::string&& value);
  #endif
  void set_errmsg(const char* value);
  void set_errmsg(const char* value, size_t size);
  ::std::string* mutable_errmsg();
  ::std::string* release_errmsg();
  void set_allocated_errmsg(::std::string* errmsg);

  // optional string MsgId = 4;
  bool has_msgid() const;
  void clear_msgid();
  static const int kMsgIdFieldNumber = 4;
  const ::std::string& msgid() const;
  void set_msgid(const ::std::string& value);
  #if LANG_CXX11
  void set_msgid(::std::string&& value);
  #endif
  void set_msgid(const char* value);
  void set_msgid(const char* value, size_t size);
  ::std::string* mutable_msgid();
  ::std::string* release_msgid();
  void set_allocated_msgid(::std::string* msgid);

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // optional int32 ErrCode = 2;
  bool has_errcode() const;
  void clear_errcode();
  static const int kErrCodeFieldNumber = 2;
  ::google::protobuf::int32 errcode() const;
  void set_errcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:micromsg.SendC2cSecMsgResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_errcode();
  void clear_has_errcode();
  void set_has_errmsg();
  void clear_has_errmsg();
  void set_has_msgid();
  void clear_has_msgid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr errmsg_;
  ::google::protobuf::internal::ArenaStringPtr msgid_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::int32 errcode_;
  friend struct protobuf_mmpay_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RcptInfoNode

// optional uint32 id = 1;
inline bool RcptInfoNode::has_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RcptInfoNode::set_has_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RcptInfoNode::clear_has_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RcptInfoNode::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 RcptInfoNode::id() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoNode.id)
  return id_;
}
inline void RcptInfoNode::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RcptInfoNode.id)
}

// optional .micromsg.SKBuiltinString_t country = 2;
inline bool RcptInfoNode::has_country() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RcptInfoNode::set_has_country() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RcptInfoNode::clear_has_country() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RcptInfoNode::clear_country() {
  if (country_ != NULL) country_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_country();
}
inline const ::micromsg::SKBuiltinString_t& RcptInfoNode::country() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoNode.country)
  return country_ != NULL ? *country_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* RcptInfoNode::mutable_country() {
  set_has_country();
  if (country_ == NULL) {
    country_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoNode.country)
  return country_;
}
inline ::micromsg::SKBuiltinString_t* RcptInfoNode::release_country() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoNode.country)
  clear_has_country();
  ::micromsg::SKBuiltinString_t* temp = country_;
  country_ = NULL;
  return temp;
}
inline void RcptInfoNode::set_allocated_country(::micromsg::SKBuiltinString_t* country) {
  delete country_;
  country_ = country;
  if (country) {
    set_has_country();
  } else {
    clear_has_country();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoNode.country)
}

// required .micromsg.SKBuiltinString_t province = 3;
inline bool RcptInfoNode::has_province() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RcptInfoNode::set_has_province() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RcptInfoNode::clear_has_province() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RcptInfoNode::clear_province() {
  if (province_ != NULL) province_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_province();
}
inline const ::micromsg::SKBuiltinString_t& RcptInfoNode::province() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoNode.province)
  return province_ != NULL ? *province_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* RcptInfoNode::mutable_province() {
  set_has_province();
  if (province_ == NULL) {
    province_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoNode.province)
  return province_;
}
inline ::micromsg::SKBuiltinString_t* RcptInfoNode::release_province() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoNode.province)
  clear_has_province();
  ::micromsg::SKBuiltinString_t* temp = province_;
  province_ = NULL;
  return temp;
}
inline void RcptInfoNode::set_allocated_province(::micromsg::SKBuiltinString_t* province) {
  delete province_;
  province_ = province;
  if (province) {
    set_has_province();
  } else {
    clear_has_province();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoNode.province)
}

// required .micromsg.SKBuiltinString_t city = 4;
inline bool RcptInfoNode::has_city() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RcptInfoNode::set_has_city() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RcptInfoNode::clear_has_city() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RcptInfoNode::clear_city() {
  if (city_ != NULL) city_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_city();
}
inline const ::micromsg::SKBuiltinString_t& RcptInfoNode::city() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoNode.city)
  return city_ != NULL ? *city_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* RcptInfoNode::mutable_city() {
  set_has_city();
  if (city_ == NULL) {
    city_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoNode.city)
  return city_;
}
inline ::micromsg::SKBuiltinString_t* RcptInfoNode::release_city() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoNode.city)
  clear_has_city();
  ::micromsg::SKBuiltinString_t* temp = city_;
  city_ = NULL;
  return temp;
}
inline void RcptInfoNode::set_allocated_city(::micromsg::SKBuiltinString_t* city) {
  delete city_;
  city_ = city;
  if (city) {
    set_has_city();
  } else {
    clear_has_city();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoNode.city)
}

// required .micromsg.SKBuiltinString_t district = 5;
inline bool RcptInfoNode::has_district() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RcptInfoNode::set_has_district() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RcptInfoNode::clear_has_district() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RcptInfoNode::clear_district() {
  if (district_ != NULL) district_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_district();
}
inline const ::micromsg::SKBuiltinString_t& RcptInfoNode::district() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoNode.district)
  return district_ != NULL ? *district_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* RcptInfoNode::mutable_district() {
  set_has_district();
  if (district_ == NULL) {
    district_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoNode.district)
  return district_;
}
inline ::micromsg::SKBuiltinString_t* RcptInfoNode::release_district() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoNode.district)
  clear_has_district();
  ::micromsg::SKBuiltinString_t* temp = district_;
  district_ = NULL;
  return temp;
}
inline void RcptInfoNode::set_allocated_district(::micromsg::SKBuiltinString_t* district) {
  delete district_;
  district_ = district;
  if (district) {
    set_has_district();
  } else {
    clear_has_district();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoNode.district)
}

// required .micromsg.SKBuiltinString_t zipcode = 6;
inline bool RcptInfoNode::has_zipcode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RcptInfoNode::set_has_zipcode() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RcptInfoNode::clear_has_zipcode() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RcptInfoNode::clear_zipcode() {
  if (zipcode_ != NULL) zipcode_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_zipcode();
}
inline const ::micromsg::SKBuiltinString_t& RcptInfoNode::zipcode() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoNode.zipcode)
  return zipcode_ != NULL ? *zipcode_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* RcptInfoNode::mutable_zipcode() {
  set_has_zipcode();
  if (zipcode_ == NULL) {
    zipcode_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoNode.zipcode)
  return zipcode_;
}
inline ::micromsg::SKBuiltinString_t* RcptInfoNode::release_zipcode() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoNode.zipcode)
  clear_has_zipcode();
  ::micromsg::SKBuiltinString_t* temp = zipcode_;
  zipcode_ = NULL;
  return temp;
}
inline void RcptInfoNode::set_allocated_zipcode(::micromsg::SKBuiltinString_t* zipcode) {
  delete zipcode_;
  zipcode_ = zipcode;
  if (zipcode) {
    set_has_zipcode();
  } else {
    clear_has_zipcode();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoNode.zipcode)
}

// required .micromsg.SKBuiltinString_t detail = 7;
inline bool RcptInfoNode::has_detail() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RcptInfoNode::set_has_detail() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RcptInfoNode::clear_has_detail() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RcptInfoNode::clear_detail() {
  if (detail_ != NULL) detail_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_detail();
}
inline const ::micromsg::SKBuiltinString_t& RcptInfoNode::detail() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoNode.detail)
  return detail_ != NULL ? *detail_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* RcptInfoNode::mutable_detail() {
  set_has_detail();
  if (detail_ == NULL) {
    detail_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoNode.detail)
  return detail_;
}
inline ::micromsg::SKBuiltinString_t* RcptInfoNode::release_detail() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoNode.detail)
  clear_has_detail();
  ::micromsg::SKBuiltinString_t* temp = detail_;
  detail_ = NULL;
  return temp;
}
inline void RcptInfoNode::set_allocated_detail(::micromsg::SKBuiltinString_t* detail) {
  delete detail_;
  detail_ = detail;
  if (detail) {
    set_has_detail();
  } else {
    clear_has_detail();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoNode.detail)
}

// required .micromsg.SKBuiltinString_t name = 8;
inline bool RcptInfoNode::has_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RcptInfoNode::set_has_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RcptInfoNode::clear_has_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RcptInfoNode::clear_name() {
  if (name_ != NULL) name_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_name();
}
inline const ::micromsg::SKBuiltinString_t& RcptInfoNode::name() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoNode.name)
  return name_ != NULL ? *name_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* RcptInfoNode::mutable_name() {
  set_has_name();
  if (name_ == NULL) {
    name_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoNode.name)
  return name_;
}
inline ::micromsg::SKBuiltinString_t* RcptInfoNode::release_name() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoNode.name)
  clear_has_name();
  ::micromsg::SKBuiltinString_t* temp = name_;
  name_ = NULL;
  return temp;
}
inline void RcptInfoNode::set_allocated_name(::micromsg::SKBuiltinString_t* name) {
  delete name_;
  name_ = name;
  if (name) {
    set_has_name();
  } else {
    clear_has_name();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoNode.name)
}

// required .micromsg.SKBuiltinString_t phone = 9;
inline bool RcptInfoNode::has_phone() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RcptInfoNode::set_has_phone() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RcptInfoNode::clear_has_phone() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RcptInfoNode::clear_phone() {
  if (phone_ != NULL) phone_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_phone();
}
inline const ::micromsg::SKBuiltinString_t& RcptInfoNode::phone() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoNode.phone)
  return phone_ != NULL ? *phone_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* RcptInfoNode::mutable_phone() {
  set_has_phone();
  if (phone_ == NULL) {
    phone_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoNode.phone)
  return phone_;
}
inline ::micromsg::SKBuiltinString_t* RcptInfoNode::release_phone() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoNode.phone)
  clear_has_phone();
  ::micromsg::SKBuiltinString_t* temp = phone_;
  phone_ = NULL;
  return temp;
}
inline void RcptInfoNode::set_allocated_phone(::micromsg::SKBuiltinString_t* phone) {
  delete phone_;
  phone_ = phone;
  if (phone) {
    set_has_phone();
  } else {
    clear_has_phone();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoNode.phone)
}

// optional .micromsg.SKBuiltinString_t nationalcode_gbt2260 = 10;
inline bool RcptInfoNode::has_nationalcode_gbt2260() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RcptInfoNode::set_has_nationalcode_gbt2260() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RcptInfoNode::clear_has_nationalcode_gbt2260() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RcptInfoNode::clear_nationalcode_gbt2260() {
  if (nationalcode_gbt2260_ != NULL) nationalcode_gbt2260_->::micromsg::SKBuiltinString_t::Clear();
  clear_has_nationalcode_gbt2260();
}
inline const ::micromsg::SKBuiltinString_t& RcptInfoNode::nationalcode_gbt2260() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoNode.nationalcode_gbt2260)
  return nationalcode_gbt2260_ != NULL ? *nationalcode_gbt2260_
                         : *::micromsg::SKBuiltinString_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinString_t* RcptInfoNode::mutable_nationalcode_gbt2260() {
  set_has_nationalcode_gbt2260();
  if (nationalcode_gbt2260_ == NULL) {
    nationalcode_gbt2260_ = new ::micromsg::SKBuiltinString_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoNode.nationalcode_gbt2260)
  return nationalcode_gbt2260_;
}
inline ::micromsg::SKBuiltinString_t* RcptInfoNode::release_nationalcode_gbt2260() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoNode.nationalcode_gbt2260)
  clear_has_nationalcode_gbt2260();
  ::micromsg::SKBuiltinString_t* temp = nationalcode_gbt2260_;
  nationalcode_gbt2260_ = NULL;
  return temp;
}
inline void RcptInfoNode::set_allocated_nationalcode_gbt2260(::micromsg::SKBuiltinString_t* nationalcode_gbt2260) {
  delete nationalcode_gbt2260_;
  nationalcode_gbt2260_ = nationalcode_gbt2260;
  if (nationalcode_gbt2260) {
    set_has_nationalcode_gbt2260();
  } else {
    clear_has_nationalcode_gbt2260();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoNode.nationalcode_gbt2260)
}

// -------------------------------------------------------------------

// RcptInfoList

// required uint32 count = 1;
inline bool RcptInfoList::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RcptInfoList::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RcptInfoList::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RcptInfoList::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 RcptInfoList::count() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoList.count)
  return count_;
}
inline void RcptInfoList::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RcptInfoList.count)
}

// repeated .micromsg.RcptInfoNode rcptinfolist = 2;
inline int RcptInfoList::rcptinfolist_size() const {
  return rcptinfolist_.size();
}
inline void RcptInfoList::clear_rcptinfolist() {
  rcptinfolist_.Clear();
}
inline const ::micromsg::RcptInfoNode& RcptInfoList::rcptinfolist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoList.rcptinfolist)
  return rcptinfolist_.Get(index);
}
inline ::micromsg::RcptInfoNode* RcptInfoList::mutable_rcptinfolist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoList.rcptinfolist)
  return rcptinfolist_.Mutable(index);
}
inline ::micromsg::RcptInfoNode* RcptInfoList::add_rcptinfolist() {
  // @@protoc_insertion_point(field_add:micromsg.RcptInfoList.rcptinfolist)
  return rcptinfolist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::RcptInfoNode >*
RcptInfoList::mutable_rcptinfolist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.RcptInfoList.rcptinfolist)
  return &rcptinfolist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::RcptInfoNode >&
RcptInfoList::rcptinfolist() const {
  // @@protoc_insertion_point(field_list:micromsg.RcptInfoList.rcptinfolist)
  return rcptinfolist_;
}

// required uint32 timestamp = 3;
inline bool RcptInfoList::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RcptInfoList::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RcptInfoList::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RcptInfoList::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 RcptInfoList::timestamp() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoList.timestamp)
  return timestamp_;
}
inline void RcptInfoList::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RcptInfoList.timestamp)
}

// -------------------------------------------------------------------

// RcptInfoAddRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool RcptInfoAddRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RcptInfoAddRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RcptInfoAddRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RcptInfoAddRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& RcptInfoAddRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoAddRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* RcptInfoAddRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoAddRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* RcptInfoAddRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoAddRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void RcptInfoAddRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoAddRequest.BaseRequest)
}

// required .micromsg.RcptInfoNode rcptinfo = 2;
inline bool RcptInfoAddRequest::has_rcptinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RcptInfoAddRequest::set_has_rcptinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RcptInfoAddRequest::clear_has_rcptinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RcptInfoAddRequest::clear_rcptinfo() {
  if (rcptinfo_ != NULL) rcptinfo_->::micromsg::RcptInfoNode::Clear();
  clear_has_rcptinfo();
}
inline const ::micromsg::RcptInfoNode& RcptInfoAddRequest::rcptinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoAddRequest.rcptinfo)
  return rcptinfo_ != NULL ? *rcptinfo_
                         : *::micromsg::RcptInfoNode::internal_default_instance();
}
inline ::micromsg::RcptInfoNode* RcptInfoAddRequest::mutable_rcptinfo() {
  set_has_rcptinfo();
  if (rcptinfo_ == NULL) {
    rcptinfo_ = new ::micromsg::RcptInfoNode;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoAddRequest.rcptinfo)
  return rcptinfo_;
}
inline ::micromsg::RcptInfoNode* RcptInfoAddRequest::release_rcptinfo() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoAddRequest.rcptinfo)
  clear_has_rcptinfo();
  ::micromsg::RcptInfoNode* temp = rcptinfo_;
  rcptinfo_ = NULL;
  return temp;
}
inline void RcptInfoAddRequest::set_allocated_rcptinfo(::micromsg::RcptInfoNode* rcptinfo) {
  delete rcptinfo_;
  rcptinfo_ = rcptinfo;
  if (rcptinfo) {
    set_has_rcptinfo();
  } else {
    clear_has_rcptinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoAddRequest.rcptinfo)
}

// -------------------------------------------------------------------

// RcptInfoAddResponse

// required .micromsg.RcptInfoList rcptinfolist = 1;
inline bool RcptInfoAddResponse::has_rcptinfolist() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RcptInfoAddResponse::set_has_rcptinfolist() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RcptInfoAddResponse::clear_has_rcptinfolist() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RcptInfoAddResponse::clear_rcptinfolist() {
  if (rcptinfolist_ != NULL) rcptinfolist_->::micromsg::RcptInfoList::Clear();
  clear_has_rcptinfolist();
}
inline const ::micromsg::RcptInfoList& RcptInfoAddResponse::rcptinfolist() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoAddResponse.rcptinfolist)
  return rcptinfolist_ != NULL ? *rcptinfolist_
                         : *::micromsg::RcptInfoList::internal_default_instance();
}
inline ::micromsg::RcptInfoList* RcptInfoAddResponse::mutable_rcptinfolist() {
  set_has_rcptinfolist();
  if (rcptinfolist_ == NULL) {
    rcptinfolist_ = new ::micromsg::RcptInfoList;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoAddResponse.rcptinfolist)
  return rcptinfolist_;
}
inline ::micromsg::RcptInfoList* RcptInfoAddResponse::release_rcptinfolist() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoAddResponse.rcptinfolist)
  clear_has_rcptinfolist();
  ::micromsg::RcptInfoList* temp = rcptinfolist_;
  rcptinfolist_ = NULL;
  return temp;
}
inline void RcptInfoAddResponse::set_allocated_rcptinfolist(::micromsg::RcptInfoList* rcptinfolist) {
  delete rcptinfolist_;
  rcptinfolist_ = rcptinfolist;
  if (rcptinfolist) {
    set_has_rcptinfolist();
  } else {
    clear_has_rcptinfolist();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoAddResponse.rcptinfolist)
}

// required .micromsg.BaseResponse BaseResponse = 2;
inline bool RcptInfoAddResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RcptInfoAddResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RcptInfoAddResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RcptInfoAddResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& RcptInfoAddResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoAddResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* RcptInfoAddResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoAddResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* RcptInfoAddResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoAddResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void RcptInfoAddResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoAddResponse.BaseResponse)
}

// -------------------------------------------------------------------

// RcptInfoRemoveRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool RcptInfoRemoveRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RcptInfoRemoveRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RcptInfoRemoveRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RcptInfoRemoveRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& RcptInfoRemoveRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoRemoveRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* RcptInfoRemoveRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoRemoveRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* RcptInfoRemoveRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoRemoveRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void RcptInfoRemoveRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoRemoveRequest.BaseRequest)
}

// required uint32 id = 2;
inline bool RcptInfoRemoveRequest::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RcptInfoRemoveRequest::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RcptInfoRemoveRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RcptInfoRemoveRequest::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 RcptInfoRemoveRequest::id() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoRemoveRequest.id)
  return id_;
}
inline void RcptInfoRemoveRequest::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RcptInfoRemoveRequest.id)
}

// -------------------------------------------------------------------

// RcptInfoRemoveResponse

// required uint32 id = 1;
inline bool RcptInfoRemoveResponse::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RcptInfoRemoveResponse::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RcptInfoRemoveResponse::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RcptInfoRemoveResponse::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 RcptInfoRemoveResponse::id() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoRemoveResponse.id)
  return id_;
}
inline void RcptInfoRemoveResponse::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RcptInfoRemoveResponse.id)
}

// required .micromsg.RcptInfoList rcptinfolist = 2;
inline bool RcptInfoRemoveResponse::has_rcptinfolist() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RcptInfoRemoveResponse::set_has_rcptinfolist() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RcptInfoRemoveResponse::clear_has_rcptinfolist() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RcptInfoRemoveResponse::clear_rcptinfolist() {
  if (rcptinfolist_ != NULL) rcptinfolist_->::micromsg::RcptInfoList::Clear();
  clear_has_rcptinfolist();
}
inline const ::micromsg::RcptInfoList& RcptInfoRemoveResponse::rcptinfolist() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoRemoveResponse.rcptinfolist)
  return rcptinfolist_ != NULL ? *rcptinfolist_
                         : *::micromsg::RcptInfoList::internal_default_instance();
}
inline ::micromsg::RcptInfoList* RcptInfoRemoveResponse::mutable_rcptinfolist() {
  set_has_rcptinfolist();
  if (rcptinfolist_ == NULL) {
    rcptinfolist_ = new ::micromsg::RcptInfoList;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoRemoveResponse.rcptinfolist)
  return rcptinfolist_;
}
inline ::micromsg::RcptInfoList* RcptInfoRemoveResponse::release_rcptinfolist() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoRemoveResponse.rcptinfolist)
  clear_has_rcptinfolist();
  ::micromsg::RcptInfoList* temp = rcptinfolist_;
  rcptinfolist_ = NULL;
  return temp;
}
inline void RcptInfoRemoveResponse::set_allocated_rcptinfolist(::micromsg::RcptInfoList* rcptinfolist) {
  delete rcptinfolist_;
  rcptinfolist_ = rcptinfolist;
  if (rcptinfolist) {
    set_has_rcptinfolist();
  } else {
    clear_has_rcptinfolist();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoRemoveResponse.rcptinfolist)
}

// required .micromsg.BaseResponse BaseResponse = 3;
inline bool RcptInfoRemoveResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RcptInfoRemoveResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RcptInfoRemoveResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RcptInfoRemoveResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& RcptInfoRemoveResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoRemoveResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* RcptInfoRemoveResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoRemoveResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* RcptInfoRemoveResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoRemoveResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void RcptInfoRemoveResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoRemoveResponse.BaseResponse)
}

// -------------------------------------------------------------------

// RcptInfoQueryRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool RcptInfoQueryRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RcptInfoQueryRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RcptInfoQueryRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RcptInfoQueryRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& RcptInfoQueryRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoQueryRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* RcptInfoQueryRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoQueryRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* RcptInfoQueryRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoQueryRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void RcptInfoQueryRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoQueryRequest.BaseRequest)
}

// required uint32 timestamp = 2;
inline bool RcptInfoQueryRequest::has_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RcptInfoQueryRequest::set_has_timestamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RcptInfoQueryRequest::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RcptInfoQueryRequest::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 RcptInfoQueryRequest::timestamp() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoQueryRequest.timestamp)
  return timestamp_;
}
inline void RcptInfoQueryRequest::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RcptInfoQueryRequest.timestamp)
}

// optional string webviewurl = 3;
inline bool RcptInfoQueryRequest::has_webviewurl() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RcptInfoQueryRequest::set_has_webviewurl() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RcptInfoQueryRequest::clear_has_webviewurl() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RcptInfoQueryRequest::clear_webviewurl() {
  webviewurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_webviewurl();
}
inline const ::std::string& RcptInfoQueryRequest::webviewurl() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoQueryRequest.webviewurl)
  return webviewurl_.GetNoArena();
}
inline void RcptInfoQueryRequest::set_webviewurl(const ::std::string& value) {
  set_has_webviewurl();
  webviewurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcptInfoQueryRequest.webviewurl)
}
#if LANG_CXX11
inline void RcptInfoQueryRequest::set_webviewurl(::std::string&& value) {
  set_has_webviewurl();
  webviewurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcptInfoQueryRequest.webviewurl)
}
#endif
inline void RcptInfoQueryRequest::set_webviewurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_webviewurl();
  webviewurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcptInfoQueryRequest.webviewurl)
}
inline void RcptInfoQueryRequest::set_webviewurl(const char* value, size_t size) {
  set_has_webviewurl();
  webviewurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcptInfoQueryRequest.webviewurl)
}
inline ::std::string* RcptInfoQueryRequest::mutable_webviewurl() {
  set_has_webviewurl();
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoQueryRequest.webviewurl)
  return webviewurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcptInfoQueryRequest::release_webviewurl() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoQueryRequest.webviewurl)
  clear_has_webviewurl();
  return webviewurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcptInfoQueryRequest::set_allocated_webviewurl(::std::string* webviewurl) {
  if (webviewurl != NULL) {
    set_has_webviewurl();
  } else {
    clear_has_webviewurl();
  }
  webviewurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), webviewurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoQueryRequest.webviewurl)
}

// optional string appid = 4;
inline bool RcptInfoQueryRequest::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RcptInfoQueryRequest::set_has_appid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RcptInfoQueryRequest::clear_has_appid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RcptInfoQueryRequest::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
inline const ::std::string& RcptInfoQueryRequest::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoQueryRequest.appid)
  return appid_.GetNoArena();
}
inline void RcptInfoQueryRequest::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcptInfoQueryRequest.appid)
}
#if LANG_CXX11
inline void RcptInfoQueryRequest::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcptInfoQueryRequest.appid)
}
#endif
inline void RcptInfoQueryRequest::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcptInfoQueryRequest.appid)
}
inline void RcptInfoQueryRequest::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcptInfoQueryRequest.appid)
}
inline ::std::string* RcptInfoQueryRequest::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoQueryRequest.appid)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcptInfoQueryRequest::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoQueryRequest.appid)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcptInfoQueryRequest::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoQueryRequest.appid)
}

// optional uint32 scene = 5;
inline bool RcptInfoQueryRequest::has_scene() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RcptInfoQueryRequest::set_has_scene() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RcptInfoQueryRequest::clear_has_scene() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RcptInfoQueryRequest::clear_scene() {
  scene_ = 0u;
  clear_has_scene();
}
inline ::google::protobuf::uint32 RcptInfoQueryRequest::scene() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoQueryRequest.scene)
  return scene_;
}
inline void RcptInfoQueryRequest::set_scene(::google::protobuf::uint32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RcptInfoQueryRequest.scene)
}

// -------------------------------------------------------------------

// RcptInfoQueryResponse

// required .micromsg.RcptInfoList rcptinfolist = 1;
inline bool RcptInfoQueryResponse::has_rcptinfolist() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RcptInfoQueryResponse::set_has_rcptinfolist() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RcptInfoQueryResponse::clear_has_rcptinfolist() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RcptInfoQueryResponse::clear_rcptinfolist() {
  if (rcptinfolist_ != NULL) rcptinfolist_->::micromsg::RcptInfoList::Clear();
  clear_has_rcptinfolist();
}
inline const ::micromsg::RcptInfoList& RcptInfoQueryResponse::rcptinfolist() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoQueryResponse.rcptinfolist)
  return rcptinfolist_ != NULL ? *rcptinfolist_
                         : *::micromsg::RcptInfoList::internal_default_instance();
}
inline ::micromsg::RcptInfoList* RcptInfoQueryResponse::mutable_rcptinfolist() {
  set_has_rcptinfolist();
  if (rcptinfolist_ == NULL) {
    rcptinfolist_ = new ::micromsg::RcptInfoList;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoQueryResponse.rcptinfolist)
  return rcptinfolist_;
}
inline ::micromsg::RcptInfoList* RcptInfoQueryResponse::release_rcptinfolist() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoQueryResponse.rcptinfolist)
  clear_has_rcptinfolist();
  ::micromsg::RcptInfoList* temp = rcptinfolist_;
  rcptinfolist_ = NULL;
  return temp;
}
inline void RcptInfoQueryResponse::set_allocated_rcptinfolist(::micromsg::RcptInfoList* rcptinfolist) {
  delete rcptinfolist_;
  rcptinfolist_ = rcptinfolist;
  if (rcptinfolist) {
    set_has_rcptinfolist();
  } else {
    clear_has_rcptinfolist();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoQueryResponse.rcptinfolist)
}

// required uint32 islatest = 2;
inline bool RcptInfoQueryResponse::has_islatest() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RcptInfoQueryResponse::set_has_islatest() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RcptInfoQueryResponse::clear_has_islatest() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RcptInfoQueryResponse::clear_islatest() {
  islatest_ = 0u;
  clear_has_islatest();
}
inline ::google::protobuf::uint32 RcptInfoQueryResponse::islatest() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoQueryResponse.islatest)
  return islatest_;
}
inline void RcptInfoQueryResponse::set_islatest(::google::protobuf::uint32 value) {
  set_has_islatest();
  islatest_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RcptInfoQueryResponse.islatest)
}

// required .micromsg.BaseResponse BaseResponse = 3;
inline bool RcptInfoQueryResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RcptInfoQueryResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RcptInfoQueryResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RcptInfoQueryResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& RcptInfoQueryResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoQueryResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* RcptInfoQueryResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoQueryResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* RcptInfoQueryResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoQueryResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void RcptInfoQueryResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoQueryResponse.BaseResponse)
}

// optional string appusername = 4;
inline bool RcptInfoQueryResponse::has_appusername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RcptInfoQueryResponse::set_has_appusername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RcptInfoQueryResponse::clear_has_appusername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RcptInfoQueryResponse::clear_appusername() {
  appusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appusername();
}
inline const ::std::string& RcptInfoQueryResponse::appusername() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoQueryResponse.appusername)
  return appusername_.GetNoArena();
}
inline void RcptInfoQueryResponse::set_appusername(const ::std::string& value) {
  set_has_appusername();
  appusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcptInfoQueryResponse.appusername)
}
#if LANG_CXX11
inline void RcptInfoQueryResponse::set_appusername(::std::string&& value) {
  set_has_appusername();
  appusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcptInfoQueryResponse.appusername)
}
#endif
inline void RcptInfoQueryResponse::set_appusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appusername();
  appusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcptInfoQueryResponse.appusername)
}
inline void RcptInfoQueryResponse::set_appusername(const char* value, size_t size) {
  set_has_appusername();
  appusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcptInfoQueryResponse.appusername)
}
inline ::std::string* RcptInfoQueryResponse::mutable_appusername() {
  set_has_appusername();
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoQueryResponse.appusername)
  return appusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcptInfoQueryResponse::release_appusername() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoQueryResponse.appusername)
  clear_has_appusername();
  return appusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcptInfoQueryResponse::set_allocated_appusername(::std::string* appusername) {
  if (appusername != NULL) {
    set_has_appusername();
  } else {
    clear_has_appusername();
  }
  appusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appusername);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoQueryResponse.appusername)
}

// optional uint32 isauthority = 5;
inline bool RcptInfoQueryResponse::has_isauthority() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RcptInfoQueryResponse::set_has_isauthority() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RcptInfoQueryResponse::clear_has_isauthority() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RcptInfoQueryResponse::clear_isauthority() {
  isauthority_ = 0u;
  clear_has_isauthority();
}
inline ::google::protobuf::uint32 RcptInfoQueryResponse::isauthority() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoQueryResponse.isauthority)
  return isauthority_;
}
inline void RcptInfoQueryResponse::set_isauthority(::google::protobuf::uint32 value) {
  set_has_isauthority();
  isauthority_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RcptInfoQueryResponse.isauthority)
}

// optional string appnickname = 6;
inline bool RcptInfoQueryResponse::has_appnickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RcptInfoQueryResponse::set_has_appnickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RcptInfoQueryResponse::clear_has_appnickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RcptInfoQueryResponse::clear_appnickname() {
  appnickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appnickname();
}
inline const ::std::string& RcptInfoQueryResponse::appnickname() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoQueryResponse.appnickname)
  return appnickname_.GetNoArena();
}
inline void RcptInfoQueryResponse::set_appnickname(const ::std::string& value) {
  set_has_appnickname();
  appnickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RcptInfoQueryResponse.appnickname)
}
#if LANG_CXX11
inline void RcptInfoQueryResponse::set_appnickname(::std::string&& value) {
  set_has_appnickname();
  appnickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RcptInfoQueryResponse.appnickname)
}
#endif
inline void RcptInfoQueryResponse::set_appnickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appnickname();
  appnickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RcptInfoQueryResponse.appnickname)
}
inline void RcptInfoQueryResponse::set_appnickname(const char* value, size_t size) {
  set_has_appnickname();
  appnickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RcptInfoQueryResponse.appnickname)
}
inline ::std::string* RcptInfoQueryResponse::mutable_appnickname() {
  set_has_appnickname();
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoQueryResponse.appnickname)
  return appnickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RcptInfoQueryResponse::release_appnickname() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoQueryResponse.appnickname)
  clear_has_appnickname();
  return appnickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RcptInfoQueryResponse::set_allocated_appnickname(::std::string* appnickname) {
  if (appnickname != NULL) {
    set_has_appnickname();
  } else {
    clear_has_appnickname();
  }
  appnickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appnickname);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoQueryResponse.appnickname)
}

// -------------------------------------------------------------------

// RcptInfoUpdateRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool RcptInfoUpdateRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RcptInfoUpdateRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RcptInfoUpdateRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RcptInfoUpdateRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& RcptInfoUpdateRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoUpdateRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* RcptInfoUpdateRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoUpdateRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* RcptInfoUpdateRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoUpdateRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void RcptInfoUpdateRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoUpdateRequest.BaseRequest)
}

// required .micromsg.RcptInfoNode rcptinfo = 2;
inline bool RcptInfoUpdateRequest::has_rcptinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RcptInfoUpdateRequest::set_has_rcptinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RcptInfoUpdateRequest::clear_has_rcptinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RcptInfoUpdateRequest::clear_rcptinfo() {
  if (rcptinfo_ != NULL) rcptinfo_->::micromsg::RcptInfoNode::Clear();
  clear_has_rcptinfo();
}
inline const ::micromsg::RcptInfoNode& RcptInfoUpdateRequest::rcptinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoUpdateRequest.rcptinfo)
  return rcptinfo_ != NULL ? *rcptinfo_
                         : *::micromsg::RcptInfoNode::internal_default_instance();
}
inline ::micromsg::RcptInfoNode* RcptInfoUpdateRequest::mutable_rcptinfo() {
  set_has_rcptinfo();
  if (rcptinfo_ == NULL) {
    rcptinfo_ = new ::micromsg::RcptInfoNode;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoUpdateRequest.rcptinfo)
  return rcptinfo_;
}
inline ::micromsg::RcptInfoNode* RcptInfoUpdateRequest::release_rcptinfo() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoUpdateRequest.rcptinfo)
  clear_has_rcptinfo();
  ::micromsg::RcptInfoNode* temp = rcptinfo_;
  rcptinfo_ = NULL;
  return temp;
}
inline void RcptInfoUpdateRequest::set_allocated_rcptinfo(::micromsg::RcptInfoNode* rcptinfo) {
  delete rcptinfo_;
  rcptinfo_ = rcptinfo;
  if (rcptinfo) {
    set_has_rcptinfo();
  } else {
    clear_has_rcptinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoUpdateRequest.rcptinfo)
}

// -------------------------------------------------------------------

// RcptInfoUpdateResponse

// required .micromsg.RcptInfoList rcptinfolist = 1;
inline bool RcptInfoUpdateResponse::has_rcptinfolist() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RcptInfoUpdateResponse::set_has_rcptinfolist() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RcptInfoUpdateResponse::clear_has_rcptinfolist() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RcptInfoUpdateResponse::clear_rcptinfolist() {
  if (rcptinfolist_ != NULL) rcptinfolist_->::micromsg::RcptInfoList::Clear();
  clear_has_rcptinfolist();
}
inline const ::micromsg::RcptInfoList& RcptInfoUpdateResponse::rcptinfolist() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoUpdateResponse.rcptinfolist)
  return rcptinfolist_ != NULL ? *rcptinfolist_
                         : *::micromsg::RcptInfoList::internal_default_instance();
}
inline ::micromsg::RcptInfoList* RcptInfoUpdateResponse::mutable_rcptinfolist() {
  set_has_rcptinfolist();
  if (rcptinfolist_ == NULL) {
    rcptinfolist_ = new ::micromsg::RcptInfoList;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoUpdateResponse.rcptinfolist)
  return rcptinfolist_;
}
inline ::micromsg::RcptInfoList* RcptInfoUpdateResponse::release_rcptinfolist() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoUpdateResponse.rcptinfolist)
  clear_has_rcptinfolist();
  ::micromsg::RcptInfoList* temp = rcptinfolist_;
  rcptinfolist_ = NULL;
  return temp;
}
inline void RcptInfoUpdateResponse::set_allocated_rcptinfolist(::micromsg::RcptInfoList* rcptinfolist) {
  delete rcptinfolist_;
  rcptinfolist_ = rcptinfolist;
  if (rcptinfolist) {
    set_has_rcptinfolist();
  } else {
    clear_has_rcptinfolist();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoUpdateResponse.rcptinfolist)
}

// required .micromsg.BaseResponse BaseResponse = 2;
inline bool RcptInfoUpdateResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RcptInfoUpdateResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RcptInfoUpdateResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RcptInfoUpdateResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& RcptInfoUpdateResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoUpdateResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* RcptInfoUpdateResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoUpdateResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* RcptInfoUpdateResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoUpdateResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void RcptInfoUpdateResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoUpdateResponse.BaseResponse)
}

// -------------------------------------------------------------------

// RcptInfoTouchRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool RcptInfoTouchRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RcptInfoTouchRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RcptInfoTouchRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RcptInfoTouchRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& RcptInfoTouchRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoTouchRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* RcptInfoTouchRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoTouchRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* RcptInfoTouchRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoTouchRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void RcptInfoTouchRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoTouchRequest.BaseRequest)
}

// required uint32 id = 2;
inline bool RcptInfoTouchRequest::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RcptInfoTouchRequest::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RcptInfoTouchRequest::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RcptInfoTouchRequest::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 RcptInfoTouchRequest::id() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoTouchRequest.id)
  return id_;
}
inline void RcptInfoTouchRequest::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RcptInfoTouchRequest.id)
}

// -------------------------------------------------------------------

// RcptInfoTouchResponse

// required .micromsg.RcptInfoList rcptinfolist = 1;
inline bool RcptInfoTouchResponse::has_rcptinfolist() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RcptInfoTouchResponse::set_has_rcptinfolist() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RcptInfoTouchResponse::clear_has_rcptinfolist() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RcptInfoTouchResponse::clear_rcptinfolist() {
  if (rcptinfolist_ != NULL) rcptinfolist_->::micromsg::RcptInfoList::Clear();
  clear_has_rcptinfolist();
}
inline const ::micromsg::RcptInfoList& RcptInfoTouchResponse::rcptinfolist() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoTouchResponse.rcptinfolist)
  return rcptinfolist_ != NULL ? *rcptinfolist_
                         : *::micromsg::RcptInfoList::internal_default_instance();
}
inline ::micromsg::RcptInfoList* RcptInfoTouchResponse::mutable_rcptinfolist() {
  set_has_rcptinfolist();
  if (rcptinfolist_ == NULL) {
    rcptinfolist_ = new ::micromsg::RcptInfoList;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoTouchResponse.rcptinfolist)
  return rcptinfolist_;
}
inline ::micromsg::RcptInfoList* RcptInfoTouchResponse::release_rcptinfolist() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoTouchResponse.rcptinfolist)
  clear_has_rcptinfolist();
  ::micromsg::RcptInfoList* temp = rcptinfolist_;
  rcptinfolist_ = NULL;
  return temp;
}
inline void RcptInfoTouchResponse::set_allocated_rcptinfolist(::micromsg::RcptInfoList* rcptinfolist) {
  delete rcptinfolist_;
  rcptinfolist_ = rcptinfolist;
  if (rcptinfolist) {
    set_has_rcptinfolist();
  } else {
    clear_has_rcptinfolist();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoTouchResponse.rcptinfolist)
}

// required .micromsg.BaseResponse BaseResponse = 2;
inline bool RcptInfoTouchResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RcptInfoTouchResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RcptInfoTouchResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RcptInfoTouchResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& RcptInfoTouchResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoTouchResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* RcptInfoTouchResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoTouchResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* RcptInfoTouchResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoTouchResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void RcptInfoTouchResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoTouchResponse.BaseResponse)
}

// -------------------------------------------------------------------

// RcptInfoImportYiXunRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool RcptInfoImportYiXunRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RcptInfoImportYiXunRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RcptInfoImportYiXunRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RcptInfoImportYiXunRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& RcptInfoImportYiXunRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoImportYiXunRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* RcptInfoImportYiXunRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoImportYiXunRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* RcptInfoImportYiXunRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoImportYiXunRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void RcptInfoImportYiXunRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoImportYiXunRequest.BaseRequest)
}

// required uint32 qq = 2;
inline bool RcptInfoImportYiXunRequest::has_qq() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RcptInfoImportYiXunRequest::set_has_qq() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RcptInfoImportYiXunRequest::clear_has_qq() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RcptInfoImportYiXunRequest::clear_qq() {
  qq_ = 0u;
  clear_has_qq();
}
inline ::google::protobuf::uint32 RcptInfoImportYiXunRequest::qq() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoImportYiXunRequest.qq)
  return qq_;
}
inline void RcptInfoImportYiXunRequest::set_qq(::google::protobuf::uint32 value) {
  set_has_qq();
  qq_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RcptInfoImportYiXunRequest.qq)
}

// optional .micromsg.SKBuiltinBuffer_t A2Key = 3;
inline bool RcptInfoImportYiXunRequest::has_a2key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RcptInfoImportYiXunRequest::set_has_a2key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RcptInfoImportYiXunRequest::clear_has_a2key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RcptInfoImportYiXunRequest::clear_a2key() {
  if (a2key_ != NULL) a2key_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_a2key();
}
inline const ::micromsg::SKBuiltinBuffer_t& RcptInfoImportYiXunRequest::a2key() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoImportYiXunRequest.A2Key)
  return a2key_ != NULL ? *a2key_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* RcptInfoImportYiXunRequest::mutable_a2key() {
  set_has_a2key();
  if (a2key_ == NULL) {
    a2key_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoImportYiXunRequest.A2Key)
  return a2key_;
}
inline ::micromsg::SKBuiltinBuffer_t* RcptInfoImportYiXunRequest::release_a2key() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoImportYiXunRequest.A2Key)
  clear_has_a2key();
  ::micromsg::SKBuiltinBuffer_t* temp = a2key_;
  a2key_ = NULL;
  return temp;
}
inline void RcptInfoImportYiXunRequest::set_allocated_a2key(::micromsg::SKBuiltinBuffer_t* a2key) {
  delete a2key_;
  a2key_ = a2key;
  if (a2key) {
    set_has_a2key();
  } else {
    clear_has_a2key();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoImportYiXunRequest.A2Key)
}

// optional .micromsg.SKBuiltinBuffer_t NewA2Key = 4;
inline bool RcptInfoImportYiXunRequest::has_newa2key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RcptInfoImportYiXunRequest::set_has_newa2key() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RcptInfoImportYiXunRequest::clear_has_newa2key() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RcptInfoImportYiXunRequest::clear_newa2key() {
  if (newa2key_ != NULL) newa2key_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_newa2key();
}
inline const ::micromsg::SKBuiltinBuffer_t& RcptInfoImportYiXunRequest::newa2key() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoImportYiXunRequest.NewA2Key)
  return newa2key_ != NULL ? *newa2key_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* RcptInfoImportYiXunRequest::mutable_newa2key() {
  set_has_newa2key();
  if (newa2key_ == NULL) {
    newa2key_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoImportYiXunRequest.NewA2Key)
  return newa2key_;
}
inline ::micromsg::SKBuiltinBuffer_t* RcptInfoImportYiXunRequest::release_newa2key() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoImportYiXunRequest.NewA2Key)
  clear_has_newa2key();
  ::micromsg::SKBuiltinBuffer_t* temp = newa2key_;
  newa2key_ = NULL;
  return temp;
}
inline void RcptInfoImportYiXunRequest::set_allocated_newa2key(::micromsg::SKBuiltinBuffer_t* newa2key) {
  delete newa2key_;
  newa2key_ = newa2key;
  if (newa2key) {
    set_has_newa2key();
  } else {
    clear_has_newa2key();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoImportYiXunRequest.NewA2Key)
}

// -------------------------------------------------------------------

// RcptInfoImportYiXunResponse

// required .micromsg.RcptInfoList rcptinfolist = 1;
inline bool RcptInfoImportYiXunResponse::has_rcptinfolist() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RcptInfoImportYiXunResponse::set_has_rcptinfolist() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RcptInfoImportYiXunResponse::clear_has_rcptinfolist() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RcptInfoImportYiXunResponse::clear_rcptinfolist() {
  if (rcptinfolist_ != NULL) rcptinfolist_->::micromsg::RcptInfoList::Clear();
  clear_has_rcptinfolist();
}
inline const ::micromsg::RcptInfoList& RcptInfoImportYiXunResponse::rcptinfolist() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoImportYiXunResponse.rcptinfolist)
  return rcptinfolist_ != NULL ? *rcptinfolist_
                         : *::micromsg::RcptInfoList::internal_default_instance();
}
inline ::micromsg::RcptInfoList* RcptInfoImportYiXunResponse::mutable_rcptinfolist() {
  set_has_rcptinfolist();
  if (rcptinfolist_ == NULL) {
    rcptinfolist_ = new ::micromsg::RcptInfoList;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoImportYiXunResponse.rcptinfolist)
  return rcptinfolist_;
}
inline ::micromsg::RcptInfoList* RcptInfoImportYiXunResponse::release_rcptinfolist() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoImportYiXunResponse.rcptinfolist)
  clear_has_rcptinfolist();
  ::micromsg::RcptInfoList* temp = rcptinfolist_;
  rcptinfolist_ = NULL;
  return temp;
}
inline void RcptInfoImportYiXunResponse::set_allocated_rcptinfolist(::micromsg::RcptInfoList* rcptinfolist) {
  delete rcptinfolist_;
  rcptinfolist_ = rcptinfolist;
  if (rcptinfolist) {
    set_has_rcptinfolist();
  } else {
    clear_has_rcptinfolist();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoImportYiXunResponse.rcptinfolist)
}

// required int32 rcptinfoimportstatus = 2;
inline bool RcptInfoImportYiXunResponse::has_rcptinfoimportstatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RcptInfoImportYiXunResponse::set_has_rcptinfoimportstatus() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RcptInfoImportYiXunResponse::clear_has_rcptinfoimportstatus() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RcptInfoImportYiXunResponse::clear_rcptinfoimportstatus() {
  rcptinfoimportstatus_ = 0;
  clear_has_rcptinfoimportstatus();
}
inline ::google::protobuf::int32 RcptInfoImportYiXunResponse::rcptinfoimportstatus() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoImportYiXunResponse.rcptinfoimportstatus)
  return rcptinfoimportstatus_;
}
inline void RcptInfoImportYiXunResponse::set_rcptinfoimportstatus(::google::protobuf::int32 value) {
  set_has_rcptinfoimportstatus();
  rcptinfoimportstatus_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RcptInfoImportYiXunResponse.rcptinfoimportstatus)
}

// required .micromsg.BaseResponse BaseResponse = 3;
inline bool RcptInfoImportYiXunResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RcptInfoImportYiXunResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RcptInfoImportYiXunResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RcptInfoImportYiXunResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& RcptInfoImportYiXunResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.RcptInfoImportYiXunResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* RcptInfoImportYiXunResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RcptInfoImportYiXunResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* RcptInfoImportYiXunResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.RcptInfoImportYiXunResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void RcptInfoImportYiXunResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RcptInfoImportYiXunResponse.BaseResponse)
}

// -------------------------------------------------------------------

// GenBizIapPrepayRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GenBizIapPrepayRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GenBizIapPrepayRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GenBizIapPrepayRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GenBizIapPrepayRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GenBizIapPrepayRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GenBizIapPrepayRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GenBizIapPrepayRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GenBizIapPrepayRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GenBizIapPrepayRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GenBizIapPrepayRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GenBizIapPrepayRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GenBizIapPrepayRequest.BaseRequest)
}

// optional string AppId = 2;
inline bool GenBizIapPrepayRequest::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GenBizIapPrepayRequest::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GenBizIapPrepayRequest::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GenBizIapPrepayRequest::clear_appid() {
  appid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_appid();
}
inline const ::std::string& GenBizIapPrepayRequest::appid() const {
  // @@protoc_insertion_point(field_get:micromsg.GenBizIapPrepayRequest.AppId)
  return appid_.GetNoArena();
}
inline void GenBizIapPrepayRequest::set_appid(const ::std::string& value) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GenBizIapPrepayRequest.AppId)
}
#if LANG_CXX11
inline void GenBizIapPrepayRequest::set_appid(::std::string&& value) {
  set_has_appid();
  appid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GenBizIapPrepayRequest.AppId)
}
#endif
inline void GenBizIapPrepayRequest::set_appid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GenBizIapPrepayRequest.AppId)
}
inline void GenBizIapPrepayRequest::set_appid(const char* value, size_t size) {
  set_has_appid();
  appid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GenBizIapPrepayRequest.AppId)
}
inline ::std::string* GenBizIapPrepayRequest::mutable_appid() {
  set_has_appid();
  // @@protoc_insertion_point(field_mutable:micromsg.GenBizIapPrepayRequest.AppId)
  return appid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GenBizIapPrepayRequest::release_appid() {
  // @@protoc_insertion_point(field_release:micromsg.GenBizIapPrepayRequest.AppId)
  clear_has_appid();
  return appid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GenBizIapPrepayRequest::set_allocated_appid(::std::string* appid) {
  if (appid != NULL) {
    set_has_appid();
  } else {
    clear_has_appid();
  }
  appid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), appid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GenBizIapPrepayRequest.AppId)
}

// optional string NonceStr = 3;
inline bool GenBizIapPrepayRequest::has_noncestr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GenBizIapPrepayRequest::set_has_noncestr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GenBizIapPrepayRequest::clear_has_noncestr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GenBizIapPrepayRequest::clear_noncestr() {
  noncestr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_noncestr();
}
inline const ::std::string& GenBizIapPrepayRequest::noncestr() const {
  // @@protoc_insertion_point(field_get:micromsg.GenBizIapPrepayRequest.NonceStr)
  return noncestr_.GetNoArena();
}
inline void GenBizIapPrepayRequest::set_noncestr(const ::std::string& value) {
  set_has_noncestr();
  noncestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GenBizIapPrepayRequest.NonceStr)
}
#if LANG_CXX11
inline void GenBizIapPrepayRequest::set_noncestr(::std::string&& value) {
  set_has_noncestr();
  noncestr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GenBizIapPrepayRequest.NonceStr)
}
#endif
inline void GenBizIapPrepayRequest::set_noncestr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_noncestr();
  noncestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GenBizIapPrepayRequest.NonceStr)
}
inline void GenBizIapPrepayRequest::set_noncestr(const char* value, size_t size) {
  set_has_noncestr();
  noncestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GenBizIapPrepayRequest.NonceStr)
}
inline ::std::string* GenBizIapPrepayRequest::mutable_noncestr() {
  set_has_noncestr();
  // @@protoc_insertion_point(field_mutable:micromsg.GenBizIapPrepayRequest.NonceStr)
  return noncestr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GenBizIapPrepayRequest::release_noncestr() {
  // @@protoc_insertion_point(field_release:micromsg.GenBizIapPrepayRequest.NonceStr)
  clear_has_noncestr();
  return noncestr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GenBizIapPrepayRequest::set_allocated_noncestr(::std::string* noncestr) {
  if (noncestr != NULL) {
    set_has_noncestr();
  } else {
    clear_has_noncestr();
  }
  noncestr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), noncestr);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GenBizIapPrepayRequest.NonceStr)
}

// optional string TimeStamp = 4;
inline bool GenBizIapPrepayRequest::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GenBizIapPrepayRequest::set_has_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GenBizIapPrepayRequest::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GenBizIapPrepayRequest::clear_timestamp() {
  timestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_timestamp();
}
inline const ::std::string& GenBizIapPrepayRequest::timestamp() const {
  // @@protoc_insertion_point(field_get:micromsg.GenBizIapPrepayRequest.TimeStamp)
  return timestamp_.GetNoArena();
}
inline void GenBizIapPrepayRequest::set_timestamp(const ::std::string& value) {
  set_has_timestamp();
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GenBizIapPrepayRequest.TimeStamp)
}
#if LANG_CXX11
inline void GenBizIapPrepayRequest::set_timestamp(::std::string&& value) {
  set_has_timestamp();
  timestamp_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GenBizIapPrepayRequest.TimeStamp)
}
#endif
inline void GenBizIapPrepayRequest::set_timestamp(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_timestamp();
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GenBizIapPrepayRequest.TimeStamp)
}
inline void GenBizIapPrepayRequest::set_timestamp(const char* value, size_t size) {
  set_has_timestamp();
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GenBizIapPrepayRequest.TimeStamp)
}
inline ::std::string* GenBizIapPrepayRequest::mutable_timestamp() {
  set_has_timestamp();
  // @@protoc_insertion_point(field_mutable:micromsg.GenBizIapPrepayRequest.TimeStamp)
  return timestamp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GenBizIapPrepayRequest::release_timestamp() {
  // @@protoc_insertion_point(field_release:micromsg.GenBizIapPrepayRequest.TimeStamp)
  clear_has_timestamp();
  return timestamp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GenBizIapPrepayRequest::set_allocated_timestamp(::std::string* timestamp) {
  if (timestamp != NULL) {
    set_has_timestamp();
  } else {
    clear_has_timestamp();
  }
  timestamp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), timestamp);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GenBizIapPrepayRequest.TimeStamp)
}

// optional string Package = 5;
inline bool GenBizIapPrepayRequest::has_package() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GenBizIapPrepayRequest::set_has_package() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GenBizIapPrepayRequest::clear_has_package() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GenBizIapPrepayRequest::clear_package() {
  package_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_package();
}
inline const ::std::string& GenBizIapPrepayRequest::package() const {
  // @@protoc_insertion_point(field_get:micromsg.GenBizIapPrepayRequest.Package)
  return package_.GetNoArena();
}
inline void GenBizIapPrepayRequest::set_package(const ::std::string& value) {
  set_has_package();
  package_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GenBizIapPrepayRequest.Package)
}
#if LANG_CXX11
inline void GenBizIapPrepayRequest::set_package(::std::string&& value) {
  set_has_package();
  package_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GenBizIapPrepayRequest.Package)
}
#endif
inline void GenBizIapPrepayRequest::set_package(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_package();
  package_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GenBizIapPrepayRequest.Package)
}
inline void GenBizIapPrepayRequest::set_package(const char* value, size_t size) {
  set_has_package();
  package_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GenBizIapPrepayRequest.Package)
}
inline ::std::string* GenBizIapPrepayRequest::mutable_package() {
  set_has_package();
  // @@protoc_insertion_point(field_mutable:micromsg.GenBizIapPrepayRequest.Package)
  return package_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GenBizIapPrepayRequest::release_package() {
  // @@protoc_insertion_point(field_release:micromsg.GenBizIapPrepayRequest.Package)
  clear_has_package();
  return package_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GenBizIapPrepayRequest::set_allocated_package(::std::string* package) {
  if (package != NULL) {
    set_has_package();
  } else {
    clear_has_package();
  }
  package_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GenBizIapPrepayRequest.Package)
}

// optional string PaySign = 6;
inline bool GenBizIapPrepayRequest::has_paysign() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GenBizIapPrepayRequest::set_has_paysign() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GenBizIapPrepayRequest::clear_has_paysign() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GenBizIapPrepayRequest::clear_paysign() {
  paysign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_paysign();
}
inline const ::std::string& GenBizIapPrepayRequest::paysign() const {
  // @@protoc_insertion_point(field_get:micromsg.GenBizIapPrepayRequest.PaySign)
  return paysign_.GetNoArena();
}
inline void GenBizIapPrepayRequest::set_paysign(const ::std::string& value) {
  set_has_paysign();
  paysign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GenBizIapPrepayRequest.PaySign)
}
#if LANG_CXX11
inline void GenBizIapPrepayRequest::set_paysign(::std::string&& value) {
  set_has_paysign();
  paysign_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GenBizIapPrepayRequest.PaySign)
}
#endif
inline void GenBizIapPrepayRequest::set_paysign(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_paysign();
  paysign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GenBizIapPrepayRequest.PaySign)
}
inline void GenBizIapPrepayRequest::set_paysign(const char* value, size_t size) {
  set_has_paysign();
  paysign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GenBizIapPrepayRequest.PaySign)
}
inline ::std::string* GenBizIapPrepayRequest::mutable_paysign() {
  set_has_paysign();
  // @@protoc_insertion_point(field_mutable:micromsg.GenBizIapPrepayRequest.PaySign)
  return paysign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GenBizIapPrepayRequest::release_paysign() {
  // @@protoc_insertion_point(field_release:micromsg.GenBizIapPrepayRequest.PaySign)
  clear_has_paysign();
  return paysign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GenBizIapPrepayRequest::set_allocated_paysign(::std::string* paysign) {
  if (paysign != NULL) {
    set_has_paysign();
  } else {
    clear_has_paysign();
  }
  paysign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), paysign);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GenBizIapPrepayRequest.PaySign)
}

// optional string SignType = 7;
inline bool GenBizIapPrepayRequest::has_signtype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GenBizIapPrepayRequest::set_has_signtype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GenBizIapPrepayRequest::clear_has_signtype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GenBizIapPrepayRequest::clear_signtype() {
  signtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_signtype();
}
inline const ::std::string& GenBizIapPrepayRequest::signtype() const {
  // @@protoc_insertion_point(field_get:micromsg.GenBizIapPrepayRequest.SignType)
  return signtype_.GetNoArena();
}
inline void GenBizIapPrepayRequest::set_signtype(const ::std::string& value) {
  set_has_signtype();
  signtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GenBizIapPrepayRequest.SignType)
}
#if LANG_CXX11
inline void GenBizIapPrepayRequest::set_signtype(::std::string&& value) {
  set_has_signtype();
  signtype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GenBizIapPrepayRequest.SignType)
}
#endif
inline void GenBizIapPrepayRequest::set_signtype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_signtype();
  signtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GenBizIapPrepayRequest.SignType)
}
inline void GenBizIapPrepayRequest::set_signtype(const char* value, size_t size) {
  set_has_signtype();
  signtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GenBizIapPrepayRequest.SignType)
}
inline ::std::string* GenBizIapPrepayRequest::mutable_signtype() {
  set_has_signtype();
  // @@protoc_insertion_point(field_mutable:micromsg.GenBizIapPrepayRequest.SignType)
  return signtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GenBizIapPrepayRequest::release_signtype() {
  // @@protoc_insertion_point(field_release:micromsg.GenBizIapPrepayRequest.SignType)
  clear_has_signtype();
  return signtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GenBizIapPrepayRequest::set_allocated_signtype(::std::string* signtype) {
  if (signtype != NULL) {
    set_has_signtype();
  } else {
    clear_has_signtype();
  }
  signtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signtype);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GenBizIapPrepayRequest.SignType)
}

// optional string StepInUrl = 8;
inline bool GenBizIapPrepayRequest::has_stepinurl() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GenBizIapPrepayRequest::set_has_stepinurl() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GenBizIapPrepayRequest::clear_has_stepinurl() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GenBizIapPrepayRequest::clear_stepinurl() {
  stepinurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_stepinurl();
}
inline const ::std::string& GenBizIapPrepayRequest::stepinurl() const {
  // @@protoc_insertion_point(field_get:micromsg.GenBizIapPrepayRequest.StepInUrl)
  return stepinurl_.GetNoArena();
}
inline void GenBizIapPrepayRequest::set_stepinurl(const ::std::string& value) {
  set_has_stepinurl();
  stepinurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GenBizIapPrepayRequest.StepInUrl)
}
#if LANG_CXX11
inline void GenBizIapPrepayRequest::set_stepinurl(::std::string&& value) {
  set_has_stepinurl();
  stepinurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GenBizIapPrepayRequest.StepInUrl)
}
#endif
inline void GenBizIapPrepayRequest::set_stepinurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_stepinurl();
  stepinurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GenBizIapPrepayRequest.StepInUrl)
}
inline void GenBizIapPrepayRequest::set_stepinurl(const char* value, size_t size) {
  set_has_stepinurl();
  stepinurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GenBizIapPrepayRequest.StepInUrl)
}
inline ::std::string* GenBizIapPrepayRequest::mutable_stepinurl() {
  set_has_stepinurl();
  // @@protoc_insertion_point(field_mutable:micromsg.GenBizIapPrepayRequest.StepInUrl)
  return stepinurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GenBizIapPrepayRequest::release_stepinurl() {
  // @@protoc_insertion_point(field_release:micromsg.GenBizIapPrepayRequest.StepInUrl)
  clear_has_stepinurl();
  return stepinurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GenBizIapPrepayRequest::set_allocated_stepinurl(::std::string* stepinurl) {
  if (stepinurl != NULL) {
    set_has_stepinurl();
  } else {
    clear_has_stepinurl();
  }
  stepinurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stepinurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GenBizIapPrepayRequest.StepInUrl)
}

// -------------------------------------------------------------------

// GenBizIapPrepayResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GenBizIapPrepayResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GenBizIapPrepayResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GenBizIapPrepayResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GenBizIapPrepayResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GenBizIapPrepayResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GenBizIapPrepayResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GenBizIapPrepayResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GenBizIapPrepayResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GenBizIapPrepayResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GenBizIapPrepayResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GenBizIapPrepayResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GenBizIapPrepayResponse.BaseResponse)
}

// optional string ProductId = 2;
inline bool GenBizIapPrepayResponse::has_productid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GenBizIapPrepayResponse::set_has_productid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GenBizIapPrepayResponse::clear_has_productid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GenBizIapPrepayResponse::clear_productid() {
  productid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_productid();
}
inline const ::std::string& GenBizIapPrepayResponse::productid() const {
  // @@protoc_insertion_point(field_get:micromsg.GenBizIapPrepayResponse.ProductId)
  return productid_.GetNoArena();
}
inline void GenBizIapPrepayResponse::set_productid(const ::std::string& value) {
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GenBizIapPrepayResponse.ProductId)
}
#if LANG_CXX11
inline void GenBizIapPrepayResponse::set_productid(::std::string&& value) {
  set_has_productid();
  productid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GenBizIapPrepayResponse.ProductId)
}
#endif
inline void GenBizIapPrepayResponse::set_productid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GenBizIapPrepayResponse.ProductId)
}
inline void GenBizIapPrepayResponse::set_productid(const char* value, size_t size) {
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GenBizIapPrepayResponse.ProductId)
}
inline ::std::string* GenBizIapPrepayResponse::mutable_productid() {
  set_has_productid();
  // @@protoc_insertion_point(field_mutable:micromsg.GenBizIapPrepayResponse.ProductId)
  return productid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GenBizIapPrepayResponse::release_productid() {
  // @@protoc_insertion_point(field_release:micromsg.GenBizIapPrepayResponse.ProductId)
  clear_has_productid();
  return productid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GenBizIapPrepayResponse::set_allocated_productid(::std::string* productid) {
  if (productid != NULL) {
    set_has_productid();
  } else {
    clear_has_productid();
  }
  productid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GenBizIapPrepayResponse.ProductId)
}

// optional string ExtInfo = 4;
inline bool GenBizIapPrepayResponse::has_extinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GenBizIapPrepayResponse::set_has_extinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GenBizIapPrepayResponse::clear_has_extinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GenBizIapPrepayResponse::clear_extinfo() {
  extinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_extinfo();
}
inline const ::std::string& GenBizIapPrepayResponse::extinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.GenBizIapPrepayResponse.ExtInfo)
  return extinfo_.GetNoArena();
}
inline void GenBizIapPrepayResponse::set_extinfo(const ::std::string& value) {
  set_has_extinfo();
  extinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GenBizIapPrepayResponse.ExtInfo)
}
#if LANG_CXX11
inline void GenBizIapPrepayResponse::set_extinfo(::std::string&& value) {
  set_has_extinfo();
  extinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GenBizIapPrepayResponse.ExtInfo)
}
#endif
inline void GenBizIapPrepayResponse::set_extinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_extinfo();
  extinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GenBizIapPrepayResponse.ExtInfo)
}
inline void GenBizIapPrepayResponse::set_extinfo(const char* value, size_t size) {
  set_has_extinfo();
  extinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GenBizIapPrepayResponse.ExtInfo)
}
inline ::std::string* GenBizIapPrepayResponse::mutable_extinfo() {
  set_has_extinfo();
  // @@protoc_insertion_point(field_mutable:micromsg.GenBizIapPrepayResponse.ExtInfo)
  return extinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GenBizIapPrepayResponse::release_extinfo() {
  // @@protoc_insertion_point(field_release:micromsg.GenBizIapPrepayResponse.ExtInfo)
  clear_has_extinfo();
  return extinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GenBizIapPrepayResponse::set_allocated_extinfo(::std::string* extinfo) {
  if (extinfo != NULL) {
    set_has_extinfo();
  } else {
    clear_has_extinfo();
  }
  extinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extinfo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GenBizIapPrepayResponse.ExtInfo)
}

// -------------------------------------------------------------------

// GetBizIapPayResultRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetBizIapPayResultRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetBizIapPayResultRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetBizIapPayResultRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetBizIapPayResultRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetBizIapPayResultRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetBizIapPayResultRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetBizIapPayResultRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetBizIapPayResultRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetBizIapPayResultRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetBizIapPayResultRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetBizIapPayResultRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetBizIapPayResultRequest.BaseRequest)
}

// optional string SerialId = 2;
inline bool GetBizIapPayResultRequest::has_serialid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetBizIapPayResultRequest::set_has_serialid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetBizIapPayResultRequest::clear_has_serialid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetBizIapPayResultRequest::clear_serialid() {
  serialid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_serialid();
}
inline const ::std::string& GetBizIapPayResultRequest::serialid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetBizIapPayResultRequest.SerialId)
  return serialid_.GetNoArena();
}
inline void GetBizIapPayResultRequest::set_serialid(const ::std::string& value) {
  set_has_serialid();
  serialid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetBizIapPayResultRequest.SerialId)
}
#if LANG_CXX11
inline void GetBizIapPayResultRequest::set_serialid(::std::string&& value) {
  set_has_serialid();
  serialid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetBizIapPayResultRequest.SerialId)
}
#endif
inline void GetBizIapPayResultRequest::set_serialid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_serialid();
  serialid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetBizIapPayResultRequest.SerialId)
}
inline void GetBizIapPayResultRequest::set_serialid(const char* value, size_t size) {
  set_has_serialid();
  serialid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetBizIapPayResultRequest.SerialId)
}
inline ::std::string* GetBizIapPayResultRequest::mutable_serialid() {
  set_has_serialid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetBizIapPayResultRequest.SerialId)
  return serialid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetBizIapPayResultRequest::release_serialid() {
  // @@protoc_insertion_point(field_release:micromsg.GetBizIapPayResultRequest.SerialId)
  clear_has_serialid();
  return serialid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetBizIapPayResultRequest::set_allocated_serialid(::std::string* serialid) {
  if (serialid != NULL) {
    set_has_serialid();
  } else {
    clear_has_serialid();
  }
  serialid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serialid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetBizIapPayResultRequest.SerialId)
}

// -------------------------------------------------------------------

// GetBizIapPayResultResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetBizIapPayResultResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetBizIapPayResultResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetBizIapPayResultResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetBizIapPayResultResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetBizIapPayResultResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetBizIapPayResultResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetBizIapPayResultResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetBizIapPayResultResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetBizIapPayResultResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetBizIapPayResultResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetBizIapPayResultResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetBizIapPayResultResponse.BaseResponse)
}

// optional string DetailBuff = 2;
inline bool GetBizIapPayResultResponse::has_detailbuff() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetBizIapPayResultResponse::set_has_detailbuff() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetBizIapPayResultResponse::clear_has_detailbuff() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetBizIapPayResultResponse::clear_detailbuff() {
  detailbuff_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_detailbuff();
}
inline const ::std::string& GetBizIapPayResultResponse::detailbuff() const {
  // @@protoc_insertion_point(field_get:micromsg.GetBizIapPayResultResponse.DetailBuff)
  return detailbuff_.GetNoArena();
}
inline void GetBizIapPayResultResponse::set_detailbuff(const ::std::string& value) {
  set_has_detailbuff();
  detailbuff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetBizIapPayResultResponse.DetailBuff)
}
#if LANG_CXX11
inline void GetBizIapPayResultResponse::set_detailbuff(::std::string&& value) {
  set_has_detailbuff();
  detailbuff_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetBizIapPayResultResponse.DetailBuff)
}
#endif
inline void GetBizIapPayResultResponse::set_detailbuff(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_detailbuff();
  detailbuff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetBizIapPayResultResponse.DetailBuff)
}
inline void GetBizIapPayResultResponse::set_detailbuff(const char* value, size_t size) {
  set_has_detailbuff();
  detailbuff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetBizIapPayResultResponse.DetailBuff)
}
inline ::std::string* GetBizIapPayResultResponse::mutable_detailbuff() {
  set_has_detailbuff();
  // @@protoc_insertion_point(field_mutable:micromsg.GetBizIapPayResultResponse.DetailBuff)
  return detailbuff_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetBizIapPayResultResponse::release_detailbuff() {
  // @@protoc_insertion_point(field_release:micromsg.GetBizIapPayResultResponse.DetailBuff)
  clear_has_detailbuff();
  return detailbuff_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetBizIapPayResultResponse::set_allocated_detailbuff(::std::string* detailbuff) {
  if (detailbuff != NULL) {
    set_has_detailbuff();
  } else {
    clear_has_detailbuff();
  }
  detailbuff_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), detailbuff);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetBizIapPayResultResponse.DetailBuff)
}

// -------------------------------------------------------------------

// GetBizIapDetailRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetBizIapDetailRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetBizIapDetailRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetBizIapDetailRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetBizIapDetailRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetBizIapDetailRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetBizIapDetailRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetBizIapDetailRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetBizIapDetailRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetBizIapDetailRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetBizIapDetailRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetBizIapDetailRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetBizIapDetailRequest.BaseRequest)
}

// optional string SerialId = 3;
inline bool GetBizIapDetailRequest::has_serialid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetBizIapDetailRequest::set_has_serialid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetBizIapDetailRequest::clear_has_serialid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetBizIapDetailRequest::clear_serialid() {
  serialid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_serialid();
}
inline const ::std::string& GetBizIapDetailRequest::serialid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetBizIapDetailRequest.SerialId)
  return serialid_.GetNoArena();
}
inline void GetBizIapDetailRequest::set_serialid(const ::std::string& value) {
  set_has_serialid();
  serialid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetBizIapDetailRequest.SerialId)
}
#if LANG_CXX11
inline void GetBizIapDetailRequest::set_serialid(::std::string&& value) {
  set_has_serialid();
  serialid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetBizIapDetailRequest.SerialId)
}
#endif
inline void GetBizIapDetailRequest::set_serialid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_serialid();
  serialid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetBizIapDetailRequest.SerialId)
}
inline void GetBizIapDetailRequest::set_serialid(const char* value, size_t size) {
  set_has_serialid();
  serialid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetBizIapDetailRequest.SerialId)
}
inline ::std::string* GetBizIapDetailRequest::mutable_serialid() {
  set_has_serialid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetBizIapDetailRequest.SerialId)
  return serialid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetBizIapDetailRequest::release_serialid() {
  // @@protoc_insertion_point(field_release:micromsg.GetBizIapDetailRequest.SerialId)
  clear_has_serialid();
  return serialid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetBizIapDetailRequest::set_allocated_serialid(::std::string* serialid) {
  if (serialid != NULL) {
    set_has_serialid();
  } else {
    clear_has_serialid();
  }
  serialid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serialid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetBizIapDetailRequest.SerialId)
}

// -------------------------------------------------------------------

// GetBizIapDetailResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetBizIapDetailResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetBizIapDetailResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetBizIapDetailResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetBizIapDetailResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetBizIapDetailResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetBizIapDetailResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetBizIapDetailResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetBizIapDetailResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetBizIapDetailResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetBizIapDetailResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetBizIapDetailResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetBizIapDetailResponse.BaseResponse)
}

// optional string DetailBuff = 2;
inline bool GetBizIapDetailResponse::has_detailbuff() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetBizIapDetailResponse::set_has_detailbuff() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetBizIapDetailResponse::clear_has_detailbuff() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetBizIapDetailResponse::clear_detailbuff() {
  detailbuff_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_detailbuff();
}
inline const ::std::string& GetBizIapDetailResponse::detailbuff() const {
  // @@protoc_insertion_point(field_get:micromsg.GetBizIapDetailResponse.DetailBuff)
  return detailbuff_.GetNoArena();
}
inline void GetBizIapDetailResponse::set_detailbuff(const ::std::string& value) {
  set_has_detailbuff();
  detailbuff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetBizIapDetailResponse.DetailBuff)
}
#if LANG_CXX11
inline void GetBizIapDetailResponse::set_detailbuff(::std::string&& value) {
  set_has_detailbuff();
  detailbuff_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetBizIapDetailResponse.DetailBuff)
}
#endif
inline void GetBizIapDetailResponse::set_detailbuff(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_detailbuff();
  detailbuff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetBizIapDetailResponse.DetailBuff)
}
inline void GetBizIapDetailResponse::set_detailbuff(const char* value, size_t size) {
  set_has_detailbuff();
  detailbuff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetBizIapDetailResponse.DetailBuff)
}
inline ::std::string* GetBizIapDetailResponse::mutable_detailbuff() {
  set_has_detailbuff();
  // @@protoc_insertion_point(field_mutable:micromsg.GetBizIapDetailResponse.DetailBuff)
  return detailbuff_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetBizIapDetailResponse::release_detailbuff() {
  // @@protoc_insertion_point(field_release:micromsg.GetBizIapDetailResponse.DetailBuff)
  clear_has_detailbuff();
  return detailbuff_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetBizIapDetailResponse::set_allocated_detailbuff(::std::string* detailbuff) {
  if (detailbuff != NULL) {
    set_has_detailbuff();
  } else {
    clear_has_detailbuff();
  }
  detailbuff_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), detailbuff);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetBizIapDetailResponse.DetailBuff)
}

// -------------------------------------------------------------------

// GetProductDetailRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetProductDetailRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetProductDetailRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetProductDetailRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetProductDetailRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetProductDetailRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductDetailRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetProductDetailRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetProductDetailRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetProductDetailRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetProductDetailRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetProductDetailRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetProductDetailRequest.BaseRequest)
}

// optional string Pid = 2;
inline bool GetProductDetailRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetProductDetailRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetProductDetailRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetProductDetailRequest::clear_pid() {
  pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pid();
}
inline const ::std::string& GetProductDetailRequest::pid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductDetailRequest.Pid)
  return pid_.GetNoArena();
}
inline void GetProductDetailRequest::set_pid(const ::std::string& value) {
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetProductDetailRequest.Pid)
}
#if LANG_CXX11
inline void GetProductDetailRequest::set_pid(::std::string&& value) {
  set_has_pid();
  pid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetProductDetailRequest.Pid)
}
#endif
inline void GetProductDetailRequest::set_pid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetProductDetailRequest.Pid)
}
inline void GetProductDetailRequest::set_pid(const char* value, size_t size) {
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetProductDetailRequest.Pid)
}
inline ::std::string* GetProductDetailRequest::mutable_pid() {
  set_has_pid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetProductDetailRequest.Pid)
  return pid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetProductDetailRequest::release_pid() {
  // @@protoc_insertion_point(field_release:micromsg.GetProductDetailRequest.Pid)
  clear_has_pid();
  return pid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetProductDetailRequest::set_allocated_pid(::std::string* pid) {
  if (pid != NULL) {
    set_has_pid();
  } else {
    clear_has_pid();
  }
  pid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetProductDetailRequest.Pid)
}

// optional uint32 Version = 3;
inline bool GetProductDetailRequest::has_version() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetProductDetailRequest::set_has_version() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetProductDetailRequest::clear_has_version() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetProductDetailRequest::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 GetProductDetailRequest::version() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductDetailRequest.Version)
  return version_;
}
inline void GetProductDetailRequest::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetProductDetailRequest.Version)
}

// optional string ScanCode = 4;
inline bool GetProductDetailRequest::has_scancode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetProductDetailRequest::set_has_scancode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetProductDetailRequest::clear_has_scancode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetProductDetailRequest::clear_scancode() {
  scancode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_scancode();
}
inline const ::std::string& GetProductDetailRequest::scancode() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductDetailRequest.ScanCode)
  return scancode_.GetNoArena();
}
inline void GetProductDetailRequest::set_scancode(const ::std::string& value) {
  set_has_scancode();
  scancode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetProductDetailRequest.ScanCode)
}
#if LANG_CXX11
inline void GetProductDetailRequest::set_scancode(::std::string&& value) {
  set_has_scancode();
  scancode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetProductDetailRequest.ScanCode)
}
#endif
inline void GetProductDetailRequest::set_scancode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_scancode();
  scancode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetProductDetailRequest.ScanCode)
}
inline void GetProductDetailRequest::set_scancode(const char* value, size_t size) {
  set_has_scancode();
  scancode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetProductDetailRequest.ScanCode)
}
inline ::std::string* GetProductDetailRequest::mutable_scancode() {
  set_has_scancode();
  // @@protoc_insertion_point(field_mutable:micromsg.GetProductDetailRequest.ScanCode)
  return scancode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetProductDetailRequest::release_scancode() {
  // @@protoc_insertion_point(field_release:micromsg.GetProductDetailRequest.ScanCode)
  clear_has_scancode();
  return scancode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetProductDetailRequest::set_allocated_scancode(::std::string* scancode) {
  if (scancode != NULL) {
    set_has_scancode();
  } else {
    clear_has_scancode();
  }
  scancode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scancode);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetProductDetailRequest.ScanCode)
}

// -------------------------------------------------------------------

// GetProductDetailResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetProductDetailResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetProductDetailResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetProductDetailResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetProductDetailResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetProductDetailResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductDetailResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetProductDetailResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetProductDetailResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetProductDetailResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetProductDetailResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetProductDetailResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetProductDetailResponse.BaseResponse)
}

// optional string ProductInfo = 2;
inline bool GetProductDetailResponse::has_productinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetProductDetailResponse::set_has_productinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetProductDetailResponse::clear_has_productinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetProductDetailResponse::clear_productinfo() {
  productinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_productinfo();
}
inline const ::std::string& GetProductDetailResponse::productinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductDetailResponse.ProductInfo)
  return productinfo_.GetNoArena();
}
inline void GetProductDetailResponse::set_productinfo(const ::std::string& value) {
  set_has_productinfo();
  productinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetProductDetailResponse.ProductInfo)
}
#if LANG_CXX11
inline void GetProductDetailResponse::set_productinfo(::std::string&& value) {
  set_has_productinfo();
  productinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetProductDetailResponse.ProductInfo)
}
#endif
inline void GetProductDetailResponse::set_productinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_productinfo();
  productinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetProductDetailResponse.ProductInfo)
}
inline void GetProductDetailResponse::set_productinfo(const char* value, size_t size) {
  set_has_productinfo();
  productinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetProductDetailResponse.ProductInfo)
}
inline ::std::string* GetProductDetailResponse::mutable_productinfo() {
  set_has_productinfo();
  // @@protoc_insertion_point(field_mutable:micromsg.GetProductDetailResponse.ProductInfo)
  return productinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetProductDetailResponse::release_productinfo() {
  // @@protoc_insertion_point(field_release:micromsg.GetProductDetailResponse.ProductInfo)
  clear_has_productinfo();
  return productinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetProductDetailResponse::set_allocated_productinfo(::std::string* productinfo) {
  if (productinfo != NULL) {
    set_has_productinfo();
  } else {
    clear_has_productinfo();
  }
  productinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productinfo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetProductDetailResponse.ProductInfo)
}

// optional int32 RetCode = 3;
inline bool GetProductDetailResponse::has_retcode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetProductDetailResponse::set_has_retcode() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetProductDetailResponse::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetProductDetailResponse::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 GetProductDetailResponse::retcode() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductDetailResponse.RetCode)
  return retcode_;
}
inline void GetProductDetailResponse::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetProductDetailResponse.RetCode)
}

// optional string RetMsg = 4;
inline bool GetProductDetailResponse::has_retmsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetProductDetailResponse::set_has_retmsg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetProductDetailResponse::clear_has_retmsg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetProductDetailResponse::clear_retmsg() {
  retmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_retmsg();
}
inline const ::std::string& GetProductDetailResponse::retmsg() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductDetailResponse.RetMsg)
  return retmsg_.GetNoArena();
}
inline void GetProductDetailResponse::set_retmsg(const ::std::string& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetProductDetailResponse.RetMsg)
}
#if LANG_CXX11
inline void GetProductDetailResponse::set_retmsg(::std::string&& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetProductDetailResponse.RetMsg)
}
#endif
inline void GetProductDetailResponse::set_retmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetProductDetailResponse.RetMsg)
}
inline void GetProductDetailResponse::set_retmsg(const char* value, size_t size) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetProductDetailResponse.RetMsg)
}
inline ::std::string* GetProductDetailResponse::mutable_retmsg() {
  set_has_retmsg();
  // @@protoc_insertion_point(field_mutable:micromsg.GetProductDetailResponse.RetMsg)
  return retmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetProductDetailResponse::release_retmsg() {
  // @@protoc_insertion_point(field_release:micromsg.GetProductDetailResponse.RetMsg)
  clear_has_retmsg();
  return retmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetProductDetailResponse::set_allocated_retmsg(::std::string* retmsg) {
  if (retmsg != NULL) {
    set_has_retmsg();
  } else {
    clear_has_retmsg();
  }
  retmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retmsg);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetProductDetailResponse.RetMsg)
}

// optional string RecommendInfo = 5;
inline bool GetProductDetailResponse::has_recommendinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetProductDetailResponse::set_has_recommendinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetProductDetailResponse::clear_has_recommendinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetProductDetailResponse::clear_recommendinfo() {
  recommendinfo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_recommendinfo();
}
inline const ::std::string& GetProductDetailResponse::recommendinfo() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductDetailResponse.RecommendInfo)
  return recommendinfo_.GetNoArena();
}
inline void GetProductDetailResponse::set_recommendinfo(const ::std::string& value) {
  set_has_recommendinfo();
  recommendinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetProductDetailResponse.RecommendInfo)
}
#if LANG_CXX11
inline void GetProductDetailResponse::set_recommendinfo(::std::string&& value) {
  set_has_recommendinfo();
  recommendinfo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetProductDetailResponse.RecommendInfo)
}
#endif
inline void GetProductDetailResponse::set_recommendinfo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_recommendinfo();
  recommendinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetProductDetailResponse.RecommendInfo)
}
inline void GetProductDetailResponse::set_recommendinfo(const char* value, size_t size) {
  set_has_recommendinfo();
  recommendinfo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetProductDetailResponse.RecommendInfo)
}
inline ::std::string* GetProductDetailResponse::mutable_recommendinfo() {
  set_has_recommendinfo();
  // @@protoc_insertion_point(field_mutable:micromsg.GetProductDetailResponse.RecommendInfo)
  return recommendinfo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetProductDetailResponse::release_recommendinfo() {
  // @@protoc_insertion_point(field_release:micromsg.GetProductDetailResponse.RecommendInfo)
  clear_has_recommendinfo();
  return recommendinfo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetProductDetailResponse::set_allocated_recommendinfo(::std::string* recommendinfo) {
  if (recommendinfo != NULL) {
    set_has_recommendinfo();
  } else {
    clear_has_recommendinfo();
  }
  recommendinfo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), recommendinfo);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetProductDetailResponse.RecommendInfo)
}

// -------------------------------------------------------------------

// LockStockRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool LockStockRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LockStockRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LockStockRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LockStockRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& LockStockRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.LockStockRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* LockStockRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.LockStockRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* LockStockRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.LockStockRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void LockStockRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.LockStockRequest.BaseRequest)
}

// optional string Pid = 2;
inline bool LockStockRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LockStockRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LockStockRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LockStockRequest::clear_pid() {
  pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pid();
}
inline const ::std::string& LockStockRequest::pid() const {
  // @@protoc_insertion_point(field_get:micromsg.LockStockRequest.Pid)
  return pid_.GetNoArena();
}
inline void LockStockRequest::set_pid(const ::std::string& value) {
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LockStockRequest.Pid)
}
#if LANG_CXX11
inline void LockStockRequest::set_pid(::std::string&& value) {
  set_has_pid();
  pid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LockStockRequest.Pid)
}
#endif
inline void LockStockRequest::set_pid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LockStockRequest.Pid)
}
inline void LockStockRequest::set_pid(const char* value, size_t size) {
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LockStockRequest.Pid)
}
inline ::std::string* LockStockRequest::mutable_pid() {
  set_has_pid();
  // @@protoc_insertion_point(field_mutable:micromsg.LockStockRequest.Pid)
  return pid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LockStockRequest::release_pid() {
  // @@protoc_insertion_point(field_release:micromsg.LockStockRequest.Pid)
  clear_has_pid();
  return pid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LockStockRequest::set_allocated_pid(::std::string* pid) {
  if (pid != NULL) {
    set_has_pid();
  } else {
    clear_has_pid();
  }
  pid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LockStockRequest.Pid)
}

// optional string SkuId = 3;
inline bool LockStockRequest::has_skuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LockStockRequest::set_has_skuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LockStockRequest::clear_has_skuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LockStockRequest::clear_skuid() {
  skuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_skuid();
}
inline const ::std::string& LockStockRequest::skuid() const {
  // @@protoc_insertion_point(field_get:micromsg.LockStockRequest.SkuId)
  return skuid_.GetNoArena();
}
inline void LockStockRequest::set_skuid(const ::std::string& value) {
  set_has_skuid();
  skuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LockStockRequest.SkuId)
}
#if LANG_CXX11
inline void LockStockRequest::set_skuid(::std::string&& value) {
  set_has_skuid();
  skuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LockStockRequest.SkuId)
}
#endif
inline void LockStockRequest::set_skuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_skuid();
  skuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LockStockRequest.SkuId)
}
inline void LockStockRequest::set_skuid(const char* value, size_t size) {
  set_has_skuid();
  skuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LockStockRequest.SkuId)
}
inline ::std::string* LockStockRequest::mutable_skuid() {
  set_has_skuid();
  // @@protoc_insertion_point(field_mutable:micromsg.LockStockRequest.SkuId)
  return skuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LockStockRequest::release_skuid() {
  // @@protoc_insertion_point(field_release:micromsg.LockStockRequest.SkuId)
  clear_has_skuid();
  return skuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LockStockRequest::set_allocated_skuid(::std::string* skuid) {
  if (skuid != NULL) {
    set_has_skuid();
  } else {
    clear_has_skuid();
  }
  skuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), skuid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LockStockRequest.SkuId)
}

// optional uint32 Count = 4;
inline bool LockStockRequest::has_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LockStockRequest::set_has_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LockStockRequest::clear_has_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LockStockRequest::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 LockStockRequest::count() const {
  // @@protoc_insertion_point(field_get:micromsg.LockStockRequest.Count)
  return count_;
}
inline void LockStockRequest::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LockStockRequest.Count)
}

// optional string Url = 5;
inline bool LockStockRequest::has_url() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LockStockRequest::set_has_url() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LockStockRequest::clear_has_url() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LockStockRequest::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& LockStockRequest::url() const {
  // @@protoc_insertion_point(field_get:micromsg.LockStockRequest.Url)
  return url_.GetNoArena();
}
inline void LockStockRequest::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.LockStockRequest.Url)
}
#if LANG_CXX11
inline void LockStockRequest::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.LockStockRequest.Url)
}
#endif
inline void LockStockRequest::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.LockStockRequest.Url)
}
inline void LockStockRequest::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.LockStockRequest.Url)
}
inline ::std::string* LockStockRequest::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:micromsg.LockStockRequest.Url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LockStockRequest::release_url() {
  // @@protoc_insertion_point(field_release:micromsg.LockStockRequest.Url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LockStockRequest::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:micromsg.LockStockRequest.Url)
}

// -------------------------------------------------------------------

// LockStockResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool LockStockResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LockStockResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LockStockResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LockStockResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& LockStockResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.LockStockResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* LockStockResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.LockStockResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* LockStockResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.LockStockResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void LockStockResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.LockStockResponse.BaseResponse)
}

// optional uint32 LockId = 2;
inline bool LockStockResponse::has_lockid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LockStockResponse::set_has_lockid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LockStockResponse::clear_has_lockid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LockStockResponse::clear_lockid() {
  lockid_ = 0u;
  clear_has_lockid();
}
inline ::google::protobuf::uint32 LockStockResponse::lockid() const {
  // @@protoc_insertion_point(field_get:micromsg.LockStockResponse.LockId)
  return lockid_;
}
inline void LockStockResponse::set_lockid(::google::protobuf::uint32 value) {
  set_has_lockid();
  lockid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.LockStockResponse.LockId)
}

// -------------------------------------------------------------------

// UnlockStockRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool UnlockStockRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UnlockStockRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UnlockStockRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UnlockStockRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& UnlockStockRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.UnlockStockRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* UnlockStockRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.UnlockStockRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* UnlockStockRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.UnlockStockRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void UnlockStockRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.UnlockStockRequest.BaseRequest)
}

// optional string Pid = 2;
inline bool UnlockStockRequest::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnlockStockRequest::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnlockStockRequest::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnlockStockRequest::clear_pid() {
  pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pid();
}
inline const ::std::string& UnlockStockRequest::pid() const {
  // @@protoc_insertion_point(field_get:micromsg.UnlockStockRequest.Pid)
  return pid_.GetNoArena();
}
inline void UnlockStockRequest::set_pid(const ::std::string& value) {
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.UnlockStockRequest.Pid)
}
#if LANG_CXX11
inline void UnlockStockRequest::set_pid(::std::string&& value) {
  set_has_pid();
  pid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.UnlockStockRequest.Pid)
}
#endif
inline void UnlockStockRequest::set_pid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.UnlockStockRequest.Pid)
}
inline void UnlockStockRequest::set_pid(const char* value, size_t size) {
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.UnlockStockRequest.Pid)
}
inline ::std::string* UnlockStockRequest::mutable_pid() {
  set_has_pid();
  // @@protoc_insertion_point(field_mutable:micromsg.UnlockStockRequest.Pid)
  return pid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnlockStockRequest::release_pid() {
  // @@protoc_insertion_point(field_release:micromsg.UnlockStockRequest.Pid)
  clear_has_pid();
  return pid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnlockStockRequest::set_allocated_pid(::std::string* pid) {
  if (pid != NULL) {
    set_has_pid();
  } else {
    clear_has_pid();
  }
  pid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.UnlockStockRequest.Pid)
}

// optional string SkuId = 3;
inline bool UnlockStockRequest::has_skuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnlockStockRequest::set_has_skuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnlockStockRequest::clear_has_skuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnlockStockRequest::clear_skuid() {
  skuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_skuid();
}
inline const ::std::string& UnlockStockRequest::skuid() const {
  // @@protoc_insertion_point(field_get:micromsg.UnlockStockRequest.SkuId)
  return skuid_.GetNoArena();
}
inline void UnlockStockRequest::set_skuid(const ::std::string& value) {
  set_has_skuid();
  skuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.UnlockStockRequest.SkuId)
}
#if LANG_CXX11
inline void UnlockStockRequest::set_skuid(::std::string&& value) {
  set_has_skuid();
  skuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.UnlockStockRequest.SkuId)
}
#endif
inline void UnlockStockRequest::set_skuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_skuid();
  skuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.UnlockStockRequest.SkuId)
}
inline void UnlockStockRequest::set_skuid(const char* value, size_t size) {
  set_has_skuid();
  skuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.UnlockStockRequest.SkuId)
}
inline ::std::string* UnlockStockRequest::mutable_skuid() {
  set_has_skuid();
  // @@protoc_insertion_point(field_mutable:micromsg.UnlockStockRequest.SkuId)
  return skuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnlockStockRequest::release_skuid() {
  // @@protoc_insertion_point(field_release:micromsg.UnlockStockRequest.SkuId)
  clear_has_skuid();
  return skuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnlockStockRequest::set_allocated_skuid(::std::string* skuid) {
  if (skuid != NULL) {
    set_has_skuid();
  } else {
    clear_has_skuid();
  }
  skuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), skuid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.UnlockStockRequest.SkuId)
}

// optional uint32 Count = 4;
inline bool UnlockStockRequest::has_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UnlockStockRequest::set_has_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UnlockStockRequest::clear_has_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UnlockStockRequest::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 UnlockStockRequest::count() const {
  // @@protoc_insertion_point(field_get:micromsg.UnlockStockRequest.Count)
  return count_;
}
inline void UnlockStockRequest::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.UnlockStockRequest.Count)
}

// optional string Url = 5;
inline bool UnlockStockRequest::has_url() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UnlockStockRequest::set_has_url() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UnlockStockRequest::clear_has_url() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UnlockStockRequest::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& UnlockStockRequest::url() const {
  // @@protoc_insertion_point(field_get:micromsg.UnlockStockRequest.Url)
  return url_.GetNoArena();
}
inline void UnlockStockRequest::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.UnlockStockRequest.Url)
}
#if LANG_CXX11
inline void UnlockStockRequest::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.UnlockStockRequest.Url)
}
#endif
inline void UnlockStockRequest::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.UnlockStockRequest.Url)
}
inline void UnlockStockRequest::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.UnlockStockRequest.Url)
}
inline ::std::string* UnlockStockRequest::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:micromsg.UnlockStockRequest.Url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnlockStockRequest::release_url() {
  // @@protoc_insertion_point(field_release:micromsg.UnlockStockRequest.Url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnlockStockRequest::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:micromsg.UnlockStockRequest.Url)
}

// -------------------------------------------------------------------

// UnlockStockResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool UnlockStockResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnlockStockResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnlockStockResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnlockStockResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& UnlockStockResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.UnlockStockResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* UnlockStockResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.UnlockStockResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* UnlockStockResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.UnlockStockResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void UnlockStockResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.UnlockStockResponse.BaseResponse)
}

// optional uint32 LockId = 2;
inline bool UnlockStockResponse::has_lockid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnlockStockResponse::set_has_lockid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnlockStockResponse::clear_has_lockid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnlockStockResponse::clear_lockid() {
  lockid_ = 0u;
  clear_has_lockid();
}
inline ::google::protobuf::uint32 UnlockStockResponse::lockid() const {
  // @@protoc_insertion_point(field_get:micromsg.UnlockStockResponse.LockId)
  return lockid_;
}
inline void UnlockStockResponse::set_lockid(::google::protobuf::uint32 value) {
  set_has_lockid();
  lockid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.UnlockStockResponse.LockId)
}

// -------------------------------------------------------------------

// KVItem

// optional string Key = 1;
inline bool KVItem::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KVItem::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KVItem::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KVItem::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& KVItem::key() const {
  // @@protoc_insertion_point(field_get:micromsg.KVItem.Key)
  return key_.GetNoArena();
}
inline void KVItem::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.KVItem.Key)
}
#if LANG_CXX11
inline void KVItem::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.KVItem.Key)
}
#endif
inline void KVItem::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.KVItem.Key)
}
inline void KVItem::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.KVItem.Key)
}
inline ::std::string* KVItem::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:micromsg.KVItem.Key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KVItem::release_key() {
  // @@protoc_insertion_point(field_release:micromsg.KVItem.Key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KVItem::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:micromsg.KVItem.Key)
}

// optional string Value = 2;
inline bool KVItem::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KVItem::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KVItem::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KVItem::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& KVItem::value() const {
  // @@protoc_insertion_point(field_get:micromsg.KVItem.Value)
  return value_.GetNoArena();
}
inline void KVItem::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.KVItem.Value)
}
#if LANG_CXX11
inline void KVItem::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.KVItem.Value)
}
#endif
inline void KVItem::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.KVItem.Value)
}
inline void KVItem::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.KVItem.Value)
}
inline ::std::string* KVItem::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:micromsg.KVItem.Value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KVItem::release_value() {
  // @@protoc_insertion_point(field_release:micromsg.KVItem.Value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KVItem::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:micromsg.KVItem.Value)
}

// -------------------------------------------------------------------

// Express

// optional string Name = 1;
inline bool Express::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Express::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Express::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Express::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& Express::name() const {
  // @@protoc_insertion_point(field_get:micromsg.Express.Name)
  return name_.GetNoArena();
}
inline void Express::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Express.Name)
}
#if LANG_CXX11
inline void Express::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Express.Name)
}
#endif
inline void Express::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Express.Name)
}
inline void Express::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Express.Name)
}
inline ::std::string* Express::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:micromsg.Express.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Express::release_name() {
  // @@protoc_insertion_point(field_release:micromsg.Express.Name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Express::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Express.Name)
}

// optional uint32 Price = 2;
inline bool Express::has_price() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Express::set_has_price() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Express::clear_has_price() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Express::clear_price() {
  price_ = 0u;
  clear_has_price();
}
inline ::google::protobuf::uint32 Express::price() const {
  // @@protoc_insertion_point(field_get:micromsg.Express.Price)
  return price_;
}
inline void Express::set_price(::google::protobuf::uint32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:micromsg.Express.Price)
}

// optional string PriceType = 3;
inline bool Express::has_pricetype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Express::set_has_pricetype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Express::clear_has_pricetype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Express::clear_pricetype() {
  pricetype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pricetype();
}
inline const ::std::string& Express::pricetype() const {
  // @@protoc_insertion_point(field_get:micromsg.Express.PriceType)
  return pricetype_.GetNoArena();
}
inline void Express::set_pricetype(const ::std::string& value) {
  set_has_pricetype();
  pricetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Express.PriceType)
}
#if LANG_CXX11
inline void Express::set_pricetype(::std::string&& value) {
  set_has_pricetype();
  pricetype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Express.PriceType)
}
#endif
inline void Express::set_pricetype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pricetype();
  pricetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Express.PriceType)
}
inline void Express::set_pricetype(const char* value, size_t size) {
  set_has_pricetype();
  pricetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Express.PriceType)
}
inline ::std::string* Express::mutable_pricetype() {
  set_has_pricetype();
  // @@protoc_insertion_point(field_mutable:micromsg.Express.PriceType)
  return pricetype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Express::release_pricetype() {
  // @@protoc_insertion_point(field_release:micromsg.Express.PriceType)
  clear_has_pricetype();
  return pricetype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Express::set_allocated_pricetype(::std::string* pricetype) {
  if (pricetype != NULL) {
    set_has_pricetype();
  } else {
    clear_has_pricetype();
  }
  pricetype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pricetype);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Express.PriceType)
}

// optional uint32 Id = 4;
inline bool Express::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Express::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Express::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Express::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Express::id() const {
  // @@protoc_insertion_point(field_get:micromsg.Express.Id)
  return id_;
}
inline void Express::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:micromsg.Express.Id)
}

// -------------------------------------------------------------------

// Address

// optional string Country = 1;
inline bool Address::has_country() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Address::set_has_country() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Address::clear_has_country() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Address::clear_country() {
  country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_country();
}
inline const ::std::string& Address::country() const {
  // @@protoc_insertion_point(field_get:micromsg.Address.Country)
  return country_.GetNoArena();
}
inline void Address::set_country(const ::std::string& value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Address.Country)
}
#if LANG_CXX11
inline void Address::set_country(::std::string&& value) {
  set_has_country();
  country_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Address.Country)
}
#endif
inline void Address::set_country(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Address.Country)
}
inline void Address::set_country(const char* value, size_t size) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Address.Country)
}
inline ::std::string* Address::mutable_country() {
  set_has_country();
  // @@protoc_insertion_point(field_mutable:micromsg.Address.Country)
  return country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Address::release_country() {
  // @@protoc_insertion_point(field_release:micromsg.Address.Country)
  clear_has_country();
  return country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Address::set_allocated_country(::std::string* country) {
  if (country != NULL) {
    set_has_country();
  } else {
    clear_has_country();
  }
  country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Address.Country)
}

// optional string Province = 2;
inline bool Address::has_province() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Address::set_has_province() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Address::clear_has_province() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Address::clear_province() {
  province_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_province();
}
inline const ::std::string& Address::province() const {
  // @@protoc_insertion_point(field_get:micromsg.Address.Province)
  return province_.GetNoArena();
}
inline void Address::set_province(const ::std::string& value) {
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Address.Province)
}
#if LANG_CXX11
inline void Address::set_province(::std::string&& value) {
  set_has_province();
  province_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Address.Province)
}
#endif
inline void Address::set_province(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Address.Province)
}
inline void Address::set_province(const char* value, size_t size) {
  set_has_province();
  province_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Address.Province)
}
inline ::std::string* Address::mutable_province() {
  set_has_province();
  // @@protoc_insertion_point(field_mutable:micromsg.Address.Province)
  return province_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Address::release_province() {
  // @@protoc_insertion_point(field_release:micromsg.Address.Province)
  clear_has_province();
  return province_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Address::set_allocated_province(::std::string* province) {
  if (province != NULL) {
    set_has_province();
  } else {
    clear_has_province();
  }
  province_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), province);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Address.Province)
}

// optional string City = 3;
inline bool Address::has_city() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Address::set_has_city() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Address::clear_has_city() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Address::clear_city() {
  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_city();
}
inline const ::std::string& Address::city() const {
  // @@protoc_insertion_point(field_get:micromsg.Address.City)
  return city_.GetNoArena();
}
inline void Address::set_city(const ::std::string& value) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Address.City)
}
#if LANG_CXX11
inline void Address::set_city(::std::string&& value) {
  set_has_city();
  city_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Address.City)
}
#endif
inline void Address::set_city(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Address.City)
}
inline void Address::set_city(const char* value, size_t size) {
  set_has_city();
  city_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Address.City)
}
inline ::std::string* Address::mutable_city() {
  set_has_city();
  // @@protoc_insertion_point(field_mutable:micromsg.Address.City)
  return city_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Address::release_city() {
  // @@protoc_insertion_point(field_release:micromsg.Address.City)
  clear_has_city();
  return city_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Address::set_allocated_city(::std::string* city) {
  if (city != NULL) {
    set_has_city();
  } else {
    clear_has_city();
  }
  city_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Address.City)
}

// optional string Detail = 4;
inline bool Address::has_detail() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Address::set_has_detail() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Address::clear_has_detail() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Address::clear_detail() {
  detail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_detail();
}
inline const ::std::string& Address::detail() const {
  // @@protoc_insertion_point(field_get:micromsg.Address.Detail)
  return detail_.GetNoArena();
}
inline void Address::set_detail(const ::std::string& value) {
  set_has_detail();
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Address.Detail)
}
#if LANG_CXX11
inline void Address::set_detail(::std::string&& value) {
  set_has_detail();
  detail_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Address.Detail)
}
#endif
inline void Address::set_detail(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_detail();
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Address.Detail)
}
inline void Address::set_detail(const char* value, size_t size) {
  set_has_detail();
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Address.Detail)
}
inline ::std::string* Address::mutable_detail() {
  set_has_detail();
  // @@protoc_insertion_point(field_mutable:micromsg.Address.Detail)
  return detail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Address::release_detail() {
  // @@protoc_insertion_point(field_release:micromsg.Address.Detail)
  clear_has_detail();
  return detail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Address::set_allocated_detail(::std::string* detail) {
  if (detail != NULL) {
    set_has_detail();
  } else {
    clear_has_detail();
  }
  detail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), detail);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Address.Detail)
}

// optional string UserName = 5;
inline bool Address::has_username() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Address::set_has_username() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Address::clear_has_username() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Address::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& Address::username() const {
  // @@protoc_insertion_point(field_get:micromsg.Address.UserName)
  return username_.GetNoArena();
}
inline void Address::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Address.UserName)
}
#if LANG_CXX11
inline void Address::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Address.UserName)
}
#endif
inline void Address::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Address.UserName)
}
inline void Address::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Address.UserName)
}
inline ::std::string* Address::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.Address.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Address::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.Address.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Address::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Address.UserName)
}

// optional string Tel = 6;
inline bool Address::has_tel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Address::set_has_tel() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Address::clear_has_tel() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Address::clear_tel() {
  tel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tel();
}
inline const ::std::string& Address::tel() const {
  // @@protoc_insertion_point(field_get:micromsg.Address.Tel)
  return tel_.GetNoArena();
}
inline void Address::set_tel(const ::std::string& value) {
  set_has_tel();
  tel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Address.Tel)
}
#if LANG_CXX11
inline void Address::set_tel(::std::string&& value) {
  set_has_tel();
  tel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Address.Tel)
}
#endif
inline void Address::set_tel(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tel();
  tel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Address.Tel)
}
inline void Address::set_tel(const char* value, size_t size) {
  set_has_tel();
  tel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Address.Tel)
}
inline ::std::string* Address::mutable_tel() {
  set_has_tel();
  // @@protoc_insertion_point(field_mutable:micromsg.Address.Tel)
  return tel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Address::release_tel() {
  // @@protoc_insertion_point(field_release:micromsg.Address.Tel)
  clear_has_tel();
  return tel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Address::set_allocated_tel(::std::string* tel) {
  if (tel != NULL) {
    set_has_tel();
  } else {
    clear_has_tel();
  }
  tel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tel);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Address.Tel)
}

// optional string ZipCode = 7;
inline bool Address::has_zipcode() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Address::set_has_zipcode() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Address::clear_has_zipcode() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Address::clear_zipcode() {
  zipcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_zipcode();
}
inline const ::std::string& Address::zipcode() const {
  // @@protoc_insertion_point(field_get:micromsg.Address.ZipCode)
  return zipcode_.GetNoArena();
}
inline void Address::set_zipcode(const ::std::string& value) {
  set_has_zipcode();
  zipcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Address.ZipCode)
}
#if LANG_CXX11
inline void Address::set_zipcode(::std::string&& value) {
  set_has_zipcode();
  zipcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Address.ZipCode)
}
#endif
inline void Address::set_zipcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_zipcode();
  zipcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Address.ZipCode)
}
inline void Address::set_zipcode(const char* value, size_t size) {
  set_has_zipcode();
  zipcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Address.ZipCode)
}
inline ::std::string* Address::mutable_zipcode() {
  set_has_zipcode();
  // @@protoc_insertion_point(field_mutable:micromsg.Address.ZipCode)
  return zipcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Address::release_zipcode() {
  // @@protoc_insertion_point(field_release:micromsg.Address.ZipCode)
  clear_has_zipcode();
  return zipcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Address::set_allocated_zipcode(::std::string* zipcode) {
  if (zipcode != NULL) {
    set_has_zipcode();
  } else {
    clear_has_zipcode();
  }
  zipcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), zipcode);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Address.ZipCode)
}

// -------------------------------------------------------------------

// Receipt

// required uint32 IsNeed = 1;
inline bool Receipt::has_isneed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Receipt::set_has_isneed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Receipt::clear_has_isneed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Receipt::clear_isneed() {
  isneed_ = 0u;
  clear_has_isneed();
}
inline ::google::protobuf::uint32 Receipt::isneed() const {
  // @@protoc_insertion_point(field_get:micromsg.Receipt.IsNeed)
  return isneed_;
}
inline void Receipt::set_isneed(::google::protobuf::uint32 value) {
  set_has_isneed();
  isneed_ = value;
  // @@protoc_insertion_point(field_set:micromsg.Receipt.IsNeed)
}

// optional string Detail = 2;
inline bool Receipt::has_detail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Receipt::set_has_detail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Receipt::clear_has_detail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Receipt::clear_detail() {
  detail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_detail();
}
inline const ::std::string& Receipt::detail() const {
  // @@protoc_insertion_point(field_get:micromsg.Receipt.Detail)
  return detail_.GetNoArena();
}
inline void Receipt::set_detail(const ::std::string& value) {
  set_has_detail();
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Receipt.Detail)
}
#if LANG_CXX11
inline void Receipt::set_detail(::std::string&& value) {
  set_has_detail();
  detail_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Receipt.Detail)
}
#endif
inline void Receipt::set_detail(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_detail();
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Receipt.Detail)
}
inline void Receipt::set_detail(const char* value, size_t size) {
  set_has_detail();
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Receipt.Detail)
}
inline ::std::string* Receipt::mutable_detail() {
  set_has_detail();
  // @@protoc_insertion_point(field_mutable:micromsg.Receipt.Detail)
  return detail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Receipt::release_detail() {
  // @@protoc_insertion_point(field_release:micromsg.Receipt.Detail)
  clear_has_detail();
  return detail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Receipt::set_allocated_detail(::std::string* detail) {
  if (detail != NULL) {
    set_has_detail();
  } else {
    clear_has_detail();
  }
  detail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), detail);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Receipt.Detail)
}

// -------------------------------------------------------------------

// Discount

// optional string Title = 1;
inline bool Discount::has_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Discount::set_has_title() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Discount::clear_has_title() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Discount::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& Discount::title() const {
  // @@protoc_insertion_point(field_get:micromsg.Discount.Title)
  return title_.GetNoArena();
}
inline void Discount::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Discount.Title)
}
#if LANG_CXX11
inline void Discount::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Discount.Title)
}
#endif
inline void Discount::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Discount.Title)
}
inline void Discount::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Discount.Title)
}
inline ::std::string* Discount::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:micromsg.Discount.Title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Discount::release_title() {
  // @@protoc_insertion_point(field_release:micromsg.Discount.Title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Discount::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Discount.Title)
}

// required uint32 Price = 2;
inline bool Discount::has_price() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Discount::set_has_price() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Discount::clear_has_price() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Discount::clear_price() {
  price_ = 0u;
  clear_has_price();
}
inline ::google::protobuf::uint32 Discount::price() const {
  // @@protoc_insertion_point(field_get:micromsg.Discount.Price)
  return price_;
}
inline void Discount::set_price(::google::protobuf::uint32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:micromsg.Discount.Price)
}

// -------------------------------------------------------------------

// Production

// required uint32 SkuCount = 1;
inline bool Production::has_skucount() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Production::set_has_skucount() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Production::clear_has_skucount() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Production::clear_skucount() {
  skucount_ = 0u;
  clear_has_skucount();
}
inline ::google::protobuf::uint32 Production::skucount() const {
  // @@protoc_insertion_point(field_get:micromsg.Production.SkuCount)
  return skucount_;
}
inline void Production::set_skucount(::google::protobuf::uint32 value) {
  set_has_skucount();
  skucount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.Production.SkuCount)
}

// repeated .micromsg.KVItem Skus = 2;
inline int Production::skus_size() const {
  return skus_.size();
}
inline void Production::clear_skus() {
  skus_.Clear();
}
inline const ::micromsg::KVItem& Production::skus(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.Production.Skus)
  return skus_.Get(index);
}
inline ::micromsg::KVItem* Production::mutable_skus(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.Production.Skus)
  return skus_.Mutable(index);
}
inline ::micromsg::KVItem* Production::add_skus() {
  // @@protoc_insertion_point(field_add:micromsg.Production.Skus)
  return skus_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::KVItem >*
Production::mutable_skus() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.Production.Skus)
  return &skus_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::KVItem >&
Production::skus() const {
  // @@protoc_insertion_point(field_list:micromsg.Production.Skus)
  return skus_;
}

// required uint32 Count = 3;
inline bool Production::has_count() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Production::set_has_count() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Production::clear_has_count() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Production::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 Production::count() const {
  // @@protoc_insertion_point(field_get:micromsg.Production.Count)
  return count_;
}
inline void Production::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.Production.Count)
}

// required uint32 RealPrice = 4;
inline bool Production::has_realprice() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Production::set_has_realprice() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Production::clear_has_realprice() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Production::clear_realprice() {
  realprice_ = 0u;
  clear_has_realprice();
}
inline ::google::protobuf::uint32 Production::realprice() const {
  // @@protoc_insertion_point(field_get:micromsg.Production.RealPrice)
  return realprice_;
}
inline void Production::set_realprice(::google::protobuf::uint32 value) {
  set_has_realprice();
  realprice_ = value;
  // @@protoc_insertion_point(field_set:micromsg.Production.RealPrice)
}

// optional string PriceType = 5;
inline bool Production::has_pricetype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Production::set_has_pricetype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Production::clear_has_pricetype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Production::clear_pricetype() {
  pricetype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pricetype();
}
inline const ::std::string& Production::pricetype() const {
  // @@protoc_insertion_point(field_get:micromsg.Production.PriceType)
  return pricetype_.GetNoArena();
}
inline void Production::set_pricetype(const ::std::string& value) {
  set_has_pricetype();
  pricetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Production.PriceType)
}
#if LANG_CXX11
inline void Production::set_pricetype(::std::string&& value) {
  set_has_pricetype();
  pricetype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Production.PriceType)
}
#endif
inline void Production::set_pricetype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pricetype();
  pricetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Production.PriceType)
}
inline void Production::set_pricetype(const char* value, size_t size) {
  set_has_pricetype();
  pricetype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Production.PriceType)
}
inline ::std::string* Production::mutable_pricetype() {
  set_has_pricetype();
  // @@protoc_insertion_point(field_mutable:micromsg.Production.PriceType)
  return pricetype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Production::release_pricetype() {
  // @@protoc_insertion_point(field_release:micromsg.Production.PriceType)
  clear_has_pricetype();
  return pricetype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Production::set_allocated_pricetype(::std::string* pricetype) {
  if (pricetype != NULL) {
    set_has_pricetype();
  } else {
    clear_has_pricetype();
  }
  pricetype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pricetype);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Production.PriceType)
}

// optional string Pid = 6;
inline bool Production::has_pid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Production::set_has_pid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Production::clear_has_pid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Production::clear_pid() {
  pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pid();
}
inline const ::std::string& Production::pid() const {
  // @@protoc_insertion_point(field_get:micromsg.Production.Pid)
  return pid_.GetNoArena();
}
inline void Production::set_pid(const ::std::string& value) {
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Production.Pid)
}
#if LANG_CXX11
inline void Production::set_pid(::std::string&& value) {
  set_has_pid();
  pid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Production.Pid)
}
#endif
inline void Production::set_pid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Production.Pid)
}
inline void Production::set_pid(const char* value, size_t size) {
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Production.Pid)
}
inline ::std::string* Production::mutable_pid() {
  set_has_pid();
  // @@protoc_insertion_point(field_mutable:micromsg.Production.Pid)
  return pid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Production::release_pid() {
  // @@protoc_insertion_point(field_release:micromsg.Production.Pid)
  clear_has_pid();
  return pid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Production::set_allocated_pid(::std::string* pid) {
  if (pid != NULL) {
    set_has_pid();
  } else {
    clear_has_pid();
  }
  pid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Production.Pid)
}

// optional string SafeUrl = 7;
inline bool Production::has_safeurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Production::set_has_safeurl() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Production::clear_has_safeurl() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Production::clear_safeurl() {
  safeurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_safeurl();
}
inline const ::std::string& Production::safeurl() const {
  // @@protoc_insertion_point(field_get:micromsg.Production.SafeUrl)
  return safeurl_.GetNoArena();
}
inline void Production::set_safeurl(const ::std::string& value) {
  set_has_safeurl();
  safeurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Production.SafeUrl)
}
#if LANG_CXX11
inline void Production::set_safeurl(::std::string&& value) {
  set_has_safeurl();
  safeurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Production.SafeUrl)
}
#endif
inline void Production::set_safeurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_safeurl();
  safeurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Production.SafeUrl)
}
inline void Production::set_safeurl(const char* value, size_t size) {
  set_has_safeurl();
  safeurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Production.SafeUrl)
}
inline ::std::string* Production::mutable_safeurl() {
  set_has_safeurl();
  // @@protoc_insertion_point(field_mutable:micromsg.Production.SafeUrl)
  return safeurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Production::release_safeurl() {
  // @@protoc_insertion_point(field_release:micromsg.Production.SafeUrl)
  clear_has_safeurl();
  return safeurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Production::set_allocated_safeurl(::std::string* safeurl) {
  if (safeurl != NULL) {
    set_has_safeurl();
  } else {
    clear_has_safeurl();
  }
  safeurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), safeurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Production.SafeUrl)
}

// optional string SkuId = 8;
inline bool Production::has_skuid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Production::set_has_skuid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Production::clear_has_skuid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Production::clear_skuid() {
  skuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_skuid();
}
inline const ::std::string& Production::skuid() const {
  // @@protoc_insertion_point(field_get:micromsg.Production.SkuId)
  return skuid_.GetNoArena();
}
inline void Production::set_skuid(const ::std::string& value) {
  set_has_skuid();
  skuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Production.SkuId)
}
#if LANG_CXX11
inline void Production::set_skuid(::std::string&& value) {
  set_has_skuid();
  skuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Production.SkuId)
}
#endif
inline void Production::set_skuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_skuid();
  skuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Production.SkuId)
}
inline void Production::set_skuid(const char* value, size_t size) {
  set_has_skuid();
  skuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Production.SkuId)
}
inline ::std::string* Production::mutable_skuid() {
  set_has_skuid();
  // @@protoc_insertion_point(field_mutable:micromsg.Production.SkuId)
  return skuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Production::release_skuid() {
  // @@protoc_insertion_point(field_release:micromsg.Production.SkuId)
  clear_has_skuid();
  return skuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Production::set_allocated_skuid(::std::string* skuid) {
  if (skuid != NULL) {
    set_has_skuid();
  } else {
    clear_has_skuid();
  }
  skuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), skuid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Production.SkuId)
}

// optional uint32 Type = 9;
inline bool Production::has_type() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Production::set_has_type() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Production::clear_has_type() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Production::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 Production::type() const {
  // @@protoc_insertion_point(field_get:micromsg.Production.Type)
  return type_;
}
inline void Production::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.Production.Type)
}

// optional string Name = 10;
inline bool Production::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Production::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Production::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Production::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& Production::name() const {
  // @@protoc_insertion_point(field_get:micromsg.Production.Name)
  return name_.GetNoArena();
}
inline void Production::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Production.Name)
}
#if LANG_CXX11
inline void Production::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Production.Name)
}
#endif
inline void Production::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Production.Name)
}
inline void Production::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Production.Name)
}
inline ::std::string* Production::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:micromsg.Production.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Production::release_name() {
  // @@protoc_insertion_point(field_release:micromsg.Production.Name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Production::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Production.Name)
}

// optional string ThumbUrl = 11;
inline bool Production::has_thumburl() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Production::set_has_thumburl() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Production::clear_has_thumburl() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Production::clear_thumburl() {
  thumburl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_thumburl();
}
inline const ::std::string& Production::thumburl() const {
  // @@protoc_insertion_point(field_get:micromsg.Production.ThumbUrl)
  return thumburl_.GetNoArena();
}
inline void Production::set_thumburl(const ::std::string& value) {
  set_has_thumburl();
  thumburl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Production.ThumbUrl)
}
#if LANG_CXX11
inline void Production::set_thumburl(::std::string&& value) {
  set_has_thumburl();
  thumburl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Production.ThumbUrl)
}
#endif
inline void Production::set_thumburl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_thumburl();
  thumburl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Production.ThumbUrl)
}
inline void Production::set_thumburl(const char* value, size_t size) {
  set_has_thumburl();
  thumburl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Production.ThumbUrl)
}
inline ::std::string* Production::mutable_thumburl() {
  set_has_thumburl();
  // @@protoc_insertion_point(field_mutable:micromsg.Production.ThumbUrl)
  return thumburl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Production::release_thumburl() {
  // @@protoc_insertion_point(field_release:micromsg.Production.ThumbUrl)
  clear_has_thumburl();
  return thumburl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Production::set_allocated_thumburl(::std::string* thumburl) {
  if (thumburl != NULL) {
    set_has_thumburl();
  } else {
    clear_has_thumburl();
  }
  thumburl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), thumburl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Production.ThumbUrl)
}

// optional uint32 SubType = 12;
inline bool Production::has_subtype() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Production::set_has_subtype() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Production::clear_has_subtype() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Production::clear_subtype() {
  subtype_ = 0u;
  clear_has_subtype();
}
inline ::google::protobuf::uint32 Production::subtype() const {
  // @@protoc_insertion_point(field_get:micromsg.Production.SubType)
  return subtype_;
}
inline void Production::set_subtype(::google::protobuf::uint32 value) {
  set_has_subtype();
  subtype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.Production.SubType)
}

// optional uint32 Scene = 13;
inline bool Production::has_scene() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Production::set_has_scene() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Production::clear_has_scene() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Production::clear_scene() {
  scene_ = 0u;
  clear_has_scene();
}
inline ::google::protobuf::uint32 Production::scene() const {
  // @@protoc_insertion_point(field_get:micromsg.Production.Scene)
  return scene_;
}
inline void Production::set_scene(::google::protobuf::uint32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.Production.Scene)
}

// optional string PreferentialPrice = 14;
inline bool Production::has_preferentialprice() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Production::set_has_preferentialprice() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Production::clear_has_preferentialprice() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Production::clear_preferentialprice() {
  preferentialprice_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_preferentialprice();
}
inline const ::std::string& Production::preferentialprice() const {
  // @@protoc_insertion_point(field_get:micromsg.Production.PreferentialPrice)
  return preferentialprice_.GetNoArena();
}
inline void Production::set_preferentialprice(const ::std::string& value) {
  set_has_preferentialprice();
  preferentialprice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Production.PreferentialPrice)
}
#if LANG_CXX11
inline void Production::set_preferentialprice(::std::string&& value) {
  set_has_preferentialprice();
  preferentialprice_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Production.PreferentialPrice)
}
#endif
inline void Production::set_preferentialprice(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_preferentialprice();
  preferentialprice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Production.PreferentialPrice)
}
inline void Production::set_preferentialprice(const char* value, size_t size) {
  set_has_preferentialprice();
  preferentialprice_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Production.PreferentialPrice)
}
inline ::std::string* Production::mutable_preferentialprice() {
  set_has_preferentialprice();
  // @@protoc_insertion_point(field_mutable:micromsg.Production.PreferentialPrice)
  return preferentialprice_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Production::release_preferentialprice() {
  // @@protoc_insertion_point(field_release:micromsg.Production.PreferentialPrice)
  clear_has_preferentialprice();
  return preferentialprice_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Production::set_allocated_preferentialprice(::std::string* preferentialprice) {
  if (preferentialprice != NULL) {
    set_has_preferentialprice();
  } else {
    clear_has_preferentialprice();
  }
  preferentialprice_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), preferentialprice);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Production.PreferentialPrice)
}

// optional uint32 DiscountCount = 15;
inline bool Production::has_discountcount() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Production::set_has_discountcount() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Production::clear_has_discountcount() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Production::clear_discountcount() {
  discountcount_ = 0u;
  clear_has_discountcount();
}
inline ::google::protobuf::uint32 Production::discountcount() const {
  // @@protoc_insertion_point(field_get:micromsg.Production.DiscountCount)
  return discountcount_;
}
inline void Production::set_discountcount(::google::protobuf::uint32 value) {
  set_has_discountcount();
  discountcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.Production.DiscountCount)
}

// repeated .micromsg.Discount Discounts = 16;
inline int Production::discounts_size() const {
  return discounts_.size();
}
inline void Production::clear_discounts() {
  discounts_.Clear();
}
inline const ::micromsg::Discount& Production::discounts(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.Production.Discounts)
  return discounts_.Get(index);
}
inline ::micromsg::Discount* Production::mutable_discounts(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.Production.Discounts)
  return discounts_.Mutable(index);
}
inline ::micromsg::Discount* Production::add_discounts() {
  // @@protoc_insertion_point(field_add:micromsg.Production.Discounts)
  return discounts_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::Discount >*
Production::mutable_discounts() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.Production.Discounts)
  return &discounts_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::Discount >&
Production::discounts() const {
  // @@protoc_insertion_point(field_list:micromsg.Production.Discounts)
  return discounts_;
}

// -------------------------------------------------------------------

// Snapshot

// required uint32 ProductCount = 1;
inline bool Snapshot::has_productcount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Snapshot::set_has_productcount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Snapshot::clear_has_productcount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Snapshot::clear_productcount() {
  productcount_ = 0u;
  clear_has_productcount();
}
inline ::google::protobuf::uint32 Snapshot::productcount() const {
  // @@protoc_insertion_point(field_get:micromsg.Snapshot.ProductCount)
  return productcount_;
}
inline void Snapshot::set_productcount(::google::protobuf::uint32 value) {
  set_has_productcount();
  productcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.Snapshot.ProductCount)
}

// repeated .micromsg.Production Productions = 2;
inline int Snapshot::productions_size() const {
  return productions_.size();
}
inline void Snapshot::clear_productions() {
  productions_.Clear();
}
inline const ::micromsg::Production& Snapshot::productions(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.Snapshot.Productions)
  return productions_.Get(index);
}
inline ::micromsg::Production* Snapshot::mutable_productions(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.Snapshot.Productions)
  return productions_.Mutable(index);
}
inline ::micromsg::Production* Snapshot::add_productions() {
  // @@protoc_insertion_point(field_add:micromsg.Snapshot.Productions)
  return productions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::Production >*
Snapshot::mutable_productions() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.Snapshot.Productions)
  return &productions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::Production >&
Snapshot::productions() const {
  // @@protoc_insertion_point(field_list:micromsg.Snapshot.Productions)
  return productions_;
}

// optional .micromsg.Express Express = 3;
inline bool Snapshot::has_express() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Snapshot::set_has_express() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Snapshot::clear_has_express() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Snapshot::clear_express() {
  if (express_ != NULL) express_->::micromsg::Express::Clear();
  clear_has_express();
}
inline const ::micromsg::Express& Snapshot::express() const {
  // @@protoc_insertion_point(field_get:micromsg.Snapshot.Express)
  return express_ != NULL ? *express_
                         : *::micromsg::Express::internal_default_instance();
}
inline ::micromsg::Express* Snapshot::mutable_express() {
  set_has_express();
  if (express_ == NULL) {
    express_ = new ::micromsg::Express;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.Snapshot.Express)
  return express_;
}
inline ::micromsg::Express* Snapshot::release_express() {
  // @@protoc_insertion_point(field_release:micromsg.Snapshot.Express)
  clear_has_express();
  ::micromsg::Express* temp = express_;
  express_ = NULL;
  return temp;
}
inline void Snapshot::set_allocated_express(::micromsg::Express* express) {
  delete express_;
  express_ = express;
  if (express) {
    set_has_express();
  } else {
    clear_has_express();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.Snapshot.Express)
}

// optional .micromsg.Address Address = 4;
inline bool Snapshot::has_address() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Snapshot::set_has_address() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Snapshot::clear_has_address() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Snapshot::clear_address() {
  if (address_ != NULL) address_->::micromsg::Address::Clear();
  clear_has_address();
}
inline const ::micromsg::Address& Snapshot::address() const {
  // @@protoc_insertion_point(field_get:micromsg.Snapshot.Address)
  return address_ != NULL ? *address_
                         : *::micromsg::Address::internal_default_instance();
}
inline ::micromsg::Address* Snapshot::mutable_address() {
  set_has_address();
  if (address_ == NULL) {
    address_ = new ::micromsg::Address;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.Snapshot.Address)
  return address_;
}
inline ::micromsg::Address* Snapshot::release_address() {
  // @@protoc_insertion_point(field_release:micromsg.Snapshot.Address)
  clear_has_address();
  ::micromsg::Address* temp = address_;
  address_ = NULL;
  return temp;
}
inline void Snapshot::set_allocated_address(::micromsg::Address* address) {
  delete address_;
  address_ = address;
  if (address) {
    set_has_address();
  } else {
    clear_has_address();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.Snapshot.Address)
}

// repeated .micromsg.Receipt Receipt = 5;
inline int Snapshot::receipt_size() const {
  return receipt_.size();
}
inline void Snapshot::clear_receipt() {
  receipt_.Clear();
}
inline const ::micromsg::Receipt& Snapshot::receipt(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.Snapshot.Receipt)
  return receipt_.Get(index);
}
inline ::micromsg::Receipt* Snapshot::mutable_receipt(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.Snapshot.Receipt)
  return receipt_.Mutable(index);
}
inline ::micromsg::Receipt* Snapshot::add_receipt() {
  // @@protoc_insertion_point(field_add:micromsg.Snapshot.Receipt)
  return receipt_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::Receipt >*
Snapshot::mutable_receipt() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.Snapshot.Receipt)
  return &receipt_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::Receipt >&
Snapshot::receipt() const {
  // @@protoc_insertion_point(field_list:micromsg.Snapshot.Receipt)
  return receipt_;
}

// optional uint32 ReceiptCount = 6;
inline bool Snapshot::has_receiptcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Snapshot::set_has_receiptcount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Snapshot::clear_has_receiptcount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Snapshot::clear_receiptcount() {
  receiptcount_ = 0u;
  clear_has_receiptcount();
}
inline ::google::protobuf::uint32 Snapshot::receiptcount() const {
  // @@protoc_insertion_point(field_get:micromsg.Snapshot.ReceiptCount)
  return receiptcount_;
}
inline void Snapshot::set_receiptcount(::google::protobuf::uint32 value) {
  set_has_receiptcount();
  receiptcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.Snapshot.ReceiptCount)
}

// optional string LockId = 7;
inline bool Snapshot::has_lockid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Snapshot::set_has_lockid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Snapshot::clear_has_lockid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Snapshot::clear_lockid() {
  lockid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lockid();
}
inline const ::std::string& Snapshot::lockid() const {
  // @@protoc_insertion_point(field_get:micromsg.Snapshot.LockId)
  return lockid_.GetNoArena();
}
inline void Snapshot::set_lockid(const ::std::string& value) {
  set_has_lockid();
  lockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.Snapshot.LockId)
}
#if LANG_CXX11
inline void Snapshot::set_lockid(::std::string&& value) {
  set_has_lockid();
  lockid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.Snapshot.LockId)
}
#endif
inline void Snapshot::set_lockid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_lockid();
  lockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.Snapshot.LockId)
}
inline void Snapshot::set_lockid(const char* value, size_t size) {
  set_has_lockid();
  lockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.Snapshot.LockId)
}
inline ::std::string* Snapshot::mutable_lockid() {
  set_has_lockid();
  // @@protoc_insertion_point(field_mutable:micromsg.Snapshot.LockId)
  return lockid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Snapshot::release_lockid() {
  // @@protoc_insertion_point(field_release:micromsg.Snapshot.LockId)
  clear_has_lockid();
  return lockid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Snapshot::set_allocated_lockid(::std::string* lockid) {
  if (lockid != NULL) {
    set_has_lockid();
  } else {
    clear_has_lockid();
  }
  lockid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lockid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.Snapshot.LockId)
}

// -------------------------------------------------------------------

// SubmitMallOrderRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool SubmitMallOrderRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SubmitMallOrderRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SubmitMallOrderRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SubmitMallOrderRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& SubmitMallOrderRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SubmitMallOrderRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* SubmitMallOrderRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SubmitMallOrderRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* SubmitMallOrderRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SubmitMallOrderRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void SubmitMallOrderRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SubmitMallOrderRequest.BaseRequest)
}

// optional .micromsg.Snapshot Snapshot = 2;
inline bool SubmitMallOrderRequest::has_snapshot() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SubmitMallOrderRequest::set_has_snapshot() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SubmitMallOrderRequest::clear_has_snapshot() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SubmitMallOrderRequest::clear_snapshot() {
  if (snapshot_ != NULL) snapshot_->::micromsg::Snapshot::Clear();
  clear_has_snapshot();
}
inline const ::micromsg::Snapshot& SubmitMallOrderRequest::snapshot() const {
  // @@protoc_insertion_point(field_get:micromsg.SubmitMallOrderRequest.Snapshot)
  return snapshot_ != NULL ? *snapshot_
                         : *::micromsg::Snapshot::internal_default_instance();
}
inline ::micromsg::Snapshot* SubmitMallOrderRequest::mutable_snapshot() {
  set_has_snapshot();
  if (snapshot_ == NULL) {
    snapshot_ = new ::micromsg::Snapshot;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SubmitMallOrderRequest.Snapshot)
  return snapshot_;
}
inline ::micromsg::Snapshot* SubmitMallOrderRequest::release_snapshot() {
  // @@protoc_insertion_point(field_release:micromsg.SubmitMallOrderRequest.Snapshot)
  clear_has_snapshot();
  ::micromsg::Snapshot* temp = snapshot_;
  snapshot_ = NULL;
  return temp;
}
inline void SubmitMallOrderRequest::set_allocated_snapshot(::micromsg::Snapshot* snapshot) {
  delete snapshot_;
  snapshot_ = snapshot;
  if (snapshot) {
    set_has_snapshot();
  } else {
    clear_has_snapshot();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SubmitMallOrderRequest.Snapshot)
}

// optional string PayAppid = 3;
inline bool SubmitMallOrderRequest::has_payappid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SubmitMallOrderRequest::set_has_payappid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SubmitMallOrderRequest::clear_has_payappid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SubmitMallOrderRequest::clear_payappid() {
  payappid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_payappid();
}
inline const ::std::string& SubmitMallOrderRequest::payappid() const {
  // @@protoc_insertion_point(field_get:micromsg.SubmitMallOrderRequest.PayAppid)
  return payappid_.GetNoArena();
}
inline void SubmitMallOrderRequest::set_payappid(const ::std::string& value) {
  set_has_payappid();
  payappid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SubmitMallOrderRequest.PayAppid)
}
#if LANG_CXX11
inline void SubmitMallOrderRequest::set_payappid(::std::string&& value) {
  set_has_payappid();
  payappid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SubmitMallOrderRequest.PayAppid)
}
#endif
inline void SubmitMallOrderRequest::set_payappid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_payappid();
  payappid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SubmitMallOrderRequest.PayAppid)
}
inline void SubmitMallOrderRequest::set_payappid(const char* value, size_t size) {
  set_has_payappid();
  payappid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SubmitMallOrderRequest.PayAppid)
}
inline ::std::string* SubmitMallOrderRequest::mutable_payappid() {
  set_has_payappid();
  // @@protoc_insertion_point(field_mutable:micromsg.SubmitMallOrderRequest.PayAppid)
  return payappid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubmitMallOrderRequest::release_payappid() {
  // @@protoc_insertion_point(field_release:micromsg.SubmitMallOrderRequest.PayAppid)
  clear_has_payappid();
  return payappid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubmitMallOrderRequest::set_allocated_payappid(::std::string* payappid) {
  if (payappid != NULL) {
    set_has_payappid();
  } else {
    clear_has_payappid();
  }
  payappid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payappid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SubmitMallOrderRequest.PayAppid)
}

// -------------------------------------------------------------------

// SubmitMallOrderResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool SubmitMallOrderResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SubmitMallOrderResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SubmitMallOrderResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SubmitMallOrderResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& SubmitMallOrderResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.SubmitMallOrderResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* SubmitMallOrderResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SubmitMallOrderResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* SubmitMallOrderResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.SubmitMallOrderResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void SubmitMallOrderResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SubmitMallOrderResponse.BaseResponse)
}

// optional string PrepareId = 2;
inline bool SubmitMallOrderResponse::has_prepareid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SubmitMallOrderResponse::set_has_prepareid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SubmitMallOrderResponse::clear_has_prepareid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SubmitMallOrderResponse::clear_prepareid() {
  prepareid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_prepareid();
}
inline const ::std::string& SubmitMallOrderResponse::prepareid() const {
  // @@protoc_insertion_point(field_get:micromsg.SubmitMallOrderResponse.PrepareId)
  return prepareid_.GetNoArena();
}
inline void SubmitMallOrderResponse::set_prepareid(const ::std::string& value) {
  set_has_prepareid();
  prepareid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SubmitMallOrderResponse.PrepareId)
}
#if LANG_CXX11
inline void SubmitMallOrderResponse::set_prepareid(::std::string&& value) {
  set_has_prepareid();
  prepareid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SubmitMallOrderResponse.PrepareId)
}
#endif
inline void SubmitMallOrderResponse::set_prepareid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_prepareid();
  prepareid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SubmitMallOrderResponse.PrepareId)
}
inline void SubmitMallOrderResponse::set_prepareid(const char* value, size_t size) {
  set_has_prepareid();
  prepareid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SubmitMallOrderResponse.PrepareId)
}
inline ::std::string* SubmitMallOrderResponse::mutable_prepareid() {
  set_has_prepareid();
  // @@protoc_insertion_point(field_mutable:micromsg.SubmitMallOrderResponse.PrepareId)
  return prepareid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubmitMallOrderResponse::release_prepareid() {
  // @@protoc_insertion_point(field_release:micromsg.SubmitMallOrderResponse.PrepareId)
  clear_has_prepareid();
  return prepareid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubmitMallOrderResponse::set_allocated_prepareid(::std::string* prepareid) {
  if (prepareid != NULL) {
    set_has_prepareid();
  } else {
    clear_has_prepareid();
  }
  prepareid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prepareid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SubmitMallOrderResponse.PrepareId)
}

// optional int32 RetCode = 3;
inline bool SubmitMallOrderResponse::has_retcode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SubmitMallOrderResponse::set_has_retcode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SubmitMallOrderResponse::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SubmitMallOrderResponse::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 SubmitMallOrderResponse::retcode() const {
  // @@protoc_insertion_point(field_get:micromsg.SubmitMallOrderResponse.RetCode)
  return retcode_;
}
inline void SubmitMallOrderResponse::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SubmitMallOrderResponse.RetCode)
}

// optional string RetMsg = 4;
inline bool SubmitMallOrderResponse::has_retmsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SubmitMallOrderResponse::set_has_retmsg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SubmitMallOrderResponse::clear_has_retmsg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SubmitMallOrderResponse::clear_retmsg() {
  retmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_retmsg();
}
inline const ::std::string& SubmitMallOrderResponse::retmsg() const {
  // @@protoc_insertion_point(field_get:micromsg.SubmitMallOrderResponse.RetMsg)
  return retmsg_.GetNoArena();
}
inline void SubmitMallOrderResponse::set_retmsg(const ::std::string& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SubmitMallOrderResponse.RetMsg)
}
#if LANG_CXX11
inline void SubmitMallOrderResponse::set_retmsg(::std::string&& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SubmitMallOrderResponse.RetMsg)
}
#endif
inline void SubmitMallOrderResponse::set_retmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SubmitMallOrderResponse.RetMsg)
}
inline void SubmitMallOrderResponse::set_retmsg(const char* value, size_t size) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SubmitMallOrderResponse.RetMsg)
}
inline ::std::string* SubmitMallOrderResponse::mutable_retmsg() {
  set_has_retmsg();
  // @@protoc_insertion_point(field_mutable:micromsg.SubmitMallOrderResponse.RetMsg)
  return retmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubmitMallOrderResponse::release_retmsg() {
  // @@protoc_insertion_point(field_release:micromsg.SubmitMallOrderResponse.RetMsg)
  clear_has_retmsg();
  return retmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubmitMallOrderResponse::set_allocated_retmsg(::std::string* retmsg) {
  if (retmsg != NULL) {
    set_has_retmsg();
  } else {
    clear_has_retmsg();
  }
  retmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retmsg);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SubmitMallOrderResponse.RetMsg)
}

// -------------------------------------------------------------------

// SubmitMallFreeOrderRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool SubmitMallFreeOrderRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SubmitMallFreeOrderRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SubmitMallFreeOrderRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SubmitMallFreeOrderRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& SubmitMallFreeOrderRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SubmitMallFreeOrderRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* SubmitMallFreeOrderRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SubmitMallFreeOrderRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* SubmitMallFreeOrderRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SubmitMallFreeOrderRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void SubmitMallFreeOrderRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SubmitMallFreeOrderRequest.BaseRequest)
}

// optional .micromsg.Snapshot Snapshot = 2;
inline bool SubmitMallFreeOrderRequest::has_snapshot() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SubmitMallFreeOrderRequest::set_has_snapshot() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SubmitMallFreeOrderRequest::clear_has_snapshot() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SubmitMallFreeOrderRequest::clear_snapshot() {
  if (snapshot_ != NULL) snapshot_->::micromsg::Snapshot::Clear();
  clear_has_snapshot();
}
inline const ::micromsg::Snapshot& SubmitMallFreeOrderRequest::snapshot() const {
  // @@protoc_insertion_point(field_get:micromsg.SubmitMallFreeOrderRequest.Snapshot)
  return snapshot_ != NULL ? *snapshot_
                         : *::micromsg::Snapshot::internal_default_instance();
}
inline ::micromsg::Snapshot* SubmitMallFreeOrderRequest::mutable_snapshot() {
  set_has_snapshot();
  if (snapshot_ == NULL) {
    snapshot_ = new ::micromsg::Snapshot;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SubmitMallFreeOrderRequest.Snapshot)
  return snapshot_;
}
inline ::micromsg::Snapshot* SubmitMallFreeOrderRequest::release_snapshot() {
  // @@protoc_insertion_point(field_release:micromsg.SubmitMallFreeOrderRequest.Snapshot)
  clear_has_snapshot();
  ::micromsg::Snapshot* temp = snapshot_;
  snapshot_ = NULL;
  return temp;
}
inline void SubmitMallFreeOrderRequest::set_allocated_snapshot(::micromsg::Snapshot* snapshot) {
  delete snapshot_;
  snapshot_ = snapshot;
  if (snapshot) {
    set_has_snapshot();
  } else {
    clear_has_snapshot();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SubmitMallFreeOrderRequest.Snapshot)
}

// -------------------------------------------------------------------

// SubmitMallFreeOrderResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool SubmitMallFreeOrderResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SubmitMallFreeOrderResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SubmitMallFreeOrderResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SubmitMallFreeOrderResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& SubmitMallFreeOrderResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.SubmitMallFreeOrderResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* SubmitMallFreeOrderResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SubmitMallFreeOrderResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* SubmitMallFreeOrderResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.SubmitMallFreeOrderResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void SubmitMallFreeOrderResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SubmitMallFreeOrderResponse.BaseResponse)
}

// optional string PrepareId = 2;
inline bool SubmitMallFreeOrderResponse::has_prepareid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SubmitMallFreeOrderResponse::set_has_prepareid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SubmitMallFreeOrderResponse::clear_has_prepareid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SubmitMallFreeOrderResponse::clear_prepareid() {
  prepareid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_prepareid();
}
inline const ::std::string& SubmitMallFreeOrderResponse::prepareid() const {
  // @@protoc_insertion_point(field_get:micromsg.SubmitMallFreeOrderResponse.PrepareId)
  return prepareid_.GetNoArena();
}
inline void SubmitMallFreeOrderResponse::set_prepareid(const ::std::string& value) {
  set_has_prepareid();
  prepareid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SubmitMallFreeOrderResponse.PrepareId)
}
#if LANG_CXX11
inline void SubmitMallFreeOrderResponse::set_prepareid(::std::string&& value) {
  set_has_prepareid();
  prepareid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SubmitMallFreeOrderResponse.PrepareId)
}
#endif
inline void SubmitMallFreeOrderResponse::set_prepareid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_prepareid();
  prepareid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SubmitMallFreeOrderResponse.PrepareId)
}
inline void SubmitMallFreeOrderResponse::set_prepareid(const char* value, size_t size) {
  set_has_prepareid();
  prepareid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SubmitMallFreeOrderResponse.PrepareId)
}
inline ::std::string* SubmitMallFreeOrderResponse::mutable_prepareid() {
  set_has_prepareid();
  // @@protoc_insertion_point(field_mutable:micromsg.SubmitMallFreeOrderResponse.PrepareId)
  return prepareid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubmitMallFreeOrderResponse::release_prepareid() {
  // @@protoc_insertion_point(field_release:micromsg.SubmitMallFreeOrderResponse.PrepareId)
  clear_has_prepareid();
  return prepareid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubmitMallFreeOrderResponse::set_allocated_prepareid(::std::string* prepareid) {
  if (prepareid != NULL) {
    set_has_prepareid();
  } else {
    clear_has_prepareid();
  }
  prepareid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prepareid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SubmitMallFreeOrderResponse.PrepareId)
}

// optional int32 RetCode = 3;
inline bool SubmitMallFreeOrderResponse::has_retcode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SubmitMallFreeOrderResponse::set_has_retcode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SubmitMallFreeOrderResponse::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SubmitMallFreeOrderResponse::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 SubmitMallFreeOrderResponse::retcode() const {
  // @@protoc_insertion_point(field_get:micromsg.SubmitMallFreeOrderResponse.RetCode)
  return retcode_;
}
inline void SubmitMallFreeOrderResponse::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SubmitMallFreeOrderResponse.RetCode)
}

// optional string RetMsg = 4;
inline bool SubmitMallFreeOrderResponse::has_retmsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SubmitMallFreeOrderResponse::set_has_retmsg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SubmitMallFreeOrderResponse::clear_has_retmsg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SubmitMallFreeOrderResponse::clear_retmsg() {
  retmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_retmsg();
}
inline const ::std::string& SubmitMallFreeOrderResponse::retmsg() const {
  // @@protoc_insertion_point(field_get:micromsg.SubmitMallFreeOrderResponse.RetMsg)
  return retmsg_.GetNoArena();
}
inline void SubmitMallFreeOrderResponse::set_retmsg(const ::std::string& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SubmitMallFreeOrderResponse.RetMsg)
}
#if LANG_CXX11
inline void SubmitMallFreeOrderResponse::set_retmsg(::std::string&& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SubmitMallFreeOrderResponse.RetMsg)
}
#endif
inline void SubmitMallFreeOrderResponse::set_retmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SubmitMallFreeOrderResponse.RetMsg)
}
inline void SubmitMallFreeOrderResponse::set_retmsg(const char* value, size_t size) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SubmitMallFreeOrderResponse.RetMsg)
}
inline ::std::string* SubmitMallFreeOrderResponse::mutable_retmsg() {
  set_has_retmsg();
  // @@protoc_insertion_point(field_mutable:micromsg.SubmitMallFreeOrderResponse.RetMsg)
  return retmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SubmitMallFreeOrderResponse::release_retmsg() {
  // @@protoc_insertion_point(field_release:micromsg.SubmitMallFreeOrderResponse.RetMsg)
  clear_has_retmsg();
  return retmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SubmitMallFreeOrderResponse::set_allocated_retmsg(::std::string* retmsg) {
  if (retmsg != NULL) {
    set_has_retmsg();
  } else {
    clear_has_retmsg();
  }
  retmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retmsg);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SubmitMallFreeOrderResponse.RetMsg)
}

// -------------------------------------------------------------------

// SampleProduct

// optional string Pid = 1;
inline bool SampleProduct::has_pid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SampleProduct::set_has_pid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SampleProduct::clear_has_pid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SampleProduct::clear_pid() {
  pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pid();
}
inline const ::std::string& SampleProduct::pid() const {
  // @@protoc_insertion_point(field_get:micromsg.SampleProduct.Pid)
  return pid_.GetNoArena();
}
inline void SampleProduct::set_pid(const ::std::string& value) {
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SampleProduct.Pid)
}
#if LANG_CXX11
inline void SampleProduct::set_pid(::std::string&& value) {
  set_has_pid();
  pid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SampleProduct.Pid)
}
#endif
inline void SampleProduct::set_pid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SampleProduct.Pid)
}
inline void SampleProduct::set_pid(const char* value, size_t size) {
  set_has_pid();
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SampleProduct.Pid)
}
inline ::std::string* SampleProduct::mutable_pid() {
  set_has_pid();
  // @@protoc_insertion_point(field_mutable:micromsg.SampleProduct.Pid)
  return pid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SampleProduct::release_pid() {
  // @@protoc_insertion_point(field_release:micromsg.SampleProduct.Pid)
  clear_has_pid();
  return pid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SampleProduct::set_allocated_pid(::std::string* pid) {
  if (pid != NULL) {
    set_has_pid();
  } else {
    clear_has_pid();
  }
  pid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SampleProduct.Pid)
}

// optional string SkuId = 2;
inline bool SampleProduct::has_skuid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SampleProduct::set_has_skuid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SampleProduct::clear_has_skuid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SampleProduct::clear_skuid() {
  skuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_skuid();
}
inline const ::std::string& SampleProduct::skuid() const {
  // @@protoc_insertion_point(field_get:micromsg.SampleProduct.SkuId)
  return skuid_.GetNoArena();
}
inline void SampleProduct::set_skuid(const ::std::string& value) {
  set_has_skuid();
  skuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SampleProduct.SkuId)
}
#if LANG_CXX11
inline void SampleProduct::set_skuid(::std::string&& value) {
  set_has_skuid();
  skuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SampleProduct.SkuId)
}
#endif
inline void SampleProduct::set_skuid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_skuid();
  skuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SampleProduct.SkuId)
}
inline void SampleProduct::set_skuid(const char* value, size_t size) {
  set_has_skuid();
  skuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SampleProduct.SkuId)
}
inline ::std::string* SampleProduct::mutable_skuid() {
  set_has_skuid();
  // @@protoc_insertion_point(field_mutable:micromsg.SampleProduct.SkuId)
  return skuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SampleProduct::release_skuid() {
  // @@protoc_insertion_point(field_release:micromsg.SampleProduct.SkuId)
  clear_has_skuid();
  return skuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SampleProduct::set_allocated_skuid(::std::string* skuid) {
  if (skuid != NULL) {
    set_has_skuid();
  } else {
    clear_has_skuid();
  }
  skuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), skuid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SampleProduct.SkuId)
}

// optional uint32 Count = 3;
inline bool SampleProduct::has_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SampleProduct::set_has_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SampleProduct::clear_has_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SampleProduct::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 SampleProduct::count() const {
  // @@protoc_insertion_point(field_get:micromsg.SampleProduct.Count)
  return count_;
}
inline void SampleProduct::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SampleProduct.Count)
}

// optional string SafeUrl = 4;
inline bool SampleProduct::has_safeurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SampleProduct::set_has_safeurl() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SampleProduct::clear_has_safeurl() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SampleProduct::clear_safeurl() {
  safeurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_safeurl();
}
inline const ::std::string& SampleProduct::safeurl() const {
  // @@protoc_insertion_point(field_get:micromsg.SampleProduct.SafeUrl)
  return safeurl_.GetNoArena();
}
inline void SampleProduct::set_safeurl(const ::std::string& value) {
  set_has_safeurl();
  safeurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SampleProduct.SafeUrl)
}
#if LANG_CXX11
inline void SampleProduct::set_safeurl(::std::string&& value) {
  set_has_safeurl();
  safeurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SampleProduct.SafeUrl)
}
#endif
inline void SampleProduct::set_safeurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_safeurl();
  safeurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SampleProduct.SafeUrl)
}
inline void SampleProduct::set_safeurl(const char* value, size_t size) {
  set_has_safeurl();
  safeurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SampleProduct.SafeUrl)
}
inline ::std::string* SampleProduct::mutable_safeurl() {
  set_has_safeurl();
  // @@protoc_insertion_point(field_mutable:micromsg.SampleProduct.SafeUrl)
  return safeurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SampleProduct::release_safeurl() {
  // @@protoc_insertion_point(field_release:micromsg.SampleProduct.SafeUrl)
  clear_has_safeurl();
  return safeurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SampleProduct::set_allocated_safeurl(::std::string* safeurl) {
  if (safeurl != NULL) {
    set_has_safeurl();
  } else {
    clear_has_safeurl();
  }
  safeurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), safeurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SampleProduct.SafeUrl)
}

// -------------------------------------------------------------------

// ActionAttr

// optional string Name = 1;
inline bool ActionAttr::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActionAttr::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActionAttr::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActionAttr::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& ActionAttr::name() const {
  // @@protoc_insertion_point(field_get:micromsg.ActionAttr.Name)
  return name_.GetNoArena();
}
inline void ActionAttr::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ActionAttr.Name)
}
#if LANG_CXX11
inline void ActionAttr::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ActionAttr.Name)
}
#endif
inline void ActionAttr::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ActionAttr.Name)
}
inline void ActionAttr::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ActionAttr.Name)
}
inline ::std::string* ActionAttr::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:micromsg.ActionAttr.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActionAttr::release_name() {
  // @@protoc_insertion_point(field_release:micromsg.ActionAttr.Name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActionAttr::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ActionAttr.Name)
}

// optional string Tips = 2;
inline bool ActionAttr::has_tips() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActionAttr::set_has_tips() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActionAttr::clear_has_tips() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActionAttr::clear_tips() {
  tips_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tips();
}
inline const ::std::string& ActionAttr::tips() const {
  // @@protoc_insertion_point(field_get:micromsg.ActionAttr.Tips)
  return tips_.GetNoArena();
}
inline void ActionAttr::set_tips(const ::std::string& value) {
  set_has_tips();
  tips_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ActionAttr.Tips)
}
#if LANG_CXX11
inline void ActionAttr::set_tips(::std::string&& value) {
  set_has_tips();
  tips_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ActionAttr.Tips)
}
#endif
inline void ActionAttr::set_tips(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tips();
  tips_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ActionAttr.Tips)
}
inline void ActionAttr::set_tips(const char* value, size_t size) {
  set_has_tips();
  tips_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ActionAttr.Tips)
}
inline ::std::string* ActionAttr::mutable_tips() {
  set_has_tips();
  // @@protoc_insertion_point(field_mutable:micromsg.ActionAttr.Tips)
  return tips_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActionAttr::release_tips() {
  // @@protoc_insertion_point(field_release:micromsg.ActionAttr.Tips)
  clear_has_tips();
  return tips_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActionAttr::set_allocated_tips(::std::string* tips) {
  if (tips != NULL) {
    set_has_tips();
  } else {
    clear_has_tips();
  }
  tips_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tips);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ActionAttr.Tips)
}

// optional uint32 Type = 3;
inline bool ActionAttr::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ActionAttr::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ActionAttr::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ActionAttr::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 ActionAttr::type() const {
  // @@protoc_insertion_point(field_get:micromsg.ActionAttr.Type)
  return type_;
}
inline void ActionAttr::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ActionAttr.Type)
}

// optional string Content = 4;
inline bool ActionAttr::has_content() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActionAttr::set_has_content() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActionAttr::clear_has_content() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActionAttr::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& ActionAttr::content() const {
  // @@protoc_insertion_point(field_get:micromsg.ActionAttr.Content)
  return content_.GetNoArena();
}
inline void ActionAttr::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ActionAttr.Content)
}
#if LANG_CXX11
inline void ActionAttr::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ActionAttr.Content)
}
#endif
inline void ActionAttr::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ActionAttr.Content)
}
inline void ActionAttr::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ActionAttr.Content)
}
inline ::std::string* ActionAttr::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:micromsg.ActionAttr.Content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActionAttr::release_content() {
  // @@protoc_insertion_point(field_release:micromsg.ActionAttr.Content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActionAttr::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ActionAttr.Content)
}

// optional string IconUrl = 5;
inline bool ActionAttr::has_iconurl() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActionAttr::set_has_iconurl() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActionAttr::clear_has_iconurl() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActionAttr::clear_iconurl() {
  iconurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_iconurl();
}
inline const ::std::string& ActionAttr::iconurl() const {
  // @@protoc_insertion_point(field_get:micromsg.ActionAttr.IconUrl)
  return iconurl_.GetNoArena();
}
inline void ActionAttr::set_iconurl(const ::std::string& value) {
  set_has_iconurl();
  iconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.ActionAttr.IconUrl)
}
#if LANG_CXX11
inline void ActionAttr::set_iconurl(::std::string&& value) {
  set_has_iconurl();
  iconurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.ActionAttr.IconUrl)
}
#endif
inline void ActionAttr::set_iconurl(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_iconurl();
  iconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.ActionAttr.IconUrl)
}
inline void ActionAttr::set_iconurl(const char* value, size_t size) {
  set_has_iconurl();
  iconurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.ActionAttr.IconUrl)
}
inline ::std::string* ActionAttr::mutable_iconurl() {
  set_has_iconurl();
  // @@protoc_insertion_point(field_mutable:micromsg.ActionAttr.IconUrl)
  return iconurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActionAttr::release_iconurl() {
  // @@protoc_insertion_point(field_release:micromsg.ActionAttr.IconUrl)
  clear_has_iconurl();
  return iconurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActionAttr::set_allocated_iconurl(::std::string* iconurl) {
  if (iconurl != NULL) {
    set_has_iconurl();
  } else {
    clear_has_iconurl();
  }
  iconurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), iconurl);
  // @@protoc_insertion_point(field_set_allocated:micromsg.ActionAttr.IconUrl)
}

// -------------------------------------------------------------------

// PreSubmitOrderRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool PreSubmitOrderRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PreSubmitOrderRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PreSubmitOrderRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PreSubmitOrderRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& PreSubmitOrderRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.PreSubmitOrderRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* PreSubmitOrderRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.PreSubmitOrderRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* PreSubmitOrderRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.PreSubmitOrderRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void PreSubmitOrderRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.PreSubmitOrderRequest.BaseRequest)
}

// required uint32 ProductCount = 2;
inline bool PreSubmitOrderRequest::has_productcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PreSubmitOrderRequest::set_has_productcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PreSubmitOrderRequest::clear_has_productcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PreSubmitOrderRequest::clear_productcount() {
  productcount_ = 0u;
  clear_has_productcount();
}
inline ::google::protobuf::uint32 PreSubmitOrderRequest::productcount() const {
  // @@protoc_insertion_point(field_get:micromsg.PreSubmitOrderRequest.ProductCount)
  return productcount_;
}
inline void PreSubmitOrderRequest::set_productcount(::google::protobuf::uint32 value) {
  set_has_productcount();
  productcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.PreSubmitOrderRequest.ProductCount)
}

// repeated .micromsg.SampleProduct Product = 3;
inline int PreSubmitOrderRequest::product_size() const {
  return product_.size();
}
inline void PreSubmitOrderRequest::clear_product() {
  product_.Clear();
}
inline const ::micromsg::SampleProduct& PreSubmitOrderRequest::product(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.PreSubmitOrderRequest.Product)
  return product_.Get(index);
}
inline ::micromsg::SampleProduct* PreSubmitOrderRequest::mutable_product(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.PreSubmitOrderRequest.Product)
  return product_.Mutable(index);
}
inline ::micromsg::SampleProduct* PreSubmitOrderRequest::add_product() {
  // @@protoc_insertion_point(field_add:micromsg.PreSubmitOrderRequest.Product)
  return product_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SampleProduct >*
PreSubmitOrderRequest::mutable_product() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.PreSubmitOrderRequest.Product)
  return &product_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SampleProduct >&
PreSubmitOrderRequest::product() const {
  // @@protoc_insertion_point(field_list:micromsg.PreSubmitOrderRequest.Product)
  return product_;
}

// -------------------------------------------------------------------

// PreSubmitOrderResponse

// optional .micromsg.BaseResponse BaseResponse = 1;
inline bool PreSubmitOrderResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PreSubmitOrderResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PreSubmitOrderResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PreSubmitOrderResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& PreSubmitOrderResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.PreSubmitOrderResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* PreSubmitOrderResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.PreSubmitOrderResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* PreSubmitOrderResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.PreSubmitOrderResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void PreSubmitOrderResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.PreSubmitOrderResponse.BaseResponse)
}

// optional uint32 ExpressCount = 2;
inline bool PreSubmitOrderResponse::has_expresscount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PreSubmitOrderResponse::set_has_expresscount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PreSubmitOrderResponse::clear_has_expresscount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PreSubmitOrderResponse::clear_expresscount() {
  expresscount_ = 0u;
  clear_has_expresscount();
}
inline ::google::protobuf::uint32 PreSubmitOrderResponse::expresscount() const {
  // @@protoc_insertion_point(field_get:micromsg.PreSubmitOrderResponse.ExpressCount)
  return expresscount_;
}
inline void PreSubmitOrderResponse::set_expresscount(::google::protobuf::uint32 value) {
  set_has_expresscount();
  expresscount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.PreSubmitOrderResponse.ExpressCount)
}

// repeated .micromsg.Express Express = 3;
inline int PreSubmitOrderResponse::express_size() const {
  return express_.size();
}
inline void PreSubmitOrderResponse::clear_express() {
  express_.Clear();
}
inline const ::micromsg::Express& PreSubmitOrderResponse::express(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.PreSubmitOrderResponse.Express)
  return express_.Get(index);
}
inline ::micromsg::Express* PreSubmitOrderResponse::mutable_express(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.PreSubmitOrderResponse.Express)
  return express_.Mutable(index);
}
inline ::micromsg::Express* PreSubmitOrderResponse::add_express() {
  // @@protoc_insertion_point(field_add:micromsg.PreSubmitOrderResponse.Express)
  return express_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::Express >*
PreSubmitOrderResponse::mutable_express() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.PreSubmitOrderResponse.Express)
  return &express_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::Express >&
PreSubmitOrderResponse::express() const {
  // @@protoc_insertion_point(field_list:micromsg.PreSubmitOrderResponse.Express)
  return express_;
}

// optional string LockId = 4;
inline bool PreSubmitOrderResponse::has_lockid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PreSubmitOrderResponse::set_has_lockid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PreSubmitOrderResponse::clear_has_lockid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PreSubmitOrderResponse::clear_lockid() {
  lockid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lockid();
}
inline const ::std::string& PreSubmitOrderResponse::lockid() const {
  // @@protoc_insertion_point(field_get:micromsg.PreSubmitOrderResponse.LockId)
  return lockid_.GetNoArena();
}
inline void PreSubmitOrderResponse::set_lockid(const ::std::string& value) {
  set_has_lockid();
  lockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.PreSubmitOrderResponse.LockId)
}
#if LANG_CXX11
inline void PreSubmitOrderResponse::set_lockid(::std::string&& value) {
  set_has_lockid();
  lockid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.PreSubmitOrderResponse.LockId)
}
#endif
inline void PreSubmitOrderResponse::set_lockid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_lockid();
  lockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.PreSubmitOrderResponse.LockId)
}
inline void PreSubmitOrderResponse::set_lockid(const char* value, size_t size) {
  set_has_lockid();
  lockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.PreSubmitOrderResponse.LockId)
}
inline ::std::string* PreSubmitOrderResponse::mutable_lockid() {
  set_has_lockid();
  // @@protoc_insertion_point(field_mutable:micromsg.PreSubmitOrderResponse.LockId)
  return lockid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PreSubmitOrderResponse::release_lockid() {
  // @@protoc_insertion_point(field_release:micromsg.PreSubmitOrderResponse.LockId)
  clear_has_lockid();
  return lockid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PreSubmitOrderResponse::set_allocated_lockid(::std::string* lockid) {
  if (lockid != NULL) {
    set_has_lockid();
  } else {
    clear_has_lockid();
  }
  lockid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lockid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.PreSubmitOrderResponse.LockId)
}

// optional int32 RetCode = 5;
inline bool PreSubmitOrderResponse::has_retcode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PreSubmitOrderResponse::set_has_retcode() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PreSubmitOrderResponse::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PreSubmitOrderResponse::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 PreSubmitOrderResponse::retcode() const {
  // @@protoc_insertion_point(field_get:micromsg.PreSubmitOrderResponse.RetCode)
  return retcode_;
}
inline void PreSubmitOrderResponse::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.PreSubmitOrderResponse.RetCode)
}

// optional string RetMsg = 6;
inline bool PreSubmitOrderResponse::has_retmsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PreSubmitOrderResponse::set_has_retmsg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PreSubmitOrderResponse::clear_has_retmsg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PreSubmitOrderResponse::clear_retmsg() {
  retmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_retmsg();
}
inline const ::std::string& PreSubmitOrderResponse::retmsg() const {
  // @@protoc_insertion_point(field_get:micromsg.PreSubmitOrderResponse.RetMsg)
  return retmsg_.GetNoArena();
}
inline void PreSubmitOrderResponse::set_retmsg(const ::std::string& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.PreSubmitOrderResponse.RetMsg)
}
#if LANG_CXX11
inline void PreSubmitOrderResponse::set_retmsg(::std::string&& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.PreSubmitOrderResponse.RetMsg)
}
#endif
inline void PreSubmitOrderResponse::set_retmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.PreSubmitOrderResponse.RetMsg)
}
inline void PreSubmitOrderResponse::set_retmsg(const char* value, size_t size) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.PreSubmitOrderResponse.RetMsg)
}
inline ::std::string* PreSubmitOrderResponse::mutable_retmsg() {
  set_has_retmsg();
  // @@protoc_insertion_point(field_mutable:micromsg.PreSubmitOrderResponse.RetMsg)
  return retmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PreSubmitOrderResponse::release_retmsg() {
  // @@protoc_insertion_point(field_release:micromsg.PreSubmitOrderResponse.RetMsg)
  clear_has_retmsg();
  return retmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PreSubmitOrderResponse::set_allocated_retmsg(::std::string* retmsg) {
  if (retmsg != NULL) {
    set_has_retmsg();
  } else {
    clear_has_retmsg();
  }
  retmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retmsg);
  // @@protoc_insertion_point(field_set_allocated:micromsg.PreSubmitOrderResponse.RetMsg)
}

// repeated .micromsg.ActionAttr ActionAttrs = 7;
inline int PreSubmitOrderResponse::actionattrs_size() const {
  return actionattrs_.size();
}
inline void PreSubmitOrderResponse::clear_actionattrs() {
  actionattrs_.Clear();
}
inline const ::micromsg::ActionAttr& PreSubmitOrderResponse::actionattrs(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.PreSubmitOrderResponse.ActionAttrs)
  return actionattrs_.Get(index);
}
inline ::micromsg::ActionAttr* PreSubmitOrderResponse::mutable_actionattrs(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.PreSubmitOrderResponse.ActionAttrs)
  return actionattrs_.Mutable(index);
}
inline ::micromsg::ActionAttr* PreSubmitOrderResponse::add_actionattrs() {
  // @@protoc_insertion_point(field_add:micromsg.PreSubmitOrderResponse.ActionAttrs)
  return actionattrs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::ActionAttr >*
PreSubmitOrderResponse::mutable_actionattrs() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.PreSubmitOrderResponse.ActionAttrs)
  return &actionattrs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::ActionAttr >&
PreSubmitOrderResponse::actionattrs() const {
  // @@protoc_insertion_point(field_list:micromsg.PreSubmitOrderResponse.ActionAttrs)
  return actionattrs_;
}

// optional uint32 ActionAttrCount = 8;
inline bool PreSubmitOrderResponse::has_actionattrcount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PreSubmitOrderResponse::set_has_actionattrcount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PreSubmitOrderResponse::clear_has_actionattrcount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PreSubmitOrderResponse::clear_actionattrcount() {
  actionattrcount_ = 0u;
  clear_has_actionattrcount();
}
inline ::google::protobuf::uint32 PreSubmitOrderResponse::actionattrcount() const {
  // @@protoc_insertion_point(field_get:micromsg.PreSubmitOrderResponse.ActionAttrCount)
  return actionattrcount_;
}
inline void PreSubmitOrderResponse::set_actionattrcount(::google::protobuf::uint32 value) {
  set_has_actionattrcount();
  actionattrcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.PreSubmitOrderResponse.ActionAttrCount)
}

// -------------------------------------------------------------------

// CancelPreOrderRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool CancelPreOrderRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CancelPreOrderRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CancelPreOrderRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CancelPreOrderRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& CancelPreOrderRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.CancelPreOrderRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* CancelPreOrderRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.CancelPreOrderRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* CancelPreOrderRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.CancelPreOrderRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void CancelPreOrderRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.CancelPreOrderRequest.BaseRequest)
}

// required uint32 ProductCount = 2;
inline bool CancelPreOrderRequest::has_productcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CancelPreOrderRequest::set_has_productcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CancelPreOrderRequest::clear_has_productcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CancelPreOrderRequest::clear_productcount() {
  productcount_ = 0u;
  clear_has_productcount();
}
inline ::google::protobuf::uint32 CancelPreOrderRequest::productcount() const {
  // @@protoc_insertion_point(field_get:micromsg.CancelPreOrderRequest.ProductCount)
  return productcount_;
}
inline void CancelPreOrderRequest::set_productcount(::google::protobuf::uint32 value) {
  set_has_productcount();
  productcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.CancelPreOrderRequest.ProductCount)
}

// repeated .micromsg.SampleProduct Product = 3;
inline int CancelPreOrderRequest::product_size() const {
  return product_.size();
}
inline void CancelPreOrderRequest::clear_product() {
  product_.Clear();
}
inline const ::micromsg::SampleProduct& CancelPreOrderRequest::product(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.CancelPreOrderRequest.Product)
  return product_.Get(index);
}
inline ::micromsg::SampleProduct* CancelPreOrderRequest::mutable_product(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.CancelPreOrderRequest.Product)
  return product_.Mutable(index);
}
inline ::micromsg::SampleProduct* CancelPreOrderRequest::add_product() {
  // @@protoc_insertion_point(field_add:micromsg.CancelPreOrderRequest.Product)
  return product_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::SampleProduct >*
CancelPreOrderRequest::mutable_product() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.CancelPreOrderRequest.Product)
  return &product_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::SampleProduct >&
CancelPreOrderRequest::product() const {
  // @@protoc_insertion_point(field_list:micromsg.CancelPreOrderRequest.Product)
  return product_;
}

// optional string LockId = 4;
inline bool CancelPreOrderRequest::has_lockid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CancelPreOrderRequest::set_has_lockid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CancelPreOrderRequest::clear_has_lockid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CancelPreOrderRequest::clear_lockid() {
  lockid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lockid();
}
inline const ::std::string& CancelPreOrderRequest::lockid() const {
  // @@protoc_insertion_point(field_get:micromsg.CancelPreOrderRequest.LockId)
  return lockid_.GetNoArena();
}
inline void CancelPreOrderRequest::set_lockid(const ::std::string& value) {
  set_has_lockid();
  lockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CancelPreOrderRequest.LockId)
}
#if LANG_CXX11
inline void CancelPreOrderRequest::set_lockid(::std::string&& value) {
  set_has_lockid();
  lockid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CancelPreOrderRequest.LockId)
}
#endif
inline void CancelPreOrderRequest::set_lockid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_lockid();
  lockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CancelPreOrderRequest.LockId)
}
inline void CancelPreOrderRequest::set_lockid(const char* value, size_t size) {
  set_has_lockid();
  lockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CancelPreOrderRequest.LockId)
}
inline ::std::string* CancelPreOrderRequest::mutable_lockid() {
  set_has_lockid();
  // @@protoc_insertion_point(field_mutable:micromsg.CancelPreOrderRequest.LockId)
  return lockid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CancelPreOrderRequest::release_lockid() {
  // @@protoc_insertion_point(field_release:micromsg.CancelPreOrderRequest.LockId)
  clear_has_lockid();
  return lockid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CancelPreOrderRequest::set_allocated_lockid(::std::string* lockid) {
  if (lockid != NULL) {
    set_has_lockid();
  } else {
    clear_has_lockid();
  }
  lockid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lockid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CancelPreOrderRequest.LockId)
}

// -------------------------------------------------------------------

// CancelPreOrderResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool CancelPreOrderResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CancelPreOrderResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CancelPreOrderResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CancelPreOrderResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& CancelPreOrderResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.CancelPreOrderResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* CancelPreOrderResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.CancelPreOrderResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* CancelPreOrderResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.CancelPreOrderResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void CancelPreOrderResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.CancelPreOrderResponse.BaseResponse)
}

// optional int32 RetCode = 2;
inline bool CancelPreOrderResponse::has_retcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CancelPreOrderResponse::set_has_retcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CancelPreOrderResponse::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CancelPreOrderResponse::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 CancelPreOrderResponse::retcode() const {
  // @@protoc_insertion_point(field_get:micromsg.CancelPreOrderResponse.RetCode)
  return retcode_;
}
inline void CancelPreOrderResponse::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.CancelPreOrderResponse.RetCode)
}

// optional string RetMsg = 3;
inline bool CancelPreOrderResponse::has_retmsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CancelPreOrderResponse::set_has_retmsg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CancelPreOrderResponse::clear_has_retmsg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CancelPreOrderResponse::clear_retmsg() {
  retmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_retmsg();
}
inline const ::std::string& CancelPreOrderResponse::retmsg() const {
  // @@protoc_insertion_point(field_get:micromsg.CancelPreOrderResponse.RetMsg)
  return retmsg_.GetNoArena();
}
inline void CancelPreOrderResponse::set_retmsg(const ::std::string& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.CancelPreOrderResponse.RetMsg)
}
#if LANG_CXX11
inline void CancelPreOrderResponse::set_retmsg(::std::string&& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.CancelPreOrderResponse.RetMsg)
}
#endif
inline void CancelPreOrderResponse::set_retmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.CancelPreOrderResponse.RetMsg)
}
inline void CancelPreOrderResponse::set_retmsg(const char* value, size_t size) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.CancelPreOrderResponse.RetMsg)
}
inline ::std::string* CancelPreOrderResponse::mutable_retmsg() {
  set_has_retmsg();
  // @@protoc_insertion_point(field_mutable:micromsg.CancelPreOrderResponse.RetMsg)
  return retmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CancelPreOrderResponse::release_retmsg() {
  // @@protoc_insertion_point(field_release:micromsg.CancelPreOrderResponse.RetMsg)
  clear_has_retmsg();
  return retmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CancelPreOrderResponse::set_allocated_retmsg(::std::string* retmsg) {
  if (retmsg != NULL) {
    set_has_retmsg();
  } else {
    clear_has_retmsg();
  }
  retmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retmsg);
  // @@protoc_insertion_point(field_set_allocated:micromsg.CancelPreOrderResponse.RetMsg)
}

// -------------------------------------------------------------------

// OrderDetailControlRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool OrderDetailControlRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OrderDetailControlRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OrderDetailControlRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OrderDetailControlRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& OrderDetailControlRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.OrderDetailControlRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* OrderDetailControlRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.OrderDetailControlRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* OrderDetailControlRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.OrderDetailControlRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void OrderDetailControlRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.OrderDetailControlRequest.BaseRequest)
}

// required uint32 ActionCode = 2;
inline bool OrderDetailControlRequest::has_actioncode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OrderDetailControlRequest::set_has_actioncode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OrderDetailControlRequest::clear_has_actioncode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OrderDetailControlRequest::clear_actioncode() {
  actioncode_ = 0u;
  clear_has_actioncode();
}
inline ::google::protobuf::uint32 OrderDetailControlRequest::actioncode() const {
  // @@protoc_insertion_point(field_get:micromsg.OrderDetailControlRequest.ActionCode)
  return actioncode_;
}
inline void OrderDetailControlRequest::set_actioncode(::google::protobuf::uint32 value) {
  set_has_actioncode();
  actioncode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.OrderDetailControlRequest.ActionCode)
}

// optional string TransID = 3;
inline bool OrderDetailControlRequest::has_transid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrderDetailControlRequest::set_has_transid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrderDetailControlRequest::clear_has_transid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OrderDetailControlRequest::clear_transid() {
  transid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_transid();
}
inline const ::std::string& OrderDetailControlRequest::transid() const {
  // @@protoc_insertion_point(field_get:micromsg.OrderDetailControlRequest.TransID)
  return transid_.GetNoArena();
}
inline void OrderDetailControlRequest::set_transid(const ::std::string& value) {
  set_has_transid();
  transid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.OrderDetailControlRequest.TransID)
}
#if LANG_CXX11
inline void OrderDetailControlRequest::set_transid(::std::string&& value) {
  set_has_transid();
  transid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.OrderDetailControlRequest.TransID)
}
#endif
inline void OrderDetailControlRequest::set_transid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_transid();
  transid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.OrderDetailControlRequest.TransID)
}
inline void OrderDetailControlRequest::set_transid(const char* value, size_t size) {
  set_has_transid();
  transid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.OrderDetailControlRequest.TransID)
}
inline ::std::string* OrderDetailControlRequest::mutable_transid() {
  set_has_transid();
  // @@protoc_insertion_point(field_mutable:micromsg.OrderDetailControlRequest.TransID)
  return transid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderDetailControlRequest::release_transid() {
  // @@protoc_insertion_point(field_release:micromsg.OrderDetailControlRequest.TransID)
  clear_has_transid();
  return transid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderDetailControlRequest::set_allocated_transid(::std::string* transid) {
  if (transid != NULL) {
    set_has_transid();
  } else {
    clear_has_transid();
  }
  transid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), transid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.OrderDetailControlRequest.TransID)
}

// -------------------------------------------------------------------

// OrderDetailControlResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool OrderDetailControlResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OrderDetailControlResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OrderDetailControlResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OrderDetailControlResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& OrderDetailControlResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.OrderDetailControlResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* OrderDetailControlResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.OrderDetailControlResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* OrderDetailControlResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.OrderDetailControlResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void OrderDetailControlResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.OrderDetailControlResponse.BaseResponse)
}

// optional int32 RetCode = 2;
inline bool OrderDetailControlResponse::has_retcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OrderDetailControlResponse::set_has_retcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OrderDetailControlResponse::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OrderDetailControlResponse::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 OrderDetailControlResponse::retcode() const {
  // @@protoc_insertion_point(field_get:micromsg.OrderDetailControlResponse.RetCode)
  return retcode_;
}
inline void OrderDetailControlResponse::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.OrderDetailControlResponse.RetCode)
}

// optional string RetMsg = 3;
inline bool OrderDetailControlResponse::has_retmsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrderDetailControlResponse::set_has_retmsg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrderDetailControlResponse::clear_has_retmsg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OrderDetailControlResponse::clear_retmsg() {
  retmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_retmsg();
}
inline const ::std::string& OrderDetailControlResponse::retmsg() const {
  // @@protoc_insertion_point(field_get:micromsg.OrderDetailControlResponse.RetMsg)
  return retmsg_.GetNoArena();
}
inline void OrderDetailControlResponse::set_retmsg(const ::std::string& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.OrderDetailControlResponse.RetMsg)
}
#if LANG_CXX11
inline void OrderDetailControlResponse::set_retmsg(::std::string&& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.OrderDetailControlResponse.RetMsg)
}
#endif
inline void OrderDetailControlResponse::set_retmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.OrderDetailControlResponse.RetMsg)
}
inline void OrderDetailControlResponse::set_retmsg(const char* value, size_t size) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.OrderDetailControlResponse.RetMsg)
}
inline ::std::string* OrderDetailControlResponse::mutable_retmsg() {
  set_has_retmsg();
  // @@protoc_insertion_point(field_mutable:micromsg.OrderDetailControlResponse.RetMsg)
  return retmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OrderDetailControlResponse::release_retmsg() {
  // @@protoc_insertion_point(field_release:micromsg.OrderDetailControlResponse.RetMsg)
  clear_has_retmsg();
  return retmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OrderDetailControlResponse::set_allocated_retmsg(::std::string* retmsg) {
  if (retmsg != NULL) {
    set_has_retmsg();
  } else {
    clear_has_retmsg();
  }
  retmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retmsg);
  // @@protoc_insertion_point(field_set_allocated:micromsg.OrderDetailControlResponse.RetMsg)
}

// -------------------------------------------------------------------

// GetProductDiscountRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetProductDiscountRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetProductDiscountRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetProductDiscountRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetProductDiscountRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetProductDiscountRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductDiscountRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetProductDiscountRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetProductDiscountRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetProductDiscountRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetProductDiscountRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetProductDiscountRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetProductDiscountRequest.BaseRequest)
}

// optional string LockId = 2;
inline bool GetProductDiscountRequest::has_lockid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetProductDiscountRequest::set_has_lockid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetProductDiscountRequest::clear_has_lockid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetProductDiscountRequest::clear_lockid() {
  lockid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lockid();
}
inline const ::std::string& GetProductDiscountRequest::lockid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductDiscountRequest.LockId)
  return lockid_.GetNoArena();
}
inline void GetProductDiscountRequest::set_lockid(const ::std::string& value) {
  set_has_lockid();
  lockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetProductDiscountRequest.LockId)
}
#if LANG_CXX11
inline void GetProductDiscountRequest::set_lockid(::std::string&& value) {
  set_has_lockid();
  lockid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetProductDiscountRequest.LockId)
}
#endif
inline void GetProductDiscountRequest::set_lockid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_lockid();
  lockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetProductDiscountRequest.LockId)
}
inline void GetProductDiscountRequest::set_lockid(const char* value, size_t size) {
  set_has_lockid();
  lockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetProductDiscountRequest.LockId)
}
inline ::std::string* GetProductDiscountRequest::mutable_lockid() {
  set_has_lockid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetProductDiscountRequest.LockId)
  return lockid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetProductDiscountRequest::release_lockid() {
  // @@protoc_insertion_point(field_release:micromsg.GetProductDiscountRequest.LockId)
  clear_has_lockid();
  return lockid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetProductDiscountRequest::set_allocated_lockid(::std::string* lockid) {
  if (lockid != NULL) {
    set_has_lockid();
  } else {
    clear_has_lockid();
  }
  lockid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lockid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetProductDiscountRequest.LockId)
}

// optional string Url = 3;
inline bool GetProductDiscountRequest::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetProductDiscountRequest::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetProductDiscountRequest::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetProductDiscountRequest::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& GetProductDiscountRequest::url() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductDiscountRequest.Url)
  return url_.GetNoArena();
}
inline void GetProductDiscountRequest::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetProductDiscountRequest.Url)
}
#if LANG_CXX11
inline void GetProductDiscountRequest::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetProductDiscountRequest.Url)
}
#endif
inline void GetProductDiscountRequest::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetProductDiscountRequest.Url)
}
inline void GetProductDiscountRequest::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetProductDiscountRequest.Url)
}
inline ::std::string* GetProductDiscountRequest::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:micromsg.GetProductDiscountRequest.Url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetProductDiscountRequest::release_url() {
  // @@protoc_insertion_point(field_release:micromsg.GetProductDiscountRequest.Url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetProductDiscountRequest::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetProductDiscountRequest.Url)
}

// -------------------------------------------------------------------

// GetProductDiscountResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetProductDiscountResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetProductDiscountResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetProductDiscountResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetProductDiscountResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetProductDiscountResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductDiscountResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetProductDiscountResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetProductDiscountResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetProductDiscountResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetProductDiscountResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetProductDiscountResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetProductDiscountResponse.BaseResponse)
}

// optional string DiscountDetail = 2;
inline bool GetProductDiscountResponse::has_discountdetail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetProductDiscountResponse::set_has_discountdetail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetProductDiscountResponse::clear_has_discountdetail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetProductDiscountResponse::clear_discountdetail() {
  discountdetail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_discountdetail();
}
inline const ::std::string& GetProductDiscountResponse::discountdetail() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductDiscountResponse.DiscountDetail)
  return discountdetail_.GetNoArena();
}
inline void GetProductDiscountResponse::set_discountdetail(const ::std::string& value) {
  set_has_discountdetail();
  discountdetail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetProductDiscountResponse.DiscountDetail)
}
#if LANG_CXX11
inline void GetProductDiscountResponse::set_discountdetail(::std::string&& value) {
  set_has_discountdetail();
  discountdetail_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetProductDiscountResponse.DiscountDetail)
}
#endif
inline void GetProductDiscountResponse::set_discountdetail(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_discountdetail();
  discountdetail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetProductDiscountResponse.DiscountDetail)
}
inline void GetProductDiscountResponse::set_discountdetail(const char* value, size_t size) {
  set_has_discountdetail();
  discountdetail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetProductDiscountResponse.DiscountDetail)
}
inline ::std::string* GetProductDiscountResponse::mutable_discountdetail() {
  set_has_discountdetail();
  // @@protoc_insertion_point(field_mutable:micromsg.GetProductDiscountResponse.DiscountDetail)
  return discountdetail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetProductDiscountResponse::release_discountdetail() {
  // @@protoc_insertion_point(field_release:micromsg.GetProductDiscountResponse.DiscountDetail)
  clear_has_discountdetail();
  return discountdetail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetProductDiscountResponse::set_allocated_discountdetail(::std::string* discountdetail) {
  if (discountdetail != NULL) {
    set_has_discountdetail();
  } else {
    clear_has_discountdetail();
  }
  discountdetail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), discountdetail);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetProductDiscountResponse.DiscountDetail)
}

// optional int32 RetCode = 3;
inline bool GetProductDiscountResponse::has_retcode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetProductDiscountResponse::set_has_retcode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetProductDiscountResponse::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetProductDiscountResponse::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 GetProductDiscountResponse::retcode() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductDiscountResponse.RetCode)
  return retcode_;
}
inline void GetProductDiscountResponse::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetProductDiscountResponse.RetCode)
}

// optional string RetMsg = 4;
inline bool GetProductDiscountResponse::has_retmsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetProductDiscountResponse::set_has_retmsg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetProductDiscountResponse::clear_has_retmsg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetProductDiscountResponse::clear_retmsg() {
  retmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_retmsg();
}
inline const ::std::string& GetProductDiscountResponse::retmsg() const {
  // @@protoc_insertion_point(field_get:micromsg.GetProductDiscountResponse.RetMsg)
  return retmsg_.GetNoArena();
}
inline void GetProductDiscountResponse::set_retmsg(const ::std::string& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetProductDiscountResponse.RetMsg)
}
#if LANG_CXX11
inline void GetProductDiscountResponse::set_retmsg(::std::string&& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetProductDiscountResponse.RetMsg)
}
#endif
inline void GetProductDiscountResponse::set_retmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetProductDiscountResponse.RetMsg)
}
inline void GetProductDiscountResponse::set_retmsg(const char* value, size_t size) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetProductDiscountResponse.RetMsg)
}
inline ::std::string* GetProductDiscountResponse::mutable_retmsg() {
  set_has_retmsg();
  // @@protoc_insertion_point(field_mutable:micromsg.GetProductDiscountResponse.RetMsg)
  return retmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetProductDiscountResponse::release_retmsg() {
  // @@protoc_insertion_point(field_release:micromsg.GetProductDiscountResponse.RetMsg)
  clear_has_retmsg();
  return retmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetProductDiscountResponse::set_allocated_retmsg(::std::string* retmsg) {
  if (retmsg != NULL) {
    set_has_retmsg();
  } else {
    clear_has_retmsg();
  }
  retmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retmsg);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetProductDiscountResponse.RetMsg)
}

// -------------------------------------------------------------------

// GetLastestExpressInfoRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool GetLastestExpressInfoRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetLastestExpressInfoRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetLastestExpressInfoRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetLastestExpressInfoRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& GetLastestExpressInfoRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLastestExpressInfoRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* GetLastestExpressInfoRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetLastestExpressInfoRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* GetLastestExpressInfoRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.GetLastestExpressInfoRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void GetLastestExpressInfoRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLastestExpressInfoRequest.BaseRequest)
}

// optional string ProductId = 2;
inline bool GetLastestExpressInfoRequest::has_productid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetLastestExpressInfoRequest::set_has_productid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetLastestExpressInfoRequest::clear_has_productid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetLastestExpressInfoRequest::clear_productid() {
  productid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_productid();
}
inline const ::std::string& GetLastestExpressInfoRequest::productid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLastestExpressInfoRequest.ProductId)
  return productid_.GetNoArena();
}
inline void GetLastestExpressInfoRequest::set_productid(const ::std::string& value) {
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetLastestExpressInfoRequest.ProductId)
}
#if LANG_CXX11
inline void GetLastestExpressInfoRequest::set_productid(::std::string&& value) {
  set_has_productid();
  productid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetLastestExpressInfoRequest.ProductId)
}
#endif
inline void GetLastestExpressInfoRequest::set_productid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetLastestExpressInfoRequest.ProductId)
}
inline void GetLastestExpressInfoRequest::set_productid(const char* value, size_t size) {
  set_has_productid();
  productid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetLastestExpressInfoRequest.ProductId)
}
inline ::std::string* GetLastestExpressInfoRequest::mutable_productid() {
  set_has_productid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetLastestExpressInfoRequest.ProductId)
  return productid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetLastestExpressInfoRequest::release_productid() {
  // @@protoc_insertion_point(field_release:micromsg.GetLastestExpressInfoRequest.ProductId)
  clear_has_productid();
  return productid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetLastestExpressInfoRequest::set_allocated_productid(::std::string* productid) {
  if (productid != NULL) {
    set_has_productid();
  } else {
    clear_has_productid();
  }
  productid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), productid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLastestExpressInfoRequest.ProductId)
}

// optional string LockId = 3;
inline bool GetLastestExpressInfoRequest::has_lockid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetLastestExpressInfoRequest::set_has_lockid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetLastestExpressInfoRequest::clear_has_lockid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetLastestExpressInfoRequest::clear_lockid() {
  lockid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lockid();
}
inline const ::std::string& GetLastestExpressInfoRequest::lockid() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLastestExpressInfoRequest.LockId)
  return lockid_.GetNoArena();
}
inline void GetLastestExpressInfoRequest::set_lockid(const ::std::string& value) {
  set_has_lockid();
  lockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetLastestExpressInfoRequest.LockId)
}
#if LANG_CXX11
inline void GetLastestExpressInfoRequest::set_lockid(::std::string&& value) {
  set_has_lockid();
  lockid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetLastestExpressInfoRequest.LockId)
}
#endif
inline void GetLastestExpressInfoRequest::set_lockid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_lockid();
  lockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetLastestExpressInfoRequest.LockId)
}
inline void GetLastestExpressInfoRequest::set_lockid(const char* value, size_t size) {
  set_has_lockid();
  lockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetLastestExpressInfoRequest.LockId)
}
inline ::std::string* GetLastestExpressInfoRequest::mutable_lockid() {
  set_has_lockid();
  // @@protoc_insertion_point(field_mutable:micromsg.GetLastestExpressInfoRequest.LockId)
  return lockid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetLastestExpressInfoRequest::release_lockid() {
  // @@protoc_insertion_point(field_release:micromsg.GetLastestExpressInfoRequest.LockId)
  clear_has_lockid();
  return lockid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetLastestExpressInfoRequest::set_allocated_lockid(::std::string* lockid) {
  if (lockid != NULL) {
    set_has_lockid();
  } else {
    clear_has_lockid();
  }
  lockid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lockid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLastestExpressInfoRequest.LockId)
}

// required .micromsg.Address Address = 4;
inline bool GetLastestExpressInfoRequest::has_address() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetLastestExpressInfoRequest::set_has_address() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetLastestExpressInfoRequest::clear_has_address() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetLastestExpressInfoRequest::clear_address() {
  if (address_ != NULL) address_->::micromsg::Address::Clear();
  clear_has_address();
}
inline const ::micromsg::Address& GetLastestExpressInfoRequest::address() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLastestExpressInfoRequest.Address)
  return address_ != NULL ? *address_
                         : *::micromsg::Address::internal_default_instance();
}
inline ::micromsg::Address* GetLastestExpressInfoRequest::mutable_address() {
  set_has_address();
  if (address_ == NULL) {
    address_ = new ::micromsg::Address;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetLastestExpressInfoRequest.Address)
  return address_;
}
inline ::micromsg::Address* GetLastestExpressInfoRequest::release_address() {
  // @@protoc_insertion_point(field_release:micromsg.GetLastestExpressInfoRequest.Address)
  clear_has_address();
  ::micromsg::Address* temp = address_;
  address_ = NULL;
  return temp;
}
inline void GetLastestExpressInfoRequest::set_allocated_address(::micromsg::Address* address) {
  delete address_;
  address_ = address;
  if (address) {
    set_has_address();
  } else {
    clear_has_address();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLastestExpressInfoRequest.Address)
}

// -------------------------------------------------------------------

// GetLastestExpressInfoResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool GetLastestExpressInfoResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetLastestExpressInfoResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetLastestExpressInfoResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetLastestExpressInfoResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& GetLastestExpressInfoResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLastestExpressInfoResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* GetLastestExpressInfoResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.GetLastestExpressInfoResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* GetLastestExpressInfoResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.GetLastestExpressInfoResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void GetLastestExpressInfoResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLastestExpressInfoResponse.BaseResponse)
}

// repeated .micromsg.Express ExpressList = 2;
inline int GetLastestExpressInfoResponse::expresslist_size() const {
  return expresslist_.size();
}
inline void GetLastestExpressInfoResponse::clear_expresslist() {
  expresslist_.Clear();
}
inline const ::micromsg::Express& GetLastestExpressInfoResponse::expresslist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.GetLastestExpressInfoResponse.ExpressList)
  return expresslist_.Get(index);
}
inline ::micromsg::Express* GetLastestExpressInfoResponse::mutable_expresslist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.GetLastestExpressInfoResponse.ExpressList)
  return expresslist_.Mutable(index);
}
inline ::micromsg::Express* GetLastestExpressInfoResponse::add_expresslist() {
  // @@protoc_insertion_point(field_add:micromsg.GetLastestExpressInfoResponse.ExpressList)
  return expresslist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::Express >*
GetLastestExpressInfoResponse::mutable_expresslist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.GetLastestExpressInfoResponse.ExpressList)
  return &expresslist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::Express >&
GetLastestExpressInfoResponse::expresslist() const {
  // @@protoc_insertion_point(field_list:micromsg.GetLastestExpressInfoResponse.ExpressList)
  return expresslist_;
}

// optional uint32 ExpressCount = 3;
inline bool GetLastestExpressInfoResponse::has_expresscount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetLastestExpressInfoResponse::set_has_expresscount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetLastestExpressInfoResponse::clear_has_expresscount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetLastestExpressInfoResponse::clear_expresscount() {
  expresscount_ = 0u;
  clear_has_expresscount();
}
inline ::google::protobuf::uint32 GetLastestExpressInfoResponse::expresscount() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLastestExpressInfoResponse.ExpressCount)
  return expresscount_;
}
inline void GetLastestExpressInfoResponse::set_expresscount(::google::protobuf::uint32 value) {
  set_has_expresscount();
  expresscount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetLastestExpressInfoResponse.ExpressCount)
}

// optional int32 RetCode = 4;
inline bool GetLastestExpressInfoResponse::has_retcode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetLastestExpressInfoResponse::set_has_retcode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetLastestExpressInfoResponse::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetLastestExpressInfoResponse::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::google::protobuf::int32 GetLastestExpressInfoResponse::retcode() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLastestExpressInfoResponse.RetCode)
  return retcode_;
}
inline void GetLastestExpressInfoResponse::set_retcode(::google::protobuf::int32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.GetLastestExpressInfoResponse.RetCode)
}

// optional string RetMsg = 5;
inline bool GetLastestExpressInfoResponse::has_retmsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetLastestExpressInfoResponse::set_has_retmsg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetLastestExpressInfoResponse::clear_has_retmsg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetLastestExpressInfoResponse::clear_retmsg() {
  retmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_retmsg();
}
inline const ::std::string& GetLastestExpressInfoResponse::retmsg() const {
  // @@protoc_insertion_point(field_get:micromsg.GetLastestExpressInfoResponse.RetMsg)
  return retmsg_.GetNoArena();
}
inline void GetLastestExpressInfoResponse::set_retmsg(const ::std::string& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.GetLastestExpressInfoResponse.RetMsg)
}
#if LANG_CXX11
inline void GetLastestExpressInfoResponse::set_retmsg(::std::string&& value) {
  set_has_retmsg();
  retmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.GetLastestExpressInfoResponse.RetMsg)
}
#endif
inline void GetLastestExpressInfoResponse::set_retmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.GetLastestExpressInfoResponse.RetMsg)
}
inline void GetLastestExpressInfoResponse::set_retmsg(const char* value, size_t size) {
  set_has_retmsg();
  retmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.GetLastestExpressInfoResponse.RetMsg)
}
inline ::std::string* GetLastestExpressInfoResponse::mutable_retmsg() {
  set_has_retmsg();
  // @@protoc_insertion_point(field_mutable:micromsg.GetLastestExpressInfoResponse.RetMsg)
  return retmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetLastestExpressInfoResponse::release_retmsg() {
  // @@protoc_insertion_point(field_release:micromsg.GetLastestExpressInfoResponse.RetMsg)
  clear_has_retmsg();
  return retmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetLastestExpressInfoResponse::set_allocated_retmsg(::std::string* retmsg) {
  if (retmsg != NULL) {
    set_has_retmsg();
  } else {
    clear_has_retmsg();
  }
  retmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), retmsg);
  // @@protoc_insertion_point(field_set_allocated:micromsg.GetLastestExpressInfoResponse.RetMsg)
}

// -------------------------------------------------------------------

// SendC2CSecMsgRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool SendC2CSecMsgRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SendC2CSecMsgRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SendC2CSecMsgRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SendC2CSecMsgRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& SendC2CSecMsgRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.SendC2CSecMsgRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* SendC2CSecMsgRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SendC2CSecMsgRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* SendC2CSecMsgRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.SendC2CSecMsgRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void SendC2CSecMsgRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendC2CSecMsgRequest.BaseRequest)
}

// optional string ToUser = 2;
inline bool SendC2CSecMsgRequest::has_touser() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendC2CSecMsgRequest::set_has_touser() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendC2CSecMsgRequest::clear_has_touser() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendC2CSecMsgRequest::clear_touser() {
  touser_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_touser();
}
inline const ::std::string& SendC2CSecMsgRequest::touser() const {
  // @@protoc_insertion_point(field_get:micromsg.SendC2CSecMsgRequest.ToUser)
  return touser_.GetNoArena();
}
inline void SendC2CSecMsgRequest::set_touser(const ::std::string& value) {
  set_has_touser();
  touser_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendC2CSecMsgRequest.ToUser)
}
#if LANG_CXX11
inline void SendC2CSecMsgRequest::set_touser(::std::string&& value) {
  set_has_touser();
  touser_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendC2CSecMsgRequest.ToUser)
}
#endif
inline void SendC2CSecMsgRequest::set_touser(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_touser();
  touser_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendC2CSecMsgRequest.ToUser)
}
inline void SendC2CSecMsgRequest::set_touser(const char* value, size_t size) {
  set_has_touser();
  touser_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendC2CSecMsgRequest.ToUser)
}
inline ::std::string* SendC2CSecMsgRequest::mutable_touser() {
  set_has_touser();
  // @@protoc_insertion_point(field_mutable:micromsg.SendC2CSecMsgRequest.ToUser)
  return touser_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendC2CSecMsgRequest::release_touser() {
  // @@protoc_insertion_point(field_release:micromsg.SendC2CSecMsgRequest.ToUser)
  clear_has_touser();
  return touser_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendC2CSecMsgRequest::set_allocated_touser(::std::string* touser) {
  if (touser != NULL) {
    set_has_touser();
  } else {
    clear_has_touser();
  }
  touser_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), touser);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendC2CSecMsgRequest.ToUser)
}

// optional int32 MsgType = 3;
inline bool SendC2CSecMsgRequest::has_msgtype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SendC2CSecMsgRequest::set_has_msgtype() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SendC2CSecMsgRequest::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SendC2CSecMsgRequest::clear_msgtype() {
  msgtype_ = 0;
  clear_has_msgtype();
}
inline ::google::protobuf::int32 SendC2CSecMsgRequest::msgtype() const {
  // @@protoc_insertion_point(field_get:micromsg.SendC2CSecMsgRequest.MsgType)
  return msgtype_;
}
inline void SendC2CSecMsgRequest::set_msgtype(::google::protobuf::int32 value) {
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SendC2CSecMsgRequest.MsgType)
}

// optional string TempId = 4;
inline bool SendC2CSecMsgRequest::has_tempid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendC2CSecMsgRequest::set_has_tempid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendC2CSecMsgRequest::clear_has_tempid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendC2CSecMsgRequest::clear_tempid() {
  tempid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tempid();
}
inline const ::std::string& SendC2CSecMsgRequest::tempid() const {
  // @@protoc_insertion_point(field_get:micromsg.SendC2CSecMsgRequest.TempId)
  return tempid_.GetNoArena();
}
inline void SendC2CSecMsgRequest::set_tempid(const ::std::string& value) {
  set_has_tempid();
  tempid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendC2CSecMsgRequest.TempId)
}
#if LANG_CXX11
inline void SendC2CSecMsgRequest::set_tempid(::std::string&& value) {
  set_has_tempid();
  tempid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendC2CSecMsgRequest.TempId)
}
#endif
inline void SendC2CSecMsgRequest::set_tempid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tempid();
  tempid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendC2CSecMsgRequest.TempId)
}
inline void SendC2CSecMsgRequest::set_tempid(const char* value, size_t size) {
  set_has_tempid();
  tempid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendC2CSecMsgRequest.TempId)
}
inline ::std::string* SendC2CSecMsgRequest::mutable_tempid() {
  set_has_tempid();
  // @@protoc_insertion_point(field_mutable:micromsg.SendC2CSecMsgRequest.TempId)
  return tempid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendC2CSecMsgRequest::release_tempid() {
  // @@protoc_insertion_point(field_release:micromsg.SendC2CSecMsgRequest.TempId)
  clear_has_tempid();
  return tempid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendC2CSecMsgRequest::set_allocated_tempid(::std::string* tempid) {
  if (tempid != NULL) {
    set_has_tempid();
  } else {
    clear_has_tempid();
  }
  tempid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tempid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendC2CSecMsgRequest.TempId)
}

// optional string Title = 5;
inline bool SendC2CSecMsgRequest::has_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendC2CSecMsgRequest::set_has_title() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendC2CSecMsgRequest::clear_has_title() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendC2CSecMsgRequest::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& SendC2CSecMsgRequest::title() const {
  // @@protoc_insertion_point(field_get:micromsg.SendC2CSecMsgRequest.Title)
  return title_.GetNoArena();
}
inline void SendC2CSecMsgRequest::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendC2CSecMsgRequest.Title)
}
#if LANG_CXX11
inline void SendC2CSecMsgRequest::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendC2CSecMsgRequest.Title)
}
#endif
inline void SendC2CSecMsgRequest::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendC2CSecMsgRequest.Title)
}
inline void SendC2CSecMsgRequest::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendC2CSecMsgRequest.Title)
}
inline ::std::string* SendC2CSecMsgRequest::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:micromsg.SendC2CSecMsgRequest.Title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendC2CSecMsgRequest::release_title() {
  // @@protoc_insertion_point(field_release:micromsg.SendC2CSecMsgRequest.Title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendC2CSecMsgRequest::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendC2CSecMsgRequest.Title)
}

// optional string Des = 6;
inline bool SendC2CSecMsgRequest::has_des() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SendC2CSecMsgRequest::set_has_des() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SendC2CSecMsgRequest::clear_has_des() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SendC2CSecMsgRequest::clear_des() {
  des_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_des();
}
inline const ::std::string& SendC2CSecMsgRequest::des() const {
  // @@protoc_insertion_point(field_get:micromsg.SendC2CSecMsgRequest.Des)
  return des_.GetNoArena();
}
inline void SendC2CSecMsgRequest::set_des(const ::std::string& value) {
  set_has_des();
  des_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendC2CSecMsgRequest.Des)
}
#if LANG_CXX11
inline void SendC2CSecMsgRequest::set_des(::std::string&& value) {
  set_has_des();
  des_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendC2CSecMsgRequest.Des)
}
#endif
inline void SendC2CSecMsgRequest::set_des(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_des();
  des_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendC2CSecMsgRequest.Des)
}
inline void SendC2CSecMsgRequest::set_des(const char* value, size_t size) {
  set_has_des();
  des_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendC2CSecMsgRequest.Des)
}
inline ::std::string* SendC2CSecMsgRequest::mutable_des() {
  set_has_des();
  // @@protoc_insertion_point(field_mutable:micromsg.SendC2CSecMsgRequest.Des)
  return des_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendC2CSecMsgRequest::release_des() {
  // @@protoc_insertion_point(field_release:micromsg.SendC2CSecMsgRequest.Des)
  clear_has_des();
  return des_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendC2CSecMsgRequest::set_allocated_des(::std::string* des) {
  if (des != NULL) {
    set_has_des();
  } else {
    clear_has_des();
  }
  des_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), des);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendC2CSecMsgRequest.Des)
}

// optional string Url = 7;
inline bool SendC2CSecMsgRequest::has_url() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SendC2CSecMsgRequest::set_has_url() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SendC2CSecMsgRequest::clear_has_url() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SendC2CSecMsgRequest::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& SendC2CSecMsgRequest::url() const {
  // @@protoc_insertion_point(field_get:micromsg.SendC2CSecMsgRequest.Url)
  return url_.GetNoArena();
}
inline void SendC2CSecMsgRequest::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendC2CSecMsgRequest.Url)
}
#if LANG_CXX11
inline void SendC2CSecMsgRequest::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendC2CSecMsgRequest.Url)
}
#endif
inline void SendC2CSecMsgRequest::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendC2CSecMsgRequest.Url)
}
inline void SendC2CSecMsgRequest::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendC2CSecMsgRequest.Url)
}
inline ::std::string* SendC2CSecMsgRequest::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:micromsg.SendC2CSecMsgRequest.Url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendC2CSecMsgRequest::release_url() {
  // @@protoc_insertion_point(field_release:micromsg.SendC2CSecMsgRequest.Url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendC2CSecMsgRequest::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendC2CSecMsgRequest.Url)
}

// optional int32 Scene = 8;
inline bool SendC2CSecMsgRequest::has_scene() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SendC2CSecMsgRequest::set_has_scene() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SendC2CSecMsgRequest::clear_has_scene() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SendC2CSecMsgRequest::clear_scene() {
  scene_ = 0;
  clear_has_scene();
}
inline ::google::protobuf::int32 SendC2CSecMsgRequest::scene() const {
  // @@protoc_insertion_point(field_get:micromsg.SendC2CSecMsgRequest.Scene)
  return scene_;
}
inline void SendC2CSecMsgRequest::set_scene(::google::protobuf::int32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SendC2CSecMsgRequest.Scene)
}

// -------------------------------------------------------------------

// SendC2cSecMsgResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool SendC2cSecMsgResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendC2cSecMsgResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendC2cSecMsgResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendC2cSecMsgResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& SendC2cSecMsgResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.SendC2cSecMsgResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* SendC2cSecMsgResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.SendC2cSecMsgResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* SendC2cSecMsgResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.SendC2cSecMsgResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void SendC2cSecMsgResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendC2cSecMsgResponse.BaseResponse)
}

// optional int32 ErrCode = 2;
inline bool SendC2cSecMsgResponse::has_errcode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SendC2cSecMsgResponse::set_has_errcode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SendC2cSecMsgResponse::clear_has_errcode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SendC2cSecMsgResponse::clear_errcode() {
  errcode_ = 0;
  clear_has_errcode();
}
inline ::google::protobuf::int32 SendC2cSecMsgResponse::errcode() const {
  // @@protoc_insertion_point(field_get:micromsg.SendC2cSecMsgResponse.ErrCode)
  return errcode_;
}
inline void SendC2cSecMsgResponse::set_errcode(::google::protobuf::int32 value) {
  set_has_errcode();
  errcode_ = value;
  // @@protoc_insertion_point(field_set:micromsg.SendC2cSecMsgResponse.ErrCode)
}

// optional string ErrMsg = 3;
inline bool SendC2cSecMsgResponse::has_errmsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendC2cSecMsgResponse::set_has_errmsg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendC2cSecMsgResponse::clear_has_errmsg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendC2cSecMsgResponse::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_errmsg();
}
inline const ::std::string& SendC2cSecMsgResponse::errmsg() const {
  // @@protoc_insertion_point(field_get:micromsg.SendC2cSecMsgResponse.ErrMsg)
  return errmsg_.GetNoArena();
}
inline void SendC2cSecMsgResponse::set_errmsg(const ::std::string& value) {
  set_has_errmsg();
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendC2cSecMsgResponse.ErrMsg)
}
#if LANG_CXX11
inline void SendC2cSecMsgResponse::set_errmsg(::std::string&& value) {
  set_has_errmsg();
  errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendC2cSecMsgResponse.ErrMsg)
}
#endif
inline void SendC2cSecMsgResponse::set_errmsg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_errmsg();
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendC2cSecMsgResponse.ErrMsg)
}
inline void SendC2cSecMsgResponse::set_errmsg(const char* value, size_t size) {
  set_has_errmsg();
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendC2cSecMsgResponse.ErrMsg)
}
inline ::std::string* SendC2cSecMsgResponse::mutable_errmsg() {
  set_has_errmsg();
  // @@protoc_insertion_point(field_mutable:micromsg.SendC2cSecMsgResponse.ErrMsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendC2cSecMsgResponse::release_errmsg() {
  // @@protoc_insertion_point(field_release:micromsg.SendC2cSecMsgResponse.ErrMsg)
  clear_has_errmsg();
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendC2cSecMsgResponse::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != NULL) {
    set_has_errmsg();
  } else {
    clear_has_errmsg();
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendC2cSecMsgResponse.ErrMsg)
}

// optional string MsgId = 4;
inline bool SendC2cSecMsgResponse::has_msgid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendC2cSecMsgResponse::set_has_msgid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendC2cSecMsgResponse::clear_has_msgid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendC2cSecMsgResponse::clear_msgid() {
  msgid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msgid();
}
inline const ::std::string& SendC2cSecMsgResponse::msgid() const {
  // @@protoc_insertion_point(field_get:micromsg.SendC2cSecMsgResponse.MsgId)
  return msgid_.GetNoArena();
}
inline void SendC2cSecMsgResponse::set_msgid(const ::std::string& value) {
  set_has_msgid();
  msgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.SendC2cSecMsgResponse.MsgId)
}
#if LANG_CXX11
inline void SendC2cSecMsgResponse::set_msgid(::std::string&& value) {
  set_has_msgid();
  msgid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.SendC2cSecMsgResponse.MsgId)
}
#endif
inline void SendC2cSecMsgResponse::set_msgid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msgid();
  msgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.SendC2cSecMsgResponse.MsgId)
}
inline void SendC2cSecMsgResponse::set_msgid(const char* value, size_t size) {
  set_has_msgid();
  msgid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.SendC2cSecMsgResponse.MsgId)
}
inline ::std::string* SendC2cSecMsgResponse::mutable_msgid() {
  set_has_msgid();
  // @@protoc_insertion_point(field_mutable:micromsg.SendC2cSecMsgResponse.MsgId)
  return msgid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendC2cSecMsgResponse::release_msgid() {
  // @@protoc_insertion_point(field_release:micromsg.SendC2cSecMsgResponse.MsgId)
  clear_has_msgid();
  return msgid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendC2cSecMsgResponse::set_allocated_msgid(::std::string* msgid) {
  if (msgid != NULL) {
    set_has_msgid();
  } else {
    clear_has_msgid();
  }
  msgid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.SendC2cSecMsgResponse.MsgId)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace micromsg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mmpay_2eproto__INCLUDED
