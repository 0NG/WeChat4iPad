// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mmremind.proto

#ifndef PROTOBUF_mmremind_2eproto__INCLUDED
#define PROTOBUF_mmremind_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "mmbuiltintype.pb.h"
#include "mmbase.pb.h"
// @@protoc_insertion_point(includes)
namespace micromsg {
class AddRemindRequest;
class AddRemindRequestDefaultTypeInternal;
extern AddRemindRequestDefaultTypeInternal _AddRemindRequest_default_instance_;
class AddRemindResponse;
class AddRemindResponseDefaultTypeInternal;
extern AddRemindResponseDefaultTypeInternal _AddRemindResponse_default_instance_;
class AdditionalContactList;
class AdditionalContactListDefaultTypeInternal;
extern AdditionalContactListDefaultTypeInternal _AdditionalContactList_default_instance_;
class BaseRequest;
class BaseRequestDefaultTypeInternal;
extern BaseRequestDefaultTypeInternal _BaseRequest_default_instance_;
class BaseResponse;
class BaseResponseDefaultTypeInternal;
extern BaseResponseDefaultTypeInternal _BaseResponse_default_instance_;
class BatchGetRemindInfoRequest;
class BatchGetRemindInfoRequestDefaultTypeInternal;
extern BatchGetRemindInfoRequestDefaultTypeInternal _BatchGetRemindInfoRequest_default_instance_;
class BatchGetRemindInfoResponse;
class BatchGetRemindInfoResponseDefaultTypeInternal;
extern BatchGetRemindInfoResponseDefaultTypeInternal _BatchGetRemindInfoResponse_default_instance_;
class BindEmailRequest;
class BindEmailRequestDefaultTypeInternal;
extern BindEmailRequestDefaultTypeInternal _BindEmailRequest_default_instance_;
class BindEmailResponse;
class BindEmailResponseDefaultTypeInternal;
extern BindEmailResponseDefaultTypeInternal _BindEmailResponse_default_instance_;
class BuiltinIP;
class BuiltinIPDefaultTypeInternal;
extern BuiltinIPDefaultTypeInternal _BuiltinIP_default_instance_;
class BuiltinIPList;
class BuiltinIPListDefaultTypeInternal;
extern BuiltinIPListDefaultTypeInternal _BuiltinIPList_default_instance_;
class CDNDnsInfo;
class CDNDnsInfoDefaultTypeInternal;
extern CDNDnsInfoDefaultTypeInternal _CDNDnsInfo_default_instance_;
class ChatRoomMemberData;
class ChatRoomMemberDataDefaultTypeInternal;
extern ChatRoomMemberDataDefaultTypeInternal _ChatRoomMemberData_default_instance_;
class ChatRoomMemberInfo;
class ChatRoomMemberInfoDefaultTypeInternal;
extern ChatRoomMemberInfoDefaultTypeInternal _ChatRoomMemberInfo_default_instance_;
class CmdItem;
class CmdItemDefaultTypeInternal;
extern CmdItemDefaultTypeInternal _CmdItem_default_instance_;
class CmdList;
class CmdListDefaultTypeInternal;
extern CmdListDefaultTypeInternal _CmdList_default_instance_;
class CustomizedInfo;
class CustomizedInfoDefaultTypeInternal;
extern CustomizedInfoDefaultTypeInternal _CustomizedInfo_default_instance_;
class DelMemberReq;
class DelMemberReqDefaultTypeInternal;
extern DelMemberReqDefaultTypeInternal _DelMemberReq_default_instance_;
class DelMemberResp;
class DelMemberRespDefaultTypeInternal;
extern DelMemberRespDefaultTypeInternal _DelMemberResp_default_instance_;
class DelRemindRequest;
class DelRemindRequestDefaultTypeInternal;
extern DelRemindRequestDefaultTypeInternal _DelRemindRequest_default_instance_;
class DelRemindResponse;
class DelRemindResponseDefaultTypeInternal;
extern DelRemindResponseDefaultTypeInternal _DelRemindResponse_default_instance_;
class DisturbSetting;
class DisturbSettingDefaultTypeInternal;
extern DisturbSettingDefaultTypeInternal _DisturbSetting_default_instance_;
class DisturbTimeSpan;
class DisturbTimeSpanDefaultTypeInternal;
extern DisturbTimeSpanDefaultTypeInternal _DisturbTimeSpan_default_instance_;
class GetLocationRequest;
class GetLocationRequestDefaultTypeInternal;
extern GetLocationRequestDefaultTypeInternal _GetLocationRequest_default_instance_;
class GetLocationResponse;
class GetLocationResponseDefaultTypeInternal;
extern GetLocationResponseDefaultTypeInternal _GetLocationResponse_default_instance_;
class GmailInfo;
class GmailInfoDefaultTypeInternal;
extern GmailInfoDefaultTypeInternal _GmailInfo_default_instance_;
class GmailList;
class GmailListDefaultTypeInternal;
extern GmailListDefaultTypeInternal _GmailList_default_instance_;
class HardDevice;
class HardDeviceDefaultTypeInternal;
extern HardDeviceDefaultTypeInternal _HardDevice_default_instance_;
class Host;
class HostDefaultTypeInternal;
extern HostDefaultTypeInternal _Host_default_instance_;
class HostList;
class HostListDefaultTypeInternal;
extern HostListDefaultTypeInternal _HostList_default_instance_;
class LinkedinContactItem;
class LinkedinContactItemDefaultTypeInternal;
extern LinkedinContactItemDefaultTypeInternal _LinkedinContactItem_default_instance_;
class MemberReq;
class MemberReqDefaultTypeInternal;
extern MemberReqDefaultTypeInternal _MemberReq_default_instance_;
class MemberResp;
class MemberRespDefaultTypeInternal;
extern MemberRespDefaultTypeInternal _MemberResp_default_instance_;
class ModContact;
class ModContactDefaultTypeInternal;
extern ModContactDefaultTypeInternal _ModContact_default_instance_;
class ModRemindCmd;
class ModRemindCmdDefaultTypeInternal;
extern ModRemindCmdDefaultTypeInternal _ModRemindCmd_default_instance_;
class ModUserInfo;
class ModUserInfoDefaultTypeInternal;
extern ModUserInfoDefaultTypeInternal _ModUserInfo_default_instance_;
class NetworkControl;
class NetworkControlDefaultTypeInternal;
extern NetworkControlDefaultTypeInternal _NetworkControl_default_instance_;
class PatternLockInfo;
class PatternLockInfoDefaultTypeInternal;
extern PatternLockInfoDefaultTypeInternal _PatternLockInfo_default_instance_;
class PluginKey;
class PluginKeyDefaultTypeInternal;
extern PluginKeyDefaultTypeInternal _PluginKey_default_instance_;
class PluginKeyList;
class PluginKeyListDefaultTypeInternal;
extern PluginKeyListDefaultTypeInternal _PluginKeyList_default_instance_;
class PositionInfo;
class PositionInfoDefaultTypeInternal;
extern PositionInfoDefaultTypeInternal _PositionInfo_default_instance_;
class RemindItem;
class RemindItemDefaultTypeInternal;
extern RemindItemDefaultTypeInternal _RemindItem_default_instance_;
class RemindMember;
class RemindMemberDefaultTypeInternal;
extern RemindMemberDefaultTypeInternal _RemindMember_default_instance_;
class RemindSyncRequest;
class RemindSyncRequestDefaultTypeInternal;
extern RemindSyncRequestDefaultTypeInternal _RemindSyncRequest_default_instance_;
class RemindSyncResponse;
class RemindSyncResponseDefaultTypeInternal;
extern RemindSyncResponseDefaultTypeInternal _RemindSyncResponse_default_instance_;
class RoomInfo;
class RoomInfoDefaultTypeInternal;
extern RoomInfoDefaultTypeInternal _RoomInfo_default_instance_;
class SKBuiltinBuffer_t;
class SKBuiltinBuffer_tDefaultTypeInternal;
extern SKBuiltinBuffer_tDefaultTypeInternal _SKBuiltinBuffer_t_default_instance_;
class SKBuiltinChar_t;
class SKBuiltinChar_tDefaultTypeInternal;
extern SKBuiltinChar_tDefaultTypeInternal _SKBuiltinChar_t_default_instance_;
class SKBuiltinDouble64_t;
class SKBuiltinDouble64_tDefaultTypeInternal;
extern SKBuiltinDouble64_tDefaultTypeInternal _SKBuiltinDouble64_t_default_instance_;
class SKBuiltinFloat32_t;
class SKBuiltinFloat32_tDefaultTypeInternal;
extern SKBuiltinFloat32_tDefaultTypeInternal _SKBuiltinFloat32_t_default_instance_;
class SKBuiltinInt16_t;
class SKBuiltinInt16_tDefaultTypeInternal;
extern SKBuiltinInt16_tDefaultTypeInternal _SKBuiltinInt16_t_default_instance_;
class SKBuiltinInt32_t;
class SKBuiltinInt32_tDefaultTypeInternal;
extern SKBuiltinInt32_tDefaultTypeInternal _SKBuiltinInt32_t_default_instance_;
class SKBuiltinInt64_t;
class SKBuiltinInt64_tDefaultTypeInternal;
extern SKBuiltinInt64_tDefaultTypeInternal _SKBuiltinInt64_t_default_instance_;
class SKBuiltinInt8_t;
class SKBuiltinInt8_tDefaultTypeInternal;
extern SKBuiltinInt8_tDefaultTypeInternal _SKBuiltinInt8_t_default_instance_;
class SKBuiltinString_t;
class SKBuiltinString_tDefaultTypeInternal;
extern SKBuiltinString_tDefaultTypeInternal _SKBuiltinString_t_default_instance_;
class SKBuiltinUchar_t;
class SKBuiltinUchar_tDefaultTypeInternal;
extern SKBuiltinUchar_tDefaultTypeInternal _SKBuiltinUchar_t_default_instance_;
class SKBuiltinUint16_t;
class SKBuiltinUint16_tDefaultTypeInternal;
extern SKBuiltinUint16_tDefaultTypeInternal _SKBuiltinUint16_t_default_instance_;
class SKBuiltinUint32_t;
class SKBuiltinUint32_tDefaultTypeInternal;
extern SKBuiltinUint32_tDefaultTypeInternal _SKBuiltinUint32_t_default_instance_;
class SKBuiltinUint64_t;
class SKBuiltinUint64_tDefaultTypeInternal;
extern SKBuiltinUint64_tDefaultTypeInternal _SKBuiltinUint64_t_default_instance_;
class SKBuiltinUint8_t;
class SKBuiltinUint8_tDefaultTypeInternal;
extern SKBuiltinUint8_tDefaultTypeInternal _SKBuiltinUint8_t_default_instance_;
class SafeDevice;
class SafeDeviceDefaultTypeInternal;
extern SafeDeviceDefaultTypeInternal _SafeDevice_default_instance_;
class SafeDeviceList;
class SafeDeviceListDefaultTypeInternal;
extern SafeDeviceListDefaultTypeInternal _SafeDeviceList_default_instance_;
class ShakeSyncRequest;
class ShakeSyncRequestDefaultTypeInternal;
extern ShakeSyncRequestDefaultTypeInternal _ShakeSyncRequest_default_instance_;
class ShakeSyncResponse;
class ShakeSyncResponseDefaultTypeInternal;
extern ShakeSyncResponseDefaultTypeInternal _ShakeSyncResponse_default_instance_;
class ShowStyleKey;
class ShowStyleKeyDefaultTypeInternal;
extern ShowStyleKeyDefaultTypeInternal _ShowStyleKey_default_instance_;
class SnsUserInfo;
class SnsUserInfoDefaultTypeInternal;
extern SnsUserInfoDefaultTypeInternal _SnsUserInfo_default_instance_;
class StyleKeyVal;
class StyleKeyValDefaultTypeInternal;
extern StyleKeyValDefaultTypeInternal _StyleKeyVal_default_instance_;
class UserInfoExt;
class UserInfoExtDefaultTypeInternal;
extern UserInfoExtDefaultTypeInternal _UserInfoExt_default_instance_;
}  // namespace micromsg

namespace micromsg {

namespace protobuf_mmremind_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_mmremind_2eproto

// ===================================================================

class RemindSyncRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.RemindSyncRequest) */ {
 public:
  RemindSyncRequest();
  virtual ~RemindSyncRequest();

  RemindSyncRequest(const RemindSyncRequest& from);

  inline RemindSyncRequest& operator=(const RemindSyncRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemindSyncRequest& default_instance();

  static inline const RemindSyncRequest* internal_default_instance() {
    return reinterpret_cast<const RemindSyncRequest*>(
               &_RemindSyncRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RemindSyncRequest* other);

  // implements Message ----------------------------------------------

  inline RemindSyncRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  RemindSyncRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RemindSyncRequest& from);
  void MergeFrom(const RemindSyncRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RemindSyncRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required .micromsg.SKBuiltinBuffer_t KeyBuff = 3;
  bool has_keybuff() const;
  void clear_keybuff();
  static const int kKeyBuffFieldNumber = 3;
  const ::micromsg::SKBuiltinBuffer_t& keybuff() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_keybuff();
  ::micromsg::SKBuiltinBuffer_t* release_keybuff();
  void set_allocated_keybuff(::micromsg::SKBuiltinBuffer_t* keybuff);

  // required uint32 Selector = 2;
  bool has_selector() const;
  void clear_selector();
  static const int kSelectorFieldNumber = 2;
  ::google::protobuf::uint32 selector() const;
  void set_selector(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.RemindSyncRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_selector();
  void clear_has_selector();
  void set_has_keybuff();
  void clear_has_keybuff();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  ::micromsg::SKBuiltinBuffer_t* keybuff_;
  ::google::protobuf::uint32 selector_;
  friend struct protobuf_mmremind_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemindSyncResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.RemindSyncResponse) */ {
 public:
  RemindSyncResponse();
  virtual ~RemindSyncResponse();

  RemindSyncResponse(const RemindSyncResponse& from);

  inline RemindSyncResponse& operator=(const RemindSyncResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemindSyncResponse& default_instance();

  static inline const RemindSyncResponse* internal_default_instance() {
    return reinterpret_cast<const RemindSyncResponse*>(
               &_RemindSyncResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(RemindSyncResponse* other);

  // implements Message ----------------------------------------------

  inline RemindSyncResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  RemindSyncResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RemindSyncResponse& from);
  void MergeFrom(const RemindSyncResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RemindSyncResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required .micromsg.CmdList CmdList = 2;
  bool has_cmdlist() const;
  void clear_cmdlist();
  static const int kCmdListFieldNumber = 2;
  const ::micromsg::CmdList& cmdlist() const;
  ::micromsg::CmdList* mutable_cmdlist();
  ::micromsg::CmdList* release_cmdlist();
  void set_allocated_cmdlist(::micromsg::CmdList* cmdlist);

  // required .micromsg.SKBuiltinBuffer_t KeyBuff = 3;
  bool has_keybuff() const;
  void clear_keybuff();
  static const int kKeyBuffFieldNumber = 3;
  const ::micromsg::SKBuiltinBuffer_t& keybuff() const;
  ::micromsg::SKBuiltinBuffer_t* mutable_keybuff();
  ::micromsg::SKBuiltinBuffer_t* release_keybuff();
  void set_allocated_keybuff(::micromsg::SKBuiltinBuffer_t* keybuff);

  // required uint32 ContinueFlag = 4;
  bool has_continueflag() const;
  void clear_continueflag();
  static const int kContinueFlagFieldNumber = 4;
  ::google::protobuf::uint32 continueflag() const;
  void set_continueflag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.RemindSyncResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_cmdlist();
  void clear_has_cmdlist();
  void set_has_keybuff();
  void clear_has_keybuff();
  void set_has_continueflag();
  void clear_has_continueflag();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  ::micromsg::CmdList* cmdlist_;
  ::micromsg::SKBuiltinBuffer_t* keybuff_;
  ::google::protobuf::uint32 continueflag_;
  friend struct protobuf_mmremind_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModRemindCmd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.ModRemindCmd) */ {
 public:
  ModRemindCmd();
  virtual ~ModRemindCmd();

  ModRemindCmd(const ModRemindCmd& from);

  inline ModRemindCmd& operator=(const ModRemindCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModRemindCmd& default_instance();

  static inline const ModRemindCmd* internal_default_instance() {
    return reinterpret_cast<const ModRemindCmd*>(
               &_ModRemindCmd_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ModRemindCmd* other);

  // implements Message ----------------------------------------------

  inline ModRemindCmd* New() const PROTOBUF_FINAL { return New(NULL); }

  ModRemindCmd* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModRemindCmd& from);
  void MergeFrom(const ModRemindCmd& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModRemindCmd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 RemindTime = 2;
  bool has_remindtime() const;
  void clear_remindtime();
  static const int kRemindTimeFieldNumber = 2;
  ::google::protobuf::uint64 remindtime() const;
  void set_remindtime(::google::protobuf::uint64 value);

  // required uint32 RemindID = 1;
  bool has_remindid() const;
  void clear_remindid();
  static const int kRemindIDFieldNumber = 1;
  ::google::protobuf::uint32 remindid() const;
  void set_remindid(::google::protobuf::uint32 value);

  // required uint32 Flag = 3;
  bool has_flag() const;
  void clear_flag();
  static const int kFlagFieldNumber = 3;
  ::google::protobuf::uint32 flag() const;
  void set_flag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.ModRemindCmd)
 private:
  void set_has_remindid();
  void clear_has_remindid();
  void set_has_remindtime();
  void clear_has_remindtime();
  void set_has_flag();
  void clear_has_flag();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 remindtime_;
  ::google::protobuf::uint32 remindid_;
  ::google::protobuf::uint32 flag_;
  friend struct protobuf_mmremind_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemindMember : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.RemindMember) */ {
 public:
  RemindMember();
  virtual ~RemindMember();

  RemindMember(const RemindMember& from);

  inline RemindMember& operator=(const RemindMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemindMember& default_instance();

  static inline const RemindMember* internal_default_instance() {
    return reinterpret_cast<const RemindMember*>(
               &_RemindMember_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(RemindMember* other);

  // implements Message ----------------------------------------------

  inline RemindMember* New() const PROTOBUF_FINAL { return New(NULL); }

  RemindMember* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RemindMember& from);
  void MergeFrom(const RemindMember& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RemindMember* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string UserName = 1;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // @@protoc_insertion_point(class_scope:micromsg.RemindMember)
 private:
  void set_has_username();
  void clear_has_username();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  friend struct protobuf_mmremind_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemindItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.RemindItem) */ {
 public:
  RemindItem();
  virtual ~RemindItem();

  RemindItem(const RemindItem& from);

  inline RemindItem& operator=(const RemindItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemindItem& default_instance();

  static inline const RemindItem* internal_default_instance() {
    return reinterpret_cast<const RemindItem*>(
               &_RemindItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(RemindItem* other);

  // implements Message ----------------------------------------------

  inline RemindItem* New() const PROTOBUF_FINAL { return New(NULL); }

  RemindItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RemindItem& from);
  void MergeFrom(const RemindItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RemindItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.RemindMember ToUserList = 6;
  int touserlist_size() const;
  void clear_touserlist();
  static const int kToUserListFieldNumber = 6;
  const ::micromsg::RemindMember& touserlist(int index) const;
  ::micromsg::RemindMember* mutable_touserlist(int index);
  ::micromsg::RemindMember* add_touserlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::RemindMember >*
      mutable_touserlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::RemindMember >&
      touserlist() const;

  // optional string FromUser = 4;
  bool has_fromuser() const;
  void clear_fromuser();
  static const int kFromUserFieldNumber = 4;
  const ::std::string& fromuser() const;
  void set_fromuser(const ::std::string& value);
  #if LANG_CXX11
  void set_fromuser(::std::string&& value);
  #endif
  void set_fromuser(const char* value);
  void set_fromuser(const char* value, size_t size);
  ::std::string* mutable_fromuser();
  ::std::string* release_fromuser();
  void set_allocated_fromuser(::std::string* fromuser);

  // optional string Content = 8;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 8;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // required uint32 RemindID = 1;
  bool has_remindid() const;
  void clear_remindid();
  static const int kRemindIDFieldNumber = 1;
  ::google::protobuf::uint32 remindid() const;
  void set_remindid(::google::protobuf::uint32 value);

  // required uint32 CreateTime = 2;
  bool has_createtime() const;
  void clear_createtime();
  static const int kCreateTimeFieldNumber = 2;
  ::google::protobuf::uint32 createtime() const;
  void set_createtime(::google::protobuf::uint32 value);

  // required uint64 RemindTime = 3;
  bool has_remindtime() const;
  void clear_remindtime();
  static const int kRemindTimeFieldNumber = 3;
  ::google::protobuf::uint64 remindtime() const;
  void set_remindtime(::google::protobuf::uint64 value);

  // required uint32 ToUserCount = 5;
  bool has_tousercount() const;
  void clear_tousercount();
  static const int kToUserCountFieldNumber = 5;
  ::google::protobuf::uint32 tousercount() const;
  void set_tousercount(::google::protobuf::uint32 value);

  // required uint32 Flag = 7;
  bool has_flag() const;
  void clear_flag();
  static const int kFlagFieldNumber = 7;
  ::google::protobuf::uint32 flag() const;
  void set_flag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.RemindItem)
 private:
  void set_has_remindid();
  void clear_has_remindid();
  void set_has_createtime();
  void clear_has_createtime();
  void set_has_remindtime();
  void clear_has_remindtime();
  void set_has_fromuser();
  void clear_has_fromuser();
  void set_has_tousercount();
  void clear_has_tousercount();
  void set_has_flag();
  void clear_has_flag();
  void set_has_content();
  void clear_has_content();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::RemindMember > touserlist_;
  ::google::protobuf::internal::ArenaStringPtr fromuser_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::uint32 remindid_;
  ::google::protobuf::uint32 createtime_;
  ::google::protobuf::uint64 remindtime_;
  ::google::protobuf::uint32 tousercount_;
  ::google::protobuf::uint32 flag_;
  friend struct protobuf_mmremind_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BatchGetRemindInfoRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.BatchGetRemindInfoRequest) */ {
 public:
  BatchGetRemindInfoRequest();
  virtual ~BatchGetRemindInfoRequest();

  BatchGetRemindInfoRequest(const BatchGetRemindInfoRequest& from);

  inline BatchGetRemindInfoRequest& operator=(const BatchGetRemindInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchGetRemindInfoRequest& default_instance();

  static inline const BatchGetRemindInfoRequest* internal_default_instance() {
    return reinterpret_cast<const BatchGetRemindInfoRequest*>(
               &_BatchGetRemindInfoRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(BatchGetRemindInfoRequest* other);

  // implements Message ----------------------------------------------

  inline BatchGetRemindInfoRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  BatchGetRemindInfoRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BatchGetRemindInfoRequest& from);
  void MergeFrom(const BatchGetRemindInfoRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BatchGetRemindInfoRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 RemindIDList = 3 [packed = true];
  int remindidlist_size() const;
  void clear_remindidlist();
  static const int kRemindIDListFieldNumber = 3;
  ::google::protobuf::uint32 remindidlist(int index) const;
  void set_remindidlist(int index, ::google::protobuf::uint32 value);
  void add_remindidlist(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      remindidlist() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_remindidlist();

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 RemindIDCount = 2;
  bool has_remindidcount() const;
  void clear_remindidcount();
  static const int kRemindIDCountFieldNumber = 2;
  ::google::protobuf::uint32 remindidcount() const;
  void set_remindidcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.BatchGetRemindInfoRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_remindidcount();
  void clear_has_remindidcount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > remindidlist_;
  mutable int _remindidlist_cached_byte_size_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 remindidcount_;
  friend struct protobuf_mmremind_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BatchGetRemindInfoResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.BatchGetRemindInfoResponse) */ {
 public:
  BatchGetRemindInfoResponse();
  virtual ~BatchGetRemindInfoResponse();

  BatchGetRemindInfoResponse(const BatchGetRemindInfoResponse& from);

  inline BatchGetRemindInfoResponse& operator=(const BatchGetRemindInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchGetRemindInfoResponse& default_instance();

  static inline const BatchGetRemindInfoResponse* internal_default_instance() {
    return reinterpret_cast<const BatchGetRemindInfoResponse*>(
               &_BatchGetRemindInfoResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(BatchGetRemindInfoResponse* other);

  // implements Message ----------------------------------------------

  inline BatchGetRemindInfoResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  BatchGetRemindInfoResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BatchGetRemindInfoResponse& from);
  void MergeFrom(const BatchGetRemindInfoResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BatchGetRemindInfoResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.RemindItem RemindInfoList = 3;
  int remindinfolist_size() const;
  void clear_remindinfolist();
  static const int kRemindInfoListFieldNumber = 3;
  const ::micromsg::RemindItem& remindinfolist(int index) const;
  ::micromsg::RemindItem* mutable_remindinfolist(int index);
  ::micromsg::RemindItem* add_remindinfolist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::RemindItem >*
      mutable_remindinfolist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::RemindItem >&
      remindinfolist() const;

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // required uint32 RemindInfoCount = 2;
  bool has_remindinfocount() const;
  void clear_remindinfocount();
  static const int kRemindInfoCountFieldNumber = 2;
  ::google::protobuf::uint32 remindinfocount() const;
  void set_remindinfocount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.BatchGetRemindInfoResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();
  void set_has_remindinfocount();
  void clear_has_remindinfocount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::RemindItem > remindinfolist_;
  ::micromsg::BaseResponse* baseresponse_;
  ::google::protobuf::uint32 remindinfocount_;
  friend struct protobuf_mmremind_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddRemindRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.AddRemindRequest) */ {
 public:
  AddRemindRequest();
  virtual ~AddRemindRequest();

  AddRemindRequest(const AddRemindRequest& from);

  inline AddRemindRequest& operator=(const AddRemindRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddRemindRequest& default_instance();

  static inline const AddRemindRequest* internal_default_instance() {
    return reinterpret_cast<const AddRemindRequest*>(
               &_AddRemindRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(AddRemindRequest* other);

  // implements Message ----------------------------------------------

  inline AddRemindRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  AddRemindRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddRemindRequest& from);
  void MergeFrom(const AddRemindRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddRemindRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .micromsg.RemindMember ToUserList = 5;
  int touserlist_size() const;
  void clear_touserlist();
  static const int kToUserListFieldNumber = 5;
  const ::micromsg::RemindMember& touserlist(int index) const;
  ::micromsg::RemindMember* mutable_touserlist(int index);
  ::micromsg::RemindMember* add_touserlist();
  ::google::protobuf::RepeatedPtrField< ::micromsg::RemindMember >*
      mutable_touserlist();
  const ::google::protobuf::RepeatedPtrField< ::micromsg::RemindMember >&
      touserlist() const;

  // optional string ClientID = 2;
  bool has_clientid() const;
  void clear_clientid();
  static const int kClientIDFieldNumber = 2;
  const ::std::string& clientid() const;
  void set_clientid(const ::std::string& value);
  #if LANG_CXX11
  void set_clientid(::std::string&& value);
  #endif
  void set_clientid(const char* value);
  void set_clientid(const char* value, size_t size);
  ::std::string* mutable_clientid();
  ::std::string* release_clientid();
  void set_allocated_clientid(::std::string* clientid);

  // optional string Content = 6;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 6;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint64 RemindTime = 3;
  bool has_remindtime() const;
  void clear_remindtime();
  static const int kRemindTimeFieldNumber = 3;
  ::google::protobuf::uint64 remindtime() const;
  void set_remindtime(::google::protobuf::uint64 value);

  // required uint32 ToUserCount = 4;
  bool has_tousercount() const;
  void clear_tousercount();
  static const int kToUserCountFieldNumber = 4;
  ::google::protobuf::uint32 tousercount() const;
  void set_tousercount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.AddRemindRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_clientid();
  void clear_has_clientid();
  void set_has_remindtime();
  void clear_has_remindtime();
  void set_has_tousercount();
  void clear_has_tousercount();
  void set_has_content();
  void clear_has_content();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::micromsg::RemindMember > touserlist_;
  ::google::protobuf::internal::ArenaStringPtr clientid_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint64 remindtime_;
  ::google::protobuf::uint32 tousercount_;
  friend struct protobuf_mmremind_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddRemindResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.AddRemindResponse) */ {
 public:
  AddRemindResponse();
  virtual ~AddRemindResponse();

  AddRemindResponse(const AddRemindResponse& from);

  inline AddRemindResponse& operator=(const AddRemindResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddRemindResponse& default_instance();

  static inline const AddRemindResponse* internal_default_instance() {
    return reinterpret_cast<const AddRemindResponse*>(
               &_AddRemindResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(AddRemindResponse* other);

  // implements Message ----------------------------------------------

  inline AddRemindResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  AddRemindResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddRemindResponse& from);
  void MergeFrom(const AddRemindResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddRemindResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // @@protoc_insertion_point(class_scope:micromsg.AddRemindResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  friend struct protobuf_mmremind_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelRemindRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.DelRemindRequest) */ {
 public:
  DelRemindRequest();
  virtual ~DelRemindRequest();

  DelRemindRequest(const DelRemindRequest& from);

  inline DelRemindRequest& operator=(const DelRemindRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelRemindRequest& default_instance();

  static inline const DelRemindRequest* internal_default_instance() {
    return reinterpret_cast<const DelRemindRequest*>(
               &_DelRemindRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(DelRemindRequest* other);

  // implements Message ----------------------------------------------

  inline DelRemindRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  DelRemindRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelRemindRequest& from);
  void MergeFrom(const DelRemindRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelRemindRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseRequest BaseRequest = 1;
  bool has_baserequest() const;
  void clear_baserequest();
  static const int kBaseRequestFieldNumber = 1;
  const ::micromsg::BaseRequest& baserequest() const;
  ::micromsg::BaseRequest* mutable_baserequest();
  ::micromsg::BaseRequest* release_baserequest();
  void set_allocated_baserequest(::micromsg::BaseRequest* baserequest);

  // required uint32 RemindID = 2;
  bool has_remindid() const;
  void clear_remindid();
  static const int kRemindIDFieldNumber = 2;
  ::google::protobuf::uint32 remindid() const;
  void set_remindid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:micromsg.DelRemindRequest)
 private:
  void set_has_baserequest();
  void clear_has_baserequest();
  void set_has_remindid();
  void clear_has_remindid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseRequest* baserequest_;
  ::google::protobuf::uint32 remindid_;
  friend struct protobuf_mmremind_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelRemindResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:micromsg.DelRemindResponse) */ {
 public:
  DelRemindResponse();
  virtual ~DelRemindResponse();

  DelRemindResponse(const DelRemindResponse& from);

  inline DelRemindResponse& operator=(const DelRemindResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelRemindResponse& default_instance();

  static inline const DelRemindResponse* internal_default_instance() {
    return reinterpret_cast<const DelRemindResponse*>(
               &_DelRemindResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(DelRemindResponse* other);

  // implements Message ----------------------------------------------

  inline DelRemindResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  DelRemindResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelRemindResponse& from);
  void MergeFrom(const DelRemindResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelRemindResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .micromsg.BaseResponse BaseResponse = 1;
  bool has_baseresponse() const;
  void clear_baseresponse();
  static const int kBaseResponseFieldNumber = 1;
  const ::micromsg::BaseResponse& baseresponse() const;
  ::micromsg::BaseResponse* mutable_baseresponse();
  ::micromsg::BaseResponse* release_baseresponse();
  void set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse);

  // @@protoc_insertion_point(class_scope:micromsg.DelRemindResponse)
 private:
  void set_has_baseresponse();
  void clear_has_baseresponse();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::micromsg::BaseResponse* baseresponse_;
  friend struct protobuf_mmremind_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RemindSyncRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool RemindSyncRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemindSyncRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RemindSyncRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RemindSyncRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& RemindSyncRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.RemindSyncRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* RemindSyncRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RemindSyncRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* RemindSyncRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.RemindSyncRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void RemindSyncRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RemindSyncRequest.BaseRequest)
}

// required uint32 Selector = 2;
inline bool RemindSyncRequest::has_selector() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RemindSyncRequest::set_has_selector() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RemindSyncRequest::clear_has_selector() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RemindSyncRequest::clear_selector() {
  selector_ = 0u;
  clear_has_selector();
}
inline ::google::protobuf::uint32 RemindSyncRequest::selector() const {
  // @@protoc_insertion_point(field_get:micromsg.RemindSyncRequest.Selector)
  return selector_;
}
inline void RemindSyncRequest::set_selector(::google::protobuf::uint32 value) {
  set_has_selector();
  selector_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RemindSyncRequest.Selector)
}

// required .micromsg.SKBuiltinBuffer_t KeyBuff = 3;
inline bool RemindSyncRequest::has_keybuff() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RemindSyncRequest::set_has_keybuff() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RemindSyncRequest::clear_has_keybuff() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RemindSyncRequest::clear_keybuff() {
  if (keybuff_ != NULL) keybuff_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_keybuff();
}
inline const ::micromsg::SKBuiltinBuffer_t& RemindSyncRequest::keybuff() const {
  // @@protoc_insertion_point(field_get:micromsg.RemindSyncRequest.KeyBuff)
  return keybuff_ != NULL ? *keybuff_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* RemindSyncRequest::mutable_keybuff() {
  set_has_keybuff();
  if (keybuff_ == NULL) {
    keybuff_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RemindSyncRequest.KeyBuff)
  return keybuff_;
}
inline ::micromsg::SKBuiltinBuffer_t* RemindSyncRequest::release_keybuff() {
  // @@protoc_insertion_point(field_release:micromsg.RemindSyncRequest.KeyBuff)
  clear_has_keybuff();
  ::micromsg::SKBuiltinBuffer_t* temp = keybuff_;
  keybuff_ = NULL;
  return temp;
}
inline void RemindSyncRequest::set_allocated_keybuff(::micromsg::SKBuiltinBuffer_t* keybuff) {
  delete keybuff_;
  keybuff_ = keybuff;
  if (keybuff) {
    set_has_keybuff();
  } else {
    clear_has_keybuff();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RemindSyncRequest.KeyBuff)
}

// -------------------------------------------------------------------

// RemindSyncResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool RemindSyncResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemindSyncResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RemindSyncResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RemindSyncResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& RemindSyncResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.RemindSyncResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* RemindSyncResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RemindSyncResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* RemindSyncResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.RemindSyncResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void RemindSyncResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RemindSyncResponse.BaseResponse)
}

// required .micromsg.CmdList CmdList = 2;
inline bool RemindSyncResponse::has_cmdlist() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RemindSyncResponse::set_has_cmdlist() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RemindSyncResponse::clear_has_cmdlist() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RemindSyncResponse::clear_cmdlist() {
  if (cmdlist_ != NULL) cmdlist_->::micromsg::CmdList::Clear();
  clear_has_cmdlist();
}
inline const ::micromsg::CmdList& RemindSyncResponse::cmdlist() const {
  // @@protoc_insertion_point(field_get:micromsg.RemindSyncResponse.CmdList)
  return cmdlist_ != NULL ? *cmdlist_
                         : *::micromsg::CmdList::internal_default_instance();
}
inline ::micromsg::CmdList* RemindSyncResponse::mutable_cmdlist() {
  set_has_cmdlist();
  if (cmdlist_ == NULL) {
    cmdlist_ = new ::micromsg::CmdList;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RemindSyncResponse.CmdList)
  return cmdlist_;
}
inline ::micromsg::CmdList* RemindSyncResponse::release_cmdlist() {
  // @@protoc_insertion_point(field_release:micromsg.RemindSyncResponse.CmdList)
  clear_has_cmdlist();
  ::micromsg::CmdList* temp = cmdlist_;
  cmdlist_ = NULL;
  return temp;
}
inline void RemindSyncResponse::set_allocated_cmdlist(::micromsg::CmdList* cmdlist) {
  delete cmdlist_;
  cmdlist_ = cmdlist;
  if (cmdlist) {
    set_has_cmdlist();
  } else {
    clear_has_cmdlist();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RemindSyncResponse.CmdList)
}

// required .micromsg.SKBuiltinBuffer_t KeyBuff = 3;
inline bool RemindSyncResponse::has_keybuff() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RemindSyncResponse::set_has_keybuff() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RemindSyncResponse::clear_has_keybuff() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RemindSyncResponse::clear_keybuff() {
  if (keybuff_ != NULL) keybuff_->::micromsg::SKBuiltinBuffer_t::Clear();
  clear_has_keybuff();
}
inline const ::micromsg::SKBuiltinBuffer_t& RemindSyncResponse::keybuff() const {
  // @@protoc_insertion_point(field_get:micromsg.RemindSyncResponse.KeyBuff)
  return keybuff_ != NULL ? *keybuff_
                         : *::micromsg::SKBuiltinBuffer_t::internal_default_instance();
}
inline ::micromsg::SKBuiltinBuffer_t* RemindSyncResponse::mutable_keybuff() {
  set_has_keybuff();
  if (keybuff_ == NULL) {
    keybuff_ = new ::micromsg::SKBuiltinBuffer_t;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.RemindSyncResponse.KeyBuff)
  return keybuff_;
}
inline ::micromsg::SKBuiltinBuffer_t* RemindSyncResponse::release_keybuff() {
  // @@protoc_insertion_point(field_release:micromsg.RemindSyncResponse.KeyBuff)
  clear_has_keybuff();
  ::micromsg::SKBuiltinBuffer_t* temp = keybuff_;
  keybuff_ = NULL;
  return temp;
}
inline void RemindSyncResponse::set_allocated_keybuff(::micromsg::SKBuiltinBuffer_t* keybuff) {
  delete keybuff_;
  keybuff_ = keybuff;
  if (keybuff) {
    set_has_keybuff();
  } else {
    clear_has_keybuff();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.RemindSyncResponse.KeyBuff)
}

// required uint32 ContinueFlag = 4;
inline bool RemindSyncResponse::has_continueflag() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RemindSyncResponse::set_has_continueflag() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RemindSyncResponse::clear_has_continueflag() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RemindSyncResponse::clear_continueflag() {
  continueflag_ = 0u;
  clear_has_continueflag();
}
inline ::google::protobuf::uint32 RemindSyncResponse::continueflag() const {
  // @@protoc_insertion_point(field_get:micromsg.RemindSyncResponse.ContinueFlag)
  return continueflag_;
}
inline void RemindSyncResponse::set_continueflag(::google::protobuf::uint32 value) {
  set_has_continueflag();
  continueflag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RemindSyncResponse.ContinueFlag)
}

// -------------------------------------------------------------------

// ModRemindCmd

// required uint32 RemindID = 1;
inline bool ModRemindCmd::has_remindid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ModRemindCmd::set_has_remindid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ModRemindCmd::clear_has_remindid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ModRemindCmd::clear_remindid() {
  remindid_ = 0u;
  clear_has_remindid();
}
inline ::google::protobuf::uint32 ModRemindCmd::remindid() const {
  // @@protoc_insertion_point(field_get:micromsg.ModRemindCmd.RemindID)
  return remindid_;
}
inline void ModRemindCmd::set_remindid(::google::protobuf::uint32 value) {
  set_has_remindid();
  remindid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ModRemindCmd.RemindID)
}

// required uint64 RemindTime = 2;
inline bool ModRemindCmd::has_remindtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModRemindCmd::set_has_remindtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModRemindCmd::clear_has_remindtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModRemindCmd::clear_remindtime() {
  remindtime_ = GOOGLE_ULONGLONG(0);
  clear_has_remindtime();
}
inline ::google::protobuf::uint64 ModRemindCmd::remindtime() const {
  // @@protoc_insertion_point(field_get:micromsg.ModRemindCmd.RemindTime)
  return remindtime_;
}
inline void ModRemindCmd::set_remindtime(::google::protobuf::uint64 value) {
  set_has_remindtime();
  remindtime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ModRemindCmd.RemindTime)
}

// required uint32 Flag = 3;
inline bool ModRemindCmd::has_flag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ModRemindCmd::set_has_flag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ModRemindCmd::clear_has_flag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ModRemindCmd::clear_flag() {
  flag_ = 0u;
  clear_has_flag();
}
inline ::google::protobuf::uint32 ModRemindCmd::flag() const {
  // @@protoc_insertion_point(field_get:micromsg.ModRemindCmd.Flag)
  return flag_;
}
inline void ModRemindCmd::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.ModRemindCmd.Flag)
}

// -------------------------------------------------------------------

// RemindMember

// optional string UserName = 1;
inline bool RemindMember::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemindMember::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RemindMember::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RemindMember::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& RemindMember::username() const {
  // @@protoc_insertion_point(field_get:micromsg.RemindMember.UserName)
  return username_.GetNoArena();
}
inline void RemindMember::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RemindMember.UserName)
}
#if LANG_CXX11
inline void RemindMember::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RemindMember.UserName)
}
#endif
inline void RemindMember::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RemindMember.UserName)
}
inline void RemindMember::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RemindMember.UserName)
}
inline ::std::string* RemindMember::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:micromsg.RemindMember.UserName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemindMember::release_username() {
  // @@protoc_insertion_point(field_release:micromsg.RemindMember.UserName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemindMember::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RemindMember.UserName)
}

// -------------------------------------------------------------------

// RemindItem

// required uint32 RemindID = 1;
inline bool RemindItem::has_remindid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RemindItem::set_has_remindid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RemindItem::clear_has_remindid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RemindItem::clear_remindid() {
  remindid_ = 0u;
  clear_has_remindid();
}
inline ::google::protobuf::uint32 RemindItem::remindid() const {
  // @@protoc_insertion_point(field_get:micromsg.RemindItem.RemindID)
  return remindid_;
}
inline void RemindItem::set_remindid(::google::protobuf::uint32 value) {
  set_has_remindid();
  remindid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RemindItem.RemindID)
}

// required uint32 CreateTime = 2;
inline bool RemindItem::has_createtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RemindItem::set_has_createtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RemindItem::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RemindItem::clear_createtime() {
  createtime_ = 0u;
  clear_has_createtime();
}
inline ::google::protobuf::uint32 RemindItem::createtime() const {
  // @@protoc_insertion_point(field_get:micromsg.RemindItem.CreateTime)
  return createtime_;
}
inline void RemindItem::set_createtime(::google::protobuf::uint32 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RemindItem.CreateTime)
}

// required uint64 RemindTime = 3;
inline bool RemindItem::has_remindtime() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RemindItem::set_has_remindtime() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RemindItem::clear_has_remindtime() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RemindItem::clear_remindtime() {
  remindtime_ = GOOGLE_ULONGLONG(0);
  clear_has_remindtime();
}
inline ::google::protobuf::uint64 RemindItem::remindtime() const {
  // @@protoc_insertion_point(field_get:micromsg.RemindItem.RemindTime)
  return remindtime_;
}
inline void RemindItem::set_remindtime(::google::protobuf::uint64 value) {
  set_has_remindtime();
  remindtime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RemindItem.RemindTime)
}

// optional string FromUser = 4;
inline bool RemindItem::has_fromuser() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemindItem::set_has_fromuser() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RemindItem::clear_has_fromuser() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RemindItem::clear_fromuser() {
  fromuser_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fromuser();
}
inline const ::std::string& RemindItem::fromuser() const {
  // @@protoc_insertion_point(field_get:micromsg.RemindItem.FromUser)
  return fromuser_.GetNoArena();
}
inline void RemindItem::set_fromuser(const ::std::string& value) {
  set_has_fromuser();
  fromuser_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RemindItem.FromUser)
}
#if LANG_CXX11
inline void RemindItem::set_fromuser(::std::string&& value) {
  set_has_fromuser();
  fromuser_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RemindItem.FromUser)
}
#endif
inline void RemindItem::set_fromuser(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_fromuser();
  fromuser_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RemindItem.FromUser)
}
inline void RemindItem::set_fromuser(const char* value, size_t size) {
  set_has_fromuser();
  fromuser_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RemindItem.FromUser)
}
inline ::std::string* RemindItem::mutable_fromuser() {
  set_has_fromuser();
  // @@protoc_insertion_point(field_mutable:micromsg.RemindItem.FromUser)
  return fromuser_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemindItem::release_fromuser() {
  // @@protoc_insertion_point(field_release:micromsg.RemindItem.FromUser)
  clear_has_fromuser();
  return fromuser_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemindItem::set_allocated_fromuser(::std::string* fromuser) {
  if (fromuser != NULL) {
    set_has_fromuser();
  } else {
    clear_has_fromuser();
  }
  fromuser_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromuser);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RemindItem.FromUser)
}

// required uint32 ToUserCount = 5;
inline bool RemindItem::has_tousercount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RemindItem::set_has_tousercount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RemindItem::clear_has_tousercount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RemindItem::clear_tousercount() {
  tousercount_ = 0u;
  clear_has_tousercount();
}
inline ::google::protobuf::uint32 RemindItem::tousercount() const {
  // @@protoc_insertion_point(field_get:micromsg.RemindItem.ToUserCount)
  return tousercount_;
}
inline void RemindItem::set_tousercount(::google::protobuf::uint32 value) {
  set_has_tousercount();
  tousercount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RemindItem.ToUserCount)
}

// repeated .micromsg.RemindMember ToUserList = 6;
inline int RemindItem::touserlist_size() const {
  return touserlist_.size();
}
inline void RemindItem::clear_touserlist() {
  touserlist_.Clear();
}
inline const ::micromsg::RemindMember& RemindItem::touserlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.RemindItem.ToUserList)
  return touserlist_.Get(index);
}
inline ::micromsg::RemindMember* RemindItem::mutable_touserlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.RemindItem.ToUserList)
  return touserlist_.Mutable(index);
}
inline ::micromsg::RemindMember* RemindItem::add_touserlist() {
  // @@protoc_insertion_point(field_add:micromsg.RemindItem.ToUserList)
  return touserlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::RemindMember >*
RemindItem::mutable_touserlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.RemindItem.ToUserList)
  return &touserlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::RemindMember >&
RemindItem::touserlist() const {
  // @@protoc_insertion_point(field_list:micromsg.RemindItem.ToUserList)
  return touserlist_;
}

// required uint32 Flag = 7;
inline bool RemindItem::has_flag() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RemindItem::set_has_flag() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RemindItem::clear_has_flag() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RemindItem::clear_flag() {
  flag_ = 0u;
  clear_has_flag();
}
inline ::google::protobuf::uint32 RemindItem::flag() const {
  // @@protoc_insertion_point(field_get:micromsg.RemindItem.Flag)
  return flag_;
}
inline void RemindItem::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:micromsg.RemindItem.Flag)
}

// optional string Content = 8;
inline bool RemindItem::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RemindItem::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RemindItem::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RemindItem::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& RemindItem::content() const {
  // @@protoc_insertion_point(field_get:micromsg.RemindItem.Content)
  return content_.GetNoArena();
}
inline void RemindItem::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.RemindItem.Content)
}
#if LANG_CXX11
inline void RemindItem::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.RemindItem.Content)
}
#endif
inline void RemindItem::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.RemindItem.Content)
}
inline void RemindItem::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.RemindItem.Content)
}
inline ::std::string* RemindItem::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:micromsg.RemindItem.Content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RemindItem::release_content() {
  // @@protoc_insertion_point(field_release:micromsg.RemindItem.Content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RemindItem::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:micromsg.RemindItem.Content)
}

// -------------------------------------------------------------------

// BatchGetRemindInfoRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool BatchGetRemindInfoRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchGetRemindInfoRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchGetRemindInfoRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchGetRemindInfoRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& BatchGetRemindInfoRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.BatchGetRemindInfoRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* BatchGetRemindInfoRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.BatchGetRemindInfoRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* BatchGetRemindInfoRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.BatchGetRemindInfoRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void BatchGetRemindInfoRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.BatchGetRemindInfoRequest.BaseRequest)
}

// required uint32 RemindIDCount = 2;
inline bool BatchGetRemindInfoRequest::has_remindidcount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BatchGetRemindInfoRequest::set_has_remindidcount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BatchGetRemindInfoRequest::clear_has_remindidcount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BatchGetRemindInfoRequest::clear_remindidcount() {
  remindidcount_ = 0u;
  clear_has_remindidcount();
}
inline ::google::protobuf::uint32 BatchGetRemindInfoRequest::remindidcount() const {
  // @@protoc_insertion_point(field_get:micromsg.BatchGetRemindInfoRequest.RemindIDCount)
  return remindidcount_;
}
inline void BatchGetRemindInfoRequest::set_remindidcount(::google::protobuf::uint32 value) {
  set_has_remindidcount();
  remindidcount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.BatchGetRemindInfoRequest.RemindIDCount)
}

// repeated uint32 RemindIDList = 3 [packed = true];
inline int BatchGetRemindInfoRequest::remindidlist_size() const {
  return remindidlist_.size();
}
inline void BatchGetRemindInfoRequest::clear_remindidlist() {
  remindidlist_.Clear();
}
inline ::google::protobuf::uint32 BatchGetRemindInfoRequest::remindidlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.BatchGetRemindInfoRequest.RemindIDList)
  return remindidlist_.Get(index);
}
inline void BatchGetRemindInfoRequest::set_remindidlist(int index, ::google::protobuf::uint32 value) {
  remindidlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:micromsg.BatchGetRemindInfoRequest.RemindIDList)
}
inline void BatchGetRemindInfoRequest::add_remindidlist(::google::protobuf::uint32 value) {
  remindidlist_.Add(value);
  // @@protoc_insertion_point(field_add:micromsg.BatchGetRemindInfoRequest.RemindIDList)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BatchGetRemindInfoRequest::remindidlist() const {
  // @@protoc_insertion_point(field_list:micromsg.BatchGetRemindInfoRequest.RemindIDList)
  return remindidlist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BatchGetRemindInfoRequest::mutable_remindidlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.BatchGetRemindInfoRequest.RemindIDList)
  return &remindidlist_;
}

// -------------------------------------------------------------------

// BatchGetRemindInfoResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool BatchGetRemindInfoResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchGetRemindInfoResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchGetRemindInfoResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchGetRemindInfoResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& BatchGetRemindInfoResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.BatchGetRemindInfoResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* BatchGetRemindInfoResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.BatchGetRemindInfoResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* BatchGetRemindInfoResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.BatchGetRemindInfoResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void BatchGetRemindInfoResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.BatchGetRemindInfoResponse.BaseResponse)
}

// required uint32 RemindInfoCount = 2;
inline bool BatchGetRemindInfoResponse::has_remindinfocount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BatchGetRemindInfoResponse::set_has_remindinfocount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BatchGetRemindInfoResponse::clear_has_remindinfocount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BatchGetRemindInfoResponse::clear_remindinfocount() {
  remindinfocount_ = 0u;
  clear_has_remindinfocount();
}
inline ::google::protobuf::uint32 BatchGetRemindInfoResponse::remindinfocount() const {
  // @@protoc_insertion_point(field_get:micromsg.BatchGetRemindInfoResponse.RemindInfoCount)
  return remindinfocount_;
}
inline void BatchGetRemindInfoResponse::set_remindinfocount(::google::protobuf::uint32 value) {
  set_has_remindinfocount();
  remindinfocount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.BatchGetRemindInfoResponse.RemindInfoCount)
}

// repeated .micromsg.RemindItem RemindInfoList = 3;
inline int BatchGetRemindInfoResponse::remindinfolist_size() const {
  return remindinfolist_.size();
}
inline void BatchGetRemindInfoResponse::clear_remindinfolist() {
  remindinfolist_.Clear();
}
inline const ::micromsg::RemindItem& BatchGetRemindInfoResponse::remindinfolist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.BatchGetRemindInfoResponse.RemindInfoList)
  return remindinfolist_.Get(index);
}
inline ::micromsg::RemindItem* BatchGetRemindInfoResponse::mutable_remindinfolist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.BatchGetRemindInfoResponse.RemindInfoList)
  return remindinfolist_.Mutable(index);
}
inline ::micromsg::RemindItem* BatchGetRemindInfoResponse::add_remindinfolist() {
  // @@protoc_insertion_point(field_add:micromsg.BatchGetRemindInfoResponse.RemindInfoList)
  return remindinfolist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::RemindItem >*
BatchGetRemindInfoResponse::mutable_remindinfolist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.BatchGetRemindInfoResponse.RemindInfoList)
  return &remindinfolist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::RemindItem >&
BatchGetRemindInfoResponse::remindinfolist() const {
  // @@protoc_insertion_point(field_list:micromsg.BatchGetRemindInfoResponse.RemindInfoList)
  return remindinfolist_;
}

// -------------------------------------------------------------------

// AddRemindRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool AddRemindRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddRemindRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddRemindRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddRemindRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& AddRemindRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.AddRemindRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* AddRemindRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.AddRemindRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* AddRemindRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.AddRemindRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void AddRemindRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.AddRemindRequest.BaseRequest)
}

// optional string ClientID = 2;
inline bool AddRemindRequest::has_clientid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddRemindRequest::set_has_clientid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddRemindRequest::clear_has_clientid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddRemindRequest::clear_clientid() {
  clientid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_clientid();
}
inline const ::std::string& AddRemindRequest::clientid() const {
  // @@protoc_insertion_point(field_get:micromsg.AddRemindRequest.ClientID)
  return clientid_.GetNoArena();
}
inline void AddRemindRequest::set_clientid(const ::std::string& value) {
  set_has_clientid();
  clientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AddRemindRequest.ClientID)
}
#if LANG_CXX11
inline void AddRemindRequest::set_clientid(::std::string&& value) {
  set_has_clientid();
  clientid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AddRemindRequest.ClientID)
}
#endif
inline void AddRemindRequest::set_clientid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_clientid();
  clientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AddRemindRequest.ClientID)
}
inline void AddRemindRequest::set_clientid(const char* value, size_t size) {
  set_has_clientid();
  clientid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AddRemindRequest.ClientID)
}
inline ::std::string* AddRemindRequest::mutable_clientid() {
  set_has_clientid();
  // @@protoc_insertion_point(field_mutable:micromsg.AddRemindRequest.ClientID)
  return clientid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddRemindRequest::release_clientid() {
  // @@protoc_insertion_point(field_release:micromsg.AddRemindRequest.ClientID)
  clear_has_clientid();
  return clientid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddRemindRequest::set_allocated_clientid(::std::string* clientid) {
  if (clientid != NULL) {
    set_has_clientid();
  } else {
    clear_has_clientid();
  }
  clientid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientid);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AddRemindRequest.ClientID)
}

// required uint64 RemindTime = 3;
inline bool AddRemindRequest::has_remindtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AddRemindRequest::set_has_remindtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AddRemindRequest::clear_has_remindtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AddRemindRequest::clear_remindtime() {
  remindtime_ = GOOGLE_ULONGLONG(0);
  clear_has_remindtime();
}
inline ::google::protobuf::uint64 AddRemindRequest::remindtime() const {
  // @@protoc_insertion_point(field_get:micromsg.AddRemindRequest.RemindTime)
  return remindtime_;
}
inline void AddRemindRequest::set_remindtime(::google::protobuf::uint64 value) {
  set_has_remindtime();
  remindtime_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AddRemindRequest.RemindTime)
}

// required uint32 ToUserCount = 4;
inline bool AddRemindRequest::has_tousercount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AddRemindRequest::set_has_tousercount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AddRemindRequest::clear_has_tousercount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AddRemindRequest::clear_tousercount() {
  tousercount_ = 0u;
  clear_has_tousercount();
}
inline ::google::protobuf::uint32 AddRemindRequest::tousercount() const {
  // @@protoc_insertion_point(field_get:micromsg.AddRemindRequest.ToUserCount)
  return tousercount_;
}
inline void AddRemindRequest::set_tousercount(::google::protobuf::uint32 value) {
  set_has_tousercount();
  tousercount_ = value;
  // @@protoc_insertion_point(field_set:micromsg.AddRemindRequest.ToUserCount)
}

// repeated .micromsg.RemindMember ToUserList = 5;
inline int AddRemindRequest::touserlist_size() const {
  return touserlist_.size();
}
inline void AddRemindRequest::clear_touserlist() {
  touserlist_.Clear();
}
inline const ::micromsg::RemindMember& AddRemindRequest::touserlist(int index) const {
  // @@protoc_insertion_point(field_get:micromsg.AddRemindRequest.ToUserList)
  return touserlist_.Get(index);
}
inline ::micromsg::RemindMember* AddRemindRequest::mutable_touserlist(int index) {
  // @@protoc_insertion_point(field_mutable:micromsg.AddRemindRequest.ToUserList)
  return touserlist_.Mutable(index);
}
inline ::micromsg::RemindMember* AddRemindRequest::add_touserlist() {
  // @@protoc_insertion_point(field_add:micromsg.AddRemindRequest.ToUserList)
  return touserlist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::micromsg::RemindMember >*
AddRemindRequest::mutable_touserlist() {
  // @@protoc_insertion_point(field_mutable_list:micromsg.AddRemindRequest.ToUserList)
  return &touserlist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::micromsg::RemindMember >&
AddRemindRequest::touserlist() const {
  // @@protoc_insertion_point(field_list:micromsg.AddRemindRequest.ToUserList)
  return touserlist_;
}

// optional string Content = 6;
inline bool AddRemindRequest::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddRemindRequest::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddRemindRequest::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddRemindRequest::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& AddRemindRequest::content() const {
  // @@protoc_insertion_point(field_get:micromsg.AddRemindRequest.Content)
  return content_.GetNoArena();
}
inline void AddRemindRequest::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:micromsg.AddRemindRequest.Content)
}
#if LANG_CXX11
inline void AddRemindRequest::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:micromsg.AddRemindRequest.Content)
}
#endif
inline void AddRemindRequest::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:micromsg.AddRemindRequest.Content)
}
inline void AddRemindRequest::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:micromsg.AddRemindRequest.Content)
}
inline ::std::string* AddRemindRequest::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:micromsg.AddRemindRequest.Content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddRemindRequest::release_content() {
  // @@protoc_insertion_point(field_release:micromsg.AddRemindRequest.Content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddRemindRequest::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:micromsg.AddRemindRequest.Content)
}

// -------------------------------------------------------------------

// AddRemindResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool AddRemindResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddRemindResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddRemindResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddRemindResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& AddRemindResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.AddRemindResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* AddRemindResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.AddRemindResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* AddRemindResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.AddRemindResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void AddRemindResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.AddRemindResponse.BaseResponse)
}

// -------------------------------------------------------------------

// DelRemindRequest

// required .micromsg.BaseRequest BaseRequest = 1;
inline bool DelRemindRequest::has_baserequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DelRemindRequest::set_has_baserequest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DelRemindRequest::clear_has_baserequest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DelRemindRequest::clear_baserequest() {
  if (baserequest_ != NULL) baserequest_->::micromsg::BaseRequest::Clear();
  clear_has_baserequest();
}
inline const ::micromsg::BaseRequest& DelRemindRequest::baserequest() const {
  // @@protoc_insertion_point(field_get:micromsg.DelRemindRequest.BaseRequest)
  return baserequest_ != NULL ? *baserequest_
                         : *::micromsg::BaseRequest::internal_default_instance();
}
inline ::micromsg::BaseRequest* DelRemindRequest::mutable_baserequest() {
  set_has_baserequest();
  if (baserequest_ == NULL) {
    baserequest_ = new ::micromsg::BaseRequest;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.DelRemindRequest.BaseRequest)
  return baserequest_;
}
inline ::micromsg::BaseRequest* DelRemindRequest::release_baserequest() {
  // @@protoc_insertion_point(field_release:micromsg.DelRemindRequest.BaseRequest)
  clear_has_baserequest();
  ::micromsg::BaseRequest* temp = baserequest_;
  baserequest_ = NULL;
  return temp;
}
inline void DelRemindRequest::set_allocated_baserequest(::micromsg::BaseRequest* baserequest) {
  delete baserequest_;
  baserequest_ = baserequest;
  if (baserequest) {
    set_has_baserequest();
  } else {
    clear_has_baserequest();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.DelRemindRequest.BaseRequest)
}

// required uint32 RemindID = 2;
inline bool DelRemindRequest::has_remindid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DelRemindRequest::set_has_remindid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DelRemindRequest::clear_has_remindid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DelRemindRequest::clear_remindid() {
  remindid_ = 0u;
  clear_has_remindid();
}
inline ::google::protobuf::uint32 DelRemindRequest::remindid() const {
  // @@protoc_insertion_point(field_get:micromsg.DelRemindRequest.RemindID)
  return remindid_;
}
inline void DelRemindRequest::set_remindid(::google::protobuf::uint32 value) {
  set_has_remindid();
  remindid_ = value;
  // @@protoc_insertion_point(field_set:micromsg.DelRemindRequest.RemindID)
}

// -------------------------------------------------------------------

// DelRemindResponse

// required .micromsg.BaseResponse BaseResponse = 1;
inline bool DelRemindResponse::has_baseresponse() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DelRemindResponse::set_has_baseresponse() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DelRemindResponse::clear_has_baseresponse() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DelRemindResponse::clear_baseresponse() {
  if (baseresponse_ != NULL) baseresponse_->::micromsg::BaseResponse::Clear();
  clear_has_baseresponse();
}
inline const ::micromsg::BaseResponse& DelRemindResponse::baseresponse() const {
  // @@protoc_insertion_point(field_get:micromsg.DelRemindResponse.BaseResponse)
  return baseresponse_ != NULL ? *baseresponse_
                         : *::micromsg::BaseResponse::internal_default_instance();
}
inline ::micromsg::BaseResponse* DelRemindResponse::mutable_baseresponse() {
  set_has_baseresponse();
  if (baseresponse_ == NULL) {
    baseresponse_ = new ::micromsg::BaseResponse;
  }
  // @@protoc_insertion_point(field_mutable:micromsg.DelRemindResponse.BaseResponse)
  return baseresponse_;
}
inline ::micromsg::BaseResponse* DelRemindResponse::release_baseresponse() {
  // @@protoc_insertion_point(field_release:micromsg.DelRemindResponse.BaseResponse)
  clear_has_baseresponse();
  ::micromsg::BaseResponse* temp = baseresponse_;
  baseresponse_ = NULL;
  return temp;
}
inline void DelRemindResponse::set_allocated_baseresponse(::micromsg::BaseResponse* baseresponse) {
  delete baseresponse_;
  baseresponse_ = baseresponse;
  if (baseresponse) {
    set_has_baseresponse();
  } else {
    clear_has_baseresponse();
  }
  // @@protoc_insertion_point(field_set_allocated:micromsg.DelRemindResponse.BaseResponse)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace micromsg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mmremind_2eproto__INCLUDED
